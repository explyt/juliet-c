!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":125:27)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":177:27)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc487)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc488)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc489)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc490)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc491)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc492)
  cir.func private @printIntLine(!s32i) loc(#loc493)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc16)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc494)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc496)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc497)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc498)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc499)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc30)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc500)
    cir.br ^bb1 loc(#loc501)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc34)
    cir.brcond %7 ^bb2, ^bb10 loc(#loc502)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc503)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc496)
    cir.store %8, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc496)
    cir.br ^bb4 loc(#loc504)
  ^bb4:  // pred: ^bb3
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc40)
    %10 = cir.const #cir.int<3> : !s32i loc(#loc41)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc41)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc41)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc41)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc41)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc41)
    %16 = cir.binop(add, %13, %15) : !u64i loc(#loc41)
    %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc41)
    %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc488)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
    %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc43)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
    %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc505)
    cir.brcond %23 ^bb5, ^bb6 loc(#loc506)
  ^bb5:  // pred: ^bb4
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc48)
    %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc49)
    cir.store %25, %3 : !s32i, !cir.ptr<!s32i> loc(#loc507)
    cir.br ^bb7 loc(#loc46)
  ^bb6:  // pred: ^bb4
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    cir.br ^bb7 loc(#loc39)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc39)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc37)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc33)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc33)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc508)
  ^bb12:  // pred: ^bb11
    %28 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc55)
    cir.brcond %29 ^bb13, ^bb41 loc(#loc509)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc510)
  ^bb14:  // pred: ^bb13
    %30 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc59)
    %31 = cir.const #cir.int<10> : !s32i loc(#loc60)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc60)
    %33 = cir.const #cir.int<4> : !u64i loc(#loc511)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc512)
    %35 = cir.call @malloc(%34) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc59)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc513)
    cir.store %36, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc498)
    cir.br ^bb15 loc(#loc514)
  ^bb15:  // pred: ^bb14
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    %38 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc66)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc66)
    %40 = cir.cmp(eq, %37, %39) : !cir.ptr<!s32i>, !cir.bool loc(#loc515)
    cir.brcond %40 ^bb16, ^bb17 loc(#loc516)
  ^bb16:  // pred: ^bb15
    %41 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc68)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %43 = cir.unary(minus, %42) nsw : !s32i, !s32i loc(#loc70)
    cir.call @exit(%43) : (!s32i) -> () extra(#fn_attr) loc(#loc68)
    cir.br ^bb17 loc(#loc64)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc64)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc517)
  ^bb19:  // pred: ^bb18
    %44 = cir.const #cir.int<0> : !s32i loc(#loc73)
    cir.store %44, %1 : !s32i, !cir.ptr<!s32i> loc(#loc518)
    cir.br ^bb20 loc(#loc517)
  ^bb20:  // 2 preds: ^bb19, ^bb24
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %46 = cir.const #cir.int<10> : !s32i loc(#loc76)
    %47 = cir.cmp(lt, %45, %46) : !s32i, !cir.bool loc(#loc519)
    cir.brcond %47 ^bb21, ^bb25 loc(#loc77)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc520)
  ^bb22:  // pred: ^bb21
    %48 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc80)
    %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!s32i>, %50 : !s32i), !cir.ptr<!s32i> loc(#loc82)
    cir.store %48, %51 : !s32i, !cir.ptr<!s32i> loc(#loc521)
    cir.br ^bb23 loc(#loc72)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc72)
  ^bb24:  // pred: ^bb23
    %52 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %53 = cir.unary(inc, %52) nsw : !s32i, !s32i loc(#loc84)
    cir.store %53, %1 : !s32i, !cir.ptr<!s32i> loc(#loc522)
    cir.br ^bb20 loc(#loc517)
  ^bb25:  // pred: ^bb20
    cir.br ^bb26 loc(#loc72)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc523)
  ^bb27:  // pred: ^bb26
    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %56 = cir.cmp(ge, %54, %55) : !s32i, !cir.bool loc(#loc524)
    cir.brcond %56 ^bb28, ^bb37 loc(#loc525)
  ^bb28:  // pred: ^bb27
    %57 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %58 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %60 = cir.ptr_stride(%58 : !cir.ptr<!s32i>, %59 : !s32i), !cir.ptr<!s32i> loc(#loc95)
    cir.store %57, %60 : !s32i, !cir.ptr<!s32i> loc(#loc526)
    cir.br ^bb29 loc(#loc527)
  ^bb29:  // pred: ^bb28
    %61 = cir.const #cir.int<0> : !s32i loc(#loc98)
    cir.store %61, %1 : !s32i, !cir.ptr<!s32i> loc(#loc528)
    cir.br ^bb30 loc(#loc527)
  ^bb30:  // 2 preds: ^bb29, ^bb34
    %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %63 = cir.const #cir.int<10> : !s32i loc(#loc101)
    %64 = cir.cmp(lt, %62, %63) : !s32i, !cir.bool loc(#loc529)
    cir.brcond %64 ^bb31, ^bb35 loc(#loc102)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc530)
  ^bb32:  // pred: ^bb31
    %65 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc104)
    %66 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %67 = cir.ptr_stride(%65 : !cir.ptr<!s32i>, %66 : !s32i), !cir.ptr<!s32i> loc(#loc106)
    %68 = cir.load %67 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    cir.call @printIntLine(%68) : (!s32i) -> () loc(#loc107)
    cir.br ^bb33 loc(#loc97)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc97)
  ^bb34:  // pred: ^bb33
    %69 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %70 = cir.unary(inc, %69) nsw : !s32i, !s32i loc(#loc109)
    cir.store %70, %1 : !s32i, !cir.ptr<!s32i> loc(#loc531)
    cir.br ^bb30 loc(#loc527)
  ^bb35:  // pred: ^bb30
    cir.br ^bb36 loc(#loc97)
  ^bb36:  // pred: ^bb35
    cir.br ^bb38 loc(#loc90)
  ^bb37:  // pred: ^bb27
    %71 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc16)
    %72 = cir.cast(array_to_ptrdecay, %71 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc16)
    cir.call @printLine(%72) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    cir.br ^bb38 loc(#loc86)
  ^bb38:  // 2 preds: ^bb36, ^bb37
    cir.br ^bb39 loc(#loc86)
  ^bb39:  // pred: ^bb38
    %73 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc111)
    %74 = cir.cast(bitcast, %73 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc111)
    cir.call @free(%74) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc112)
    cir.br ^bb40 loc(#loc58)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc54)
  ^bb41:  // 2 preds: ^bb12, ^bb40
    cir.br ^bb42 loc(#loc54)
  ^bb42:  // pred: ^bb41
    cir.return loc(#loc20)
  } loc(#loc495)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc533)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc115)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc534)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc117)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc535)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc119)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc536)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc121)
    cir.return loc(#loc114)
  } loc(#loc532)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc124)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc538)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc539)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc540)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc541)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc136)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc542)
    cir.br ^bb1 loc(#loc543)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc140)
    cir.brcond %7 ^bb2, ^bb10 loc(#loc544)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc545)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc538)
    cir.store %8, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc538)
    cir.br ^bb4 loc(#loc546)
  ^bb4:  // pred: ^bb3
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc146)
    %10 = cir.const #cir.int<3> : !s32i loc(#loc147)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc147)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc147)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc147)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc147)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc147)
    %16 = cir.binop(add, %13, %15) : !u64i loc(#loc147)
    %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc147)
    %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc488)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc148)
    %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc149)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc150)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc150)
    %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc547)
    cir.brcond %23 ^bb5, ^bb6 loc(#loc548)
  ^bb5:  // pred: ^bb4
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc154)
    %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc155)
    cir.store %25, %3 : !s32i, !cir.ptr<!s32i> loc(#loc549)
    cir.br ^bb7 loc(#loc152)
  ^bb6:  // pred: ^bb4
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc158)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc158)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc159)
    cir.br ^bb7 loc(#loc145)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc145)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc143)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc139)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc139)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc550)
  ^bb12:  // pred: ^bb11
    %28 = cir.const #cir.int<0> : !s32i loc(#loc162)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc162)
    cir.brcond %29 ^bb13, ^bb14 loc(#loc551)
  ^bb13:  // pred: ^bb12
    %30 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc123)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc166)
    cir.br ^bb50 loc(#loc164)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc552)
  ^bb15:  // pred: ^bb14
    %32 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc169)
    %33 = cir.const #cir.int<10> : !s32i loc(#loc170)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc170)
    %35 = cir.const #cir.int<4> : !u64i loc(#loc553)
    %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc554)
    %37 = cir.call @malloc(%36) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc169)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc555)
    cir.store %38, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc540)
    cir.br ^bb16 loc(#loc556)
  ^bb16:  // pred: ^bb15
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc175)
    %40 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc176)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc176)
    %42 = cir.cmp(eq, %39, %41) : !cir.ptr<!s32i>, !cir.bool loc(#loc557)
    cir.brcond %42 ^bb17, ^bb18 loc(#loc558)
  ^bb17:  // pred: ^bb16
    %43 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc178)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %45 = cir.unary(minus, %44) nsw : !s32i, !s32i loc(#loc180)
    cir.call @exit(%45) : (!s32i) -> () extra(#fn_attr) loc(#loc178)
    cir.br ^bb18 loc(#loc174)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc174)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc559)
  ^bb20:  // pred: ^bb19
    %46 = cir.const #cir.int<0> : !s32i loc(#loc183)
    cir.store %46, %1 : !s32i, !cir.ptr<!s32i> loc(#loc560)
    cir.br ^bb21 loc(#loc559)
  ^bb21:  // 2 preds: ^bb20, ^bb25
    %47 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    %48 = cir.const #cir.int<10> : !s32i loc(#loc186)
    %49 = cir.cmp(lt, %47, %48) : !s32i, !cir.bool loc(#loc561)
    cir.brcond %49 ^bb22, ^bb26 loc(#loc187)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc562)
  ^bb23:  // pred: ^bb22
    %50 = cir.const #cir.int<0> : !s32i loc(#loc189)
    %51 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc190)
    %52 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!s32i>, %52 : !s32i), !cir.ptr<!s32i> loc(#loc192)
    cir.store %50, %53 : !s32i, !cir.ptr<!s32i> loc(#loc563)
    cir.br ^bb24 loc(#loc182)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc182)
  ^bb25:  // pred: ^bb24
    %54 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    %55 = cir.unary(inc, %54) nsw : !s32i, !s32i loc(#loc194)
    cir.store %55, %1 : !s32i, !cir.ptr<!s32i> loc(#loc564)
    cir.br ^bb21 loc(#loc559)
  ^bb26:  // pred: ^bb21
    cir.br ^bb27 loc(#loc182)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc565)
  ^bb28:  // pred: ^bb27
    %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc198)
    %58 = cir.cmp(ge, %56, %57) : !s32i, !cir.bool loc(#loc566)
    cir.brcond %58 ^bb29, ^bb34 loc(#loc199)
  ^bb29:  // pred: ^bb28
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc200)
    %60 = cir.const #cir.int<10> : !s32i loc(#loc201)
    %61 = cir.cmp(lt, %59, %60) : !s32i, !cir.bool loc(#loc567)
    cir.brcond %61 ^bb30, ^bb31 loc(#loc199)
  ^bb30:  // pred: ^bb29
    %62 = cir.const #true loc(#loc199)
    cir.br ^bb32(%62 : !cir.bool) loc(#loc199)
  ^bb31:  // pred: ^bb29
    %63 = cir.const #false loc(#loc199)
    cir.br ^bb32(%63 : !cir.bool) loc(#loc199)
  ^bb32(%64: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":125:27)):  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc199)
  ^bb33:  // pred: ^bb32
    cir.br ^bb35(%64 : !cir.bool) loc(#loc199)
  ^bb34:  // pred: ^bb28
    %65 = cir.const #false loc(#loc199)
    cir.br ^bb35(%65 : !cir.bool) loc(#loc199)
  ^bb35(%66: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":125:27)):  // 2 preds: ^bb33, ^bb34
    cir.br ^bb36 loc(#loc199)
  ^bb36:  // pred: ^bb35
    cir.brcond %66 ^bb37, ^bb46 loc(#loc568)
  ^bb37:  // pred: ^bb36
    %67 = cir.const #cir.int<1> : !s32i loc(#loc206)
    %68 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc207)
    %69 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc208)
    %70 = cir.ptr_stride(%68 : !cir.ptr<!s32i>, %69 : !s32i), !cir.ptr<!s32i> loc(#loc209)
    cir.store %67, %70 : !s32i, !cir.ptr<!s32i> loc(#loc569)
    cir.br ^bb38 loc(#loc570)
  ^bb38:  // pred: ^bb37
    %71 = cir.const #cir.int<0> : !s32i loc(#loc212)
    cir.store %71, %1 : !s32i, !cir.ptr<!s32i> loc(#loc571)
    cir.br ^bb39 loc(#loc570)
  ^bb39:  // 2 preds: ^bb38, ^bb43
    %72 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    %73 = cir.const #cir.int<10> : !s32i loc(#loc215)
    %74 = cir.cmp(lt, %72, %73) : !s32i, !cir.bool loc(#loc572)
    cir.brcond %74 ^bb40, ^bb44 loc(#loc216)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc573)
  ^bb41:  // pred: ^bb40
    %75 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc218)
    %76 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc219)
    %77 = cir.ptr_stride(%75 : !cir.ptr<!s32i>, %76 : !s32i), !cir.ptr<!s32i> loc(#loc220)
    %78 = cir.load %77 : !cir.ptr<!s32i>, !s32i loc(#loc218)
    cir.call @printIntLine(%78) : (!s32i) -> () loc(#loc221)
    cir.br ^bb42 loc(#loc211)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc211)
  ^bb43:  // pred: ^bb42
    %79 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc222)
    %80 = cir.unary(inc, %79) nsw : !s32i, !s32i loc(#loc223)
    cir.store %80, %1 : !s32i, !cir.ptr<!s32i> loc(#loc574)
    cir.br ^bb39 loc(#loc570)
  ^bb44:  // pred: ^bb39
    cir.br ^bb45 loc(#loc211)
  ^bb45:  // pred: ^bb44
    cir.br ^bb47 loc(#loc204)
  ^bb46:  // pred: ^bb36
    %81 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc124)
    %82 = cir.cast(array_to_ptrdecay, %81 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc124)
    cir.call @printLine(%82) : (!cir.ptr<!s8i>) -> () loc(#loc224)
    cir.br ^bb47 loc(#loc196)
  ^bb47:  // 2 preds: ^bb45, ^bb46
    cir.br ^bb48 loc(#loc196)
  ^bb48:  // pred: ^bb47
    %83 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc225)
    %84 = cir.cast(bitcast, %83 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc225)
    cir.call @free(%84) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc226)
    cir.br ^bb49 loc(#loc168)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc161)
  ^bb50:  // 2 preds: ^bb13, ^bb49
    cir.br ^bb51 loc(#loc161)
  ^bb51:  // pred: ^bb50
    cir.return loc(#loc126)
  } loc(#loc537)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc576)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc577)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc578)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc579)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc237)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc238)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc580)
    cir.br ^bb1 loc(#loc581)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc242)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc242)
    cir.brcond %7 ^bb2, ^bb10 loc(#loc582)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc583)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc576)
    cir.store %8, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc576)
    cir.br ^bb4 loc(#loc584)
  ^bb4:  // pred: ^bb3
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc248)
    %10 = cir.const #cir.int<3> : !s32i loc(#loc249)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc249)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc249)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc249)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc249)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc249)
    %16 = cir.binop(add, %13, %15) : !u64i loc(#loc249)
    %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc249)
    %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc488)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc250)
    %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc251)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc252)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc252)
    %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc585)
    cir.brcond %23 ^bb5, ^bb6 loc(#loc586)
  ^bb5:  // pred: ^bb4
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc256)
    %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc257)
    cir.store %25, %3 : !s32i, !cir.ptr<!s32i> loc(#loc587)
    cir.br ^bb7 loc(#loc254)
  ^bb6:  // pred: ^bb4
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc260)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc260)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc261)
    cir.br ^bb7 loc(#loc247)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc247)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc245)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc241)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc241)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc588)
  ^bb12:  // pred: ^bb11
    %28 = cir.const #cir.int<1> : !s32i loc(#loc264)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc264)
    cir.brcond %29 ^bb13, ^bb49 loc(#loc589)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc590)
  ^bb14:  // pred: ^bb13
    %30 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc268)
    %31 = cir.const #cir.int<10> : !s32i loc(#loc269)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc269)
    %33 = cir.const #cir.int<4> : !u64i loc(#loc591)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc592)
    %35 = cir.call @malloc(%34) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc268)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc593)
    cir.store %36, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc578)
    cir.br ^bb15 loc(#loc594)
  ^bb15:  // pred: ^bb14
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc274)
    %38 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc275)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc275)
    %40 = cir.cmp(eq, %37, %39) : !cir.ptr<!s32i>, !cir.bool loc(#loc595)
    cir.brcond %40 ^bb16, ^bb17 loc(#loc596)
  ^bb16:  // pred: ^bb15
    %41 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc277)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc278)
    %43 = cir.unary(minus, %42) nsw : !s32i, !s32i loc(#loc279)
    cir.call @exit(%43) : (!s32i) -> () extra(#fn_attr) loc(#loc277)
    cir.br ^bb17 loc(#loc273)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc273)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc597)
  ^bb19:  // pred: ^bb18
    %44 = cir.const #cir.int<0> : !s32i loc(#loc282)
    cir.store %44, %1 : !s32i, !cir.ptr<!s32i> loc(#loc598)
    cir.br ^bb20 loc(#loc597)
  ^bb20:  // 2 preds: ^bb19, ^bb24
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc284)
    %46 = cir.const #cir.int<10> : !s32i loc(#loc285)
    %47 = cir.cmp(lt, %45, %46) : !s32i, !cir.bool loc(#loc599)
    cir.brcond %47 ^bb21, ^bb25 loc(#loc286)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc600)
  ^bb22:  // pred: ^bb21
    %48 = cir.const #cir.int<0> : !s32i loc(#loc288)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc289)
    %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc290)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!s32i>, %50 : !s32i), !cir.ptr<!s32i> loc(#loc291)
    cir.store %48, %51 : !s32i, !cir.ptr<!s32i> loc(#loc601)
    cir.br ^bb23 loc(#loc281)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc281)
  ^bb24:  // pred: ^bb23
    %52 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc292)
    %53 = cir.unary(inc, %52) nsw : !s32i, !s32i loc(#loc293)
    cir.store %53, %1 : !s32i, !cir.ptr<!s32i> loc(#loc602)
    cir.br ^bb20 loc(#loc597)
  ^bb25:  // pred: ^bb20
    cir.br ^bb26 loc(#loc281)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc603)
  ^bb27:  // pred: ^bb26
    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc296)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc297)
    %56 = cir.cmp(ge, %54, %55) : !s32i, !cir.bool loc(#loc604)
    cir.brcond %56 ^bb28, ^bb33 loc(#loc298)
  ^bb28:  // pred: ^bb27
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc299)
    %58 = cir.const #cir.int<10> : !s32i loc(#loc300)
    %59 = cir.cmp(lt, %57, %58) : !s32i, !cir.bool loc(#loc605)
    cir.brcond %59 ^bb29, ^bb30 loc(#loc298)
  ^bb29:  // pred: ^bb28
    %60 = cir.const #true loc(#loc298)
    cir.br ^bb31(%60 : !cir.bool) loc(#loc298)
  ^bb30:  // pred: ^bb28
    %61 = cir.const #false loc(#loc298)
    cir.br ^bb31(%61 : !cir.bool) loc(#loc298)
  ^bb31(%62: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":177:27)):  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc298)
  ^bb32:  // pred: ^bb31
    cir.br ^bb34(%62 : !cir.bool) loc(#loc298)
  ^bb33:  // pred: ^bb27
    %63 = cir.const #false loc(#loc298)
    cir.br ^bb34(%63 : !cir.bool) loc(#loc298)
  ^bb34(%64: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":177:27)):  // 2 preds: ^bb32, ^bb33
    cir.br ^bb35 loc(#loc298)
  ^bb35:  // pred: ^bb34
    cir.brcond %64 ^bb36, ^bb45 loc(#loc606)
  ^bb36:  // pred: ^bb35
    %65 = cir.const #cir.int<1> : !s32i loc(#loc305)
    %66 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc306)
    %67 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc307)
    %68 = cir.ptr_stride(%66 : !cir.ptr<!s32i>, %67 : !s32i), !cir.ptr<!s32i> loc(#loc308)
    cir.store %65, %68 : !s32i, !cir.ptr<!s32i> loc(#loc607)
    cir.br ^bb37 loc(#loc608)
  ^bb37:  // pred: ^bb36
    %69 = cir.const #cir.int<0> : !s32i loc(#loc311)
    cir.store %69, %1 : !s32i, !cir.ptr<!s32i> loc(#loc609)
    cir.br ^bb38 loc(#loc608)
  ^bb38:  // 2 preds: ^bb37, ^bb42
    %70 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc313)
    %71 = cir.const #cir.int<10> : !s32i loc(#loc314)
    %72 = cir.cmp(lt, %70, %71) : !s32i, !cir.bool loc(#loc610)
    cir.brcond %72 ^bb39, ^bb43 loc(#loc315)
  ^bb39:  // pred: ^bb38
    cir.br ^bb40 loc(#loc611)
  ^bb40:  // pred: ^bb39
    %73 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc317)
    %74 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc318)
    %75 = cir.ptr_stride(%73 : !cir.ptr<!s32i>, %74 : !s32i), !cir.ptr<!s32i> loc(#loc319)
    %76 = cir.load %75 : !cir.ptr<!s32i>, !s32i loc(#loc317)
    cir.call @printIntLine(%76) : (!s32i) -> () loc(#loc320)
    cir.br ^bb41 loc(#loc310)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc310)
  ^bb42:  // pred: ^bb41
    %77 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc321)
    %78 = cir.unary(inc, %77) nsw : !s32i, !s32i loc(#loc322)
    cir.store %78, %1 : !s32i, !cir.ptr<!s32i> loc(#loc612)
    cir.br ^bb38 loc(#loc608)
  ^bb43:  // pred: ^bb38
    cir.br ^bb44 loc(#loc310)
  ^bb44:  // pred: ^bb43
    cir.br ^bb46 loc(#loc303)
  ^bb45:  // pred: ^bb35
    %79 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc323)
    %80 = cir.cast(array_to_ptrdecay, %79 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc323)
    cir.call @printLine(%80) : (!cir.ptr<!s8i>) -> () loc(#loc324)
    cir.br ^bb46 loc(#loc295)
  ^bb46:  // 2 preds: ^bb44, ^bb45
    cir.br ^bb47 loc(#loc295)
  ^bb47:  // pred: ^bb46
    %81 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc325)
    %82 = cir.cast(bitcast, %81 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc325)
    cir.call @free(%82) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc326)
    cir.br ^bb48 loc(#loc267)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc263)
  ^bb49:  // 2 preds: ^bb12, ^bb48
    cir.br ^bb50 loc(#loc263)
  ^bb50:  // pred: ^bb49
    cir.return loc(#loc228)
  } loc(#loc575)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc614)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc615)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc616)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc335)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc336)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc617)
    cir.br ^bb1 loc(#loc618)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc340)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc340)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc619)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc344)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc344)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc345)
    cir.br ^bb4 loc(#loc342)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<7> : !s32i loc(#loc346)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc620)
    cir.br ^bb4 loc(#loc339)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc339)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc621)
  ^bb6:  // pred: ^bb5
    %10 = cir.const #cir.int<1> : !s32i loc(#loc350)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc350)
    cir.brcond %11 ^bb7, ^bb35 loc(#loc622)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc623)
  ^bb8:  // pred: ^bb7
    %12 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc354)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc355)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc355)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc624)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc625)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc354)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc626)
    cir.store %18, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc615)
    cir.br ^bb9 loc(#loc627)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc360)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc361)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc361)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc628)
    cir.brcond %22 ^bb10, ^bb11 loc(#loc629)
  ^bb10:  // pred: ^bb9
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc363)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc364)
    %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc365)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc363)
    cir.br ^bb11 loc(#loc359)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc359)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc630)
  ^bb13:  // pred: ^bb12
    %26 = cir.const #cir.int<0> : !s32i loc(#loc368)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc631)
    cir.br ^bb14 loc(#loc630)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc370)
    %28 = cir.const #cir.int<10> : !s32i loc(#loc371)
    %29 = cir.cmp(lt, %27, %28) : !s32i, !cir.bool loc(#loc632)
    cir.brcond %29 ^bb15, ^bb19 loc(#loc372)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc633)
  ^bb16:  // pred: ^bb15
    %30 = cir.const #cir.int<0> : !s32i loc(#loc374)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc375)
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc376)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !s32i), !cir.ptr<!s32i> loc(#loc377)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc634)
    cir.br ^bb17 loc(#loc367)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc367)
  ^bb18:  // pred: ^bb17
    %34 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc378)
    %35 = cir.unary(inc, %34) nsw : !s32i, !s32i loc(#loc379)
    cir.store %35, %0 : !s32i, !cir.ptr<!s32i> loc(#loc635)
    cir.br ^bb14 loc(#loc630)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc367)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc636)
  ^bb21:  // pred: ^bb20
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc382)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc383)
    %38 = cir.cmp(ge, %36, %37) : !s32i, !cir.bool loc(#loc637)
    cir.brcond %38 ^bb22, ^bb31 loc(#loc638)
  ^bb22:  // pred: ^bb21
    %39 = cir.const #cir.int<1> : !s32i loc(#loc387)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc388)
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc389)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc390)
    cir.store %39, %42 : !s32i, !cir.ptr<!s32i> loc(#loc639)
    cir.br ^bb23 loc(#loc640)
  ^bb23:  // pred: ^bb22
    %43 = cir.const #cir.int<0> : !s32i loc(#loc393)
    cir.store %43, %0 : !s32i, !cir.ptr<!s32i> loc(#loc641)
    cir.br ^bb24 loc(#loc640)
  ^bb24:  // 2 preds: ^bb23, ^bb28
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc395)
    %45 = cir.const #cir.int<10> : !s32i loc(#loc396)
    %46 = cir.cmp(lt, %44, %45) : !s32i, !cir.bool loc(#loc642)
    cir.brcond %46 ^bb25, ^bb29 loc(#loc397)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc643)
  ^bb26:  // pred: ^bb25
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc399)
    %48 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc400)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!s32i>, %48 : !s32i), !cir.ptr<!s32i> loc(#loc401)
    %50 = cir.load %49 : !cir.ptr<!s32i>, !s32i loc(#loc399)
    cir.call @printIntLine(%50) : (!s32i) -> () loc(#loc402)
    cir.br ^bb27 loc(#loc392)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc392)
  ^bb28:  // pred: ^bb27
    %51 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc403)
    %52 = cir.unary(inc, %51) nsw : !s32i, !s32i loc(#loc404)
    cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc644)
    cir.br ^bb24 loc(#loc640)
  ^bb29:  // pred: ^bb24
    cir.br ^bb30 loc(#loc392)
  ^bb30:  // pred: ^bb29
    cir.br ^bb32 loc(#loc385)
  ^bb31:  // pred: ^bb21
    %53 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc405)
    %54 = cir.cast(array_to_ptrdecay, %53 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc405)
    cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc406)
    cir.br ^bb32 loc(#loc381)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc381)
  ^bb33:  // pred: ^bb32
    %55 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc407)
    %56 = cir.cast(bitcast, %55 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc407)
    cir.call @free(%56) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc408)
    cir.br ^bb34 loc(#loc353)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc349)
  ^bb35:  // 2 preds: ^bb6, ^bb34
    cir.br ^bb36 loc(#loc349)
  ^bb36:  // pred: ^bb35
    cir.return loc(#loc328)
  } loc(#loc613)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc646)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc647)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc648)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc417)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc418)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc649)
    cir.br ^bb1 loc(#loc650)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc422)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc422)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc651)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<7> : !s32i loc(#loc424)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc652)
    cir.br ^bb3 loc(#loc421)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc421)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc653)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.int<1> : !s32i loc(#loc428)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc428)
    cir.brcond %9 ^bb6, ^bb34 loc(#loc654)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc655)
  ^bb7:  // pred: ^bb6
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc432)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc433)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc433)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc656)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc657)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc432)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc658)
    cir.store %16, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc647)
    cir.br ^bb8 loc(#loc659)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc438)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc439)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc439)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc660)
    cir.brcond %20 ^bb9, ^bb10 loc(#loc661)
  ^bb9:  // pred: ^bb8
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc441)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc442)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc443)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc441)
    cir.br ^bb10 loc(#loc437)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc437)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc662)
  ^bb12:  // pred: ^bb11
    %24 = cir.const #cir.int<0> : !s32i loc(#loc446)
    cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc663)
    cir.br ^bb13 loc(#loc662)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc448)
    %26 = cir.const #cir.int<10> : !s32i loc(#loc449)
    %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc664)
    cir.brcond %27 ^bb14, ^bb18 loc(#loc450)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc665)
  ^bb15:  // pred: ^bb14
    %28 = cir.const #cir.int<0> : !s32i loc(#loc452)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc453)
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc454)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc455)
    cir.store %28, %31 : !s32i, !cir.ptr<!s32i> loc(#loc666)
    cir.br ^bb16 loc(#loc445)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc445)
  ^bb17:  // pred: ^bb16
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc456)
    %33 = cir.unary(inc, %32) nsw : !s32i, !s32i loc(#loc457)
    cir.store %33, %0 : !s32i, !cir.ptr<!s32i> loc(#loc667)
    cir.br ^bb13 loc(#loc662)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc445)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc668)
  ^bb20:  // pred: ^bb19
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc460)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc461)
    %36 = cir.cmp(ge, %34, %35) : !s32i, !cir.bool loc(#loc669)
    cir.brcond %36 ^bb21, ^bb30 loc(#loc670)
  ^bb21:  // pred: ^bb20
    %37 = cir.const #cir.int<1> : !s32i loc(#loc465)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc466)
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc467)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc468)
    cir.store %37, %40 : !s32i, !cir.ptr<!s32i> loc(#loc671)
    cir.br ^bb22 loc(#loc672)
  ^bb22:  // pred: ^bb21
    %41 = cir.const #cir.int<0> : !s32i loc(#loc471)
    cir.store %41, %0 : !s32i, !cir.ptr<!s32i> loc(#loc673)
    cir.br ^bb23 loc(#loc672)
  ^bb23:  // 2 preds: ^bb22, ^bb27
    %42 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc473)
    %43 = cir.const #cir.int<10> : !s32i loc(#loc474)
    %44 = cir.cmp(lt, %42, %43) : !s32i, !cir.bool loc(#loc674)
    cir.brcond %44 ^bb24, ^bb28 loc(#loc475)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc675)
  ^bb25:  // pred: ^bb24
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc477)
    %46 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc478)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!s32i>, %46 : !s32i), !cir.ptr<!s32i> loc(#loc479)
    %48 = cir.load %47 : !cir.ptr<!s32i>, !s32i loc(#loc477)
    cir.call @printIntLine(%48) : (!s32i) -> () loc(#loc480)
    cir.br ^bb26 loc(#loc470)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc470)
  ^bb27:  // pred: ^bb26
    %49 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc481)
    %50 = cir.unary(inc, %49) nsw : !s32i, !s32i loc(#loc482)
    cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc676)
    cir.br ^bb23 loc(#loc672)
  ^bb28:  // pred: ^bb23
    cir.br ^bb29 loc(#loc470)
  ^bb29:  // pred: ^bb28
    cir.br ^bb31 loc(#loc463)
  ^bb30:  // pred: ^bb20
    %51 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc483)
    %52 = cir.cast(array_to_ptrdecay, %51 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc483)
    cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc484)
    cir.br ^bb31 loc(#loc459)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc459)
  ^bb32:  // pred: ^bb31
    %53 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc485)
    %54 = cir.cast(bitcast, %53 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc485)
    cir.call @free(%54) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc486)
    cir.br ^bb33 loc(#loc431)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc427)
  ^bb34:  // 2 preds: ^bb5, ^bb33
    cir.br ^bb35 loc(#loc427)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc410)
  } loc(#loc645)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":47:27)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":75:27)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":30:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":80:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":38:13)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":38:49)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":54:13)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":54:17)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":55:13)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":55:58)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":32:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":32:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":34:13)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":34:12)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":34:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":35:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":50:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":35:8)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":36:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":37:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":49:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":40:13)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":48:13)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":40:23)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":40:36)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":40:53)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":40:17)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":40:63)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":41:13)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":44:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":46:13)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":43:29)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":43:24)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":43:17)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":43:40)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":47:17)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":51:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":79:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":51:8)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":52:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":53:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":78:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":55:35)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":55:42)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":55:47)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":55:57)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":56:13)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":56:43)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":56:17)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":56:27)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":56:33)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":56:34)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":56:40)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":56:39)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":58:13)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":61:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":58:22)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":58:18)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":58:25)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":58:29)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":58:27)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":59:13)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":60:29)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":60:17)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":60:24)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":60:25)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":58:34)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":58:33)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":64:13)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":76:13)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":64:17)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":64:25)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":65:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":72:13)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":74:13)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":66:32)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":66:17)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":66:24)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":66:28)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":68:17)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":71:17)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":68:25)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":68:21)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":68:28)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":68:32)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":68:30)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":69:17)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":70:34)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":70:41)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":70:42)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":70:21)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":68:37)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":68:36)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":75:17)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":77:18)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":77:13)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":286:1)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":292:1)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":288:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":288:14)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":289:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":289:14)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":290:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":290:14)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":291:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":291:14)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":111:19)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":136:27)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":87:1)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":141:1)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":95:13)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":95:49)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":116:13)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":116:17)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":117:13)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":117:58)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":89:5)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":89:9)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":91:13)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":91:12)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":91:5)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":92:5)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":107:5)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":92:8)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":93:5)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":94:9)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":106:9)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":97:13)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":105:13)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":97:23)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":97:36)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":97:53)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":97:17)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":97:63)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":98:13)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":101:13)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":103:13)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":100:29)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":100:24)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":100:17)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":100:40)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":104:27)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":104:17)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":108:5)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":140:5)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":108:8)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":109:5)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":112:5)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":114:5)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":111:9)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":115:9)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":139:9)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":117:35)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":117:42)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":117:47)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":117:57)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":118:13)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":118:43)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":118:17)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":118:27)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":118:33)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":118:34)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":118:40)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":118:39)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":120:13)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":123:13)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":120:22)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":120:18)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":120:25)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":120:29)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":120:27)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":121:13)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":122:29)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":122:17)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":122:24)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":122:25)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":120:34)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":120:33)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":125:13)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":137:13)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":125:17)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":125:25)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":125:30)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":125:38)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":125:40)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":126:13)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":133:13)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":135:13)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":127:32)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":127:17)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":127:24)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":127:28)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":129:17)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":132:17)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":129:25)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":129:21)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":129:28)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":129:32)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":129:30)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":130:17)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":131:34)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":131:41)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":131:42)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":131:21)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":129:37)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":129:36)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":136:17)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":138:18)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":138:13)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":144:1)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":193:1)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":152:13)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":152:49)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":168:13)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":168:17)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":169:13)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":169:58)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":146:5)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":146:9)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":148:13)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":148:12)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":148:5)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":149:5)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":164:5)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":149:8)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":150:5)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":151:9)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":163:9)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":154:13)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":162:13)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":154:23)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":154:36)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":154:53)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":154:17)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":154:63)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":155:13)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":158:13)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":160:13)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":157:29)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":157:24)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":157:17)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":157:40)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":161:27)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":161:17)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":165:5)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":192:5)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":165:8)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":166:5)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":167:9)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":191:9)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":169:35)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":169:42)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":169:47)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":169:57)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":170:13)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":170:43)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":170:17)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":170:27)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":170:33)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":170:34)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":170:40)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":170:39)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":172:13)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":175:13)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":172:22)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":172:18)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":172:25)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":172:29)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":172:27)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":173:13)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":174:29)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":174:17)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":174:24)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":174:25)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":172:34)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":172:33)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":177:13)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":189:13)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":177:17)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":177:25)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":177:30)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":177:38)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":177:40)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":178:13)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":185:13)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":187:13)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":179:32)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":179:17)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":179:24)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":179:28)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":181:17)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":184:17)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":181:25)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":181:21)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":181:28)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":181:32)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":181:30)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":182:17)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":183:34)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":183:41)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":183:42)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":183:21)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":181:37)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":181:36)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":188:27)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":188:17)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":190:18)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":190:13)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":196:1)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":241:1)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":215:13)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":215:17)
#loc331 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":216:13)
#loc332 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":216:58)
#loc333 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":198:5)
#loc334 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":198:9)
#loc335 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":200:13)
#loc336 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":200:12)
#loc337 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":200:5)
#loc338 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":201:5)
#loc339 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":211:5)
#loc340 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":201:8)
#loc341 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":202:5)
#loc342 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":205:5)
#loc343 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":207:5)
#loc344 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":204:19)
#loc345 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":204:9)
#loc346 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":210:16)
#loc347 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":210:9)
#loc348 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":212:5)
#loc349 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":240:5)
#loc350 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":212:8)
#loc351 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":213:5)
#loc352 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":214:9)
#loc353 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":239:9)
#loc354 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":216:35)
#loc355 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":216:42)
#loc356 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":216:47)
#loc357 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":216:57)
#loc358 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":217:13)
#loc359 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":217:43)
#loc360 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":217:17)
#loc361 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":217:27)
#loc362 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":217:33)
#loc363 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":217:34)
#loc364 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":217:40)
#loc365 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":217:39)
#loc366 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":219:13)
#loc367 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":222:13)
#loc368 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":219:22)
#loc369 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":219:18)
#loc370 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":219:25)
#loc371 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":219:29)
#loc372 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":219:27)
#loc373 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":220:13)
#loc374 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":221:29)
#loc375 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":221:17)
#loc376 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":221:24)
#loc377 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":221:25)
#loc378 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":219:34)
#loc379 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":219:33)
#loc380 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":225:13)
#loc381 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":237:13)
#loc382 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":225:17)
#loc383 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":225:25)
#loc384 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":226:13)
#loc385 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":233:13)
#loc386 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":235:13)
#loc387 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":227:32)
#loc388 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":227:17)
#loc389 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":227:24)
#loc390 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":227:28)
#loc391 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":229:17)
#loc392 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":232:17)
#loc393 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":229:25)
#loc394 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":229:21)
#loc395 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":229:28)
#loc396 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":229:32)
#loc397 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":229:30)
#loc398 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":230:17)
#loc399 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":231:34)
#loc400 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":231:41)
#loc401 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":231:42)
#loc402 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":231:21)
#loc403 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":229:37)
#loc404 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":229:36)
#loc405 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":236:27)
#loc406 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":236:17)
#loc407 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":238:18)
#loc408 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":238:13)
#loc409 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":244:1)
#loc410 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":284:1)
#loc411 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":258:13)
#loc412 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":258:17)
#loc413 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":259:13)
#loc414 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":259:58)
#loc415 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":246:5)
#loc416 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":246:9)
#loc417 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":248:13)
#loc418 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":248:12)
#loc419 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":248:5)
#loc420 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":249:5)
#loc421 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":254:5)
#loc422 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":249:8)
#loc423 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":250:5)
#loc424 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":253:16)
#loc425 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":253:9)
#loc426 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":255:5)
#loc427 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":283:5)
#loc428 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":255:8)
#loc429 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":256:5)
#loc430 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":257:9)
#loc431 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":282:9)
#loc432 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":259:35)
#loc433 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":259:42)
#loc434 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":259:47)
#loc435 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":259:57)
#loc436 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":260:13)
#loc437 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":260:43)
#loc438 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":260:17)
#loc439 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":260:27)
#loc440 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":260:33)
#loc441 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":260:34)
#loc442 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":260:40)
#loc443 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":260:39)
#loc444 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":262:13)
#loc445 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":265:13)
#loc446 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":262:22)
#loc447 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":262:18)
#loc448 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":262:25)
#loc449 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":262:29)
#loc450 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":262:27)
#loc451 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":263:13)
#loc452 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":264:29)
#loc453 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":264:17)
#loc454 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":264:24)
#loc455 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":264:25)
#loc456 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":262:34)
#loc457 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":262:33)
#loc458 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":268:13)
#loc459 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":280:13)
#loc460 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":268:17)
#loc461 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":268:25)
#loc462 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":269:13)
#loc463 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":276:13)
#loc464 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":278:13)
#loc465 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":270:32)
#loc466 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":270:17)
#loc467 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":270:24)
#loc468 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":270:28)
#loc469 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":272:17)
#loc470 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":275:17)
#loc471 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":272:25)
#loc472 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":272:21)
#loc473 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":272:28)
#loc474 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":272:32)
#loc475 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":272:30)
#loc476 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":273:17)
#loc477 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":274:34)
#loc478 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":274:41)
#loc479 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":274:42)
#loc480 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":274:21)
#loc481 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":272:37)
#loc482 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":272:36)
#loc483 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":279:27)
#loc484 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":279:17)
#loc485 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":281:18)
#loc486 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_04.c":281:13)
#loc487 = loc(fused[#loc1, #loc2])
#loc488 = loc(fused[#loc3, #loc4])
#loc489 = loc(fused[#loc5, #loc6])
#loc490 = loc(fused[#loc7, #loc8])
#loc491 = loc(fused[#loc10, #loc11])
#loc492 = loc(fused[#loc12, #loc13])
#loc493 = loc(fused[#loc14, #loc15])
#loc494 = loc(fused[#loc17, #loc18])
#loc495 = loc(fused[#loc19, #loc20])
#loc496 = loc(fused[#loc21, #loc22])
#loc497 = loc(fused[#loc23, #loc24])
#loc498 = loc(fused[#loc25, #loc26])
#loc499 = loc(fused[#loc27, #loc28])
#loc500 = loc(fused[#loc31, #loc29])
#loc501 = loc(fused[#loc32, #loc33])
#loc502 = loc(fused[#loc35, #loc33])
#loc503 = loc(fused[#loc36, #loc37])
#loc504 = loc(fused[#loc38, #loc39])
#loc505 = loc(fused[#loc43, #loc44])
#loc506 = loc(fused[#loc45, #loc46, #loc47, #loc39])
#loc507 = loc(fused[#loc50, #loc51])
#loc508 = loc(fused[#loc53, #loc54])
#loc509 = loc(fused[#loc56, #loc54])
#loc510 = loc(fused[#loc57, #loc58])
#loc511 = loc(fused[#loc61, #loc62])
#loc512 = loc(fused[#loc60, #loc62])
#loc513 = loc(fused[#loc59, #loc26])
#loc514 = loc(fused[#loc63, #loc64])
#loc515 = loc(fused[#loc65, #loc66])
#loc516 = loc(fused[#loc67, #loc64])
#loc517 = loc(fused[#loc71, #loc72])
#loc518 = loc(fused[#loc74, #loc73])
#loc519 = loc(fused[#loc75, #loc76])
#loc520 = loc(fused[#loc78, #loc72])
#loc521 = loc(fused[#loc80, #loc79])
#loc522 = loc(fused[#loc84, #loc83])
#loc523 = loc(fused[#loc85, #loc86])
#loc524 = loc(fused[#loc87, #loc88])
#loc525 = loc(fused[#loc89, #loc90, #loc91, #loc86])
#loc526 = loc(fused[#loc93, #loc92])
#loc527 = loc(fused[#loc96, #loc97])
#loc528 = loc(fused[#loc99, #loc98])
#loc529 = loc(fused[#loc100, #loc101])
#loc530 = loc(fused[#loc103, #loc97])
#loc531 = loc(fused[#loc109, #loc108])
#loc532 = loc(fused[#loc113, #loc114])
#loc533 = loc(fused[#loc115, #loc116])
#loc534 = loc(fused[#loc117, #loc118])
#loc535 = loc(fused[#loc119, #loc120])
#loc536 = loc(fused[#loc121, #loc122])
#loc537 = loc(fused[#loc125, #loc126])
#loc538 = loc(fused[#loc127, #loc128])
#loc539 = loc(fused[#loc129, #loc130])
#loc540 = loc(fused[#loc131, #loc132])
#loc541 = loc(fused[#loc133, #loc134])
#loc542 = loc(fused[#loc137, #loc135])
#loc543 = loc(fused[#loc138, #loc139])
#loc544 = loc(fused[#loc141, #loc139])
#loc545 = loc(fused[#loc142, #loc143])
#loc546 = loc(fused[#loc144, #loc145])
#loc547 = loc(fused[#loc149, #loc150])
#loc548 = loc(fused[#loc151, #loc152, #loc153, #loc145])
#loc549 = loc(fused[#loc156, #loc157])
#loc550 = loc(fused[#loc160, #loc161])
#loc551 = loc(fused[#loc163, #loc164, #loc165, #loc161])
#loc552 = loc(fused[#loc167, #loc168])
#loc553 = loc(fused[#loc171, #loc172])
#loc554 = loc(fused[#loc170, #loc172])
#loc555 = loc(fused[#loc169, #loc132])
#loc556 = loc(fused[#loc173, #loc174])
#loc557 = loc(fused[#loc175, #loc176])
#loc558 = loc(fused[#loc177, #loc174])
#loc559 = loc(fused[#loc181, #loc182])
#loc560 = loc(fused[#loc184, #loc183])
#loc561 = loc(fused[#loc185, #loc186])
#loc562 = loc(fused[#loc188, #loc182])
#loc563 = loc(fused[#loc190, #loc189])
#loc564 = loc(fused[#loc194, #loc193])
#loc565 = loc(fused[#loc195, #loc196])
#loc566 = loc(fused[#loc197, #loc198])
#loc567 = loc(fused[#loc200, #loc202])
#loc568 = loc(fused[#loc203, #loc204, #loc205, #loc196])
#loc569 = loc(fused[#loc207, #loc206])
#loc570 = loc(fused[#loc210, #loc211])
#loc571 = loc(fused[#loc213, #loc212])
#loc572 = loc(fused[#loc214, #loc215])
#loc573 = loc(fused[#loc217, #loc211])
#loc574 = loc(fused[#loc223, #loc222])
#loc575 = loc(fused[#loc227, #loc228])
#loc576 = loc(fused[#loc229, #loc230])
#loc577 = loc(fused[#loc231, #loc232])
#loc578 = loc(fused[#loc233, #loc234])
#loc579 = loc(fused[#loc235, #loc236])
#loc580 = loc(fused[#loc239, #loc237])
#loc581 = loc(fused[#loc240, #loc241])
#loc582 = loc(fused[#loc243, #loc241])
#loc583 = loc(fused[#loc244, #loc245])
#loc584 = loc(fused[#loc246, #loc247])
#loc585 = loc(fused[#loc251, #loc252])
#loc586 = loc(fused[#loc253, #loc254, #loc255, #loc247])
#loc587 = loc(fused[#loc258, #loc259])
#loc588 = loc(fused[#loc262, #loc263])
#loc589 = loc(fused[#loc265, #loc263])
#loc590 = loc(fused[#loc266, #loc267])
#loc591 = loc(fused[#loc270, #loc271])
#loc592 = loc(fused[#loc269, #loc271])
#loc593 = loc(fused[#loc268, #loc234])
#loc594 = loc(fused[#loc272, #loc273])
#loc595 = loc(fused[#loc274, #loc275])
#loc596 = loc(fused[#loc276, #loc273])
#loc597 = loc(fused[#loc280, #loc281])
#loc598 = loc(fused[#loc283, #loc282])
#loc599 = loc(fused[#loc284, #loc285])
#loc600 = loc(fused[#loc287, #loc281])
#loc601 = loc(fused[#loc289, #loc288])
#loc602 = loc(fused[#loc293, #loc292])
#loc603 = loc(fused[#loc294, #loc295])
#loc604 = loc(fused[#loc296, #loc297])
#loc605 = loc(fused[#loc299, #loc301])
#loc606 = loc(fused[#loc302, #loc303, #loc304, #loc295])
#loc607 = loc(fused[#loc306, #loc305])
#loc608 = loc(fused[#loc309, #loc310])
#loc609 = loc(fused[#loc312, #loc311])
#loc610 = loc(fused[#loc313, #loc314])
#loc611 = loc(fused[#loc316, #loc310])
#loc612 = loc(fused[#loc322, #loc321])
#loc613 = loc(fused[#loc327, #loc328])
#loc614 = loc(fused[#loc329, #loc330])
#loc615 = loc(fused[#loc331, #loc332])
#loc616 = loc(fused[#loc333, #loc334])
#loc617 = loc(fused[#loc337, #loc335])
#loc618 = loc(fused[#loc338, #loc339])
#loc619 = loc(fused[#loc341, #loc342, #loc343, #loc339])
#loc620 = loc(fused[#loc347, #loc346])
#loc621 = loc(fused[#loc348, #loc349])
#loc622 = loc(fused[#loc351, #loc349])
#loc623 = loc(fused[#loc352, #loc353])
#loc624 = loc(fused[#loc356, #loc357])
#loc625 = loc(fused[#loc355, #loc357])
#loc626 = loc(fused[#loc354, #loc332])
#loc627 = loc(fused[#loc358, #loc359])
#loc628 = loc(fused[#loc360, #loc361])
#loc629 = loc(fused[#loc362, #loc359])
#loc630 = loc(fused[#loc366, #loc367])
#loc631 = loc(fused[#loc369, #loc368])
#loc632 = loc(fused[#loc370, #loc371])
#loc633 = loc(fused[#loc373, #loc367])
#loc634 = loc(fused[#loc375, #loc374])
#loc635 = loc(fused[#loc379, #loc378])
#loc636 = loc(fused[#loc380, #loc381])
#loc637 = loc(fused[#loc382, #loc383])
#loc638 = loc(fused[#loc384, #loc385, #loc386, #loc381])
#loc639 = loc(fused[#loc388, #loc387])
#loc640 = loc(fused[#loc391, #loc392])
#loc641 = loc(fused[#loc394, #loc393])
#loc642 = loc(fused[#loc395, #loc396])
#loc643 = loc(fused[#loc398, #loc392])
#loc644 = loc(fused[#loc404, #loc403])
#loc645 = loc(fused[#loc409, #loc410])
#loc646 = loc(fused[#loc411, #loc412])
#loc647 = loc(fused[#loc413, #loc414])
#loc648 = loc(fused[#loc415, #loc416])
#loc649 = loc(fused[#loc419, #loc417])
#loc650 = loc(fused[#loc420, #loc421])
#loc651 = loc(fused[#loc423, #loc421])
#loc652 = loc(fused[#loc425, #loc424])
#loc653 = loc(fused[#loc426, #loc427])
#loc654 = loc(fused[#loc429, #loc427])
#loc655 = loc(fused[#loc430, #loc431])
#loc656 = loc(fused[#loc434, #loc435])
#loc657 = loc(fused[#loc433, #loc435])
#loc658 = loc(fused[#loc432, #loc414])
#loc659 = loc(fused[#loc436, #loc437])
#loc660 = loc(fused[#loc438, #loc439])
#loc661 = loc(fused[#loc440, #loc437])
#loc662 = loc(fused[#loc444, #loc445])
#loc663 = loc(fused[#loc447, #loc446])
#loc664 = loc(fused[#loc448, #loc449])
#loc665 = loc(fused[#loc451, #loc445])
#loc666 = loc(fused[#loc453, #loc452])
#loc667 = loc(fused[#loc457, #loc456])
#loc668 = loc(fused[#loc458, #loc459])
#loc669 = loc(fused[#loc460, #loc461])
#loc670 = loc(fused[#loc462, #loc463, #loc464, #loc459])
#loc671 = loc(fused[#loc466, #loc465])
#loc672 = loc(fused[#loc469, #loc470])
#loc673 = loc(fused[#loc472, #loc471])
#loc674 = loc(fused[#loc473, #loc474])
#loc675 = loc(fused[#loc476, #loc470])
#loc676 = loc(fused[#loc482, #loc481])
