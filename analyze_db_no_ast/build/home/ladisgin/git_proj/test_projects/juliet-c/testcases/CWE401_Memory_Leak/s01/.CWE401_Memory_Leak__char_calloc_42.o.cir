!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc12 = loc("CWE401_Memory_Leak__char_calloc_42.c":24:25)
#loc13 = loc("CWE401_Memory_Leak__char_calloc_42.c":24:32)
#loc54 = loc("CWE401_Memory_Leak__char_calloc_42.c":69:29)
#loc55 = loc("CWE401_Memory_Leak__char_calloc_42.c":69:36)
#loc95 = loc("CWE401_Memory_Leak__char_calloc_42.c":49:29)
#loc96 = loc("CWE401_Memory_Leak__char_calloc_42.c":49:36)
#loc122 = loc(fused[#loc12, #loc13])
#loc138 = loc(fused[#loc54, #loc55])
#loc152 = loc(fused[#loc95, #loc96])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc117)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc118)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc119)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc120)
  cir.func internal private  @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc12, #loc13])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc11)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc15)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc16)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc123)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc124)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    cir.scope {
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
      %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc24)
      %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !s32i loc(#loc127)
      %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc25)
      cir.if %20 {
        %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc27)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc29)
        cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
      } loc(#loc128)
    } loc(#loc126)
    %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc30)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
    %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc30)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    cir.return %15 : !cir.ptr<!s8i> loc(#loc129)
  } loc(#loc121)
  cir.func no_proto  @CWE401_Memory_Leak__char_calloc_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc40)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %3 = cir.call @badSource(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc43)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    cir.return loc(#loc37)
  } loc(#loc130)
  cir.func no_proto  @CWE401_Memory_Leak__char_calloc_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc135)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc47)
  } loc(#loc134)
  cir.func internal private  @goodB2GSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc54, #loc55])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc53)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc56)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc57)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc58)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc139)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc57)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc140)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    cir.scope {
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
      %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc66)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc66)
      %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !s32i loc(#loc143)
      %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc67)
      cir.if %20 {
        %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc69)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc70)
        %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc71)
        cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc69)
      } loc(#loc144)
    } loc(#loc142)
    %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc72)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc74)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc74)
    %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc72)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
    cir.return %15 : !cir.ptr<!s8i> loc(#loc145)
  } loc(#loc137)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc146)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc148)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc85)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %3 = cir.call @goodB2GSource(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc88)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc91)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc91)
    cir.return loc(#loc82)
  } loc(#loc147)
  cir.func internal private  @goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc95, #loc96])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc94)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc97)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc98)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc98)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc98)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc98)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc98)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc98)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc98)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc100)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc102)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc102)
    %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc100)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    cir.store %15, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
    cir.return %16 : !cir.ptr<!s8i> loc(#loc154)
  } loc(#loc151)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc111)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %3 = cir.call @goodG2BSource(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc114)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    cir.return loc(#loc108)
  } loc(#loc155)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_42.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__char_calloc_42.c":30:18)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE401_Memory_Leak__char_calloc_42.c":24:1)
#loc11 = loc("CWE401_Memory_Leak__char_calloc_42.c":33:1)
#loc14 = loc("CWE401_Memory_Leak__char_calloc_42.c":25:1)
#loc15 = loc("CWE401_Memory_Leak__char_calloc_42.c":27:20)
#loc16 = loc("CWE401_Memory_Leak__char_calloc_42.c":27:27)
#loc17 = loc("CWE401_Memory_Leak__char_calloc_42.c":27:32)
#loc18 = loc("CWE401_Memory_Leak__char_calloc_42.c":27:43)
#loc19 = loc("CWE401_Memory_Leak__char_calloc_42.c":27:44)
#loc20 = loc("CWE401_Memory_Leak__char_calloc_42.c":27:5)
#loc21 = loc("CWE401_Memory_Leak__char_calloc_42.c":28:5)
#loc22 = loc("CWE401_Memory_Leak__char_calloc_42.c":28:33)
#loc23 = loc("CWE401_Memory_Leak__char_calloc_42.c":28:9)
#loc24 = loc("CWE401_Memory_Leak__char_calloc_42.c":28:17)
#loc25 = loc("CWE401_Memory_Leak__char_calloc_42.c":28:14)
#loc26 = loc("CWE401_Memory_Leak__char_calloc_42.c":28:23)
#loc27 = loc("CWE401_Memory_Leak__char_calloc_42.c":28:24)
#loc28 = loc("CWE401_Memory_Leak__char_calloc_42.c":28:30)
#loc29 = loc("CWE401_Memory_Leak__char_calloc_42.c":28:29)
#loc30 = loc("CWE401_Memory_Leak__char_calloc_42.c":30:5)
#loc31 = loc("CWE401_Memory_Leak__char_calloc_42.c":30:12)
#loc32 = loc("CWE401_Memory_Leak__char_calloc_42.c":31:15)
#loc33 = loc("CWE401_Memory_Leak__char_calloc_42.c":31:5)
#loc34 = loc("CWE401_Memory_Leak__char_calloc_42.c":32:12)
#loc35 = loc("CWE401_Memory_Leak__char_calloc_42.c":32:5)
#loc36 = loc("CWE401_Memory_Leak__char_calloc_42.c":35:1)
#loc37 = loc("CWE401_Memory_Leak__char_calloc_42.c":42:1)
#loc38 = loc("CWE401_Memory_Leak__char_calloc_42.c":37:5)
#loc39 = loc("CWE401_Memory_Leak__char_calloc_42.c":37:12)
#loc40 = loc("CWE401_Memory_Leak__char_calloc_42.c":38:12)
#loc41 = loc("CWE401_Memory_Leak__char_calloc_42.c":38:5)
#loc42 = loc("CWE401_Memory_Leak__char_calloc_42.c":39:22)
#loc43 = loc("CWE401_Memory_Leak__char_calloc_42.c":39:12)
#loc44 = loc("CWE401_Memory_Leak__char_calloc_42.c":39:5)
#loc45 = loc("CWE401_Memory_Leak__char_calloc_42.c":39:26)
#loc46 = loc("CWE401_Memory_Leak__char_calloc_42.c":89:1)
#loc47 = loc("CWE401_Memory_Leak__char_calloc_42.c":93:1)
#loc48 = loc("CWE401_Memory_Leak__char_calloc_42.c":91:5)
#loc49 = loc("CWE401_Memory_Leak__char_calloc_42.c":91:13)
#loc50 = loc("CWE401_Memory_Leak__char_calloc_42.c":92:5)
#loc51 = loc("CWE401_Memory_Leak__char_calloc_42.c":92:13)
#loc52 = loc("CWE401_Memory_Leak__char_calloc_42.c":69:1)
#loc53 = loc("CWE401_Memory_Leak__char_calloc_42.c":78:1)
#loc56 = loc("CWE401_Memory_Leak__char_calloc_42.c":70:1)
#loc57 = loc("CWE401_Memory_Leak__char_calloc_42.c":72:20)
#loc58 = loc("CWE401_Memory_Leak__char_calloc_42.c":72:27)
#loc59 = loc("CWE401_Memory_Leak__char_calloc_42.c":72:32)
#loc60 = loc("CWE401_Memory_Leak__char_calloc_42.c":72:43)
#loc61 = loc("CWE401_Memory_Leak__char_calloc_42.c":72:44)
#loc62 = loc("CWE401_Memory_Leak__char_calloc_42.c":72:5)
#loc63 = loc("CWE401_Memory_Leak__char_calloc_42.c":73:5)
#loc64 = loc("CWE401_Memory_Leak__char_calloc_42.c":73:33)
#loc65 = loc("CWE401_Memory_Leak__char_calloc_42.c":73:9)
#loc66 = loc("CWE401_Memory_Leak__char_calloc_42.c":73:17)
#loc67 = loc("CWE401_Memory_Leak__char_calloc_42.c":73:14)
#loc68 = loc("CWE401_Memory_Leak__char_calloc_42.c":73:23)
#loc69 = loc("CWE401_Memory_Leak__char_calloc_42.c":73:24)
#loc70 = loc("CWE401_Memory_Leak__char_calloc_42.c":73:30)
#loc71 = loc("CWE401_Memory_Leak__char_calloc_42.c":73:29)
#loc72 = loc("CWE401_Memory_Leak__char_calloc_42.c":75:5)
#loc73 = loc("CWE401_Memory_Leak__char_calloc_42.c":75:12)
#loc74 = loc("CWE401_Memory_Leak__char_calloc_42.c":75:18)
#loc75 = loc("CWE401_Memory_Leak__char_calloc_42.c":76:15)
#loc76 = loc("CWE401_Memory_Leak__char_calloc_42.c":76:5)
#loc77 = loc("CWE401_Memory_Leak__char_calloc_42.c":77:12)
#loc78 = loc("CWE401_Memory_Leak__char_calloc_42.c":77:5)
#loc79 = loc("/usr/include/stdlib.h":687:1)
#loc80 = loc("/usr/include/stdlib.h":687:32)
#loc81 = loc("CWE401_Memory_Leak__char_calloc_42.c":80:1)
#loc82 = loc("CWE401_Memory_Leak__char_calloc_42.c":87:1)
#loc83 = loc("CWE401_Memory_Leak__char_calloc_42.c":82:5)
#loc84 = loc("CWE401_Memory_Leak__char_calloc_42.c":82:12)
#loc85 = loc("CWE401_Memory_Leak__char_calloc_42.c":83:12)
#loc86 = loc("CWE401_Memory_Leak__char_calloc_42.c":83:5)
#loc87 = loc("CWE401_Memory_Leak__char_calloc_42.c":84:26)
#loc88 = loc("CWE401_Memory_Leak__char_calloc_42.c":84:12)
#loc89 = loc("CWE401_Memory_Leak__char_calloc_42.c":84:5)
#loc90 = loc("CWE401_Memory_Leak__char_calloc_42.c":84:30)
#loc91 = loc("CWE401_Memory_Leak__char_calloc_42.c":86:5)
#loc92 = loc("CWE401_Memory_Leak__char_calloc_42.c":86:10)
#loc93 = loc("CWE401_Memory_Leak__char_calloc_42.c":49:1)
#loc94 = loc("CWE401_Memory_Leak__char_calloc_42.c":57:1)
#loc97 = loc("CWE401_Memory_Leak__char_calloc_42.c":50:1)
#loc98 = loc("CWE401_Memory_Leak__char_calloc_42.c":52:20)
#loc99 = loc("CWE401_Memory_Leak__char_calloc_42.c":52:5)
#loc100 = loc("CWE401_Memory_Leak__char_calloc_42.c":54:5)
#loc101 = loc("CWE401_Memory_Leak__char_calloc_42.c":54:12)
#loc102 = loc("CWE401_Memory_Leak__char_calloc_42.c":54:18)
#loc103 = loc("CWE401_Memory_Leak__char_calloc_42.c":55:15)
#loc104 = loc("CWE401_Memory_Leak__char_calloc_42.c":55:5)
#loc105 = loc("CWE401_Memory_Leak__char_calloc_42.c":56:12)
#loc106 = loc("CWE401_Memory_Leak__char_calloc_42.c":56:5)
#loc107 = loc("CWE401_Memory_Leak__char_calloc_42.c":59:1)
#loc108 = loc("CWE401_Memory_Leak__char_calloc_42.c":66:1)
#loc109 = loc("CWE401_Memory_Leak__char_calloc_42.c":61:5)
#loc110 = loc("CWE401_Memory_Leak__char_calloc_42.c":61:12)
#loc111 = loc("CWE401_Memory_Leak__char_calloc_42.c":62:12)
#loc112 = loc("CWE401_Memory_Leak__char_calloc_42.c":62:5)
#loc113 = loc("CWE401_Memory_Leak__char_calloc_42.c":63:26)
#loc114 = loc("CWE401_Memory_Leak__char_calloc_42.c":63:12)
#loc115 = loc("CWE401_Memory_Leak__char_calloc_42.c":63:5)
#loc116 = loc("CWE401_Memory_Leak__char_calloc_42.c":63:30)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc120 = loc(fused[#loc8, #loc9])
#loc121 = loc(fused[#loc10, #loc11])
#loc123 = loc(fused[#loc17, #loc18])
#loc124 = loc(fused[#loc15, #loc19])
#loc125 = loc(fused[#loc20, #loc19])
#loc126 = loc(fused[#loc21, #loc22])
#loc127 = loc(fused[#loc23, #loc24])
#loc128 = loc(fused[#loc26, #loc22])
#loc129 = loc(fused[#loc35, #loc34])
#loc130 = loc(fused[#loc36, #loc37])
#loc131 = loc(fused[#loc38, #loc39])
#loc132 = loc(fused[#loc41, #loc40])
#loc133 = loc(fused[#loc44, #loc45])
#loc134 = loc(fused[#loc46, #loc47])
#loc135 = loc(fused[#loc48, #loc49])
#loc136 = loc(fused[#loc50, #loc51])
#loc137 = loc(fused[#loc52, #loc53])
#loc139 = loc(fused[#loc59, #loc60])
#loc140 = loc(fused[#loc57, #loc61])
#loc141 = loc(fused[#loc62, #loc61])
#loc142 = loc(fused[#loc63, #loc64])
#loc143 = loc(fused[#loc65, #loc66])
#loc144 = loc(fused[#loc68, #loc64])
#loc145 = loc(fused[#loc78, #loc77])
#loc146 = loc(fused[#loc79, #loc80])
#loc147 = loc(fused[#loc81, #loc82])
#loc148 = loc(fused[#loc83, #loc84])
#loc149 = loc(fused[#loc86, #loc85])
#loc150 = loc(fused[#loc89, #loc90])
#loc151 = loc(fused[#loc93, #loc94])
#loc153 = loc(fused[#loc99, #loc98])
#loc154 = loc(fused[#loc106, #loc105])
#loc155 = loc(fused[#loc107, #loc108])
#loc156 = loc(fused[#loc109, #loc110])
#loc157 = loc(fused[#loc112, #loc111])
#loc158 = loc(fused[#loc115, #loc116])
