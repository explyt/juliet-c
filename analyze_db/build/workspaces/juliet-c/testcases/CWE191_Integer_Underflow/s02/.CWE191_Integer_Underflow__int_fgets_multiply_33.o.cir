!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc135)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc136)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc139)
  cir.func @_ZN47CWE191_Integer_Underflow__int_fgets_multiply_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc141)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc142)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc143)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc144)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc145)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc23)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc24)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    cir.br ^bb1 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc141)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc141)
    cir.br ^bb2 loc(#loc148)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc30)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc31)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc31)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc31)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc31)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc31)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc31)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc31)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc31)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc136)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc33)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc34)
    %20 = cir.cmp(ne, %18, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc149)
    cir.brcond %20 ^bb3, ^bb4 loc(#loc150)
  ^bb3:  // pred: ^bb2
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc38)
    %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc39)
    cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    cir.br ^bb5 loc(#loc36)
  ^bb4:  // pred: ^bb2
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    cir.br ^bb5 loc(#loc29)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc29)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc152)
  ^bb8:  // pred: ^bb7
    %25 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc17)
    %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    cir.store %26, %1 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.br ^bb9 loc(#loc153)
  ^bb9:  // pred: ^bb8
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %29 = cir.cmp(lt, %27, %28) : !s32i, !cir.bool loc(#loc154)
    cir.brcond %29 ^bb10, ^bb11 loc(#loc155)
  ^bb10:  // pred: ^bb9
    %30 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %31 = cir.const #cir.int<2> : !s32i loc(#loc19)
    %32 = cir.binop(mul, %30, %31) nsw : !s32i loc(#loc50)
    cir.store %32, %2 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc52)
    cir.br ^bb11 loc(#loc46)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc46)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc44)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc13)
  } loc(#loc140)
  cir.func internal private @_ZN47CWE191_Integer_Underflow__int_fgets_multiply_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc157)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc158)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc159)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc160)
    cir.store %2, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc62)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc63)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc65)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc66)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    cir.br ^bb1 loc(#loc163)
  ^bb1:  // pred: ^bb0
    %7 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    cir.br ^bb2 loc(#loc164)
  ^bb2:  // pred: ^bb1
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc165)
    cir.brcond %11 ^bb3, ^bb4 loc(#loc166)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc58)
    %14 = cir.binop(mul, %12, %13) nsw : !s32i loc(#loc75)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc77)
    cir.br ^bb4 loc(#loc71)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc71)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc69)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc54)
  } loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc78)
  cir.func internal private @_ZN47CWE191_Integer_Underflow__int_fgets_multiply_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc168)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc169)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc170)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc171)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc172)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc90)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc91)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.br ^bb1 loc(#loc174)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc168)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc168)
    cir.br ^bb2 loc(#loc175)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc97)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc98)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc98)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc98)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc98)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc98)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc98)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc98)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc98)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc136)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc99)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc100)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc101)
    %20 = cir.cmp(ne, %18, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc176)
    cir.brcond %20 ^bb3, ^bb4 loc(#loc177)
  ^bb3:  // pred: ^bb2
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
    %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc106)
    cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    cir.br ^bb5 loc(#loc103)
  ^bb4:  // pred: ^bb2
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc109)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    cir.br ^bb5 loc(#loc96)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc96)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc94)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc179)
  ^bb8:  // pred: ^bb7
    %25 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
    %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    cir.store %26, %1 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.br ^bb9 loc(#loc180)
  ^bb9:  // pred: ^bb8
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %29 = cir.cmp(lt, %27, %28) : !s32i, !cir.bool loc(#loc181)
    cir.brcond %29 ^bb10, ^bb16 loc(#loc182)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc183)
  ^bb11:  // pred: ^bb10
    %30 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %31 = cir.const #cir.int<2147483647> : !s32i loc(#loc121)
    %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc121)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc121)
    %35 = cir.const #cir.int<2> : !s32i loc(#loc122)
    %36 = cir.binop(div, %34, %35) : !s32i loc(#loc184)
    %37 = cir.cmp(gt, %30, %36) : !s32i, !cir.bool loc(#loc185)
    cir.brcond %37 ^bb12, ^bb13 loc(#loc186)
  ^bb12:  // pred: ^bb11
    %38 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %39 = cir.const #cir.int<2> : !s32i loc(#loc86)
    %40 = cir.binop(mul, %38, %39) nsw : !s32i loc(#loc127)
    cir.store %40, %2 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    cir.call @printIntLine(%41) : (!s32i) -> () loc(#loc129)
    cir.br ^bb14 loc(#loc125)
  ^bb13:  // pred: ^bb11
    %42 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc78)
    %43 = cir.cast(array_to_ptrdecay, %42 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    cir.br ^bb14 loc(#loc119)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc119)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc114)
  ^bb16:  // 2 preds: ^bb9, ^bb15
    cir.br ^bb17 loc(#loc114)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc112)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc80)
  } loc(#loc167)
  cir.func @_ZN47CWE191_Integer_Underflow__int_fgets_multiply_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN47CWE191_Integer_Underflow__int_fgets_multiply_33L7goodG2BEv() : () -> () loc(#loc133)
    cir.call @_ZN47CWE191_Integer_Underflow__int_fgets_multiply_33L7goodB2GEv() : () -> () loc(#loc134)
    cir.return loc(#loc132)
  } loc(#loc187)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":43:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":27:1)
#loc13 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":55:1)
#loc14 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":34:9)
#loc15 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":34:45)
#loc16 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":47:9)
#loc17 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":47:20)
#loc18 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":51:13)
#loc19 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":51:33)
#loc20 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":29:5)
#loc21 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":29:9)
#loc22 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":30:5)
#loc23 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":30:20)
#loc24 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":32:12)
#loc25 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":32:5)
#loc26 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":33:5)
#loc27 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":45:5)
#loc28 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":36:9)
#loc29 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":44:9)
#loc30 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":36:19)
#loc31 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":36:32)
#loc32 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":36:49)
#loc33 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":36:13)
#loc34 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":36:59)
#loc35 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":37:9)
#loc36 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":40:9)
#loc37 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":42:9)
#loc38 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":39:25)
#loc39 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":39:20)
#loc40 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":39:13)
#loc41 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":39:36)
#loc42 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":43:13)
#loc43 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":46:5)
#loc44 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":54:5)
#loc45 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":48:9)
#loc46 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":53:9)
#loc47 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":48:12)
#loc48 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":48:19)
#loc49 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":49:9)
#loc50 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":51:26)
#loc51 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":52:26)
#loc52 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":52:13)
#loc53 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":62:1)
#loc54 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":79:1)
#loc55 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":71:9)
#loc56 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":71:20)
#loc57 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":75:13)
#loc58 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":75:33)
#loc59 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":64:5)
#loc60 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":64:9)
#loc61 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":65:5)
#loc62 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":65:20)
#loc63 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":67:12)
#loc64 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":67:5)
#loc65 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":69:13)
#loc66 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":69:12)
#loc67 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":69:5)
#loc68 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":70:5)
#loc69 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":78:5)
#loc70 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":72:9)
#loc71 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":77:9)
#loc72 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":72:12)
#loc73 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":72:19)
#loc74 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":73:9)
#loc75 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":75:26)
#loc76 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":76:26)
#loc77 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":76:13)
#loc78 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":113:27)
#loc79 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":82:1)
#loc80 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":117:1)
#loc81 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":89:9)
#loc82 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":89:45)
#loc83 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":102:9)
#loc84 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":102:20)
#loc85 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":108:17)
#loc86 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":108:37)
#loc87 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":84:5)
#loc88 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":84:9)
#loc89 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":85:5)
#loc90 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":85:20)
#loc91 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":87:12)
#loc92 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":87:5)
#loc93 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":88:5)
#loc94 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":100:5)
#loc95 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":91:9)
#loc96 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":99:9)
#loc97 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":91:19)
#loc98 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":91:32)
#loc99 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":91:49)
#loc100 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":91:13)
#loc101 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":91:59)
#loc102 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":92:9)
#loc103 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":95:9)
#loc104 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":97:9)
#loc105 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":94:25)
#loc106 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":94:20)
#loc107 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":94:13)
#loc108 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":94:36)
#loc109 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":98:23)
#loc110 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":98:13)
#loc111 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":101:5)
#loc112 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":116:5)
#loc113 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":103:9)
#loc114 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":115:9)
#loc115 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":103:12)
#loc116 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":103:19)
#loc117 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":104:9)
#loc118 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":106:13)
#loc119 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":114:13)
#loc120 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":106:17)
#loc121 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":106:25)
#loc122 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":106:33)
#loc123 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":106:34)
#loc124 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":107:13)
#loc125 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":110:13)
#loc126 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":112:13)
#loc127 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":108:30)
#loc128 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":109:30)
#loc129 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":109:17)
#loc130 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":113:17)
#loc131 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":119:1)
#loc132 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":123:1)
#loc133 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":121:5)
#loc134 = loc("CWE191_Integer_Underflow__int_fgets_multiply_33.cpp":122:5)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc7, #loc8])
#loc139 = loc(fused[#loc10, #loc11])
#loc140 = loc(fused[#loc12, #loc13])
#loc141 = loc(fused[#loc14, #loc15])
#loc142 = loc(fused[#loc16, #loc17])
#loc143 = loc(fused[#loc18, #loc19])
#loc144 = loc(fused[#loc20, #loc21])
#loc145 = loc(fused[#loc22, #loc23])
#loc146 = loc(fused[#loc25, #loc24])
#loc147 = loc(fused[#loc26, #loc27])
#loc148 = loc(fused[#loc28, #loc29])
#loc149 = loc(fused[#loc33, #loc34])
#loc150 = loc(fused[#loc35, #loc36, #loc37, #loc29])
#loc151 = loc(fused[#loc40, #loc41])
#loc152 = loc(fused[#loc43, #loc44])
#loc153 = loc(fused[#loc45, #loc46])
#loc154 = loc(fused[#loc47, #loc48])
#loc155 = loc(fused[#loc49, #loc46])
#loc156 = loc(fused[#loc53, #loc54])
#loc157 = loc(fused[#loc55, #loc56])
#loc158 = loc(fused[#loc57, #loc58])
#loc159 = loc(fused[#loc59, #loc60])
#loc160 = loc(fused[#loc61, #loc62])
#loc161 = loc(fused[#loc64, #loc63])
#loc162 = loc(fused[#loc67, #loc65])
#loc163 = loc(fused[#loc68, #loc69])
#loc164 = loc(fused[#loc70, #loc71])
#loc165 = loc(fused[#loc72, #loc73])
#loc166 = loc(fused[#loc74, #loc71])
#loc167 = loc(fused[#loc79, #loc80])
#loc168 = loc(fused[#loc81, #loc82])
#loc169 = loc(fused[#loc83, #loc84])
#loc170 = loc(fused[#loc85, #loc86])
#loc171 = loc(fused[#loc87, #loc88])
#loc172 = loc(fused[#loc89, #loc90])
#loc173 = loc(fused[#loc92, #loc91])
#loc174 = loc(fused[#loc93, #loc94])
#loc175 = loc(fused[#loc95, #loc96])
#loc176 = loc(fused[#loc100, #loc101])
#loc177 = loc(fused[#loc102, #loc103, #loc104, #loc96])
#loc178 = loc(fused[#loc107, #loc108])
#loc179 = loc(fused[#loc111, #loc112])
#loc180 = loc(fused[#loc113, #loc114])
#loc181 = loc(fused[#loc115, #loc116])
#loc182 = loc(fused[#loc117, #loc114])
#loc183 = loc(fused[#loc118, #loc119])
#loc184 = loc(fused[#loc121, #loc122])
#loc185 = loc(fused[#loc120, #loc123])
#loc186 = loc(fused[#loc124, #loc125, #loc126, #loc119])
#loc187 = loc(fused[#loc131, #loc132])
