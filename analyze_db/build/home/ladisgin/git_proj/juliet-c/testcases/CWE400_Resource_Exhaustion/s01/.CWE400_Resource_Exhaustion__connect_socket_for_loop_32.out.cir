!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc161 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":253:10)
#loc162 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":253:14)
#loc163 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":253:20)
#loc164 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":253:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc416 = loc(fused[#loc161, #loc162])
#loc417 = loc(fused[#loc163, #loc164])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc353)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc354)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc355)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc356)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc357)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc358)
  cir.func private @close(!s32i) -> !s32i loc(#loc359)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc360)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc18)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_for_loop_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc362)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr1", init] {alignment = 8 : i64} loc(#loc363)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr2", init] {alignment = 8 : i64} loc(#loc364)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc363)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc364)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc28)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc365)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc367)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc34)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc367)
      cir.scope {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc369)
        %11 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc370)
        %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc371)
        %13 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc372)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc42)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc42)
        cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc371)
        cir.scope {
          cir.do {
            %16 = cir.const #cir.int<2> : !s32i loc(#loc47)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc48)
            %18 = cir.const #cir.int<6> : !s32i loc(#loc49)
            %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
            cir.store %19, %12 : !s32i, !cir.ptr<!s32i> loc(#loc374)
            cir.scope {
              %58 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc55)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc56)
              %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc56)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc376)
              cir.if %61 {
                cir.break loc(#loc58)
              } loc(#loc377)
            } loc(#loc375)
            %20 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc378)
            %21 = cir.const #cir.int<0> : !s32i loc(#loc61)
            %22 = cir.const #cir.int<16> : !u64i loc(#loc379)
            cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc380)
            %23 = cir.const #cir.int<2> : !s32i loc(#loc66)
            %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc66)
            %25 = cir.get_member %11[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
            cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc381)
            %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %28 = cir.call @inet_addr(%27) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc69)
            %29 = cir.get_member %11[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
            %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
            cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc382)
            %31 = cir.const #cir.int<27015> : !s32i loc(#loc74)
            %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc74)
            %33 = cir.call @htons(%32) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc75)
            %34 = cir.get_member %11[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
            cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc383)
            cir.scope {
              %58 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc81)
              %59 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc385)
              %60 = cir.const #cir.int<16> : !u64i loc(#loc386)
              %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc386)
              %62 = cir.call @connect(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc86)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc87)
              %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc87)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc387)
              cir.if %65 {
                cir.break loc(#loc89)
              } loc(#loc388)
            } loc(#loc384)
            %35 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc90)
            %36 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc91)
            %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
            %38 = cir.const #cir.int<3> : !s32i loc(#loc92)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc92)
            %40 = cir.const #cir.int<4> : !u64i loc(#loc92)
            %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc92)
            %42 = cir.const #cir.int<2> : !s32i loc(#loc92)
            %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc92)
            %44 = cir.binop(add, %41, %43) : !u64i loc(#loc92)
            %45 = cir.const #cir.int<1> : !s32i loc(#loc93)
            %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc93)
            %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc389)
            %48 = cir.const #cir.int<0> : !s32i loc(#loc94)
            %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc95)
            %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc95)
            cir.store %50, %10 : !s32i, !cir.ptr<!s32i> loc(#loc390)
            cir.scope {
              %58 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc100)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc101)
              %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc101)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc392)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc102)
                cir.yield %63 : !cir.bool loc(#loc102)
              }, false {
                %63 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                %64 = cir.const #cir.int<0> : !s32i loc(#loc104)
                %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc393)
                %66 = cir.ternary(%65, true {
                  %67 = cir.const #true loc(#loc102)
                  cir.yield %67 : !cir.bool loc(#loc102)
                }, false {
                  %67 = cir.const #false loc(#loc102)
                  cir.yield %67 : !cir.bool loc(#loc102)
                }) : (!cir.bool) -> !cir.bool loc(#loc102)
                cir.yield %66 : !cir.bool loc(#loc102)
              }) : (!cir.bool) -> !cir.bool loc(#loc102)
              cir.if %62 {
                cir.break loc(#loc106)
              } loc(#loc394)
            } loc(#loc391)
            %51 = cir.const #cir.int<0> : !s32i loc(#loc107)
            %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc107)
            %53 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc108)
            %54 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
            %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc109)
            cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc395)
            %56 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
            %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc111)
            cir.store %57, %5 : !s32i, !cir.ptr<!s32i> loc(#loc396)
            cir.yield loc(#loc46)
          } while {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc114)
            %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc114)
            cir.condition(%17) loc(#loc114)
          } loc(#loc373)
        } loc(#loc373)
        cir.scope {
          %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc117)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc118)
          %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc118)
          %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc398)
          cir.if %19 {
            %20 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc120)
            %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc121)
          } loc(#loc399)
        } loc(#loc397)
      } loc(#loc368)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc122)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc123)
      cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc400)
    } loc(#loc366)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc402)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc128)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc129)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc402)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc404)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc133)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc133)
        cir.store %10, %8 : !u64i, !cir.ptr<!u64i> loc(#loc404)
        cir.scope {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc136)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc136)
          cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc406)
          cir.for : cond {
            %13 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc138)
            %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc139)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc139)
            %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc407)
            cir.condition(%16) loc(#loc140)
          } body {
            cir.scope {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc18)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc18)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc142)
            } loc(#loc408)
            cir.yield loc(#loc135)
          } step {
            %13 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc143)
            %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc144)
            cir.store %14, %8 : !u64i, !cir.ptr<!u64i> loc(#loc409)
            cir.yield loc(#loc405)
          } loc(#loc405)
        } loc(#loc405)
      } loc(#loc403)
    } loc(#loc401)
    cir.return loc(#loc20)
  } loc(#loc361)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_for_loop_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc411)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc147)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc412)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc149)
    cir.return loc(#loc146)
  } loc(#loc410)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc413)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc414)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc158)
  cir.func @main(%arg0: !s32i loc(fused[#loc161, #loc162]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc163, #loc164])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc416)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc417)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc160)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc165)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc166)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc167)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc167)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc168)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc155)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc169)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__connect_socket_for_loop_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc418)
    cir.call @CWE400_Resource_Exhaustion__connect_socket_for_loop_32_good() : () -> () loc(#loc170)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc156)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc156)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc172)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc157)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc157)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc173)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__connect_socket_for_loop_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc419)
    cir.call @CWE400_Resource_Exhaustion__connect_socket_for_loop_32_bad() : () -> () loc(#loc174)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc158)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc158)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc176)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc177)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc420)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc420)
    cir.return %17 : !s32i loc(#loc420)
  } loc(#loc415)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc422)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr1", init] {alignment = 8 : i64} loc(#loc423)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr2", init] {alignment = 8 : i64} loc(#loc424)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc423)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc424)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc187)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc188)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc425)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc427)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc193)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc194)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc427)
      %8 = cir.const #cir.int<20> : !s32i loc(#loc195)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc428)
      %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc197)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc198)
      cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc429)
    } loc(#loc426)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc431)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc203)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc204)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc431)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc433)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc208)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc208)
        cir.store %10, %8 : !u64i, !cir.ptr<!u64i> loc(#loc433)
        cir.scope {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc211)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc211)
          cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc435)
          cir.for : cond {
            %13 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc213)
            %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc214)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc214)
            %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc436)
            cir.condition(%16) loc(#loc215)
          } body {
            cir.scope {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc217)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc217)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc218)
            } loc(#loc437)
            cir.yield loc(#loc210)
          } step {
            %13 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc219)
            %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc220)
            cir.store %14, %8 : !u64i, !cir.ptr<!u64i> loc(#loc438)
            cir.yield loc(#loc434)
          } loc(#loc434)
        } loc(#loc434)
      } loc(#loc432)
    } loc(#loc430)
    cir.return loc(#loc180)
  } loc(#loc421)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc440)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr1", init] {alignment = 8 : i64} loc(#loc441)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["countPtr2", init] {alignment = 8 : i64} loc(#loc442)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc441)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc442)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc229)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc230)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc443)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc445)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc235)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc236)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc445)
      cir.scope {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc447)
        %11 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc448)
        %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc449)
        %13 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc450)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc244)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc244)
        cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc449)
        cir.scope {
          cir.do {
            %16 = cir.const #cir.int<2> : !s32i loc(#loc249)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc250)
            %18 = cir.const #cir.int<6> : !s32i loc(#loc251)
            %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc252)
            cir.store %19, %12 : !s32i, !cir.ptr<!s32i> loc(#loc452)
            cir.scope {
              %58 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc257)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc258)
              %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc258)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc454)
              cir.if %61 {
                cir.break loc(#loc260)
              } loc(#loc455)
            } loc(#loc453)
            %20 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc456)
            %21 = cir.const #cir.int<0> : !s32i loc(#loc263)
            %22 = cir.const #cir.int<16> : !u64i loc(#loc457)
            cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc458)
            %23 = cir.const #cir.int<2> : !s32i loc(#loc268)
            %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc268)
            %25 = cir.get_member %11[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
            cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc459)
            %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc270)
            %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc270)
            %28 = cir.call @inet_addr(%27) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc271)
            %29 = cir.get_member %11[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
            %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
            cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc460)
            %31 = cir.const #cir.int<27015> : !s32i loc(#loc274)
            %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc274)
            %33 = cir.call @htons(%32) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc275)
            %34 = cir.get_member %11[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
            cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc461)
            cir.scope {
              %58 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc280)
              %59 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc463)
              %60 = cir.const #cir.int<16> : !u64i loc(#loc464)
              %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc464)
              %62 = cir.call @connect(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc285)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc286)
              %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc286)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc465)
              cir.if %65 {
                cir.break loc(#loc288)
              } loc(#loc466)
            } loc(#loc462)
            %35 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc289)
            %36 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc290)
            %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc290)
            %38 = cir.const #cir.int<3> : !s32i loc(#loc291)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc291)
            %40 = cir.const #cir.int<4> : !u64i loc(#loc291)
            %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc291)
            %42 = cir.const #cir.int<2> : !s32i loc(#loc291)
            %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc291)
            %44 = cir.binop(add, %41, %43) : !u64i loc(#loc291)
            %45 = cir.const #cir.int<1> : !s32i loc(#loc292)
            %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc292)
            %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc467)
            %48 = cir.const #cir.int<0> : !s32i loc(#loc293)
            %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc294)
            %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc294)
            cir.store %50, %10 : !s32i, !cir.ptr<!s32i> loc(#loc468)
            cir.scope {
              %58 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc299)
              %59 = cir.const #cir.int<1> : !s32i loc(#loc300)
              %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc300)
              %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc470)
              %62 = cir.ternary(%61, true {
                %63 = cir.const #true loc(#loc301)
                cir.yield %63 : !cir.bool loc(#loc301)
              }, false {
                %63 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc302)
                %64 = cir.const #cir.int<0> : !s32i loc(#loc303)
                %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc471)
                %66 = cir.ternary(%65, true {
                  %67 = cir.const #true loc(#loc301)
                  cir.yield %67 : !cir.bool loc(#loc301)
                }, false {
                  %67 = cir.const #false loc(#loc301)
                  cir.yield %67 : !cir.bool loc(#loc301)
                }) : (!cir.bool) -> !cir.bool loc(#loc301)
                cir.yield %66 : !cir.bool loc(#loc301)
              }) : (!cir.bool) -> !cir.bool loc(#loc301)
              cir.if %62 {
                cir.break loc(#loc305)
              } loc(#loc472)
            } loc(#loc469)
            %51 = cir.const #cir.int<0> : !s32i loc(#loc306)
            %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc306)
            %53 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc307)
            %54 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc308)
            %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc308)
            cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc473)
            %56 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc309)
            %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc310)
            cir.store %57, %5 : !s32i, !cir.ptr<!s32i> loc(#loc474)
            cir.yield loc(#loc248)
          } while {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc313)
            %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc313)
            cir.condition(%17) loc(#loc313)
          } loc(#loc451)
        } loc(#loc451)
        cir.scope {
          %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc316)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc317)
          %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc317)
          %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc476)
          cir.if %19 {
            %20 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc319)
            %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc320)
          } loc(#loc477)
        } loc(#loc475)
      } loc(#loc446)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc321)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc322)
      cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc478)
    } loc(#loc444)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc480)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc327)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc328)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc480)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc482)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc332)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc332)
        cir.store %10, %8 : !u64i, !cir.ptr<!u64i> loc(#loc482)
        cir.scope {
          %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc335)
          %12 = cir.const #cir.int<0> : !s32i loc(#loc336)
          %13 = cir.cmp(gt, %11, %12) : !s32i, !cir.bool loc(#loc484)
          %14 = cir.ternary(%13, true {
            %15 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc338)
            %16 = cir.const #cir.int<20> : !s32i loc(#loc339)
            %17 = cir.cmp(le, %15, %16) : !s32i, !cir.bool loc(#loc485)
            %18 = cir.ternary(%17, true {
              %19 = cir.const #true loc(#loc337)
              cir.yield %19 : !cir.bool loc(#loc337)
            }, false {
              %19 = cir.const #false loc(#loc337)
              cir.yield %19 : !cir.bool loc(#loc337)
            }) : (!cir.bool) -> !cir.bool loc(#loc337)
            cir.yield %18 : !cir.bool loc(#loc337)
          }, false {
            %15 = cir.const #false loc(#loc337)
            cir.yield %15 : !cir.bool loc(#loc337)
          }) : (!cir.bool) -> !cir.bool loc(#loc337)
          cir.if %14 {
            cir.scope {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc343)
              %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc343)
              cir.store %16, %8 : !u64i, !cir.ptr<!u64i> loc(#loc488)
              cir.for : cond {
                %17 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc345)
                %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc346)
                %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc346)
                %20 = cir.cmp(lt, %17, %19) : !u64i, !cir.bool loc(#loc489)
                cir.condition(%20) loc(#loc347)
              } body {
                cir.scope {
                  %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc349)
                  %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc349)
                  cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc350)
                } loc(#loc490)
                cir.yield loc(#loc342)
              } step {
                %17 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc351)
                %18 = cir.unary(inc, %17) : !u64i, !u64i loc(#loc352)
                cir.store %18, %8 : !u64i, !cir.ptr<!u64i> loc(#loc491)
                cir.yield loc(#loc487)
              } loc(#loc487)
            } loc(#loc487)
          } loc(#loc486)
        } loc(#loc483)
      } loc(#loc481)
    } loc(#loc479)
    cir.return loc(#loc222)
  } loc(#loc439)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":79:53)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc18 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":118:27)
#loc19 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":44:1)
#loc20 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":122:1)
#loc21 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":46:5)
#loc22 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":46:9)
#loc23 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":47:5)
#loc24 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":47:23)
#loc25 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":48:5)
#loc26 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":48:23)
#loc27 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":50:14)
#loc28 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":50:13)
#loc29 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":50:5)
#loc30 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":51:5)
#loc31 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":110:5)
#loc32 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":52:9)
#loc33 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":52:22)
#loc34 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":52:21)
#loc35 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":53:9)
#loc36 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":108:9)
#loc37 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":58:13)
#loc38 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":58:17)
#loc39 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":59:13)
#loc40 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":59:32)
#loc41 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":60:13)
#loc42 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":60:36)
#loc43 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":61:13)
#loc44 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":61:45)
#loc45 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":62:13)
#loc46 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":97:21)
#loc47 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":72:40)
#loc48 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":72:49)
#loc49 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":72:62)
#loc50 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":72:33)
#loc51 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":72:17)
#loc52 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":72:73)
#loc53 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":73:17)
#loc54 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":76:17)
#loc55 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":73:21)
#loc56 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":73:38)
#loc57 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":74:17)
#loc58 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":75:21)
#loc59 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":77:24)
#loc60 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":77:25)
#loc61 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":77:34)
#loc62 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":77:37)
#loc63 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":77:51)
#loc64 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":77:17)
#loc65 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":77:52)
#loc66 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":78:38)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":78:17)
#loc69 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":79:43)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":79:17)
#loc73 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":79:63)
#loc74 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":80:42)
#loc75 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":80:36)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":80:17)
#loc78 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":80:50)
#loc79 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":81:17)
#loc80 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":84:17)
#loc81 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":81:29)
#loc82 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":81:62)
#loc83 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":81:63)
#loc84 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":81:72)
#loc85 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":81:86)
#loc86 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":81:21)
#loc87 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":81:92)
#loc88 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":82:17)
#loc89 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":83:21)
#loc90 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":87:35)
#loc91 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":87:50)
#loc92 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":87:63)
#loc93 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":87:81)
#loc94 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":87:84)
#loc95 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":87:30)
#loc96 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":87:17)
#loc97 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":87:85)
#loc98 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":88:17)
#loc99 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":91:17)
#loc100 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":88:21)
#loc101 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":88:35)
#loc102 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":88:48)
#loc103 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":88:51)
#loc104 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":88:65)
#loc105 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":89:17)
#loc106 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":90:21)
#loc107 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":93:43)
#loc108 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":93:29)
#loc109 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":93:17)
#loc110 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":95:30)
#loc111 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":95:25)
#loc112 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":95:17)
#loc113 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":95:41)
#loc114 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":97:20)
#loc115 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":98:13)
#loc116 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":101:13)
#loc117 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":98:17)
#loc118 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":98:34)
#loc119 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":99:13)
#loc120 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":100:30)
#loc121 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":100:17)
#loc122 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":109:22)
#loc123 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":109:10)
#loc124 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":109:9)
#loc125 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":111:5)
#loc126 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":121:5)
#loc127 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":112:9)
#loc128 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":112:22)
#loc129 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":112:21)
#loc130 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":113:9)
#loc131 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":120:9)
#loc132 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":114:13)
#loc133 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":114:24)
#loc134 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":116:13)
#loc135 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":119:13)
#loc136 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":116:22)
#loc137 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":116:18)
#loc138 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":116:25)
#loc139 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":116:37)
#loc140 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":116:27)
#loc141 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":117:13)
#loc142 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":118:17)
#loc143 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":116:45)
#loc144 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":116:44)
#loc145 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":239:1)
#loc146 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":243:1)
#loc147 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":241:5)
#loc148 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":241:13)
#loc149 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":242:5)
#loc150 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":242:13)
#loc151 = loc("/usr/include/stdlib.h":575:1)
#loc152 = loc("/usr/include/stdlib.h":575:41)
#loc153 = loc("/usr/include/time.h":76:1)
#loc154 = loc("/usr/include/time.h":76:38)
#loc155 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":258:15)
#loc156 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":260:15)
#loc157 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":263:15)
#loc158 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":265:15)
#loc159 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":253:1)
#loc160 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":268:1)
#loc165 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":254:1)
#loc166 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":256:27)
#loc167 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":256:22)
#loc168 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":256:5)
#loc169 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":258:5)
#loc170 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":259:5)
#loc171 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":259:65)
#loc172 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":260:5)
#loc173 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":263:5)
#loc174 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":264:5)
#loc175 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":264:64)
#loc176 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":265:5)
#loc177 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":267:12)
#loc178 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":267:5)
#loc179 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":129:1)
#loc180 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":153:1)
#loc181 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":131:5)
#loc182 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":131:9)
#loc183 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":132:5)
#loc184 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":132:23)
#loc185 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":133:5)
#loc186 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":133:23)
#loc187 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":135:14)
#loc188 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":135:13)
#loc189 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":135:5)
#loc190 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":136:5)
#loc191 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":141:5)
#loc192 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":137:9)
#loc193 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":137:22)
#loc194 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":137:21)
#loc195 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":139:17)
#loc196 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":139:9)
#loc197 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":140:22)
#loc198 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":140:10)
#loc199 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":140:9)
#loc200 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":142:5)
#loc201 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":152:5)
#loc202 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":143:9)
#loc203 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":143:22)
#loc204 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":143:21)
#loc205 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":144:9)
#loc206 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":151:9)
#loc207 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":145:13)
#loc208 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":145:24)
#loc209 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":147:13)
#loc210 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":150:13)
#loc211 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":147:22)
#loc212 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":147:18)
#loc213 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":147:25)
#loc214 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":147:37)
#loc215 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":147:27)
#loc216 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":148:13)
#loc217 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":149:27)
#loc218 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":149:17)
#loc219 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":147:45)
#loc220 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":147:44)
#loc221 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":156:1)
#loc222 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":237:1)
#loc223 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":158:5)
#loc224 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":158:9)
#loc225 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":159:5)
#loc226 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":159:23)
#loc227 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":160:5)
#loc228 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":160:23)
#loc229 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":162:14)
#loc230 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":162:13)
#loc231 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":162:5)
#loc232 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":163:5)
#loc233 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":222:5)
#loc234 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":164:9)
#loc235 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":164:22)
#loc236 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":164:21)
#loc237 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":165:9)
#loc238 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":220:9)
#loc239 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":170:13)
#loc240 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":170:17)
#loc241 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":171:13)
#loc242 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":171:32)
#loc243 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":172:13)
#loc244 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":172:36)
#loc245 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":173:13)
#loc246 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":173:45)
#loc247 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":174:13)
#loc248 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":209:21)
#loc249 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":184:40)
#loc250 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":184:49)
#loc251 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":184:62)
#loc252 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":184:33)
#loc253 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":184:17)
#loc254 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":184:73)
#loc255 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":185:17)
#loc256 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":188:17)
#loc257 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":185:21)
#loc258 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":185:38)
#loc259 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":186:17)
#loc260 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":187:21)
#loc261 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":189:24)
#loc262 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":189:25)
#loc263 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":189:34)
#loc264 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":189:37)
#loc265 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":189:51)
#loc266 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":189:17)
#loc267 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":189:52)
#loc268 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":190:38)
#loc269 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":190:17)
#loc270 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":191:53)
#loc271 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":191:43)
#loc272 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":191:17)
#loc273 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":191:63)
#loc274 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":192:42)
#loc275 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":192:36)
#loc276 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":192:17)
#loc277 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":192:50)
#loc278 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":193:17)
#loc279 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":196:17)
#loc280 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":193:29)
#loc281 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":193:62)
#loc282 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":193:63)
#loc283 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":193:72)
#loc284 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":193:86)
#loc285 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":193:21)
#loc286 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":193:92)
#loc287 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":194:17)
#loc288 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":195:21)
#loc289 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":199:35)
#loc290 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":199:50)
#loc291 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":199:63)
#loc292 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":199:81)
#loc293 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":199:84)
#loc294 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":199:30)
#loc295 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":199:17)
#loc296 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":199:85)
#loc297 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":200:17)
#loc298 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":203:17)
#loc299 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":200:21)
#loc300 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":200:35)
#loc301 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":200:48)
#loc302 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":200:51)
#loc303 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":200:65)
#loc304 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":201:17)
#loc305 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":202:21)
#loc306 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":205:43)
#loc307 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":205:29)
#loc308 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":205:17)
#loc309 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":207:30)
#loc310 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":207:25)
#loc311 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":207:17)
#loc312 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":207:41)
#loc313 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":209:20)
#loc314 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":210:13)
#loc315 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":213:13)
#loc316 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":210:17)
#loc317 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":210:34)
#loc318 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":211:13)
#loc319 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":212:30)
#loc320 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":212:17)
#loc321 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":221:22)
#loc322 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":221:10)
#loc323 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":221:9)
#loc324 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":223:5)
#loc325 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":236:5)
#loc326 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":224:9)
#loc327 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":224:22)
#loc328 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":224:21)
#loc329 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":225:9)
#loc330 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":235:9)
#loc331 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":226:13)
#loc332 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":226:24)
#loc333 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":228:13)
#loc334 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":234:13)
#loc335 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":228:17)
#loc336 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":228:25)
#loc337 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":228:27)
#loc338 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":228:30)
#loc339 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":228:39)
#loc340 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":229:13)
#loc341 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":230:17)
#loc342 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":233:17)
#loc343 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":230:26)
#loc344 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":230:22)
#loc345 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":230:29)
#loc346 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":230:41)
#loc347 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":230:31)
#loc348 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":231:17)
#loc349 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":232:31)
#loc350 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":232:21)
#loc351 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":230:49)
#loc352 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_32.c":230:48)
#loc353 = loc(fused[#loc1, #loc2])
#loc354 = loc(fused[#loc3, #loc4])
#loc355 = loc(fused[#loc6, #loc7])
#loc356 = loc(fused[#loc8, #loc9])
#loc357 = loc(fused[#loc10, #loc11])
#loc358 = loc(fused[#loc12, #loc13])
#loc359 = loc(fused[#loc14, #loc15])
#loc360 = loc(fused[#loc16, #loc17])
#loc361 = loc(fused[#loc19, #loc20])
#loc362 = loc(fused[#loc21, #loc22])
#loc363 = loc(fused[#loc23, #loc24])
#loc364 = loc(fused[#loc25, #loc26])
#loc365 = loc(fused[#loc29, #loc27])
#loc366 = loc(fused[#loc30, #loc31])
#loc367 = loc(fused[#loc32, #loc33])
#loc368 = loc(fused[#loc35, #loc36])
#loc369 = loc(fused[#loc37, #loc38])
#loc370 = loc(fused[#loc39, #loc40])
#loc371 = loc(fused[#loc41, #loc42])
#loc372 = loc(fused[#loc43, #loc44])
#loc373 = loc(fused[#loc45, #loc46])
#loc374 = loc(fused[#loc51, #loc52])
#loc375 = loc(fused[#loc53, #loc54])
#loc376 = loc(fused[#loc55, #loc56])
#loc377 = loc(fused[#loc57, #loc54])
#loc378 = loc(fused[#loc59, #loc60])
#loc379 = loc(fused[#loc62, #loc63])
#loc380 = loc(fused[#loc64, #loc65])
#loc381 = loc(fused[#loc68, #loc66])
#loc382 = loc(fused[#loc72, #loc73])
#loc383 = loc(fused[#loc77, #loc78])
#loc384 = loc(fused[#loc79, #loc80])
#loc385 = loc(fused[#loc82, #loc83])
#loc386 = loc(fused[#loc84, #loc85])
#loc387 = loc(fused[#loc86, #loc87])
#loc388 = loc(fused[#loc88, #loc80])
#loc389 = loc(fused[#loc92, #loc93])
#loc390 = loc(fused[#loc96, #loc97])
#loc391 = loc(fused[#loc98, #loc99])
#loc392 = loc(fused[#loc100, #loc101])
#loc393 = loc(fused[#loc103, #loc104])
#loc394 = loc(fused[#loc105, #loc99])
#loc395 = loc(fused[#loc109, #loc107])
#loc396 = loc(fused[#loc112, #loc113])
#loc397 = loc(fused[#loc115, #loc116])
#loc398 = loc(fused[#loc117, #loc118])
#loc399 = loc(fused[#loc119, #loc116])
#loc400 = loc(fused[#loc124, #loc122])
#loc401 = loc(fused[#loc125, #loc126])
#loc402 = loc(fused[#loc127, #loc128])
#loc403 = loc(fused[#loc130, #loc131])
#loc404 = loc(fused[#loc132, #loc133])
#loc405 = loc(fused[#loc134, #loc135])
#loc406 = loc(fused[#loc137, #loc136])
#loc407 = loc(fused[#loc138, #loc139])
#loc408 = loc(fused[#loc141, #loc135])
#loc409 = loc(fused[#loc144, #loc143])
#loc410 = loc(fused[#loc145, #loc146])
#loc411 = loc(fused[#loc147, #loc148])
#loc412 = loc(fused[#loc149, #loc150])
#loc413 = loc(fused[#loc151, #loc152])
#loc414 = loc(fused[#loc153, #loc154])
#loc415 = loc(fused[#loc159, #loc160])
#loc418 = loc(fused[#loc170, #loc171])
#loc419 = loc(fused[#loc174, #loc175])
#loc420 = loc(fused[#loc178, #loc177])
#loc421 = loc(fused[#loc179, #loc180])
#loc422 = loc(fused[#loc181, #loc182])
#loc423 = loc(fused[#loc183, #loc184])
#loc424 = loc(fused[#loc185, #loc186])
#loc425 = loc(fused[#loc189, #loc187])
#loc426 = loc(fused[#loc190, #loc191])
#loc427 = loc(fused[#loc192, #loc193])
#loc428 = loc(fused[#loc196, #loc195])
#loc429 = loc(fused[#loc199, #loc197])
#loc430 = loc(fused[#loc200, #loc201])
#loc431 = loc(fused[#loc202, #loc203])
#loc432 = loc(fused[#loc205, #loc206])
#loc433 = loc(fused[#loc207, #loc208])
#loc434 = loc(fused[#loc209, #loc210])
#loc435 = loc(fused[#loc212, #loc211])
#loc436 = loc(fused[#loc213, #loc214])
#loc437 = loc(fused[#loc216, #loc210])
#loc438 = loc(fused[#loc220, #loc219])
#loc439 = loc(fused[#loc221, #loc222])
#loc440 = loc(fused[#loc223, #loc224])
#loc441 = loc(fused[#loc225, #loc226])
#loc442 = loc(fused[#loc227, #loc228])
#loc443 = loc(fused[#loc231, #loc229])
#loc444 = loc(fused[#loc232, #loc233])
#loc445 = loc(fused[#loc234, #loc235])
#loc446 = loc(fused[#loc237, #loc238])
#loc447 = loc(fused[#loc239, #loc240])
#loc448 = loc(fused[#loc241, #loc242])
#loc449 = loc(fused[#loc243, #loc244])
#loc450 = loc(fused[#loc245, #loc246])
#loc451 = loc(fused[#loc247, #loc248])
#loc452 = loc(fused[#loc253, #loc254])
#loc453 = loc(fused[#loc255, #loc256])
#loc454 = loc(fused[#loc257, #loc258])
#loc455 = loc(fused[#loc259, #loc256])
#loc456 = loc(fused[#loc261, #loc262])
#loc457 = loc(fused[#loc264, #loc265])
#loc458 = loc(fused[#loc266, #loc267])
#loc459 = loc(fused[#loc269, #loc268])
#loc460 = loc(fused[#loc272, #loc273])
#loc461 = loc(fused[#loc276, #loc277])
#loc462 = loc(fused[#loc278, #loc279])
#loc463 = loc(fused[#loc281, #loc282])
#loc464 = loc(fused[#loc283, #loc284])
#loc465 = loc(fused[#loc285, #loc286])
#loc466 = loc(fused[#loc287, #loc279])
#loc467 = loc(fused[#loc291, #loc292])
#loc468 = loc(fused[#loc295, #loc296])
#loc469 = loc(fused[#loc297, #loc298])
#loc470 = loc(fused[#loc299, #loc300])
#loc471 = loc(fused[#loc302, #loc303])
#loc472 = loc(fused[#loc304, #loc298])
#loc473 = loc(fused[#loc308, #loc306])
#loc474 = loc(fused[#loc311, #loc312])
#loc475 = loc(fused[#loc314, #loc315])
#loc476 = loc(fused[#loc316, #loc317])
#loc477 = loc(fused[#loc318, #loc315])
#loc478 = loc(fused[#loc323, #loc321])
#loc479 = loc(fused[#loc324, #loc325])
#loc480 = loc(fused[#loc326, #loc327])
#loc481 = loc(fused[#loc329, #loc330])
#loc482 = loc(fused[#loc331, #loc332])
#loc483 = loc(fused[#loc333, #loc334])
#loc484 = loc(fused[#loc335, #loc336])
#loc485 = loc(fused[#loc338, #loc339])
#loc486 = loc(fused[#loc340, #loc334])
#loc487 = loc(fused[#loc341, #loc342])
#loc488 = loc(fused[#loc344, #loc343])
#loc489 = loc(fused[#loc345, #loc346])
#loc490 = loc(fused[#loc348, #loc342])
#loc491 = loc(fused[#loc352, #loc351])
