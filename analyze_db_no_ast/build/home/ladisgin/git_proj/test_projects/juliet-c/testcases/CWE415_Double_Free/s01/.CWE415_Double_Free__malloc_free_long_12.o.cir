!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_long_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func no_proto private  @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc177)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc178)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc179)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc180)
  cir.func no_proto  @CWE415_Double_Free__malloc_free_long_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc182)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc183)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc185)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc185)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc17)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc17)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc22)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc23)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc23)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc187)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc188)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc22)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc189)
        cir.store %12, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc190)
        cir.scope {
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc30)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc31)
          %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s64i>, !s32i loc(#loc192)
          %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc32)
          cir.if %20 {
            %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc34)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc35)
            %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc36)
            cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
          } loc(#loc193)
        } loc(#loc191)
        %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc37)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc38)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc38)
        cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc37)
      } else {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc39)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc40)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc40)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc194)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc195)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc39)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc196)
        cir.store %12, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc197)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc47)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc48)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc48)
          %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s64i>, !s32i loc(#loc199)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc49)
          cir.if %17 {
            %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc51)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc52)
            %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc53)
            cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc51)
          } loc(#loc200)
        } loc(#loc198)
      } loc(#loc186)
    } loc(#loc184)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc202)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc202)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc56)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc56)
      cir.if %5 {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc61)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc62)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc62)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
      } else {
      } loc(#loc203)
    } loc(#loc201)
    cir.return loc(#loc10)
  } loc(#loc181)
  cir.func no_proto  @CWE415_Double_Free__malloc_free_long_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc64)
  } loc(#loc204)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc73)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc209)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc211)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc211)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc77)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc77)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc82)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc83)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc83)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc213)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc214)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc82)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc215)
        cir.store %12, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc216)
        cir.scope {
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc90)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc91)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc91)
          %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s64i>, !s32i loc(#loc218)
          %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc92)
          cir.if %20 {
            %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc94)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc95)
            %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc96)
            cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc94)
          } loc(#loc219)
        } loc(#loc217)
        %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc97)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc98)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc98)
        cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc97)
      } else {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc99)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc100)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc100)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc220)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc221)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc99)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc222)
        cir.store %12, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc223)
        cir.scope {
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc107)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc108)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc108)
          %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s64i>, !s32i loc(#loc225)
          %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc109)
          cir.if %20 {
            %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc111)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc112)
            %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc113)
            cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc111)
          } loc(#loc226)
        } loc(#loc224)
        %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc114)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc115)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc115)
        cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc114)
      } loc(#loc212)
    } loc(#loc210)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc228)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc228)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc118)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc118)
      cir.if %5 {
      } else {
      } loc(#loc229)
    } loc(#loc227)
    cir.return loc(#loc70)
  } loc(#loc207)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc231)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc127)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc232)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc234)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc234)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc131)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc131)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc136)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc137)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc137)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc236)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc237)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc136)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc238)
        cir.store %12, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc239)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc144)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc145)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc145)
          %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s64i>, !s32i loc(#loc241)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc146)
          cir.if %17 {
            %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc148)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc149)
            %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc150)
            cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc148)
          } loc(#loc242)
        } loc(#loc240)
      } else {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc151)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc152)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc152)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc243)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc244)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc151)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc245)
        cir.store %12, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc246)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc159)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc160)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc160)
          %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s64i>, !s32i loc(#loc248)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc161)
          cir.if %17 {
            %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc163)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc164)
            %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc165)
            cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc163)
          } loc(#loc249)
        } loc(#loc247)
      } loc(#loc235)
    } loc(#loc233)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc251)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc251)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc168)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc168)
      cir.if %5 {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc173)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc174)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc174)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc173)
      } else {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc175)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc176)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc176)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc175)
      } loc(#loc252)
    } loc(#loc250)
    cir.return loc(#loc124)
  } loc(#loc230)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_long_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE415_Double_Free__malloc_free_long_12.c":24:1)
#loc10 = loc("CWE415_Double_Free__malloc_free_long_12.c":53:1)
#loc11 = loc("CWE415_Double_Free__malloc_free_long_12.c":26:5)
#loc12 = loc("CWE415_Double_Free__malloc_free_long_12.c":26:12)
#loc13 = loc("CWE415_Double_Free__malloc_free_long_12.c":28:12)
#loc14 = loc("CWE415_Double_Free__malloc_free_long_12.c":28:5)
#loc15 = loc("CWE415_Double_Free__malloc_free_long_12.c":29:5)
#loc16 = loc("CWE415_Double_Free__malloc_free_long_12.c":41:5)
#loc17 = loc("CWE415_Double_Free__malloc_free_long_12.c":29:8)
#loc18 = loc("CWE415_Double_Free__malloc_free_long_12.c":29:33)
#loc19 = loc("CWE415_Double_Free__malloc_free_long_12.c":30:5)
#loc20 = loc("CWE415_Double_Free__malloc_free_long_12.c":35:5)
#loc21 = loc("CWE415_Double_Free__malloc_free_long_12.c":37:5)
#loc22 = loc("CWE415_Double_Free__malloc_free_long_12.c":31:24)
#loc23 = loc("CWE415_Double_Free__malloc_free_long_12.c":31:31)
#loc24 = loc("CWE415_Double_Free__malloc_free_long_12.c":31:35)
#loc25 = loc("CWE415_Double_Free__malloc_free_long_12.c":31:46)
#loc26 = loc("CWE415_Double_Free__malloc_free_long_12.c":31:47)
#loc27 = loc("CWE415_Double_Free__malloc_free_long_12.c":31:9)
#loc28 = loc("CWE415_Double_Free__malloc_free_long_12.c":32:9)
#loc29 = loc("CWE415_Double_Free__malloc_free_long_12.c":32:37)
#loc30 = loc("CWE415_Double_Free__malloc_free_long_12.c":32:13)
#loc31 = loc("CWE415_Double_Free__malloc_free_long_12.c":32:21)
#loc32 = loc("CWE415_Double_Free__malloc_free_long_12.c":32:18)
#loc33 = loc("CWE415_Double_Free__malloc_free_long_12.c":32:27)
#loc34 = loc("CWE415_Double_Free__malloc_free_long_12.c":32:28)
#loc35 = loc("CWE415_Double_Free__malloc_free_long_12.c":32:34)
#loc36 = loc("CWE415_Double_Free__malloc_free_long_12.c":32:33)
#loc37 = loc("CWE415_Double_Free__malloc_free_long_12.c":34:9)
#loc38 = loc("CWE415_Double_Free__malloc_free_long_12.c":34:14)
#loc39 = loc("CWE415_Double_Free__malloc_free_long_12.c":38:24)
#loc40 = loc("CWE415_Double_Free__malloc_free_long_12.c":38:31)
#loc41 = loc("CWE415_Double_Free__malloc_free_long_12.c":38:35)
#loc42 = loc("CWE415_Double_Free__malloc_free_long_12.c":38:46)
#loc43 = loc("CWE415_Double_Free__malloc_free_long_12.c":38:47)
#loc44 = loc("CWE415_Double_Free__malloc_free_long_12.c":38:9)
#loc45 = loc("CWE415_Double_Free__malloc_free_long_12.c":39:9)
#loc46 = loc("CWE415_Double_Free__malloc_free_long_12.c":39:37)
#loc47 = loc("CWE415_Double_Free__malloc_free_long_12.c":39:13)
#loc48 = loc("CWE415_Double_Free__malloc_free_long_12.c":39:21)
#loc49 = loc("CWE415_Double_Free__malloc_free_long_12.c":39:18)
#loc50 = loc("CWE415_Double_Free__malloc_free_long_12.c":39:27)
#loc51 = loc("CWE415_Double_Free__malloc_free_long_12.c":39:28)
#loc52 = loc("CWE415_Double_Free__malloc_free_long_12.c":39:34)
#loc53 = loc("CWE415_Double_Free__malloc_free_long_12.c":39:33)
#loc54 = loc("CWE415_Double_Free__malloc_free_long_12.c":42:5)
#loc55 = loc("CWE415_Double_Free__malloc_free_long_12.c":52:5)
#loc56 = loc("CWE415_Double_Free__malloc_free_long_12.c":42:8)
#loc57 = loc("CWE415_Double_Free__malloc_free_long_12.c":42:33)
#loc58 = loc("CWE415_Double_Free__malloc_free_long_12.c":43:5)
#loc59 = loc("CWE415_Double_Free__malloc_free_long_12.c":46:5)
#loc60 = loc("CWE415_Double_Free__malloc_free_long_12.c":48:5)
#loc61 = loc("CWE415_Double_Free__malloc_free_long_12.c":45:9)
#loc62 = loc("CWE415_Double_Free__malloc_free_long_12.c":45:14)
#loc63 = loc("CWE415_Double_Free__malloc_free_long_12.c":127:1)
#loc64 = loc("CWE415_Double_Free__malloc_free_long_12.c":131:1)
#loc65 = loc("CWE415_Double_Free__malloc_free_long_12.c":129:5)
#loc66 = loc("CWE415_Double_Free__malloc_free_long_12.c":129:13)
#loc67 = loc("CWE415_Double_Free__malloc_free_long_12.c":130:5)
#loc68 = loc("CWE415_Double_Free__malloc_free_long_12.c":130:13)
#loc69 = loc("CWE415_Double_Free__malloc_free_long_12.c":62:1)
#loc70 = loc("CWE415_Double_Free__malloc_free_long_12.c":93:1)
#loc71 = loc("CWE415_Double_Free__malloc_free_long_12.c":64:5)
#loc72 = loc("CWE415_Double_Free__malloc_free_long_12.c":64:12)
#loc73 = loc("CWE415_Double_Free__malloc_free_long_12.c":66:12)
#loc74 = loc("CWE415_Double_Free__malloc_free_long_12.c":66:5)
#loc75 = loc("CWE415_Double_Free__malloc_free_long_12.c":67:5)
#loc76 = loc("CWE415_Double_Free__malloc_free_long_12.c":80:5)
#loc77 = loc("CWE415_Double_Free__malloc_free_long_12.c":67:8)
#loc78 = loc("CWE415_Double_Free__malloc_free_long_12.c":67:33)
#loc79 = loc("CWE415_Double_Free__malloc_free_long_12.c":68:5)
#loc80 = loc("CWE415_Double_Free__malloc_free_long_12.c":73:5)
#loc81 = loc("CWE415_Double_Free__malloc_free_long_12.c":75:5)
#loc82 = loc("CWE415_Double_Free__malloc_free_long_12.c":69:24)
#loc83 = loc("CWE415_Double_Free__malloc_free_long_12.c":69:31)
#loc84 = loc("CWE415_Double_Free__malloc_free_long_12.c":69:35)
#loc85 = loc("CWE415_Double_Free__malloc_free_long_12.c":69:46)
#loc86 = loc("CWE415_Double_Free__malloc_free_long_12.c":69:47)
#loc87 = loc("CWE415_Double_Free__malloc_free_long_12.c":69:9)
#loc88 = loc("CWE415_Double_Free__malloc_free_long_12.c":70:9)
#loc89 = loc("CWE415_Double_Free__malloc_free_long_12.c":70:37)
#loc90 = loc("CWE415_Double_Free__malloc_free_long_12.c":70:13)
#loc91 = loc("CWE415_Double_Free__malloc_free_long_12.c":70:21)
#loc92 = loc("CWE415_Double_Free__malloc_free_long_12.c":70:18)
#loc93 = loc("CWE415_Double_Free__malloc_free_long_12.c":70:27)
#loc94 = loc("CWE415_Double_Free__malloc_free_long_12.c":70:28)
#loc95 = loc("CWE415_Double_Free__malloc_free_long_12.c":70:34)
#loc96 = loc("CWE415_Double_Free__malloc_free_long_12.c":70:33)
#loc97 = loc("CWE415_Double_Free__malloc_free_long_12.c":72:9)
#loc98 = loc("CWE415_Double_Free__malloc_free_long_12.c":72:14)
#loc99 = loc("CWE415_Double_Free__malloc_free_long_12.c":76:24)
#loc100 = loc("CWE415_Double_Free__malloc_free_long_12.c":76:31)
#loc101 = loc("CWE415_Double_Free__malloc_free_long_12.c":76:35)
#loc102 = loc("CWE415_Double_Free__malloc_free_long_12.c":76:46)
#loc103 = loc("CWE415_Double_Free__malloc_free_long_12.c":76:47)
#loc104 = loc("CWE415_Double_Free__malloc_free_long_12.c":76:9)
#loc105 = loc("CWE415_Double_Free__malloc_free_long_12.c":77:9)
#loc106 = loc("CWE415_Double_Free__malloc_free_long_12.c":77:37)
#loc107 = loc("CWE415_Double_Free__malloc_free_long_12.c":77:13)
#loc108 = loc("CWE415_Double_Free__malloc_free_long_12.c":77:21)
#loc109 = loc("CWE415_Double_Free__malloc_free_long_12.c":77:18)
#loc110 = loc("CWE415_Double_Free__malloc_free_long_12.c":77:27)
#loc111 = loc("CWE415_Double_Free__malloc_free_long_12.c":77:28)
#loc112 = loc("CWE415_Double_Free__malloc_free_long_12.c":77:34)
#loc113 = loc("CWE415_Double_Free__malloc_free_long_12.c":77:33)
#loc114 = loc("CWE415_Double_Free__malloc_free_long_12.c":79:9)
#loc115 = loc("CWE415_Double_Free__malloc_free_long_12.c":79:14)
#loc116 = loc("CWE415_Double_Free__malloc_free_long_12.c":81:5)
#loc117 = loc("CWE415_Double_Free__malloc_free_long_12.c":92:5)
#loc118 = loc("CWE415_Double_Free__malloc_free_long_12.c":81:8)
#loc119 = loc("CWE415_Double_Free__malloc_free_long_12.c":81:33)
#loc120 = loc("CWE415_Double_Free__malloc_free_long_12.c":82:5)
#loc121 = loc("CWE415_Double_Free__malloc_free_long_12.c":86:5)
#loc122 = loc("CWE415_Double_Free__malloc_free_long_12.c":88:5)
#loc123 = loc("CWE415_Double_Free__malloc_free_long_12.c":98:1)
#loc124 = loc("CWE415_Double_Free__malloc_free_long_12.c":125:1)
#loc125 = loc("CWE415_Double_Free__malloc_free_long_12.c":100:5)
#loc126 = loc("CWE415_Double_Free__malloc_free_long_12.c":100:12)
#loc127 = loc("CWE415_Double_Free__malloc_free_long_12.c":102:12)
#loc128 = loc("CWE415_Double_Free__malloc_free_long_12.c":102:5)
#loc129 = loc("CWE415_Double_Free__malloc_free_long_12.c":103:5)
#loc130 = loc("CWE415_Double_Free__malloc_free_long_12.c":114:5)
#loc131 = loc("CWE415_Double_Free__malloc_free_long_12.c":103:8)
#loc132 = loc("CWE415_Double_Free__malloc_free_long_12.c":103:33)
#loc133 = loc("CWE415_Double_Free__malloc_free_long_12.c":104:5)
#loc134 = loc("CWE415_Double_Free__malloc_free_long_12.c":108:5)
#loc135 = loc("CWE415_Double_Free__malloc_free_long_12.c":110:5)
#loc136 = loc("CWE415_Double_Free__malloc_free_long_12.c":105:24)
#loc137 = loc("CWE415_Double_Free__malloc_free_long_12.c":105:31)
#loc138 = loc("CWE415_Double_Free__malloc_free_long_12.c":105:35)
#loc139 = loc("CWE415_Double_Free__malloc_free_long_12.c":105:46)
#loc140 = loc("CWE415_Double_Free__malloc_free_long_12.c":105:47)
#loc141 = loc("CWE415_Double_Free__malloc_free_long_12.c":105:9)
#loc142 = loc("CWE415_Double_Free__malloc_free_long_12.c":106:9)
#loc143 = loc("CWE415_Double_Free__malloc_free_long_12.c":106:37)
#loc144 = loc("CWE415_Double_Free__malloc_free_long_12.c":106:13)
#loc145 = loc("CWE415_Double_Free__malloc_free_long_12.c":106:21)
#loc146 = loc("CWE415_Double_Free__malloc_free_long_12.c":106:18)
#loc147 = loc("CWE415_Double_Free__malloc_free_long_12.c":106:27)
#loc148 = loc("CWE415_Double_Free__malloc_free_long_12.c":106:28)
#loc149 = loc("CWE415_Double_Free__malloc_free_long_12.c":106:34)
#loc150 = loc("CWE415_Double_Free__malloc_free_long_12.c":106:33)
#loc151 = loc("CWE415_Double_Free__malloc_free_long_12.c":111:24)
#loc152 = loc("CWE415_Double_Free__malloc_free_long_12.c":111:31)
#loc153 = loc("CWE415_Double_Free__malloc_free_long_12.c":111:35)
#loc154 = loc("CWE415_Double_Free__malloc_free_long_12.c":111:46)
#loc155 = loc("CWE415_Double_Free__malloc_free_long_12.c":111:47)
#loc156 = loc("CWE415_Double_Free__malloc_free_long_12.c":111:9)
#loc157 = loc("CWE415_Double_Free__malloc_free_long_12.c":112:9)
#loc158 = loc("CWE415_Double_Free__malloc_free_long_12.c":112:37)
#loc159 = loc("CWE415_Double_Free__malloc_free_long_12.c":112:13)
#loc160 = loc("CWE415_Double_Free__malloc_free_long_12.c":112:21)
#loc161 = loc("CWE415_Double_Free__malloc_free_long_12.c":112:18)
#loc162 = loc("CWE415_Double_Free__malloc_free_long_12.c":112:27)
#loc163 = loc("CWE415_Double_Free__malloc_free_long_12.c":112:28)
#loc164 = loc("CWE415_Double_Free__malloc_free_long_12.c":112:34)
#loc165 = loc("CWE415_Double_Free__malloc_free_long_12.c":112:33)
#loc166 = loc("CWE415_Double_Free__malloc_free_long_12.c":115:5)
#loc167 = loc("CWE415_Double_Free__malloc_free_long_12.c":124:5)
#loc168 = loc("CWE415_Double_Free__malloc_free_long_12.c":115:8)
#loc169 = loc("CWE415_Double_Free__malloc_free_long_12.c":115:33)
#loc170 = loc("CWE415_Double_Free__malloc_free_long_12.c":116:5)
#loc171 = loc("CWE415_Double_Free__malloc_free_long_12.c":119:5)
#loc172 = loc("CWE415_Double_Free__malloc_free_long_12.c":121:5)
#loc173 = loc("CWE415_Double_Free__malloc_free_long_12.c":118:9)
#loc174 = loc("CWE415_Double_Free__malloc_free_long_12.c":118:14)
#loc175 = loc("CWE415_Double_Free__malloc_free_long_12.c":123:9)
#loc176 = loc("CWE415_Double_Free__malloc_free_long_12.c":123:14)
#loc177 = loc(fused[#loc1, #loc2])
#loc178 = loc(fused[#loc3, #loc4])
#loc179 = loc(fused[#loc5, #loc6])
#loc180 = loc(fused[#loc7, #loc8])
#loc181 = loc(fused[#loc9, #loc10])
#loc182 = loc(fused[#loc11, #loc12])
#loc183 = loc(fused[#loc14, #loc13])
#loc184 = loc(fused[#loc15, #loc16])
#loc185 = loc(fused[#loc17, #loc18])
#loc186 = loc(fused[#loc19, #loc20, #loc21, #loc16])
#loc187 = loc(fused[#loc24, #loc25])
#loc188 = loc(fused[#loc23, #loc25])
#loc189 = loc(fused[#loc22, #loc26])
#loc190 = loc(fused[#loc27, #loc26])
#loc191 = loc(fused[#loc28, #loc29])
#loc192 = loc(fused[#loc30, #loc31])
#loc193 = loc(fused[#loc33, #loc29])
#loc194 = loc(fused[#loc41, #loc42])
#loc195 = loc(fused[#loc40, #loc42])
#loc196 = loc(fused[#loc39, #loc43])
#loc197 = loc(fused[#loc44, #loc43])
#loc198 = loc(fused[#loc45, #loc46])
#loc199 = loc(fused[#loc47, #loc48])
#loc200 = loc(fused[#loc50, #loc46])
#loc201 = loc(fused[#loc54, #loc55])
#loc202 = loc(fused[#loc56, #loc57])
#loc203 = loc(fused[#loc58, #loc59, #loc60, #loc55])
#loc204 = loc(fused[#loc63, #loc64])
#loc205 = loc(fused[#loc65, #loc66])
#loc206 = loc(fused[#loc67, #loc68])
#loc207 = loc(fused[#loc69, #loc70])
#loc208 = loc(fused[#loc71, #loc72])
#loc209 = loc(fused[#loc74, #loc73])
#loc210 = loc(fused[#loc75, #loc76])
#loc211 = loc(fused[#loc77, #loc78])
#loc212 = loc(fused[#loc79, #loc80, #loc81, #loc76])
#loc213 = loc(fused[#loc84, #loc85])
#loc214 = loc(fused[#loc83, #loc85])
#loc215 = loc(fused[#loc82, #loc86])
#loc216 = loc(fused[#loc87, #loc86])
#loc217 = loc(fused[#loc88, #loc89])
#loc218 = loc(fused[#loc90, #loc91])
#loc219 = loc(fused[#loc93, #loc89])
#loc220 = loc(fused[#loc101, #loc102])
#loc221 = loc(fused[#loc100, #loc102])
#loc222 = loc(fused[#loc99, #loc103])
#loc223 = loc(fused[#loc104, #loc103])
#loc224 = loc(fused[#loc105, #loc106])
#loc225 = loc(fused[#loc107, #loc108])
#loc226 = loc(fused[#loc110, #loc106])
#loc227 = loc(fused[#loc116, #loc117])
#loc228 = loc(fused[#loc118, #loc119])
#loc229 = loc(fused[#loc120, #loc121, #loc122, #loc117])
#loc230 = loc(fused[#loc123, #loc124])
#loc231 = loc(fused[#loc125, #loc126])
#loc232 = loc(fused[#loc128, #loc127])
#loc233 = loc(fused[#loc129, #loc130])
#loc234 = loc(fused[#loc131, #loc132])
#loc235 = loc(fused[#loc133, #loc134, #loc135, #loc130])
#loc236 = loc(fused[#loc138, #loc139])
#loc237 = loc(fused[#loc137, #loc139])
#loc238 = loc(fused[#loc136, #loc140])
#loc239 = loc(fused[#loc141, #loc140])
#loc240 = loc(fused[#loc142, #loc143])
#loc241 = loc(fused[#loc144, #loc145])
#loc242 = loc(fused[#loc147, #loc143])
#loc243 = loc(fused[#loc153, #loc154])
#loc244 = loc(fused[#loc152, #loc154])
#loc245 = loc(fused[#loc151, #loc155])
#loc246 = loc(fused[#loc156, #loc155])
#loc247 = loc(fused[#loc157, #loc158])
#loc248 = loc(fused[#loc159, #loc160])
#loc249 = loc(fused[#loc162, #loc158])
#loc250 = loc(fused[#loc166, #loc167])
#loc251 = loc(fused[#loc168, #loc169])
#loc252 = loc(fused[#loc170, #loc171, #loc172, #loc167])
