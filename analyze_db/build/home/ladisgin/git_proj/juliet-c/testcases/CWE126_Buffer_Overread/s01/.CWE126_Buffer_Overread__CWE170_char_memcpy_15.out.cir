!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc52 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":109:10)
#loc53 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":109:14)
#loc54 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":109:20)
#loc55 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":109:32)
#loc159 = loc(fused[#loc52, #loc53])
#loc160 = loc(fused[#loc54, #loc55])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE170_char_memcpy_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE126_Buffer_Overread__CWE170_char_memcpy_15_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc8)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 150>, !cir.ptr<!cir.array<!s8i x 150>>, ["data"] {alignment = 16 : i64} loc(#loc146)
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc147)
            %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc15)
            %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc15)
            %5 = cir.const #cir.int<65> : !s32i loc(#loc16)
            %6 = cir.const #cir.int<149> : !s32i loc(#loc17)
            %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc17)
            cir.libc.memset %7 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc148)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc20)
            %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc20)
            %10 = cir.const #cir.int<149> : !s32i loc(#loc21)
            %11 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc22)
            %12 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc22)
            cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc149)
            %13 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
            %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc24)
            %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
            %17 = cir.const #cir.int<99> : !s32i loc(#loc25)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc25)
            %19 = cir.const #cir.int<1> : !u64i loc(#loc150)
            %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc151)
            cir.libc.memcpy %20 bytes from %16 to %14 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc152)
            %21 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
            cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc31)
          } loc(#loc145)
          cir.break loc(#loc32)
        } loc(#loc9)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc34)
          cir.break loc(#loc35)
        } loc(#loc33)
        cir.yield loc(#loc6)
      } loc(#loc6)
    } loc(#loc144)
    cir.return loc(#loc5)
  } loc(#loc143)
  cir.func no_proto @CWE126_Buffer_Overread__CWE170_char_memcpy_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc155)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc153)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc156)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc49)
  cir.func @main(%arg0: !s32i loc(fused[#loc52, #loc53]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc54, #loc55])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc159)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc160)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc51)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc56)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc56)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc57)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc58)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc58)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc59)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc46)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE170_char_memcpy_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc161)
    cir.call @CWE126_Buffer_Overread__CWE170_char_memcpy_15_good() : () -> () loc(#loc61)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc47)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc48)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE170_char_memcpy_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc162)
    cir.call @CWE126_Buffer_Overread__CWE170_char_memcpy_15_bad() : () -> () loc(#loc65)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc49)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc68)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    cir.return %17 : !s32i loc(#loc163)
  } loc(#loc158)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc74)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc76)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc76)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc77)
          cir.break loc(#loc78)
        } loc(#loc75)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 150>, !cir.ptr<!cir.array<!s8i x 150>>, ["data"] {alignment = 16 : i64} loc(#loc167)
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc168)
            %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc85)
            %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
            %5 = cir.const #cir.int<65> : !s32i loc(#loc86)
            %6 = cir.const #cir.int<149> : !s32i loc(#loc87)
            %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc87)
            cir.libc.memset %7 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc169)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc90)
            %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc90)
            %10 = cir.const #cir.int<149> : !s32i loc(#loc91)
            %11 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc92)
            %12 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc92)
            cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc170)
            %13 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc93)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc93)
            %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc94)
            %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
            %17 = cir.const #cir.int<99> : !s32i loc(#loc95)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc95)
            %19 = cir.const #cir.int<1> : !u64i loc(#loc171)
            %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc172)
            cir.libc.memcpy %20 bytes from %16 to %14 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc173)
            %21 = cir.const #cir.int<0> : !s32i loc(#loc100)
            %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc100)
            %23 = cir.const #cir.int<99> : !s32i loc(#loc101)
            %24 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc102)
            %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc102)
            cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc174)
            %26 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc103)
            cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc104)
          } loc(#loc166)
          cir.break loc(#loc105)
        } loc(#loc79)
        cir.yield loc(#loc72)
      } loc(#loc72)
    } loc(#loc165)
    cir.return loc(#loc71)
  } loc(#loc164)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc110)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 150>, !cir.ptr<!cir.array<!s8i x 150>>, ["data"] {alignment = 16 : i64} loc(#loc178)
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc179)
            %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc117)
            %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc117)
            %5 = cir.const #cir.int<65> : !s32i loc(#loc118)
            %6 = cir.const #cir.int<149> : !s32i loc(#loc119)
            %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc119)
            cir.libc.memset %7 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc180)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc122)
            %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc122)
            %10 = cir.const #cir.int<149> : !s32i loc(#loc123)
            %11 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc124)
            %12 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc124)
            cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc181)
            %13 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc125)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
            %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc126)
            %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
            %17 = cir.const #cir.int<99> : !s32i loc(#loc127)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc127)
            %19 = cir.const #cir.int<1> : !u64i loc(#loc182)
            %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc183)
            cir.libc.memcpy %20 bytes from %16 to %14 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc184)
            %21 = cir.const #cir.int<0> : !s32i loc(#loc132)
            %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc132)
            %23 = cir.const #cir.int<99> : !s32i loc(#loc133)
            %24 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
            %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc134)
            cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc185)
            %26 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
            cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc136)
          } loc(#loc177)
          cir.break loc(#loc137)
        } loc(#loc111)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc139)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc139)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc140)
          cir.break loc(#loc141)
        } loc(#loc138)
        cir.yield loc(#loc108)
      } loc(#loc108)
    } loc(#loc176)
    cir.return loc(#loc107)
  } loc(#loc175)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":39:19)
#loc4 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":22:1)
#loc5 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":42:1)
#loc6 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":24:5)
#loc7 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":41:5)
#loc8 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":24:12)
#loc9 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":26:5)
#loc10 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":27:5)
#loc11 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":35:5)
#loc12 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":28:9)
#loc13 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":28:22)
#loc14 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":28:33)
#loc15 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":30:16)
#loc16 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":30:22)
#loc17 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":30:27)
#loc18 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":30:9)
#loc19 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":30:30)
#loc20 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":31:21)
#loc21 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":31:14)
#loc22 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":31:9)
#loc23 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":32:16)
#loc24 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":32:22)
#loc25 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":32:28)
#loc26 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":32:31)
#loc27 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":32:42)
#loc28 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":32:9)
#loc29 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":32:43)
#loc30 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":34:19)
#loc31 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":34:9)
#loc32 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":36:5)
#loc33 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":37:5)
#loc34 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":39:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":40:9)
#loc36 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":94:1)
#loc37 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":98:1)
#loc38 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":96:5)
#loc39 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":96:11)
#loc40 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":97:5)
#loc41 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":97:11)
#loc42 = loc("/usr/include/stdlib.h":575:1)
#loc43 = loc("/usr/include/stdlib.h":575:41)
#loc44 = loc("/usr/include/time.h":76:1)
#loc45 = loc("/usr/include/time.h":76:38)
#loc46 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":114:15)
#loc47 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":116:15)
#loc48 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":119:15)
#loc49 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":121:15)
#loc50 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":109:1)
#loc51 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":124:1)
#loc56 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":110:1)
#loc57 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":112:27)
#loc58 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":112:22)
#loc59 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":112:5)
#loc60 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":114:5)
#loc61 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":115:5)
#loc62 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":115:56)
#loc63 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":116:5)
#loc64 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":119:5)
#loc65 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":120:5)
#loc66 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":120:55)
#loc67 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":121:5)
#loc68 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":123:12)
#loc69 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":123:5)
#loc70 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":49:1)
#loc71 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":69:1)
#loc72 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":51:5)
#loc73 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":68:5)
#loc74 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":51:12)
#loc75 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":53:5)
#loc76 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":55:19)
#loc77 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":55:9)
#loc78 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":56:9)
#loc79 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":57:5)
#loc80 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":58:5)
#loc81 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":66:5)
#loc82 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":59:9)
#loc83 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":59:22)
#loc84 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":59:33)
#loc85 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":61:16)
#loc86 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":61:22)
#loc87 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":61:27)
#loc88 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":61:9)
#loc89 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":61:30)
#loc90 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":62:21)
#loc91 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":62:14)
#loc92 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":62:9)
#loc93 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":63:16)
#loc94 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":63:22)
#loc95 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":63:28)
#loc96 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":63:31)
#loc97 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":63:42)
#loc98 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":63:9)
#loc99 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":63:43)
#loc100 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":64:20)
#loc101 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":64:14)
#loc102 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":64:9)
#loc103 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":65:19)
#loc104 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":65:9)
#loc105 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":67:5)
#loc106 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":72:1)
#loc107 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":92:1)
#loc108 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":74:5)
#loc109 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":91:5)
#loc110 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":74:12)
#loc111 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":76:5)
#loc112 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":77:5)
#loc113 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":85:5)
#loc114 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":78:9)
#loc115 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":78:22)
#loc116 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":78:33)
#loc117 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":80:16)
#loc118 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":80:22)
#loc119 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":80:27)
#loc120 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":80:9)
#loc121 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":80:30)
#loc122 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":81:21)
#loc123 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":81:14)
#loc124 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":81:9)
#loc125 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":82:16)
#loc126 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":82:22)
#loc127 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":82:28)
#loc128 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":82:31)
#loc129 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":82:42)
#loc130 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":82:9)
#loc131 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":82:43)
#loc132 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":83:20)
#loc133 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":83:14)
#loc134 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":83:9)
#loc135 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":84:19)
#loc136 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":84:9)
#loc137 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":86:5)
#loc138 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":87:5)
#loc139 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":89:19)
#loc140 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":89:9)
#loc141 = loc("CWE126_Buffer_Overread__CWE170_char_memcpy_15.c":90:9)
#loc142 = loc(fused[#loc1, #loc2])
#loc143 = loc(fused[#loc4, #loc5])
#loc144 = loc(fused[#loc6, #loc7])
#loc145 = loc(fused[#loc10, #loc11])
#loc146 = loc(fused[#loc12, #loc13])
#loc147 = loc(fused[#loc12, #loc14])
#loc148 = loc(fused[#loc18, #loc19])
#loc149 = loc(fused[#loc22, #loc20])
#loc150 = loc(fused[#loc26, #loc27])
#loc151 = loc(fused[#loc25, #loc27])
#loc152 = loc(fused[#loc28, #loc29])
#loc153 = loc(fused[#loc36, #loc37])
#loc154 = loc(fused[#loc38, #loc39])
#loc155 = loc(fused[#loc40, #loc41])
#loc156 = loc(fused[#loc42, #loc43])
#loc157 = loc(fused[#loc44, #loc45])
#loc158 = loc(fused[#loc50, #loc51])
#loc161 = loc(fused[#loc61, #loc62])
#loc162 = loc(fused[#loc65, #loc66])
#loc163 = loc(fused[#loc69, #loc68])
#loc164 = loc(fused[#loc70, #loc71])
#loc165 = loc(fused[#loc72, #loc73])
#loc166 = loc(fused[#loc80, #loc81])
#loc167 = loc(fused[#loc82, #loc83])
#loc168 = loc(fused[#loc82, #loc84])
#loc169 = loc(fused[#loc88, #loc89])
#loc170 = loc(fused[#loc92, #loc90])
#loc171 = loc(fused[#loc96, #loc97])
#loc172 = loc(fused[#loc95, #loc97])
#loc173 = loc(fused[#loc98, #loc99])
#loc174 = loc(fused[#loc102, #loc100])
#loc175 = loc(fused[#loc106, #loc107])
#loc176 = loc(fused[#loc108, #loc109])
#loc177 = loc(fused[#loc112, #loc113])
#loc178 = loc(fused[#loc114, #loc115])
#loc179 = loc(fused[#loc114, #loc116])
#loc180 = loc(fused[#loc120, #loc121])
#loc181 = loc(fused[#loc124, #loc122])
#loc182 = loc(fused[#loc128, #loc129])
#loc183 = loc(fused[#loc127, #loc129])
#loc184 = loc(fused[#loc130, #loc131])
#loc185 = loc(fused[#loc134, #loc132])
