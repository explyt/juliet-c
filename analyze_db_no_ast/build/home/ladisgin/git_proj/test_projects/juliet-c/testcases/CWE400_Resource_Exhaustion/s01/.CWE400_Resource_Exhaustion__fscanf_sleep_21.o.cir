!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc15 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":33:21)
#loc16 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":33:25)
#loc53 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":64:26)
#loc54 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":64:30)
#loc97 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":98:26)
#loc98 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":98:30)
#loc140 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":127:25)
#loc141 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":127:29)
#true = #cir.bool<true> : !cir.bool
#loc170 = loc(fused[#loc15, #loc16])
#loc183 = loc(fused[#loc53, #loc54])
#loc196 = loc(fused[#loc97, #loc98])
#loc209 = loc(fused[#loc140, #loc141])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc164)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc165)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.global "private"  internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc166)
  cir.func private  @usleep(!u32i) -> !s32i loc(#loc167)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc168)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc12)
  cir.func internal private  @badSink(%arg0: !s32i loc(fused[#loc15, #loc16])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc170)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc166)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc20)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc20)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc22)
        %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc22)
        %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc23)
        %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc12)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc12)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc24)
      } loc(#loc172)
    } loc(#loc171)
    cir.return loc(#loc14)
  } loc(#loc169)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fscanf_sleep_21_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc174)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc30)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc32)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc165)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc32)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %10 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc166)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    cir.call @badSink(%11) : (!s32i) -> () loc(#loc37)
    cir.return loc(#loc26)
  } loc(#loc173)
  cir.func no_proto  @CWE400_Resource_Exhaustion__fscanf_sleep_21_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc39)
  } loc(#loc177)
  cir.global "private"  internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc181)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc48)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc49)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc50)
  cir.func internal private  @goodB2G1Sink(%arg0: !s32i loc(fused[#loc53, #loc54])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc183)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc55)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc181)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc58)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc58)
      cir.if %3 {
        %4 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc48)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc48)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc62)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc66)
          %6 = cir.cmp(gt, %4, %5) : !s32i, !s32i loc(#loc187)
          %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc67)
          %8 = cir.ternary(%7, true {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc69)
            %10 = cir.const #cir.int<2000> : !s32i loc(#loc70)
            %11 = cir.cmp(le, %9, %10) : !s32i, !s32i loc(#loc188)
            %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc71)
            %13 = cir.ternary(%12, true {
              %14 = cir.const #true loc(#loc68)
              cir.yield %14 : !cir.bool loc(#loc68)
            }, false {
              %14 = cir.const #false loc(#loc68)
              cir.yield %14 : !cir.bool loc(#loc68)
            }) : (!cir.bool) -> !cir.bool loc(#loc68)
            cir.yield %13 : !cir.bool loc(#loc68)
          }, false {
            %9 = cir.const #false loc(#loc68)
            cir.yield %9 : !cir.bool loc(#loc68)
          }) : (!cir.bool) -> !cir.bool loc(#loc68)
          cir.if %8 {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc75)
            %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc75)
            %11 = cir.call @usleep(%10) : (!u32i) -> !s32i loc(#loc76)
            %12 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc49)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc49)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc77)
          } else {
            %9 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc50)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc50)
            cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc78)
          } loc(#loc189)
        } loc(#loc186)
      } loc(#loc185)
    } loc(#loc184)
    cir.return loc(#loc52)
  } loc(#loc182)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc191)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc84)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc86)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc165)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc87)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc88)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc88)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc86)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %10 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc181)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    cir.call @goodB2G1Sink(%11) : (!s32i) -> () loc(#loc92)
    cir.return loc(#loc80)
  } loc(#loc190)
  cir.global "private"  internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc194)
  cir.func internal private  @goodB2G2Sink(%arg0: !s32i loc(fused[#loc97, #loc98])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc196)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc194)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc102)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc102)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc107)
          %6 = cir.cmp(gt, %4, %5) : !s32i, !s32i loc(#loc200)
          %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc108)
          %8 = cir.ternary(%7, true {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
            %10 = cir.const #cir.int<2000> : !s32i loc(#loc111)
            %11 = cir.cmp(le, %9, %10) : !s32i, !s32i loc(#loc201)
            %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc112)
            %13 = cir.ternary(%12, true {
              %14 = cir.const #true loc(#loc109)
              cir.yield %14 : !cir.bool loc(#loc109)
            }, false {
              %14 = cir.const #false loc(#loc109)
              cir.yield %14 : !cir.bool loc(#loc109)
            }) : (!cir.bool) -> !cir.bool loc(#loc109)
            cir.yield %13 : !cir.bool loc(#loc109)
          }, false {
            %9 = cir.const #false loc(#loc109)
            cir.yield %9 : !cir.bool loc(#loc109)
          }) : (!cir.bool) -> !cir.bool loc(#loc109)
          cir.if %8 {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc116)
            %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc116)
            %11 = cir.call @usleep(%10) : (!u32i) -> !s32i loc(#loc117)
            %12 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc118)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc119)
          } else {
            %9 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc120)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc120)
            cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc121)
          } loc(#loc202)
        } loc(#loc199)
      } loc(#loc198)
    } loc(#loc197)
    cir.return loc(#loc96)
  } loc(#loc195)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc204)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc127)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc129)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc165)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc130)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc131)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc131)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc129)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %10 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc194)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    cir.call @goodB2G2Sink(%11) : (!s32i) -> () loc(#loc135)
    cir.return loc(#loc123)
  } loc(#loc203)
  cir.global "private"  internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc207)
  cir.func internal private  @goodG2BSink(%arg0: !s32i loc(fused[#loc140, #loc141])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc209)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc207)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc145)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc145)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc147)
        %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc147)
        %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc148)
        %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc149)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc149)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc150)
      } loc(#loc211)
    } loc(#loc210)
    cir.return loc(#loc139)
  } loc(#loc208)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc213)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc156)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc158)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc160)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc207)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc163)
    cir.return loc(#loc152)
  } loc(#loc212)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":49:19)
#loc6 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":31:1)
#loc7 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":31:24)
#loc8 = loc("/usr/include/unistd.h":480:1)
#loc9 = loc("/usr/include/unistd.h":480:43)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":39:19)
#loc13 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":33:1)
#loc14 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":41:1)
#loc17 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":34:1)
#loc18 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":35:5)
#loc19 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":40:5)
#loc20 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":35:8)
#loc21 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":36:5)
#loc22 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":38:15)
#loc23 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":38:9)
#loc24 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":39:9)
#loc25 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":43:1)
#loc26 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":52:1)
#loc27 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":45:5)
#loc28 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":45:9)
#loc29 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":47:14)
#loc30 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":47:13)
#loc31 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":47:5)
#loc32 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":49:5)
#loc33 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":49:12)
#loc34 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":50:17)
#loc35 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":50:5)
#loc36 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":51:13)
#loc37 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":51:5)
#loc38 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":148:1)
#loc39 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":153:1)
#loc40 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":150:5)
#loc41 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":150:14)
#loc42 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":151:5)
#loc43 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":151:14)
#loc44 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":152:5)
#loc45 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":152:13)
#loc46 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":59:1)
#loc47 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":59:29)
#loc48 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":69:19)
#loc49 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":77:23)
#loc50 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":81:23)
#loc51 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":64:1)
#loc52 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":84:1)
#loc55 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":65:1)
#loc56 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":66:5)
#loc57 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":83:5)
#loc58 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":66:8)
#loc59 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":67:5)
#loc60 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":70:5)
#loc61 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":72:5)
#loc62 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":69:9)
#loc63 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":74:9)
#loc64 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":82:9)
#loc65 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":74:13)
#loc66 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":74:21)
#loc67 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":74:19)
#loc68 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":74:23)
#loc69 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":74:26)
#loc70 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":74:35)
#loc71 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":74:32)
#loc72 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":75:9)
#loc73 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":78:9)
#loc74 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":80:9)
#loc75 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":76:19)
#loc76 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":76:13)
#loc77 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":77:13)
#loc78 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":81:13)
#loc79 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":86:1)
#loc80 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":95:1)
#loc81 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":88:5)
#loc82 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":88:9)
#loc83 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":90:14)
#loc84 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":90:13)
#loc85 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":90:5)
#loc86 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":92:5)
#loc87 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":92:12)
#loc88 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":92:19)
#loc89 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":93:22)
#loc90 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":93:5)
#loc91 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":94:18)
#loc92 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":94:5)
#loc93 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":60:1)
#loc94 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":60:29)
#loc95 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":98:1)
#loc96 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":113:1)
#loc99 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":99:1)
#loc100 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":100:5)
#loc101 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":112:5)
#loc102 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":100:8)
#loc103 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":101:5)
#loc104 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":103:9)
#loc105 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":111:9)
#loc106 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":103:13)
#loc107 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":103:21)
#loc108 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":103:19)
#loc109 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":103:23)
#loc110 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":103:26)
#loc111 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":103:35)
#loc112 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":103:32)
#loc113 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":104:9)
#loc114 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":107:9)
#loc115 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":109:9)
#loc116 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":105:19)
#loc117 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":105:13)
#loc118 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":106:23)
#loc119 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":106:13)
#loc120 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":110:23)
#loc121 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":110:13)
#loc122 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":115:1)
#loc123 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":124:1)
#loc124 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":117:5)
#loc125 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":117:9)
#loc126 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":119:14)
#loc127 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":119:13)
#loc128 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":119:5)
#loc129 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":121:5)
#loc130 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":121:12)
#loc131 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":121:19)
#loc132 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":122:22)
#loc133 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":122:5)
#loc134 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":123:18)
#loc135 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":123:5)
#loc136 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":61:1)
#loc137 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":61:28)
#loc138 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":127:1)
#loc139 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":135:1)
#loc142 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":128:1)
#loc143 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":129:5)
#loc144 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":134:5)
#loc145 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":129:8)
#loc146 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":130:5)
#loc147 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":132:15)
#loc148 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":132:9)
#loc149 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":133:19)
#loc150 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":133:9)
#loc151 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":137:1)
#loc152 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":146:1)
#loc153 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":139:5)
#loc154 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":139:9)
#loc155 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":141:14)
#loc156 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":141:13)
#loc157 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":141:5)
#loc158 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":143:13)
#loc159 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":143:5)
#loc160 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":144:21)
#loc161 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":144:5)
#loc162 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":145:17)
#loc163 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":145:5)
#loc164 = loc(fused[#loc1, #loc2])
#loc165 = loc(fused[#loc3, #loc4])
#loc166 = loc(fused[#loc6, #loc7])
#loc167 = loc(fused[#loc8, #loc9])
#loc168 = loc(fused[#loc10, #loc11])
#loc169 = loc(fused[#loc13, #loc14])
#loc171 = loc(fused[#loc18, #loc19])
#loc172 = loc(fused[#loc21, #loc19])
#loc173 = loc(fused[#loc25, #loc26])
#loc174 = loc(fused[#loc27, #loc28])
#loc175 = loc(fused[#loc31, #loc29])
#loc176 = loc(fused[#loc35, #loc34])
#loc177 = loc(fused[#loc38, #loc39])
#loc178 = loc(fused[#loc40, #loc41])
#loc179 = loc(fused[#loc42, #loc43])
#loc180 = loc(fused[#loc44, #loc45])
#loc181 = loc(fused[#loc46, #loc47])
#loc182 = loc(fused[#loc51, #loc52])
#loc184 = loc(fused[#loc56, #loc57])
#loc185 = loc(fused[#loc59, #loc60, #loc61, #loc57])
#loc186 = loc(fused[#loc63, #loc64])
#loc187 = loc(fused[#loc65, #loc66])
#loc188 = loc(fused[#loc69, #loc70])
#loc189 = loc(fused[#loc72, #loc73, #loc74, #loc64])
#loc190 = loc(fused[#loc79, #loc80])
#loc191 = loc(fused[#loc81, #loc82])
#loc192 = loc(fused[#loc85, #loc83])
#loc193 = loc(fused[#loc90, #loc89])
#loc194 = loc(fused[#loc93, #loc94])
#loc195 = loc(fused[#loc95, #loc96])
#loc197 = loc(fused[#loc100, #loc101])
#loc198 = loc(fused[#loc103, #loc101])
#loc199 = loc(fused[#loc104, #loc105])
#loc200 = loc(fused[#loc106, #loc107])
#loc201 = loc(fused[#loc110, #loc111])
#loc202 = loc(fused[#loc113, #loc114, #loc115, #loc105])
#loc203 = loc(fused[#loc122, #loc123])
#loc204 = loc(fused[#loc124, #loc125])
#loc205 = loc(fused[#loc128, #loc126])
#loc206 = loc(fused[#loc133, #loc132])
#loc207 = loc(fused[#loc136, #loc137])
#loc208 = loc(fused[#loc138, #loc139])
#loc210 = loc(fused[#loc143, #loc144])
#loc211 = loc(fused[#loc146, #loc144])
#loc212 = loc(fused[#loc151, #loc152])
#loc213 = loc(fused[#loc153, #loc154])
#loc214 = loc(fused[#loc157, #loc155])
#loc215 = loc(fused[#loc159, #loc158])
#loc216 = loc(fused[#loc161, #loc160])
