!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc122 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":98:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__listen_socket_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc169)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc170)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc171)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc172)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc173)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc174)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc175)
  cir.func private @close(!s32i) -> !s32i loc(#loc176)
  cir.func private @__assert_fail(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) extra(#fn_attr) loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data > ASSERT_VALUE\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc19)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"CWE617_Reachable_Assertion__listen_socket_16.c\00" : !cir.array<!s8i x 47>> : !cir.array<!s8i x 47> {alignment = 1 : i64} loc(#loc19)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"void CWE617_Reachable_Assertion__listen_socket_16_bad()\00" : !cir.array<!s8i x 56>> : !cir.array<!s8i x 56> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto @CWE617_Reachable_Assertion__listen_socket_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc179)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc180)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc181)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc182)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc183)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc184)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc35)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    cir.br ^bb1 loc(#loc186)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc186)
  ^bb2:  // 2 preds: ^bb1, ^bb50
    %8 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %9 ^bb3, ^bb51 loc(#loc39)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc187)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc188)
  ^bb5:  // pred: ^bb4
    %10 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc27)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc29)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    cir.br ^bb6 loc(#loc189)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc189)
  ^bb7:  // pred: ^bb38
    %14 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc45)
    cir.brcond %15 ^bb8, ^bb39 loc(#loc45)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc190)
  ^bb9:  // pred: ^bb8
    %16 = cir.const #cir.int<2> : !s32i loc(#loc48)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %18 = cir.const #cir.int<6> : !s32i loc(#loc50)
    %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    cir.br ^bb10 loc(#loc192)
  ^bb10:  // pred: ^bb9
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc57)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc193)
    cir.brcond %23 ^bb11, ^bb12 loc(#loc194)
  ^bb11:  // pred: ^bb10
    cir.br ^bb39 loc(#loc59)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc55)
  ^bb13:  // pred: ^bb12
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc195)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc196)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc197)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc67)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc67)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc198)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc70)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc199)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc74)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc74)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc75)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc200)
    cir.br ^bb14 loc(#loc201)
  ^bb14:  // pred: ^bb13
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc202)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc203)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc203)
    %42 = cir.call @bind(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc86)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %44 = cir.unary(minus, %43) nsw : !s32i, !s32i loc(#loc87)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc204)
    cir.brcond %45 ^bb15, ^bb16 loc(#loc205)
  ^bb15:  // pred: ^bb14
    cir.br ^bb39 loc(#loc89)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc80)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc206)
  ^bb18:  // pred: ^bb17
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %47 = cir.const #cir.int<5> : !s32i loc(#loc93)
    %48 = cir.call @listen(%46, %47) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc94)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %50 = cir.unary(minus, %49) nsw : !s32i, !s32i loc(#loc95)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc207)
    cir.brcond %51 ^bb19, ^bb20 loc(#loc208)
  ^bb19:  // pred: ^bb18
    cir.br ^bb39 loc(#loc97)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc91)
  ^bb21:  // pred: ^bb20
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc99)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc100)
    %55 = cir.call @accept(%52, %53, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc101)
    cir.store %55, %3 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    cir.br ^bb22 loc(#loc210)
  ^bb22:  // pred: ^bb21
    %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc107)
    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc211)
    cir.brcond %59 ^bb23, ^bb24 loc(#loc212)
  ^bb23:  // pred: ^bb22
    cir.br ^bb39 loc(#loc109)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc105)
  ^bb25:  // pred: ^bb24
    %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %61 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
    %63 = cir.const #cir.int<3> : !s32i loc(#loc112)
    %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc112)
    %65 = cir.const #cir.int<4> : !u64i loc(#loc112)
    %66 = cir.binop(mul, %64, %65) : !u64i loc(#loc112)
    %67 = cir.const #cir.int<2> : !s32i loc(#loc112)
    %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc112)
    %69 = cir.binop(add, %66, %68) : !u64i loc(#loc112)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc113)
    %72 = cir.binop(sub, %69, %71) : !u64i loc(#loc213)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %74 = cir.call @recv(%60, %62, %72, %73) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc115)
    %75 = cir.cast(integral, %74 : !s64i), !s32i loc(#loc115)
    cir.store %75, %0 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    cir.br ^bb26 loc(#loc215)
  ^bb26:  // pred: ^bb25
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc121)
    %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc216)
    cir.brcond %79 ^bb27, ^bb28 loc(#loc122)
  ^bb27:  // pred: ^bb26
    %80 = cir.const #true loc(#loc122)
    cir.br ^bb33(%80 : !cir.bool) loc(#loc122)
  ^bb28:  // pred: ^bb26
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %82 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %83 = cir.cmp(eq, %81, %82) : !s32i, !cir.bool loc(#loc217)
    cir.brcond %83 ^bb29, ^bb30 loc(#loc122)
  ^bb29:  // pred: ^bb28
    %84 = cir.const #true loc(#loc122)
    cir.br ^bb31(%84 : !cir.bool) loc(#loc122)
  ^bb30:  // pred: ^bb28
    %85 = cir.const #false loc(#loc122)
    cir.br ^bb31(%85 : !cir.bool) loc(#loc122)
  ^bb31(%86: !cir.bool loc("CWE617_Reachable_Assertion__listen_socket_16.c":98:48)):  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc122)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33(%86 : !cir.bool) loc(#loc122)
  ^bb33(%87: !cir.bool loc("CWE617_Reachable_Assertion__listen_socket_16.c":98:48)):  // 2 preds: ^bb27, ^bb32
    cir.br ^bb34 loc(#loc122)
  ^bb34:  // pred: ^bb33
    cir.brcond %87 ^bb35, ^bb36 loc(#loc218)
  ^bb35:  // pred: ^bb34
    cir.br ^bb39 loc(#loc126)
  ^bb36:  // pred: ^bb34
    cir.br ^bb37 loc(#loc119)
  ^bb37:  // pred: ^bb36
    %88 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %89 = cir.cast(integral, %88 : !s32i), !s8i loc(#loc127)
    %90 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %91 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
    %92 = cir.ptr_stride(%91 : !cir.ptr<!s8i>, %90 : !s32i), !cir.ptr<!s8i> loc(#loc129)
    cir.store %89, %92 : !s8i, !cir.ptr<!s8i> loc(#loc219)
    %93 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc130)
    %94 = cir.call @atoi(%93) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc131)
    cir.store %94, %5 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    cir.br ^bb38 loc(#loc47)
  ^bb38:  // pred: ^bb37
    cir.br ^bb7 loc(#loc44)
  ^bb39:  // 6 preds: ^bb7, ^bb11, ^bb15, ^bb19, ^bb23, ^bb35
    cir.br ^bb40 loc(#loc44)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc221)
  ^bb41:  // pred: ^bb40
    %95 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %96 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %97 = cir.unary(minus, %96) nsw : !s32i, !s32i loc(#loc137)
    %98 = cir.cmp(ne, %95, %97) : !s32i, !cir.bool loc(#loc222)
    cir.brcond %98 ^bb42, ^bb43 loc(#loc223)
  ^bb42:  // pred: ^bb41
    %99 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %100 = cir.call @close(%99) : (!s32i) -> !s32i loc(#loc140)
    cir.br ^bb43 loc(#loc135)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc135)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc224)
  ^bb45:  // pred: ^bb44
    %101 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %102 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %103 = cir.unary(minus, %102) nsw : !s32i, !s32i loc(#loc144)
    %104 = cir.cmp(ne, %101, %103) : !s32i, !cir.bool loc(#loc225)
    cir.brcond %104 ^bb46, ^bb47 loc(#loc226)
  ^bb46:  // pred: ^bb45
    %105 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %106 = cir.call @close(%105) : (!s32i) -> !s32i loc(#loc147)
    cir.br ^bb47 loc(#loc142)
  ^bb47:  // 2 preds: ^bb45, ^bb46
    cir.br ^bb48 loc(#loc142)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc42)
  ^bb49:  // pred: ^bb48
    cir.br ^bb51 loc(#loc148)
  ^bb50:  // no predecessors
    cir.br ^bb2 loc(#loc38)
  ^bb51:  // 2 preds: ^bb2, ^bb49
    cir.br ^bb52 loc(#loc38)
  ^bb52:  // pred: ^bb51
    cir.br ^bb53 loc(#loc19)
  ^bb53:  // pred: ^bb52
    cir.br ^bb54 loc(#loc19)
  ^bb54:  // pred: ^bb53
    %107 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %108 = cir.const #cir.int<5> : !s32i loc(#loc19)
    %109 = cir.cmp(gt, %107, %108) : !s32i, !cir.bool loc(#loc19)
    cir.brcond %109 ^bb55, ^bb56 loc(#loc19)
  ^bb55:  // pred: ^bb54
    cir.br ^bb57 loc(#loc19)
  ^bb56:  // pred: ^bb54
    %110 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc19)
    %111 = cir.cast(array_to_ptrdecay, %110 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc19)
    %112 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 47>> loc(#loc19)
    %113 = cir.cast(array_to_ptrdecay, %112 : !cir.ptr<!cir.array<!s8i x 47>>), !cir.ptr<!s8i> loc(#loc19)
    %114 = cir.const #cir.int<126> : !s32i loc(#loc19)
    %115 = cir.cast(integral, %114 : !s32i), !u32i loc(#loc19)
    %116 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 56>> loc(#loc19)
    %117 = cir.cast(array_to_ptrdecay, %116 : !cir.ptr<!cir.array<!s8i x 56>>), !cir.ptr<!s8i> loc(#loc19)
    cir.call @__assert_fail(%111, %113, %115, %117) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc19)
    cir.br ^bb57 loc(#loc19)
  ^bb57:  // 2 preds: ^bb55, ^bb56
    cir.br ^bb58 loc(#loc19)
  ^bb58:  // pred: ^bb57
    cir.br ^bb59 loc(#loc19)
  ^bb59:  // pred: ^bb58
    cir.return loc(#loc21)
  } loc(#loc178)
  cir.func no_proto @CWE617_Reachable_Assertion__listen_socket_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc228)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc151)
    cir.return loc(#loc150)
  } loc(#loc227)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"void goodG2B()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc153)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc230)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc158)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc159)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    cir.br ^bb1 loc(#loc232)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc232)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %3 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc163)
    cir.brcond %4 ^bb3, ^bb6 loc(#loc163)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc233)
  ^bb4:  // pred: ^bb3
    %5 = cir.const #cir.int<5> : !s32i loc(#loc165)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc166)
    %7 = cir.binop(add, %5, %6) nsw : !s32i loc(#loc165)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    cir.br ^bb6 loc(#loc168)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc162)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc162)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc153)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc153)
  ^bb9:  // pred: ^bb8
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc153)
    %10 = cir.cmp(gt, %8, %9) : !s32i, !cir.bool loc(#loc153)
    cir.brcond %10 ^bb10, ^bb11 loc(#loc153)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc153)
  ^bb11:  // pred: ^bb9
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc153)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc153)
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 47>> loc(#loc153)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 47>>), !cir.ptr<!s8i> loc(#loc153)
    %15 = cir.const #cir.int<146> : !s32i loc(#loc153)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc153)
    %17 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc153)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc153)
    cir.call @__assert_fail(%12, %14, %16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc153)
    cir.br ^bb12 loc(#loc153)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc153)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc153)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc155)
  } loc(#loc229)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__listen_socket_16.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/include/assert.h":69:1)
#loc18 = loc("/usr/include/assert.h":71:43)
#loc19 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":126:5)
#loc20 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":47:1)
#loc21 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":127:1)
#loc22 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":59:13)
#loc23 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":59:17)
#loc24 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":60:13)
#loc25 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":60:32)
#loc26 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":61:13)
#loc27 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":61:35)
#loc28 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":62:13)
#loc29 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":62:35)
#loc30 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":63:13)
#loc31 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":63:45)
#loc32 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":49:5)
#loc33 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":49:9)
#loc34 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":51:13)
#loc35 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":51:12)
#loc36 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":51:5)
#loc37 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":52:5)
#loc38 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":124:5)
#loc39 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":52:11)
#loc40 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":53:5)
#loc41 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":54:9)
#loc42 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":122:9)
#loc43 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":64:13)
#loc44 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":107:21)
#loc45 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":107:20)
#loc46 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":65:13)
#loc47 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":106:13)
#loc48 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":74:39)
#loc49 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":74:48)
#loc50 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":74:61)
#loc51 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":74:32)
#loc52 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":74:17)
#loc53 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":74:72)
#loc54 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":75:17)
#loc55 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":78:17)
#loc56 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":75:21)
#loc57 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":75:37)
#loc58 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":76:17)
#loc59 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":77:21)
#loc60 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":79:24)
#loc61 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":79:25)
#loc62 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":79:34)
#loc63 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":79:37)
#loc64 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":79:51)
#loc65 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":79:17)
#loc66 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":79:52)
#loc67 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":80:38)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":80:17)
#loc70 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":81:43)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":81:17)
#loc74 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":82:42)
#loc75 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":82:36)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":82:17)
#loc78 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":82:50)
#loc79 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":83:17)
#loc80 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":86:17)
#loc81 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":83:26)
#loc82 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":83:58)
#loc83 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":83:59)
#loc84 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":83:68)
#loc85 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":83:82)
#loc86 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":83:21)
#loc87 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":83:88)
#loc88 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":84:17)
#loc89 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":85:21)
#loc90 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":87:17)
#loc91 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":90:17)
#loc92 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":87:28)
#loc93 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":87:42)
#loc94 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":87:21)
#loc95 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":87:61)
#loc96 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":88:17)
#loc97 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":89:21)
#loc98 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":91:39)
#loc99 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":91:53)
#loc100 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":91:59)
#loc101 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":91:32)
#loc102 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":91:17)
#loc103 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":91:63)
#loc104 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":92:17)
#loc105 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":95:17)
#loc106 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":92:21)
#loc107 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":92:37)
#loc108 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":93:17)
#loc109 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":94:21)
#loc110 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":97:35)
#loc111 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":97:49)
#loc112 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":97:62)
#loc113 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":97:80)
#loc114 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":97:83)
#loc115 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":97:30)
#loc116 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":97:17)
#loc117 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":97:84)
#loc118 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":98:17)
#loc119 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":101:17)
#loc120 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":98:21)
#loc121 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":98:35)
#loc123 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":98:51)
#loc124 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":98:65)
#loc125 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":99:17)
#loc126 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":100:21)
#loc127 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":103:43)
#loc128 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":103:29)
#loc129 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":103:17)
#loc130 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":105:29)
#loc131 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":105:24)
#loc132 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":105:17)
#loc133 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":105:40)
#loc134 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":108:13)
#loc135 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":111:13)
#loc136 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":108:17)
#loc137 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":108:33)
#loc138 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":109:13)
#loc139 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":110:30)
#loc140 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":110:17)
#loc141 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":112:13)
#loc142 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":115:13)
#loc143 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":112:17)
#loc144 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":112:33)
#loc145 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":113:13)
#loc146 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":114:30)
#loc147 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":114:17)
#loc148 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":123:9)
#loc149 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":149:1)
#loc150 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":152:1)
#loc151 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":151:5)
#loc152 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":151:13)
#loc153 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":146:5)
#loc154 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":134:1)
#loc155 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":147:1)
#loc156 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":136:5)
#loc157 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":136:9)
#loc158 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":138:13)
#loc159 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":138:12)
#loc160 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":138:5)
#loc161 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":139:5)
#loc162 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":144:5)
#loc163 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":139:11)
#loc164 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":140:5)
#loc165 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":142:16)
#loc166 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":142:29)
#loc167 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":142:9)
#loc168 = loc("CWE617_Reachable_Assertion__listen_socket_16.c":143:9)
#loc169 = loc(fused[#loc1, #loc2])
#loc170 = loc(fused[#loc3, #loc4])
#loc171 = loc(fused[#loc5, #loc6])
#loc172 = loc(fused[#loc7, #loc8])
#loc173 = loc(fused[#loc9, #loc10])
#loc174 = loc(fused[#loc11, #loc12])
#loc175 = loc(fused[#loc13, #loc14])
#loc176 = loc(fused[#loc15, #loc16])
#loc177 = loc(fused[#loc17, #loc18])
#loc178 = loc(fused[#loc20, #loc21])
#loc179 = loc(fused[#loc22, #loc23])
#loc180 = loc(fused[#loc24, #loc25])
#loc181 = loc(fused[#loc26, #loc27])
#loc182 = loc(fused[#loc28, #loc29])
#loc183 = loc(fused[#loc30, #loc31])
#loc184 = loc(fused[#loc32, #loc33])
#loc185 = loc(fused[#loc36, #loc34])
#loc186 = loc(fused[#loc37, #loc38])
#loc187 = loc(fused[#loc40, #loc38])
#loc188 = loc(fused[#loc41, #loc42])
#loc189 = loc(fused[#loc43, #loc44])
#loc190 = loc(fused[#loc46, #loc47])
#loc191 = loc(fused[#loc52, #loc53])
#loc192 = loc(fused[#loc54, #loc55])
#loc193 = loc(fused[#loc56, #loc57])
#loc194 = loc(fused[#loc58, #loc55])
#loc195 = loc(fused[#loc60, #loc61])
#loc196 = loc(fused[#loc63, #loc64])
#loc197 = loc(fused[#loc65, #loc66])
#loc198 = loc(fused[#loc69, #loc67])
#loc199 = loc(fused[#loc73, #loc70])
#loc200 = loc(fused[#loc77, #loc78])
#loc201 = loc(fused[#loc79, #loc80])
#loc202 = loc(fused[#loc82, #loc83])
#loc203 = loc(fused[#loc84, #loc85])
#loc204 = loc(fused[#loc86, #loc87])
#loc205 = loc(fused[#loc88, #loc80])
#loc206 = loc(fused[#loc90, #loc91])
#loc207 = loc(fused[#loc94, #loc95])
#loc208 = loc(fused[#loc96, #loc91])
#loc209 = loc(fused[#loc102, #loc103])
#loc210 = loc(fused[#loc104, #loc105])
#loc211 = loc(fused[#loc106, #loc107])
#loc212 = loc(fused[#loc108, #loc105])
#loc213 = loc(fused[#loc112, #loc113])
#loc214 = loc(fused[#loc116, #loc117])
#loc215 = loc(fused[#loc118, #loc119])
#loc216 = loc(fused[#loc120, #loc121])
#loc217 = loc(fused[#loc123, #loc124])
#loc218 = loc(fused[#loc125, #loc119])
#loc219 = loc(fused[#loc129, #loc127])
#loc220 = loc(fused[#loc132, #loc133])
#loc221 = loc(fused[#loc134, #loc135])
#loc222 = loc(fused[#loc136, #loc137])
#loc223 = loc(fused[#loc138, #loc135])
#loc224 = loc(fused[#loc141, #loc142])
#loc225 = loc(fused[#loc143, #loc144])
#loc226 = loc(fused[#loc145, #loc142])
#loc227 = loc(fused[#loc149, #loc150])
#loc228 = loc(fused[#loc151, #loc152])
#loc229 = loc(fused[#loc154, #loc155])
#loc230 = loc(fused[#loc156, #loc157])
#loc231 = loc(fused[#loc160, #loc158])
#loc232 = loc(fused[#loc161, #loc162])
#loc233 = loc(fused[#loc164, #loc162])
#loc234 = loc(fused[#loc167, #loc166])
