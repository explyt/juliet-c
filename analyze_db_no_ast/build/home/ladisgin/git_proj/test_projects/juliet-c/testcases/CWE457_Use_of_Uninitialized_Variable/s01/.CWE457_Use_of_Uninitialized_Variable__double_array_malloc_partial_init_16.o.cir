!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc224)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc225)
  cir.func private  @printDoubleLine(!cir.double) loc(#loc226)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc228)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc11)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc12)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc12)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc229)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc230)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc11)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc231)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc232)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc19)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc20)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc20)
      %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!cir.double>, !s32i loc(#loc234)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc21)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc23)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc25)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc23)
      } loc(#loc235)
    } loc(#loc233)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc28)
        cir.condition(%9) loc(#loc28)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc238)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc35)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc240)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc37)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc38)
              %12 = cir.const #cir.int<2> : !s32i loc(#loc39)
              %13 = cir.binop(div, %11, %12) : !s32i loc(#loc241)
              %14 = cir.cmp(lt, %10, %13) : !s32i, !s32i loc(#loc242)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc41)
              cir.condition(%15) loc(#loc41)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc43)
                %11 = cir.cast(int_to_float, %10 : !s32i), !cir.double loc(#loc43)
                %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc44)
                %13 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc45)
                %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc46)
                cir.store %11, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc244)
              } loc(#loc243)
              cir.yield loc(#loc34)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc47)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc48)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc245)
              cir.yield loc(#loc239)
            } loc(#loc239)
          } loc(#loc239)
        } loc(#loc237)
        cir.break loc(#loc49)
      } loc(#loc236)
    } loc(#loc236)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc52)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc52)
        cir.condition(%9) loc(#loc52)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc248)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc59)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc250)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc61)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc62)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc251)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc63)
              cir.condition(%13) loc(#loc63)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc65)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc66)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!cir.double>, %11 : !s32i), !cir.ptr<!cir.double> loc(#loc67)
                %13 = cir.load %12 : !cir.ptr<!cir.double>, !cir.double loc(#loc65)
                cir.call @printDoubleLine(%13) : (!cir.double) -> () loc(#loc68)
              } loc(#loc252)
              cir.yield loc(#loc58)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc69)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc70)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc253)
              cir.yield loc(#loc249)
            } loc(#loc249)
          } loc(#loc249)
        } loc(#loc247)
        cir.break loc(#loc71)
      } loc(#loc246)
    } loc(#loc246)
    cir.return loc(#loc8)
  } loc(#loc227)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc255)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc256)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc76)
    cir.return loc(#loc73)
  } loc(#loc254)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc258)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc82)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc83)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc83)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc259)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc260)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc82)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc261)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc262)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc90)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc91)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc91)
      %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!cir.double>, !s32i loc(#loc264)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc92)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc94)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc95)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc96)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc94)
      } loc(#loc265)
    } loc(#loc263)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc99)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc99)
        cir.condition(%9) loc(#loc99)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc268)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc106)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc270)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc108)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc109)
              %12 = cir.const #cir.int<2> : !s32i loc(#loc110)
              %13 = cir.binop(div, %11, %12) : !s32i loc(#loc271)
              %14 = cir.cmp(lt, %10, %13) : !s32i, !s32i loc(#loc272)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc112)
              cir.condition(%15) loc(#loc112)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                %11 = cir.cast(int_to_float, %10 : !s32i), !cir.double loc(#loc114)
                %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc115)
                %13 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc117)
                cir.store %11, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc274)
              } loc(#loc273)
              cir.yield loc(#loc105)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc119)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc275)
              cir.yield loc(#loc269)
            } loc(#loc269)
          } loc(#loc269)
        } loc(#loc267)
        cir.break loc(#loc120)
      } loc(#loc266)
    } loc(#loc266)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc123)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc123)
        cir.condition(%9) loc(#loc123)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc278)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc130)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc280)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc132)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc133)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc281)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc134)
              cir.condition(%13) loc(#loc134)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc136)
                %11 = cir.cast(int_to_float, %10 : !s32i), !cir.double loc(#loc136)
                %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc137)
                %13 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc138)
                %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc139)
                cir.store %11, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc283)
              } loc(#loc282)
              cir.yield loc(#loc129)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc140)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc141)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc284)
              cir.yield loc(#loc279)
            } loc(#loc279)
          } loc(#loc279)
        } loc(#loc277)
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc286)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc148)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc288)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc150)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc151)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc289)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc152)
              cir.condition(%13) loc(#loc152)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc154)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc155)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!cir.double>, %11 : !s32i), !cir.ptr<!cir.double> loc(#loc156)
                %13 = cir.load %12 : !cir.ptr<!cir.double>, !cir.double loc(#loc154)
                cir.call @printDoubleLine(%13) : (!cir.double) -> () loc(#loc157)
              } loc(#loc290)
              cir.yield loc(#loc147)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc158)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc159)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc291)
              cir.yield loc(#loc287)
            } loc(#loc287)
          } loc(#loc287)
        } loc(#loc285)
        cir.break loc(#loc160)
      } loc(#loc276)
    } loc(#loc276)
    cir.return loc(#loc79)
  } loc(#loc257)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc293)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc165)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc166)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc166)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc294)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc295)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc165)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc296)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc297)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc173)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc174)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc174)
      %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!cir.double>, !s32i loc(#loc299)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc175)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc177)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc178)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc179)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc177)
      } loc(#loc300)
    } loc(#loc298)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc182)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc182)
        cir.condition(%9) loc(#loc182)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc303)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc189)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc305)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc191)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc192)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc306)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc193)
              cir.condition(%13) loc(#loc193)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc195)
                %11 = cir.cast(int_to_float, %10 : !s32i), !cir.double loc(#loc195)
                %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc196)
                %13 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc197)
                %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc198)
                cir.store %11, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc308)
              } loc(#loc307)
              cir.yield loc(#loc188)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc199)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc200)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc309)
              cir.yield loc(#loc304)
            } loc(#loc304)
          } loc(#loc304)
        } loc(#loc302)
        cir.break loc(#loc201)
      } loc(#loc301)
    } loc(#loc301)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc204)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc204)
        cir.condition(%9) loc(#loc204)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc312)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc211)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc314)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc213)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc214)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc315)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc215)
              cir.condition(%13) loc(#loc215)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc217)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc218)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!cir.double>, %11 : !s32i), !cir.ptr<!cir.double> loc(#loc219)
                %13 = cir.load %12 : !cir.ptr<!cir.double>, !cir.double loc(#loc217)
                cir.call @printDoubleLine(%13) : (!cir.double) -> () loc(#loc220)
              } loc(#loc316)
              cir.yield loc(#loc210)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc221)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc222)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc317)
              cir.yield loc(#loc313)
            } loc(#loc313)
          } loc(#loc313)
        } loc(#loc311)
        cir.break loc(#loc223)
      } loc(#loc310)
    } loc(#loc310)
    cir.return loc(#loc162)
  } loc(#loc292)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":22:1)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":51:1)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":24:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":24:14)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":25:22)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":25:29)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":25:32)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":25:45)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":25:46)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":25:5)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":26:5)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":26:33)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":26:9)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":26:17)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":26:14)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":26:23)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":26:24)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":26:30)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":26:29)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":27:5)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":38:5)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":27:11)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":30:9)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":36:9)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":31:13)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":31:17)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":32:13)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":35:13)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":32:19)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":32:17)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":32:22)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":32:25)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":32:28)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":32:29)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":32:23)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":33:13)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":34:35)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":34:17)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":34:22)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":34:23)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":32:33)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":32:32)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":37:9)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":39:5)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":50:5)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":39:11)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":42:9)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":48:9)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":43:13)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":43:17)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":44:13)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":47:13)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":44:19)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":44:17)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":44:22)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":44:24)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":44:23)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":45:13)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":46:33)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":46:38)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":46:39)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":46:17)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":44:29)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":44:28)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":49:9)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":128:1)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":132:1)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":130:5)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":130:13)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":131:5)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":131:13)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":58:1)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":94:1)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":60:5)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":60:14)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":61:22)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":61:29)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":61:32)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":61:45)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":61:46)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":61:5)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":62:5)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":62:33)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":62:9)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":62:17)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":62:14)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":62:23)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":62:24)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":62:30)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":62:29)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":63:5)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":74:5)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":63:11)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":66:9)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":72:9)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":67:13)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":67:17)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":68:13)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":71:13)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":68:19)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":68:17)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":68:22)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":68:25)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":68:28)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":68:29)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":68:23)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":69:13)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":70:35)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":70:17)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":70:22)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":70:23)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":68:33)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":68:32)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":73:9)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":75:5)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":93:5)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":75:11)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":78:9)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":84:9)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":79:13)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":79:17)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":80:13)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":83:13)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":80:19)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":80:17)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":80:22)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":80:24)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":80:23)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":81:13)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":82:35)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":82:17)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":82:22)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":82:23)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":80:29)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":80:28)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":85:9)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":91:9)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":86:13)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":86:17)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":87:13)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":90:13)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":87:19)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":87:17)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":87:22)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":87:24)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":87:23)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":88:13)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":89:33)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":89:38)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":89:39)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":89:17)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":87:29)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":87:28)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":92:9)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":97:1)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":126:1)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":99:5)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":99:14)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":100:22)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":100:29)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":100:32)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":100:45)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":100:46)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":100:5)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":101:5)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":101:33)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":101:9)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":101:17)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":101:14)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":101:23)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":101:24)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":101:30)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":101:29)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":102:5)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":113:5)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":102:11)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":105:9)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":111:9)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":106:13)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":106:17)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":107:13)
#loc188 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":110:13)
#loc189 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":107:19)
#loc190 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":107:17)
#loc191 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":107:22)
#loc192 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":107:24)
#loc193 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":107:23)
#loc194 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":108:13)
#loc195 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":109:35)
#loc196 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":109:17)
#loc197 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":109:22)
#loc198 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":109:23)
#loc199 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":107:29)
#loc200 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":107:28)
#loc201 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":112:9)
#loc202 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":114:5)
#loc203 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":125:5)
#loc204 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":114:11)
#loc205 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":117:9)
#loc206 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":123:9)
#loc207 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":118:13)
#loc208 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":118:17)
#loc209 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":119:13)
#loc210 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":122:13)
#loc211 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":119:19)
#loc212 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":119:17)
#loc213 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":119:22)
#loc214 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":119:24)
#loc215 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":119:23)
#loc216 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":120:13)
#loc217 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":121:33)
#loc218 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":121:38)
#loc219 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":121:39)
#loc220 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":121:17)
#loc221 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":119:29)
#loc222 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":119:28)
#loc223 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_malloc_partial_init_16.c":124:9)
#loc224 = loc(fused[#loc1, #loc2])
#loc225 = loc(fused[#loc3, #loc4])
#loc226 = loc(fused[#loc5, #loc6])
#loc227 = loc(fused[#loc7, #loc8])
#loc228 = loc(fused[#loc9, #loc10])
#loc229 = loc(fused[#loc13, #loc14])
#loc230 = loc(fused[#loc12, #loc14])
#loc231 = loc(fused[#loc11, #loc15])
#loc232 = loc(fused[#loc16, #loc15])
#loc233 = loc(fused[#loc17, #loc18])
#loc234 = loc(fused[#loc19, #loc20])
#loc235 = loc(fused[#loc22, #loc18])
#loc236 = loc(fused[#loc26, #loc27])
#loc237 = loc(fused[#loc29, #loc30])
#loc238 = loc(fused[#loc31, #loc32])
#loc239 = loc(fused[#loc33, #loc34])
#loc240 = loc(fused[#loc36, #loc35])
#loc241 = loc(fused[#loc38, #loc39])
#loc242 = loc(fused[#loc37, #loc40])
#loc243 = loc(fused[#loc42, #loc34])
#loc244 = loc(fused[#loc44, #loc43])
#loc245 = loc(fused[#loc48, #loc47])
#loc246 = loc(fused[#loc50, #loc51])
#loc247 = loc(fused[#loc53, #loc54])
#loc248 = loc(fused[#loc55, #loc56])
#loc249 = loc(fused[#loc57, #loc58])
#loc250 = loc(fused[#loc60, #loc59])
#loc251 = loc(fused[#loc61, #loc62])
#loc252 = loc(fused[#loc64, #loc58])
#loc253 = loc(fused[#loc70, #loc69])
#loc254 = loc(fused[#loc72, #loc73])
#loc255 = loc(fused[#loc74, #loc75])
#loc256 = loc(fused[#loc76, #loc77])
#loc257 = loc(fused[#loc78, #loc79])
#loc258 = loc(fused[#loc80, #loc81])
#loc259 = loc(fused[#loc84, #loc85])
#loc260 = loc(fused[#loc83, #loc85])
#loc261 = loc(fused[#loc82, #loc86])
#loc262 = loc(fused[#loc87, #loc86])
#loc263 = loc(fused[#loc88, #loc89])
#loc264 = loc(fused[#loc90, #loc91])
#loc265 = loc(fused[#loc93, #loc89])
#loc266 = loc(fused[#loc97, #loc98])
#loc267 = loc(fused[#loc100, #loc101])
#loc268 = loc(fused[#loc102, #loc103])
#loc269 = loc(fused[#loc104, #loc105])
#loc270 = loc(fused[#loc107, #loc106])
#loc271 = loc(fused[#loc109, #loc110])
#loc272 = loc(fused[#loc108, #loc111])
#loc273 = loc(fused[#loc113, #loc105])
#loc274 = loc(fused[#loc115, #loc114])
#loc275 = loc(fused[#loc119, #loc118])
#loc276 = loc(fused[#loc121, #loc122])
#loc277 = loc(fused[#loc124, #loc125])
#loc278 = loc(fused[#loc126, #loc127])
#loc279 = loc(fused[#loc128, #loc129])
#loc280 = loc(fused[#loc131, #loc130])
#loc281 = loc(fused[#loc132, #loc133])
#loc282 = loc(fused[#loc135, #loc129])
#loc283 = loc(fused[#loc137, #loc136])
#loc284 = loc(fused[#loc141, #loc140])
#loc285 = loc(fused[#loc142, #loc143])
#loc286 = loc(fused[#loc144, #loc145])
#loc287 = loc(fused[#loc146, #loc147])
#loc288 = loc(fused[#loc149, #loc148])
#loc289 = loc(fused[#loc150, #loc151])
#loc290 = loc(fused[#loc153, #loc147])
#loc291 = loc(fused[#loc159, #loc158])
#loc292 = loc(fused[#loc161, #loc162])
#loc293 = loc(fused[#loc163, #loc164])
#loc294 = loc(fused[#loc167, #loc168])
#loc295 = loc(fused[#loc166, #loc168])
#loc296 = loc(fused[#loc165, #loc169])
#loc297 = loc(fused[#loc170, #loc169])
#loc298 = loc(fused[#loc171, #loc172])
#loc299 = loc(fused[#loc173, #loc174])
#loc300 = loc(fused[#loc176, #loc172])
#loc301 = loc(fused[#loc180, #loc181])
#loc302 = loc(fused[#loc183, #loc184])
#loc303 = loc(fused[#loc185, #loc186])
#loc304 = loc(fused[#loc187, #loc188])
#loc305 = loc(fused[#loc190, #loc189])
#loc306 = loc(fused[#loc191, #loc192])
#loc307 = loc(fused[#loc194, #loc188])
#loc308 = loc(fused[#loc196, #loc195])
#loc309 = loc(fused[#loc200, #loc199])
#loc310 = loc(fused[#loc202, #loc203])
#loc311 = loc(fused[#loc205, #loc206])
#loc312 = loc(fused[#loc207, #loc208])
#loc313 = loc(fused[#loc209, #loc210])
#loc314 = loc(fused[#loc212, #loc211])
#loc315 = loc(fused[#loc213, #loc214])
#loc316 = loc(fused[#loc216, #loc210])
#loc317 = loc(fused[#loc222, #loc221])
