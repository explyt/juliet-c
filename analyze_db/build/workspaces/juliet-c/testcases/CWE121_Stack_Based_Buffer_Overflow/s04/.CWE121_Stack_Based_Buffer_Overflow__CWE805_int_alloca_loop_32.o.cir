!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc117)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc120)
    %2 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc121)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc122)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc123)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc124)
    %6 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc125)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc126)
    cir.store %4, %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc124)
    cir.store %4, %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc125)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc20)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc20)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc20)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc20)
    %12 = cir.alloca !u8i, !cir.ptr<!u8i>, %11 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc20)
    %13 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc127)
    %14 = cir.cast(bitcast, %12 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc20)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc20)
    cir.store %15, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc126)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc22)
    %18 = cir.const #cir.int<4> : !u64i loc(#loc22)
    %19 = cir.binop(mul, %17, %18) : !u64i loc(#loc22)
    %20 = cir.alloca !u8i, !cir.ptr<!u8i>, %19 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc22)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc22)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc22)
    cir.store %22, %13 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc127)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %23 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc6)
    %24 = cir.load %23 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc25)
    cir.store %24, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc119)
    %25 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc26)
    cir.store %25, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc129)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
    %27 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc29)
    cir.store %26, %27 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc130)
    cir.br ^bb2 loc(#loc24)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc131)
  ^bb3:  // pred: ^bb2
    %28 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc8)
    %29 = cir.load %28 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
    cir.store %29, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc120)
    cir.br ^bb4 loc(#loc132)
  ^bb4:  // pred: ^bb3
    %30 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc121)
    cir.store %30, %2 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc121)
    cir.br ^bb5 loc(#loc133)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc134)
  ^bb6:  // pred: ^bb5
    %31 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc40)
    cir.store %32, %3 : !u64i, !cir.ptr<!u64i> loc(#loc135)
    cir.br ^bb7 loc(#loc134)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %33 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc42)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc43)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc43)
    %36 = cir.cmp(lt, %33, %35) : !u64i, !cir.bool loc(#loc136)
    cir.brcond %36 ^bb8, ^bb12 loc(#loc44)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc137)
  ^bb9:  // pred: ^bb8
    %37 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    %38 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc47)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %37 : !u64i), !cir.ptr<!s32i> loc(#loc47)
    %40 = cir.load %39 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
    %42 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !u64i), !cir.ptr<!s32i> loc(#loc50)
    cir.store %40, %43 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    cir.br ^bb10 loc(#loc39)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc39)
  ^bb11:  // pred: ^bb10
    %44 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %45 = cir.unary(inc, %44) : !u64i, !u64i loc(#loc53)
    cir.store %45, %3 : !u64i, !cir.ptr<!u64i> loc(#loc139)
    cir.br ^bb7 loc(#loc134)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc39)
  ^bb13:  // pred: ^bb12
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
    %47 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %48 = cir.ptr_stride(%46 : !cir.ptr<!s32i>, %47 : !s32i), !cir.ptr<!s32i> loc(#loc56)
    %49 = cir.load %48 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    cir.call @printIntLine(%49) : (!s32i) -> () loc(#loc57)
    cir.br ^bb14 loc(#loc37)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc35)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc32)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc4)
  } loc(#loc118)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc141)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc60)
    cir.return loc(#loc59)
  } loc(#loc140)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc145)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc146)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc148)
    %6 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc149)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc150)
    cir.store %4, %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc148)
    cir.store %4, %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc149)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc79)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc79)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc79)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc79)
    %12 = cir.alloca !u8i, !cir.ptr<!u8i>, %11 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc79)
    %13 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc151)
    %14 = cir.cast(bitcast, %12 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc79)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc79)
    cir.store %15, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc150)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc81)
    %18 = cir.const #cir.int<4> : !u64i loc(#loc81)
    %19 = cir.binop(mul, %17, %18) : !u64i loc(#loc81)
    %20 = cir.alloca !u8i, !cir.ptr<!u8i>, %19 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc81)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc81)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc81)
    cir.store %22, %13 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc151)
    cir.br ^bb1 loc(#loc152)
  ^bb1:  // pred: ^bb0
    %23 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc65)
    %24 = cir.load %23 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
    cir.store %24, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc143)
    %25 = cir.load %13 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
    cir.store %25, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc153)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc87)
    %27 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc88)
    cir.store %26, %27 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc154)
    cir.br ^bb2 loc(#loc83)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc155)
  ^bb3:  // pred: ^bb2
    %28 = cir.load deref %6 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc67)
    %29 = cir.load %28 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc92)
    cir.store %29, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc144)
    cir.br ^bb4 loc(#loc156)
  ^bb4:  // pred: ^bb3
    %30 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc145)
    cir.store %30, %2 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc145)
    cir.br ^bb5 loc(#loc157)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc158)
  ^bb6:  // pred: ^bb5
    %31 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc99)
    cir.store %32, %3 : !u64i, !cir.ptr<!u64i> loc(#loc159)
    cir.br ^bb7 loc(#loc158)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %33 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc101)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc102)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc102)
    %36 = cir.cmp(lt, %33, %35) : !u64i, !cir.bool loc(#loc160)
    cir.brcond %36 ^bb8, ^bb12 loc(#loc103)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc161)
  ^bb9:  // pred: ^bb8
    %37 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc105)
    %38 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc106)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %37 : !u64i), !cir.ptr<!s32i> loc(#loc106)
    %40 = cir.load %39 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc107)
    %42 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc108)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !u64i), !cir.ptr<!s32i> loc(#loc109)
    cir.store %40, %43 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    cir.br ^bb10 loc(#loc98)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc98)
  ^bb11:  // pred: ^bb10
    %44 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc111)
    %45 = cir.unary(inc, %44) : !u64i, !u64i loc(#loc112)
    cir.store %45, %3 : !u64i, !cir.ptr<!u64i> loc(#loc163)
    cir.br ^bb7 loc(#loc158)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc98)
  ^bb13:  // pred: ^bb12
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc113)
    %47 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %48 = cir.ptr_stride(%46 : !cir.ptr<!s32i>, %47 : !s32i), !cir.ptr<!s32i> loc(#loc115)
    %49 = cir.load %48 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    cir.call @printIntLine(%49) : (!s32i) -> () loc(#loc116)
    cir.br ^bb14 loc(#loc96)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc94)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc91)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc63)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":50:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":29:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":29:23)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":36:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":36:23)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":38:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":38:33)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":40:17)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":40:24)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":23:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":23:11)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":24:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":24:24)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":25:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":25:24)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":26:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":26:34)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":27:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":27:35)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":28:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":34:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":29:22)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":32:16)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":32:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":33:21)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":33:10)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":33:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":35:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":49:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":36:22)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":37:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":48:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":39:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":47:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":42:17)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":45:17)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":42:26)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":42:22)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":42:29)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":42:33)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":42:31)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":43:17)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":44:38)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":44:31)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":44:21)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":44:26)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":44:27)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":44:39)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":42:39)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":42:38)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":46:30)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":46:35)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":46:36)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":46:17)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":87:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":90:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":89:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":89:13)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":57:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":85:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":65:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":65:23)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":71:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":71:23)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":73:13)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":73:33)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":75:17)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":75:24)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":59:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":59:11)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":60:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":60:24)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":61:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":61:24)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":62:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":62:34)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":63:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":63:35)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":64:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":69:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":65:22)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":67:16)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":67:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":68:21)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":68:10)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":68:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":70:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":84:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":71:22)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":72:9)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":83:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":74:13)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":82:13)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":77:17)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":80:17)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":77:26)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":77:22)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":77:29)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":77:33)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":77:31)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":78:17)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":79:38)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":79:31)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":79:21)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":79:26)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":79:27)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":79:39)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":77:39)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":77:38)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":81:30)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":81:35)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":81:36)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_alloca_loop_32.c":81:17)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc120 = loc(fused[#loc7, #loc8])
#loc121 = loc(fused[#loc9, #loc10])
#loc122 = loc(fused[#loc11, #loc12])
#loc123 = loc(fused[#loc13, #loc14])
#loc124 = loc(fused[#loc15, #loc16])
#loc125 = loc(fused[#loc17, #loc18])
#loc126 = loc(fused[#loc19, #loc20])
#loc127 = loc(fused[#loc21, #loc22])
#loc128 = loc(fused[#loc23, #loc24])
#loc129 = loc(fused[#loc27, #loc26])
#loc130 = loc(fused[#loc30, #loc28])
#loc131 = loc(fused[#loc31, #loc32])
#loc132 = loc(fused[#loc34, #loc35])
#loc133 = loc(fused[#loc36, #loc37])
#loc134 = loc(fused[#loc38, #loc39])
#loc135 = loc(fused[#loc41, #loc40])
#loc136 = loc(fused[#loc42, #loc43])
#loc137 = loc(fused[#loc45, #loc39])
#loc138 = loc(fused[#loc48, #loc51])
#loc139 = loc(fused[#loc53, #loc52])
#loc140 = loc(fused[#loc58, #loc59])
#loc141 = loc(fused[#loc60, #loc61])
#loc142 = loc(fused[#loc62, #loc63])
#loc143 = loc(fused[#loc64, #loc65])
#loc144 = loc(fused[#loc66, #loc67])
#loc145 = loc(fused[#loc68, #loc69])
#loc146 = loc(fused[#loc70, #loc71])
#loc147 = loc(fused[#loc72, #loc73])
#loc148 = loc(fused[#loc74, #loc75])
#loc149 = loc(fused[#loc76, #loc77])
#loc150 = loc(fused[#loc78, #loc79])
#loc151 = loc(fused[#loc80, #loc81])
#loc152 = loc(fused[#loc82, #loc83])
#loc153 = loc(fused[#loc86, #loc85])
#loc154 = loc(fused[#loc89, #loc87])
#loc155 = loc(fused[#loc90, #loc91])
#loc156 = loc(fused[#loc93, #loc94])
#loc157 = loc(fused[#loc95, #loc96])
#loc158 = loc(fused[#loc97, #loc98])
#loc159 = loc(fused[#loc100, #loc99])
#loc160 = loc(fused[#loc101, #loc102])
#loc161 = loc(fused[#loc104, #loc98])
#loc162 = loc(fused[#loc107, #loc110])
#loc163 = loc(fused[#loc112, #loc111])
