!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func internal private  @_ZL17staticReturnsTruev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc2)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc3)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    cir.return %2 : !s32i loc(#loc166)
  } loc(#loc165)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc167)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc168)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc9)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc10)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc169)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc170)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc15)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc171)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc18)
  cir.func  @_ZN49CWE23_Relative_Path_Traversal__char_file_fopen_083badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc174)
    %2 = cir.const #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc174)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc174)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc25)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    cir.scope {
      %4 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc29)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc177)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc180)
          %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc181)
          %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc38)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
          %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc38)
          cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc180)
          cir.scope {
            %11 = cir.const #cir.int<4096> : !s32i loc(#loc42)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc42)
            %13 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc43)
            %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc183)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc44)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc44)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc184)
            cir.if %17 {
              %18 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc46)
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc9)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc9)
              %21 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc10)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc10)
              %23 = cir.call @fopen(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc46)
              cir.store %23, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc186)
              cir.scope {
                %24 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc51)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc52)
                %26 = cir.cmp(ne, %24, %25) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc188)
                cir.if %26 {
                  cir.scope {
                    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
                    %30 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc57)
                    %31 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %30 : !u64i), !cir.ptr<!s8i> loc(#loc58)
                    %32 = cir.const #cir.int<4096> : !s32i loc(#loc59)
                    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc59)
                    %34 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc60)
                    %35 = cir.binop(sub, %33, %34) : !u64i loc(#loc191)
                    %36 = cir.cast(integral, %35 : !u64i), !s32i loc(#loc191)
                    %37 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc61)
                    %38 = cir.call @fgets(%31, %36, %37) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc62)
                    %39 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc63)
                    %40 = cir.cmp(eq, %38, %39) : !cir.ptr<!s8i>, !cir.bool loc(#loc192)
                    cir.if %40 {
                      %41 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc15)
                      %42 = cir.cast(array_to_ptrdecay, %41 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc15)
                      cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc65)
                      %43 = cir.const #cir.int<0> : !s8i loc(#loc66)
                      %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
                      %45 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc68)
                      %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc69)
                      cir.store %43, %46 : !s8i, !cir.ptr<!s8i> loc(#loc194)
                    } loc(#loc193)
                  } loc(#loc190)
                  %27 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc70)
                  %28 = cir.call @fclose(%27) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc71)
                } loc(#loc189)
              } loc(#loc187)
            } loc(#loc185)
          } loc(#loc182)
        } loc(#loc179)
      } loc(#loc178)
    } loc(#loc176)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc196)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc75)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc196)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc76)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
      %8 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc18)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc18)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc76)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc197)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc82)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc83)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc199)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc85)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc86)
        } loc(#loc200)
      } loc(#loc198)
    } loc(#loc195)
    cir.return loc(#loc20)
  } loc(#loc172)
  cir.func internal private  @_ZL18staticReturnsFalsev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc88)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc89)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    cir.return %2 : !s32i loc(#loc202)
  } loc(#loc201)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc91)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc203)
  cir.global "private"  constant internal dsolocal @".str5" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc94)
  cir.func internal private  @_ZN49CWE23_Relative_Path_Traversal__char_file_fopen_08L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc205)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc206)
    %2 = cir.const #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc206)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc206)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc101)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
    cir.scope {
      %4 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc105)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc209)
      cir.if %5 {
        %6 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc91)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc91)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc110)
      } else {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc111)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
        %8 = cir.get_global @".str5" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc94)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc94)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc111)
      } loc(#loc210)
    } loc(#loc208)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc212)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc116)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc212)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc117)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
      %8 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc119)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc119)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc117)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc213)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc124)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc125)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc215)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc127)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc128)
        } loc(#loc216)
      } loc(#loc214)
    } loc(#loc211)
    cir.return loc(#loc96)
  } loc(#loc204)
  cir.func internal private  @_ZN49CWE23_Relative_Path_Traversal__char_file_fopen_08L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc218)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc219)
    %2 = cir.const #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc219)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc219)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc135)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
    cir.scope {
      %4 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc139)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc222)
      cir.if %5 {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc142)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
        %8 = cir.get_global @".str5" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc144)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc144)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc142)
      } loc(#loc223)
    } loc(#loc221)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc225)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc148)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc225)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc149)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
      %8 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc151)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc151)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc149)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc226)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc156)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc157)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc228)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc159)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc160)
        } loc(#loc229)
      } loc(#loc227)
    } loc(#loc224)
    cir.return loc(#loc130)
  } loc(#loc217)
  cir.func  @_ZN49CWE23_Relative_Path_Traversal__char_file_fopen_084goodEv() extra(#fn_attr) {
    cir.call @_ZN49CWE23_Relative_Path_Traversal__char_file_fopen_08L8goodG2B1Ev() : () -> () loc(#loc163)
    cir.call @_ZN49CWE23_Relative_Path_Traversal__char_file_fopen_08L8goodG2B2Ev() : () -> () loc(#loc164)
    cir.return loc(#loc162)
  } loc(#loc230)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":41:1)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":44:1)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":43:12)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":43:5)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":264:1)
#loc8 = loc("/usr/include/stdio.h":266:3)
#loc9 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":70:31)
#loc10 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":70:41)
#loc11 = loc("/usr/include/stdio.h":654:1)
#loc12 = loc("/usr/include/stdio.h":655:59)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":76:35)
#loc16 = loc("/usr/include/stdio.h":184:1)
#loc17 = loc("/usr/include/stdio.h":184:36)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":88:29)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":56:1)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":94:1)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":58:5)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":58:12)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":59:5)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":59:37)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":60:12)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":60:5)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":61:5)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":84:5)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":61:8)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":61:26)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":62:5)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":63:9)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":83:9)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":65:13)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":65:41)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":66:13)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":66:20)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":65:30)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":65:37)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":68:13)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":82:13)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":68:17)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":68:30)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":68:40)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":69:13)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":70:25)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":70:17)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":70:44)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":71:17)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":81:17)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":71:21)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":71:30)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":72:17)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":74:21)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":79:21)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":74:31)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":74:36)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":74:35)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":74:51)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":74:64)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":74:74)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":74:25)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":74:84)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":75:21)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":76:25)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":78:41)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":78:25)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":78:30)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":78:37)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":80:28)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":80:21)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":85:5)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":93:5)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":86:9)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":86:23)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":88:17)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":88:23)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":88:9)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":88:34)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":89:9)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":92:9)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":89:13)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":89:22)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":90:9)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":91:20)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":91:13)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":46:1)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":49:1)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":48:12)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":48:5)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":109:19)
#loc92 = loc("/usr/include/string.h":149:1)
#loc93 = loc("/usr/include/string.h":150:14)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":114:22)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":101:1)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":125:1)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":103:5)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":103:12)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":104:5)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":104:37)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":105:12)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":105:5)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":106:5)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":115:5)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":106:8)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":106:27)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":107:5)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":110:5)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":112:5)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":109:9)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":114:9)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":114:16)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":116:5)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":124:5)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":117:9)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":117:23)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":119:17)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":119:23)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":119:29)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":119:9)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":119:34)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":120:9)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":123:9)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":120:13)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":120:22)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":121:9)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":122:20)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":122:13)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":128:1)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":147:1)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":130:5)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":130:12)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":131:5)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":131:37)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":132:12)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":132:5)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":133:5)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":137:5)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":133:8)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":133:26)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":134:5)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":136:9)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":136:16)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":136:22)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":138:5)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":146:5)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":139:9)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":139:23)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":141:17)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":141:23)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":141:29)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":141:9)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":141:34)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":142:9)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":145:9)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":142:13)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":142:22)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":143:9)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":144:20)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":144:13)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":149:1)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":153:1)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":151:5)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_file_fopen_08.cpp":152:5)
#loc165 = loc(fused[#loc1, #loc2])
#loc166 = loc(fused[#loc4, #loc3])
#loc167 = loc(fused[#loc5, #loc6])
#loc168 = loc(fused[#loc7, #loc8])
#loc169 = loc(fused[#loc11, #loc12])
#loc170 = loc(fused[#loc13, #loc14])
#loc171 = loc(fused[#loc16, #loc17])
#loc172 = loc(fused[#loc19, #loc20])
#loc173 = loc(fused[#loc21, #loc22])
#loc174 = loc(fused[#loc23, #loc24])
#loc175 = loc(fused[#loc26, #loc25])
#loc176 = loc(fused[#loc27, #loc28])
#loc177 = loc(fused[#loc29, #loc30])
#loc178 = loc(fused[#loc31, #loc28])
#loc179 = loc(fused[#loc32, #loc33])
#loc180 = loc(fused[#loc34, #loc35])
#loc181 = loc(fused[#loc36, #loc37])
#loc182 = loc(fused[#loc40, #loc41])
#loc183 = loc(fused[#loc42, #loc43])
#loc184 = loc(fused[#loc42, #loc44])
#loc185 = loc(fused[#loc45, #loc41])
#loc186 = loc(fused[#loc47, #loc48])
#loc187 = loc(fused[#loc49, #loc50])
#loc188 = loc(fused[#loc51, #loc52])
#loc189 = loc(fused[#loc53, #loc50])
#loc190 = loc(fused[#loc54, #loc55])
#loc191 = loc(fused[#loc59, #loc60])
#loc192 = loc(fused[#loc62, #loc63])
#loc193 = loc(fused[#loc64, #loc55])
#loc194 = loc(fused[#loc67, #loc66])
#loc195 = loc(fused[#loc72, #loc73])
#loc196 = loc(fused[#loc74, #loc75])
#loc197 = loc(fused[#loc78, #loc79])
#loc198 = loc(fused[#loc80, #loc81])
#loc199 = loc(fused[#loc82, #loc83])
#loc200 = loc(fused[#loc84, #loc81])
#loc201 = loc(fused[#loc87, #loc88])
#loc202 = loc(fused[#loc90, #loc89])
#loc203 = loc(fused[#loc92, #loc93])
#loc204 = loc(fused[#loc95, #loc96])
#loc205 = loc(fused[#loc97, #loc98])
#loc206 = loc(fused[#loc99, #loc100])
#loc207 = loc(fused[#loc102, #loc101])
#loc208 = loc(fused[#loc103, #loc104])
#loc209 = loc(fused[#loc105, #loc106])
#loc210 = loc(fused[#loc107, #loc108, #loc109, #loc104])
#loc211 = loc(fused[#loc113, #loc114])
#loc212 = loc(fused[#loc115, #loc116])
#loc213 = loc(fused[#loc120, #loc121])
#loc214 = loc(fused[#loc122, #loc123])
#loc215 = loc(fused[#loc124, #loc125])
#loc216 = loc(fused[#loc126, #loc123])
#loc217 = loc(fused[#loc129, #loc130])
#loc218 = loc(fused[#loc131, #loc132])
#loc219 = loc(fused[#loc133, #loc134])
#loc220 = loc(fused[#loc136, #loc135])
#loc221 = loc(fused[#loc137, #loc138])
#loc222 = loc(fused[#loc139, #loc140])
#loc223 = loc(fused[#loc141, #loc138])
#loc224 = loc(fused[#loc145, #loc146])
#loc225 = loc(fused[#loc147, #loc148])
#loc226 = loc(fused[#loc152, #loc153])
#loc227 = loc(fused[#loc154, #loc155])
#loc228 = loc(fused[#loc156, #loc157])
#loc229 = loc(fused[#loc158, #loc155])
#loc230 = loc(fused[#loc161, #loc162])
