!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc88 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":137:10)
#loc89 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":137:14)
#loc90 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":137:20)
#loc91 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":137:32)
#loc260 = loc(fused[#loc88, #loc89])
#loc261 = loc(fused[#loc90, #loc91])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_cpy_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc228)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc229)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc230)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc231)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc232)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_cpy_07_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc234)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc235)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc228)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc19)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc20)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc237)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc240)
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc26)
          %8 = cir.const #cir.int<100> : !s32i loc(#loc27)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc27)
          %10 = cir.const #cir.int<1> : !u64i loc(#loc241)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc242)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc26)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc243)
          cir.store %13, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc240)
          cir.scope {
            %32 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
            %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
            %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
            %35 = cir.cmp(eq, %32, %34) : !cir.ptr<!s8i>, !cir.bool loc(#loc245)
            cir.if %35 {
              %36 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
              %37 = cir.const #cir.int<1> : !s32i loc(#loc36)
              %38 = cir.unary(minus, %37) : !s32i, !s32i loc(#loc37)
              cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
            } loc(#loc246)
          } loc(#loc244)
          %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
          %16 = cir.const #cir.int<65> : !s32i loc(#loc39)
          %17 = cir.const #cir.int<100> : !s32i loc(#loc40)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc40)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc40)
          cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc247)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc44)
          %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc44)
          %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
          %24 = cir.const #cir.int<100> : !s32i loc(#loc46)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc47)
          %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc46)
          %27 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc48)
          cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc248)
          %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
          %29 = cir.const #cir.int<8> : !s32i loc(#loc50)
          %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc50)
          %31 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc51)
          cir.store %31, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc249)
        } loc(#loc239)
      } loc(#loc238)
    } loc(#loc236)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc251)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc58)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc59)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc60)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc59)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc59)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc252)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc63)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc63)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc64)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc65)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc64)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc66)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc253)
      %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc67)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
      %20 = cir.call @strcpy(%18, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc67)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    } loc(#loc250)
    cir.return loc(#loc12)
  } loc(#loc233)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_cpy_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc255)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc256)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc76)
    cir.return loc(#loc73)
  } loc(#loc254)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc257)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc258)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc85)
  cir.func @main(%arg0: !s32i loc(fused[#loc88, #loc89]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc90, #loc91])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc260)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc261)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc87)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc92)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc93)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc94)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc94)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc95)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc82)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__malloc_char_cpy_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc262)
    cir.call @CWE124_Buffer_Underwrite__malloc_char_cpy_07_good() : () -> () loc(#loc97)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc83)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc84)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__malloc_char_cpy_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc263)
    cir.call @CWE124_Buffer_Underwrite__malloc_char_cpy_07_bad() : () -> () loc(#loc101)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc85)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc104)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc264)
    cir.return %17 : !s32i loc(#loc264)
  } loc(#loc259)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc106)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc266)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc111)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc267)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc228)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc115)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc116)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc269)
      cir.if %5 {
        %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc106)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc106)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc120)
      } else {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc272)
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc125)
          %8 = cir.const #cir.int<100> : !s32i loc(#loc126)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc126)
          %10 = cir.const #cir.int<1> : !u64i loc(#loc273)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc274)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc125)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc275)
          cir.store %13, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc272)
          cir.scope {
            %29 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc132)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc132)
            %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc277)
            cir.if %32 {
              %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc134)
              %34 = cir.const #cir.int<1> : !s32i loc(#loc135)
              %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc136)
              cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc134)
            } loc(#loc278)
          } loc(#loc276)
          %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc137)
          %16 = cir.const #cir.int<65> : !s32i loc(#loc138)
          %17 = cir.const #cir.int<100> : !s32i loc(#loc139)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc140)
          %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc139)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc139)
          cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc279)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc143)
          %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc143)
          %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
          %24 = cir.const #cir.int<100> : !s32i loc(#loc145)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc146)
          %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc145)
          %27 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc147)
          cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc280)
          %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
          cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc281)
        } loc(#loc271)
      } loc(#loc270)
    } loc(#loc268)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc283)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc154)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc154)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc155)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc156)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc157)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc156)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc156)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc284)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc160)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc160)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc161)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc162)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc161)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc163)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc163)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc285)
      %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc164)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
      %20 = cir.call @strcpy(%18, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc164)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc168)
    } loc(#loc282)
    cir.return loc(#loc108)
  } loc(#loc265)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc287)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc173)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc288)
    cir.scope {
      %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc228)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc177)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc178)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc290)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc293)
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc184)
          %8 = cir.const #cir.int<100> : !s32i loc(#loc185)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc185)
          %10 = cir.const #cir.int<1> : !u64i loc(#loc294)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc295)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc184)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc296)
          cir.store %13, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc293)
          cir.scope {
            %29 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
            %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc191)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc191)
            %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc298)
            cir.if %32 {
              %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc193)
              %34 = cir.const #cir.int<1> : !s32i loc(#loc194)
              %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc195)
              cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc193)
            } loc(#loc299)
          } loc(#loc297)
          %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc196)
          %16 = cir.const #cir.int<65> : !s32i loc(#loc197)
          %17 = cir.const #cir.int<100> : !s32i loc(#loc198)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc199)
          %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc198)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc198)
          cir.libc.memset %20 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc300)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc202)
          %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc202)
          %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
          %24 = cir.const #cir.int<100> : !s32i loc(#loc204)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc205)
          %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc204)
          %27 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc206)
          cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc301)
          %28 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
          cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc302)
        } loc(#loc292)
      } loc(#loc291)
    } loc(#loc289)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc304)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc213)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc213)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc214)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc215)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc216)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc215)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc215)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc305)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc219)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc219)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc220)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc221)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc220)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc222)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc222)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc306)
      %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc223)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc224)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc225)
      %20 = cir.call @strcpy(%18, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc223)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc226)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc227)
    } loc(#loc303)
    cir.return loc(#loc170)
  } loc(#loc286)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":0:0)
#loc1 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":25:1)
#loc2 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":25:25)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":29:1)
#loc12 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":54:1)
#loc13 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":31:5)
#loc14 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":31:12)
#loc15 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":32:12)
#loc16 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":32:5)
#loc17 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":33:5)
#loc18 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":43:5)
#loc19 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":33:8)
#loc20 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":33:20)
#loc21 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":34:5)
#loc22 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":35:9)
#loc23 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":42:9)
#loc24 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":36:13)
#loc25 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":36:64)
#loc26 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":36:41)
#loc27 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":36:48)
#loc28 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":36:52)
#loc29 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":36:63)
#loc30 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":37:13)
#loc31 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":37:47)
#loc32 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":37:17)
#loc33 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":37:31)
#loc34 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":37:37)
#loc35 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":37:38)
#loc36 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":37:44)
#loc37 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":37:43)
#loc38 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":38:20)
#loc39 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":38:32)
#loc40 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":38:37)
#loc41 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":38:41)
#loc42 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":38:13)
#loc43 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":38:42)
#loc44 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":39:33)
#loc45 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":39:13)
#loc46 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":39:24)
#loc47 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":39:28)
#loc48 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":39:29)
#loc49 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":41:20)
#loc50 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":41:33)
#loc51 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":41:31)
#loc52 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":41:13)
#loc53 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":44:5)
#loc54 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":53:5)
#loc55 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":45:9)
#loc56 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":45:24)
#loc57 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":46:16)
#loc58 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":46:24)
#loc59 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":46:29)
#loc60 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":46:33)
#loc61 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":46:9)
#loc62 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":46:34)
#loc63 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":47:25)
#loc64 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":47:16)
#loc65 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":47:20)
#loc66 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":47:9)
#loc67 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":49:9)
#loc68 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":49:16)
#loc69 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":49:22)
#loc70 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":50:19)
#loc71 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":50:9)
#loc72 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":121:1)
#loc73 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":125:1)
#loc74 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":123:5)
#loc75 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":123:14)
#loc76 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":124:5)
#loc77 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":124:14)
#loc78 = loc("/usr/include/stdlib.h":575:1)
#loc79 = loc("/usr/include/stdlib.h":575:41)
#loc80 = loc("/usr/include/time.h":76:1)
#loc81 = loc("/usr/include/time.h":76:38)
#loc82 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":142:15)
#loc83 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":144:15)
#loc84 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":147:15)
#loc85 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":149:15)
#loc86 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":137:1)
#loc87 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":152:1)
#loc92 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":138:1)
#loc93 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":140:27)
#loc94 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":140:22)
#loc95 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":140:5)
#loc96 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":142:5)
#loc97 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":143:5)
#loc98 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":143:55)
#loc99 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":144:5)
#loc100 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":147:5)
#loc101 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":148:5)
#loc102 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":148:54)
#loc103 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":149:5)
#loc104 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":151:12)
#loc105 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":151:5)
#loc106 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":68:19)
#loc107 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":61:1)
#loc108 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":91:1)
#loc109 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":63:5)
#loc110 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":63:12)
#loc111 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":64:12)
#loc112 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":64:5)
#loc113 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":65:5)
#loc114 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":80:5)
#loc115 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":65:8)
#loc116 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":65:20)
#loc117 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":66:5)
#loc118 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":69:5)
#loc119 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":71:5)
#loc120 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":68:9)
#loc121 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":72:9)
#loc122 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":79:9)
#loc123 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":73:13)
#loc124 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":73:64)
#loc125 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":73:41)
#loc126 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":73:48)
#loc127 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":73:52)
#loc128 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":73:63)
#loc129 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":74:13)
#loc130 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":74:47)
#loc131 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":74:17)
#loc132 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":74:31)
#loc133 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":74:37)
#loc134 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":74:38)
#loc135 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":74:44)
#loc136 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":74:43)
#loc137 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":75:20)
#loc138 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":75:32)
#loc139 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":75:37)
#loc140 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":75:41)
#loc141 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":75:13)
#loc142 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":75:42)
#loc143 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":76:33)
#loc144 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":76:13)
#loc145 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":76:24)
#loc146 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":76:28)
#loc147 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":76:29)
#loc148 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":78:20)
#loc149 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":78:13)
#loc150 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":81:5)
#loc151 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":90:5)
#loc152 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":82:9)
#loc153 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":82:24)
#loc154 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":83:16)
#loc155 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":83:24)
#loc156 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":83:29)
#loc157 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":83:33)
#loc158 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":83:9)
#loc159 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":83:34)
#loc160 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":84:25)
#loc161 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":84:16)
#loc162 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":84:20)
#loc163 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":84:9)
#loc164 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":86:9)
#loc165 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":86:16)
#loc166 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":86:22)
#loc167 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":87:19)
#loc168 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":87:9)
#loc169 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":94:1)
#loc170 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":119:1)
#loc171 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":96:5)
#loc172 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":96:12)
#loc173 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":97:12)
#loc174 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":97:5)
#loc175 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":98:5)
#loc176 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":108:5)
#loc177 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":98:8)
#loc178 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":98:20)
#loc179 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":99:5)
#loc180 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":100:9)
#loc181 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":107:9)
#loc182 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":101:13)
#loc183 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":101:64)
#loc184 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":101:41)
#loc185 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":101:48)
#loc186 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":101:52)
#loc187 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":101:63)
#loc188 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":102:13)
#loc189 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":102:47)
#loc190 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":102:17)
#loc191 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":102:31)
#loc192 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":102:37)
#loc193 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":102:38)
#loc194 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":102:44)
#loc195 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":102:43)
#loc196 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":103:20)
#loc197 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":103:32)
#loc198 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":103:37)
#loc199 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":103:41)
#loc200 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":103:13)
#loc201 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":103:42)
#loc202 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":104:33)
#loc203 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":104:13)
#loc204 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":104:24)
#loc205 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":104:28)
#loc206 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":104:29)
#loc207 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":106:20)
#loc208 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":106:13)
#loc209 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":109:5)
#loc210 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":118:5)
#loc211 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":110:9)
#loc212 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":110:24)
#loc213 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":111:16)
#loc214 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":111:24)
#loc215 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":111:29)
#loc216 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":111:33)
#loc217 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":111:9)
#loc218 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":111:34)
#loc219 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":112:25)
#loc220 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":112:16)
#loc221 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":112:20)
#loc222 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":112:9)
#loc223 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":114:9)
#loc224 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":114:16)
#loc225 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":114:22)
#loc226 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":115:19)
#loc227 = loc("CWE124_Buffer_Underwrite__malloc_char_cpy_07.c":115:9)
#loc228 = loc(fused[#loc1, #loc2])
#loc229 = loc(fused[#loc3, #loc4])
#loc230 = loc(fused[#loc5, #loc6])
#loc231 = loc(fused[#loc7, #loc8])
#loc232 = loc(fused[#loc9, #loc10])
#loc233 = loc(fused[#loc11, #loc12])
#loc234 = loc(fused[#loc13, #loc14])
#loc235 = loc(fused[#loc16, #loc15])
#loc236 = loc(fused[#loc17, #loc18])
#loc237 = loc(fused[#loc19, #loc20])
#loc238 = loc(fused[#loc21, #loc18])
#loc239 = loc(fused[#loc22, #loc23])
#loc240 = loc(fused[#loc24, #loc25])
#loc241 = loc(fused[#loc28, #loc29])
#loc242 = loc(fused[#loc27, #loc29])
#loc243 = loc(fused[#loc26, #loc25])
#loc244 = loc(fused[#loc30, #loc31])
#loc245 = loc(fused[#loc32, #loc33])
#loc246 = loc(fused[#loc34, #loc31])
#loc247 = loc(fused[#loc42, #loc43])
#loc248 = loc(fused[#loc45, #loc44])
#loc249 = loc(fused[#loc52, #loc50])
#loc250 = loc(fused[#loc53, #loc54])
#loc251 = loc(fused[#loc55, #loc56])
#loc252 = loc(fused[#loc61, #loc62])
#loc253 = loc(fused[#loc66, #loc63])
#loc254 = loc(fused[#loc72, #loc73])
#loc255 = loc(fused[#loc74, #loc75])
#loc256 = loc(fused[#loc76, #loc77])
#loc257 = loc(fused[#loc78, #loc79])
#loc258 = loc(fused[#loc80, #loc81])
#loc259 = loc(fused[#loc86, #loc87])
#loc262 = loc(fused[#loc97, #loc98])
#loc263 = loc(fused[#loc101, #loc102])
#loc264 = loc(fused[#loc105, #loc104])
#loc265 = loc(fused[#loc107, #loc108])
#loc266 = loc(fused[#loc109, #loc110])
#loc267 = loc(fused[#loc112, #loc111])
#loc268 = loc(fused[#loc113, #loc114])
#loc269 = loc(fused[#loc115, #loc116])
#loc270 = loc(fused[#loc117, #loc118, #loc119, #loc114])
#loc271 = loc(fused[#loc121, #loc122])
#loc272 = loc(fused[#loc123, #loc124])
#loc273 = loc(fused[#loc127, #loc128])
#loc274 = loc(fused[#loc126, #loc128])
#loc275 = loc(fused[#loc125, #loc124])
#loc276 = loc(fused[#loc129, #loc130])
#loc277 = loc(fused[#loc131, #loc132])
#loc278 = loc(fused[#loc133, #loc130])
#loc279 = loc(fused[#loc141, #loc142])
#loc280 = loc(fused[#loc144, #loc143])
#loc281 = loc(fused[#loc149, #loc148])
#loc282 = loc(fused[#loc150, #loc151])
#loc283 = loc(fused[#loc152, #loc153])
#loc284 = loc(fused[#loc158, #loc159])
#loc285 = loc(fused[#loc163, #loc160])
#loc286 = loc(fused[#loc169, #loc170])
#loc287 = loc(fused[#loc171, #loc172])
#loc288 = loc(fused[#loc174, #loc173])
#loc289 = loc(fused[#loc175, #loc176])
#loc290 = loc(fused[#loc177, #loc178])
#loc291 = loc(fused[#loc179, #loc176])
#loc292 = loc(fused[#loc180, #loc181])
#loc293 = loc(fused[#loc182, #loc183])
#loc294 = loc(fused[#loc186, #loc187])
#loc295 = loc(fused[#loc185, #loc187])
#loc296 = loc(fused[#loc184, #loc183])
#loc297 = loc(fused[#loc188, #loc189])
#loc298 = loc(fused[#loc190, #loc191])
#loc299 = loc(fused[#loc192, #loc189])
#loc300 = loc(fused[#loc200, #loc201])
#loc301 = loc(fused[#loc203, #loc202])
#loc302 = loc(fused[#loc208, #loc207])
#loc303 = loc(fused[#loc209, #loc210])
#loc304 = loc(fused[#loc211, #loc212])
#loc305 = loc(fused[#loc217, #loc218])
#loc306 = loc(fused[#loc222, #loc219])
