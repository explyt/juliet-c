!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE135_65b_badSink(!cir.ptr<!void>) loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<[#cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<0> : !s32i]> : !cir.array<!s32i x 43> {alignment = 4 : i64} loc(#loc3)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE135_65_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc51)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!void>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc52)
    %2 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE135_65b_badSink : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc9)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!void>)>>> loc(#loc52)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc10)
    cir.store %3, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc53)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 43>> loc(#loc3)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 43>>), !cir.ptr<!s32i> loc(#loc3)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc3)
    cir.store %6, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc54)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!void>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc13)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc14)
    cir.call %7(%8) : (!cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!void>) -> () loc(#loc13)
    cir.return loc(#loc5)
  } loc(#loc50)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE135_65_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc56)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc17)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc57)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc19)
    cir.return loc(#loc16)
  } loc(#loc55)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE135_65b_goodG2BSink(!cir.ptr<!void>) loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\00" : !cir.array<!s8i x 43>> : !cir.array<!s8i x 43> {alignment = 1 : i64} loc(#loc23)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc60)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!void>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc61)
    %2 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE135_65b_goodG2BSink : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc29)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!void>)>>> loc(#loc61)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    cir.store %3, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc62)
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 43>> loc(#loc23)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 43>>), !cir.ptr<!s8i> loc(#loc23)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
    cir.store %6, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc63)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!void>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc33)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc34)
    cir.call %7(%8) : (!cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!void>) -> () loc(#loc33)
    cir.return loc(#loc25)
  } loc(#loc59)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE135_65b_goodB2GSink(!cir.ptr<!void>) loc(#loc64)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc66)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!void>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc67)
    %2 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE135_65b_goodB2GSink : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc42)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!void>)>>> loc(#loc67)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
    cir.store %3, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc68)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 43>> loc(#loc45)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 43>>), !cir.ptr<!s32i> loc(#loc45)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc45)
    cir.store %6, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc69)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!void>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc47)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc48)
    cir.call %7(%8) : (!cir.ptr<!cir.func<(!cir.ptr<!void>)>>, !cir.ptr<!void>) -> () loc(#loc47)
    cir.return loc(#loc38)
  } loc(#loc65)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":28:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":28:72)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":37:20)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":30:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":40:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":32:5)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":32:12)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":34:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":34:32)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":35:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":35:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":37:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":39:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":39:13)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":72:1)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":76:1)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":74:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":74:13)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":75:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":75:13)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":47:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":47:76)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":55:20)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":49:1)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":57:1)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":51:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":51:12)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":52:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":52:32)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":53:12)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":53:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":55:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":56:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":56:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":60:1)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":60:76)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":62:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":70:1)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":64:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":64:12)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":65:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":65:32)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":66:12)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":66:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":68:20)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":68:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":69:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_65a.c":69:13)
#loc49 = loc(fused[#loc1, #loc2])
#loc50 = loc(fused[#loc4, #loc5])
#loc51 = loc(fused[#loc6, #loc7])
#loc52 = loc(fused[#loc8, #loc9])
#loc53 = loc(fused[#loc11, #loc10])
#loc54 = loc(fused[#loc12, #loc3])
#loc55 = loc(fused[#loc15, #loc16])
#loc56 = loc(fused[#loc17, #loc18])
#loc57 = loc(fused[#loc19, #loc20])
#loc58 = loc(fused[#loc21, #loc22])
#loc59 = loc(fused[#loc24, #loc25])
#loc60 = loc(fused[#loc26, #loc27])
#loc61 = loc(fused[#loc28, #loc29])
#loc62 = loc(fused[#loc31, #loc30])
#loc63 = loc(fused[#loc32, #loc23])
#loc64 = loc(fused[#loc35, #loc36])
#loc65 = loc(fused[#loc37, #loc38])
#loc66 = loc(fused[#loc39, #loc40])
#loc67 = loc(fused[#loc41, #loc42])
#loc68 = loc(fused[#loc44, #loc43])
#loc69 = loc(fused[#loc46, #loc45])
