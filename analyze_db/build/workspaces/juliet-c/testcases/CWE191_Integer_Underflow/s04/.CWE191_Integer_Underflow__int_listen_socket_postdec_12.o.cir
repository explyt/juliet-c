!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__int_listen_socket_postdec_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc510)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc511)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc512)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc513)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc514)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc515)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc516)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc517)
  cir.func private @close(!s32i) -> !s32i loc(#loc518)
  cir.func private @printIntLine(!s32i) loc(#loc519)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc520)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc23)
  cir.func no_proto @CWE191_Integer_Underflow__int_listen_socket_postdec_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc522)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc28)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc523)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc525)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc525)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc32)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc32)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc528)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc529)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc530)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc531)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc532)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc44)
          cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc530)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc46)
          %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc46)
          cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc531)
          cir.scope {
            cir.do {
              cir.scope {
                %15 = cir.const #cir.int<2> : !s32i loc(#loc53)
                %16 = cir.const #cir.int<1> : !s32i loc(#loc54)
                %17 = cir.const #cir.int<6> : !s32i loc(#loc55)
                %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
                cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc535)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc62)
                  %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc62)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc537)
                  cir.if %63 {
                    cir.break loc(#loc64)
                  } loc(#loc538)
                } loc(#loc536)
                %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc539)
                %20 = cir.const #cir.int<0> : !s32i loc(#loc67)
                %21 = cir.const #cir.int<16> : !u64i loc(#loc540)
                cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc541)
                %22 = cir.const #cir.int<2> : !s32i loc(#loc72)
                %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc72)
                %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc542)
                %25 = cir.const #cir.int<0> : !s32i loc(#loc75)
                %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc75)
                %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
                %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
                cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc543)
                %29 = cir.const #cir.int<27015> : !s32i loc(#loc79)
                %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc79)
                %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc80)
                %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
                cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc544)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc86)
                  %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc546)
                  %62 = cir.const #cir.int<16> : !u64i loc(#loc547)
                  %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc547)
                  %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc91)
                  %65 = cir.const #cir.int<1> : !s32i loc(#loc92)
                  %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc92)
                  %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc548)
                  cir.if %67 {
                    cir.break loc(#loc94)
                  } loc(#loc549)
                } loc(#loc545)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                  %61 = cir.const #cir.int<5> : !s32i loc(#loc98)
                  %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc99)
                  %63 = cir.const #cir.int<1> : !s32i loc(#loc100)
                  %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc100)
                  %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc551)
                  cir.if %65 {
                    cir.break loc(#loc102)
                  } loc(#loc552)
                } loc(#loc550)
                %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc104)
                %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc105)
                %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc106)
                cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc553)
                cir.scope {
                  %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc112)
                  %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc112)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc555)
                  cir.if %63 {
                    cir.break loc(#loc114)
                  } loc(#loc556)
                } loc(#loc554)
                %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc115)
                %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc116)
                %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
                %40 = cir.const #cir.int<3> : !s32i loc(#loc117)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc117)
                %42 = cir.const #cir.int<4> : !u64i loc(#loc117)
                %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc117)
                %44 = cir.const #cir.int<2> : !s32i loc(#loc117)
                %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc117)
                %46 = cir.binop(add, %43, %45) : !u64i loc(#loc117)
                %47 = cir.const #cir.int<1> : !s32i loc(#loc118)
                %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc118)
                %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc557)
                %50 = cir.const #cir.int<0> : !s32i loc(#loc119)
                %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc120)
                %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc120)
                cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc558)
                cir.scope {
                  %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc125)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc126)
                  %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc126)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc560)
                  %64 = cir.ternary(%63, true {
                    %65 = cir.const #true loc(#loc127)
                    cir.yield %65 : !cir.bool loc(#loc127)
                  }, false {
                    %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc128)
                    %66 = cir.const #cir.int<0> : !s32i loc(#loc129)
                    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc561)
                    %68 = cir.ternary(%67, true {
                      %69 = cir.const #true loc(#loc127)
                      cir.yield %69 : !cir.bool loc(#loc127)
                    }, false {
                      %69 = cir.const #false loc(#loc127)
                      cir.yield %69 : !cir.bool loc(#loc127)
                    }) : (!cir.bool) -> !cir.bool loc(#loc127)
                    cir.yield %68 : !cir.bool loc(#loc127)
                  }) : (!cir.bool) -> !cir.bool loc(#loc127)
                  cir.if %64 {
                    cir.break loc(#loc131)
                  } loc(#loc562)
                } loc(#loc559)
                %53 = cir.const #cir.int<0> : !s32i loc(#loc132)
                %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc132)
                %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc133)
                %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc134)
                %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc134)
                cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc563)
                %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc135)
                %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc136)
                cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc564)
              } loc(#loc534)
              cir.yield loc(#loc50)
            } while {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc139)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc139)
              cir.condition(%16) loc(#loc139)
            } loc(#loc533)
          } loc(#loc533)
          cir.scope {
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc142)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc143)
            %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc143)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc566)
            cir.if %18 {
              %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc145)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc146)
            } loc(#loc567)
          } loc(#loc565)
          cir.scope {
            %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc149)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc150)
            %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc150)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc569)
            cir.if %18 {
              %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc152)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc153)
            } loc(#loc570)
          } loc(#loc568)
        } loc(#loc527)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc154)
        %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc155)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc571)
      } loc(#loc526)
    } loc(#loc524)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc573)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc573)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc159)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc159)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc576)
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc168)
          %8 = cir.unary(dec, %7) nsw : !s32i, !s32i loc(#loc169)
          cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc577)
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc167)
          cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc576)
          %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc170)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc171)
        } loc(#loc575)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc174)
          %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc175)
          %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc175)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc175)
          %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc175)
          %11 = cir.cmp(gt, %6, %10) : !s32i, !cir.bool loc(#loc579)
          cir.if %11 {
            %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc581)
            %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc181)
            %14 = cir.unary(dec, %13) nsw : !s32i, !s32i loc(#loc182)
            cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc582)
            %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc180)
            cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc581)
            %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc183)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc184)
          } else {
            %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc23)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc23)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc185)
          } loc(#loc580)
        } loc(#loc578)
      } loc(#loc574)
    } loc(#loc572)
    cir.return loc(#loc25)
  } loc(#loc521)
  cir.func no_proto @CWE191_Integer_Underflow__int_listen_socket_postdec_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc584)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc188)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc585)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc190)
    cir.return loc(#loc187)
  } loc(#loc583)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc587)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc196)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc588)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc590)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc590)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc200)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc200)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc593)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc594)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc595)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc596)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc597)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc212)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc212)
          cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc595)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc214)
          %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc214)
          cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc596)
          cir.scope {
            cir.do {
              cir.scope {
                %15 = cir.const #cir.int<2> : !s32i loc(#loc221)
                %16 = cir.const #cir.int<1> : !s32i loc(#loc222)
                %17 = cir.const #cir.int<6> : !s32i loc(#loc223)
                %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc224)
                cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc600)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc229)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc230)
                  %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc230)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc602)
                  cir.if %63 {
                    cir.break loc(#loc232)
                  } loc(#loc603)
                } loc(#loc601)
                %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc604)
                %20 = cir.const #cir.int<0> : !s32i loc(#loc235)
                %21 = cir.const #cir.int<16> : !u64i loc(#loc605)
                cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc606)
                %22 = cir.const #cir.int<2> : !s32i loc(#loc240)
                %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc240)
                %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc607)
                %25 = cir.const #cir.int<0> : !s32i loc(#loc242)
                %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc242)
                %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
                %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
                cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc608)
                %29 = cir.const #cir.int<27015> : !s32i loc(#loc244)
                %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc244)
                %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc245)
                %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
                cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc609)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc250)
                  %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc611)
                  %62 = cir.const #cir.int<16> : !u64i loc(#loc612)
                  %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc612)
                  %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc255)
                  %65 = cir.const #cir.int<1> : !s32i loc(#loc256)
                  %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc256)
                  %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc613)
                  cir.if %67 {
                    cir.break loc(#loc258)
                  } loc(#loc614)
                } loc(#loc610)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc261)
                  %61 = cir.const #cir.int<5> : !s32i loc(#loc262)
                  %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc263)
                  %63 = cir.const #cir.int<1> : !s32i loc(#loc264)
                  %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc264)
                  %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc616)
                  cir.if %65 {
                    cir.break loc(#loc266)
                  } loc(#loc617)
                } loc(#loc615)
                %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc267)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc268)
                %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc269)
                %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc270)
                cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc618)
                cir.scope {
                  %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc275)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc276)
                  %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc276)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc620)
                  cir.if %63 {
                    cir.break loc(#loc278)
                  } loc(#loc621)
                } loc(#loc619)
                %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc279)
                %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc280)
                %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc280)
                %40 = cir.const #cir.int<3> : !s32i loc(#loc281)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc281)
                %42 = cir.const #cir.int<4> : !u64i loc(#loc281)
                %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc281)
                %44 = cir.const #cir.int<2> : !s32i loc(#loc281)
                %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc281)
                %46 = cir.binop(add, %43, %45) : !u64i loc(#loc281)
                %47 = cir.const #cir.int<1> : !s32i loc(#loc282)
                %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc282)
                %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc622)
                %50 = cir.const #cir.int<0> : !s32i loc(#loc283)
                %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc284)
                %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc284)
                cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc623)
                cir.scope {
                  %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc289)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc290)
                  %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc290)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc625)
                  %64 = cir.ternary(%63, true {
                    %65 = cir.const #true loc(#loc291)
                    cir.yield %65 : !cir.bool loc(#loc291)
                  }, false {
                    %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc292)
                    %66 = cir.const #cir.int<0> : !s32i loc(#loc293)
                    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc626)
                    %68 = cir.ternary(%67, true {
                      %69 = cir.const #true loc(#loc291)
                      cir.yield %69 : !cir.bool loc(#loc291)
                    }, false {
                      %69 = cir.const #false loc(#loc291)
                      cir.yield %69 : !cir.bool loc(#loc291)
                    }) : (!cir.bool) -> !cir.bool loc(#loc291)
                    cir.yield %68 : !cir.bool loc(#loc291)
                  }) : (!cir.bool) -> !cir.bool loc(#loc291)
                  cir.if %64 {
                    cir.break loc(#loc295)
                  } loc(#loc627)
                } loc(#loc624)
                %53 = cir.const #cir.int<0> : !s32i loc(#loc296)
                %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc296)
                %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc297)
                %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc298)
                %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc298)
                cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc628)
                %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc299)
                %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc300)
                cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc629)
              } loc(#loc599)
              cir.yield loc(#loc218)
            } while {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc303)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc303)
              cir.condition(%16) loc(#loc303)
            } loc(#loc598)
          } loc(#loc598)
          cir.scope {
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc306)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc307)
            %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc307)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc631)
            cir.if %18 {
              %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc309)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc310)
            } loc(#loc632)
          } loc(#loc630)
          cir.scope {
            %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc313)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc314)
            %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc314)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc634)
            cir.if %18 {
              %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc316)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc317)
            } loc(#loc635)
          } loc(#loc633)
        } loc(#loc592)
      } else {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc637)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc638)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc639)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc640)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc641)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc325)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc325)
          cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc639)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc327)
          %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc327)
          cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc640)
          cir.scope {
            cir.do {
              cir.scope {
                %15 = cir.const #cir.int<2> : !s32i loc(#loc334)
                %16 = cir.const #cir.int<1> : !s32i loc(#loc335)
                %17 = cir.const #cir.int<6> : !s32i loc(#loc336)
                %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc337)
                cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc644)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc342)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc343)
                  %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc343)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc646)
                  cir.if %63 {
                    cir.break loc(#loc345)
                  } loc(#loc647)
                } loc(#loc645)
                %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc648)
                %20 = cir.const #cir.int<0> : !s32i loc(#loc348)
                %21 = cir.const #cir.int<16> : !u64i loc(#loc649)
                cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc650)
                %22 = cir.const #cir.int<2> : !s32i loc(#loc353)
                %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc353)
                %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc651)
                %25 = cir.const #cir.int<0> : !s32i loc(#loc355)
                %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc355)
                %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
                %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
                cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc652)
                %29 = cir.const #cir.int<27015> : !s32i loc(#loc357)
                %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc357)
                %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc358)
                %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
                cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc653)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc363)
                  %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc655)
                  %62 = cir.const #cir.int<16> : !u64i loc(#loc656)
                  %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc656)
                  %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc368)
                  %65 = cir.const #cir.int<1> : !s32i loc(#loc369)
                  %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc369)
                  %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc657)
                  cir.if %67 {
                    cir.break loc(#loc371)
                  } loc(#loc658)
                } loc(#loc654)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc374)
                  %61 = cir.const #cir.int<5> : !s32i loc(#loc375)
                  %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc376)
                  %63 = cir.const #cir.int<1> : !s32i loc(#loc377)
                  %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc377)
                  %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc660)
                  cir.if %65 {
                    cir.break loc(#loc379)
                  } loc(#loc661)
                } loc(#loc659)
                %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc380)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc381)
                %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc382)
                %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc383)
                cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc662)
                cir.scope {
                  %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc388)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc389)
                  %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc389)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc664)
                  cir.if %63 {
                    cir.break loc(#loc391)
                  } loc(#loc665)
                } loc(#loc663)
                %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc392)
                %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc393)
                %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc393)
                %40 = cir.const #cir.int<3> : !s32i loc(#loc394)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc394)
                %42 = cir.const #cir.int<4> : !u64i loc(#loc394)
                %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc394)
                %44 = cir.const #cir.int<2> : !s32i loc(#loc394)
                %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc394)
                %46 = cir.binop(add, %43, %45) : !u64i loc(#loc394)
                %47 = cir.const #cir.int<1> : !s32i loc(#loc395)
                %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc395)
                %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc666)
                %50 = cir.const #cir.int<0> : !s32i loc(#loc396)
                %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc397)
                %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc397)
                cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc667)
                cir.scope {
                  %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc402)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc403)
                  %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc403)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc669)
                  %64 = cir.ternary(%63, true {
                    %65 = cir.const #true loc(#loc404)
                    cir.yield %65 : !cir.bool loc(#loc404)
                  }, false {
                    %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc405)
                    %66 = cir.const #cir.int<0> : !s32i loc(#loc406)
                    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc670)
                    %68 = cir.ternary(%67, true {
                      %69 = cir.const #true loc(#loc404)
                      cir.yield %69 : !cir.bool loc(#loc404)
                    }, false {
                      %69 = cir.const #false loc(#loc404)
                      cir.yield %69 : !cir.bool loc(#loc404)
                    }) : (!cir.bool) -> !cir.bool loc(#loc404)
                    cir.yield %68 : !cir.bool loc(#loc404)
                  }) : (!cir.bool) -> !cir.bool loc(#loc404)
                  cir.if %64 {
                    cir.break loc(#loc408)
                  } loc(#loc671)
                } loc(#loc668)
                %53 = cir.const #cir.int<0> : !s32i loc(#loc409)
                %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc409)
                %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc410)
                %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc411)
                %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc411)
                cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc672)
                %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc412)
                %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc413)
                cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc673)
              } loc(#loc643)
              cir.yield loc(#loc331)
            } while {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc416)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc416)
              cir.condition(%16) loc(#loc416)
            } loc(#loc642)
          } loc(#loc642)
          cir.scope {
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc419)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc420)
            %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc420)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc675)
            cir.if %18 {
              %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc422)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc423)
            } loc(#loc676)
          } loc(#loc674)
          cir.scope {
            %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc426)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc427)
            %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc427)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc678)
            cir.if %18 {
              %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc429)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc430)
            } loc(#loc679)
          } loc(#loc677)
        } loc(#loc636)
      } loc(#loc591)
    } loc(#loc589)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc681)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc681)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc433)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc433)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc440)
          %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc441)
          %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc441)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc441)
          %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc441)
          %11 = cir.cmp(gt, %6, %10) : !s32i, !cir.bool loc(#loc684)
          cir.if %11 {
            %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc686)
            %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc447)
            %14 = cir.unary(dec, %13) nsw : !s32i, !s32i loc(#loc448)
            cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc687)
            %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc446)
            cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc686)
            %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc449)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc450)
          } else {
            %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc451)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc451)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc452)
          } loc(#loc685)
        } loc(#loc683)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc455)
          %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc456)
          %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc456)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc456)
          %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc456)
          %11 = cir.cmp(gt, %6, %10) : !s32i, !cir.bool loc(#loc689)
          cir.if %11 {
            %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc691)
            %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc462)
            %14 = cir.unary(dec, %13) nsw : !s32i, !s32i loc(#loc463)
            cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc692)
            %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc461)
            cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc691)
            %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc464)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc465)
          } else {
            %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc466)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc466)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc467)
          } loc(#loc690)
        } loc(#loc688)
      } loc(#loc682)
    } loc(#loc680)
    cir.return loc(#loc193)
  } loc(#loc586)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc694)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc472)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc695)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc697)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc697)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc476)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc476)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc481)
        %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc482)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc699)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc484)
        %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc485)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc700)
      } loc(#loc698)
    } loc(#loc696)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc702)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc702)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc489)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc489)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc705)
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc498)
          %8 = cir.unary(dec, %7) nsw : !s32i, !s32i loc(#loc499)
          cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc706)
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc497)
          cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc705)
          %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc500)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc501)
        } loc(#loc704)
      } else {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc708)
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc506)
          %8 = cir.unary(dec, %7) nsw : !s32i, !s32i loc(#loc507)
          cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc709)
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc505)
          cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc708)
          %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc508)
          cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc509)
        } loc(#loc707)
      } loc(#loc703)
    } loc(#loc701)
    cir.return loc(#loc469)
  } loc(#loc693)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s04/CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":402:1)
#loc6 = loc("/usr/include/netinet/in.h":403:40)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc15 = loc("/usr/include/stdlib.h":105:1)
#loc16 = loc("/usr/include/stdlib.h":106:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":146:23)
#loc24 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":44:1)
#loc25 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":149:1)
#loc26 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":46:5)
#loc27 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":46:9)
#loc28 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":48:12)
#loc29 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":48:5)
#loc30 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":49:5)
#loc31 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":125:5)
#loc32 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":49:8)
#loc33 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":49:33)
#loc34 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":50:5)
#loc35 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":120:5)
#loc36 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":122:5)
#loc37 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":51:9)
#loc38 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":119:9)
#loc39 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":56:13)
#loc40 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":56:17)
#loc41 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":57:13)
#loc42 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":57:32)
#loc43 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":58:13)
#loc44 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":58:35)
#loc45 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":59:13)
#loc46 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":59:35)
#loc47 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":60:13)
#loc48 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":60:45)
#loc49 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":61:13)
#loc50 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":104:21)
#loc51 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":62:13)
#loc52 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":103:13)
#loc53 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":71:39)
#loc54 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":71:48)
#loc55 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":71:61)
#loc56 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":71:32)
#loc57 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":71:17)
#loc58 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":71:72)
#loc59 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":72:17)
#loc60 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":75:17)
#loc61 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":72:21)
#loc62 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":72:37)
#loc63 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":73:17)
#loc64 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":74:21)
#loc65 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":76:24)
#loc66 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":76:25)
#loc67 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":76:34)
#loc68 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":76:37)
#loc69 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":76:51)
#loc70 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":76:17)
#loc71 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":76:52)
#loc72 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":77:38)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":77:17)
#loc75 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":78:43)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":78:17)
#loc79 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":79:42)
#loc80 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":79:36)
#loc81 = loc("/usr/include/netinet/in.h":250:15)
#loc82 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":79:17)
#loc83 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":79:50)
#loc84 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":80:17)
#loc85 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":83:17)
#loc86 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":80:26)
#loc87 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":80:58)
#loc88 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":80:59)
#loc89 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":80:68)
#loc90 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":80:82)
#loc91 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":80:21)
#loc92 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":80:88)
#loc93 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":81:17)
#loc94 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":82:21)
#loc95 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":84:17)
#loc96 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":87:17)
#loc97 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":84:28)
#loc98 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":84:42)
#loc99 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":84:21)
#loc100 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":84:61)
#loc101 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":85:17)
#loc102 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":86:21)
#loc103 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":88:39)
#loc104 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":88:53)
#loc105 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":88:59)
#loc106 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":88:32)
#loc107 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":88:17)
#loc108 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":88:63)
#loc109 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":89:17)
#loc110 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":92:17)
#loc111 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":89:21)
#loc112 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":89:37)
#loc113 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":90:17)
#loc114 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":91:21)
#loc115 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":94:35)
#loc116 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":94:49)
#loc117 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":94:62)
#loc118 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":94:80)
#loc119 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":94:83)
#loc120 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":94:30)
#loc121 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":94:17)
#loc122 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":94:84)
#loc123 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":95:17)
#loc124 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":98:17)
#loc125 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":95:21)
#loc126 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":95:35)
#loc127 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":95:48)
#loc128 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":95:51)
#loc129 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":95:65)
#loc130 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":96:17)
#loc131 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":97:21)
#loc132 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":100:43)
#loc133 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":100:29)
#loc134 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":100:17)
#loc135 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":102:29)
#loc136 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":102:24)
#loc137 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":102:17)
#loc138 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":102:40)
#loc139 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":104:20)
#loc140 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":105:13)
#loc141 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":108:13)
#loc142 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":105:17)
#loc143 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":105:33)
#loc144 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":106:13)
#loc145 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":107:30)
#loc146 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":107:17)
#loc147 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":109:13)
#loc148 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":112:13)
#loc149 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":109:17)
#loc150 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":109:33)
#loc151 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":110:13)
#loc152 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":111:30)
#loc153 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":111:17)
#loc154 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":124:17)
#loc155 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":124:16)
#loc156 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":124:9)
#loc157 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":126:5)
#loc158 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":148:5)
#loc159 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":126:8)
#loc160 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":126:33)
#loc161 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":127:5)
#loc162 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":134:5)
#loc163 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":136:5)
#loc164 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":128:9)
#loc165 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":133:9)
#loc166 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":131:13)
#loc167 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":131:26)
#loc168 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":130:17)
#loc169 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":130:13)
#loc170 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":132:26)
#loc171 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":132:13)
#loc172 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":138:9)
#loc173 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":147:9)
#loc174 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":138:13)
#loc175 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":138:20)
#loc176 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":139:9)
#loc177 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":143:9)
#loc178 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":145:9)
#loc179 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":141:13)
#loc180 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":141:26)
#loc181 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":140:17)
#loc182 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":140:13)
#loc183 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":142:26)
#loc184 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":142:13)
#loc185 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":146:13)
#loc186 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":375:1)
#loc187 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":379:1)
#loc188 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":377:5)
#loc189 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":377:13)
#loc190 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":378:5)
#loc191 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":378:13)
#loc192 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":158:1)
#loc193 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":335:1)
#loc194 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":160:5)
#loc195 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":160:9)
#loc196 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":162:12)
#loc197 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":162:5)
#loc198 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":163:5)
#loc199 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":306:5)
#loc200 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":163:8)
#loc201 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":163:33)
#loc202 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":164:5)
#loc203 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":234:5)
#loc204 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":236:5)
#loc205 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":165:9)
#loc206 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":233:9)
#loc207 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":170:13)
#loc208 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":170:17)
#loc209 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":171:13)
#loc210 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":171:32)
#loc211 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":172:13)
#loc212 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":172:35)
#loc213 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":173:13)
#loc214 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":173:35)
#loc215 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":174:13)
#loc216 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":174:45)
#loc217 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":175:13)
#loc218 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":218:21)
#loc219 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":176:13)
#loc220 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":217:13)
#loc221 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":185:39)
#loc222 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":185:48)
#loc223 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":185:61)
#loc224 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":185:32)
#loc225 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":185:17)
#loc226 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":185:72)
#loc227 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":186:17)
#loc228 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":189:17)
#loc229 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":186:21)
#loc230 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":186:37)
#loc231 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":187:17)
#loc232 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":188:21)
#loc233 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":190:24)
#loc234 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":190:25)
#loc235 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":190:34)
#loc236 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":190:37)
#loc237 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":190:51)
#loc238 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":190:17)
#loc239 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":190:52)
#loc240 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":191:38)
#loc241 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":191:17)
#loc242 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":192:43)
#loc243 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":192:17)
#loc244 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":193:42)
#loc245 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":193:36)
#loc246 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":193:17)
#loc247 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":193:50)
#loc248 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":194:17)
#loc249 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":197:17)
#loc250 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":194:26)
#loc251 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":194:58)
#loc252 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":194:59)
#loc253 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":194:68)
#loc254 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":194:82)
#loc255 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":194:21)
#loc256 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":194:88)
#loc257 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":195:17)
#loc258 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":196:21)
#loc259 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":198:17)
#loc260 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":201:17)
#loc261 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":198:28)
#loc262 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":198:42)
#loc263 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":198:21)
#loc264 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":198:61)
#loc265 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":199:17)
#loc266 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":200:21)
#loc267 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":202:39)
#loc268 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":202:53)
#loc269 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":202:59)
#loc270 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":202:32)
#loc271 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":202:17)
#loc272 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":202:63)
#loc273 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":203:17)
#loc274 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":206:17)
#loc275 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":203:21)
#loc276 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":203:37)
#loc277 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":204:17)
#loc278 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":205:21)
#loc279 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":208:35)
#loc280 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":208:49)
#loc281 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":208:62)
#loc282 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":208:80)
#loc283 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":208:83)
#loc284 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":208:30)
#loc285 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":208:17)
#loc286 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":208:84)
#loc287 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":209:17)
#loc288 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":212:17)
#loc289 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":209:21)
#loc290 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":209:35)
#loc291 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":209:48)
#loc292 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":209:51)
#loc293 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":209:65)
#loc294 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":210:17)
#loc295 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":211:21)
#loc296 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":214:43)
#loc297 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":214:29)
#loc298 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":214:17)
#loc299 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":216:29)
#loc300 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":216:24)
#loc301 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":216:17)
#loc302 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":216:40)
#loc303 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":218:20)
#loc304 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":219:13)
#loc305 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":222:13)
#loc306 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":219:17)
#loc307 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":219:33)
#loc308 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":220:13)
#loc309 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":221:30)
#loc310 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":221:17)
#loc311 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":223:13)
#loc312 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":226:13)
#loc313 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":223:17)
#loc314 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":223:33)
#loc315 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":224:13)
#loc316 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":225:30)
#loc317 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":225:17)
#loc318 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":237:9)
#loc319 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":305:9)
#loc320 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":242:13)
#loc321 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":242:17)
#loc322 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":243:13)
#loc323 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":243:32)
#loc324 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":244:13)
#loc325 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":244:35)
#loc326 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":245:13)
#loc327 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":245:35)
#loc328 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":246:13)
#loc329 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":246:45)
#loc330 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":247:13)
#loc331 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":290:21)
#loc332 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":248:13)
#loc333 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":289:13)
#loc334 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":257:39)
#loc335 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":257:48)
#loc336 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":257:61)
#loc337 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":257:32)
#loc338 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":257:17)
#loc339 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":257:72)
#loc340 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":258:17)
#loc341 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":261:17)
#loc342 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":258:21)
#loc343 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":258:37)
#loc344 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":259:17)
#loc345 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":260:21)
#loc346 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":262:24)
#loc347 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":262:25)
#loc348 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":262:34)
#loc349 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":262:37)
#loc350 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":262:51)
#loc351 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":262:17)
#loc352 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":262:52)
#loc353 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":263:38)
#loc354 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":263:17)
#loc355 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":264:43)
#loc356 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":264:17)
#loc357 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":265:42)
#loc358 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":265:36)
#loc359 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":265:17)
#loc360 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":265:50)
#loc361 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":266:17)
#loc362 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":269:17)
#loc363 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":266:26)
#loc364 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":266:58)
#loc365 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":266:59)
#loc366 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":266:68)
#loc367 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":266:82)
#loc368 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":266:21)
#loc369 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":266:88)
#loc370 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":267:17)
#loc371 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":268:21)
#loc372 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":270:17)
#loc373 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":273:17)
#loc374 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":270:28)
#loc375 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":270:42)
#loc376 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":270:21)
#loc377 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":270:61)
#loc378 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":271:17)
#loc379 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":272:21)
#loc380 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":274:39)
#loc381 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":274:53)
#loc382 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":274:59)
#loc383 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":274:32)
#loc384 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":274:17)
#loc385 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":274:63)
#loc386 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":275:17)
#loc387 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":278:17)
#loc388 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":275:21)
#loc389 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":275:37)
#loc390 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":276:17)
#loc391 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":277:21)
#loc392 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":280:35)
#loc393 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":280:49)
#loc394 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":280:62)
#loc395 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":280:80)
#loc396 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":280:83)
#loc397 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":280:30)
#loc398 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":280:17)
#loc399 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":280:84)
#loc400 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":281:17)
#loc401 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":284:17)
#loc402 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":281:21)
#loc403 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":281:35)
#loc404 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":281:48)
#loc405 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":281:51)
#loc406 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":281:65)
#loc407 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":282:17)
#loc408 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":283:21)
#loc409 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":286:43)
#loc410 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":286:29)
#loc411 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":286:17)
#loc412 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":288:29)
#loc413 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":288:24)
#loc414 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":288:17)
#loc415 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":288:40)
#loc416 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":290:20)
#loc417 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":291:13)
#loc418 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":294:13)
#loc419 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":291:17)
#loc420 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":291:33)
#loc421 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":292:13)
#loc422 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":293:30)
#loc423 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":293:17)
#loc424 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":295:13)
#loc425 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":298:13)
#loc426 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":295:17)
#loc427 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":295:33)
#loc428 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":296:13)
#loc429 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":297:30)
#loc430 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":297:17)
#loc431 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":307:5)
#loc432 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":334:5)
#loc433 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":307:8)
#loc434 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":307:33)
#loc435 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":308:5)
#loc436 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":320:5)
#loc437 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":322:5)
#loc438 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":310:9)
#loc439 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":319:9)
#loc440 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":310:13)
#loc441 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":310:20)
#loc442 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":311:9)
#loc443 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":315:9)
#loc444 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":317:9)
#loc445 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":313:13)
#loc446 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":313:26)
#loc447 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":312:17)
#loc448 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":312:13)
#loc449 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":314:26)
#loc450 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":314:13)
#loc451 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":318:23)
#loc452 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":318:13)
#loc453 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":324:9)
#loc454 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":333:9)
#loc455 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":324:13)
#loc456 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":324:20)
#loc457 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":325:9)
#loc458 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":329:9)
#loc459 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":331:9)
#loc460 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":327:13)
#loc461 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":327:26)
#loc462 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":326:17)
#loc463 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":326:13)
#loc464 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":328:26)
#loc465 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":328:13)
#loc466 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":332:23)
#loc467 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":332:13)
#loc468 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":340:1)
#loc469 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":373:1)
#loc470 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":342:5)
#loc471 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":342:9)
#loc472 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":344:12)
#loc473 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":344:5)
#loc474 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":345:5)
#loc475 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":354:5)
#loc476 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":345:8)
#loc477 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":345:33)
#loc478 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":346:5)
#loc479 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":349:5)
#loc480 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":351:5)
#loc481 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":348:17)
#loc482 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":348:16)
#loc483 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":348:9)
#loc484 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":353:17)
#loc485 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":353:16)
#loc486 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":353:9)
#loc487 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":355:5)
#loc488 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":372:5)
#loc489 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":355:8)
#loc490 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":355:33)
#loc491 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":356:5)
#loc492 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":363:5)
#loc493 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":365:5)
#loc494 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":357:9)
#loc495 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":362:9)
#loc496 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":360:13)
#loc497 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":360:26)
#loc498 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":359:17)
#loc499 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":359:13)
#loc500 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":361:26)
#loc501 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":361:13)
#loc502 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":366:9)
#loc503 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":371:9)
#loc504 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":369:13)
#loc505 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":369:26)
#loc506 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":368:17)
#loc507 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":368:13)
#loc508 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":370:26)
#loc509 = loc("CWE191_Integer_Underflow__int_listen_socket_postdec_12.c":370:13)
#loc510 = loc(fused[#loc1, #loc2])
#loc511 = loc(fused[#loc3, #loc4])
#loc512 = loc(fused[#loc5, #loc6])
#loc513 = loc(fused[#loc7, #loc8])
#loc514 = loc(fused[#loc9, #loc10])
#loc515 = loc(fused[#loc11, #loc12])
#loc516 = loc(fused[#loc13, #loc14])
#loc517 = loc(fused[#loc15, #loc16])
#loc518 = loc(fused[#loc17, #loc18])
#loc519 = loc(fused[#loc19, #loc20])
#loc520 = loc(fused[#loc21, #loc22])
#loc521 = loc(fused[#loc24, #loc25])
#loc522 = loc(fused[#loc26, #loc27])
#loc523 = loc(fused[#loc29, #loc28])
#loc524 = loc(fused[#loc30, #loc31])
#loc525 = loc(fused[#loc32, #loc33])
#loc526 = loc(fused[#loc34, #loc35, #loc36, #loc31])
#loc527 = loc(fused[#loc37, #loc38])
#loc528 = loc(fused[#loc39, #loc40])
#loc529 = loc(fused[#loc41, #loc42])
#loc530 = loc(fused[#loc43, #loc44])
#loc531 = loc(fused[#loc45, #loc46])
#loc532 = loc(fused[#loc47, #loc48])
#loc533 = loc(fused[#loc49, #loc50])
#loc534 = loc(fused[#loc51, #loc52])
#loc535 = loc(fused[#loc57, #loc58])
#loc536 = loc(fused[#loc59, #loc60])
#loc537 = loc(fused[#loc61, #loc62])
#loc538 = loc(fused[#loc63, #loc60])
#loc539 = loc(fused[#loc65, #loc66])
#loc540 = loc(fused[#loc68, #loc69])
#loc541 = loc(fused[#loc70, #loc71])
#loc542 = loc(fused[#loc74, #loc72])
#loc543 = loc(fused[#loc78, #loc75])
#loc544 = loc(fused[#loc82, #loc83])
#loc545 = loc(fused[#loc84, #loc85])
#loc546 = loc(fused[#loc87, #loc88])
#loc547 = loc(fused[#loc89, #loc90])
#loc548 = loc(fused[#loc91, #loc92])
#loc549 = loc(fused[#loc93, #loc85])
#loc550 = loc(fused[#loc95, #loc96])
#loc551 = loc(fused[#loc99, #loc100])
#loc552 = loc(fused[#loc101, #loc96])
#loc553 = loc(fused[#loc107, #loc108])
#loc554 = loc(fused[#loc109, #loc110])
#loc555 = loc(fused[#loc111, #loc112])
#loc556 = loc(fused[#loc113, #loc110])
#loc557 = loc(fused[#loc117, #loc118])
#loc558 = loc(fused[#loc121, #loc122])
#loc559 = loc(fused[#loc123, #loc124])
#loc560 = loc(fused[#loc125, #loc126])
#loc561 = loc(fused[#loc128, #loc129])
#loc562 = loc(fused[#loc130, #loc124])
#loc563 = loc(fused[#loc134, #loc132])
#loc564 = loc(fused[#loc137, #loc138])
#loc565 = loc(fused[#loc140, #loc141])
#loc566 = loc(fused[#loc142, #loc143])
#loc567 = loc(fused[#loc144, #loc141])
#loc568 = loc(fused[#loc147, #loc148])
#loc569 = loc(fused[#loc149, #loc150])
#loc570 = loc(fused[#loc151, #loc148])
#loc571 = loc(fused[#loc156, #loc154])
#loc572 = loc(fused[#loc157, #loc158])
#loc573 = loc(fused[#loc159, #loc160])
#loc574 = loc(fused[#loc161, #loc162, #loc163, #loc158])
#loc575 = loc(fused[#loc164, #loc165])
#loc576 = loc(fused[#loc166, #loc167])
#loc577 = loc(fused[#loc169, #loc168])
#loc578 = loc(fused[#loc172, #loc173])
#loc579 = loc(fused[#loc174, #loc175])
#loc580 = loc(fused[#loc176, #loc177, #loc178, #loc173])
#loc581 = loc(fused[#loc179, #loc180])
#loc582 = loc(fused[#loc182, #loc181])
#loc583 = loc(fused[#loc186, #loc187])
#loc584 = loc(fused[#loc188, #loc189])
#loc585 = loc(fused[#loc190, #loc191])
#loc586 = loc(fused[#loc192, #loc193])
#loc587 = loc(fused[#loc194, #loc195])
#loc588 = loc(fused[#loc197, #loc196])
#loc589 = loc(fused[#loc198, #loc199])
#loc590 = loc(fused[#loc200, #loc201])
#loc591 = loc(fused[#loc202, #loc203, #loc204, #loc199])
#loc592 = loc(fused[#loc205, #loc206])
#loc593 = loc(fused[#loc207, #loc208])
#loc594 = loc(fused[#loc209, #loc210])
#loc595 = loc(fused[#loc211, #loc212])
#loc596 = loc(fused[#loc213, #loc214])
#loc597 = loc(fused[#loc215, #loc216])
#loc598 = loc(fused[#loc217, #loc218])
#loc599 = loc(fused[#loc219, #loc220])
#loc600 = loc(fused[#loc225, #loc226])
#loc601 = loc(fused[#loc227, #loc228])
#loc602 = loc(fused[#loc229, #loc230])
#loc603 = loc(fused[#loc231, #loc228])
#loc604 = loc(fused[#loc233, #loc234])
#loc605 = loc(fused[#loc236, #loc237])
#loc606 = loc(fused[#loc238, #loc239])
#loc607 = loc(fused[#loc241, #loc240])
#loc608 = loc(fused[#loc243, #loc242])
#loc609 = loc(fused[#loc246, #loc247])
#loc610 = loc(fused[#loc248, #loc249])
#loc611 = loc(fused[#loc251, #loc252])
#loc612 = loc(fused[#loc253, #loc254])
#loc613 = loc(fused[#loc255, #loc256])
#loc614 = loc(fused[#loc257, #loc249])
#loc615 = loc(fused[#loc259, #loc260])
#loc616 = loc(fused[#loc263, #loc264])
#loc617 = loc(fused[#loc265, #loc260])
#loc618 = loc(fused[#loc271, #loc272])
#loc619 = loc(fused[#loc273, #loc274])
#loc620 = loc(fused[#loc275, #loc276])
#loc621 = loc(fused[#loc277, #loc274])
#loc622 = loc(fused[#loc281, #loc282])
#loc623 = loc(fused[#loc285, #loc286])
#loc624 = loc(fused[#loc287, #loc288])
#loc625 = loc(fused[#loc289, #loc290])
#loc626 = loc(fused[#loc292, #loc293])
#loc627 = loc(fused[#loc294, #loc288])
#loc628 = loc(fused[#loc298, #loc296])
#loc629 = loc(fused[#loc301, #loc302])
#loc630 = loc(fused[#loc304, #loc305])
#loc631 = loc(fused[#loc306, #loc307])
#loc632 = loc(fused[#loc308, #loc305])
#loc633 = loc(fused[#loc311, #loc312])
#loc634 = loc(fused[#loc313, #loc314])
#loc635 = loc(fused[#loc315, #loc312])
#loc636 = loc(fused[#loc318, #loc319])
#loc637 = loc(fused[#loc320, #loc321])
#loc638 = loc(fused[#loc322, #loc323])
#loc639 = loc(fused[#loc324, #loc325])
#loc640 = loc(fused[#loc326, #loc327])
#loc641 = loc(fused[#loc328, #loc329])
#loc642 = loc(fused[#loc330, #loc331])
#loc643 = loc(fused[#loc332, #loc333])
#loc644 = loc(fused[#loc338, #loc339])
#loc645 = loc(fused[#loc340, #loc341])
#loc646 = loc(fused[#loc342, #loc343])
#loc647 = loc(fused[#loc344, #loc341])
#loc648 = loc(fused[#loc346, #loc347])
#loc649 = loc(fused[#loc349, #loc350])
#loc650 = loc(fused[#loc351, #loc352])
#loc651 = loc(fused[#loc354, #loc353])
#loc652 = loc(fused[#loc356, #loc355])
#loc653 = loc(fused[#loc359, #loc360])
#loc654 = loc(fused[#loc361, #loc362])
#loc655 = loc(fused[#loc364, #loc365])
#loc656 = loc(fused[#loc366, #loc367])
#loc657 = loc(fused[#loc368, #loc369])
#loc658 = loc(fused[#loc370, #loc362])
#loc659 = loc(fused[#loc372, #loc373])
#loc660 = loc(fused[#loc376, #loc377])
#loc661 = loc(fused[#loc378, #loc373])
#loc662 = loc(fused[#loc384, #loc385])
#loc663 = loc(fused[#loc386, #loc387])
#loc664 = loc(fused[#loc388, #loc389])
#loc665 = loc(fused[#loc390, #loc387])
#loc666 = loc(fused[#loc394, #loc395])
#loc667 = loc(fused[#loc398, #loc399])
#loc668 = loc(fused[#loc400, #loc401])
#loc669 = loc(fused[#loc402, #loc403])
#loc670 = loc(fused[#loc405, #loc406])
#loc671 = loc(fused[#loc407, #loc401])
#loc672 = loc(fused[#loc411, #loc409])
#loc673 = loc(fused[#loc414, #loc415])
#loc674 = loc(fused[#loc417, #loc418])
#loc675 = loc(fused[#loc419, #loc420])
#loc676 = loc(fused[#loc421, #loc418])
#loc677 = loc(fused[#loc424, #loc425])
#loc678 = loc(fused[#loc426, #loc427])
#loc679 = loc(fused[#loc428, #loc425])
#loc680 = loc(fused[#loc431, #loc432])
#loc681 = loc(fused[#loc433, #loc434])
#loc682 = loc(fused[#loc435, #loc436, #loc437, #loc432])
#loc683 = loc(fused[#loc438, #loc439])
#loc684 = loc(fused[#loc440, #loc441])
#loc685 = loc(fused[#loc442, #loc443, #loc444, #loc439])
#loc686 = loc(fused[#loc445, #loc446])
#loc687 = loc(fused[#loc448, #loc447])
#loc688 = loc(fused[#loc453, #loc454])
#loc689 = loc(fused[#loc455, #loc456])
#loc690 = loc(fused[#loc457, #loc458, #loc459, #loc454])
#loc691 = loc(fused[#loc460, #loc461])
#loc692 = loc(fused[#loc463, #loc462])
#loc693 = loc(fused[#loc468, #loc469])
#loc694 = loc(fused[#loc470, #loc471])
#loc695 = loc(fused[#loc473, #loc472])
#loc696 = loc(fused[#loc474, #loc475])
#loc697 = loc(fused[#loc476, #loc477])
#loc698 = loc(fused[#loc478, #loc479, #loc480, #loc475])
#loc699 = loc(fused[#loc483, #loc481])
#loc700 = loc(fused[#loc486, #loc484])
#loc701 = loc(fused[#loc487, #loc488])
#loc702 = loc(fused[#loc489, #loc490])
#loc703 = loc(fused[#loc491, #loc492, #loc493, #loc488])
#loc704 = loc(fused[#loc494, #loc495])
#loc705 = loc(fused[#loc496, #loc497])
#loc706 = loc(fused[#loc499, #loc498])
#loc707 = loc(fused[#loc502, #loc503])
#loc708 = loc(fused[#loc504, #loc505])
#loc709 = loc(fused[#loc507, #loc506])
