!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc73 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":123:10)
#loc74 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":123:14)
#loc75 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":123:20)
#loc76 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":123:32)
#loc223 = loc(fused[#loc73, #loc74])
#loc224 = loc(fused[#loc75, #loc76])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc199)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_memcpy_06_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc201)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc202)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc8)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc8)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc8)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc8)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc8)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc9)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc9)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc10)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc11)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc11)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc11)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc203)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc15)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc17)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc19)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc204)
    cir.scope {
      %23 = cir.const #cir.int<5> : !s32i loc(#loc22)
      %24 = cir.const #cir.int<5> : !s32i loc(#loc23)
      %25 = cir.cmp(eq, %23, %24) : !s32i, !cir.bool loc(#loc206)
      cir.if %25 {
        %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
        %27 = cir.const #cir.int<8> : !s32i loc(#loc26)
        %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc26)
        %29 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc27)
        cir.store %29, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc208)
      } loc(#loc207)
    } loc(#loc205)
    cir.scope {
      %23 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc210)
      %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
      %26 = cir.const #cir.int<67> : !s32i loc(#loc34)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc35)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc36)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc35)
      %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc35)
      cir.libc.memset %30 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc211)
      %31 = cir.const #cir.int<0> : !s32i loc(#loc39)
      %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc39)
      %33 = cir.const #cir.int<100> : !s32i loc(#loc40)
      %34 = cir.const #cir.int<1> : !s32i loc(#loc41)
      %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc40)
      %36 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
      %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc42)
      cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc212)
      %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc43)
      %40 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
      %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc44)
      %42 = cir.const #cir.int<100> : !s32i loc(#loc45)
      %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc45)
      %44 = cir.const #cir.int<1> : !u64i loc(#loc213)
      %45 = cir.binop(mul, %43, %44) : !u64i loc(#loc214)
      cir.libc.memcpy %45 bytes from %41 to %39 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc215)
      %46 = cir.const #cir.int<0> : !s32i loc(#loc50)
      %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc50)
      %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
      %49 = cir.const #cir.int<100> : !s32i loc(#loc52)
      %50 = cir.const #cir.int<1> : !s32i loc(#loc53)
      %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc52)
      %52 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc54)
      cir.store %47, %52 : !s8i, !cir.ptr<!s8i> loc(#loc216)
      %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
      cir.call @printLine(%53) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    } loc(#loc209)
    cir.return loc(#loc4)
  } loc(#loc200)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_memcpy_06_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc218)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc219)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    cir.return loc(#loc58)
  } loc(#loc217)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc220)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc70)
  cir.func @main(%arg0: !s32i loc(fused[#loc73, #loc74]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc75, #loc76])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc223)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc224)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc72)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc77)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc78)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc79)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc79)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc80)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc67)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__char_alloca_memcpy_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc225)
    cir.call @CWE124_Buffer_Underwrite__char_alloca_memcpy_06_good() : () -> () loc(#loc82)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc68)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc69)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__char_alloca_memcpy_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc226)
    cir.call @CWE124_Buffer_Underwrite__char_alloca_memcpy_06_bad() : () -> () loc(#loc86)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc70)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc89)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    cir.return %17 : !s32i loc(#loc227)
  } loc(#loc222)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc91)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc229)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc230)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc97)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc97)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc97)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc97)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc97)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc97)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc97)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc230)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc99)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc100)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc100)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc100)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc231)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc104)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc106)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc106)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc108)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc232)
    cir.scope {
      %23 = cir.const #cir.int<5> : !s32i loc(#loc111)
      %24 = cir.const #cir.int<5> : !s32i loc(#loc112)
      %25 = cir.cmp(ne, %23, %24) : !s32i, !cir.bool loc(#loc234)
      cir.if %25 {
        %26 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc91)
        %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc91)
        cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc116)
      } else {
        %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
        cir.store %26, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc236)
      } loc(#loc235)
    } loc(#loc233)
    cir.scope {
      %23 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc238)
      %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc123)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc123)
      %26 = cir.const #cir.int<67> : !s32i loc(#loc124)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc125)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc126)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc125)
      %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc125)
      cir.libc.memset %30 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc239)
      %31 = cir.const #cir.int<0> : !s32i loc(#loc129)
      %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc129)
      %33 = cir.const #cir.int<100> : !s32i loc(#loc130)
      %34 = cir.const #cir.int<1> : !s32i loc(#loc131)
      %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc130)
      %36 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc132)
      %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc132)
      cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc240)
      %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
      %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc133)
      %40 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
      %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc134)
      %42 = cir.const #cir.int<100> : !s32i loc(#loc135)
      %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc135)
      %44 = cir.const #cir.int<1> : !u64i loc(#loc241)
      %45 = cir.binop(mul, %43, %44) : !u64i loc(#loc242)
      cir.libc.memcpy %45 bytes from %41 to %39 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc243)
      %46 = cir.const #cir.int<0> : !s32i loc(#loc140)
      %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc140)
      %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
      %49 = cir.const #cir.int<100> : !s32i loc(#loc142)
      %50 = cir.const #cir.int<1> : !s32i loc(#loc143)
      %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc142)
      %52 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc144)
      cir.store %47, %52 : !s8i, !cir.ptr<!s8i> loc(#loc244)
      %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
      cir.call @printLine(%53) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    } loc(#loc237)
    cir.return loc(#loc93)
  } loc(#loc228)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc246)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc247)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc152)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc152)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc152)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc152)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc152)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc152)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc152)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc247)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc153)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc154)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc155)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc155)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc155)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc248)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc159)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc159)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc161)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc161)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc163)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc249)
    cir.scope {
      %23 = cir.const #cir.int<5> : !s32i loc(#loc166)
      %24 = cir.const #cir.int<5> : !s32i loc(#loc167)
      %25 = cir.cmp(eq, %23, %24) : !s32i, !cir.bool loc(#loc251)
      cir.if %25 {
        %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
        cir.store %26, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc253)
      } loc(#loc252)
    } loc(#loc250)
    cir.scope {
      %23 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc255)
      %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc175)
      %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc175)
      %26 = cir.const #cir.int<67> : !s32i loc(#loc176)
      %27 = cir.const #cir.int<100> : !s32i loc(#loc177)
      %28 = cir.const #cir.int<1> : !s32i loc(#loc178)
      %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc177)
      %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc177)
      cir.libc.memset %30 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc256)
      %31 = cir.const #cir.int<0> : !s32i loc(#loc181)
      %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc181)
      %33 = cir.const #cir.int<100> : !s32i loc(#loc182)
      %34 = cir.const #cir.int<1> : !s32i loc(#loc183)
      %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc182)
      %36 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc184)
      %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !s32i), !cir.ptr<!s8i> loc(#loc184)
      cir.store %32, %37 : !s8i, !cir.ptr<!s8i> loc(#loc257)
      %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
      %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc185)
      %40 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc186)
      %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc186)
      %42 = cir.const #cir.int<100> : !s32i loc(#loc187)
      %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc187)
      %44 = cir.const #cir.int<1> : !u64i loc(#loc258)
      %45 = cir.binop(mul, %43, %44) : !u64i loc(#loc259)
      cir.libc.memcpy %45 bytes from %41 to %39 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc260)
      %46 = cir.const #cir.int<0> : !s32i loc(#loc192)
      %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc192)
      %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc193)
      %49 = cir.const #cir.int<100> : !s32i loc(#loc194)
      %50 = cir.const #cir.int<1> : !s32i loc(#loc195)
      %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc194)
      %52 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc196)
      cir.store %47, %52 : !s8i, !cir.ptr<!s8i> loc(#loc261)
      %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc197)
      cir.call @printLine(%53) : (!cir.ptr<!s8i>) -> () loc(#loc198)
    } loc(#loc254)
    cir.return loc(#loc148)
  } loc(#loc245)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":27:1)
#loc4 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":48:1)
#loc5 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":29:5)
#loc6 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":29:12)
#loc7 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":30:5)
#loc8 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":30:33)
#loc9 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":31:12)
#loc10 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":31:24)
#loc11 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":31:29)
#loc12 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":31:33)
#loc13 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":31:5)
#loc14 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":31:34)
#loc15 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":32:25)
#loc16 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":32:5)
#loc17 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":32:16)
#loc18 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":32:20)
#loc19 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":32:21)
#loc20 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":33:5)
#loc21 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":37:5)
#loc22 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":33:8)
#loc23 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":33:27)
#loc24 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":34:5)
#loc25 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":36:16)
#loc26 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":36:29)
#loc27 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":36:27)
#loc28 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":36:9)
#loc29 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":38:5)
#loc30 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":47:5)
#loc31 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":39:9)
#loc32 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":39:24)
#loc33 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":40:16)
#loc34 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":40:24)
#loc35 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":40:29)
#loc36 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":40:33)
#loc37 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":40:9)
#loc38 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":40:34)
#loc39 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":41:25)
#loc40 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":41:16)
#loc41 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":41:20)
#loc42 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":41:9)
#loc43 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":43:16)
#loc44 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":43:22)
#loc45 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":43:30)
#loc46 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":43:34)
#loc47 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":43:45)
#loc48 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":43:9)
#loc49 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":43:46)
#loc50 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":45:23)
#loc51 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":45:9)
#loc52 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":45:14)
#loc53 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":45:18)
#loc54 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":45:19)
#loc55 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":46:19)
#loc56 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":46:9)
#loc57 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":107:1)
#loc58 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":111:1)
#loc59 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":109:5)
#loc60 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":109:14)
#loc61 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":110:5)
#loc62 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":110:14)
#loc63 = loc("/usr/include/stdlib.h":575:1)
#loc64 = loc("/usr/include/stdlib.h":575:41)
#loc65 = loc("/usr/include/time.h":76:1)
#loc66 = loc("/usr/include/time.h":76:38)
#loc67 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":128:15)
#loc68 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":130:15)
#loc69 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":133:15)
#loc70 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":135:15)
#loc71 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":123:1)
#loc72 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":138:1)
#loc77 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":124:1)
#loc78 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":126:27)
#loc79 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":126:22)
#loc80 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":126:5)
#loc81 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":128:5)
#loc82 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":129:5)
#loc83 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":129:58)
#loc84 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":130:5)
#loc85 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":133:5)
#loc86 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":134:5)
#loc87 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":134:57)
#loc88 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":135:5)
#loc89 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":137:12)
#loc90 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":137:5)
#loc91 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":64:19)
#loc92 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":55:1)
#loc93 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":81:1)
#loc94 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":57:5)
#loc95 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":57:12)
#loc96 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":58:5)
#loc97 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":58:33)
#loc98 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":59:12)
#loc99 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":59:24)
#loc100 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":59:29)
#loc101 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":59:33)
#loc102 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":59:5)
#loc103 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":59:34)
#loc104 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":60:25)
#loc105 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":60:5)
#loc106 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":60:16)
#loc107 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":60:20)
#loc108 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":60:21)
#loc109 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":61:5)
#loc110 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":70:5)
#loc111 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":61:8)
#loc112 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":61:27)
#loc113 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":62:5)
#loc114 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":65:5)
#loc115 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":67:5)
#loc116 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":64:9)
#loc117 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":69:16)
#loc118 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":69:9)
#loc119 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":71:5)
#loc120 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":80:5)
#loc121 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":72:9)
#loc122 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":72:24)
#loc123 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":73:16)
#loc124 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":73:24)
#loc125 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":73:29)
#loc126 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":73:33)
#loc127 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":73:9)
#loc128 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":73:34)
#loc129 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":74:25)
#loc130 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":74:16)
#loc131 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":74:20)
#loc132 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":74:9)
#loc133 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":76:16)
#loc134 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":76:22)
#loc135 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":76:30)
#loc136 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":76:34)
#loc137 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":76:45)
#loc138 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":76:9)
#loc139 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":76:46)
#loc140 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":78:23)
#loc141 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":78:9)
#loc142 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":78:14)
#loc143 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":78:18)
#loc144 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":78:19)
#loc145 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":79:19)
#loc146 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":79:9)
#loc147 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":84:1)
#loc148 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":105:1)
#loc149 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":86:5)
#loc150 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":86:12)
#loc151 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":87:5)
#loc152 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":87:33)
#loc153 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":88:12)
#loc154 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":88:24)
#loc155 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":88:29)
#loc156 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":88:33)
#loc157 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":88:5)
#loc158 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":88:34)
#loc159 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":89:25)
#loc160 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":89:5)
#loc161 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":89:16)
#loc162 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":89:20)
#loc163 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":89:21)
#loc164 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":90:5)
#loc165 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":94:5)
#loc166 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":90:8)
#loc167 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":90:27)
#loc168 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":91:5)
#loc169 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":93:16)
#loc170 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":93:9)
#loc171 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":95:5)
#loc172 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":104:5)
#loc173 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":96:9)
#loc174 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":96:24)
#loc175 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":97:16)
#loc176 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":97:24)
#loc177 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":97:29)
#loc178 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":97:33)
#loc179 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":97:9)
#loc180 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":97:34)
#loc181 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":98:25)
#loc182 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":98:16)
#loc183 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":98:20)
#loc184 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":98:9)
#loc185 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":100:16)
#loc186 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":100:22)
#loc187 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":100:30)
#loc188 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":100:34)
#loc189 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":100:45)
#loc190 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":100:9)
#loc191 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":100:46)
#loc192 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":102:23)
#loc193 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":102:9)
#loc194 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":102:14)
#loc195 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":102:18)
#loc196 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":102:19)
#loc197 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":103:19)
#loc198 = loc("CWE124_Buffer_Underwrite__char_alloca_memcpy_06.c":103:9)
#loc199 = loc(fused[#loc1, #loc2])
#loc200 = loc(fused[#loc3, #loc4])
#loc201 = loc(fused[#loc5, #loc6])
#loc202 = loc(fused[#loc7, #loc8])
#loc203 = loc(fused[#loc13, #loc14])
#loc204 = loc(fused[#loc16, #loc15])
#loc205 = loc(fused[#loc20, #loc21])
#loc206 = loc(fused[#loc22, #loc23])
#loc207 = loc(fused[#loc24, #loc21])
#loc208 = loc(fused[#loc28, #loc26])
#loc209 = loc(fused[#loc29, #loc30])
#loc210 = loc(fused[#loc31, #loc32])
#loc211 = loc(fused[#loc37, #loc38])
#loc212 = loc(fused[#loc42, #loc39])
#loc213 = loc(fused[#loc46, #loc47])
#loc214 = loc(fused[#loc45, #loc47])
#loc215 = loc(fused[#loc48, #loc49])
#loc216 = loc(fused[#loc51, #loc50])
#loc217 = loc(fused[#loc57, #loc58])
#loc218 = loc(fused[#loc59, #loc60])
#loc219 = loc(fused[#loc61, #loc62])
#loc220 = loc(fused[#loc63, #loc64])
#loc221 = loc(fused[#loc65, #loc66])
#loc222 = loc(fused[#loc71, #loc72])
#loc225 = loc(fused[#loc82, #loc83])
#loc226 = loc(fused[#loc86, #loc87])
#loc227 = loc(fused[#loc90, #loc89])
#loc228 = loc(fused[#loc92, #loc93])
#loc229 = loc(fused[#loc94, #loc95])
#loc230 = loc(fused[#loc96, #loc97])
#loc231 = loc(fused[#loc102, #loc103])
#loc232 = loc(fused[#loc105, #loc104])
#loc233 = loc(fused[#loc109, #loc110])
#loc234 = loc(fused[#loc111, #loc112])
#loc235 = loc(fused[#loc113, #loc114, #loc115, #loc110])
#loc236 = loc(fused[#loc118, #loc117])
#loc237 = loc(fused[#loc119, #loc120])
#loc238 = loc(fused[#loc121, #loc122])
#loc239 = loc(fused[#loc127, #loc128])
#loc240 = loc(fused[#loc132, #loc129])
#loc241 = loc(fused[#loc136, #loc137])
#loc242 = loc(fused[#loc135, #loc137])
#loc243 = loc(fused[#loc138, #loc139])
#loc244 = loc(fused[#loc141, #loc140])
#loc245 = loc(fused[#loc147, #loc148])
#loc246 = loc(fused[#loc149, #loc150])
#loc247 = loc(fused[#loc151, #loc152])
#loc248 = loc(fused[#loc157, #loc158])
#loc249 = loc(fused[#loc160, #loc159])
#loc250 = loc(fused[#loc164, #loc165])
#loc251 = loc(fused[#loc166, #loc167])
#loc252 = loc(fused[#loc168, #loc165])
#loc253 = loc(fused[#loc170, #loc169])
#loc254 = loc(fused[#loc171, #loc172])
#loc255 = loc(fused[#loc173, #loc174])
#loc256 = loc(fused[#loc179, #loc180])
#loc257 = loc(fused[#loc184, #loc181])
#loc258 = loc(fused[#loc188, #loc189])
#loc259 = loc(fused[#loc187, #loc189])
#loc260 = loc(fused[#loc190, #loc191])
#loc261 = loc(fused[#loc193, #loc192])
