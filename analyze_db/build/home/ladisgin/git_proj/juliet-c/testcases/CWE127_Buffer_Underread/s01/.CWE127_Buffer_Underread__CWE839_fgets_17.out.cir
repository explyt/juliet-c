!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc93 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":154:10)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":154:14)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":154:20)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":154:32)
#true = #cir.bool<true> : !cir.bool
#loc266 = loc(fused[#loc93, #loc94])
#loc267 = loc(fused[#loc95, #loc96])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_fgets_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc229)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc230)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc231)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc232)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc233)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_fgets_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc235)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc236)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc237)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc21)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc25)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc240)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc241)
        cir.condition(%8) loc(#loc29)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc244)
            %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc244)
            cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc244)
            cir.scope {
              %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc37)
              %9 = cir.const #cir.int<3> : !s32i loc(#loc38)
              %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc38)
              %11 = cir.const #cir.int<4> : !u64i loc(#loc38)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc38)
              %13 = cir.const #cir.int<2> : !s32i loc(#loc38)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc38)
              %15 = cir.binop(add, %12, %14) : !u64i loc(#loc38)
              %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc38)
              %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc230)
              %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
              %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc40)
              %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
              %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
              %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc246)
              cir.if %22 {
                %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc45)
                %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc46)
                cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc248)
              } else {
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
                cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc49)
              } loc(#loc247)
            } loc(#loc245)
          } loc(#loc243)
        } loc(#loc242)
        cir.yield loc(#loc24)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc50)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc51)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc249)
        cir.yield loc(#loc239)
      } loc(#loc239)
    } loc(#loc239)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc54)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc251)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc56)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc57)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc252)
        cir.condition(%8) loc(#loc58)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc255)
            %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc255)
            cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc255)
            cir.scope {
              %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc66)
              %9 = cir.const #cir.int<10> : !s32i loc(#loc67)
              %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc257)
              cir.if %10 {
                %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc71)
                %12 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc72)
                %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc72)
                %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc72)
                cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc73)
              } else {
                %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc12)
                %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc12)
                cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc74)
              } loc(#loc258)
            } loc(#loc256)
          } loc(#loc254)
        } loc(#loc253)
        cir.yield loc(#loc53)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc75)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc76)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc259)
        cir.yield loc(#loc250)
      } loc(#loc250)
    } loc(#loc250)
    cir.return loc(#loc14)
  } loc(#loc234)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_fgets_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc261)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc79)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc262)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc81)
    cir.return loc(#loc78)
  } loc(#loc260)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc263)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc264)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc90)
  cir.func @main(%arg0: !s32i loc(fused[#loc93, #loc94]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc95, #loc96])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc266)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc267)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc92)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc97)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc97)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc98)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc99)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc99)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc100)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc87)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %8 = cir.get_global @CWE127_Buffer_Underread__CWE839_fgets_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc268)
    cir.call @CWE127_Buffer_Underread__CWE839_fgets_17_good() : () -> () loc(#loc102)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc88)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc89)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    %13 = cir.get_global @CWE127_Buffer_Underread__CWE839_fgets_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc269)
    cir.call @CWE127_Buffer_Underread__CWE839_fgets_17_bad() : () -> () loc(#loc106)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc90)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc109)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    cir.return %17 : !s32i loc(#loc270)
  } loc(#loc265)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc111)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc272)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc273)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc274)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc120)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc124)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc277)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc127)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc278)
        cir.condition(%8) loc(#loc128)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc281)
            %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc281)
            cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc281)
            cir.scope {
              %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc136)
              %9 = cir.const #cir.int<3> : !s32i loc(#loc137)
              %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc137)
              %11 = cir.const #cir.int<4> : !u64i loc(#loc137)
              %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc137)
              %13 = cir.const #cir.int<2> : !s32i loc(#loc137)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc137)
              %15 = cir.binop(add, %12, %14) : !u64i loc(#loc137)
              %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc137)
              %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc230)
              %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc138)
              %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc139)
              %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc140)
              %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc140)
              %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc283)
              cir.if %22 {
                %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc144)
                %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc145)
                cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc285)
              } else {
                %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc148)
                %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc148)
                cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc149)
              } loc(#loc284)
            } loc(#loc282)
          } loc(#loc280)
        } loc(#loc279)
        cir.yield loc(#loc123)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc150)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc151)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc286)
        cir.yield loc(#loc276)
      } loc(#loc276)
    } loc(#loc276)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc154)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc288)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc156)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc157)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc289)
        cir.condition(%8) loc(#loc158)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc292)
            %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc292)
            cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc292)
            cir.scope {
              %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc166)
              %9 = cir.const #cir.int<0> : !s32i loc(#loc167)
              %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc294)
              %11 = cir.ternary(%10, true {
                %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc169)
                %13 = cir.const #cir.int<10> : !s32i loc(#loc170)
                %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc295)
                %15 = cir.ternary(%14, true {
                  %16 = cir.const #true loc(#loc168)
                  cir.yield %16 : !cir.bool loc(#loc168)
                }, false {
                  %16 = cir.const #false loc(#loc168)
                  cir.yield %16 : !cir.bool loc(#loc168)
                }) : (!cir.bool) -> !cir.bool loc(#loc168)
                cir.yield %15 : !cir.bool loc(#loc168)
              }, false {
                %12 = cir.const #false loc(#loc168)
                cir.yield %12 : !cir.bool loc(#loc168)
              }) : (!cir.bool) -> !cir.bool loc(#loc168)
              cir.if %11 {
                %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc175)
                %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc176)
                %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc176)
                %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc176)
                cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc177)
              } else {
                %12 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc111)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc111)
                cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc178)
              } loc(#loc296)
            } loc(#loc293)
          } loc(#loc291)
        } loc(#loc290)
        cir.yield loc(#loc153)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc179)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc180)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc297)
        cir.yield loc(#loc287)
      } loc(#loc287)
    } loc(#loc287)
    cir.return loc(#loc113)
  } loc(#loc271)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc299)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc300)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc301)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc188)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc189)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc302)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc193)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc304)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc195)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc196)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc305)
        cir.condition(%8) loc(#loc197)
      } body {
        cir.scope {
          %6 = cir.const #cir.int<7> : !s32i loc(#loc199)
          cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc307)
        } loc(#loc306)
        cir.yield loc(#loc192)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc201)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc202)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc308)
        cir.yield loc(#loc303)
      } loc(#loc303)
    } loc(#loc303)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc205)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc310)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc207)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc208)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc311)
        cir.condition(%8) loc(#loc209)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc314)
            %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc314)
            cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc314)
            cir.scope {
              %8 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc217)
              %9 = cir.const #cir.int<10> : !s32i loc(#loc218)
              %10 = cir.cmp(lt, %8, %9) : !s32i, !cir.bool loc(#loc316)
              cir.if %10 {
                %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc222)
                %12 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc223)
                %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc223)
                %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc223)
                cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc224)
              } else {
                %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc225)
                %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc225)
                cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc226)
              } loc(#loc317)
            } loc(#loc315)
          } loc(#loc313)
        } loc(#loc312)
        cir.yield loc(#loc204)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc227)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc228)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc318)
        cir.yield loc(#loc309)
      } loc(#loc309)
    } loc(#loc309)
    cir.return loc(#loc182)
  } loc(#loc298)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_fgets_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":42:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":58:27)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":24:1)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":62:1)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":26:5)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":26:9)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":26:11)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":27:5)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":27:9)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":29:13)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":29:12)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":29:5)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":30:5)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":45:5)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":30:13)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":30:9)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":30:16)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":30:20)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":30:18)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":31:5)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":32:9)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":44:9)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":33:13)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":33:49)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":35:13)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":43:13)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":35:23)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":35:36)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":35:53)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":35:17)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":35:63)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":36:13)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":39:13)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":41:13)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":38:29)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":38:24)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":38:17)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":38:40)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":42:17)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":30:24)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":30:23)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":46:5)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":61:5)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":46:13)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":46:9)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":46:16)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":46:20)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":46:18)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":47:5)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":48:9)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":60:9)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":49:13)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":49:34)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":52:13)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":59:13)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":52:17)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":52:24)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":53:13)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":55:13)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":57:13)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":54:37)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":54:30)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":54:17)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":58:17)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":46:24)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":46:23)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":139:1)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":143:1)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":141:5)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":141:13)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":142:5)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":142:13)
#loc83 = loc("/usr/include/stdlib.h":575:1)
#loc84 = loc("/usr/include/stdlib.h":575:41)
#loc85 = loc("/usr/include/time.h":76:1)
#loc86 = loc("/usr/include/time.h":76:38)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":159:15)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":161:15)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":164:15)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":166:15)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":154:1)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":169:1)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":155:1)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":157:27)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":157:22)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":157:5)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":159:5)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":160:5)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":160:51)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":161:5)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":164:5)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":165:5)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":165:50)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":166:5)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":168:12)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":168:5)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":102:27)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":69:1)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":106:1)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":71:5)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":71:9)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":71:11)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":72:5)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":72:9)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":74:13)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":74:12)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":74:5)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":75:5)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":90:5)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":75:13)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":75:9)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":75:16)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":75:20)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":75:18)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":76:5)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":77:9)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":89:9)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":78:13)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":78:49)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":80:13)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":88:13)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":80:23)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":80:36)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":80:53)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":80:17)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":80:63)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":81:13)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":84:13)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":86:13)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":83:29)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":83:24)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":83:17)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":83:40)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":87:27)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":87:17)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":75:24)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":75:23)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":91:5)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":105:5)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":91:13)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":91:9)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":91:16)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":91:20)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":91:18)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":92:5)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":93:9)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":104:9)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":94:13)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":94:34)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":96:13)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":103:13)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":96:17)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":96:25)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":96:27)
#loc169 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":96:30)
#loc170 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":96:38)
#loc171 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":96:40)
#loc172 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":97:13)
#loc173 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":99:13)
#loc174 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":101:13)
#loc175 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":98:37)
#loc176 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":98:30)
#loc177 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":98:17)
#loc178 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":102:17)
#loc179 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":91:24)
#loc180 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":91:23)
#loc181 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":109:1)
#loc182 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":137:1)
#loc183 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":111:5)
#loc184 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":111:9)
#loc185 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":111:11)
#loc186 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":112:5)
#loc187 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":112:9)
#loc188 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":114:13)
#loc189 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":114:12)
#loc190 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":114:5)
#loc191 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":115:5)
#loc192 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":120:5)
#loc193 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":115:13)
#loc194 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":115:9)
#loc195 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":115:16)
#loc196 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":115:20)
#loc197 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":115:18)
#loc198 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":116:5)
#loc199 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":119:16)
#loc200 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":119:9)
#loc201 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":115:24)
#loc202 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":115:23)
#loc203 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":121:5)
#loc204 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":136:5)
#loc205 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":121:13)
#loc206 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":121:9)
#loc207 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":121:16)
#loc208 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":121:20)
#loc209 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":121:18)
#loc210 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":122:5)
#loc211 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":123:9)
#loc212 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":135:9)
#loc213 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":124:13)
#loc214 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":124:34)
#loc215 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":127:13)
#loc216 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":134:13)
#loc217 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":127:17)
#loc218 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":127:24)
#loc219 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":128:13)
#loc220 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":130:13)
#loc221 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":132:13)
#loc222 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":129:37)
#loc223 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":129:30)
#loc224 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":129:17)
#loc225 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":133:27)
#loc226 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":133:17)
#loc227 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":121:24)
#loc228 = loc("CWE127_Buffer_Underread__CWE839_fgets_17.c":121:23)
#loc229 = loc(fused[#loc1, #loc2])
#loc230 = loc(fused[#loc3, #loc4])
#loc231 = loc(fused[#loc5, #loc6])
#loc232 = loc(fused[#loc7, #loc8])
#loc233 = loc(fused[#loc10, #loc11])
#loc234 = loc(fused[#loc13, #loc14])
#loc235 = loc(fused[#loc15, #loc16])
#loc236 = loc(fused[#loc15, #loc17])
#loc237 = loc(fused[#loc18, #loc19])
#loc238 = loc(fused[#loc22, #loc20])
#loc239 = loc(fused[#loc23, #loc24])
#loc240 = loc(fused[#loc26, #loc25])
#loc241 = loc(fused[#loc27, #loc28])
#loc242 = loc(fused[#loc30, #loc24])
#loc243 = loc(fused[#loc31, #loc32])
#loc244 = loc(fused[#loc33, #loc34])
#loc245 = loc(fused[#loc35, #loc36])
#loc246 = loc(fused[#loc40, #loc41])
#loc247 = loc(fused[#loc42, #loc43, #loc44, #loc36])
#loc248 = loc(fused[#loc47, #loc48])
#loc249 = loc(fused[#loc51, #loc50])
#loc250 = loc(fused[#loc52, #loc53])
#loc251 = loc(fused[#loc55, #loc54])
#loc252 = loc(fused[#loc56, #loc57])
#loc253 = loc(fused[#loc59, #loc53])
#loc254 = loc(fused[#loc60, #loc61])
#loc255 = loc(fused[#loc62, #loc63])
#loc256 = loc(fused[#loc64, #loc65])
#loc257 = loc(fused[#loc66, #loc67])
#loc258 = loc(fused[#loc68, #loc69, #loc70, #loc65])
#loc259 = loc(fused[#loc76, #loc75])
#loc260 = loc(fused[#loc77, #loc78])
#loc261 = loc(fused[#loc79, #loc80])
#loc262 = loc(fused[#loc81, #loc82])
#loc263 = loc(fused[#loc83, #loc84])
#loc264 = loc(fused[#loc85, #loc86])
#loc265 = loc(fused[#loc91, #loc92])
#loc268 = loc(fused[#loc102, #loc103])
#loc269 = loc(fused[#loc106, #loc107])
#loc270 = loc(fused[#loc110, #loc109])
#loc271 = loc(fused[#loc112, #loc113])
#loc272 = loc(fused[#loc114, #loc115])
#loc273 = loc(fused[#loc114, #loc116])
#loc274 = loc(fused[#loc117, #loc118])
#loc275 = loc(fused[#loc121, #loc119])
#loc276 = loc(fused[#loc122, #loc123])
#loc277 = loc(fused[#loc125, #loc124])
#loc278 = loc(fused[#loc126, #loc127])
#loc279 = loc(fused[#loc129, #loc123])
#loc280 = loc(fused[#loc130, #loc131])
#loc281 = loc(fused[#loc132, #loc133])
#loc282 = loc(fused[#loc134, #loc135])
#loc283 = loc(fused[#loc139, #loc140])
#loc284 = loc(fused[#loc141, #loc142, #loc143, #loc135])
#loc285 = loc(fused[#loc146, #loc147])
#loc286 = loc(fused[#loc151, #loc150])
#loc287 = loc(fused[#loc152, #loc153])
#loc288 = loc(fused[#loc155, #loc154])
#loc289 = loc(fused[#loc156, #loc157])
#loc290 = loc(fused[#loc159, #loc153])
#loc291 = loc(fused[#loc160, #loc161])
#loc292 = loc(fused[#loc162, #loc163])
#loc293 = loc(fused[#loc164, #loc165])
#loc294 = loc(fused[#loc166, #loc167])
#loc295 = loc(fused[#loc169, #loc171])
#loc296 = loc(fused[#loc172, #loc173, #loc174, #loc165])
#loc297 = loc(fused[#loc180, #loc179])
#loc298 = loc(fused[#loc181, #loc182])
#loc299 = loc(fused[#loc183, #loc184])
#loc300 = loc(fused[#loc183, #loc185])
#loc301 = loc(fused[#loc186, #loc187])
#loc302 = loc(fused[#loc190, #loc188])
#loc303 = loc(fused[#loc191, #loc192])
#loc304 = loc(fused[#loc194, #loc193])
#loc305 = loc(fused[#loc195, #loc196])
#loc306 = loc(fused[#loc198, #loc192])
#loc307 = loc(fused[#loc200, #loc199])
#loc308 = loc(fused[#loc202, #loc201])
#loc309 = loc(fused[#loc203, #loc204])
#loc310 = loc(fused[#loc206, #loc205])
#loc311 = loc(fused[#loc207, #loc208])
#loc312 = loc(fused[#loc210, #loc204])
#loc313 = loc(fused[#loc211, #loc212])
#loc314 = loc(fused[#loc213, #loc214])
#loc315 = loc(fused[#loc215, #loc216])
#loc316 = loc(fused[#loc217, #loc218])
#loc317 = loc(fused[#loc219, #loc220, #loc221, #loc216])
#loc318 = loc(fused[#loc228, #loc227])
