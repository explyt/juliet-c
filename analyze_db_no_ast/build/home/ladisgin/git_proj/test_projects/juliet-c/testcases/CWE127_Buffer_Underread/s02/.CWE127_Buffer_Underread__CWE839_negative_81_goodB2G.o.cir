!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc8 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":25:59)
#loc9 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":25:66)
#loc10 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":25:70)
#true = #cir.bool<true> : !cir.bool
#loc34 = loc(fused[#loc9, #loc10])
!ty_CWE127_Buffer_Underread__CWE839_negative_813A3ACWE127_Buffer_Underread__CWE839_negative_81_base = !cir.struct<class "CWE127_Buffer_Underread__CWE839_negative_81::CWE127_Buffer_Underread__CWE839_negative_81_base" {!cir.ptr<!cir.ptr<!cir.func<!u32i ()>>>} #cir.record.decl.ast>
!ty_CWE127_Buffer_Underread__CWE839_negative_813A3ACWE127_Buffer_Underread__CWE839_negative_81_goodB2G = !cir.struct<class "CWE127_Buffer_Underread__CWE839_negative_81::CWE127_Buffer_Underread__CWE839_negative_81_goodB2G" {!ty_CWE127_Buffer_Underread__CWE839_negative_813A3ACWE127_Buffer_Underread__CWE839_negative_81_base} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc31)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc32)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc5)
  cir.func  @_ZNK43CWE127_Buffer_Underread__CWE839_negative_8151CWE127_Buffer_Underread__CWE839_negative_81_goodB2G6actionEi(%arg0: !cir.ptr<!ty_CWE127_Buffer_Underread__CWE839_negative_813A3ACWE127_Buffer_Underread__CWE839_negative_81_goodB2G> loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":25:59), %arg1: !s32i loc(fused[#loc9, #loc10])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_CWE127_Buffer_Underread__CWE839_negative_813A3ACWE127_Buffer_Underread__CWE839_negative_81_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE127_Buffer_Underread__CWE839_negative_813A3ACWE127_Buffer_Underread__CWE839_negative_81_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc8)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc34)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE127_Buffer_Underread__CWE839_negative_813A3ACWE127_Buffer_Underread__CWE839_negative_81_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE127_Buffer_Underread__CWE839_negative_813A3ACWE127_Buffer_Underread__CWE839_negative_81_goodB2G>> loc(#loc11)
    cir.store %arg1, %1 : !s32i, !cir.ptr<!s32i> loc(#loc11)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE127_Buffer_Underread__CWE839_negative_813A3ACWE127_Buffer_Underread__CWE839_negative_81_goodB2G>>, !cir.ptr<!ty_CWE127_Buffer_Underread__CWE839_negative_813A3ACWE127_Buffer_Underread__CWE839_negative_81_goodB2G> loc(#loc8)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc36)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc36)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc36)
      cir.scope {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc18)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc19)
        %7 = cir.cmp(ge, %5, %6) : !s32i, !cir.bool loc(#loc38)
        %8 = cir.ternary(%7, true {
          %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc21)
          %10 = cir.const #cir.int<10> : !s32i loc(#loc22)
          %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc39)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc20)
            cir.yield %13 : !cir.bool loc(#loc20)
          }, false {
            %13 = cir.const #false loc(#loc20)
            cir.yield %13 : !cir.bool loc(#loc20)
          }) : (!cir.bool) -> !cir.bool loc(#loc20)
          cir.yield %12 : !cir.bool loc(#loc20)
        }, false {
          %9 = cir.const #false loc(#loc20)
          cir.yield %9 : !cir.bool loc(#loc20)
        }) : (!cir.bool) -> !cir.bool loc(#loc20)
        cir.if %8 {
          %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc27)
          %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc28)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc28)
          %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc28)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc29)
        } else {
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc5)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc5)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc30)
        } loc(#loc40)
      } loc(#loc37)
    } loc(#loc35)
    cir.return loc(#loc7)
  } loc(#loc33)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":36:23)
#loc6 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":25:1)
#loc7 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":39:1)
#loc11 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":26:1)
#loc12 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":27:5)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":38:5)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":28:9)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":28:30)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":30:9)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":37:9)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":30:13)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":30:21)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":30:23)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":30:26)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":30:34)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":30:36)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":31:9)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":33:9)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":35:9)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":32:33)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":32:26)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":32:13)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_negative_81_goodB2G.cpp":36:13)
#loc31 = loc(fused[#loc1, #loc2])
#loc32 = loc(fused[#loc3, #loc4])
#loc33 = loc(fused[#loc6, #loc7])
#loc35 = loc(fused[#loc12, #loc13])
#loc36 = loc(fused[#loc14, #loc15])
#loc37 = loc(fused[#loc16, #loc17])
#loc38 = loc(fused[#loc18, #loc19])
#loc39 = loc(fused[#loc21, #loc23])
#loc40 = loc(fused[#loc24, #loc25, #loc26, #loc17])
