!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc421)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc422)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc5)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc423)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc8)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc424)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc425)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc13)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc426)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc16)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc428)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc22)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc429)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc431)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc431)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc26)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc26)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc31)
        %9 = cir.binop(and, %7, %8) : !s32i loc(#loc31)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc31)
        %11 = cir.ternary(%10, true {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc31)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc31)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc31)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc31)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc31)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc31)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc31)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc31)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc31)
          cir.yield %24 : !u32i loc(#loc31)
        }, false {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc31)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc31)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc31)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc31)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc31)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc31)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc31)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc31)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc31)
          %25 = cir.unary(minus, %24) : !u32i, !u32i loc(#loc31)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc31)
          %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc31)
          %28 = cir.binop(sub, %25, %27) : !u32i loc(#loc31)
          cir.yield %28 : !u32i loc(#loc31)
        }) : (!cir.bool) -> !u32i loc(#loc31)
        %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc31)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc433)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc33)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc434)
      } loc(#loc432)
    } loc(#loc430)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc436)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc436)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc37)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc37)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc439)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc440)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc441)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc45)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc45)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc439)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc47)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc440)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc5)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc5)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc441)
          %15 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc49)
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
          %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc8)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc8)
          %19 = cir.call @fopen(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc49)
          cir.store %19, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc442)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc55)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc56)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc444)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc58)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc59)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc58)
            } loc(#loc445)
          } loc(#loc443)
          cir.scope {
            %20 = cir.const #cir.int<0> : !s32i loc(#loc62)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc62)
            cir.store %21, %7 : !u64i, !cir.ptr<!u64i> loc(#loc447)
            cir.for : cond {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc64)
              %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc65)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc65)
              %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc448)
              cir.condition(%25) loc(#loc66)
            } body {
              cir.scope {
                cir.scope {
                  %22 = cir.const #cir.int<50> : !u64i loc(#loc451)
                  %23 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc72)
                  %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc13)
                  %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc13)
                  %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
                  %27 = cir.const #cir.int<1> : !u64i loc(#loc452)
                  %28 = cir.const #cir.int<50> : !u64i loc(#loc453)
                  %29 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc77)
                  %30 = cir.call @fwrite(%26, %27, %28, %29) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc72)
                  %31 = cir.cmp(ne, %22, %30) : !u64i, !cir.bool loc(#loc454)
                  cir.if %31 {
                    %32 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc80)
                    %33 = cir.const #cir.int<1> : !s32i loc(#loc81)
                    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc80)
                  } loc(#loc455)
                } loc(#loc450)
              } loc(#loc449)
              cir.yield loc(#loc61)
            } step {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc82)
              %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc83)
              cir.store %23, %7 : !u64i, !cir.ptr<!u64i> loc(#loc456)
              cir.yield loc(#loc446)
            } loc(#loc446)
          } loc(#loc446)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc86)
            %21 = cir.cast(ptr_to_bool, %20 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc86)
            cir.if %21 {
              %22 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc88)
              %23 = cir.call @fclose(%22) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc89)
            } loc(#loc458)
          } loc(#loc457)
        } loc(#loc438)
      } else {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc460)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc461)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc462)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc93)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc93)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc460)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc95)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc461)
          %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc16)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc16)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc462)
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc100)
            %17 = cir.cmp(gt, %15, %16) : !s32i, !cir.bool loc(#loc464)
            %18 = cir.ternary(%17, true {
              %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc102)
              %20 = cir.const #cir.int<20> : !s32i loc(#loc103)
              %21 = cir.cmp(le, %19, %20) : !s32i, !cir.bool loc(#loc465)
              %22 = cir.ternary(%21, true {
                %23 = cir.const #true loc(#loc101)
                cir.yield %23 : !cir.bool loc(#loc101)
              }, false {
                %23 = cir.const #false loc(#loc101)
                cir.yield %23 : !cir.bool loc(#loc101)
              }) : (!cir.bool) -> !cir.bool loc(#loc101)
              cir.yield %22 : !cir.bool loc(#loc101)
            }, false {
              %19 = cir.const #false loc(#loc101)
              cir.yield %19 : !cir.bool loc(#loc101)
            }) : (!cir.bool) -> !cir.bool loc(#loc101)
            cir.if %18 {
              %19 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc105)
              %20 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
              %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc107)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc107)
              %23 = cir.call @fopen(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc105)
              cir.store %23, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc467)
              cir.scope {
                %24 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc112)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc113)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc469)
                cir.if %27 {
                  %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc115)
                  %29 = cir.const #cir.int<1> : !s32i loc(#loc116)
                  cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc115)
                } loc(#loc470)
              } loc(#loc468)
              cir.scope {
                %24 = cir.const #cir.int<0> : !s32i loc(#loc119)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc119)
                cir.store %25, %7 : !u64i, !cir.ptr<!u64i> loc(#loc472)
                cir.for : cond {
                  %26 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc121)
                  %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
                  %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc122)
                  %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc473)
                  cir.condition(%29) loc(#loc123)
                } body {
                  cir.scope {
                    cir.scope {
                      %26 = cir.const #cir.int<50> : !u64i loc(#loc476)
                      %27 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc129)
                      %28 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc130)
                      %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc130)
                      %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
                      %31 = cir.const #cir.int<1> : !u64i loc(#loc477)
                      %32 = cir.const #cir.int<50> : !u64i loc(#loc478)
                      %33 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc135)
                      %34 = cir.call @fwrite(%30, %31, %32, %33) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc129)
                      %35 = cir.cmp(ne, %26, %34) : !u64i, !cir.bool loc(#loc479)
                      cir.if %35 {
                        %36 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc137)
                        %37 = cir.const #cir.int<1> : !s32i loc(#loc138)
                        cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc137)
                      } loc(#loc480)
                    } loc(#loc475)
                  } loc(#loc474)
                  cir.yield loc(#loc118)
                } step {
                  %26 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc139)
                  %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc140)
                  cir.store %27, %7 : !u64i, !cir.ptr<!u64i> loc(#loc481)
                  cir.yield loc(#loc471)
                } loc(#loc471)
              } loc(#loc471)
              cir.scope {
                %24 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc143)
                %25 = cir.cast(ptr_to_bool, %24 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc143)
                cir.if %25 {
                  %26 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc145)
                  %27 = cir.call @fclose(%26) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc146)
                } loc(#loc483)
              } loc(#loc482)
            } loc(#loc466)
          } loc(#loc463)
        } loc(#loc459)
      } loc(#loc437)
    } loc(#loc435)
    cir.return loc(#loc18)
  } loc(#loc427)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc485)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc149)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc486)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc151)
    cir.return loc(#loc148)
  } loc(#loc484)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc488)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc158)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc489)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc491)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc491)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc162)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc162)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc167)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc167)
        %9 = cir.binop(and, %7, %8) : !s32i loc(#loc167)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc167)
        %11 = cir.ternary(%10, true {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc167)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc167)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc167)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc167)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc167)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc167)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc167)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc167)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc167)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc167)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc167)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc167)
          cir.yield %24 : !u32i loc(#loc167)
        }, false {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc167)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc167)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc167)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc167)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc167)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc167)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc167)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc167)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc167)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc167)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc167)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc167)
          %25 = cir.unary(minus, %24) : !u32i, !u32i loc(#loc167)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc167)
          %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc167)
          %28 = cir.binop(sub, %25, %27) : !u32i loc(#loc167)
          cir.yield %28 : !u32i loc(#loc167)
        }) : (!cir.bool) -> !u32i loc(#loc167)
        %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc167)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc493)
      } else {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc169)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc169)
        %9 = cir.binop(and, %7, %8) : !s32i loc(#loc169)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc169)
        %11 = cir.ternary(%10, true {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc169)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc169)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc169)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc169)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc169)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc169)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc169)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc169)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc169)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc169)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc169)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc169)
          cir.yield %24 : !u32i loc(#loc169)
        }, false {
          %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc169)
          %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc169)
          %15 = cir.const #cir.int<30> : !s32i loc(#loc169)
          %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc169)
          %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc169)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc169)
          %19 = cir.const #cir.int<15> : !s32i loc(#loc169)
          %20 = cir.shift(left, %18 : !u32i, %19 : !s32i) -> !u32i loc(#loc169)
          %21 = cir.binop(xor, %16, %20) : !u32i loc(#loc169)
          %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc169)
          %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc169)
          %24 = cir.binop(xor, %21, %23) : !u32i loc(#loc169)
          %25 = cir.unary(minus, %24) : !u32i, !u32i loc(#loc169)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc169)
          %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc169)
          %28 = cir.binop(sub, %25, %27) : !u32i loc(#loc169)
          cir.yield %28 : !u32i loc(#loc169)
        }) : (!cir.bool) -> !u32i loc(#loc169)
        %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc169)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc494)
      } loc(#loc492)
    } loc(#loc490)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc496)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc496)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc173)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc173)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc499)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc500)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc501)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc181)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc181)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc499)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc183)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc500)
          %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc185)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc185)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc501)
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc188)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc189)
            %17 = cir.cmp(gt, %15, %16) : !s32i, !cir.bool loc(#loc503)
            %18 = cir.ternary(%17, true {
              %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc191)
              %20 = cir.const #cir.int<20> : !s32i loc(#loc192)
              %21 = cir.cmp(le, %19, %20) : !s32i, !cir.bool loc(#loc504)
              %22 = cir.ternary(%21, true {
                %23 = cir.const #true loc(#loc190)
                cir.yield %23 : !cir.bool loc(#loc190)
              }, false {
                %23 = cir.const #false loc(#loc190)
                cir.yield %23 : !cir.bool loc(#loc190)
              }) : (!cir.bool) -> !cir.bool loc(#loc190)
              cir.yield %22 : !cir.bool loc(#loc190)
            }, false {
              %19 = cir.const #false loc(#loc190)
              cir.yield %19 : !cir.bool loc(#loc190)
            }) : (!cir.bool) -> !cir.bool loc(#loc190)
            cir.if %18 {
              %19 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc194)
              %20 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
              %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc196)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc196)
              %23 = cir.call @fopen(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc194)
              cir.store %23, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc506)
              cir.scope {
                %24 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc201)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc202)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc202)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc508)
                cir.if %27 {
                  %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc204)
                  %29 = cir.const #cir.int<1> : !s32i loc(#loc205)
                  cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc204)
                } loc(#loc509)
              } loc(#loc507)
              cir.scope {
                %24 = cir.const #cir.int<0> : !s32i loc(#loc208)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc208)
                cir.store %25, %7 : !u64i, !cir.ptr<!u64i> loc(#loc511)
                cir.for : cond {
                  %26 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc210)
                  %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc211)
                  %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc211)
                  %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc512)
                  cir.condition(%29) loc(#loc212)
                } body {
                  cir.scope {
                    cir.scope {
                      %26 = cir.const #cir.int<50> : !u64i loc(#loc515)
                      %27 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc218)
                      %28 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc219)
                      %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc219)
                      %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc219)
                      %31 = cir.const #cir.int<1> : !u64i loc(#loc516)
                      %32 = cir.const #cir.int<50> : !u64i loc(#loc517)
                      %33 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc224)
                      %34 = cir.call @fwrite(%30, %31, %32, %33) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc218)
                      %35 = cir.cmp(ne, %26, %34) : !u64i, !cir.bool loc(#loc518)
                      cir.if %35 {
                        %36 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc226)
                        %37 = cir.const #cir.int<1> : !s32i loc(#loc227)
                        cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc226)
                      } loc(#loc519)
                    } loc(#loc514)
                  } loc(#loc513)
                  cir.yield loc(#loc207)
                } step {
                  %26 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc228)
                  %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc229)
                  cir.store %27, %7 : !u64i, !cir.ptr<!u64i> loc(#loc520)
                  cir.yield loc(#loc510)
                } loc(#loc510)
              } loc(#loc510)
              cir.scope {
                %24 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc232)
                %25 = cir.cast(ptr_to_bool, %24 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc232)
                cir.if %25 {
                  %26 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc234)
                  %27 = cir.call @fclose(%26) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc235)
                } loc(#loc522)
              } loc(#loc521)
            } loc(#loc505)
          } loc(#loc502)
        } loc(#loc498)
      } else {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc524)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc525)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc526)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc239)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc239)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc524)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc241)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc525)
          %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc243)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc243)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc526)
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc246)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc247)
            %17 = cir.cmp(gt, %15, %16) : !s32i, !cir.bool loc(#loc528)
            %18 = cir.ternary(%17, true {
              %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc249)
              %20 = cir.const #cir.int<20> : !s32i loc(#loc250)
              %21 = cir.cmp(le, %19, %20) : !s32i, !cir.bool loc(#loc529)
              %22 = cir.ternary(%21, true {
                %23 = cir.const #true loc(#loc248)
                cir.yield %23 : !cir.bool loc(#loc248)
              }, false {
                %23 = cir.const #false loc(#loc248)
                cir.yield %23 : !cir.bool loc(#loc248)
              }) : (!cir.bool) -> !cir.bool loc(#loc248)
              cir.yield %22 : !cir.bool loc(#loc248)
            }, false {
              %19 = cir.const #false loc(#loc248)
              cir.yield %19 : !cir.bool loc(#loc248)
            }) : (!cir.bool) -> !cir.bool loc(#loc248)
            cir.if %18 {
              %19 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc252)
              %20 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc253)
              %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc254)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc254)
              %23 = cir.call @fopen(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc252)
              cir.store %23, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc531)
              cir.scope {
                %24 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc259)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc260)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc260)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc533)
                cir.if %27 {
                  %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc262)
                  %29 = cir.const #cir.int<1> : !s32i loc(#loc263)
                  cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc262)
                } loc(#loc534)
              } loc(#loc532)
              cir.scope {
                %24 = cir.const #cir.int<0> : !s32i loc(#loc266)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc266)
                cir.store %25, %7 : !u64i, !cir.ptr<!u64i> loc(#loc536)
                cir.for : cond {
                  %26 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc268)
                  %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc269)
                  %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc269)
                  %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc537)
                  cir.condition(%29) loc(#loc270)
                } body {
                  cir.scope {
                    cir.scope {
                      %26 = cir.const #cir.int<50> : !u64i loc(#loc540)
                      %27 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc276)
                      %28 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc277)
                      %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc277)
                      %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc277)
                      %31 = cir.const #cir.int<1> : !u64i loc(#loc541)
                      %32 = cir.const #cir.int<50> : !u64i loc(#loc542)
                      %33 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc282)
                      %34 = cir.call @fwrite(%30, %31, %32, %33) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc276)
                      %35 = cir.cmp(ne, %26, %34) : !u64i, !cir.bool loc(#loc543)
                      cir.if %35 {
                        %36 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc284)
                        %37 = cir.const #cir.int<1> : !s32i loc(#loc285)
                        cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc284)
                      } loc(#loc544)
                    } loc(#loc539)
                  } loc(#loc538)
                  cir.yield loc(#loc265)
                } step {
                  %26 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc286)
                  %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc287)
                  cir.store %27, %7 : !u64i, !cir.ptr<!u64i> loc(#loc545)
                  cir.yield loc(#loc535)
                } loc(#loc535)
              } loc(#loc535)
              cir.scope {
                %24 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc290)
                %25 = cir.cast(ptr_to_bool, %24 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc290)
                cir.if %25 {
                  %26 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc292)
                  %27 = cir.call @fclose(%26) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc293)
                } loc(#loc547)
              } loc(#loc546)
            } loc(#loc530)
          } loc(#loc527)
        } loc(#loc523)
      } loc(#loc497)
    } loc(#loc495)
    cir.return loc(#loc154)
  } loc(#loc487)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc549)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc298)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc299)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc550)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc552)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc552)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc303)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc303)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc308)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc554)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc310)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc555)
      } loc(#loc553)
    } loc(#loc551)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc557)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc557)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc314)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc314)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc560)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc561)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc562)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc322)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc322)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc560)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc324)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc561)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc326)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc326)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc562)
          %15 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc327)
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc328)
          %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc329)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc329)
          %19 = cir.call @fopen(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc327)
          cir.store %19, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc563)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc334)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc335)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc335)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc565)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc337)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc338)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc337)
            } loc(#loc566)
          } loc(#loc564)
          cir.scope {
            %20 = cir.const #cir.int<0> : !s32i loc(#loc341)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc341)
            cir.store %21, %7 : !u64i, !cir.ptr<!u64i> loc(#loc568)
            cir.for : cond {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc343)
              %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc344)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc344)
              %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc569)
              cir.condition(%25) loc(#loc345)
            } body {
              cir.scope {
                cir.scope {
                  %22 = cir.const #cir.int<50> : !u64i loc(#loc572)
                  %23 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc351)
                  %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc352)
                  %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc352)
                  %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc352)
                  %27 = cir.const #cir.int<1> : !u64i loc(#loc573)
                  %28 = cir.const #cir.int<50> : !u64i loc(#loc574)
                  %29 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc357)
                  %30 = cir.call @fwrite(%26, %27, %28, %29) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc351)
                  %31 = cir.cmp(ne, %22, %30) : !u64i, !cir.bool loc(#loc575)
                  cir.if %31 {
                    %32 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc360)
                    %33 = cir.const #cir.int<1> : !s32i loc(#loc361)
                    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc360)
                  } loc(#loc576)
                } loc(#loc571)
              } loc(#loc570)
              cir.yield loc(#loc340)
            } step {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc362)
              %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc363)
              cir.store %23, %7 : !u64i, !cir.ptr<!u64i> loc(#loc577)
              cir.yield loc(#loc567)
            } loc(#loc567)
          } loc(#loc567)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc366)
            %21 = cir.cast(ptr_to_bool, %20 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc366)
            cir.if %21 {
              %22 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc368)
              %23 = cir.call @fclose(%22) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc369)
            } loc(#loc579)
          } loc(#loc578)
        } loc(#loc559)
      } else {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc581)
          %8 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc582)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc583)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc373)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc373)
          cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc581)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc375)
          cir.store %12, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc582)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc377)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc377)
          cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc583)
          %15 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc378)
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc379)
          %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc380)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc380)
          %19 = cir.call @fopen(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc378)
          cir.store %19, %8 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc584)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc385)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc386)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc386)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc586)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc388)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc389)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc388)
            } loc(#loc587)
          } loc(#loc585)
          cir.scope {
            %20 = cir.const #cir.int<0> : !s32i loc(#loc392)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc392)
            cir.store %21, %7 : !u64i, !cir.ptr<!u64i> loc(#loc589)
            cir.for : cond {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc394)
              %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc395)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc395)
              %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc590)
              cir.condition(%25) loc(#loc396)
            } body {
              cir.scope {
                cir.scope {
                  %22 = cir.const #cir.int<50> : !u64i loc(#loc593)
                  %23 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc402)
                  %24 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc403)
                  %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc403)
                  %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc403)
                  %27 = cir.const #cir.int<1> : !u64i loc(#loc594)
                  %28 = cir.const #cir.int<50> : !u64i loc(#loc595)
                  %29 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc408)
                  %30 = cir.call @fwrite(%26, %27, %28, %29) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc402)
                  %31 = cir.cmp(ne, %22, %30) : !u64i, !cir.bool loc(#loc596)
                  cir.if %31 {
                    %32 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc411)
                    %33 = cir.const #cir.int<1> : !s32i loc(#loc412)
                    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc411)
                  } loc(#loc597)
                } loc(#loc592)
              } loc(#loc591)
              cir.yield loc(#loc391)
            } step {
              %22 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc413)
              %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc414)
              cir.store %23, %7 : !u64i, !cir.ptr<!u64i> loc(#loc598)
              cir.yield loc(#loc588)
            } loc(#loc588)
          } loc(#loc588)
          cir.scope {
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc417)
            %21 = cir.cast(ptr_to_bool, %20 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc417)
            cir.if %21 {
              %22 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc419)
              %23 = cir.call @fclose(%22) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc420)
            } loc(#loc600)
          } loc(#loc599)
        } loc(#loc580)
      } loc(#loc558)
    } loc(#loc556)
    cir.return loc(#loc295)
  } loc(#loc548)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":44:36)
#loc6 = loc("/usr/include/stdio.h":264:1)
#loc7 = loc("/usr/include/stdio.h":266:3)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":45:37)
#loc9 = loc("/usr/include/stdlib.h":756:1)
#loc10 = loc("/usr/include/stdlib.h":756:70)
#loc11 = loc("/usr/include/stdio.h":745:1)
#loc12 = loc("/usr/include/stdio.h":746:43)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:48)
#loc14 = loc("/usr/include/stdio.h":184:1)
#loc15 = loc("/usr/include/stdio.h":184:36)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":70:36)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":24:1)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":90:1)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":26:5)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":26:9)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":28:14)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":28:13)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":28:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":29:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":38:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":29:8)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":29:33)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":30:5)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":33:5)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":35:5)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":32:17)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":32:9)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":37:17)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":37:9)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":39:5)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":89:5)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":39:8)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":39:33)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":40:5)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":64:5)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":66:5)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":41:9)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":63:9)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":42:13)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":42:24)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":43:13)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":43:27)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":44:13)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":45:21)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":45:27)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":45:13)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":45:41)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":46:13)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":49:13)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":46:17)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":46:26)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":47:13)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":48:17)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":48:22)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":52:13)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":58:13)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":52:22)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":52:18)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":52:25)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":52:37)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":52:27)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":53:13)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:17)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":57:17)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:21)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:36)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:41)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:58)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:69)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:72)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:87)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:90)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":54:95)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":55:17)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":56:21)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":56:26)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":52:45)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":52:44)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":59:13)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":62:13)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":59:17)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":60:13)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":61:24)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":61:17)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":67:9)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":88:9)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":68:13)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":68:24)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":69:13)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":69:27)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":70:13)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":72:13)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":87:13)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":72:17)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":72:25)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":72:27)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":72:30)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":72:39)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":73:13)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":74:25)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":74:31)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":74:41)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":74:17)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":74:45)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":75:17)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":78:17)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":75:21)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":75:30)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":76:17)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":77:21)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":77:26)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":79:17)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":82:17)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":79:26)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":79:22)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":79:29)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":79:41)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":79:31)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":80:17)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:21)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:108)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:25)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:40)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:45)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:52)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:62)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:73)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:76)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:91)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:94)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:99)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:102)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":81:107)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":79:49)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":79:48)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":83:17)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":86:17)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":83:21)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":84:17)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":85:28)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":85:21)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":238:1)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":242:1)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":240:5)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":240:13)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":241:5)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":241:13)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":99:1)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":164:1)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":101:5)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":101:9)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":103:14)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":103:13)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":103:5)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":104:5)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":113:5)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":104:8)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":104:33)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":105:5)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":108:5)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":110:5)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":107:17)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":107:9)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":112:17)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":112:9)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":114:5)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":163:5)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":114:8)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":114:33)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":115:5)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":138:5)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":140:5)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":116:9)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":137:9)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":117:13)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":117:24)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":118:13)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":118:27)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":119:13)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":119:36)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":121:13)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":136:13)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":121:17)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":121:25)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":121:27)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":121:30)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":121:39)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":122:13)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":123:25)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":123:31)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":123:41)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":123:17)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":123:45)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":124:17)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":127:17)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":124:21)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":124:30)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":125:17)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":126:21)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":126:26)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":128:17)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":131:17)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":128:26)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":128:22)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":128:29)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":128:41)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":128:31)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":129:17)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:21)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:108)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:25)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:40)
#loc218 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:45)
#loc219 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:52)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:62)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:73)
#loc222 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:76)
#loc223 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:91)
#loc224 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:94)
#loc225 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:99)
#loc226 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:102)
#loc227 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":130:107)
#loc228 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":128:49)
#loc229 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":128:48)
#loc230 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":132:17)
#loc231 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":135:17)
#loc232 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":132:21)
#loc233 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":133:17)
#loc234 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":134:28)
#loc235 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":134:21)
#loc236 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":141:9)
#loc237 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":162:9)
#loc238 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":142:13)
#loc239 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":142:24)
#loc240 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":143:13)
#loc241 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":143:27)
#loc242 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":144:13)
#loc243 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":144:36)
#loc244 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":146:13)
#loc245 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":161:13)
#loc246 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":146:17)
#loc247 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":146:25)
#loc248 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":146:27)
#loc249 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":146:30)
#loc250 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":146:39)
#loc251 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":147:13)
#loc252 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":148:25)
#loc253 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":148:31)
#loc254 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":148:41)
#loc255 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":148:17)
#loc256 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":148:45)
#loc257 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":149:17)
#loc258 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":152:17)
#loc259 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":149:21)
#loc260 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":149:30)
#loc261 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":150:17)
#loc262 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":151:21)
#loc263 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":151:26)
#loc264 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":153:17)
#loc265 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":156:17)
#loc266 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":153:26)
#loc267 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":153:22)
#loc268 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":153:29)
#loc269 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":153:41)
#loc270 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":153:31)
#loc271 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":154:17)
#loc272 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:21)
#loc273 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:108)
#loc274 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:25)
#loc275 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:40)
#loc276 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:45)
#loc277 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:52)
#loc278 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:62)
#loc279 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:73)
#loc280 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:76)
#loc281 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:91)
#loc282 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:94)
#loc283 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:99)
#loc284 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:102)
#loc285 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":155:107)
#loc286 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":153:49)
#loc287 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":153:48)
#loc288 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":157:17)
#loc289 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":160:17)
#loc290 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":157:21)
#loc291 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":158:17)
#loc292 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":159:28)
#loc293 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":159:21)
#loc294 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":169:1)
#loc295 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":236:1)
#loc296 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":171:5)
#loc297 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":171:9)
#loc298 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":173:14)
#loc299 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":173:13)
#loc300 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":173:5)
#loc301 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":174:5)
#loc302 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":183:5)
#loc303 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":174:8)
#loc304 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":174:33)
#loc305 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":175:5)
#loc306 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":178:5)
#loc307 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":180:5)
#loc308 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":177:17)
#loc309 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":177:9)
#loc310 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":182:17)
#loc311 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":182:9)
#loc312 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":184:5)
#loc313 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":235:5)
#loc314 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":184:8)
#loc315 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":184:33)
#loc316 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":185:5)
#loc317 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":209:5)
#loc318 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":211:5)
#loc319 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":186:9)
#loc320 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":208:9)
#loc321 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":187:13)
#loc322 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":187:24)
#loc323 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":188:13)
#loc324 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":188:27)
#loc325 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":189:13)
#loc326 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":189:36)
#loc327 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":190:21)
#loc328 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":190:27)
#loc329 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":190:37)
#loc330 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":190:13)
#loc331 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":190:41)
#loc332 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":191:13)
#loc333 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":194:13)
#loc334 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":191:17)
#loc335 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":191:26)
#loc336 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":192:13)
#loc337 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":193:17)
#loc338 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":193:22)
#loc339 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":197:13)
#loc340 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":203:13)
#loc341 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":197:22)
#loc342 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":197:18)
#loc343 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":197:25)
#loc344 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":197:37)
#loc345 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":197:27)
#loc346 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":198:13)
#loc347 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:17)
#loc348 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":202:17)
#loc349 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:21)
#loc350 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:36)
#loc351 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:41)
#loc352 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:48)
#loc353 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:58)
#loc354 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:69)
#loc355 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:72)
#loc356 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:87)
#loc357 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:90)
#loc358 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":199:95)
#loc359 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":200:17)
#loc360 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":201:21)
#loc361 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":201:26)
#loc362 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":197:45)
#loc363 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":197:44)
#loc364 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":204:13)
#loc365 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":207:13)
#loc366 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":204:17)
#loc367 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":205:13)
#loc368 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":206:24)
#loc369 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":206:17)
#loc370 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":212:9)
#loc371 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":234:9)
#loc372 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":213:13)
#loc373 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":213:24)
#loc374 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":214:13)
#loc375 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":214:27)
#loc376 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":215:13)
#loc377 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":215:36)
#loc378 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":216:21)
#loc379 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":216:27)
#loc380 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":216:37)
#loc381 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":216:13)
#loc382 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":216:41)
#loc383 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":217:13)
#loc384 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":220:13)
#loc385 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":217:17)
#loc386 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":217:26)
#loc387 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":218:13)
#loc388 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":219:17)
#loc389 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":219:22)
#loc390 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":223:13)
#loc391 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":229:13)
#loc392 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":223:22)
#loc393 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":223:18)
#loc394 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":223:25)
#loc395 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":223:37)
#loc396 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":223:27)
#loc397 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":224:13)
#loc398 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:17)
#loc399 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":228:17)
#loc400 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:21)
#loc401 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:36)
#loc402 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:41)
#loc403 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:48)
#loc404 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:58)
#loc405 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:69)
#loc406 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:72)
#loc407 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:87)
#loc408 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:90)
#loc409 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":225:95)
#loc410 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":226:17)
#loc411 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":227:21)
#loc412 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":227:26)
#loc413 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":223:45)
#loc414 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":223:44)
#loc415 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":230:13)
#loc416 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":233:13)
#loc417 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":230:17)
#loc418 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":231:13)
#loc419 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":232:24)
#loc420 = loc("CWE400_Resource_Exhaustion__rand_fwrite_12.c":232:17)
#loc421 = loc(fused[#loc1, #loc2])
#loc422 = loc(fused[#loc3, #loc4])
#loc423 = loc(fused[#loc6, #loc7])
#loc424 = loc(fused[#loc9, #loc10])
#loc425 = loc(fused[#loc11, #loc12])
#loc426 = loc(fused[#loc14, #loc15])
#loc427 = loc(fused[#loc17, #loc18])
#loc428 = loc(fused[#loc19, #loc20])
#loc429 = loc(fused[#loc23, #loc21])
#loc430 = loc(fused[#loc24, #loc25])
#loc431 = loc(fused[#loc26, #loc27])
#loc432 = loc(fused[#loc28, #loc29, #loc30, #loc25])
#loc433 = loc(fused[#loc32, #loc31])
#loc434 = loc(fused[#loc34, #loc33])
#loc435 = loc(fused[#loc35, #loc36])
#loc436 = loc(fused[#loc37, #loc38])
#loc437 = loc(fused[#loc39, #loc40, #loc41, #loc36])
#loc438 = loc(fused[#loc42, #loc43])
#loc439 = loc(fused[#loc44, #loc45])
#loc440 = loc(fused[#loc46, #loc47])
#loc441 = loc(fused[#loc48, #loc5])
#loc442 = loc(fused[#loc51, #loc52])
#loc443 = loc(fused[#loc53, #loc54])
#loc444 = loc(fused[#loc55, #loc56])
#loc445 = loc(fused[#loc57, #loc54])
#loc446 = loc(fused[#loc60, #loc61])
#loc447 = loc(fused[#loc63, #loc62])
#loc448 = loc(fused[#loc64, #loc65])
#loc449 = loc(fused[#loc67, #loc61])
#loc450 = loc(fused[#loc68, #loc69])
#loc451 = loc(fused[#loc70, #loc71])
#loc452 = loc(fused[#loc73, #loc74])
#loc453 = loc(fused[#loc75, #loc76])
#loc454 = loc(fused[#loc70, #loc78])
#loc455 = loc(fused[#loc79, #loc69])
#loc456 = loc(fused[#loc83, #loc82])
#loc457 = loc(fused[#loc84, #loc85])
#loc458 = loc(fused[#loc87, #loc85])
#loc459 = loc(fused[#loc90, #loc91])
#loc460 = loc(fused[#loc92, #loc93])
#loc461 = loc(fused[#loc94, #loc95])
#loc462 = loc(fused[#loc96, #loc16])
#loc463 = loc(fused[#loc97, #loc98])
#loc464 = loc(fused[#loc99, #loc100])
#loc465 = loc(fused[#loc102, #loc103])
#loc466 = loc(fused[#loc104, #loc98])
#loc467 = loc(fused[#loc108, #loc109])
#loc468 = loc(fused[#loc110, #loc111])
#loc469 = loc(fused[#loc112, #loc113])
#loc470 = loc(fused[#loc114, #loc111])
#loc471 = loc(fused[#loc117, #loc118])
#loc472 = loc(fused[#loc120, #loc119])
#loc473 = loc(fused[#loc121, #loc122])
#loc474 = loc(fused[#loc124, #loc118])
#loc475 = loc(fused[#loc125, #loc126])
#loc476 = loc(fused[#loc127, #loc128])
#loc477 = loc(fused[#loc131, #loc132])
#loc478 = loc(fused[#loc133, #loc134])
#loc479 = loc(fused[#loc127, #loc136])
#loc480 = loc(fused[#loc137, #loc126])
#loc481 = loc(fused[#loc140, #loc139])
#loc482 = loc(fused[#loc141, #loc142])
#loc483 = loc(fused[#loc144, #loc142])
#loc484 = loc(fused[#loc147, #loc148])
#loc485 = loc(fused[#loc149, #loc150])
#loc486 = loc(fused[#loc151, #loc152])
#loc487 = loc(fused[#loc153, #loc154])
#loc488 = loc(fused[#loc155, #loc156])
#loc489 = loc(fused[#loc159, #loc157])
#loc490 = loc(fused[#loc160, #loc161])
#loc491 = loc(fused[#loc162, #loc163])
#loc492 = loc(fused[#loc164, #loc165, #loc166, #loc161])
#loc493 = loc(fused[#loc168, #loc167])
#loc494 = loc(fused[#loc170, #loc169])
#loc495 = loc(fused[#loc171, #loc172])
#loc496 = loc(fused[#loc173, #loc174])
#loc497 = loc(fused[#loc175, #loc176, #loc177, #loc172])
#loc498 = loc(fused[#loc178, #loc179])
#loc499 = loc(fused[#loc180, #loc181])
#loc500 = loc(fused[#loc182, #loc183])
#loc501 = loc(fused[#loc184, #loc185])
#loc502 = loc(fused[#loc186, #loc187])
#loc503 = loc(fused[#loc188, #loc189])
#loc504 = loc(fused[#loc191, #loc192])
#loc505 = loc(fused[#loc193, #loc187])
#loc506 = loc(fused[#loc197, #loc198])
#loc507 = loc(fused[#loc199, #loc200])
#loc508 = loc(fused[#loc201, #loc202])
#loc509 = loc(fused[#loc203, #loc200])
#loc510 = loc(fused[#loc206, #loc207])
#loc511 = loc(fused[#loc209, #loc208])
#loc512 = loc(fused[#loc210, #loc211])
#loc513 = loc(fused[#loc213, #loc207])
#loc514 = loc(fused[#loc214, #loc215])
#loc515 = loc(fused[#loc216, #loc217])
#loc516 = loc(fused[#loc220, #loc221])
#loc517 = loc(fused[#loc222, #loc223])
#loc518 = loc(fused[#loc216, #loc225])
#loc519 = loc(fused[#loc226, #loc215])
#loc520 = loc(fused[#loc229, #loc228])
#loc521 = loc(fused[#loc230, #loc231])
#loc522 = loc(fused[#loc233, #loc231])
#loc523 = loc(fused[#loc236, #loc237])
#loc524 = loc(fused[#loc238, #loc239])
#loc525 = loc(fused[#loc240, #loc241])
#loc526 = loc(fused[#loc242, #loc243])
#loc527 = loc(fused[#loc244, #loc245])
#loc528 = loc(fused[#loc246, #loc247])
#loc529 = loc(fused[#loc249, #loc250])
#loc530 = loc(fused[#loc251, #loc245])
#loc531 = loc(fused[#loc255, #loc256])
#loc532 = loc(fused[#loc257, #loc258])
#loc533 = loc(fused[#loc259, #loc260])
#loc534 = loc(fused[#loc261, #loc258])
#loc535 = loc(fused[#loc264, #loc265])
#loc536 = loc(fused[#loc267, #loc266])
#loc537 = loc(fused[#loc268, #loc269])
#loc538 = loc(fused[#loc271, #loc265])
#loc539 = loc(fused[#loc272, #loc273])
#loc540 = loc(fused[#loc274, #loc275])
#loc541 = loc(fused[#loc278, #loc279])
#loc542 = loc(fused[#loc280, #loc281])
#loc543 = loc(fused[#loc274, #loc283])
#loc544 = loc(fused[#loc284, #loc273])
#loc545 = loc(fused[#loc287, #loc286])
#loc546 = loc(fused[#loc288, #loc289])
#loc547 = loc(fused[#loc291, #loc289])
#loc548 = loc(fused[#loc294, #loc295])
#loc549 = loc(fused[#loc296, #loc297])
#loc550 = loc(fused[#loc300, #loc298])
#loc551 = loc(fused[#loc301, #loc302])
#loc552 = loc(fused[#loc303, #loc304])
#loc553 = loc(fused[#loc305, #loc306, #loc307, #loc302])
#loc554 = loc(fused[#loc309, #loc308])
#loc555 = loc(fused[#loc311, #loc310])
#loc556 = loc(fused[#loc312, #loc313])
#loc557 = loc(fused[#loc314, #loc315])
#loc558 = loc(fused[#loc316, #loc317, #loc318, #loc313])
#loc559 = loc(fused[#loc319, #loc320])
#loc560 = loc(fused[#loc321, #loc322])
#loc561 = loc(fused[#loc323, #loc324])
#loc562 = loc(fused[#loc325, #loc326])
#loc563 = loc(fused[#loc330, #loc331])
#loc564 = loc(fused[#loc332, #loc333])
#loc565 = loc(fused[#loc334, #loc335])
#loc566 = loc(fused[#loc336, #loc333])
#loc567 = loc(fused[#loc339, #loc340])
#loc568 = loc(fused[#loc342, #loc341])
#loc569 = loc(fused[#loc343, #loc344])
#loc570 = loc(fused[#loc346, #loc340])
#loc571 = loc(fused[#loc347, #loc348])
#loc572 = loc(fused[#loc349, #loc350])
#loc573 = loc(fused[#loc353, #loc354])
#loc574 = loc(fused[#loc355, #loc356])
#loc575 = loc(fused[#loc349, #loc358])
#loc576 = loc(fused[#loc359, #loc348])
#loc577 = loc(fused[#loc363, #loc362])
#loc578 = loc(fused[#loc364, #loc365])
#loc579 = loc(fused[#loc367, #loc365])
#loc580 = loc(fused[#loc370, #loc371])
#loc581 = loc(fused[#loc372, #loc373])
#loc582 = loc(fused[#loc374, #loc375])
#loc583 = loc(fused[#loc376, #loc377])
#loc584 = loc(fused[#loc381, #loc382])
#loc585 = loc(fused[#loc383, #loc384])
#loc586 = loc(fused[#loc385, #loc386])
#loc587 = loc(fused[#loc387, #loc384])
#loc588 = loc(fused[#loc390, #loc391])
#loc589 = loc(fused[#loc393, #loc392])
#loc590 = loc(fused[#loc394, #loc395])
#loc591 = loc(fused[#loc397, #loc391])
#loc592 = loc(fused[#loc398, #loc399])
#loc593 = loc(fused[#loc400, #loc401])
#loc594 = loc(fused[#loc404, #loc405])
#loc595 = loc(fused[#loc406, #loc407])
#loc596 = loc(fused[#loc400, #loc409])
#loc597 = loc(fused[#loc410, #loc399])
#loc598 = loc(fused[#loc414, #loc413])
#loc599 = loc(fused[#loc415, #loc416])
#loc600 = loc(fused[#loc418, #loc416])
