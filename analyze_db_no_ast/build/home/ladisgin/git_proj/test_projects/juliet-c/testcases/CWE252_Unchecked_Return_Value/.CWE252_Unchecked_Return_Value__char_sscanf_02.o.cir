!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_sscanf_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc77)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"sscanf\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_sscanf_02_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc9)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc9)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc82)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc83)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc82)
          cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc82)
          %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc16)
          cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
          %6 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc17)
          %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
          %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc4)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc4)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
          %12 = cir.call @__isoc99_sscanf(%8, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc17)
        } loc(#loc81)
      } loc(#loc80)
    } loc(#loc79)
    cir.return loc(#loc6)
  } loc(#loc78)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_sscanf_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc85)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc21)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc86)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    cir.return loc(#loc20)
  } loc(#loc84)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc87)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc27)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"sscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc28)
  cir.func no_proto internal private  @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc33)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc33)
      cir.if %1 {
        %2 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc27)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc27)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc37)
      } else {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc92)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc93)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc92)
          cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc92)
          %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
          cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc93)
          cir.scope {
            %6 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc46)
            %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc47)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc47)
            %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc48)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc48)
            %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
            %12 = cir.call @__isoc99_sscanf(%8, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc46)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc50)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc50)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !s32i loc(#loc95)
            %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc51)
            cir.if %16 {
              %17 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc28)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc28)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc53)
            } loc(#loc96)
          } loc(#loc94)
        } loc(#loc91)
      } loc(#loc90)
    } loc(#loc89)
    cir.return loc(#loc30)
  } loc(#loc88)
  cir.func no_proto internal private  @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc58)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc58)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc101)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc102)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc101)
          cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc101)
          %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
          cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc102)
          cir.scope {
            %6 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc68)
            %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc69)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc69)
            %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc70)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc70)
            %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
            %12 = cir.call @__isoc99_sscanf(%8, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc68)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc72)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc72)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !s32i loc(#loc104)
            %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc73)
            cir.if %16 {
              %17 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc75)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc75)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc76)
            } loc(#loc105)
          } loc(#loc103)
        } loc(#loc100)
      } loc(#loc99)
    } loc(#loc98)
    cir.return loc(#loc55)
  } loc(#loc97)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_sscanf_02.c":0:0)
#loc1 = loc("/usr/include/stdio.h":468:1)
#loc2 = loc("/usr/include/stdio.h":468:12)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":36:20)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":36:25)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":26:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":39:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":28:5)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":38:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":28:8)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":29:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":30:9)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":37:9)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":33:13)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":33:36)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":34:13)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":34:27)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":36:13)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":36:35)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":88:1)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":92:1)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":90:5)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":90:11)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":91:5)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":91:11)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":51:19)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":63:27)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":46:1)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":67:1)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":48:5)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":66:5)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":48:8)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":49:5)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":52:5)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":54:5)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":51:9)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":55:9)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":65:9)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":58:13)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":58:36)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":59:13)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":59:27)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":61:13)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":64:13)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":61:17)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":61:24)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":61:29)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":61:39)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":61:48)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":61:45)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":62:13)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":63:17)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":70:1)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":86:1)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":72:5)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":85:5)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":72:8)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":73:5)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":74:9)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":84:9)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":77:13)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":77:36)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":78:13)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":78:27)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":80:13)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":83:13)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":80:17)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":80:24)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":80:29)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":80:39)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":80:48)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":80:45)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":81:13)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":82:27)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_sscanf_02.c":82:17)
#loc77 = loc(fused[#loc1, #loc2])
#loc78 = loc(fused[#loc5, #loc6])
#loc79 = loc(fused[#loc7, #loc8])
#loc80 = loc(fused[#loc10, #loc8])
#loc81 = loc(fused[#loc11, #loc12])
#loc82 = loc(fused[#loc13, #loc14])
#loc83 = loc(fused[#loc15, #loc16])
#loc84 = loc(fused[#loc19, #loc20])
#loc85 = loc(fused[#loc21, #loc22])
#loc86 = loc(fused[#loc23, #loc24])
#loc87 = loc(fused[#loc25, #loc26])
#loc88 = loc(fused[#loc29, #loc30])
#loc89 = loc(fused[#loc31, #loc32])
#loc90 = loc(fused[#loc34, #loc35, #loc36, #loc32])
#loc91 = loc(fused[#loc38, #loc39])
#loc92 = loc(fused[#loc40, #loc41])
#loc93 = loc(fused[#loc42, #loc43])
#loc94 = loc(fused[#loc44, #loc45])
#loc95 = loc(fused[#loc46, #loc50])
#loc96 = loc(fused[#loc52, #loc45])
#loc97 = loc(fused[#loc54, #loc55])
#loc98 = loc(fused[#loc56, #loc57])
#loc99 = loc(fused[#loc59, #loc57])
#loc100 = loc(fused[#loc60, #loc61])
#loc101 = loc(fused[#loc62, #loc63])
#loc102 = loc(fused[#loc64, #loc65])
#loc103 = loc(fused[#loc66, #loc67])
#loc104 = loc(fused[#loc68, #loc72])
#loc105 = loc(fused[#loc74, #loc67])
