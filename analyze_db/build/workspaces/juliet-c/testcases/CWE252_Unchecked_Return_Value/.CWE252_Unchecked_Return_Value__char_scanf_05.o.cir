!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_scanf_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc76)
  cir.func private @__isoc99_scanf(!cir.ptr<!s8i>, ...) -> !s32i loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_scanf_05_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc76)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc10)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc10)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc82)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc83)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc82)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc82)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc17)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
          %7 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc18)
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc5)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc5)
          %10 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
          %11 = cir.call @__isoc99_scanf(%9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc18)
        } loc(#loc81)
      } loc(#loc80)
    } loc(#loc79)
    cir.return loc(#loc7)
  } loc(#loc78)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_scanf_05_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc85)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc22)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc86)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc24)
    cir.return loc(#loc21)
  } loc(#loc84)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc87)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc30)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"scanf failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc31)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc87)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc36)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc36)
      cir.if %2 {
        %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc30)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc30)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc40)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc93)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc94)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc93)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc93)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
          cir.scope {
            %7 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc49)
            %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc50)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc50)
            %10 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
            %11 = cir.call @__isoc99_scanf(%9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc49)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc52)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc52)
            %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc96)
            cir.if %14 {
              %15 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc31)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc31)
              cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc54)
            } loc(#loc97)
          } loc(#loc95)
        } loc(#loc92)
      } loc(#loc91)
    } loc(#loc90)
    cir.return loc(#loc33)
  } loc(#loc89)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc76)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc59)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc102)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc103)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc102)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc102)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
          cir.scope {
            %7 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc69)
            %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc70)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc70)
            %10 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
            %11 = cir.call @__isoc99_scanf(%9, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc69)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc72)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc72)
            %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc105)
            cir.if %14 {
              %15 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc74)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc74)
              cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc75)
            } loc(#loc106)
          } loc(#loc104)
        } loc(#loc101)
      } loc(#loc100)
    } loc(#loc99)
    cir.return loc(#loc56)
  } loc(#loc98)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_scanf_05.c":0:0)
#loc1 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":25:1)
#loc2 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":25:25)
#loc3 = loc("/usr/include/stdio.h":466:1)
#loc4 = loc("/usr/include/stdio.h":466:12)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":40:19)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":30:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":43:1)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":32:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":42:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":32:8)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":33:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":34:9)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":41:9)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":37:13)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":37:36)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":38:13)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":38:27)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":40:13)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":40:29)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":92:1)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":96:1)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":94:5)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":94:11)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":95:5)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":95:11)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":26:1)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":26:26)
#loc28 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc29 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":55:19)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":67:27)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":50:1)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":71:1)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":52:5)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":70:5)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":52:8)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":53:5)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":56:5)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":58:5)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":55:9)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":59:9)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":69:9)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":62:13)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":62:36)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":63:13)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":63:27)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":65:13)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":68:13)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":65:17)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":65:23)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":65:33)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":65:42)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":66:13)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":67:17)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":74:1)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":90:1)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":76:5)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":89:5)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":76:8)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":77:5)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":78:9)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":88:9)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":81:13)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":81:36)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":82:13)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":82:27)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":84:13)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":87:13)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":84:17)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":84:23)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":84:33)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":84:42)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":85:13)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":86:27)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_scanf_05.c":86:17)
#loc76 = loc(fused[#loc1, #loc2])
#loc77 = loc(fused[#loc3, #loc4])
#loc78 = loc(fused[#loc6, #loc7])
#loc79 = loc(fused[#loc8, #loc9])
#loc80 = loc(fused[#loc11, #loc9])
#loc81 = loc(fused[#loc12, #loc13])
#loc82 = loc(fused[#loc14, #loc15])
#loc83 = loc(fused[#loc16, #loc17])
#loc84 = loc(fused[#loc20, #loc21])
#loc85 = loc(fused[#loc22, #loc23])
#loc86 = loc(fused[#loc24, #loc25])
#loc87 = loc(fused[#loc26, #loc27])
#loc88 = loc(fused[#loc28, #loc29])
#loc89 = loc(fused[#loc32, #loc33])
#loc90 = loc(fused[#loc34, #loc35])
#loc91 = loc(fused[#loc37, #loc38, #loc39, #loc35])
#loc92 = loc(fused[#loc41, #loc42])
#loc93 = loc(fused[#loc43, #loc44])
#loc94 = loc(fused[#loc45, #loc46])
#loc95 = loc(fused[#loc47, #loc48])
#loc96 = loc(fused[#loc49, #loc52])
#loc97 = loc(fused[#loc53, #loc48])
#loc98 = loc(fused[#loc55, #loc56])
#loc99 = loc(fused[#loc57, #loc58])
#loc100 = loc(fused[#loc60, #loc58])
#loc101 = loc(fused[#loc61, #loc62])
#loc102 = loc(fused[#loc63, #loc64])
#loc103 = loc(fused[#loc65, #loc66])
#loc104 = loc(fused[#loc67, #loc68])
#loc105 = loc(fused[#loc69, #loc72])
#loc106 = loc(fused[#loc73, #loc68])
