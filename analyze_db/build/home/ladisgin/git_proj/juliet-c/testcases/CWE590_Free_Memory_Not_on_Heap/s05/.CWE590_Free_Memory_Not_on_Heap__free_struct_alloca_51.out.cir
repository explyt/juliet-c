!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":94:10)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":94:14)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":94:20)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":94:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc152 = loc(fused[#loc57, #loc58])
#loc153 = loc(fused[#loc59, #loc60])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51b_badSink(!cir.ptr<!ty__twoIntsStruct>) loc(#loc130)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc7)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc133)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc135)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc12)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc12)
      %6 = cir.const #cir.int<8> : !u64i loc(#loc12)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc12)
      %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc12)
      cir.store %10, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc135)
      cir.scope {
        %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc137)
        cir.scope {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc19)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc19)
          cir.store %14, %12 : !u64i, !cir.ptr<!u64i> loc(#loc139)
          cir.for : cond {
            %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc21)
            %16 = cir.const #cir.int<100> : !s32i loc(#loc22)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc22)
            %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc140)
            cir.condition(%18) loc(#loc23)
          } body {
            cir.scope {
              %15 = cir.const #cir.int<1> : !s32i loc(#loc25)
              %16 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
              %17 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc27)
              %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
              %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
              cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc142)
              %20 = cir.const #cir.int<1> : !s32i loc(#loc30)
              %21 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
              %22 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc32)
              %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
              %24 = cir.get_member %23[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
              cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc143)
            } loc(#loc141)
            cir.yield loc(#loc18)
          } step {
            %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc35)
            %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc36)
            cir.store %16, %12 : !u64i, !cir.ptr<!u64i> loc(#loc144)
            cir.yield loc(#loc138)
          } loc(#loc138)
        } loc(#loc138)
      } loc(#loc136)
      %11 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
      cir.store %11, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc145)
    } loc(#loc134)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51b_badSink(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc40)
    cir.return loc(#loc4)
  } loc(#loc131)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc147)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    cir.return loc(#loc42)
  } loc(#loc146)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc148)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc149)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc54)
  cir.func @main(%arg0: !s32i loc(fused[#loc57, #loc58]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc59, #loc60])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc152)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc153)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc56)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc61)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc61)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc62)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc63)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc63)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc64)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc51)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51_good : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51_good() : () -> () loc(#loc66)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc52)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc53)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc155)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51_bad() : () -> () loc(#loc70)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc54)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc73)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.return %17 : !s32i loc(#loc156)
  } loc(#loc151)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc77)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc158)
  cir.func private @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51b_goodG2BSink(!cir.ptr<!ty__twoIntsStruct>) loc(#loc159)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc162)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc164)
      %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc92)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc93)
      %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc93)
      %7 = cir.const #cir.int<8> : !u64i loc(#loc165)
      %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc166)
      %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc92)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc167)
      cir.store %10, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc164)
      cir.scope {
        %12 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc99)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc99)
        %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc169)
        cir.if %15 {
          %16 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc77)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc77)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc101)
          %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc102)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc103)
          cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr1) loc(#loc102)
        } loc(#loc170)
      } loc(#loc168)
      cir.scope {
        %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc172)
        cir.scope {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc110)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc110)
          cir.store %14, %12 : !u64i, !cir.ptr<!u64i> loc(#loc174)
          cir.for : cond {
            %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc112)
            %16 = cir.const #cir.int<100> : !s32i loc(#loc113)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc113)
            %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc175)
            cir.condition(%18) loc(#loc114)
          } body {
            cir.scope {
              %15 = cir.const #cir.int<1> : !s32i loc(#loc116)
              %16 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
              %17 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc118)
              %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
              %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
              cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc177)
              %20 = cir.const #cir.int<1> : !s32i loc(#loc120)
              %21 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
              %22 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc122)
              %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc123)
              %24 = cir.get_member %23[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
              cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc178)
            } loc(#loc176)
            cir.yield loc(#loc109)
          } step {
            %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc124)
            %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc125)
            cir.store %16, %12 : !u64i, !cir.ptr<!u64i> loc(#loc179)
            cir.yield loc(#loc173)
          } loc(#loc173)
        } loc(#loc173)
      } loc(#loc171)
      %11 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc126)
      cir.store %11, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc180)
    } loc(#loc163)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc128)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51b_goodG2BSink(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc129)
    cir.return loc(#loc83)
  } loc(#loc160)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":24:1)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":24:89)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":26:1)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":44:1)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":28:5)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":28:21)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":29:12)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":29:5)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":30:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":42:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":32:9)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":32:55)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":33:9)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":40:9)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":34:13)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":34:20)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":35:13)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":39:13)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":35:22)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":35:18)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":35:25)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":35:29)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":35:27)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":36:13)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":37:40)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":37:17)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":37:28)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":37:29)
#loc29 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":38:40)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":38:17)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":38:28)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":38:29)
#loc34 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":35:35)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":35:34)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":41:16)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":41:9)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":43:68)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":43:5)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":79:1)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":82:1)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":81:5)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":81:13)
#loc45 = loc("/usr/include/stdlib.h":575:1)
#loc46 = loc("/usr/include/stdlib.h":575:41)
#loc47 = loc("/usr/include/time.h":76:1)
#loc48 = loc("/usr/include/time.h":76:38)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":99:15)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":101:15)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":104:15)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":106:15)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":94:1)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":109:1)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":95:1)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":97:27)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":97:22)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":97:5)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":99:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":100:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":100:64)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":101:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":104:5)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":105:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":105:63)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":106:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":108:12)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":108:5)
#loc75 = loc("/usr/include/stdlib.h":672:1)
#loc76 = loc("/usr/include/stdlib.h":672:45)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":63:23)
#loc78 = loc("/usr/include/stdlib.h":756:1)
#loc79 = loc("/usr/include/stdlib.h":756:70)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":51:1)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":51:93)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":54:1)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":77:1)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":56:5)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":56:21)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":57:12)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":57:5)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":58:5)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":75:5)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":60:9)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":60:87)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":60:55)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":60:62)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":60:66)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":60:86)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":61:9)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":65:9)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":61:13)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":61:27)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":62:9)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":63:13)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":64:13)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":64:18)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":66:9)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":73:9)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":67:13)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":67:20)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":68:13)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":72:13)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":68:22)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":68:18)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":68:25)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":68:29)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":68:27)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":69:13)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":70:40)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":70:17)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":70:28)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":70:29)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":71:40)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":71:17)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":71:28)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":71:29)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":68:35)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":68:34)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":74:16)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":74:9)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":76:72)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_51a.c":76:5)
#loc130 = loc(fused[#loc1, #loc2])
#loc131 = loc(fused[#loc3, #loc4])
#loc132 = loc(fused[#loc5, #loc6])
#loc133 = loc(fused[#loc8, #loc7])
#loc134 = loc(fused[#loc9, #loc10])
#loc135 = loc(fused[#loc11, #loc12])
#loc136 = loc(fused[#loc13, #loc14])
#loc137 = loc(fused[#loc15, #loc16])
#loc138 = loc(fused[#loc17, #loc18])
#loc139 = loc(fused[#loc20, #loc19])
#loc140 = loc(fused[#loc21, #loc22])
#loc141 = loc(fused[#loc24, #loc18])
#loc142 = loc(fused[#loc26, #loc25])
#loc143 = loc(fused[#loc31, #loc30])
#loc144 = loc(fused[#loc36, #loc35])
#loc145 = loc(fused[#loc38, #loc37])
#loc146 = loc(fused[#loc41, #loc42])
#loc147 = loc(fused[#loc43, #loc44])
#loc148 = loc(fused[#loc45, #loc46])
#loc149 = loc(fused[#loc47, #loc48])
#loc150 = loc(fused[#loc49, #loc50])
#loc151 = loc(fused[#loc55, #loc56])
#loc154 = loc(fused[#loc66, #loc67])
#loc155 = loc(fused[#loc70, #loc71])
#loc156 = loc(fused[#loc74, #loc73])
#loc157 = loc(fused[#loc75, #loc76])
#loc158 = loc(fused[#loc78, #loc79])
#loc159 = loc(fused[#loc80, #loc81])
#loc160 = loc(fused[#loc82, #loc83])
#loc161 = loc(fused[#loc84, #loc85])
#loc162 = loc(fused[#loc87, #loc86])
#loc163 = loc(fused[#loc88, #loc89])
#loc164 = loc(fused[#loc90, #loc91])
#loc165 = loc(fused[#loc94, #loc95])
#loc166 = loc(fused[#loc93, #loc95])
#loc167 = loc(fused[#loc92, #loc91])
#loc168 = loc(fused[#loc96, #loc97])
#loc169 = loc(fused[#loc98, #loc99])
#loc170 = loc(fused[#loc100, #loc97])
#loc171 = loc(fused[#loc104, #loc105])
#loc172 = loc(fused[#loc106, #loc107])
#loc173 = loc(fused[#loc108, #loc109])
#loc174 = loc(fused[#loc111, #loc110])
#loc175 = loc(fused[#loc112, #loc113])
#loc176 = loc(fused[#loc115, #loc109])
#loc177 = loc(fused[#loc117, #loc116])
#loc178 = loc(fused[#loc121, #loc120])
#loc179 = loc(fused[#loc125, #loc124])
#loc180 = loc(fused[#loc127, #loc126])
