!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc133)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc134)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc135)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc136)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc138)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc139)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc141)
    cir.br ^bb1 loc(#loc142)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc21)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc22)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc22)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc143)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc144)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc145)
    cir.store %10, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc146)
    cir.br ^bb2 loc(#loc147)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc148)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc149)
  ^bb3:  // pred: ^bb2
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc34)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
    cir.br ^bb4 loc(#loc28)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc28)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc150)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc151)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc152)
  ^bb8:  // pred: ^bb7
    %18 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc41)
    cir.store %19, %1 : !u64i, !cir.ptr<!u64i> loc(#loc153)
    cir.br ^bb9 loc(#loc152)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc44)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc44)
    %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc154)
    cir.brcond %23 ^bb10, ^bb14 loc(#loc45)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc155)
  ^bb11:  // pred: ^bb10
    %24 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
    %27 = cir.ptr_stride(%26 : !cir.ptr<!ty__twoIntsStruct>, %25 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
    %28 = cir.get_member %27[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc50)
    cir.store %24, %28 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!ty__twoIntsStruct>, %30 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    %33 = cir.get_member %32[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc54)
    cir.store %29, %33 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    cir.br ^bb12 loc(#loc40)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc40)
  ^bb13:  // pred: ^bb12
    %34 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc56)
    cir.store %35, %1 : !u64i, !cir.ptr<!u64i> loc(#loc158)
    cir.br ^bb9 loc(#loc152)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc40)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc38)
  ^bb16:  // pred: ^bb15
    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc57)
    %38 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc58)
    %40 = cir.const #cir.int<100> : !s32i loc(#loc59)
    %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc59)
    %42 = cir.const #cir.int<8> : !u64i loc(#loc159)
    %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc160)
    cir.libc.memmove %43 bytes from %39 to %37 : !cir.ptr<!void>, !u64i loc(#loc161)
    %44 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
    %45 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %46 = cir.ptr_stride(%44 : !cir.ptr<!ty__twoIntsStruct>, %45 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc66)
    cir.call @printStructLine(%46) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc67)
    %47 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc68)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc69)
    cir.br ^bb17 loc(#loc36)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc10)
  } loc(#loc137)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc72)
    cir.return loc(#loc71)
  } loc(#loc162)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc165)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc166)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc167)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc168)
    cir.br ^bb1 loc(#loc169)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc86)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc87)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc170)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc171)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc86)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc172)
    cir.store %10, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc173)
    cir.br ^bb2 loc(#loc174)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc95)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc95)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc175)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc176)
  ^bb3:  // pred: ^bb2
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc97)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc99)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc97)
    cir.br ^bb4 loc(#loc93)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc93)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc177)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc178)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc179)
  ^bb8:  // pred: ^bb7
    %18 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc106)
    cir.store %19, %1 : !u64i, !cir.ptr<!u64i> loc(#loc180)
    cir.br ^bb9 loc(#loc179)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc108)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc109)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc109)
    %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc181)
    cir.brcond %23 ^bb10, ^bb14 loc(#loc110)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc182)
  ^bb11:  // pred: ^bb10
    %24 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc113)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
    %27 = cir.ptr_stride(%26 : !cir.ptr<!ty__twoIntsStruct>, %25 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
    %28 = cir.get_member %27[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc50)
    cir.store %24, %28 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc116)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!ty__twoIntsStruct>, %30 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
    %33 = cir.get_member %32[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc54)
    cir.store %29, %33 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    cir.br ^bb12 loc(#loc105)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc105)
  ^bb13:  // pred: ^bb12
    %34 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc118)
    %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc119)
    cir.store %35, %1 : !u64i, !cir.ptr<!u64i> loc(#loc185)
    cir.br ^bb9 loc(#loc179)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc105)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc103)
  ^bb16:  // pred: ^bb15
    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc120)
    %38 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc121)
    %40 = cir.const #cir.int<100> : !s32i loc(#loc122)
    %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc122)
    %42 = cir.const #cir.int<8> : !u64i loc(#loc186)
    %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc187)
    cir.libc.memmove %43 bytes from %39 to %37 : !cir.ptr<!void>, !u64i loc(#loc188)
    %44 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc127)
    %45 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %46 = cir.ptr_stride(%44 : !cir.ptr<!ty__twoIntsStruct>, %45 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc129)
    cir.call @printStructLine(%46) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc130)
    %47 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc131)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc132)
    cir.br ^bb17 loc(#loc101)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc75)
  } loc(#loc164)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":21:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":46:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":31:9)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":31:33)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":33:13)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":33:20)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":23:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":23:21)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":24:12)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":24:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":25:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":25:10)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":28:29)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":28:36)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":28:39)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":28:59)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":28:60)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":28:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":29:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":29:33)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":29:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":29:17)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":29:23)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":29:24)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":29:30)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":29:29)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":30:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":45:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":32:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":40:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":35:13)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":39:13)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":35:22)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":35:18)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":35:25)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":35:29)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":35:27)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":36:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":37:36)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":37:24)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":37:17)
#loc50 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":38:36)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":38:24)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":38:17)
#loc54 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":35:35)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":35:34)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":42:17)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":42:23)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":42:31)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":42:35)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":42:55)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":42:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":42:56)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":43:26)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":43:31)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":43:32)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":43:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":44:14)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":44:9)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":80:1)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":83:1)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":82:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":82:13)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":53:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":78:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":63:9)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":63:33)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":65:13)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":65:20)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":55:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":55:21)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":56:12)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":56:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":57:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":57:10)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":60:29)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":60:36)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":60:40)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":60:60)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":60:61)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":60:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":61:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":61:33)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":61:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":61:17)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":61:23)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":61:24)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":61:30)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":61:29)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":62:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":77:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":64:9)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":72:9)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":67:13)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":71:13)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":67:22)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":67:18)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":67:25)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":67:29)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":67:27)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":68:13)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":69:36)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":69:24)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":69:17)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":70:36)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":70:24)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":70:17)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":67:35)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":67:34)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":74:17)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":74:23)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":74:31)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":74:35)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":74:55)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":74:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":74:56)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":75:26)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":75:31)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":75:32)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":75:9)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":76:14)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_18.c":76:9)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc3, #loc4])
#loc135 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc7, #loc8])
#loc137 = loc(fused[#loc9, #loc10])
#loc138 = loc(fused[#loc11, #loc12])
#loc139 = loc(fused[#loc13, #loc14])
#loc140 = loc(fused[#loc15, #loc16])
#loc141 = loc(fused[#loc18, #loc17])
#loc142 = loc(fused[#loc19, #loc20])
#loc143 = loc(fused[#loc23, #loc24])
#loc144 = loc(fused[#loc22, #loc24])
#loc145 = loc(fused[#loc21, #loc25])
#loc146 = loc(fused[#loc26, #loc25])
#loc147 = loc(fused[#loc27, #loc28])
#loc148 = loc(fused[#loc29, #loc30])
#loc149 = loc(fused[#loc31, #loc28])
#loc150 = loc(fused[#loc35, #loc36])
#loc151 = loc(fused[#loc37, #loc38])
#loc152 = loc(fused[#loc39, #loc40])
#loc153 = loc(fused[#loc42, #loc41])
#loc154 = loc(fused[#loc43, #loc44])
#loc155 = loc(fused[#loc46, #loc40])
#loc156 = loc(fused[#loc49, #loc47])
#loc157 = loc(fused[#loc53, #loc51])
#loc158 = loc(fused[#loc56, #loc55])
#loc159 = loc(fused[#loc60, #loc61])
#loc160 = loc(fused[#loc59, #loc61])
#loc161 = loc(fused[#loc62, #loc63])
#loc162 = loc(fused[#loc70, #loc71])
#loc163 = loc(fused[#loc72, #loc73])
#loc164 = loc(fused[#loc74, #loc75])
#loc165 = loc(fused[#loc76, #loc77])
#loc166 = loc(fused[#loc78, #loc79])
#loc167 = loc(fused[#loc80, #loc81])
#loc168 = loc(fused[#loc83, #loc82])
#loc169 = loc(fused[#loc84, #loc85])
#loc170 = loc(fused[#loc88, #loc89])
#loc171 = loc(fused[#loc87, #loc89])
#loc172 = loc(fused[#loc86, #loc90])
#loc173 = loc(fused[#loc91, #loc90])
#loc174 = loc(fused[#loc92, #loc93])
#loc175 = loc(fused[#loc94, #loc95])
#loc176 = loc(fused[#loc96, #loc93])
#loc177 = loc(fused[#loc100, #loc101])
#loc178 = loc(fused[#loc102, #loc103])
#loc179 = loc(fused[#loc104, #loc105])
#loc180 = loc(fused[#loc107, #loc106])
#loc181 = loc(fused[#loc108, #loc109])
#loc182 = loc(fused[#loc111, #loc105])
#loc183 = loc(fused[#loc114, #loc112])
#loc184 = loc(fused[#loc117, #loc115])
#loc185 = loc(fused[#loc119, #loc118])
#loc186 = loc(fused[#loc123, #loc124])
#loc187 = loc(fused[#loc122, #loc124])
#loc188 = loc(fused[#loc125, #loc126])
