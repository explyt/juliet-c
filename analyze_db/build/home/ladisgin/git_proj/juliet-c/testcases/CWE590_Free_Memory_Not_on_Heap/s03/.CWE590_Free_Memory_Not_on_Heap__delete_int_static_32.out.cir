!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":96:10)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":96:14)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":96:20)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":96:32)
#loc147 = loc(fused[#loc95, #loc96])
#loc148 = loc(fused[#loc97, #loc98])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @_ZZN52CWE590_Free_Memory_Not_on_Heap__delete_int_static_323badEvE10dataBuffer = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc1)
  cir.func private @printIntLine(!s32i) loc(#loc111)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc112)
  cir.func @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_static_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc115)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc116)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc117)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc118)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc117)
    cir.store %2, %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc118)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc18)
    cir.store %5, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc119)
    cir.br ^bb1 loc(#loc120)
  ^bb1:  // pred: ^bb0
    %6 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc9)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc22)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc114)
    cir.br ^bb2 loc(#loc121)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @_ZZN52CWE590_Free_Memory_Not_on_Heap__delete_int_static_323badEvE10dataBuffer : !cir.ptr<!s32i> loc(#loc1)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc25)
    cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc123)
    cir.br ^bb3 loc(#loc24)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
    %11 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc30)
    cir.store %10, %11 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc124)
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc125)
  ^bb5:  // pred: ^bb4
    %12 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc11)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
    cir.store %13, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc115)
    %14 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc35)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc37)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc38)
    cir.call @_ZdlPv(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc39)
    cir.br ^bb6 loc(#loc33)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc7)
  } loc(#loc113)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc126)
  cir.func internal private @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_static_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc129)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc130)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc132)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc133)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc132)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc133)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc56)
    cir.store %6, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc134)
    cir.br ^bb1 loc(#loc135)
  ^bb1:  // pred: ^bb0
    %7 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc45)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc60)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc128)
    cir.br ^bb2 loc(#loc136)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<4> : !u64i loc(#loc137)
    %10 = cir.call @_Znwm(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc129)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc137)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc129)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc64)
    %13 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc67)
    cir.store %14, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc139)
    cir.br ^bb3 loc(#loc62)
  ^bb3:  // pred: ^bb2
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
    %16 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc70)
    cir.store %15, %16 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc140)
    cir.br ^bb4 loc(#loc59)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc141)
  ^bb5:  // pred: ^bb4
    %17 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc49)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc74)
    cir.store %18, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc130)
    %19 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc77)
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc78)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc78)
    cir.call @_ZdlPv(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc79)
    cir.br ^bb6 loc(#loc73)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc43)
  } loc(#loc127)
  cir.func @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_static_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_static_32L7goodG2BEv() : () -> () loc(#loc82)
    cir.return loc(#loc81)
  } loc(#loc142)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc143)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc144)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc92)
  cir.func @main(%arg0: !s32i loc(fused[#loc95, #loc96]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc97, #loc98])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc148)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc94)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc99)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc100)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc101)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc101)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc102)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc89)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    cir.call @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_static_324goodEv() : () -> () loc(#loc104)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc90)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc91)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    cir.call @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_static_323badEv() : () -> () loc(#loc107)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc92)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc109)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    cir.return %15 : !s32i loc(#loc149)
  } loc(#loc146)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":36:24)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":26:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":48:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":33:9)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":33:23)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":43:9)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":43:23)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":28:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":28:11)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":29:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":29:24)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":30:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":30:24)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":31:12)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":31:5)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":32:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":41:5)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":33:22)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":34:9)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":39:9)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":37:26)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":37:13)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":38:13)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":38:21)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":40:21)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":40:10)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":40:9)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":42:5)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":47:5)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":43:22)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":44:23)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":44:22)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":44:9)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":46:16)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":26:6)
#loc40 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc41 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":55:1)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":77:1)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":62:9)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":62:23)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":65:13)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":65:36)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":72:9)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":72:23)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":57:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":57:11)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":58:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":58:24)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":59:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":59:24)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":60:12)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":60:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":61:5)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":70:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":62:22)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":63:9)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":68:9)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":65:32)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":66:27)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":66:14)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":66:13)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":67:20)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":67:13)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":69:21)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":69:10)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":69:9)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":71:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":76:5)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":72:22)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":73:23)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":73:22)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":73:9)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":75:16)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":55:13)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":79:1)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":82:1)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":81:5)
#loc83 = loc("/usr/include/stdlib.h":575:1)
#loc84 = loc("/usr/include/stdlib.h":575:41)
#loc85 = loc("/usr/include/time.h":76:1)
#loc86 = loc("/usr/include/time.h":76:38)
#loc87 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc88 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":101:15)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":103:15)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":106:15)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":108:15)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":96:1)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":111:1)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":97:1)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":99:27)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":99:22)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":99:5)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":101:5)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":102:5)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":103:5)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":106:5)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":107:5)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":108:5)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":110:12)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_static_32.cpp":110:5)
#loc111 = loc(fused[#loc2, #loc3])
#loc112 = loc(fused[#loc4, #loc5])
#loc113 = loc(fused[#loc6, #loc7])
#loc114 = loc(fused[#loc8, #loc9])
#loc115 = loc(fused[#loc10, #loc11])
#loc116 = loc(fused[#loc12, #loc13])
#loc117 = loc(fused[#loc14, #loc15])
#loc118 = loc(fused[#loc16, #loc17])
#loc119 = loc(fused[#loc19, #loc18])
#loc120 = loc(fused[#loc20, #loc21])
#loc121 = loc(fused[#loc23, #loc24])
#loc122 = loc(fused[#loc26, #loc25])
#loc123 = loc(fused[#loc27, #loc28])
#loc124 = loc(fused[#loc31, #loc29])
#loc125 = loc(fused[#loc32, #loc33])
#loc126 = loc(fused[#loc40, #loc41])
#loc127 = loc(fused[#loc42, #loc43])
#loc128 = loc(fused[#loc44, #loc45])
#loc129 = loc(fused[#loc46, #loc47])
#loc130 = loc(fused[#loc48, #loc49])
#loc131 = loc(fused[#loc50, #loc51])
#loc132 = loc(fused[#loc52, #loc53])
#loc133 = loc(fused[#loc54, #loc55])
#loc134 = loc(fused[#loc57, #loc56])
#loc135 = loc(fused[#loc58, #loc59])
#loc136 = loc(fused[#loc61, #loc62])
#loc137 = loc(fused[#loc63, #loc47])
#loc138 = loc(fused[#loc66, #loc64])
#loc139 = loc(fused[#loc68, #loc67])
#loc140 = loc(fused[#loc71, #loc69])
#loc141 = loc(fused[#loc72, #loc73])
#loc142 = loc(fused[#loc80, #loc81])
#loc143 = loc(fused[#loc83, #loc84])
#loc144 = loc(fused[#loc85, #loc86])
#loc145 = loc(fused[#loc87, #loc88])
#loc146 = loc(fused[#loc93, #loc94])
#loc149 = loc(fused[#loc110, #loc109])
