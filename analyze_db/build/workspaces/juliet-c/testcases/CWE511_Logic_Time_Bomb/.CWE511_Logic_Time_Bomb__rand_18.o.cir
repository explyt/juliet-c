!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE511_Logic_Time_Bomb/CWE511_Logic_Time_Bomb__rand_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc45)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc46)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc47)
  cir.func private @unlink(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"important_file.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE511_Logic_Time_Bomb__rand_18_bad() extra(#fn_attr1) {
    cir.goto "sink" loc(#loc50)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc14)
    %0 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc15)
    %1 = cir.call @time(%0) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc16)
    %2 = cir.cast(integral, %1 : !s64i), !u32i loc(#loc16)
    cir.call @srand(%2) : (!u32i) -> () extra(#fn_attr) loc(#loc17)
    cir.scope {
      %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
      %4 = cir.const #cir.int<20000> : !s32i loc(#loc21)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc52)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc9)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc9)
        %8 = cir.call @unlink(%7) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc23)
      } loc(#loc53)
    } loc(#loc51)
    cir.return loc(#loc11)
  } loc(#loc49)
  cir.func no_proto @CWE511_Logic_Time_Bomb__rand_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc55)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc26)
    cir.return loc(#loc25)
  } loc(#loc54)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Happy New Year!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc30)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.goto "sink" loc(#loc58)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc35)
    %0 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc36)
    %1 = cir.call @time(%0) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc37)
    %2 = cir.cast(integral, %1 : !s64i), !u32i loc(#loc37)
    cir.call @srand(%2) : (!u32i) -> () extra(#fn_attr) loc(#loc38)
    cir.scope {
      %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc41)
      %4 = cir.const #cir.int<20000> : !s32i loc(#loc42)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc60)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc30)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc30)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc44)
      } loc(#loc61)
    } loc(#loc59)
    cir.return loc(#loc32)
  } loc(#loc57)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE511_Logic_Time_Bomb/CWE511_Logic_Time_Bomb__rand_18.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":575:1)
#loc2 = loc("/usr/include/stdlib.h":575:41)
#loc3 = loc("/usr/include/time.h":76:1)
#loc4 = loc("/usr/include/time.h":76:38)
#loc5 = loc("/usr/include/stdlib.h":573:1)
#loc6 = loc("/usr/include/stdlib.h":573:24)
#loc7 = loc("/usr/include/unistd.h":858:1)
#loc8 = loc("/usr/include/unistd.h":858:48)
#loc9 = loc("CWE511_Logic_Time_Bomb__rand_18.c":37:16)
#loc10 = loc("CWE511_Logic_Time_Bomb__rand_18.c":29:1)
#loc11 = loc("CWE511_Logic_Time_Bomb__rand_18.c":39:1)
#loc12 = loc("CWE511_Logic_Time_Bomb__rand_18.c":31:5)
#loc13 = loc("CWE511_Logic_Time_Bomb__rand_18.c":31:10)
#loc14 = loc("CWE511_Logic_Time_Bomb__rand_18.c":32:1)
#loc15 = loc("CWE511_Logic_Time_Bomb__rand_18.c":33:26)
#loc16 = loc("CWE511_Logic_Time_Bomb__rand_18.c":33:21)
#loc17 = loc("CWE511_Logic_Time_Bomb__rand_18.c":33:5)
#loc18 = loc("CWE511_Logic_Time_Bomb__rand_18.c":35:5)
#loc19 = loc("CWE511_Logic_Time_Bomb__rand_18.c":38:5)
#loc20 = loc("CWE511_Logic_Time_Bomb__rand_18.c":35:9)
#loc21 = loc("CWE511_Logic_Time_Bomb__rand_18.c":35:19)
#loc22 = loc("CWE511_Logic_Time_Bomb__rand_18.c":36:5)
#loc23 = loc("CWE511_Logic_Time_Bomb__rand_18.c":37:9)
#loc24 = loc("CWE511_Logic_Time_Bomb__rand_18.c":58:1)
#loc25 = loc("CWE511_Logic_Time_Bomb__rand_18.c":61:1)
#loc26 = loc("CWE511_Logic_Time_Bomb__rand_18.c":60:5)
#loc27 = loc("CWE511_Logic_Time_Bomb__rand_18.c":60:11)
#loc28 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc29 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc30 = loc("CWE511_Logic_Time_Bomb__rand_18.c":54:19)
#loc31 = loc("CWE511_Logic_Time_Bomb__rand_18.c":46:1)
#loc32 = loc("CWE511_Logic_Time_Bomb__rand_18.c":56:1)
#loc33 = loc("CWE511_Logic_Time_Bomb__rand_18.c":48:5)
#loc34 = loc("CWE511_Logic_Time_Bomb__rand_18.c":48:10)
#loc35 = loc("CWE511_Logic_Time_Bomb__rand_18.c":49:1)
#loc36 = loc("CWE511_Logic_Time_Bomb__rand_18.c":50:26)
#loc37 = loc("CWE511_Logic_Time_Bomb__rand_18.c":50:21)
#loc38 = loc("CWE511_Logic_Time_Bomb__rand_18.c":50:5)
#loc39 = loc("CWE511_Logic_Time_Bomb__rand_18.c":52:5)
#loc40 = loc("CWE511_Logic_Time_Bomb__rand_18.c":55:5)
#loc41 = loc("CWE511_Logic_Time_Bomb__rand_18.c":52:9)
#loc42 = loc("CWE511_Logic_Time_Bomb__rand_18.c":52:19)
#loc43 = loc("CWE511_Logic_Time_Bomb__rand_18.c":53:5)
#loc44 = loc("CWE511_Logic_Time_Bomb__rand_18.c":54:9)
#loc45 = loc(fused[#loc1, #loc2])
#loc46 = loc(fused[#loc3, #loc4])
#loc47 = loc(fused[#loc5, #loc6])
#loc48 = loc(fused[#loc7, #loc8])
#loc49 = loc(fused[#loc10, #loc11])
#loc50 = loc(fused[#loc12, #loc13])
#loc51 = loc(fused[#loc18, #loc19])
#loc52 = loc(fused[#loc20, #loc21])
#loc53 = loc(fused[#loc22, #loc19])
#loc54 = loc(fused[#loc24, #loc25])
#loc55 = loc(fused[#loc26, #loc27])
#loc56 = loc(fused[#loc28, #loc29])
#loc57 = loc(fused[#loc31, #loc32])
#loc58 = loc(fused[#loc33, #loc34])
#loc59 = loc(fused[#loc39, #loc40])
#loc60 = loc(fused[#loc41, #loc42])
#loc61 = loc(fused[#loc43, #loc40])
