!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":100:10)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":100:14)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":100:20)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":100:32)
#loc150 = loc(fused[#loc55, #loc56])
#loc151 = loc(fused[#loc57, #loc58])
!ty__CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_structType = !cir.struct<struct "_CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_structType" {!cir.ptr<!s32i>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67b_badSink(!ty__CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_structType) loc(#loc127)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.alloca !ty__CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_structType, !cir.ptr<!ty__CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_structType>, ["myStruct"] {alignment = 8 : i64} loc(#loc130)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc9)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc131)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc133)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc14)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc14)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc14)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc14)
      %11 = cir.alloca !u8i, !cir.ptr<!u8i>, %10 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc14)
      cir.store %13, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc133)
      cir.scope {
        %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc135)
        cir.scope {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc21)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc21)
          cir.store %17, %15 : !u64i, !cir.ptr<!u64i> loc(#loc137)
          cir.for : cond {
            %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc23)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc24)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc24)
            %21 = cir.cmp(lt, %18, %20) : !u64i, !cir.bool loc(#loc138)
            cir.condition(%21) loc(#loc25)
          } body {
            cir.scope {
              %18 = cir.const #cir.int<5> : !s32i loc(#loc27)
              %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
              %20 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc29)
              %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !u64i), !cir.ptr<!s32i> loc(#loc30)
              cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc140)
            } loc(#loc139)
            cir.yield loc(#loc20)
          } step {
            %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc31)
            %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc32)
            cir.store %19, %15 : !u64i, !cir.ptr<!u64i> loc(#loc141)
            cir.yield loc(#loc136)
          } loc(#loc136)
        } loc(#loc136)
      } loc(#loc134)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
      cir.store %14, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc142)
    } loc(#loc132)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc35)
    %4 = cir.get_member %1[0] {name = "structFirst"} : !cir.ptr<!ty__CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_structType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc36)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc143)
    %5 = cir.load %1 : !cir.ptr<!ty__CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_structType>, !ty__CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_structType loc(#loc38)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67b_badSink(%5) : (!ty__CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_structType) -> () loc(#loc38)
    cir.return loc(#loc4)
  } loc(#loc128)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc40)
  } loc(#loc144)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc146)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc147)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc52)
  cir.func @main(%arg0: !s32i loc(fused[#loc55, #loc56]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc57, #loc58])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc150)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc151)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc54)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc59)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc59)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc60)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc61)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc61)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc62)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc49)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_good : !cir.ptr<!cir.func<!void ()>> loc(#loc152)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_good() : () -> () loc(#loc64)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc50)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc51)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc153)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_bad() : () -> () loc(#loc68)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc52)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    cir.return %17 : !s32i loc(#loc154)
  } loc(#loc149)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc75)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc156)
  cir.func private @CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67b_goodG2BSink(!ty__CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_structType) loc(#loc157)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc159)
    %1 = cir.alloca !ty__CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_structType, !cir.ptr<!ty__CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_structType>, ["myStruct"] {alignment = 8 : i64} loc(#loc160)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc86)
    cir.store %2, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc161)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc163)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc92)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc93)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc93)
      %10 = cir.const #cir.int<4> : !u64i loc(#loc164)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc165)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc92)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc166)
      cir.store %13, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc163)
      cir.scope {
        %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc99)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc99)
        %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s32i>, !cir.bool loc(#loc168)
        cir.if %18 {
          %19 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc75)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc75)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc101)
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc102)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc103)
          cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr1) loc(#loc102)
        } loc(#loc169)
      } loc(#loc167)
      cir.scope {
        %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc171)
        cir.scope {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc110)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc110)
          cir.store %17, %15 : !u64i, !cir.ptr<!u64i> loc(#loc173)
          cir.for : cond {
            %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc112)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc113)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc113)
            %21 = cir.cmp(lt, %18, %20) : !u64i, !cir.bool loc(#loc174)
            cir.condition(%21) loc(#loc114)
          } body {
            cir.scope {
              %18 = cir.const #cir.int<5> : !s32i loc(#loc116)
              %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
              %20 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc118)
              %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !u64i), !cir.ptr<!s32i> loc(#loc119)
              cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc176)
            } loc(#loc175)
            cir.yield loc(#loc109)
          } step {
            %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc120)
            %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc121)
            cir.store %19, %15 : !u64i, !cir.ptr<!u64i> loc(#loc177)
            cir.yield loc(#loc172)
          } loc(#loc172)
        } loc(#loc172)
      } loc(#loc170)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc122)
      cir.store %14, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc178)
    } loc(#loc162)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc124)
    %4 = cir.get_member %1[0] {name = "structFirst"} : !cir.ptr<!ty__CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_structType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc36)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc179)
    %5 = cir.load %1 : !cir.ptr<!ty__CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_structType>, !ty__CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_structType loc(#loc126)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67b_goodG2BSink(%5) : (!ty__CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67_structType) -> () loc(#loc126)
    cir.return loc(#loc81)
  } loc(#loc158)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":29:1)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":29:136)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":31:1)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":50:1)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":33:5)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":33:11)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":34:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":34:67)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":35:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":35:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":36:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":47:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":38:9)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":38:35)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":39:9)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":45:9)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":40:13)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":40:20)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":41:13)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":44:13)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":41:22)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":41:18)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":41:25)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":41:29)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":41:27)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":42:13)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":43:33)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":43:17)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":43:28)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":43:29)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":41:35)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":41:34)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":46:16)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":46:9)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":48:28)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":23:11)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":48:5)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":49:5)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":85:1)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":88:1)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":87:5)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":87:13)
#loc43 = loc("/usr/include/stdlib.h":575:1)
#loc44 = loc("/usr/include/stdlib.h":575:41)
#loc45 = loc("/usr/include/time.h":76:1)
#loc46 = loc("/usr/include/time.h":76:38)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":105:15)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":107:15)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":110:15)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":112:15)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":100:1)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":115:1)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":101:1)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":103:27)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":103:22)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":103:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":105:5)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":106:5)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":106:61)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":107:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":110:5)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":111:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":111:60)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":112:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":114:12)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":114:5)
#loc73 = loc("/usr/include/stdlib.h":672:1)
#loc74 = loc("/usr/include/stdlib.h":672:45)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":69:23)
#loc76 = loc("/usr/include/stdlib.h":756:1)
#loc77 = loc("/usr/include/stdlib.h":756:70)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":57:1)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":57:140)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":59:1)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":83:1)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":61:5)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":61:11)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":62:5)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":62:67)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":63:12)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":63:5)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":64:5)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":80:5)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":66:9)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":66:57)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":66:35)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":66:42)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":66:46)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":66:56)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":67:9)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":71:9)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":67:13)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":67:27)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":68:9)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":69:13)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":70:13)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":70:18)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":72:9)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":78:9)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":73:13)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":73:20)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":74:13)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":77:13)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":74:22)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":74:18)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":74:25)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":74:29)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":74:27)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":75:13)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":76:33)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":76:17)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":76:28)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":76:29)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":74:35)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":74:34)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":79:16)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":79:9)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":81:28)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":81:5)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_67a.c":82:5)
#loc127 = loc(fused[#loc1, #loc2])
#loc128 = loc(fused[#loc3, #loc4])
#loc129 = loc(fused[#loc5, #loc6])
#loc130 = loc(fused[#loc7, #loc8])
#loc131 = loc(fused[#loc10, #loc9])
#loc132 = loc(fused[#loc11, #loc12])
#loc133 = loc(fused[#loc13, #loc14])
#loc134 = loc(fused[#loc15, #loc16])
#loc135 = loc(fused[#loc17, #loc18])
#loc136 = loc(fused[#loc19, #loc20])
#loc137 = loc(fused[#loc22, #loc21])
#loc138 = loc(fused[#loc23, #loc24])
#loc139 = loc(fused[#loc26, #loc20])
#loc140 = loc(fused[#loc28, #loc27])
#loc141 = loc(fused[#loc32, #loc31])
#loc142 = loc(fused[#loc34, #loc33])
#loc143 = loc(fused[#loc37, #loc35])
#loc144 = loc(fused[#loc39, #loc40])
#loc145 = loc(fused[#loc41, #loc42])
#loc146 = loc(fused[#loc43, #loc44])
#loc147 = loc(fused[#loc45, #loc46])
#loc148 = loc(fused[#loc47, #loc48])
#loc149 = loc(fused[#loc53, #loc54])
#loc152 = loc(fused[#loc64, #loc65])
#loc153 = loc(fused[#loc68, #loc69])
#loc154 = loc(fused[#loc72, #loc71])
#loc155 = loc(fused[#loc73, #loc74])
#loc156 = loc(fused[#loc76, #loc77])
#loc157 = loc(fused[#loc78, #loc79])
#loc158 = loc(fused[#loc80, #loc81])
#loc159 = loc(fused[#loc82, #loc83])
#loc160 = loc(fused[#loc84, #loc85])
#loc161 = loc(fused[#loc87, #loc86])
#loc162 = loc(fused[#loc88, #loc89])
#loc163 = loc(fused[#loc90, #loc91])
#loc164 = loc(fused[#loc94, #loc95])
#loc165 = loc(fused[#loc93, #loc95])
#loc166 = loc(fused[#loc92, #loc91])
#loc167 = loc(fused[#loc96, #loc97])
#loc168 = loc(fused[#loc98, #loc99])
#loc169 = loc(fused[#loc100, #loc97])
#loc170 = loc(fused[#loc104, #loc105])
#loc171 = loc(fused[#loc106, #loc107])
#loc172 = loc(fused[#loc108, #loc109])
#loc173 = loc(fused[#loc111, #loc110])
#loc174 = loc(fused[#loc112, #loc113])
#loc175 = loc(fused[#loc115, #loc109])
#loc176 = loc(fused[#loc117, #loc116])
#loc177 = loc(fused[#loc121, #loc120])
#loc178 = loc(fused[#loc123, #loc122])
#loc179 = loc(fused[#loc125, #loc124])
