!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc10 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":28:25)
#loc11 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":28:32)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":185:10)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":185:14)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":185:20)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":185:32)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":115:29)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":115:36)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":85:29)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":85:36)
#true = #cir.bool<true> : !cir.bool
#loc307 = loc(fused[#loc10, #loc11])
#loc356 = loc(fused[#loc128, #loc129])
#loc357 = loc(fused[#loc130, #loc131])
#loc362 = loc(fused[#loc148, #loc149])
#loc407 = loc(fused[#loc255, #loc256])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc303)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc304)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc305)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc10, #loc11])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc307)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc9)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc309)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc17)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc17)
      cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc309)
      cir.scope {
        %8 = cir.const #cir.int<100> : !s32i loc(#loc21)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc21)
        %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc22)
        %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc311)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc23)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc23)
        %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc312)
        cir.if %14 {
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
            %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc28)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc29)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc30)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc30)
            %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc31)
            %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc315)
            %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc315)
            %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc305)
            %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
            %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc33)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
            %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc316)
            cir.if %28 {
              %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc38)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
              %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc38)
              cir.store %31, %4 : !u64i, !cir.ptr<!u64i> loc(#loc318)
              cir.scope {
                %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc44)
                %33 = cir.const #cir.int<0> : !s32i loc(#loc45)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc45)
                %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc320)
                %36 = cir.ternary(%35, true {
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
                  %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc48)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc49)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc49)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc321)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc50)
                  %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc47)
                  %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc47)
                  %45 = cir.const #cir.int<10> : !s32i loc(#loc51)
                  %46 = cir.cmp(eq, %44, %45) : !s32i, !cir.bool loc(#loc322)
                  %47 = cir.ternary(%46, true {
                    %48 = cir.const #true loc(#loc46)
                    cir.yield %48 : !cir.bool loc(#loc46)
                  }, false {
                    %48 = cir.const #false loc(#loc46)
                    cir.yield %48 : !cir.bool loc(#loc46)
                  }) : (!cir.bool) -> !cir.bool loc(#loc46)
                  cir.yield %47 : !cir.bool loc(#loc46)
                }, false {
                  %37 = cir.const #false loc(#loc46)
                  cir.yield %37 : !cir.bool loc(#loc46)
                }) : (!cir.bool) -> !cir.bool loc(#loc46)
                cir.if %36 {
                  %37 = cir.const #cir.int<0> : !s32i loc(#loc53)
                  %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc53)
                  %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
                  %40 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc55)
                  %41 = cir.const #cir.int<1> : !s32i loc(#loc56)
                  %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc56)
                  %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc324)
                  %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc57)
                  cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc325)
                } loc(#loc323)
              } loc(#loc319)
            } else {
              %29 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
              %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
              cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc58)
              %31 = cir.const #cir.int<0> : !s32i loc(#loc59)
              %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc59)
              %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
              %34 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc61)
              %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc62)
              cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc326)
            } loc(#loc317)
          } loc(#loc314)
        } loc(#loc313)
      } loc(#loc310)
    } loc(#loc308)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc327)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc327)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc327)
  } loc(#loc306)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc328)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc67)
  cir.func private @printIntLine(!s32i) loc(#loc329)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc331)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc332)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc332)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc332)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc76)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc333)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    %5 = cir.call @badSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc79)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc334)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc336)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc337)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc338)
      cir.scope {
        %9 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc90)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc67)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc67)
        %13 = cir.call @__isoc99_sscanf(%10, %12, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc90)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc92)
        %15 = cir.cmp(eq, %13, %14) : !s32i, !cir.bool loc(#loc340)
        cir.if %15 {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc94)
          cir.store %16, %8 : !s32i, !cir.ptr<!s32i> loc(#loc342)
          cir.scope {
            %18 = cir.const #cir.int<0> : !s32i loc(#loc98)
            cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc344)
            cir.for : cond {
              %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc100)
              %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc101)
              %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc345)
              cir.condition(%21) loc(#loc102)
            } body {
              cir.scope {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc105)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc347)
              } loc(#loc346)
              cir.yield loc(#loc97)
            } step {
              %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc106)
              %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc107)
              cir.store %20, %6 : !s32i, !cir.ptr<!s32i> loc(#loc348)
              cir.yield loc(#loc343)
            } loc(#loc343)
          } loc(#loc343)
          %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc108)
          cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc109)
        } loc(#loc341)
      } loc(#loc339)
    } loc(#loc335)
    cir.return loc(#loc71)
  } loc(#loc330)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc350)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc112)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc351)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc114)
    cir.return loc(#loc111)
  } loc(#loc349)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc352)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc353)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc354)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc125)
  cir.func @main(%arg0: !s32i loc(fused[#loc128, #loc129]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc130, #loc131])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc356)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc357)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc127)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc132)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc133)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc134)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc134)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc135)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc122)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_console_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc358)
    cir.call @CWE606_Unchecked_Loop_Condition__char_console_42_good() : () -> () loc(#loc137)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc123)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc124)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc124)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_console_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc359)
    cir.call @CWE606_Unchecked_Loop_Condition__char_console_42_bad() : () -> () loc(#loc141)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc125)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc125)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc143)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc144)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc360)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc360)
    cir.return %17 : !s32i loc(#loc360)
  } loc(#loc355)
  cir.func internal private @goodB2GSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc148, #loc149])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc362)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc147)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc364)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc155)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc155)
      cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc364)
      cir.scope {
        %8 = cir.const #cir.int<100> : !s32i loc(#loc159)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc159)
        %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc160)
        %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc366)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc161)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc161)
        %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc367)
        cir.if %14 {
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
            %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc166)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc167)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc168)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc168)
            %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc169)
            %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc370)
            %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc370)
            %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc305)
            %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc170)
            %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc171)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc172)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc172)
            %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc371)
            cir.if %28 {
              %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc176)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
              %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc176)
              cir.store %31, %4 : !u64i, !cir.ptr<!u64i> loc(#loc373)
              cir.scope {
                %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc182)
                %33 = cir.const #cir.int<0> : !s32i loc(#loc183)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc183)
                %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc375)
                %36 = cir.ternary(%35, true {
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
                  %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc186)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc187)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc187)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc376)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc188)
                  %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc185)
                  %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc185)
                  %45 = cir.const #cir.int<10> : !s32i loc(#loc189)
                  %46 = cir.cmp(eq, %44, %45) : !s32i, !cir.bool loc(#loc377)
                  %47 = cir.ternary(%46, true {
                    %48 = cir.const #true loc(#loc184)
                    cir.yield %48 : !cir.bool loc(#loc184)
                  }, false {
                    %48 = cir.const #false loc(#loc184)
                    cir.yield %48 : !cir.bool loc(#loc184)
                  }) : (!cir.bool) -> !cir.bool loc(#loc184)
                  cir.yield %47 : !cir.bool loc(#loc184)
                }, false {
                  %37 = cir.const #false loc(#loc184)
                  cir.yield %37 : !cir.bool loc(#loc184)
                }) : (!cir.bool) -> !cir.bool loc(#loc184)
                cir.if %36 {
                  %37 = cir.const #cir.int<0> : !s32i loc(#loc191)
                  %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc191)
                  %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
                  %40 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc193)
                  %41 = cir.const #cir.int<1> : !s32i loc(#loc194)
                  %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc194)
                  %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc379)
                  %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc195)
                  cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc380)
                } loc(#loc378)
              } loc(#loc374)
            } else {
              %29 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc196)
              %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc196)
              cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc197)
              %31 = cir.const #cir.int<0> : !s32i loc(#loc198)
              %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc198)
              %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
              %34 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc200)
              %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc201)
              cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc381)
            } loc(#loc372)
          } loc(#loc369)
        } loc(#loc368)
      } loc(#loc365)
    } loc(#loc363)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc382)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc382)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc382)
  } loc(#loc361)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc384)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc385)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc385)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc385)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc210)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc386)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc212)
    %5 = cir.call @goodB2GSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc213)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc387)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc389)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc390)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc391)
      cir.scope {
        %9 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc224)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc225)
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc226)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc226)
        %13 = cir.call @__isoc99_sscanf(%10, %12, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc224)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc227)
        %15 = cir.cmp(eq, %13, %14) : !s32i, !cir.bool loc(#loc393)
        cir.if %15 {
          cir.scope {
            %16 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc231)
            %17 = cir.const #cir.int<10000> : !s32i loc(#loc232)
            %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc396)
            cir.if %18 {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc234)
              cir.store %19, %8 : !s32i, !cir.ptr<!s32i> loc(#loc398)
              cir.scope {
                %21 = cir.const #cir.int<0> : !s32i loc(#loc238)
                cir.store %21, %6 : !s32i, !cir.ptr<!s32i> loc(#loc400)
                cir.for : cond {
                  %22 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc240)
                  %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc241)
                  %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc401)
                  cir.condition(%24) loc(#loc242)
                } body {
                  cir.scope {
                    %22 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc244)
                    %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc245)
                    cir.store %23, %8 : !s32i, !cir.ptr<!s32i> loc(#loc403)
                  } loc(#loc402)
                  cir.yield loc(#loc237)
                } step {
                  %22 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc246)
                  %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc247)
                  cir.store %23, %6 : !s32i, !cir.ptr<!s32i> loc(#loc404)
                  cir.yield loc(#loc399)
                } loc(#loc399)
              } loc(#loc399)
              %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc248)
              cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc249)
            } loc(#loc397)
          } loc(#loc395)
        } loc(#loc394)
      } loc(#loc392)
    } loc(#loc388)
    cir.return loc(#loc205)
  } loc(#loc383)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc405)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc252)
  cir.func internal private @goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc255, #loc256])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc407)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc254)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc257)
    %2 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc258)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc259)
    %4 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc252)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc252)
    %6 = cir.call @strcpy(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc258)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc260)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc408)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc408)
    cir.return %8 : !cir.ptr<!s8i> loc(#loc408)
  } loc(#loc406)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc410)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc411)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc411)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc411)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc268)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc412)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc270)
    %5 = cir.call @goodG2BSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc271)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc413)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc415)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc416)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc417)
      cir.scope {
        %9 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc282)
        %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc283)
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc284)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc284)
        %13 = cir.call @__isoc99_sscanf(%10, %12, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc282)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc285)
        %15 = cir.cmp(eq, %13, %14) : !s32i, !cir.bool loc(#loc419)
        cir.if %15 {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc287)
          cir.store %16, %8 : !s32i, !cir.ptr<!s32i> loc(#loc421)
          cir.scope {
            %18 = cir.const #cir.int<0> : !s32i loc(#loc291)
            cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc423)
            cir.for : cond {
              %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc293)
              %20 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc294)
              %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc424)
              cir.condition(%21) loc(#loc295)
            } body {
              cir.scope {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc297)
                %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc298)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc426)
              } loc(#loc425)
              cir.yield loc(#loc290)
            } step {
              %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc299)
              %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc300)
              cir.store %20, %6 : !s32i, !cir.ptr<!s32i> loc(#loc427)
              cir.yield loc(#loc422)
            } loc(#loc422)
          } loc(#loc422)
          %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc301)
          cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc302)
        } loc(#loc420)
      } loc(#loc418)
    } loc(#loc414)
    cir.return loc(#loc263)
  } loc(#loc409)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_42.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":49:27)
#loc8 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":28:1)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":56:1)
#loc12 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":29:1)
#loc13 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":30:5)
#loc14 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":54:5)
#loc15 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":32:9)
#loc16 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":32:37)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":32:26)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":32:33)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":34:9)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":53:9)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":34:13)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":34:17)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":34:27)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":35:9)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":37:13)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":52:13)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":37:23)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":37:28)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":37:27)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":37:43)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":37:47)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":37:57)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":37:17)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":37:67)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":38:13)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":46:13)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":48:13)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":41:27)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":41:34)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":41:17)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":41:38)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":42:17)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":45:17)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":42:21)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":42:31)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":42:33)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":42:36)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":42:41)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":42:49)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":42:50)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":42:55)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":43:17)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":44:39)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":44:21)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":44:26)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":44:34)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":44:35)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":49:17)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":51:33)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":51:17)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":51:22)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":51:29)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":55:12)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":55:5)
#loc65 = loc("/usr/include/stdio.h":468:1)
#loc66 = loc("/usr/include/stdio.h":468:12)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":66:26)
#loc68 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc69 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":58:1)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":78:1)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":60:5)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":60:12)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":61:5)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":61:28)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":62:12)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":62:5)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":63:22)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":63:12)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":63:5)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":63:26)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":64:5)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":77:5)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":65:9)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":65:13)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":65:16)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":65:19)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":66:9)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":76:9)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":66:13)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":66:20)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":66:39)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":67:9)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":69:27)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":69:13)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":70:13)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":74:13)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":70:22)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":70:18)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":70:25)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":70:29)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":70:27)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":71:13)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":73:28)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":73:17)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":70:33)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":70:32)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":75:26)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":75:13)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":170:1)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":174:1)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":172:5)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":172:13)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":173:5)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":173:13)
#loc116 = loc("/usr/include/stdlib.h":575:1)
#loc117 = loc("/usr/include/stdlib.h":575:41)
#loc118 = loc("/usr/include/time.h":76:1)
#loc119 = loc("/usr/include/time.h":76:38)
#loc120 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc121 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":190:15)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":192:15)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":195:15)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":197:15)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":185:1)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":200:1)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":186:1)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":188:27)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":188:22)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":188:5)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":190:5)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":191:5)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":191:59)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":192:5)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":195:5)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":196:5)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":196:58)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":197:5)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":199:12)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":199:5)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":115:1)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":143:1)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":116:1)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":117:5)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":141:5)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":119:9)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":119:37)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":119:26)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":119:33)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":121:9)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":140:9)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":121:13)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":121:17)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":121:27)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":122:9)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":124:13)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":139:13)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":124:23)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":124:28)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":124:27)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":124:43)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":124:47)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":124:57)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":124:17)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":124:67)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":125:13)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":133:13)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":135:13)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":128:27)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":128:34)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":128:17)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":128:38)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":129:17)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":132:17)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":129:21)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":129:31)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":129:33)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":129:36)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":129:41)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":129:49)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":129:50)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":129:55)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":130:17)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":131:39)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":131:21)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":131:26)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":131:34)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":131:35)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":136:27)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":136:17)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":138:33)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":138:17)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":138:22)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":138:29)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":142:12)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":142:5)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":145:1)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":168:1)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":147:5)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":147:12)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":148:5)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":148:28)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":149:12)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":149:5)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":150:26)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":150:12)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":150:5)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":150:30)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":151:5)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":167:5)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":152:9)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":152:13)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":152:16)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":152:19)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":153:9)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":166:9)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":153:13)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":153:20)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":153:26)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":153:39)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":154:9)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":156:13)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":165:13)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":156:17)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":156:21)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":157:13)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":158:31)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":158:17)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":159:17)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":163:17)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":159:26)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":159:22)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":159:29)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":159:33)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":159:31)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":160:17)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":162:32)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":162:21)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":159:37)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":159:36)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":164:30)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":164:17)
#loc250 = loc("/usr/include/string.h":141:1)
#loc251 = loc("/usr/include/string.h":142:14)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":88:18)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":85:1)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":90:1)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":86:1)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":88:5)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":88:12)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":89:12)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":89:5)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":92:1)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":112:1)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":94:5)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":94:12)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":95:5)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":95:28)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":96:12)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":96:5)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":97:26)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":97:12)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":97:5)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":97:30)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":98:5)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":111:5)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":99:9)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":99:13)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":99:16)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":99:19)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":100:9)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":110:9)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":100:13)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":100:20)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":100:26)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":100:39)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":101:9)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":103:27)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":103:13)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":104:13)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":108:13)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":104:22)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":104:18)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":104:25)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":104:29)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":104:27)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":105:13)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":107:28)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":107:17)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":104:33)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":104:32)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":109:26)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_console_42.c":109:13)
#loc303 = loc(fused[#loc1, #loc2])
#loc304 = loc(fused[#loc3, #loc4])
#loc305 = loc(fused[#loc5, #loc6])
#loc306 = loc(fused[#loc8, #loc9])
#loc308 = loc(fused[#loc13, #loc14])
#loc309 = loc(fused[#loc15, #loc16])
#loc310 = loc(fused[#loc19, #loc20])
#loc311 = loc(fused[#loc21, #loc22])
#loc312 = loc(fused[#loc21, #loc23])
#loc313 = loc(fused[#loc24, #loc20])
#loc314 = loc(fused[#loc25, #loc26])
#loc315 = loc(fused[#loc30, #loc31])
#loc316 = loc(fused[#loc33, #loc34])
#loc317 = loc(fused[#loc35, #loc36, #loc37, #loc26])
#loc318 = loc(fused[#loc40, #loc41])
#loc319 = loc(fused[#loc42, #loc43])
#loc320 = loc(fused[#loc44, #loc45])
#loc321 = loc(fused[#loc48, #loc49])
#loc322 = loc(fused[#loc47, #loc51])
#loc323 = loc(fused[#loc52, #loc43])
#loc324 = loc(fused[#loc55, #loc56])
#loc325 = loc(fused[#loc54, #loc53])
#loc326 = loc(fused[#loc60, #loc59])
#loc327 = loc(fused[#loc64, #loc63])
#loc328 = loc(fused[#loc65, #loc66])
#loc329 = loc(fused[#loc68, #loc69])
#loc330 = loc(fused[#loc70, #loc71])
#loc331 = loc(fused[#loc72, #loc73])
#loc332 = loc(fused[#loc74, #loc75])
#loc333 = loc(fused[#loc77, #loc76])
#loc334 = loc(fused[#loc80, #loc81])
#loc335 = loc(fused[#loc82, #loc83])
#loc336 = loc(fused[#loc84, #loc85])
#loc337 = loc(fused[#loc84, #loc86])
#loc338 = loc(fused[#loc84, #loc87])
#loc339 = loc(fused[#loc88, #loc89])
#loc340 = loc(fused[#loc90, #loc92])
#loc341 = loc(fused[#loc93, #loc89])
#loc342 = loc(fused[#loc95, #loc94])
#loc343 = loc(fused[#loc96, #loc97])
#loc344 = loc(fused[#loc99, #loc98])
#loc345 = loc(fused[#loc100, #loc101])
#loc346 = loc(fused[#loc103, #loc97])
#loc347 = loc(fused[#loc105, #loc104])
#loc348 = loc(fused[#loc107, #loc106])
#loc349 = loc(fused[#loc110, #loc111])
#loc350 = loc(fused[#loc112, #loc113])
#loc351 = loc(fused[#loc114, #loc115])
#loc352 = loc(fused[#loc116, #loc117])
#loc353 = loc(fused[#loc118, #loc119])
#loc354 = loc(fused[#loc120, #loc121])
#loc355 = loc(fused[#loc126, #loc127])
#loc358 = loc(fused[#loc137, #loc138])
#loc359 = loc(fused[#loc141, #loc142])
#loc360 = loc(fused[#loc145, #loc144])
#loc361 = loc(fused[#loc146, #loc147])
#loc363 = loc(fused[#loc151, #loc152])
#loc364 = loc(fused[#loc153, #loc154])
#loc365 = loc(fused[#loc157, #loc158])
#loc366 = loc(fused[#loc159, #loc160])
#loc367 = loc(fused[#loc159, #loc161])
#loc368 = loc(fused[#loc162, #loc158])
#loc369 = loc(fused[#loc163, #loc164])
#loc370 = loc(fused[#loc168, #loc169])
#loc371 = loc(fused[#loc171, #loc172])
#loc372 = loc(fused[#loc173, #loc174, #loc175, #loc164])
#loc373 = loc(fused[#loc178, #loc179])
#loc374 = loc(fused[#loc180, #loc181])
#loc375 = loc(fused[#loc182, #loc183])
#loc376 = loc(fused[#loc186, #loc187])
#loc377 = loc(fused[#loc185, #loc189])
#loc378 = loc(fused[#loc190, #loc181])
#loc379 = loc(fused[#loc193, #loc194])
#loc380 = loc(fused[#loc192, #loc191])
#loc381 = loc(fused[#loc199, #loc198])
#loc382 = loc(fused[#loc203, #loc202])
#loc383 = loc(fused[#loc204, #loc205])
#loc384 = loc(fused[#loc206, #loc207])
#loc385 = loc(fused[#loc208, #loc209])
#loc386 = loc(fused[#loc211, #loc210])
#loc387 = loc(fused[#loc214, #loc215])
#loc388 = loc(fused[#loc216, #loc217])
#loc389 = loc(fused[#loc218, #loc219])
#loc390 = loc(fused[#loc218, #loc220])
#loc391 = loc(fused[#loc218, #loc221])
#loc392 = loc(fused[#loc222, #loc223])
#loc393 = loc(fused[#loc224, #loc227])
#loc394 = loc(fused[#loc228, #loc223])
#loc395 = loc(fused[#loc229, #loc230])
#loc396 = loc(fused[#loc231, #loc232])
#loc397 = loc(fused[#loc233, #loc230])
#loc398 = loc(fused[#loc235, #loc234])
#loc399 = loc(fused[#loc236, #loc237])
#loc400 = loc(fused[#loc239, #loc238])
#loc401 = loc(fused[#loc240, #loc241])
#loc402 = loc(fused[#loc243, #loc237])
#loc403 = loc(fused[#loc245, #loc244])
#loc404 = loc(fused[#loc247, #loc246])
#loc405 = loc(fused[#loc250, #loc251])
#loc406 = loc(fused[#loc253, #loc254])
#loc408 = loc(fused[#loc261, #loc260])
#loc409 = loc(fused[#loc262, #loc263])
#loc410 = loc(fused[#loc264, #loc265])
#loc411 = loc(fused[#loc266, #loc267])
#loc412 = loc(fused[#loc269, #loc268])
#loc413 = loc(fused[#loc272, #loc273])
#loc414 = loc(fused[#loc274, #loc275])
#loc415 = loc(fused[#loc276, #loc277])
#loc416 = loc(fused[#loc276, #loc278])
#loc417 = loc(fused[#loc276, #loc279])
#loc418 = loc(fused[#loc280, #loc281])
#loc419 = loc(fused[#loc282, #loc285])
#loc420 = loc(fused[#loc286, #loc281])
#loc421 = loc(fused[#loc288, #loc287])
#loc422 = loc(fused[#loc289, #loc290])
#loc423 = loc(fused[#loc292, #loc291])
#loc424 = loc(fused[#loc293, #loc294])
#loc425 = loc(fused[#loc296, #loc290])
#loc426 = loc(fused[#loc298, #loc297])
#loc427 = loc(fused[#loc300, #loc299])
