!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":24:22)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":24:26)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":158:10)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":158:14)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":158:20)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":158:32)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":106:26)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":106:30)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":67:26)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":67:30)
#true = #cir.bool<true> : !cir.bool
#loc269 = loc(fused[#loc5, #loc6])
#loc308 = loc(fused[#loc100, #loc101])
#loc309 = loc(fused[#loc102, #loc103])
#loc314 = loc(fused[#loc120, #loc121])
#loc347 = loc(fused[#loc198, #loc199])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc267)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc5, #loc6])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc269)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc4)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc7)
    %2 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc8)
    %4 = cir.binop(and, %2, %3) : !s32i loc(#loc8)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc8)
    %6 = cir.ternary(%5, true {
      %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc8)
      %12 = cir.const #cir.int<30> : !s32i loc(#loc8)
      %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc8)
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc8)
      %16 = cir.const #cir.int<15> : !s32i loc(#loc8)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc8)
      %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc8)
      %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc8)
      %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc8)
      cir.yield %21 : !u32i loc(#loc8)
    }, false {
      %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc8)
      %12 = cir.const #cir.int<30> : !s32i loc(#loc8)
      %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc8)
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc8)
      %16 = cir.const #cir.int<15> : !s32i loc(#loc8)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc8)
      %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc8)
      %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc8)
      %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc8)
      %22 = cir.unary(minus, %21) : !u32i, !u32i loc(#loc8)
      %23 = cir.const #cir.int<1> : !s32i loc(#loc8)
      %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc8)
      %25 = cir.binop(sub, %22, %24) : !u32i loc(#loc8)
      cir.yield %25 : !u32i loc(#loc8)
    }) : (!cir.bool) -> !u32i loc(#loc8)
    %7 = cir.cast(integral, %6 : !u32i), !s32i loc(#loc8)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc10)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    cir.return %9 : !s32i loc(#loc271)
  } loc(#loc268)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc12)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc272)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc15)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc273)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc274)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc20)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc275)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc277)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc28)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %4 = cir.call @badSource(%3) : (!s32i) -> !s32i loc(#loc31)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc281)
      %6 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc282)
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc283)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc37)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc37)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc281)
      %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc39)
      cir.store %10, %6 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc282)
      %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc12)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc12)
      cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc283)
      %13 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc41)
      %14 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc15)
      %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc15)
      %17 = cir.call @fopen(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc41)
      cir.store %17, %6 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc284)
      cir.scope {
        %18 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc47)
        %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc48)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc48)
        %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc286)
        cir.if %21 {
          %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc50)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc51)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc50)
        } loc(#loc287)
      } loc(#loc285)
      cir.scope {
        %18 = cir.const #cir.int<0> : !s32i loc(#loc54)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc54)
        cir.store %19, %5 : !u64i, !cir.ptr<!u64i> loc(#loc289)
        cir.for : cond {
          %20 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc56)
          %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc57)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc57)
          %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc290)
          cir.condition(%23) loc(#loc58)
        } body {
          cir.scope {
            cir.scope {
              %20 = cir.const #cir.int<50> : !u64i loc(#loc293)
              %21 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc64)
              %22 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc20)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc20)
              %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
              %25 = cir.const #cir.int<1> : !u64i loc(#loc294)
              %26 = cir.const #cir.int<50> : !u64i loc(#loc295)
              %27 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc69)
              %28 = cir.call @fwrite(%24, %25, %26, %27) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc64)
              %29 = cir.cmp(ne, %20, %28) : !u64i, !cir.bool loc(#loc296)
              cir.if %29 {
                %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc72)
                %31 = cir.const #cir.int<1> : !s32i loc(#loc73)
                cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc72)
              } loc(#loc297)
            } loc(#loc292)
          } loc(#loc291)
          cir.yield loc(#loc53)
        } step {
          %20 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc74)
          %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc75)
          cir.store %21, %5 : !u64i, !cir.ptr<!u64i> loc(#loc298)
          cir.yield loc(#loc288)
        } loc(#loc288)
      } loc(#loc288)
      cir.scope {
        %18 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc78)
        %19 = cir.cast(ptr_to_bool, %18 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc78)
        cir.if %19 {
          %20 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc80)
          %21 = cir.call @fclose(%20) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc81)
        } loc(#loc300)
      } loc(#loc299)
    } loc(#loc280)
    cir.return loc(#loc24)
  } loc(#loc276)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc302)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc84)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc303)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc86)
    cir.return loc(#loc83)
  } loc(#loc301)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc304)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc305)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc306)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc97)
  cir.func @main(%arg0: !s32i loc(fused[#loc100, #loc101]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc102, #loc103])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc308)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc309)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc99)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc104)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc105)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc106)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc106)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc107)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc94)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__rand_fwrite_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc310)
    cir.call @CWE400_Resource_Exhaustion__rand_fwrite_42_good() : () -> () loc(#loc109)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc95)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc96)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__rand_fwrite_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc311)
    cir.call @CWE400_Resource_Exhaustion__rand_fwrite_42_bad() : () -> () loc(#loc113)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc97)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc116)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc312)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc312)
    cir.return %17 : !s32i loc(#loc312)
  } loc(#loc307)
  cir.func internal private @goodB2GSource(%arg0: !s32i loc(fused[#loc120, #loc121])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc314)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc119)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    %2 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc123)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %4 = cir.binop(and, %2, %3) : !s32i loc(#loc123)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc123)
    %6 = cir.ternary(%5, true {
      %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc123)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc123)
      %12 = cir.const #cir.int<30> : !s32i loc(#loc123)
      %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc123)
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc123)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc123)
      %16 = cir.const #cir.int<15> : !s32i loc(#loc123)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc123)
      %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc123)
      %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc123)
      %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc123)
      %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc123)
      cir.yield %21 : !u32i loc(#loc123)
    }, false {
      %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc123)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc123)
      %12 = cir.const #cir.int<30> : !s32i loc(#loc123)
      %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc123)
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc123)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc123)
      %16 = cir.const #cir.int<15> : !s32i loc(#loc123)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc123)
      %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc123)
      %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc123)
      %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc123)
      %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc123)
      %22 = cir.unary(minus, %21) : !u32i, !u32i loc(#loc123)
      %23 = cir.const #cir.int<1> : !s32i loc(#loc123)
      %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc123)
      %25 = cir.binop(sub, %22, %24) : !u32i loc(#loc123)
      cir.yield %25 : !u32i loc(#loc123)
    }) : (!cir.bool) -> !u32i loc(#loc123)
    %7 = cir.cast(integral, %6 : !u32i), !s32i loc(#loc123)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc316)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc316)
    cir.return %9 : !s32i loc(#loc316)
  } loc(#loc313)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc127)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc318)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc133)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc319)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %4 = cir.call @goodB2GSource(%3) : (!s32i) -> !s32i loc(#loc136)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc320)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc322)
      %6 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc323)
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc324)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc142)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc142)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc322)
      %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc144)
      cir.store %10, %6 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc323)
      %11 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc127)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc127)
      cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc324)
      cir.scope {
        %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc149)
        %15 = cir.cmp(gt, %13, %14) : !s32i, !cir.bool loc(#loc326)
        %16 = cir.ternary(%15, true {
          %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc151)
          %18 = cir.const #cir.int<20> : !s32i loc(#loc152)
          %19 = cir.cmp(le, %17, %18) : !s32i, !cir.bool loc(#loc327)
          %20 = cir.ternary(%19, true {
            %21 = cir.const #true loc(#loc150)
            cir.yield %21 : !cir.bool loc(#loc150)
          }, false {
            %21 = cir.const #false loc(#loc150)
            cir.yield %21 : !cir.bool loc(#loc150)
          }) : (!cir.bool) -> !cir.bool loc(#loc150)
          cir.yield %20 : !cir.bool loc(#loc150)
        }, false {
          %17 = cir.const #false loc(#loc150)
          cir.yield %17 : !cir.bool loc(#loc150)
        }) : (!cir.bool) -> !cir.bool loc(#loc150)
        cir.if %16 {
          %17 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc154)
          %18 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
          %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc156)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc156)
          %21 = cir.call @fopen(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc154)
          cir.store %21, %6 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc329)
          cir.scope {
            %22 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc161)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc162)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc162)
            %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc331)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc164)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc165)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc164)
            } loc(#loc332)
          } loc(#loc330)
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc168)
            %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc168)
            cir.store %23, %5 : !u64i, !cir.ptr<!u64i> loc(#loc334)
            cir.for : cond {
              %24 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc170)
              %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc171)
              %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc171)
              %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc335)
              cir.condition(%27) loc(#loc172)
            } body {
              cir.scope {
                cir.scope {
                  %24 = cir.const #cir.int<50> : !u64i loc(#loc338)
                  %25 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc178)
                  %26 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc179)
                  %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc179)
                  %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc179)
                  %29 = cir.const #cir.int<1> : !u64i loc(#loc339)
                  %30 = cir.const #cir.int<50> : !u64i loc(#loc340)
                  %31 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc184)
                  %32 = cir.call @fwrite(%28, %29, %30, %31) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc178)
                  %33 = cir.cmp(ne, %24, %32) : !u64i, !cir.bool loc(#loc341)
                  cir.if %33 {
                    %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc186)
                    %35 = cir.const #cir.int<1> : !s32i loc(#loc187)
                    cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc186)
                  } loc(#loc342)
                } loc(#loc337)
              } loc(#loc336)
              cir.yield loc(#loc167)
            } step {
              %24 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc188)
              %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc189)
              cir.store %25, %5 : !u64i, !cir.ptr<!u64i> loc(#loc343)
              cir.yield loc(#loc333)
            } loc(#loc333)
          } loc(#loc333)
          cir.scope {
            %22 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc192)
            %23 = cir.cast(ptr_to_bool, %22 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc192)
            cir.if %23 {
              %24 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc194)
              %25 = cir.call @fclose(%24) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc195)
            } loc(#loc345)
          } loc(#loc344)
        } loc(#loc328)
      } loc(#loc325)
    } loc(#loc321)
    cir.return loc(#loc129)
  } loc(#loc317)
  cir.func internal private @goodG2BSource(%arg0: !s32i loc(fused[#loc198, #loc199])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc347)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc197)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    %2 = cir.const #cir.int<20> : !s32i loc(#loc201)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc348)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc349)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc349)
    cir.return %4 : !s32i loc(#loc349)
  } loc(#loc346)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc351)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc209)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc210)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc352)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    %4 = cir.call @goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc213)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc355)
      %6 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc356)
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc357)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc219)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc219)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc355)
      %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc221)
      cir.store %10, %6 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc356)
      %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc223)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc223)
      cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc357)
      %13 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc224)
      %14 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc225)
      %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc226)
      %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc226)
      %17 = cir.call @fopen(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc224)
      cir.store %17, %6 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc358)
      cir.scope {
        %18 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc231)
        %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc232)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc232)
        %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc360)
        cir.if %21 {
          %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc234)
          %23 = cir.const #cir.int<1> : !s32i loc(#loc235)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc234)
        } loc(#loc361)
      } loc(#loc359)
      cir.scope {
        %18 = cir.const #cir.int<0> : !s32i loc(#loc238)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc238)
        cir.store %19, %5 : !u64i, !cir.ptr<!u64i> loc(#loc363)
        cir.for : cond {
          %20 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc240)
          %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc241)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc241)
          %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc364)
          cir.condition(%23) loc(#loc242)
        } body {
          cir.scope {
            cir.scope {
              %20 = cir.const #cir.int<50> : !u64i loc(#loc367)
              %21 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc248)
              %22 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc249)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc249)
              %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc249)
              %25 = cir.const #cir.int<1> : !u64i loc(#loc368)
              %26 = cir.const #cir.int<50> : !u64i loc(#loc369)
              %27 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc254)
              %28 = cir.call @fwrite(%24, %25, %26, %27) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc248)
              %29 = cir.cmp(ne, %20, %28) : !u64i, !cir.bool loc(#loc370)
              cir.if %29 {
                %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc257)
                %31 = cir.const #cir.int<1> : !s32i loc(#loc258)
                cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc257)
              } loc(#loc371)
            } loc(#loc366)
          } loc(#loc365)
          cir.yield loc(#loc237)
        } step {
          %20 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc259)
          %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc260)
          cir.store %21, %5 : !u64i, !cir.ptr<!u64i> loc(#loc372)
          cir.yield loc(#loc362)
        } loc(#loc362)
      } loc(#loc362)
      cir.scope {
        %18 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc263)
        %19 = cir.cast(ptr_to_bool, %18 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc263)
        cir.if %19 {
          %20 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc265)
          %21 = cir.call @fclose(%20) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc266)
        } loc(#loc374)
      } loc(#loc373)
    } loc(#loc354)
    cir.return loc(#loc206)
  } loc(#loc350)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_42.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":24:1)
#loc4 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":29:1)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":25:1)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":27:13)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":27:5)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":28:12)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":28:5)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":40:32)
#loc13 = loc("/usr/include/stdio.h":264:1)
#loc14 = loc("/usr/include/stdio.h":266:3)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":41:33)
#loc16 = loc("/usr/include/stdlib.h":756:1)
#loc17 = loc("/usr/include/stdlib.h":756:70)
#loc18 = loc("/usr/include/stdio.h":735:1)
#loc19 = loc("/usr/include/stdio.h":736:43)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":50:44)
#loc21 = loc("/usr/include/stdio.h":184:1)
#loc22 = loc("/usr/include/stdio.h":184:36)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":31:1)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":60:1)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":33:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":33:9)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":35:14)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":35:13)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":35:5)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":36:23)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":36:13)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":36:5)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":36:28)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":37:5)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":59:5)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":38:9)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":38:20)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":39:9)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":39:23)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":40:9)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":41:17)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":41:23)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":41:9)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":41:37)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":42:9)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":45:9)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":42:13)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":42:22)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":43:9)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":44:13)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":44:18)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":48:9)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":54:9)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":48:18)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":48:14)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":48:21)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":48:33)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":48:23)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":49:9)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":50:13)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":53:13)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":50:17)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":50:32)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":50:37)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":50:54)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":50:65)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":50:68)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":50:83)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":50:86)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":50:91)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":51:13)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":52:17)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":52:22)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":48:41)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":48:40)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":55:9)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":58:9)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":55:13)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":56:9)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":57:20)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":57:13)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":143:1)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":147:1)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":145:5)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":145:13)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":146:5)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":146:13)
#loc88 = loc("/usr/include/stdlib.h":575:1)
#loc89 = loc("/usr/include/stdlib.h":575:41)
#loc90 = loc("/usr/include/time.h":76:1)
#loc91 = loc("/usr/include/time.h":76:38)
#loc92 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc93 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":163:15)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":165:15)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":168:15)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":170:15)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":158:1)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":173:1)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":159:1)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":161:27)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":161:22)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":161:5)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":163:5)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":164:5)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":164:53)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":165:5)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":168:5)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":169:5)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":169:52)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":170:5)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":172:12)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":172:5)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":106:1)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":111:1)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":107:1)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":109:13)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":109:5)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":110:12)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":110:5)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":122:32)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":113:1)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":141:1)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":115:5)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":115:9)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":117:14)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":117:13)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":117:5)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":118:27)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":118:13)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":118:5)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":118:32)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":119:5)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":140:5)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":120:9)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":120:20)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":121:9)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":121:23)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":122:9)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":124:9)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":139:9)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":124:13)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":124:21)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":124:23)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":124:26)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":124:35)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":125:9)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":126:21)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":126:27)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":126:37)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":126:13)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":126:41)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":127:13)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":130:13)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":127:17)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":127:26)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":128:13)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":129:17)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":129:22)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":131:13)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":134:13)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":131:22)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":131:18)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":131:25)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":131:37)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":131:27)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":132:13)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":133:17)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":133:104)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":133:21)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":133:36)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":133:41)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":133:48)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":133:58)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":133:69)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":133:72)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":133:87)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":133:90)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":133:95)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":133:98)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":133:103)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":131:45)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":131:44)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":135:13)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":138:13)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":135:17)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":136:13)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":137:24)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":137:17)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":67:1)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":72:1)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":68:1)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":70:13)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":70:5)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":71:12)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":71:5)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":74:1)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":103:1)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":76:5)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":76:9)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":78:14)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":78:13)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":78:5)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":79:27)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":79:13)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":79:5)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":79:32)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":80:5)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":102:5)
#loc218 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":81:9)
#loc219 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":81:20)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":82:9)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":82:23)
#loc222 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":83:9)
#loc223 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":83:32)
#loc224 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":84:17)
#loc225 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":84:23)
#loc226 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":84:33)
#loc227 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":84:9)
#loc228 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":84:37)
#loc229 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":85:9)
#loc230 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":88:9)
#loc231 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":85:13)
#loc232 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":85:22)
#loc233 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":86:9)
#loc234 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":87:13)
#loc235 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":87:18)
#loc236 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":91:9)
#loc237 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":97:9)
#loc238 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":91:18)
#loc239 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":91:14)
#loc240 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":91:21)
#loc241 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":91:33)
#loc242 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":91:23)
#loc243 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":92:9)
#loc244 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":93:13)
#loc245 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":96:13)
#loc246 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":93:17)
#loc247 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":93:32)
#loc248 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":93:37)
#loc249 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":93:44)
#loc250 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":93:54)
#loc251 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":93:65)
#loc252 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":93:68)
#loc253 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":93:83)
#loc254 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":93:86)
#loc255 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":93:91)
#loc256 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":94:13)
#loc257 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":95:17)
#loc258 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":95:22)
#loc259 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":91:41)
#loc260 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":91:40)
#loc261 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":98:9)
#loc262 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":101:9)
#loc263 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":98:13)
#loc264 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":99:9)
#loc265 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":100:20)
#loc266 = loc("CWE400_Resource_Exhaustion__rand_fwrite_42.c":100:13)
#loc267 = loc(fused[#loc1, #loc2])
#loc268 = loc(fused[#loc3, #loc4])
#loc270 = loc(fused[#loc9, #loc8])
#loc271 = loc(fused[#loc11, #loc10])
#loc272 = loc(fused[#loc13, #loc14])
#loc273 = loc(fused[#loc16, #loc17])
#loc274 = loc(fused[#loc18, #loc19])
#loc275 = loc(fused[#loc21, #loc22])
#loc276 = loc(fused[#loc23, #loc24])
#loc277 = loc(fused[#loc25, #loc26])
#loc278 = loc(fused[#loc29, #loc27])
#loc279 = loc(fused[#loc32, #loc33])
#loc280 = loc(fused[#loc34, #loc35])
#loc281 = loc(fused[#loc36, #loc37])
#loc282 = loc(fused[#loc38, #loc39])
#loc283 = loc(fused[#loc40, #loc12])
#loc284 = loc(fused[#loc43, #loc44])
#loc285 = loc(fused[#loc45, #loc46])
#loc286 = loc(fused[#loc47, #loc48])
#loc287 = loc(fused[#loc49, #loc46])
#loc288 = loc(fused[#loc52, #loc53])
#loc289 = loc(fused[#loc55, #loc54])
#loc290 = loc(fused[#loc56, #loc57])
#loc291 = loc(fused[#loc59, #loc53])
#loc292 = loc(fused[#loc60, #loc61])
#loc293 = loc(fused[#loc62, #loc63])
#loc294 = loc(fused[#loc65, #loc66])
#loc295 = loc(fused[#loc67, #loc68])
#loc296 = loc(fused[#loc62, #loc70])
#loc297 = loc(fused[#loc71, #loc61])
#loc298 = loc(fused[#loc75, #loc74])
#loc299 = loc(fused[#loc76, #loc77])
#loc300 = loc(fused[#loc79, #loc77])
#loc301 = loc(fused[#loc82, #loc83])
#loc302 = loc(fused[#loc84, #loc85])
#loc303 = loc(fused[#loc86, #loc87])
#loc304 = loc(fused[#loc88, #loc89])
#loc305 = loc(fused[#loc90, #loc91])
#loc306 = loc(fused[#loc92, #loc93])
#loc307 = loc(fused[#loc98, #loc99])
#loc310 = loc(fused[#loc109, #loc110])
#loc311 = loc(fused[#loc113, #loc114])
#loc312 = loc(fused[#loc117, #loc116])
#loc313 = loc(fused[#loc118, #loc119])
#loc315 = loc(fused[#loc124, #loc123])
#loc316 = loc(fused[#loc126, #loc125])
#loc317 = loc(fused[#loc128, #loc129])
#loc318 = loc(fused[#loc130, #loc131])
#loc319 = loc(fused[#loc134, #loc132])
#loc320 = loc(fused[#loc137, #loc138])
#loc321 = loc(fused[#loc139, #loc140])
#loc322 = loc(fused[#loc141, #loc142])
#loc323 = loc(fused[#loc143, #loc144])
#loc324 = loc(fused[#loc145, #loc127])
#loc325 = loc(fused[#loc146, #loc147])
#loc326 = loc(fused[#loc148, #loc149])
#loc327 = loc(fused[#loc151, #loc152])
#loc328 = loc(fused[#loc153, #loc147])
#loc329 = loc(fused[#loc157, #loc158])
#loc330 = loc(fused[#loc159, #loc160])
#loc331 = loc(fused[#loc161, #loc162])
#loc332 = loc(fused[#loc163, #loc160])
#loc333 = loc(fused[#loc166, #loc167])
#loc334 = loc(fused[#loc169, #loc168])
#loc335 = loc(fused[#loc170, #loc171])
#loc336 = loc(fused[#loc173, #loc167])
#loc337 = loc(fused[#loc174, #loc175])
#loc338 = loc(fused[#loc176, #loc177])
#loc339 = loc(fused[#loc180, #loc181])
#loc340 = loc(fused[#loc182, #loc183])
#loc341 = loc(fused[#loc176, #loc185])
#loc342 = loc(fused[#loc186, #loc175])
#loc343 = loc(fused[#loc189, #loc188])
#loc344 = loc(fused[#loc190, #loc191])
#loc345 = loc(fused[#loc193, #loc191])
#loc346 = loc(fused[#loc196, #loc197])
#loc348 = loc(fused[#loc202, #loc201])
#loc349 = loc(fused[#loc204, #loc203])
#loc350 = loc(fused[#loc205, #loc206])
#loc351 = loc(fused[#loc207, #loc208])
#loc352 = loc(fused[#loc211, #loc209])
#loc353 = loc(fused[#loc214, #loc215])
#loc354 = loc(fused[#loc216, #loc217])
#loc355 = loc(fused[#loc218, #loc219])
#loc356 = loc(fused[#loc220, #loc221])
#loc357 = loc(fused[#loc222, #loc223])
#loc358 = loc(fused[#loc227, #loc228])
#loc359 = loc(fused[#loc229, #loc230])
#loc360 = loc(fused[#loc231, #loc232])
#loc361 = loc(fused[#loc233, #loc230])
#loc362 = loc(fused[#loc236, #loc237])
#loc363 = loc(fused[#loc239, #loc238])
#loc364 = loc(fused[#loc240, #loc241])
#loc365 = loc(fused[#loc243, #loc237])
#loc366 = loc(fused[#loc244, #loc245])
#loc367 = loc(fused[#loc246, #loc247])
#loc368 = loc(fused[#loc250, #loc251])
#loc369 = loc(fused[#loc252, #loc253])
#loc370 = loc(fused[#loc246, #loc255])
#loc371 = loc(fused[#loc256, #loc245])
#loc372 = loc(fused[#loc260, #loc259])
#loc373 = loc(fused[#loc261, #loc262])
#loc374 = loc(fused[#loc264, #loc262])
