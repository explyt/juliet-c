!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc22 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":47:21)
#loc23 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":47:25)
#loc156 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":352:10)
#loc157 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":352:14)
#loc158 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":352:20)
#loc159 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":352:32)
#loc180 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":135:26)
#loc181 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":135:30)
#loc308 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":226:26)
#loc309 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":226:30)
#loc434 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":312:25)
#loc435 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":312:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc474 = loc(fused[#loc22, #loc23])
#loc525 = loc(fused[#loc156, #loc157])
#loc526 = loc(fused[#loc158, #loc159])
#loc532 = loc(fused[#loc180, #loc181])
#loc581 = loc(fused[#loc308, #loc309])
#loc630 = loc(fused[#loc434, #loc435])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_connect_socket_multiply_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc464)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc465)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc466)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc467)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc468)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc469)
  cir.func private @close(!s32i) -> !s32i loc(#loc470)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc471)
  cir.func private @printIntLine(!s32i) loc(#loc472)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc22, #loc23])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc474)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc24)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc471)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc27)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc27)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc32)
          %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc478)
          cir.if %6 {
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc480)
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc36)
            %9 = cir.const #cir.int<2> : !s32i loc(#loc35)
            %10 = cir.binop(mul, %8, %9) nsw : !s32i loc(#loc36)
            cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc480)
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc37)
            cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc38)
          } loc(#loc479)
        } loc(#loc477)
      } loc(#loc476)
    } loc(#loc475)
    cir.return loc(#loc21)
  } loc(#loc473)
  cir.func no_proto @CWE191_Integer_Underflow__int_connect_socket_multiply_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc482)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc43)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc483)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc485)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc486)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc487)
      %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc488)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc52)
      %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc52)
      cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc487)
      cir.scope {
        cir.do {
          %11 = cir.const #cir.int<2> : !s32i loc(#loc57)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc58)
          %13 = cir.const #cir.int<6> : !s32i loc(#loc59)
          %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc60)
          cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc490)
          cir.scope {
            %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc65)
            %54 = cir.const #cir.int<1> : !s32i loc(#loc66)
            %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc66)
            %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc492)
            cir.if %56 {
              cir.break loc(#loc68)
            } loc(#loc493)
          } loc(#loc491)
          %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc494)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc71)
          %17 = cir.const #cir.int<16> : !u64i loc(#loc495)
          cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc496)
          %18 = cir.const #cir.int<2> : !s32i loc(#loc76)
          %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc76)
          %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
          cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc497)
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
          %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc79)
          %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
          %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
          cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc498)
          %26 = cir.const #cir.int<27015> : !s32i loc(#loc84)
          %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc84)
          %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc85)
          %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc86)
          cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc499)
          cir.scope {
            %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc91)
            %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc501)
            %55 = cir.const #cir.int<16> : !u64i loc(#loc502)
            %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc502)
            %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc96)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc97)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc97)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc503)
            cir.if %60 {
              cir.break loc(#loc99)
            } loc(#loc504)
          } loc(#loc500)
          %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc100)
          %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc101)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc101)
          %33 = cir.const #cir.int<3> : !s32i loc(#loc102)
          %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc102)
          %35 = cir.const #cir.int<4> : !u64i loc(#loc102)
          %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc102)
          %37 = cir.const #cir.int<2> : !s32i loc(#loc102)
          %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc102)
          %39 = cir.binop(add, %36, %38) : !u64i loc(#loc102)
          %40 = cir.const #cir.int<1> : !s32i loc(#loc103)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc103)
          %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc505)
          %43 = cir.const #cir.int<0> : !s32i loc(#loc104)
          %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc105)
          %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc105)
          cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc506)
          cir.scope {
            %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc110)
            %54 = cir.const #cir.int<1> : !s32i loc(#loc111)
            %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc111)
            %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc508)
            %57 = cir.ternary(%56, true {
              %58 = cir.const #true loc(#loc112)
              cir.yield %58 : !cir.bool loc(#loc112)
            }, false {
              %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc113)
              %59 = cir.const #cir.int<0> : !s32i loc(#loc114)
              %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc509)
              %61 = cir.ternary(%60, true {
                %62 = cir.const #true loc(#loc112)
                cir.yield %62 : !cir.bool loc(#loc112)
              }, false {
                %62 = cir.const #false loc(#loc112)
                cir.yield %62 : !cir.bool loc(#loc112)
              }) : (!cir.bool) -> !cir.bool loc(#loc112)
              cir.yield %61 : !cir.bool loc(#loc112)
            }) : (!cir.bool) -> !cir.bool loc(#loc112)
            cir.if %57 {
              cir.break loc(#loc116)
            } loc(#loc510)
          } loc(#loc507)
          %46 = cir.const #cir.int<0> : !s32i loc(#loc117)
          %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc117)
          %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc118)
          %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc119)
          %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc119)
          cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc511)
          %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc120)
          %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc121)
          cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc512)
          cir.yield loc(#loc56)
        } while {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc124)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc124)
          cir.condition(%12) loc(#loc124)
        } loc(#loc489)
      } loc(#loc489)
      cir.scope {
        %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc127)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc128)
        %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc128)
        %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc514)
        cir.if %14 {
          %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc130)
          %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc131)
        } loc(#loc515)
      } loc(#loc513)
    } loc(#loc484)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %3 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc471)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc516)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    cir.call @badSink(%4) : (!s32i) -> () loc(#loc135)
    cir.return loc(#loc40)
  } loc(#loc481)
  cir.func no_proto @CWE191_Integer_Underflow__int_connect_socket_multiply_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc518)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc138)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc519)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc140)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc520)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc142)
    cir.return loc(#loc137)
  } loc(#loc517)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc521)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc522)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc523)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc151)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc153)
  cir.func @main(%arg0: !s32i loc(fused[#loc156, #loc157]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc158, #loc159])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc525)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc526)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc155)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc160)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc161)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc162)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc162)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc163)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc150)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc150)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc164)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_connect_socket_multiply_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc527)
    cir.call @CWE191_Integer_Underflow__int_connect_socket_multiply_21_good() : () -> () loc(#loc165)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc151)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc151)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc167)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc152)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc152)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc168)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_connect_socket_multiply_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc528)
    cir.call @CWE191_Integer_Underflow__int_connect_socket_multiply_21_bad() : () -> () loc(#loc169)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc153)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc153)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc171)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc172)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc529)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc529)
    cir.return %17 : !s32i loc(#loc529)
  } loc(#loc524)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc530)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc177)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc180, #loc181])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc532)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc530)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc185)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc185)
      cir.if %3 {
        %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc176)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc176)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc189)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc192)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc193)
          %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc536)
          cir.if %6 {
            cir.scope {
              %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
              %8 = cir.const #cir.int<2147483647> : !s32i loc(#loc198)
              %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc198)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc198)
              %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc198)
              %12 = cir.const #cir.int<2> : !s32i loc(#loc199)
              %13 = cir.binop(div, %11, %12) : !s32i loc(#loc539)
              %14 = cir.cmp(gt, %7, %13) : !s32i, !cir.bool loc(#loc540)
              cir.if %14 {
                %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc542)
                %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc206)
                %17 = cir.const #cir.int<2> : !s32i loc(#loc205)
                %18 = cir.binop(mul, %16, %17) nsw : !s32i loc(#loc206)
                cir.store %18, %15 : !s32i, !cir.ptr<!s32i> loc(#loc542)
                %19 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc207)
                cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc208)
              } else {
                %15 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc177)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc177)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc209)
              } loc(#loc541)
            } loc(#loc538)
          } loc(#loc537)
        } loc(#loc535)
      } loc(#loc534)
    } loc(#loc533)
    cir.return loc(#loc179)
  } loc(#loc531)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc544)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc214)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc545)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc547)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc548)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc549)
      %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc550)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc223)
      %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc223)
      cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc549)
      cir.scope {
        cir.do {
          %11 = cir.const #cir.int<2> : !s32i loc(#loc228)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc229)
          %13 = cir.const #cir.int<6> : !s32i loc(#loc230)
          %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc231)
          cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc552)
          cir.scope {
            %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc236)
            %54 = cir.const #cir.int<1> : !s32i loc(#loc237)
            %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc237)
            %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc554)
            cir.if %56 {
              cir.break loc(#loc239)
            } loc(#loc555)
          } loc(#loc553)
          %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc556)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc242)
          %17 = cir.const #cir.int<16> : !u64i loc(#loc557)
          cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc558)
          %18 = cir.const #cir.int<2> : !s32i loc(#loc247)
          %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc247)
          %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
          cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc559)
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc249)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc249)
          %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc250)
          %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
          %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
          cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc560)
          %26 = cir.const #cir.int<27015> : !s32i loc(#loc253)
          %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc253)
          %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc254)
          %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc86)
          cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc561)
          cir.scope {
            %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc259)
            %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc563)
            %55 = cir.const #cir.int<16> : !u64i loc(#loc564)
            %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc564)
            %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc264)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc265)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc265)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc565)
            cir.if %60 {
              cir.break loc(#loc267)
            } loc(#loc566)
          } loc(#loc562)
          %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc268)
          %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc269)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc269)
          %33 = cir.const #cir.int<3> : !s32i loc(#loc270)
          %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc270)
          %35 = cir.const #cir.int<4> : !u64i loc(#loc270)
          %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc270)
          %37 = cir.const #cir.int<2> : !s32i loc(#loc270)
          %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc270)
          %39 = cir.binop(add, %36, %38) : !u64i loc(#loc270)
          %40 = cir.const #cir.int<1> : !s32i loc(#loc271)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc271)
          %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc567)
          %43 = cir.const #cir.int<0> : !s32i loc(#loc272)
          %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc273)
          %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc273)
          cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc568)
          cir.scope {
            %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc278)
            %54 = cir.const #cir.int<1> : !s32i loc(#loc279)
            %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc279)
            %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc570)
            %57 = cir.ternary(%56, true {
              %58 = cir.const #true loc(#loc280)
              cir.yield %58 : !cir.bool loc(#loc280)
            }, false {
              %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc281)
              %59 = cir.const #cir.int<0> : !s32i loc(#loc282)
              %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc571)
              %61 = cir.ternary(%60, true {
                %62 = cir.const #true loc(#loc280)
                cir.yield %62 : !cir.bool loc(#loc280)
              }, false {
                %62 = cir.const #false loc(#loc280)
                cir.yield %62 : !cir.bool loc(#loc280)
              }) : (!cir.bool) -> !cir.bool loc(#loc280)
              cir.yield %61 : !cir.bool loc(#loc280)
            }) : (!cir.bool) -> !cir.bool loc(#loc280)
            cir.if %57 {
              cir.break loc(#loc284)
            } loc(#loc572)
          } loc(#loc569)
          %46 = cir.const #cir.int<0> : !s32i loc(#loc285)
          %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc285)
          %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc286)
          %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc287)
          %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc287)
          cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc573)
          %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc288)
          %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc289)
          cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc574)
          cir.yield loc(#loc227)
        } while {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc292)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc292)
          cir.condition(%12) loc(#loc292)
        } loc(#loc551)
      } loc(#loc551)
      cir.scope {
        %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc295)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc296)
        %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc296)
        %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc576)
        cir.if %14 {
          %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc298)
          %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc299)
        } loc(#loc577)
      } loc(#loc575)
    } loc(#loc546)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc300)
    %3 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc530)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc578)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc302)
    cir.call @goodB2G1Sink(%4) : (!s32i) -> () loc(#loc303)
    cir.return loc(#loc211)
  } loc(#loc543)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc579)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc308, #loc309])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc581)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc310)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc579)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc313)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc313)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc317)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc318)
          %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc585)
          cir.if %6 {
            cir.scope {
              %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc322)
              %8 = cir.const #cir.int<2147483647> : !s32i loc(#loc323)
              %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc323)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc323)
              %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc323)
              %12 = cir.const #cir.int<2> : !s32i loc(#loc324)
              %13 = cir.binop(div, %11, %12) : !s32i loc(#loc588)
              %14 = cir.cmp(gt, %7, %13) : !s32i, !cir.bool loc(#loc589)
              cir.if %14 {
                %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc591)
                %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc331)
                %17 = cir.const #cir.int<2> : !s32i loc(#loc330)
                %18 = cir.binop(mul, %16, %17) nsw : !s32i loc(#loc331)
                cir.store %18, %15 : !s32i, !cir.ptr<!s32i> loc(#loc591)
                %19 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc332)
                cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc333)
              } else {
                %15 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc334)
                %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc334)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc335)
              } loc(#loc590)
            } loc(#loc587)
          } loc(#loc586)
        } loc(#loc584)
      } loc(#loc583)
    } loc(#loc582)
    cir.return loc(#loc307)
  } loc(#loc580)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc593)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc340)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc594)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc596)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc597)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc598)
      %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc599)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc349)
      %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc349)
      cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc598)
      cir.scope {
        cir.do {
          %11 = cir.const #cir.int<2> : !s32i loc(#loc354)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc355)
          %13 = cir.const #cir.int<6> : !s32i loc(#loc356)
          %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc357)
          cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc601)
          cir.scope {
            %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc362)
            %54 = cir.const #cir.int<1> : !s32i loc(#loc363)
            %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc363)
            %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc603)
            cir.if %56 {
              cir.break loc(#loc365)
            } loc(#loc604)
          } loc(#loc602)
          %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc605)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc368)
          %17 = cir.const #cir.int<16> : !u64i loc(#loc606)
          cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc607)
          %18 = cir.const #cir.int<2> : !s32i loc(#loc373)
          %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc373)
          %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
          cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc608)
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc375)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc375)
          %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc376)
          %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
          %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
          cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc609)
          %26 = cir.const #cir.int<27015> : !s32i loc(#loc379)
          %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc379)
          %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc380)
          %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc86)
          cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc610)
          cir.scope {
            %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc385)
            %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc612)
            %55 = cir.const #cir.int<16> : !u64i loc(#loc613)
            %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc613)
            %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc390)
            %58 = cir.const #cir.int<1> : !s32i loc(#loc391)
            %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc391)
            %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc614)
            cir.if %60 {
              cir.break loc(#loc393)
            } loc(#loc615)
          } loc(#loc611)
          %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc394)
          %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc395)
          %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc395)
          %33 = cir.const #cir.int<3> : !s32i loc(#loc396)
          %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc396)
          %35 = cir.const #cir.int<4> : !u64i loc(#loc396)
          %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc396)
          %37 = cir.const #cir.int<2> : !s32i loc(#loc396)
          %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc396)
          %39 = cir.binop(add, %36, %38) : !u64i loc(#loc396)
          %40 = cir.const #cir.int<1> : !s32i loc(#loc397)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc397)
          %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc616)
          %43 = cir.const #cir.int<0> : !s32i loc(#loc398)
          %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc399)
          %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc399)
          cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc617)
          cir.scope {
            %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc404)
            %54 = cir.const #cir.int<1> : !s32i loc(#loc405)
            %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc405)
            %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc619)
            %57 = cir.ternary(%56, true {
              %58 = cir.const #true loc(#loc406)
              cir.yield %58 : !cir.bool loc(#loc406)
            }, false {
              %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc407)
              %59 = cir.const #cir.int<0> : !s32i loc(#loc408)
              %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc620)
              %61 = cir.ternary(%60, true {
                %62 = cir.const #true loc(#loc406)
                cir.yield %62 : !cir.bool loc(#loc406)
              }, false {
                %62 = cir.const #false loc(#loc406)
                cir.yield %62 : !cir.bool loc(#loc406)
              }) : (!cir.bool) -> !cir.bool loc(#loc406)
              cir.yield %61 : !cir.bool loc(#loc406)
            }) : (!cir.bool) -> !cir.bool loc(#loc406)
            cir.if %57 {
              cir.break loc(#loc410)
            } loc(#loc621)
          } loc(#loc618)
          %46 = cir.const #cir.int<0> : !s32i loc(#loc411)
          %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc411)
          %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc412)
          %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc413)
          %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc413)
          cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc622)
          %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc414)
          %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc415)
          cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc623)
          cir.yield loc(#loc353)
        } while {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc418)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc418)
          cir.condition(%12) loc(#loc418)
        } loc(#loc600)
      } loc(#loc600)
      cir.scope {
        %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc421)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc422)
        %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc422)
        %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc625)
        cir.if %14 {
          %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc424)
          %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc425)
        } loc(#loc626)
      } loc(#loc624)
    } loc(#loc595)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc426)
    %3 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc579)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc627)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc428)
    cir.call @goodB2G2Sink(%4) : (!s32i) -> () loc(#loc429)
    cir.return loc(#loc337)
  } loc(#loc592)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc628)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc434, #loc435])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc630)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc436)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc628)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc439)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc439)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc443)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc444)
          %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc634)
          cir.if %6 {
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc636)
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc448)
            %9 = cir.const #cir.int<2> : !s32i loc(#loc447)
            %10 = cir.binop(mul, %8, %9) nsw : !s32i loc(#loc448)
            cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc636)
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc449)
            cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc450)
          } loc(#loc635)
        } loc(#loc633)
      } loc(#loc632)
    } loc(#loc631)
    cir.return loc(#loc433)
  } loc(#loc629)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc638)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc455)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc639)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc457)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc458)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc640)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc460)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc628)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc641)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc462)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc463)
    cir.return loc(#loc452)
  } loc(#loc637)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":91:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":45:1)
#loc17 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":45:24)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":47:1)
#loc21 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":58:1)
#loc24 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":48:1)
#loc25 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":49:5)
#loc26 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":57:5)
#loc27 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":49:8)
#loc28 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":50:5)
#loc29 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":51:9)
#loc30 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":56:9)
#loc31 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":51:12)
#loc32 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":51:19)
#loc33 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":52:9)
#loc34 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":54:13)
#loc35 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":54:33)
#loc36 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":54:26)
#loc37 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":55:26)
#loc38 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":55:13)
#loc39 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":60:1)
#loc40 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":123:1)
#loc41 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":62:5)
#loc42 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":62:9)
#loc43 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":64:12)
#loc44 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":64:5)
#loc45 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":65:5)
#loc46 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":120:5)
#loc47 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":70:9)
#loc48 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":70:13)
#loc49 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":71:9)
#loc50 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":71:28)
#loc51 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":72:9)
#loc52 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":72:32)
#loc53 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":73:9)
#loc54 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":73:41)
#loc55 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":74:9)
#loc56 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":109:17)
#loc57 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":84:36)
#loc58 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":84:45)
#loc59 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":84:58)
#loc60 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":84:29)
#loc61 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":84:13)
#loc62 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":84:69)
#loc63 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":85:13)
#loc64 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":88:13)
#loc65 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":85:17)
#loc66 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":85:34)
#loc67 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":86:13)
#loc68 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":87:17)
#loc69 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":89:20)
#loc70 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":89:21)
#loc71 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":89:30)
#loc72 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":89:33)
#loc73 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":89:47)
#loc74 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":89:13)
#loc75 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":89:48)
#loc76 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":90:34)
#loc77 = loc("/usr/include/netinet/in.h":249:5)
#loc78 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":90:13)
#loc79 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":91:39)
#loc80 = loc("/usr/include/netinet/in.h":251:20)
#loc81 = loc("/usr/include/netinet/in.h":33:15)
#loc82 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":91:13)
#loc83 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":91:59)
#loc84 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":92:38)
#loc85 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":92:32)
#loc86 = loc("/usr/include/netinet/in.h":250:15)
#loc87 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":92:13)
#loc88 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":92:46)
#loc89 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":93:13)
#loc90 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":96:13)
#loc91 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":93:25)
#loc92 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":93:58)
#loc93 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":93:59)
#loc94 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":93:68)
#loc95 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":93:82)
#loc96 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":93:17)
#loc97 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":93:88)
#loc98 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":94:13)
#loc99 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":95:17)
#loc100 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":99:31)
#loc101 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":99:46)
#loc102 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":99:59)
#loc103 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":99:77)
#loc104 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":99:80)
#loc105 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":99:26)
#loc106 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":99:13)
#loc107 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":99:81)
#loc108 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":100:13)
#loc109 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":103:13)
#loc110 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":100:17)
#loc111 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":100:31)
#loc112 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":100:44)
#loc113 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":100:47)
#loc114 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":100:61)
#loc115 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":101:13)
#loc116 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":102:17)
#loc117 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":105:39)
#loc118 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":105:25)
#loc119 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":105:13)
#loc120 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":107:25)
#loc121 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":107:20)
#loc122 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":107:13)
#loc123 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":107:36)
#loc124 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":109:16)
#loc125 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":110:9)
#loc126 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":113:9)
#loc127 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":110:13)
#loc128 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":110:30)
#loc129 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":111:9)
#loc130 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":112:26)
#loc131 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":112:13)
#loc132 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":121:17)
#loc133 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":121:5)
#loc134 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":122:13)
#loc135 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":122:5)
#loc136 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":336:1)
#loc137 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":341:1)
#loc138 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":338:5)
#loc139 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":338:14)
#loc140 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":339:5)
#loc141 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":339:14)
#loc142 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":340:5)
#loc143 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":340:13)
#loc144 = loc("/usr/include/stdlib.h":575:1)
#loc145 = loc("/usr/include/stdlib.h":575:41)
#loc146 = loc("/usr/include/time.h":76:1)
#loc147 = loc("/usr/include/time.h":76:38)
#loc148 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc149 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc150 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":357:15)
#loc151 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":359:15)
#loc152 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":362:15)
#loc153 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":364:15)
#loc154 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":352:1)
#loc155 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":367:1)
#loc160 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":353:1)
#loc161 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":355:27)
#loc162 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":355:22)
#loc163 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":355:5)
#loc164 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":357:5)
#loc165 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":358:5)
#loc166 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":358:67)
#loc167 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":359:5)
#loc168 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":362:5)
#loc169 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":363:5)
#loc170 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":363:66)
#loc171 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":364:5)
#loc172 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":366:12)
#loc173 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":366:5)
#loc174 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":130:1)
#loc175 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":130:29)
#loc176 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":140:19)
#loc177 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":154:27)
#loc178 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":135:1)
#loc179 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":158:1)
#loc182 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":136:1)
#loc183 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":137:5)
#loc184 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":157:5)
#loc185 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":137:8)
#loc186 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":138:5)
#loc187 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":141:5)
#loc188 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":143:5)
#loc189 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":140:9)
#loc190 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":144:9)
#loc191 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":156:9)
#loc192 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":144:12)
#loc193 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":144:19)
#loc194 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":145:9)
#loc195 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":147:13)
#loc196 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":155:13)
#loc197 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":147:17)
#loc198 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":147:25)
#loc199 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":147:33)
#loc200 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":147:34)
#loc201 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":148:13)
#loc202 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":151:13)
#loc203 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":153:13)
#loc204 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":149:17)
#loc205 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":149:37)
#loc206 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":149:30)
#loc207 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":150:30)
#loc208 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":150:17)
#loc209 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":154:17)
#loc210 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":160:1)
#loc211 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":223:1)
#loc212 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":162:5)
#loc213 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":162:9)
#loc214 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":164:12)
#loc215 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":164:5)
#loc216 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":165:5)
#loc217 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":220:5)
#loc218 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":170:9)
#loc219 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":170:13)
#loc220 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":171:9)
#loc221 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":171:28)
#loc222 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":172:9)
#loc223 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":172:32)
#loc224 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":173:9)
#loc225 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":173:41)
#loc226 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":174:9)
#loc227 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":209:17)
#loc228 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":184:36)
#loc229 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":184:45)
#loc230 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":184:58)
#loc231 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":184:29)
#loc232 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":184:13)
#loc233 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":184:69)
#loc234 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":185:13)
#loc235 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":188:13)
#loc236 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":185:17)
#loc237 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":185:34)
#loc238 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":186:13)
#loc239 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":187:17)
#loc240 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":189:20)
#loc241 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":189:21)
#loc242 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":189:30)
#loc243 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":189:33)
#loc244 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":189:47)
#loc245 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":189:13)
#loc246 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":189:48)
#loc247 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":190:34)
#loc248 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":190:13)
#loc249 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":191:49)
#loc250 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":191:39)
#loc251 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":191:13)
#loc252 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":191:59)
#loc253 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":192:38)
#loc254 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":192:32)
#loc255 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":192:13)
#loc256 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":192:46)
#loc257 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":193:13)
#loc258 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":196:13)
#loc259 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":193:25)
#loc260 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":193:58)
#loc261 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":193:59)
#loc262 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":193:68)
#loc263 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":193:82)
#loc264 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":193:17)
#loc265 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":193:88)
#loc266 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":194:13)
#loc267 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":195:17)
#loc268 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":199:31)
#loc269 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":199:46)
#loc270 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":199:59)
#loc271 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":199:77)
#loc272 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":199:80)
#loc273 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":199:26)
#loc274 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":199:13)
#loc275 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":199:81)
#loc276 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":200:13)
#loc277 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":203:13)
#loc278 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":200:17)
#loc279 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":200:31)
#loc280 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":200:44)
#loc281 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":200:47)
#loc282 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":200:61)
#loc283 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":201:13)
#loc284 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":202:17)
#loc285 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":205:39)
#loc286 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":205:25)
#loc287 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":205:13)
#loc288 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":207:25)
#loc289 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":207:20)
#loc290 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":207:13)
#loc291 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":207:36)
#loc292 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":209:16)
#loc293 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":210:9)
#loc294 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":213:9)
#loc295 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":210:13)
#loc296 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":210:30)
#loc297 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":211:9)
#loc298 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":212:26)
#loc299 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":212:13)
#loc300 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":221:22)
#loc301 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":221:5)
#loc302 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":222:18)
#loc303 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":222:5)
#loc304 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":131:1)
#loc305 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":131:29)
#loc306 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":226:1)
#loc307 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":244:1)
#loc310 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":227:1)
#loc311 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":228:5)
#loc312 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":243:5)
#loc313 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":228:8)
#loc314 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":229:5)
#loc315 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":230:9)
#loc316 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":242:9)
#loc317 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":230:12)
#loc318 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":230:19)
#loc319 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":231:9)
#loc320 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":233:13)
#loc321 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":241:13)
#loc322 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":233:17)
#loc323 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":233:25)
#loc324 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":233:33)
#loc325 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":233:34)
#loc326 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":234:13)
#loc327 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":237:13)
#loc328 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":239:13)
#loc329 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":235:17)
#loc330 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":235:37)
#loc331 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":235:30)
#loc332 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":236:30)
#loc333 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":236:17)
#loc334 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":240:27)
#loc335 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":240:17)
#loc336 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":246:1)
#loc337 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":309:1)
#loc338 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":248:5)
#loc339 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":248:9)
#loc340 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":250:12)
#loc341 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":250:5)
#loc342 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":251:5)
#loc343 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":306:5)
#loc344 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":256:9)
#loc345 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":256:13)
#loc346 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":257:9)
#loc347 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":257:28)
#loc348 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":258:9)
#loc349 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":258:32)
#loc350 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":259:9)
#loc351 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":259:41)
#loc352 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":260:9)
#loc353 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":295:17)
#loc354 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":270:36)
#loc355 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":270:45)
#loc356 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":270:58)
#loc357 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":270:29)
#loc358 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":270:13)
#loc359 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":270:69)
#loc360 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":271:13)
#loc361 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":274:13)
#loc362 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":271:17)
#loc363 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":271:34)
#loc364 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":272:13)
#loc365 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":273:17)
#loc366 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":275:20)
#loc367 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":275:21)
#loc368 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":275:30)
#loc369 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":275:33)
#loc370 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":275:47)
#loc371 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":275:13)
#loc372 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":275:48)
#loc373 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":276:34)
#loc374 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":276:13)
#loc375 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":277:49)
#loc376 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":277:39)
#loc377 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":277:13)
#loc378 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":277:59)
#loc379 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":278:38)
#loc380 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":278:32)
#loc381 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":278:13)
#loc382 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":278:46)
#loc383 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":279:13)
#loc384 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":282:13)
#loc385 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":279:25)
#loc386 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":279:58)
#loc387 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":279:59)
#loc388 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":279:68)
#loc389 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":279:82)
#loc390 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":279:17)
#loc391 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":279:88)
#loc392 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":280:13)
#loc393 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":281:17)
#loc394 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":285:31)
#loc395 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":285:46)
#loc396 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":285:59)
#loc397 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":285:77)
#loc398 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":285:80)
#loc399 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":285:26)
#loc400 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":285:13)
#loc401 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":285:81)
#loc402 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":286:13)
#loc403 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":289:13)
#loc404 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":286:17)
#loc405 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":286:31)
#loc406 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":286:44)
#loc407 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":286:47)
#loc408 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":286:61)
#loc409 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":287:13)
#loc410 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":288:17)
#loc411 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":291:39)
#loc412 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":291:25)
#loc413 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":291:13)
#loc414 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":293:25)
#loc415 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":293:20)
#loc416 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":293:13)
#loc417 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":293:36)
#loc418 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":295:16)
#loc419 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":296:9)
#loc420 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":299:9)
#loc421 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":296:13)
#loc422 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":296:30)
#loc423 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":297:9)
#loc424 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":298:26)
#loc425 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":298:13)
#loc426 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":307:22)
#loc427 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":307:5)
#loc428 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":308:18)
#loc429 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":308:5)
#loc430 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":132:1)
#loc431 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":132:28)
#loc432 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":312:1)
#loc433 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":323:1)
#loc436 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":313:1)
#loc437 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":314:5)
#loc438 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":322:5)
#loc439 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":314:8)
#loc440 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":315:5)
#loc441 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":316:9)
#loc442 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":321:9)
#loc443 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":316:12)
#loc444 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":316:19)
#loc445 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":317:9)
#loc446 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":319:13)
#loc447 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":319:33)
#loc448 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":319:26)
#loc449 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":320:26)
#loc450 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":320:13)
#loc451 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":325:1)
#loc452 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":334:1)
#loc453 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":327:5)
#loc454 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":327:9)
#loc455 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":329:12)
#loc456 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":329:5)
#loc457 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":331:13)
#loc458 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":331:12)
#loc459 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":331:5)
#loc460 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":332:21)
#loc461 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":332:5)
#loc462 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":333:17)
#loc463 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_21.c":333:5)
#loc464 = loc(fused[#loc1, #loc2])
#loc465 = loc(fused[#loc3, #loc4])
#loc466 = loc(fused[#loc6, #loc7])
#loc467 = loc(fused[#loc8, #loc9])
#loc468 = loc(fused[#loc10, #loc11])
#loc469 = loc(fused[#loc12, #loc13])
#loc470 = loc(fused[#loc14, #loc15])
#loc471 = loc(fused[#loc16, #loc17])
#loc472 = loc(fused[#loc18, #loc19])
#loc473 = loc(fused[#loc20, #loc21])
#loc475 = loc(fused[#loc25, #loc26])
#loc476 = loc(fused[#loc28, #loc26])
#loc477 = loc(fused[#loc29, #loc30])
#loc478 = loc(fused[#loc31, #loc32])
#loc479 = loc(fused[#loc33, #loc30])
#loc480 = loc(fused[#loc34, #loc35])
#loc481 = loc(fused[#loc39, #loc40])
#loc482 = loc(fused[#loc41, #loc42])
#loc483 = loc(fused[#loc44, #loc43])
#loc484 = loc(fused[#loc45, #loc46])
#loc485 = loc(fused[#loc47, #loc48])
#loc486 = loc(fused[#loc49, #loc50])
#loc487 = loc(fused[#loc51, #loc52])
#loc488 = loc(fused[#loc53, #loc54])
#loc489 = loc(fused[#loc55, #loc56])
#loc490 = loc(fused[#loc61, #loc62])
#loc491 = loc(fused[#loc63, #loc64])
#loc492 = loc(fused[#loc65, #loc66])
#loc493 = loc(fused[#loc67, #loc64])
#loc494 = loc(fused[#loc69, #loc70])
#loc495 = loc(fused[#loc72, #loc73])
#loc496 = loc(fused[#loc74, #loc75])
#loc497 = loc(fused[#loc78, #loc76])
#loc498 = loc(fused[#loc82, #loc83])
#loc499 = loc(fused[#loc87, #loc88])
#loc500 = loc(fused[#loc89, #loc90])
#loc501 = loc(fused[#loc92, #loc93])
#loc502 = loc(fused[#loc94, #loc95])
#loc503 = loc(fused[#loc96, #loc97])
#loc504 = loc(fused[#loc98, #loc90])
#loc505 = loc(fused[#loc102, #loc103])
#loc506 = loc(fused[#loc106, #loc107])
#loc507 = loc(fused[#loc108, #loc109])
#loc508 = loc(fused[#loc110, #loc111])
#loc509 = loc(fused[#loc113, #loc114])
#loc510 = loc(fused[#loc115, #loc109])
#loc511 = loc(fused[#loc119, #loc117])
#loc512 = loc(fused[#loc122, #loc123])
#loc513 = loc(fused[#loc125, #loc126])
#loc514 = loc(fused[#loc127, #loc128])
#loc515 = loc(fused[#loc129, #loc126])
#loc516 = loc(fused[#loc133, #loc132])
#loc517 = loc(fused[#loc136, #loc137])
#loc518 = loc(fused[#loc138, #loc139])
#loc519 = loc(fused[#loc140, #loc141])
#loc520 = loc(fused[#loc142, #loc143])
#loc521 = loc(fused[#loc144, #loc145])
#loc522 = loc(fused[#loc146, #loc147])
#loc523 = loc(fused[#loc148, #loc149])
#loc524 = loc(fused[#loc154, #loc155])
#loc527 = loc(fused[#loc165, #loc166])
#loc528 = loc(fused[#loc169, #loc170])
#loc529 = loc(fused[#loc173, #loc172])
#loc530 = loc(fused[#loc174, #loc175])
#loc531 = loc(fused[#loc178, #loc179])
#loc533 = loc(fused[#loc183, #loc184])
#loc534 = loc(fused[#loc186, #loc187, #loc188, #loc184])
#loc535 = loc(fused[#loc190, #loc191])
#loc536 = loc(fused[#loc192, #loc193])
#loc537 = loc(fused[#loc194, #loc191])
#loc538 = loc(fused[#loc195, #loc196])
#loc539 = loc(fused[#loc198, #loc199])
#loc540 = loc(fused[#loc197, #loc200])
#loc541 = loc(fused[#loc201, #loc202, #loc203, #loc196])
#loc542 = loc(fused[#loc204, #loc205])
#loc543 = loc(fused[#loc210, #loc211])
#loc544 = loc(fused[#loc212, #loc213])
#loc545 = loc(fused[#loc215, #loc214])
#loc546 = loc(fused[#loc216, #loc217])
#loc547 = loc(fused[#loc218, #loc219])
#loc548 = loc(fused[#loc220, #loc221])
#loc549 = loc(fused[#loc222, #loc223])
#loc550 = loc(fused[#loc224, #loc225])
#loc551 = loc(fused[#loc226, #loc227])
#loc552 = loc(fused[#loc232, #loc233])
#loc553 = loc(fused[#loc234, #loc235])
#loc554 = loc(fused[#loc236, #loc237])
#loc555 = loc(fused[#loc238, #loc235])
#loc556 = loc(fused[#loc240, #loc241])
#loc557 = loc(fused[#loc243, #loc244])
#loc558 = loc(fused[#loc245, #loc246])
#loc559 = loc(fused[#loc248, #loc247])
#loc560 = loc(fused[#loc251, #loc252])
#loc561 = loc(fused[#loc255, #loc256])
#loc562 = loc(fused[#loc257, #loc258])
#loc563 = loc(fused[#loc260, #loc261])
#loc564 = loc(fused[#loc262, #loc263])
#loc565 = loc(fused[#loc264, #loc265])
#loc566 = loc(fused[#loc266, #loc258])
#loc567 = loc(fused[#loc270, #loc271])
#loc568 = loc(fused[#loc274, #loc275])
#loc569 = loc(fused[#loc276, #loc277])
#loc570 = loc(fused[#loc278, #loc279])
#loc571 = loc(fused[#loc281, #loc282])
#loc572 = loc(fused[#loc283, #loc277])
#loc573 = loc(fused[#loc287, #loc285])
#loc574 = loc(fused[#loc290, #loc291])
#loc575 = loc(fused[#loc293, #loc294])
#loc576 = loc(fused[#loc295, #loc296])
#loc577 = loc(fused[#loc297, #loc294])
#loc578 = loc(fused[#loc301, #loc300])
#loc579 = loc(fused[#loc304, #loc305])
#loc580 = loc(fused[#loc306, #loc307])
#loc582 = loc(fused[#loc311, #loc312])
#loc583 = loc(fused[#loc314, #loc312])
#loc584 = loc(fused[#loc315, #loc316])
#loc585 = loc(fused[#loc317, #loc318])
#loc586 = loc(fused[#loc319, #loc316])
#loc587 = loc(fused[#loc320, #loc321])
#loc588 = loc(fused[#loc323, #loc324])
#loc589 = loc(fused[#loc322, #loc325])
#loc590 = loc(fused[#loc326, #loc327, #loc328, #loc321])
#loc591 = loc(fused[#loc329, #loc330])
#loc592 = loc(fused[#loc336, #loc337])
#loc593 = loc(fused[#loc338, #loc339])
#loc594 = loc(fused[#loc341, #loc340])
#loc595 = loc(fused[#loc342, #loc343])
#loc596 = loc(fused[#loc344, #loc345])
#loc597 = loc(fused[#loc346, #loc347])
#loc598 = loc(fused[#loc348, #loc349])
#loc599 = loc(fused[#loc350, #loc351])
#loc600 = loc(fused[#loc352, #loc353])
#loc601 = loc(fused[#loc358, #loc359])
#loc602 = loc(fused[#loc360, #loc361])
#loc603 = loc(fused[#loc362, #loc363])
#loc604 = loc(fused[#loc364, #loc361])
#loc605 = loc(fused[#loc366, #loc367])
#loc606 = loc(fused[#loc369, #loc370])
#loc607 = loc(fused[#loc371, #loc372])
#loc608 = loc(fused[#loc374, #loc373])
#loc609 = loc(fused[#loc377, #loc378])
#loc610 = loc(fused[#loc381, #loc382])
#loc611 = loc(fused[#loc383, #loc384])
#loc612 = loc(fused[#loc386, #loc387])
#loc613 = loc(fused[#loc388, #loc389])
#loc614 = loc(fused[#loc390, #loc391])
#loc615 = loc(fused[#loc392, #loc384])
#loc616 = loc(fused[#loc396, #loc397])
#loc617 = loc(fused[#loc400, #loc401])
#loc618 = loc(fused[#loc402, #loc403])
#loc619 = loc(fused[#loc404, #loc405])
#loc620 = loc(fused[#loc407, #loc408])
#loc621 = loc(fused[#loc409, #loc403])
#loc622 = loc(fused[#loc413, #loc411])
#loc623 = loc(fused[#loc416, #loc417])
#loc624 = loc(fused[#loc419, #loc420])
#loc625 = loc(fused[#loc421, #loc422])
#loc626 = loc(fused[#loc423, #loc420])
#loc627 = loc(fused[#loc427, #loc426])
#loc628 = loc(fused[#loc430, #loc431])
#loc629 = loc(fused[#loc432, #loc433])
#loc631 = loc(fused[#loc437, #loc438])
#loc632 = loc(fused[#loc440, #loc438])
#loc633 = loc(fused[#loc441, #loc442])
#loc634 = loc(fused[#loc443, #loc444])
#loc635 = loc(fused[#loc445, #loc442])
#loc636 = loc(fused[#loc446, #loc447])
#loc637 = loc(fused[#loc451, #loc452])
#loc638 = loc(fused[#loc453, #loc454])
#loc639 = loc(fused[#loc456, #loc455])
#loc640 = loc(fused[#loc459, #loc457])
#loc641 = loc(fused[#loc461, #loc460])
