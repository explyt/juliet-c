!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc7 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":25:21)
#loc8 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":25:29)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":160:10)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":160:14)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":160:20)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":160:32)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":58:26)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":58:34)
#loc118 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":92:26)
#loc119 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":92:34)
#loc156 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":121:25)
#loc157 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":121:33)
#loc187 = loc(fused[#loc7, #loc8])
#loc206 = loc(fused[#loc54, #loc55])
#loc207 = loc(fused[#loc56, #loc57])
#loc213 = loc(fused[#loc78, #loc79])
#loc228 = loc(fused[#loc118, #loc119])
#loc243 = loc(fused[#loc156, #loc157])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__int64_t_min_predec_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc184)
  cir.func private @printLongLongLine(!s64i) loc(#loc185)
  cir.func internal private @badSink(%arg0: !s64i loc(fused[#loc7, #loc8])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc187)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc9)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc184)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc12)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc12)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc191)
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc18)
          %6 = cir.unary(dec, %5) : !s64i, !s64i loc(#loc18)
          cir.store %6, %0 : !s64i, !cir.ptr<!s64i> loc(#loc192)
          %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc17)
          cir.store %7, %4 : !s64i, !cir.ptr<!s64i> loc(#loc191)
          %8 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc20)
          cir.call @printLongLongLine(%8) : (!s64i) -> () loc(#loc21)
        } loc(#loc190)
      } loc(#loc189)
    } loc(#loc188)
    cir.return loc(#loc6)
  } loc(#loc186)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_min_predec_21_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc194)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc26)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc195)
    %2 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc28)
    %3 = cir.unary(minus, %2) : !s64i, !s64i loc(#loc28)
    %4 = cir.const #cir.int<1> : !s64i loc(#loc28)
    %5 = cir.binop(sub, %3, %4) nsw : !s64i loc(#loc28)
    cir.store %5, %0 : !s64i, !cir.ptr<!s64i> loc(#loc196)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %7 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc184)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc32)
    cir.call @badSink(%8) : (!s64i) -> () loc(#loc33)
    cir.return loc(#loc23)
  } loc(#loc193)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_min_predec_21_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc200)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc35)
  } loc(#loc198)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc202)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc203)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc51)
  cir.func @main(%arg0: !s32i loc(fused[#loc54, #loc55]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc56, #loc57])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc206)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc207)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc53)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc58)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc58)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc59)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc60)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc60)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc61)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc48)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %8 = cir.get_global @CWE191_Integer_Underflow__int64_t_min_predec_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc208)
    cir.call @CWE191_Integer_Underflow__int64_t_min_predec_21_good() : () -> () loc(#loc63)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc49)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc50)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %13 = cir.get_global @CWE191_Integer_Underflow__int64_t_min_predec_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc209)
    cir.call @CWE191_Integer_Underflow__int64_t_min_predec_21_bad() : () -> () loc(#loc67)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc51)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc70)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    cir.return %17 : !s32i loc(#loc210)
  } loc(#loc205)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc211)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc75)
  cir.func internal private @goodB2G1Sink(%arg0: !s64i loc(fused[#loc78, #loc79])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc213)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc80)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc211)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc83)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc83)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc74)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc74)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc87)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc90)
          %5 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc91)
          %6 = cir.unary(minus, %5) : !s64i, !s64i loc(#loc91)
          %7 = cir.const #cir.int<1> : !s64i loc(#loc91)
          %8 = cir.binop(sub, %6, %7) nsw : !s64i loc(#loc91)
          %9 = cir.cmp(gt, %4, %8) : !s64i, !cir.bool loc(#loc217)
          cir.if %9 {
            %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc219)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc97)
            %12 = cir.unary(dec, %11) : !s64i, !s64i loc(#loc97)
            cir.store %12, %0 : !s64i, !cir.ptr<!s64i> loc(#loc220)
            %13 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc96)
            cir.store %13, %10 : !s64i, !cir.ptr<!s64i> loc(#loc219)
            %14 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc99)
            cir.call @printLongLongLine(%14) : (!s64i) -> () loc(#loc100)
          } else {
            %10 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc75)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc75)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc101)
          } loc(#loc218)
        } loc(#loc216)
      } loc(#loc215)
    } loc(#loc214)
    cir.return loc(#loc77)
  } loc(#loc212)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc222)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc106)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc223)
    %2 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc108)
    %3 = cir.unary(minus, %2) : !s64i, !s64i loc(#loc108)
    %4 = cir.const #cir.int<1> : !s64i loc(#loc108)
    %5 = cir.binop(sub, %3, %4) nsw : !s64i loc(#loc108)
    cir.store %5, %0 : !s64i, !cir.ptr<!s64i> loc(#loc224)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %7 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc211)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc112)
    cir.call @goodB2G1Sink(%8) : (!s64i) -> () loc(#loc113)
    cir.return loc(#loc103)
  } loc(#loc221)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc226)
  cir.func internal private @goodB2G2Sink(%arg0: !s64i loc(fused[#loc118, #loc119])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc228)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc120)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc226)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc123)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc123)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc127)
          %5 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc128)
          %6 = cir.unary(minus, %5) : !s64i, !s64i loc(#loc128)
          %7 = cir.const #cir.int<1> : !s64i loc(#loc128)
          %8 = cir.binop(sub, %6, %7) nsw : !s64i loc(#loc128)
          %9 = cir.cmp(gt, %4, %8) : !s64i, !cir.bool loc(#loc232)
          cir.if %9 {
            %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc234)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc134)
            %12 = cir.unary(dec, %11) : !s64i, !s64i loc(#loc134)
            cir.store %12, %0 : !s64i, !cir.ptr<!s64i> loc(#loc235)
            %13 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc133)
            cir.store %13, %10 : !s64i, !cir.ptr<!s64i> loc(#loc234)
            %14 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc136)
            cir.call @printLongLongLine(%14) : (!s64i) -> () loc(#loc137)
          } else {
            %10 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc138)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc138)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc139)
          } loc(#loc233)
        } loc(#loc231)
      } loc(#loc230)
    } loc(#loc229)
    cir.return loc(#loc117)
  } loc(#loc227)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc237)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc144)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc238)
    %2 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc146)
    %3 = cir.unary(minus, %2) : !s64i, !s64i loc(#loc146)
    %4 = cir.const #cir.int<1> : !s64i loc(#loc146)
    %5 = cir.binop(sub, %3, %4) nsw : !s64i loc(#loc146)
    cir.store %5, %0 : !s64i, !cir.ptr<!s64i> loc(#loc239)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %7 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc226)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc150)
    cir.call @goodB2G2Sink(%8) : (!s64i) -> () loc(#loc151)
    cir.return loc(#loc141)
  } loc(#loc236)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc241)
  cir.func internal private @goodG2BSink(%arg0: !s64i loc(fused[#loc156, #loc157])) extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc243)
    cir.store %arg0, %0 : !s64i, !cir.ptr<!s64i> loc(#loc158)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc241)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc161)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc161)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc247)
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc167)
          %6 = cir.unary(dec, %5) : !s64i, !s64i loc(#loc167)
          cir.store %6, %0 : !s64i, !cir.ptr<!s64i> loc(#loc248)
          %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc166)
          cir.store %7, %4 : !s64i, !cir.ptr<!s64i> loc(#loc247)
          %8 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc169)
          cir.call @printLongLongLine(%8) : (!s64i) -> () loc(#loc170)
        } loc(#loc246)
      } loc(#loc245)
    } loc(#loc244)
    cir.return loc(#loc155)
  } loc(#loc242)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc250)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc175)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc251)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc177)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc178)
    %4 = cir.cast(integral, %3 : !s32i), !s64i loc(#loc178)
    cir.store %4, %0 : !s64i, !cir.ptr<!s64i> loc(#loc252)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %6 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc241)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc253)
    %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc182)
    cir.call @goodG2BSink(%7) : (!s64i) -> () loc(#loc183)
    cir.return loc(#loc172)
  } loc(#loc249)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__int64_t_min_predec_21.c":0:0)
#loc1 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":23:1)
#loc2 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":23:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc5 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":25:1)
#loc6 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":36:1)
#loc9 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":26:1)
#loc10 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":27:5)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":35:5)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":27:8)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":28:5)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":29:9)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":34:9)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":32:13)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":32:30)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":31:13)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":31:15)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":33:31)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":33:13)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":38:1)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":46:1)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":40:5)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":40:13)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":41:12)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":41:5)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":43:12)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":43:5)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":44:17)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":44:5)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":45:13)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":45:5)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":144:1)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":149:1)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":146:5)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":146:14)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":147:5)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":147:14)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":148:5)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":148:13)
#loc42 = loc("/usr/include/stdlib.h":575:1)
#loc43 = loc("/usr/include/stdlib.h":575:41)
#loc44 = loc("/usr/include/time.h":76:1)
#loc45 = loc("/usr/include/time.h":76:38)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":165:15)
#loc49 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":167:15)
#loc50 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":170:15)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":172:15)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":160:1)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":175:1)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":161:1)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":163:27)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":163:22)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":163:5)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":165:5)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":166:5)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":166:58)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":167:5)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":170:5)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":171:5)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":171:57)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":172:5)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":174:12)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":174:5)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":53:1)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":53:29)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":63:19)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":76:23)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":58:1)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":79:1)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":59:1)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":60:5)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":78:5)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":60:8)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":61:5)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":64:5)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":66:5)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":63:9)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":68:9)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":77:9)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":68:13)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":68:20)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":69:9)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":73:9)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":75:9)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":71:13)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":71:30)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":70:13)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":70:15)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":72:31)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":72:13)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":76:13)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":81:1)
#loc103 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":89:1)
#loc104 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":83:5)
#loc105 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":83:13)
#loc106 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":84:12)
#loc107 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":84:5)
#loc108 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":86:12)
#loc109 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":86:5)
#loc110 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":87:22)
#loc111 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":87:5)
#loc112 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":88:18)
#loc113 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":88:5)
#loc114 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":54:1)
#loc115 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":54:29)
#loc116 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":92:1)
#loc117 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":108:1)
#loc120 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":93:1)
#loc121 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":94:5)
#loc122 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":107:5)
#loc123 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":94:8)
#loc124 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":95:5)
#loc125 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":97:9)
#loc126 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":106:9)
#loc127 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":97:13)
#loc128 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":97:20)
#loc129 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":98:9)
#loc130 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":102:9)
#loc131 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":104:9)
#loc132 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":100:13)
#loc133 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":100:30)
#loc134 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":99:13)
#loc135 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":99:15)
#loc136 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":101:31)
#loc137 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":101:13)
#loc138 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":105:23)
#loc139 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":105:13)
#loc140 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":110:1)
#loc141 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":118:1)
#loc142 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":112:5)
#loc143 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":112:13)
#loc144 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":113:12)
#loc145 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":113:5)
#loc146 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":115:12)
#loc147 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":115:5)
#loc148 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":116:22)
#loc149 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":116:5)
#loc150 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":117:18)
#loc151 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":117:5)
#loc152 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":55:1)
#loc153 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":55:28)
#loc154 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":121:1)
#loc155 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":132:1)
#loc158 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":122:1)
#loc159 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":123:5)
#loc160 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":131:5)
#loc161 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":123:8)
#loc162 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":124:5)
#loc163 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":125:9)
#loc164 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":130:9)
#loc165 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":128:13)
#loc166 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":128:30)
#loc167 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":127:13)
#loc168 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":127:15)
#loc169 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":129:31)
#loc170 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":129:13)
#loc171 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":134:1)
#loc172 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":142:1)
#loc173 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":136:5)
#loc174 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":136:13)
#loc175 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":137:12)
#loc176 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":137:5)
#loc177 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":139:13)
#loc178 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":139:12)
#loc179 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":139:5)
#loc180 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":140:21)
#loc181 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":140:5)
#loc182 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":141:17)
#loc183 = loc("CWE191_Integer_Underflow__int64_t_min_predec_21.c":141:5)
#loc184 = loc(fused[#loc1, #loc2])
#loc185 = loc(fused[#loc3, #loc4])
#loc186 = loc(fused[#loc5, #loc6])
#loc188 = loc(fused[#loc10, #loc11])
#loc189 = loc(fused[#loc13, #loc11])
#loc190 = loc(fused[#loc14, #loc15])
#loc191 = loc(fused[#loc16, #loc17])
#loc192 = loc(fused[#loc18, #loc19])
#loc193 = loc(fused[#loc22, #loc23])
#loc194 = loc(fused[#loc24, #loc25])
#loc195 = loc(fused[#loc27, #loc26])
#loc196 = loc(fused[#loc29, #loc28])
#loc197 = loc(fused[#loc31, #loc30])
#loc198 = loc(fused[#loc34, #loc35])
#loc199 = loc(fused[#loc36, #loc37])
#loc200 = loc(fused[#loc38, #loc39])
#loc201 = loc(fused[#loc40, #loc41])
#loc202 = loc(fused[#loc42, #loc43])
#loc203 = loc(fused[#loc44, #loc45])
#loc204 = loc(fused[#loc46, #loc47])
#loc205 = loc(fused[#loc52, #loc53])
#loc208 = loc(fused[#loc63, #loc64])
#loc209 = loc(fused[#loc67, #loc68])
#loc210 = loc(fused[#loc71, #loc70])
#loc211 = loc(fused[#loc72, #loc73])
#loc212 = loc(fused[#loc76, #loc77])
#loc214 = loc(fused[#loc81, #loc82])
#loc215 = loc(fused[#loc84, #loc85, #loc86, #loc82])
#loc216 = loc(fused[#loc88, #loc89])
#loc217 = loc(fused[#loc90, #loc91])
#loc218 = loc(fused[#loc92, #loc93, #loc94, #loc89])
#loc219 = loc(fused[#loc95, #loc96])
#loc220 = loc(fused[#loc97, #loc98])
#loc221 = loc(fused[#loc102, #loc103])
#loc222 = loc(fused[#loc104, #loc105])
#loc223 = loc(fused[#loc107, #loc106])
#loc224 = loc(fused[#loc109, #loc108])
#loc225 = loc(fused[#loc111, #loc110])
#loc226 = loc(fused[#loc114, #loc115])
#loc227 = loc(fused[#loc116, #loc117])
#loc229 = loc(fused[#loc121, #loc122])
#loc230 = loc(fused[#loc124, #loc122])
#loc231 = loc(fused[#loc125, #loc126])
#loc232 = loc(fused[#loc127, #loc128])
#loc233 = loc(fused[#loc129, #loc130, #loc131, #loc126])
#loc234 = loc(fused[#loc132, #loc133])
#loc235 = loc(fused[#loc134, #loc135])
#loc236 = loc(fused[#loc140, #loc141])
#loc237 = loc(fused[#loc142, #loc143])
#loc238 = loc(fused[#loc145, #loc144])
#loc239 = loc(fused[#loc147, #loc146])
#loc240 = loc(fused[#loc149, #loc148])
#loc241 = loc(fused[#loc152, #loc153])
#loc242 = loc(fused[#loc154, #loc155])
#loc244 = loc(fused[#loc159, #loc160])
#loc245 = loc(fused[#loc162, #loc160])
#loc246 = loc(fused[#loc163, #loc164])
#loc247 = loc(fused[#loc165, #loc166])
#loc248 = loc(fused[#loc167, #loc168])
#loc249 = loc(fused[#loc171, #loc172])
#loc250 = loc(fused[#loc173, #loc174])
#loc251 = loc(fused[#loc176, #loc175])
#loc252 = loc(fused[#loc179, #loc177])
#loc253 = loc(fused[#loc181, #loc180])
