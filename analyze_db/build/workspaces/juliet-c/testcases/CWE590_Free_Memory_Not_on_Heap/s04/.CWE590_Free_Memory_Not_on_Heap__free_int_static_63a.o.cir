!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_int_static_63_bad.dataBuffer = #cir.zero : !cir.array<!s32i x 100> {alignment = 16 : i64} loc(#loc1)
  cir.func private @CWE590_Free_Memory_Not_on_Heap__free_int_static_63b_badSink(!cir.ptr<!cir.ptr<!s32i>>) loc(#loc88)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_int_static_63_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc90)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc8)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc91)
    cir.scope {
      %2 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_int_static_63_bad.dataBuffer : !cir.ptr<!cir.array<!s32i x 100>> loc(#loc1)
      cir.scope {
        %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc94)
        cir.scope {
          %5 = cir.const #cir.int<0> : !s32i loc(#loc18)
          %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc18)
          cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc96)
          cir.for : cond {
            %7 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc20)
            %8 = cir.const #cir.int<100> : !s32i loc(#loc21)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc21)
            %10 = cir.cmp(lt, %7, %9) : !u64i, !cir.bool loc(#loc97)
            cir.condition(%10) loc(#loc22)
          } body {
            cir.scope {
              %7 = cir.const #cir.int<5> : !s32i loc(#loc24)
              %8 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc25)
              %9 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc26)
              %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !u64i), !cir.ptr<!s32i> loc(#loc26)
              cir.store %7, %10 : !s32i, !cir.ptr<!s32i> loc(#loc99)
            } loc(#loc98)
            cir.yield loc(#loc17)
          } step {
            %7 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc27)
            %8 = cir.unary(inc, %7) : !u64i, !u64i loc(#loc28)
            cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc100)
            cir.yield loc(#loc95)
          } loc(#loc95)
        } loc(#loc95)
      } loc(#loc93)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc29)
      cir.store %3, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc101)
    } loc(#loc92)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_int_static_63b_badSink(%0) : (!cir.ptr<!cir.ptr<!s32i>>) -> () loc(#loc31)
    cir.return loc(#loc5)
  } loc(#loc89)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_int_static_63_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc103)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc34)
    cir.return loc(#loc33)
  } loc(#loc102)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc104)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc40)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc106)
  cir.func private @CWE590_Free_Memory_Not_on_Heap__free_int_static_63b_goodG2BSink(!cir.ptr<!cir.ptr<!s32i>>) loc(#loc107)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc49)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc110)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc112)
      %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc55)
      %4 = cir.const #cir.int<100> : !s32i loc(#loc56)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc56)
      %6 = cir.const #cir.int<4> : !u64i loc(#loc113)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc114)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc55)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc115)
      cir.store %9, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc112)
      cir.scope {
        %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc62)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc62)
        %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc117)
        cir.if %14 {
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc40)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc40)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc64)
          %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc65)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc66)
          cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr1) loc(#loc65)
        } loc(#loc118)
      } loc(#loc116)
      cir.scope {
        %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc120)
        cir.scope {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc73)
          %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc73)
          cir.store %13, %11 : !u64i, !cir.ptr<!u64i> loc(#loc122)
          cir.for : cond {
            %14 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc75)
            %15 = cir.const #cir.int<100> : !s32i loc(#loc76)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc76)
            %17 = cir.cmp(lt, %14, %16) : !u64i, !cir.bool loc(#loc123)
            cir.condition(%17) loc(#loc77)
          } body {
            cir.scope {
              %14 = cir.const #cir.int<5> : !s32i loc(#loc79)
              %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc80)
              %16 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc81)
              %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !u64i), !cir.ptr<!s32i> loc(#loc82)
              cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc125)
            } loc(#loc124)
            cir.yield loc(#loc72)
          } step {
            %14 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc83)
            %15 = cir.unary(inc, %14) : !u64i, !u64i loc(#loc84)
            cir.store %15, %11 : !u64i, !cir.ptr<!u64i> loc(#loc126)
            cir.yield loc(#loc121)
          } loc(#loc121)
        } loc(#loc121)
      } loc(#loc119)
      %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
      cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc127)
    } loc(#loc111)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_int_static_63b_goodG2BSink(%0) : (!cir.ptr<!cir.ptr<!s32i>>) -> () loc(#loc87)
    cir.return loc(#loc46)
  } loc(#loc108)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":32:20)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":24:1)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":24:81)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":26:1)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":43:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":28:5)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":28:11)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":29:12)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":29:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":30:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":41:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":33:9)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":39:9)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":34:13)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":34:20)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":35:13)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":38:13)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":35:22)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":35:18)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":35:25)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":35:29)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":35:27)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":36:13)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":37:33)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":37:28)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":37:17)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":35:35)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":35:34)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":40:16)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":40:9)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":42:5)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":76:1)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":79:1)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":78:5)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":78:13)
#loc36 = loc("/usr/include/stdlib.h":672:1)
#loc37 = loc("/usr/include/stdlib.h":672:45)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":61:23)
#loc41 = loc("/usr/include/stdlib.h":756:1)
#loc42 = loc("/usr/include/stdlib.h":756:70)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":50:1)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":50:82)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":52:1)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":74:1)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":54:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":54:11)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":55:12)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":55:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":56:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":72:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":58:9)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":58:57)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":58:35)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":58:42)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":58:46)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":58:56)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":59:9)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":63:9)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":59:13)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":59:27)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":60:9)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":61:13)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":62:13)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":62:18)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":64:9)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":70:9)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":65:13)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":65:20)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":66:13)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":69:13)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":66:22)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":66:18)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":66:25)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":66:29)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":66:27)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":67:13)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":68:33)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":68:17)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":68:28)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":68:29)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":66:35)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":66:34)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":71:16)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":71:9)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_63a.c":73:5)
#loc88 = loc(fused[#loc2, #loc3])
#loc89 = loc(fused[#loc4, #loc5])
#loc90 = loc(fused[#loc6, #loc7])
#loc91 = loc(fused[#loc9, #loc8])
#loc92 = loc(fused[#loc10, #loc11])
#loc93 = loc(fused[#loc12, #loc13])
#loc94 = loc(fused[#loc14, #loc15])
#loc95 = loc(fused[#loc16, #loc17])
#loc96 = loc(fused[#loc19, #loc18])
#loc97 = loc(fused[#loc20, #loc21])
#loc98 = loc(fused[#loc23, #loc17])
#loc99 = loc(fused[#loc26, #loc24])
#loc100 = loc(fused[#loc28, #loc27])
#loc101 = loc(fused[#loc30, #loc29])
#loc102 = loc(fused[#loc32, #loc33])
#loc103 = loc(fused[#loc34, #loc35])
#loc104 = loc(fused[#loc36, #loc37])
#loc105 = loc(fused[#loc38, #loc39])
#loc106 = loc(fused[#loc41, #loc42])
#loc107 = loc(fused[#loc43, #loc44])
#loc108 = loc(fused[#loc45, #loc46])
#loc109 = loc(fused[#loc47, #loc48])
#loc110 = loc(fused[#loc50, #loc49])
#loc111 = loc(fused[#loc51, #loc52])
#loc112 = loc(fused[#loc53, #loc54])
#loc113 = loc(fused[#loc57, #loc58])
#loc114 = loc(fused[#loc56, #loc58])
#loc115 = loc(fused[#loc55, #loc54])
#loc116 = loc(fused[#loc59, #loc60])
#loc117 = loc(fused[#loc61, #loc62])
#loc118 = loc(fused[#loc63, #loc60])
#loc119 = loc(fused[#loc67, #loc68])
#loc120 = loc(fused[#loc69, #loc70])
#loc121 = loc(fused[#loc71, #loc72])
#loc122 = loc(fused[#loc74, #loc73])
#loc123 = loc(fused[#loc75, #loc76])
#loc124 = loc(fused[#loc78, #loc72])
#loc125 = loc(fused[#loc80, #loc79])
#loc126 = loc(fused[#loc84, #loc83])
#loc127 = loc(fused[#loc86, #loc85])
