!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc4 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc47 = loc("../../../testcasesupport/std_testcase.h":68:7)
!ty_OneIntClass = !cir.record<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc4)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc4)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc4)
    cir.return loc(#loc4)
  } loc(#loc4)
  cir.func private @printIntLine(!s32i) loc(#loc208)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc210)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc211)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc212)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc14)
    %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc213)
    %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc212)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc16)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc16)
    cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc213)
    cir.br ^bb1 loc(#loc214)
  ^bb1:  // pred: ^bb0
    %12 = cir.const #cir.int<6> : !s32i loc(#loc19)
    cir.br ^bb2 loc(#loc17)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %12 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc17)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %13 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    cir.store %13, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
    cir.br ^bb6 loc(#loc23)
  ^bb5:  // pred: ^bb2
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc24)
    cir.br ^bb6 loc(#loc25)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc18)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc216)
  ^bb8:  // pred: ^bb7
    %16 = cir.const #cir.int<7> : !s32i loc(#loc28)
    cir.br ^bb9 loc(#loc26)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %16 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc26)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc29)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc217)
  ^bb12:  // pred: ^bb11
    %17 = cir.const #cir.int<8> : !u64i loc(#loc218)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc218)
    cir.call @_ZN12TwoIntsClassC2Ev(%20) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc10)
    cir.store %20, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc210)
    %21 = cir.const #cir.int<5> : !s32i loc(#loc34)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc35)
    %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
    cir.store %21, %23 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    %24 = cir.const #cir.int<10> : !s32i loc(#loc37)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc38)
    %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %24, %26 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc40)
    %28 = cir.get_member %27[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc42)
    cir.br ^bb13 loc(#loc31)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc43)
  ^bb14:  // pred: ^bb9
    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc44)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    cir.br ^bb15 loc(#loc46)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc27)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc8)
  } loc(#loc209)
  cir.func linkonce_odr @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc47)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc47)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc47)
    cir.return loc(#loc47)
  } loc(#loc47)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc222)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc223)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc224)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc55)
    %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc55)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc225)
    %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc55)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc55)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc57)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc57)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc57)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc57)
    cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc225)
    cir.br ^bb1 loc(#loc226)
  ^bb1:  // pred: ^bb0
    %12 = cir.const #cir.int<6> : !s32i loc(#loc60)
    cir.br ^bb2 loc(#loc58)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %12 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc58)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc61)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %13 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    cir.store %13, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc227)
    cir.br ^bb6 loc(#loc64)
  ^bb5:  // pred: ^bb2
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc65)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    cir.br ^bb6 loc(#loc67)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc59)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc228)
  ^bb8:  // pred: ^bb7
    %16 = cir.const #cir.int<8> : !s32i loc(#loc70)
    cir.br ^bb9 loc(#loc68)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %16 : !s32i, ^bb12 [
      7: ^bb11
    ] loc(#loc68)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc71)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc72)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    cir.br ^bb15 loc(#loc74)
  ^bb12:  // pred: ^bb9
    cir.br ^bb13 loc(#loc229)
  ^bb13:  // pred: ^bb12
    %19 = cir.const #cir.int<4> : !u64i loc(#loc230)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc230)
    cir.call @_ZN11OneIntClassC2Ev(%22) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc51)
    cir.store %22, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc222)
    %23 = cir.const #cir.int<5> : !s32i loc(#loc79)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc80)
    %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc81)
    cir.store %23, %25 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc82)
    %27 = cir.get_member %26[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc81)
    %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc84)
    cir.br ^bb14 loc(#loc76)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc85)
  ^bb15:  // 2 preds: ^bb11, ^bb14
    cir.br ^bb16 loc(#loc69)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc49)
  } loc(#loc221)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc233)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc234)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc235)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc93)
    %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc93)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc236)
    %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc93)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc93)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc235)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc95)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc95)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc95)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc95)
    cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc236)
    cir.br ^bb1 loc(#loc237)
  ^bb1:  // pred: ^bb0
    %12 = cir.const #cir.int<6> : !s32i loc(#loc98)
    cir.br ^bb2 loc(#loc96)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %12 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc96)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc99)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %13 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    cir.store %13, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc238)
    cir.br ^bb6 loc(#loc102)
  ^bb5:  // pred: ^bb2
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc103)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    cir.br ^bb6 loc(#loc105)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc97)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc239)
  ^bb8:  // pred: ^bb7
    %16 = cir.const #cir.int<7> : !s32i loc(#loc108)
    cir.br ^bb9 loc(#loc106)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %16 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc106)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc109)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc240)
  ^bb12:  // pred: ^bb11
    %17 = cir.const #cir.int<4> : !u64i loc(#loc241)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc241)
    cir.call @_ZN11OneIntClassC2Ev(%20) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc89)
    cir.store %20, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc233)
    %21 = cir.const #cir.int<5> : !s32i loc(#loc114)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc115)
    %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc81)
    cir.store %21, %23 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc116)
    %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc81)
    %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc118)
    cir.br ^bb13 loc(#loc111)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc119)
  ^bb14:  // pred: ^bb9
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc120)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc120)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    cir.br ^bb15 loc(#loc122)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc107)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc87)
  } loc(#loc232)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc244)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc245)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc246)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc130)
    %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc130)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc247)
    %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc130)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc130)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc246)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc132)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc132)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc132)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc132)
    cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc247)
    cir.br ^bb1 loc(#loc248)
  ^bb1:  // pred: ^bb0
    %12 = cir.const #cir.int<5> : !s32i loc(#loc135)
    cir.br ^bb2 loc(#loc133)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %12 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc133)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc136)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc137)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc137)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    cir.br ^bb6 loc(#loc139)
  ^bb5:  // pred: ^bb2
    %15 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    cir.store %15, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc249)
    cir.br ^bb6 loc(#loc142)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc134)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc250)
  ^bb8:  // pred: ^bb7
    %16 = cir.const #cir.int<7> : !s32i loc(#loc145)
    cir.br ^bb9 loc(#loc143)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %16 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc143)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc146)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc251)
  ^bb12:  // pred: ^bb11
    %17 = cir.const #cir.int<8> : !u64i loc(#loc252)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc150)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc252)
    cir.call @_ZN12TwoIntsClassC2Ev(%20) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc126)
    cir.store %20, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc244)
    %21 = cir.const #cir.int<5> : !s32i loc(#loc151)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc152)
    %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
    cir.store %21, %23 : !s32i, !cir.ptr<!s32i> loc(#loc253)
    %24 = cir.const #cir.int<10> : !s32i loc(#loc153)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc154)
    %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %24, %26 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc155)
    %28 = cir.get_member %27[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc157)
    cir.br ^bb13 loc(#loc148)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc158)
  ^bb14:  // pred: ^bb9
    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc159)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc159)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc160)
    cir.br ^bb15 loc(#loc161)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc144)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc124)
  } loc(#loc243)
  cir.func internal private @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc256)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc257)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc258)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc169)
    %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc169)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc259)
    %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc169)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc169)
    cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc258)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc171)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc171)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc171)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc171)
    cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc259)
    cir.br ^bb1 loc(#loc260)
  ^bb1:  // pred: ^bb0
    %12 = cir.const #cir.int<6> : !s32i loc(#loc174)
    cir.br ^bb2 loc(#loc172)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %12 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc172)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc175)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
    cir.store %13, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc261)
    cir.br ^bb6 loc(#loc178)
  ^bb5:  // pred: ^bb2
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc179)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc179)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc180)
    cir.br ^bb6 loc(#loc181)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc173)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc262)
  ^bb8:  // pred: ^bb7
    %16 = cir.const #cir.int<7> : !s32i loc(#loc184)
    cir.br ^bb9 loc(#loc182)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %16 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc182)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc185)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc263)
  ^bb12:  // pred: ^bb11
    %17 = cir.const #cir.int<8> : !u64i loc(#loc264)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc189)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc189)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc264)
    cir.call @_ZN12TwoIntsClassC2Ev(%20) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc165)
    cir.store %20, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc256)
    %21 = cir.const #cir.int<5> : !s32i loc(#loc190)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc191)
    %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
    cir.store %21, %23 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    %24 = cir.const #cir.int<10> : !s32i loc(#loc192)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc193)
    %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %24, %26 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc194)
    %28 = cir.get_member %27[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc195)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc196)
    cir.br ^bb13 loc(#loc187)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc197)
  ^bb14:  // pred: ^bb9
    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc198)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc198)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc199)
    cir.br ^bb15 loc(#loc200)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc183)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc163)
  } loc(#loc255)
  cir.func @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15L8goodB2G1Ev() : () -> () loc(#loc203)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15L8goodB2G2Ev() : () -> () loc(#loc204)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15L8goodG2B1Ev() : () -> () loc(#loc205)
    cir.call @_ZN59CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15L8goodG2B2Ev() : () -> () loc(#loc206)
    cir.return loc(#loc202)
  } loc(#loc267)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":37:19)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":24:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":62:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":49:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":49:45)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":26:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":26:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":27:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":27:36)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":28:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":28:37)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":29:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":39:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":29:12)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":31:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":33:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":33:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":34:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":37:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":38:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":40:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":61:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":40:12)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":42:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":43:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":55:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":49:35)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":49:39)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":51:28)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":51:9)
#loc36 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":52:28)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":52:9)
#loc39 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":53:22)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":53:32)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":53:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":56:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":59:19)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":59:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":60:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":69:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":105:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":98:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":98:44)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":71:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":71:12)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":72:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":72:36)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":73:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":73:37)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":74:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":84:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":74:12)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":76:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":78:16)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":78:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":79:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":82:19)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":82:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":83:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":85:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":104:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":85:12)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":87:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":89:19)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":89:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":90:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":92:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":102:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":98:34)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":98:38)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":100:28)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":100:9)
#loc81 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":101:22)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":101:32)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":101:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":103:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":108:1)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":144:1)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":133:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":133:44)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":110:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":110:12)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":111:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":111:36)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":112:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":112:37)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":113:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":123:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":113:12)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":115:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":117:16)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":117:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":118:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":121:19)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":121:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":122:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":124:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":143:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":124:12)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":126:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":127:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":137:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":133:34)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":133:38)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":135:28)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":135:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":136:22)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":136:32)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":136:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":138:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":141:19)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":141:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":142:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":147:1)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":185:1)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":172:9)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":172:45)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":149:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":149:12)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":150:5)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":150:36)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":151:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":151:37)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":152:5)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":162:5)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":152:12)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":154:5)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":156:19)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":156:9)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":157:9)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":160:16)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":160:9)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":161:9)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":163:5)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":184:5)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":163:12)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":165:5)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":166:5)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":178:5)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":172:35)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":172:39)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":174:28)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":174:9)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":175:28)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":175:9)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":176:22)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":176:32)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":176:9)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":179:5)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":182:19)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":182:9)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":183:9)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":188:1)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":226:1)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":213:9)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":213:45)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":190:5)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":190:12)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":191:5)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":191:36)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":192:5)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":192:37)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":193:5)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":203:5)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":193:12)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":195:5)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":197:16)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":197:9)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":198:9)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":201:19)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":201:9)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":202:9)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":204:5)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":225:5)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":204:12)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":206:5)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":207:5)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":219:5)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":213:35)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":213:39)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":215:28)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":215:9)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":216:28)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":216:9)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":217:22)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":217:32)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":217:9)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":220:5)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":223:19)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":223:9)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":224:9)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":228:1)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":234:1)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":230:5)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":231:5)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":232:5)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_alloca_15.cpp":233:5)
#loc207 = loc(fused[#loc1, #loc2])
#loc208 = loc(fused[#loc5, #loc6])
#loc209 = loc(fused[#loc7, #loc8])
#loc210 = loc(fused[#loc9, #loc10])
#loc211 = loc(fused[#loc11, #loc12])
#loc212 = loc(fused[#loc13, #loc14])
#loc213 = loc(fused[#loc15, #loc16])
#loc214 = loc(fused[#loc17, #loc18])
#loc215 = loc(fused[#loc22, #loc21])
#loc216 = loc(fused[#loc26, #loc27])
#loc217 = loc(fused[#loc30, #loc31])
#loc218 = loc(fused[#loc32, #loc10])
#loc219 = loc(fused[#loc35, #loc34])
#loc220 = loc(fused[#loc38, #loc37])
#loc221 = loc(fused[#loc48, #loc49])
#loc222 = loc(fused[#loc50, #loc51])
#loc223 = loc(fused[#loc52, #loc53])
#loc224 = loc(fused[#loc54, #loc55])
#loc225 = loc(fused[#loc56, #loc57])
#loc226 = loc(fused[#loc58, #loc59])
#loc227 = loc(fused[#loc63, #loc62])
#loc228 = loc(fused[#loc68, #loc69])
#loc229 = loc(fused[#loc75, #loc76])
#loc230 = loc(fused[#loc77, #loc51])
#loc231 = loc(fused[#loc80, #loc79])
#loc232 = loc(fused[#loc86, #loc87])
#loc233 = loc(fused[#loc88, #loc89])
#loc234 = loc(fused[#loc90, #loc91])
#loc235 = loc(fused[#loc92, #loc93])
#loc236 = loc(fused[#loc94, #loc95])
#loc237 = loc(fused[#loc96, #loc97])
#loc238 = loc(fused[#loc101, #loc100])
#loc239 = loc(fused[#loc106, #loc107])
#loc240 = loc(fused[#loc110, #loc111])
#loc241 = loc(fused[#loc112, #loc89])
#loc242 = loc(fused[#loc115, #loc114])
#loc243 = loc(fused[#loc123, #loc124])
#loc244 = loc(fused[#loc125, #loc126])
#loc245 = loc(fused[#loc127, #loc128])
#loc246 = loc(fused[#loc129, #loc130])
#loc247 = loc(fused[#loc131, #loc132])
#loc248 = loc(fused[#loc133, #loc134])
#loc249 = loc(fused[#loc141, #loc140])
#loc250 = loc(fused[#loc143, #loc144])
#loc251 = loc(fused[#loc147, #loc148])
#loc252 = loc(fused[#loc149, #loc126])
#loc253 = loc(fused[#loc152, #loc151])
#loc254 = loc(fused[#loc154, #loc153])
#loc255 = loc(fused[#loc162, #loc163])
#loc256 = loc(fused[#loc164, #loc165])
#loc257 = loc(fused[#loc166, #loc167])
#loc258 = loc(fused[#loc168, #loc169])
#loc259 = loc(fused[#loc170, #loc171])
#loc260 = loc(fused[#loc172, #loc173])
#loc261 = loc(fused[#loc177, #loc176])
#loc262 = loc(fused[#loc182, #loc183])
#loc263 = loc(fused[#loc186, #loc187])
#loc264 = loc(fused[#loc188, #loc165])
#loc265 = loc(fused[#loc191, #loc190])
#loc266 = loc(fused[#loc193, #loc192])
#loc267 = loc(fused[#loc201, #loc202])
