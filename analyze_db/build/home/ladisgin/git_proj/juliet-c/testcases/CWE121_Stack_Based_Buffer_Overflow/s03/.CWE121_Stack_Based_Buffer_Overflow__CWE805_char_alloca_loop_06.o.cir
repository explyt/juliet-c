!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc187)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06_bad() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc189)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc190)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc191)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc192)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc12)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc12)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc12)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc193)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc14)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc14)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %18, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc193)
    cir.br ^bb1 loc(#loc194)
  ^bb1:  // pred: ^bb0
    %19 = cir.const #cir.int<5> : !s32i loc(#loc17)
    %20 = cir.const #cir.int<5> : !s32i loc(#loc18)
    %21 = cir.cmp(eq, %19, %20) : !s32i, !cir.bool loc(#loc195)
    cir.brcond %21 ^bb2, ^bb3 loc(#loc196)
  ^bb2:  // pred: ^bb1
    %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    cir.store %22, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc22)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc198)
    cir.br ^bb3 loc(#loc16)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc199)
  ^bb5:  // pred: ^bb4
    %28 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
    %30 = cir.const #cir.int<67> : !s32i loc(#loc29)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc30)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc30)
    cir.libc.memset %34 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc200)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc34)
    %37 = cir.const #cir.int<100> : !s32i loc(#loc35)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc35)
    %40 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc37)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc201)
    cir.br ^bb6 loc(#loc202)
  ^bb6:  // pred: ^bb5
    %42 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc40)
    cir.store %43, %0 : !u64i, !cir.ptr<!u64i> loc(#loc203)
    cir.br ^bb7 loc(#loc202)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %44 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc42)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc43)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc43)
    %47 = cir.cmp(lt, %44, %46) : !u64i, !cir.bool loc(#loc204)
    cir.brcond %47 ^bb8, ^bb12 loc(#loc44)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc205)
  ^bb9:  // pred: ^bb8
    %48 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    %49 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
    %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc47)
    %51 = cir.load %50 : !cir.ptr<!s8i>, !s8i loc(#loc47)
    %52 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %53 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %54 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %53 : !u64i), !cir.ptr<!s8i> loc(#loc50)
    cir.store %51, %54 : !s8i, !cir.ptr<!s8i> loc(#loc206)
    cir.br ^bb10 loc(#loc39)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc39)
  ^bb11:  // pred: ^bb10
    %55 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %56 = cir.unary(inc, %55) : !u64i, !u64i loc(#loc53)
    cir.store %56, %0 : !u64i, !cir.ptr<!u64i> loc(#loc207)
    cir.br ^bb7 loc(#loc202)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc39)
  ^bb13:  // pred: ^bb12
    %57 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %58 = cir.cast(integral, %57 : !s32i), !s8i loc(#loc54)
    %59 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %60 = cir.const #cir.int<100> : !s32i loc(#loc56)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc56)
    %63 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %62 : !s32i), !cir.ptr<!s8i> loc(#loc58)
    cir.store %58, %63 : !s8i, !cir.ptr<!s8i> loc(#loc208)
    %64 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%64) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    cir.br ^bb14 loc(#loc27)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc4)
  } loc(#loc188)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc210)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc211)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    cir.return loc(#loc62)
  } loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc67)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc213)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc214)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc215)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc216)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc77)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc77)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc77)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc77)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc77)
    %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc217)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc77)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc77)
    cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc79)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc79)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc79)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc79)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc79)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc79)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc79)
    cir.store %18, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc217)
    cir.br ^bb1 loc(#loc218)
  ^bb1:  // pred: ^bb0
    %19 = cir.const #cir.int<5> : !s32i loc(#loc82)
    %20 = cir.const #cir.int<5> : !s32i loc(#loc83)
    %21 = cir.cmp(ne, %19, %20) : !s32i, !cir.bool loc(#loc219)
    cir.brcond %21 ^bb2, ^bb3 loc(#loc220)
  ^bb2:  // pred: ^bb1
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc67)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    cir.br ^bb4 loc(#loc85)
  ^bb3:  // pred: ^bb1
    %24 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    cir.store %24, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc221)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc90)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc93)
    cir.store %26, %29 : !s8i, !cir.ptr<!s8i> loc(#loc222)
    cir.br ^bb4 loc(#loc81)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc81)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc223)
  ^bb6:  // pred: ^bb5
    %30 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc96)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
    %32 = cir.const #cir.int<67> : !s32i loc(#loc97)
    %33 = cir.const #cir.int<100> : !s32i loc(#loc98)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc98)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc98)
    cir.libc.memset %36 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc224)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc102)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc103)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc103)
    %42 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc105)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc105)
    cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc225)
    cir.br ^bb7 loc(#loc226)
  ^bb7:  // pred: ^bb6
    %44 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc108)
    cir.store %45, %0 : !u64i, !cir.ptr<!u64i> loc(#loc227)
    cir.br ^bb8 loc(#loc226)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %46 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc110)
    %47 = cir.const #cir.int<100> : !s32i loc(#loc111)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc111)
    %49 = cir.cmp(lt, %46, %48) : !u64i, !cir.bool loc(#loc228)
    cir.brcond %49 ^bb9, ^bb13 loc(#loc112)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc229)
  ^bb10:  // pred: ^bb9
    %50 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc114)
    %51 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc115)
    %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc115)
    %53 = cir.load %52 : !cir.ptr<!s8i>, !s8i loc(#loc115)
    %54 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    %55 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc117)
    %56 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %55 : !u64i), !cir.ptr<!s8i> loc(#loc118)
    cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc230)
    cir.br ^bb11 loc(#loc107)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc107)
  ^bb12:  // pred: ^bb11
    %57 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc120)
    %58 = cir.unary(inc, %57) : !u64i, !u64i loc(#loc121)
    cir.store %58, %0 : !u64i, !cir.ptr<!u64i> loc(#loc231)
    cir.br ^bb8 loc(#loc226)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc107)
  ^bb14:  // pred: ^bb13
    %59 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %60 = cir.cast(integral, %59 : !s32i), !s8i loc(#loc122)
    %61 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %62 = cir.const #cir.int<100> : !s32i loc(#loc124)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %64 = cir.binop(sub, %62, %63) nsw : !s32i loc(#loc124)
    %65 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %64 : !s32i), !cir.ptr<!s8i> loc(#loc126)
    cir.store %60, %65 : !s8i, !cir.ptr<!s8i> loc(#loc232)
    %66 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%66) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    cir.br ^bb15 loc(#loc95)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc69)
  } loc(#loc212)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc234)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc235)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc236)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc237)
    %4 = cir.const #cir.int<50> : !s32i loc(#loc138)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc138)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc138)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc138)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc138)
    %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc238)
    %10 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc138)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc138)
    cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc237)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc140)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc140)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc140)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc140)
    %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc140)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc140)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc140)
    cir.store %18, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc238)
    cir.br ^bb1 loc(#loc239)
  ^bb1:  // pred: ^bb0
    %19 = cir.const #cir.int<5> : !s32i loc(#loc143)
    %20 = cir.const #cir.int<5> : !s32i loc(#loc144)
    %21 = cir.cmp(eq, %19, %20) : !s32i, !cir.bool loc(#loc240)
    cir.brcond %21 ^bb2, ^bb3 loc(#loc241)
  ^bb2:  // pred: ^bb1
    %22 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
    cir.store %22, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc242)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc148)
    %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc148)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc150)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc151)
    cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc243)
    cir.br ^bb3 loc(#loc142)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc142)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc244)
  ^bb5:  // pred: ^bb4
    %28 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc154)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc154)
    %30 = cir.const #cir.int<67> : !s32i loc(#loc155)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc156)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc156)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc156)
    cir.libc.memset %34 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc245)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc160)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc160)
    %37 = cir.const #cir.int<100> : !s32i loc(#loc161)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc161)
    %40 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc163)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc163)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc246)
    cir.br ^bb6 loc(#loc247)
  ^bb6:  // pred: ^bb5
    %42 = cir.const #cir.int<0> : !s32i loc(#loc166)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc166)
    cir.store %43, %0 : !u64i, !cir.ptr<!u64i> loc(#loc248)
    cir.br ^bb7 loc(#loc247)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %44 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc168)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc169)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc169)
    %47 = cir.cmp(lt, %44, %46) : !u64i, !cir.bool loc(#loc249)
    cir.brcond %47 ^bb8, ^bb12 loc(#loc170)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc250)
  ^bb9:  // pred: ^bb8
    %48 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc172)
    %49 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc173)
    %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc173)
    %51 = cir.load %50 : !cir.ptr<!s8i>, !s8i loc(#loc173)
    %52 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
    %53 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc175)
    %54 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %53 : !u64i), !cir.ptr<!s8i> loc(#loc176)
    cir.store %51, %54 : !s8i, !cir.ptr<!s8i> loc(#loc251)
    cir.br ^bb10 loc(#loc165)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc165)
  ^bb11:  // pred: ^bb10
    %55 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc178)
    %56 = cir.unary(inc, %55) : !u64i, !u64i loc(#loc179)
    cir.store %56, %0 : !u64i, !cir.ptr<!u64i> loc(#loc252)
    cir.br ^bb7 loc(#loc247)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc165)
  ^bb13:  // pred: ^bb12
    %57 = cir.const #cir.int<0> : !s32i loc(#loc180)
    %58 = cir.cast(integral, %57 : !s32i), !s8i loc(#loc180)
    %59 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
    %60 = cir.const #cir.int<100> : !s32i loc(#loc182)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc183)
    %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc182)
    %63 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %62 : !s32i), !cir.ptr<!s8i> loc(#loc184)
    cir.store %58, %63 : !s8i, !cir.ptr<!s8i> loc(#loc253)
    %64 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
    cir.call @printLine(%64) : (!cir.ptr<!s8i>) -> () loc(#loc186)
    cir.br ^bb14 loc(#loc153)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc130)
  } loc(#loc233)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":27:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":52:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":40:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":40:16)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":41:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":41:24)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":29:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":29:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":30:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":30:36)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":31:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":31:37)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":32:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":38:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":32:8)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":32:27)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":33:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":36:16)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":36:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":37:19)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":37:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":37:14)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":37:15)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":39:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":51:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":42:16)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":42:24)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":42:29)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":42:33)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":42:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":42:34)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":43:25)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":43:16)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":43:20)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":43:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":45:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":48:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":45:18)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":45:14)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":45:21)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":45:25)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":45:23)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":46:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":47:30)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":47:23)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":47:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":47:18)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":47:19)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":47:31)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":45:31)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":45:30)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":49:23)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":49:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":49:14)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":49:18)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":49:19)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":50:19)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":50:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":117:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":121:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":119:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":119:14)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":120:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":120:14)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":67:19)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":59:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":88:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":76:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":76:16)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":77:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":77:24)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":61:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":61:12)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":62:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":62:36)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":63:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":63:37)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":64:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":74:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":64:8)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":64:27)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":65:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":68:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":70:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":67:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":72:16)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":72:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":73:19)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":73:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":73:14)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":73:15)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":75:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":87:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":78:16)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":78:24)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":78:29)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":78:33)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":78:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":78:34)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":79:25)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":79:16)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":79:20)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":79:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":81:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":84:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":81:18)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":81:14)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":81:21)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":81:25)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":81:23)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":82:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":83:30)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":83:23)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":83:13)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":83:18)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":83:19)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":83:31)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":81:31)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":81:30)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":85:23)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":85:9)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":85:14)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":85:18)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":85:19)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":86:19)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":86:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":91:1)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":115:1)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":103:9)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":103:16)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":104:9)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":104:24)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":93:5)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":93:12)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":94:5)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":94:36)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":95:5)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":95:37)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":96:5)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":101:5)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":96:8)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":96:27)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":97:5)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":99:16)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":99:9)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":100:19)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":100:9)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":100:14)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":100:15)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":102:5)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":114:5)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":105:16)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":105:24)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":105:29)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":105:33)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":105:9)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":105:34)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":106:25)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":106:16)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":106:20)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":106:9)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":108:9)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":111:9)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":108:18)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":108:14)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":108:21)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":108:25)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":108:23)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":109:9)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":110:30)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":110:23)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":110:13)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":110:18)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":110:19)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":110:31)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":108:31)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":108:30)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":112:23)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":112:9)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":112:14)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":112:18)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":112:19)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":113:19)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_06.c":113:9)
#loc187 = loc(fused[#loc1, #loc2])
#loc188 = loc(fused[#loc3, #loc4])
#loc189 = loc(fused[#loc5, #loc6])
#loc190 = loc(fused[#loc7, #loc8])
#loc191 = loc(fused[#loc9, #loc10])
#loc192 = loc(fused[#loc11, #loc12])
#loc193 = loc(fused[#loc13, #loc14])
#loc194 = loc(fused[#loc15, #loc16])
#loc195 = loc(fused[#loc17, #loc18])
#loc196 = loc(fused[#loc19, #loc16])
#loc197 = loc(fused[#loc21, #loc20])
#loc198 = loc(fused[#loc23, #loc22])
#loc199 = loc(fused[#loc26, #loc27])
#loc200 = loc(fused[#loc32, #loc33])
#loc201 = loc(fused[#loc37, #loc34])
#loc202 = loc(fused[#loc38, #loc39])
#loc203 = loc(fused[#loc41, #loc40])
#loc204 = loc(fused[#loc42, #loc43])
#loc205 = loc(fused[#loc45, #loc39])
#loc206 = loc(fused[#loc48, #loc51])
#loc207 = loc(fused[#loc53, #loc52])
#loc208 = loc(fused[#loc55, #loc54])
#loc209 = loc(fused[#loc61, #loc62])
#loc210 = loc(fused[#loc63, #loc64])
#loc211 = loc(fused[#loc65, #loc66])
#loc212 = loc(fused[#loc68, #loc69])
#loc213 = loc(fused[#loc70, #loc71])
#loc214 = loc(fused[#loc72, #loc73])
#loc215 = loc(fused[#loc74, #loc75])
#loc216 = loc(fused[#loc76, #loc77])
#loc217 = loc(fused[#loc78, #loc79])
#loc218 = loc(fused[#loc80, #loc81])
#loc219 = loc(fused[#loc82, #loc83])
#loc220 = loc(fused[#loc84, #loc85, #loc86, #loc81])
#loc221 = loc(fused[#loc89, #loc88])
#loc222 = loc(fused[#loc91, #loc90])
#loc223 = loc(fused[#loc94, #loc95])
#loc224 = loc(fused[#loc100, #loc101])
#loc225 = loc(fused[#loc105, #loc102])
#loc226 = loc(fused[#loc106, #loc107])
#loc227 = loc(fused[#loc109, #loc108])
#loc228 = loc(fused[#loc110, #loc111])
#loc229 = loc(fused[#loc113, #loc107])
#loc230 = loc(fused[#loc116, #loc119])
#loc231 = loc(fused[#loc121, #loc120])
#loc232 = loc(fused[#loc123, #loc122])
#loc233 = loc(fused[#loc129, #loc130])
#loc234 = loc(fused[#loc131, #loc132])
#loc235 = loc(fused[#loc133, #loc134])
#loc236 = loc(fused[#loc135, #loc136])
#loc237 = loc(fused[#loc137, #loc138])
#loc238 = loc(fused[#loc139, #loc140])
#loc239 = loc(fused[#loc141, #loc142])
#loc240 = loc(fused[#loc143, #loc144])
#loc241 = loc(fused[#loc145, #loc142])
#loc242 = loc(fused[#loc147, #loc146])
#loc243 = loc(fused[#loc149, #loc148])
#loc244 = loc(fused[#loc152, #loc153])
#loc245 = loc(fused[#loc158, #loc159])
#loc246 = loc(fused[#loc163, #loc160])
#loc247 = loc(fused[#loc164, #loc165])
#loc248 = loc(fused[#loc167, #loc166])
#loc249 = loc(fused[#loc168, #loc169])
#loc250 = loc(fused[#loc171, #loc165])
#loc251 = loc(fused[#loc174, #loc177])
#loc252 = loc(fused[#loc179, #loc178])
#loc253 = loc(fused[#loc181, #loc180])
