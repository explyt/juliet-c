!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fwrite_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc84)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc86)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fwrite failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fwrite_12_bad() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc89)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc90)
    %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc90)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc15)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc91)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc20)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc5)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc5)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc93)
    %9 = cir.const #cir.int<6> : !u64i loc(#loc94)
    %10 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc86)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
    %12 = cir.call @fwrite(%7, %8, %9, %11) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc20)
    cir.br ^bb8 loc(#loc18)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc95)
  ^bb4:  // pred: ^bb3
    %13 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc29)
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc30)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc30)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
    %17 = cir.const #cir.int<1> : !u64i loc(#loc97)
    %18 = cir.const #cir.int<6> : !u64i loc(#loc98)
    %19 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc86)
    %20 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc36)
    %21 = cir.call @fwrite(%16, %17, %18, %20) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc29)
    %22 = cir.const #cir.int<6> : !u64i loc(#loc99)
    %23 = cir.cmp(ne, %21, %22) : !u64i, !cir.bool loc(#loc100)
    cir.brcond %23 ^bb5, ^bb6 loc(#loc101)
  ^bb5:  // pred: ^bb4
    %24 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc10)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc10)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc40)
    cir.br ^bb6 loc(#loc28)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc28)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc14)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc14)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc12)
  } loc(#loc88)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fwrite_12_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc103)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    cir.return loc(#loc42)
  } loc(#loc102)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc105)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc106)
    %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc106)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc49)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc49)
    cir.brcond %3 ^bb2, ^bb7 loc(#loc107)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc108)
  ^bb3:  // pred: ^bb2
    %4 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc56)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc57)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc57)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc110)
    %9 = cir.const #cir.int<6> : !u64i loc(#loc111)
    %10 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc86)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc63)
    %12 = cir.call @fwrite(%7, %8, %9, %11) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc56)
    %13 = cir.const #cir.int<6> : !u64i loc(#loc112)
    %14 = cir.cmp(ne, %12, %13) : !u64i, !cir.bool loc(#loc113)
    cir.brcond %14 ^bb4, ^bb5 loc(#loc114)
  ^bb4:  // pred: ^bb3
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc67)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    cir.br ^bb5 loc(#loc55)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc55)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc52)
  ^bb7:  // pred: ^bb1
    cir.br ^bb8 loc(#loc115)
  ^bb8:  // pred: ^bb7
    %17 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc71)
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc72)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc72)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
    %21 = cir.const #cir.int<1> : !u64i loc(#loc117)
    %22 = cir.const #cir.int<6> : !u64i loc(#loc118)
    %23 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc86)
    %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc78)
    %25 = cir.call @fwrite(%20, %21, %22, %24) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc71)
    %26 = cir.const #cir.int<6> : !u64i loc(#loc119)
    %27 = cir.cmp(ne, %25, %26) : !u64i, !cir.bool loc(#loc120)
    cir.brcond %27 ^bb9, ^bb10 loc(#loc121)
  ^bb9:  // pred: ^bb8
    %28 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc82)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    cir.br ^bb10 loc(#loc70)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc70)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc48)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc48)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc46)
  } loc(#loc104)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fwrite_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":735:1)
#loc4 = loc("/usr/include/stdio.h":736:43)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":29:24)
#loc6 = loc("/usr/include/stdio.h":150:1)
#loc7 = loc("/usr/include/stdio.h":150:14)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":36:23)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":24:1)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":39:1)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":26:5)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":38:5)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":26:8)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":26:33)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":27:5)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":30:5)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":32:5)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":29:9)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":29:16)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":29:34)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":29:45)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":29:48)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":29:63)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":29:66)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":34:9)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":37:9)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":34:13)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":34:28)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":34:20)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":34:38)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":34:49)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":34:52)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":34:67)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":34:70)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":34:81)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":34:96)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":35:9)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":36:13)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":66:1)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":69:1)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":68:5)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":68:11)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":46:1)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":64:1)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":48:5)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":63:5)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":48:8)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":48:33)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":49:5)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":55:5)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":57:5)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":51:9)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":54:9)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":51:13)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":51:28)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":51:20)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":51:38)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":51:49)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":51:52)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":51:67)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":51:70)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":51:81)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":51:96)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":52:9)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":53:23)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":53:13)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":59:9)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":62:9)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":59:13)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":59:28)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":59:20)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":59:38)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":59:49)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":59:52)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":59:67)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":59:70)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":59:81)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":59:96)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":60:9)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":61:23)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_fwrite_12.c":61:13)
#loc84 = loc(fused[#loc1, #loc2])
#loc85 = loc(fused[#loc3, #loc4])
#loc86 = loc(fused[#loc6, #loc7])
#loc87 = loc(fused[#loc8, #loc9])
#loc88 = loc(fused[#loc11, #loc12])
#loc89 = loc(fused[#loc13, #loc14])
#loc90 = loc(fused[#loc15, #loc16])
#loc91 = loc(fused[#loc17, #loc18, #loc19, #loc14])
#loc92 = loc(fused[#loc21, #loc5])
#loc93 = loc(fused[#loc22, #loc23])
#loc94 = loc(fused[#loc24, #loc25])
#loc95 = loc(fused[#loc27, #loc28])
#loc96 = loc(fused[#loc31, #loc30])
#loc97 = loc(fused[#loc32, #loc33])
#loc98 = loc(fused[#loc34, #loc35])
#loc99 = loc(fused[#loc37, #loc38])
#loc100 = loc(fused[#loc29, #loc38])
#loc101 = loc(fused[#loc39, #loc28])
#loc102 = loc(fused[#loc41, #loc42])
#loc103 = loc(fused[#loc43, #loc44])
#loc104 = loc(fused[#loc45, #loc46])
#loc105 = loc(fused[#loc47, #loc48])
#loc106 = loc(fused[#loc49, #loc50])
#loc107 = loc(fused[#loc51, #loc52, #loc53, #loc48])
#loc108 = loc(fused[#loc54, #loc55])
#loc109 = loc(fused[#loc58, #loc57])
#loc110 = loc(fused[#loc59, #loc60])
#loc111 = loc(fused[#loc61, #loc62])
#loc112 = loc(fused[#loc64, #loc65])
#loc113 = loc(fused[#loc56, #loc65])
#loc114 = loc(fused[#loc66, #loc55])
#loc115 = loc(fused[#loc69, #loc70])
#loc116 = loc(fused[#loc73, #loc72])
#loc117 = loc(fused[#loc74, #loc75])
#loc118 = loc(fused[#loc76, #loc77])
#loc119 = loc(fused[#loc79, #loc80])
#loc120 = loc(fused[#loc71, #loc80])
#loc121 = loc(fused[#loc81, #loc70])
