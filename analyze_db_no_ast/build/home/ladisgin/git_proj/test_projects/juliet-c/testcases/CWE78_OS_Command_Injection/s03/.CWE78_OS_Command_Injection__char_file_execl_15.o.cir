!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execl_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc136)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc137)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc5)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc6)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc138)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc140)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc14)
  cir.func private  @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc141)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc17)
  cir.global "private"  constant internal dsolocal @".str5" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc18)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_file_execl_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc144)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc144)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc144)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    cir.scope {
      %13 = cir.const #cir.int<6> : !s32i loc(#loc29)
      cir.switch (%13 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %14 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc148)
          %15 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc149)
          %16 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc36)
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
          %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc36)
          cir.store %18, %14 : !u64i, !cir.ptr<!u64i> loc(#loc148)
          cir.scope {
            %19 = cir.const #cir.int<100> : !s32i loc(#loc40)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc40)
            %21 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc41)
            %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc151)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc42)
            %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc42)
            %25 = cir.cmp(gt, %22, %24) : !u64i, !s32i loc(#loc152)
            %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc43)
            cir.if %26 {
              %27 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc45)
              %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc5)
              %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc5)
              %30 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc6)
              %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc6)
              %32 = cir.call @fopen(%29, %31) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc45)
              cir.store %32, %15 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc154)
              cir.scope {
                %33 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc50)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc51)
                %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc51)
                %36 = cir.cmp(ne, %33, %35) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc156)
                %37 = cir.cast(int_to_bool, %36 : !s32i), !cir.bool loc(#loc52)
                cir.if %37 {
                  cir.scope {
                    %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
                    %41 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc57)
                    %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc58)
                    %43 = cir.const #cir.int<100> : !s32i loc(#loc59)
                    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc59)
                    %45 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc60)
                    %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc159)
                    %47 = cir.cast(integral, %46 : !u64i), !s32i loc(#loc159)
                    %48 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc61)
                    %49 = cir.call @fgets(%42, %47, %48) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc62)
                    %50 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc63)
                    %51 = cir.cast(bitcast, %50 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc63)
                    %52 = cir.cmp(eq, %49, %51) : !cir.ptr<!s8i>, !s32i loc(#loc160)
                    %53 = cir.cast(int_to_bool, %52 : !s32i), !cir.bool loc(#loc64)
                    cir.if %53 {
                      %54 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
                      %55 = cir.cast(array_to_ptrdecay, %54 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
                      cir.call @printLine(%55) : (!cir.ptr<!s8i>) -> () loc(#loc66)
                      %56 = cir.const #cir.int<0> : !s32i loc(#loc67)
                      %57 = cir.cast(integral, %56 : !s32i), !s8i loc(#loc67)
                      %58 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
                      %59 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc69)
                      %60 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc70)
                      cir.store %57, %60 : !s8i, !cir.ptr<!s8i> loc(#loc162)
                    } loc(#loc161)
                  } loc(#loc158)
                  %38 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc71)
                  %39 = cir.call @fclose(%38) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc72)
                } loc(#loc157)
              } loc(#loc155)
            } loc(#loc153)
          } loc(#loc150)
        } loc(#loc147)
        cir.break loc(#loc73)
      },
      case (default) {
        %14 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc14)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc14)
        cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc74)
        cir.break loc(#loc75)
      }
      ] loc(#loc27)
    } loc(#loc146)
    %4 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc17)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc17)
    %6 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc76)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc76)
    %8 = cir.get_global @".str5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc18)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc18)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc78)
    %12 = cir.call @execl(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc79)
    cir.return loc(#loc20)
  } loc(#loc142)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_file_execl_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc82)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc84)
    cir.return loc(#loc81)
  } loc(#loc163)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc166)
  cir.global "private"  constant internal dsolocal @".str6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc88)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc168)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc169)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc169)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc169)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc95)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    cir.scope {
      %13 = cir.const #cir.int<5> : !s32i loc(#loc99)
      cir.switch (%13 : !s32i) [
      case (equal, 6) {
        %14 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc100)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc100)
        cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc101)
        cir.break loc(#loc102)
      },
      case (default) {
        %14 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc103)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
        %16 = cir.get_global @".str6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc88)
        %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc88)
        %18 = cir.call @strcat(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc103)
        cir.break loc(#loc105)
      }
      ] loc(#loc97)
    } loc(#loc171)
    %4 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc106)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc106)
    %6 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc107)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc107)
    %8 = cir.get_global @".str5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc108)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc108)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc110)
    %12 = cir.call @execl(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc111)
    cir.return loc(#loc90)
  } loc(#loc167)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc174)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc174)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc174)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc118)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    cir.scope {
      %13 = cir.const #cir.int<6> : !s32i loc(#loc122)
      cir.switch (%13 : !s32i) [
      case (equal, 6) {
        %14 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc123)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
        %16 = cir.get_global @".str6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc125)
        %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc125)
        %18 = cir.call @strcat(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc123)
        cir.break loc(#loc126)
      },
      case (default) {
        %14 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc127)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc127)
        cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc128)
        cir.break loc(#loc129)
      }
      ] loc(#loc120)
    } loc(#loc176)
    %4 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc130)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc130)
    %6 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc131)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc131)
    %8 = cir.get_global @".str5" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc132)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc132)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc134)
    %12 = cir.call @execl(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc135)
    cir.return loc(#loc113)
  } loc(#loc172)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execl_15.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":264:1)
#loc4 = loc("/usr/include/stdio.h":266:3)
#loc5 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":66:27)
#loc6 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":66:37)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":72:31)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":83:19)
#loc15 = loc("/usr/include/unistd.h":594:1)
#loc16 = loc("/usr/include/unistd.h":595:14)
#loc17 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":88:11)
#loc18 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":88:47)
#loc19 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":51:1)
#loc20 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":89:1)
#loc21 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":53:5)
#loc22 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":53:12)
#loc23 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":54:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":54:28)
#loc25 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":55:12)
#loc26 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":55:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":56:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":85:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":56:12)
#loc30 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":59:5)
#loc31 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":79:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":61:9)
#loc33 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":61:37)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":62:9)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":62:16)
#loc36 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":61:26)
#loc37 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":61:33)
#loc38 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":64:9)
#loc39 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":78:9)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":64:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":64:17)
#loc42 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":64:27)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":64:25)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":65:9)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":66:21)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":66:13)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":66:40)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":67:13)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":77:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":67:17)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":67:26)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":67:23)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":68:13)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":70:17)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":75:17)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":70:27)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":70:32)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":70:31)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":70:47)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":70:51)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":70:61)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":70:21)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":70:71)
#loc64 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":70:68)
#loc65 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":71:17)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":72:21)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":74:37)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":74:21)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":74:26)
#loc70 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":74:33)
#loc71 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":76:24)
#loc72 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":76:17)
#loc73 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":80:5)
#loc74 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":83:9)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":84:9)
#loc76 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":88:29)
#loc77 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":88:61)
#loc78 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":88:75)
#loc79 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":88:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":139:1)
#loc81 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":143:1)
#loc82 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":141:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":141:14)
#loc84 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":142:5)
#loc85 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":142:14)
#loc86 = loc("/usr/include/string.h":149:1)
#loc87 = loc("/usr/include/string.h":150:14)
#loc88 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":109:22)
#loc89 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":96:1)
#loc90 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":115:1)
#loc91 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":98:5)
#loc92 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":98:12)
#loc93 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":99:5)
#loc94 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":99:28)
#loc95 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":100:12)
#loc96 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":100:5)
#loc97 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":101:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":111:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":101:12)
#loc100 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":105:19)
#loc101 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":105:9)
#loc102 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":106:9)
#loc103 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":109:9)
#loc104 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":109:16)
#loc105 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":110:9)
#loc106 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":114:11)
#loc107 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":114:29)
#loc108 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":114:47)
#loc109 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":114:61)
#loc110 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":114:75)
#loc111 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":114:5)
#loc112 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":118:1)
#loc113 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":137:1)
#loc114 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":120:5)
#loc115 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":120:12)
#loc116 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":121:5)
#loc117 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":121:28)
#loc118 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":122:12)
#loc119 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":122:5)
#loc120 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":123:5)
#loc121 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":133:5)
#loc122 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":123:12)
#loc123 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":127:9)
#loc124 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":127:16)
#loc125 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":127:22)
#loc126 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":128:9)
#loc127 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":131:19)
#loc128 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":131:9)
#loc129 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":132:9)
#loc130 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":136:11)
#loc131 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":136:29)
#loc132 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":136:47)
#loc133 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":136:61)
#loc134 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":136:75)
#loc135 = loc("CWE78_OS_Command_Injection__char_file_execl_15.c":136:5)
#loc136 = loc(fused[#loc1, #loc2])
#loc137 = loc(fused[#loc3, #loc4])
#loc138 = loc(fused[#loc7, #loc8])
#loc139 = loc(fused[#loc9, #loc10])
#loc140 = loc(fused[#loc12, #loc13])
#loc141 = loc(fused[#loc15, #loc16])
#loc142 = loc(fused[#loc19, #loc20])
#loc143 = loc(fused[#loc21, #loc22])
#loc144 = loc(fused[#loc23, #loc24])
#loc145 = loc(fused[#loc26, #loc25])
#loc146 = loc(fused[#loc27, #loc28])
#loc147 = loc(fused[#loc30, #loc31])
#loc148 = loc(fused[#loc32, #loc33])
#loc149 = loc(fused[#loc34, #loc35])
#loc150 = loc(fused[#loc38, #loc39])
#loc151 = loc(fused[#loc40, #loc41])
#loc152 = loc(fused[#loc40, #loc42])
#loc153 = loc(fused[#loc44, #loc39])
#loc154 = loc(fused[#loc46, #loc47])
#loc155 = loc(fused[#loc48, #loc49])
#loc156 = loc(fused[#loc50, #loc51])
#loc157 = loc(fused[#loc53, #loc49])
#loc158 = loc(fused[#loc54, #loc55])
#loc159 = loc(fused[#loc59, #loc60])
#loc160 = loc(fused[#loc62, #loc63])
#loc161 = loc(fused[#loc65, #loc55])
#loc162 = loc(fused[#loc68, #loc67])
#loc163 = loc(fused[#loc80, #loc81])
#loc164 = loc(fused[#loc82, #loc83])
#loc165 = loc(fused[#loc84, #loc85])
#loc166 = loc(fused[#loc86, #loc87])
#loc167 = loc(fused[#loc89, #loc90])
#loc168 = loc(fused[#loc91, #loc92])
#loc169 = loc(fused[#loc93, #loc94])
#loc170 = loc(fused[#loc96, #loc95])
#loc171 = loc(fused[#loc97, #loc98])
#loc172 = loc(fused[#loc112, #loc113])
#loc173 = loc(fused[#loc114, #loc115])
#loc174 = loc(fused[#loc116, #loc117])
#loc175 = loc(fused[#loc119, #loc118])
#loc176 = loc(fused[#loc120, #loc121])
