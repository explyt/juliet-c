!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fgets_sleep_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc224)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc225)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc226)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc227)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc228)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc229)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto @CWE400_Resource_Exhaustion__fgets_sleep_07_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc231)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc20)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc224)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc24)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc25)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc234)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc237)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc237)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc237)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc33)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc34)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc34)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc34)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc34)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc34)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc34)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc34)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc34)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc226)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc35)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc36)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc37)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc239)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc41)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc42)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc241)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc45)
            } loc(#loc240)
          } loc(#loc238)
        } loc(#loc236)
      } loc(#loc235)
    } loc(#loc233)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc224)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc49)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc243)
      cir.if %6 {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc51)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc51)
        %9 = cir.call @usleep(%8) : (!u32i) -> !s32i loc(#loc52)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc14)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc14)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc53)
      } loc(#loc244)
    } loc(#loc242)
    cir.return loc(#loc16)
  } loc(#loc230)
  cir.func no_proto @CWE400_Resource_Exhaustion__fgets_sleep_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc246)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc247)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc58)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc248)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc60)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc249)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc62)
    cir.return loc(#loc55)
  } loc(#loc245)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc66)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc251)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc72)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc224)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc76)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc77)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc254)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc257)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc257)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc257)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc85)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc86)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc86)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc86)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc86)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc86)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc86)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc86)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc86)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc226)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc87)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc88)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc89)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc259)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc93)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc94)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc261)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc97)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc97)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc98)
            } loc(#loc260)
          } loc(#loc258)
        } loc(#loc256)
      } loc(#loc255)
    } loc(#loc253)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc224)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc101)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc102)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc263)
      cir.if %6 {
        %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc64)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc64)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc106)
      } else {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc110)
          %9 = cir.cmp(gt, %7, %8) : !s32i, !cir.bool loc(#loc266)
          %10 = cir.ternary(%9, true {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
            %12 = cir.const #cir.int<2000> : !s32i loc(#loc113)
            %13 = cir.cmp(le, %11, %12) : !s32i, !cir.bool loc(#loc267)
            %14 = cir.ternary(%13, true {
              %15 = cir.const #true loc(#loc111)
              cir.yield %15 : !cir.bool loc(#loc111)
            }, false {
              %15 = cir.const #false loc(#loc111)
              cir.yield %15 : !cir.bool loc(#loc111)
            }) : (!cir.bool) -> !cir.bool loc(#loc111)
            cir.yield %14 : !cir.bool loc(#loc111)
          }, false {
            %11 = cir.const #false loc(#loc111)
            cir.yield %11 : !cir.bool loc(#loc111)
          }) : (!cir.bool) -> !cir.bool loc(#loc111)
          cir.if %10 {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
            %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc117)
            %13 = cir.call @usleep(%12) : (!u32i) -> !s32i loc(#loc118)
            %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc65)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc65)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc119)
          } else {
            %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc66)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc66)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc120)
          } loc(#loc268)
        } loc(#loc265)
      } loc(#loc264)
    } loc(#loc262)
    cir.return loc(#loc68)
  } loc(#loc250)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc270)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc126)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc224)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc130)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc131)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc273)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc276)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc276)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc276)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc139)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc140)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc140)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc140)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc140)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc140)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc140)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc140)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc140)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc226)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc141)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc142)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc143)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc143)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc278)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc147)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc148)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc280)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc151)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc151)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc152)
            } loc(#loc279)
          } loc(#loc277)
        } loc(#loc275)
      } loc(#loc274)
    } loc(#loc272)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc224)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc155)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc156)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc282)
      cir.if %6 {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc160)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc161)
          %9 = cir.cmp(gt, %7, %8) : !s32i, !cir.bool loc(#loc285)
          %10 = cir.ternary(%9, true {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc163)
            %12 = cir.const #cir.int<2000> : !s32i loc(#loc164)
            %13 = cir.cmp(le, %11, %12) : !s32i, !cir.bool loc(#loc286)
            %14 = cir.ternary(%13, true {
              %15 = cir.const #true loc(#loc162)
              cir.yield %15 : !cir.bool loc(#loc162)
            }, false {
              %15 = cir.const #false loc(#loc162)
              cir.yield %15 : !cir.bool loc(#loc162)
            }) : (!cir.bool) -> !cir.bool loc(#loc162)
            cir.yield %14 : !cir.bool loc(#loc162)
          }, false {
            %11 = cir.const #false loc(#loc162)
            cir.yield %11 : !cir.bool loc(#loc162)
          }) : (!cir.bool) -> !cir.bool loc(#loc162)
          cir.if %10 {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc168)
            %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc168)
            %13 = cir.call @usleep(%12) : (!u32i) -> !s32i loc(#loc169)
            %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc170)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc170)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc171)
          } else {
            %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc172)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc172)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc173)
          } loc(#loc287)
        } loc(#loc284)
      } loc(#loc283)
    } loc(#loc281)
    cir.return loc(#loc122)
  } loc(#loc269)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc289)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc178)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc179)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc290)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc224)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc183)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc184)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc292)
      cir.if %6 {
        %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc188)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc188)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc189)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc190)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc294)
      } loc(#loc293)
    } loc(#loc291)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc224)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc194)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc195)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc296)
      cir.if %6 {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc197)
        %9 = cir.call @usleep(%8) : (!u32i) -> !s32i loc(#loc198)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc199)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc199)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc200)
      } loc(#loc297)
    } loc(#loc295)
    cir.return loc(#loc175)
  } loc(#loc288)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc299)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc205)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc206)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc300)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc224)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc210)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc211)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc302)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc213)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc304)
      } loc(#loc303)
    } loc(#loc301)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc224)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc217)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc218)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc306)
      cir.if %6 {
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc220)
        %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc220)
        %9 = cir.call @usleep(%8) : (!u32i) -> !s32i loc(#loc221)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc222)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc222)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc223)
      } loc(#loc307)
    } loc(#loc305)
    cir.return loc(#loc202)
  } loc(#loc298)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fgets_sleep_07.c":0:0)
#loc1 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":33:1)
#loc2 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":33:25)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":54:27)
#loc12 = loc("/usr/include/unistd.h":480:1)
#loc13 = loc("/usr/include/unistd.h":480:43)
#loc14 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":62:19)
#loc15 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":37:1)
#loc16 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":64:1)
#loc17 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":39:5)
#loc18 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":39:9)
#loc19 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":41:14)
#loc20 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":41:13)
#loc21 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":41:5)
#loc22 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":42:5)
#loc23 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":57:5)
#loc24 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":42:8)
#loc25 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":42:20)
#loc26 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":43:5)
#loc27 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":44:9)
#loc28 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":56:9)
#loc29 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":45:13)
#loc30 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":45:49)
#loc31 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":47:13)
#loc32 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":55:13)
#loc33 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":47:23)
#loc34 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":47:36)
#loc35 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":47:53)
#loc36 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":47:17)
#loc37 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":47:63)
#loc38 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":48:13)
#loc39 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":51:13)
#loc40 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":53:13)
#loc41 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":50:30)
#loc42 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":50:25)
#loc43 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":50:17)
#loc44 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":50:41)
#loc45 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":54:17)
#loc46 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":58:5)
#loc47 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":63:5)
#loc48 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":58:8)
#loc49 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":58:20)
#loc50 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":59:5)
#loc51 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":61:15)
#loc52 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":61:9)
#loc53 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":62:9)
#loc54 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":192:1)
#loc55 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":198:1)
#loc56 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":194:5)
#loc57 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":194:14)
#loc58 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":195:5)
#loc59 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":195:14)
#loc60 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":196:5)
#loc61 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":196:14)
#loc62 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":197:5)
#loc63 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":197:14)
#loc64 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":95:19)
#loc65 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":103:23)
#loc66 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":107:23)
#loc67 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":71:1)
#loc68 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":110:1)
#loc69 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":73:5)
#loc70 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":73:9)
#loc71 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":75:14)
#loc72 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":75:13)
#loc73 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":75:5)
#loc74 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":76:5)
#loc75 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":91:5)
#loc76 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":76:8)
#loc77 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":76:20)
#loc78 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":77:5)
#loc79 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":78:9)
#loc80 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":90:9)
#loc81 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":79:13)
#loc82 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":79:49)
#loc83 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":81:13)
#loc84 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":89:13)
#loc85 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":81:23)
#loc86 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":81:36)
#loc87 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":81:53)
#loc88 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":81:17)
#loc89 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":81:63)
#loc90 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":82:13)
#loc91 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":85:13)
#loc92 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":87:13)
#loc93 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":84:30)
#loc94 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":84:25)
#loc95 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":84:17)
#loc96 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":84:41)
#loc97 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":88:27)
#loc98 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":88:17)
#loc99 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":92:5)
#loc100 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":109:5)
#loc101 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":92:8)
#loc102 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":92:20)
#loc103 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":93:5)
#loc104 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":96:5)
#loc105 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":98:5)
#loc106 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":95:9)
#loc107 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":100:9)
#loc108 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":108:9)
#loc109 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":100:13)
#loc110 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":100:21)
#loc111 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":100:23)
#loc112 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":100:26)
#loc113 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":100:35)
#loc114 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":101:9)
#loc115 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":104:9)
#loc116 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":106:9)
#loc117 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":102:19)
#loc118 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":102:13)
#loc119 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":103:13)
#loc120 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":107:13)
#loc121 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":113:1)
#loc122 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":147:1)
#loc123 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":115:5)
#loc124 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":115:9)
#loc125 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":117:14)
#loc126 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":117:13)
#loc127 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":117:5)
#loc128 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":118:5)
#loc129 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":133:5)
#loc130 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":118:8)
#loc131 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":118:20)
#loc132 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":119:5)
#loc133 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":120:9)
#loc134 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":132:9)
#loc135 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":121:13)
#loc136 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":121:49)
#loc137 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":123:13)
#loc138 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":131:13)
#loc139 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":123:23)
#loc140 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":123:36)
#loc141 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":123:53)
#loc142 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":123:17)
#loc143 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":123:63)
#loc144 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":124:13)
#loc145 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":127:13)
#loc146 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":129:13)
#loc147 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":126:30)
#loc148 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":126:25)
#loc149 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":126:17)
#loc150 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":126:41)
#loc151 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":130:27)
#loc152 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":130:17)
#loc153 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":134:5)
#loc154 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":146:5)
#loc155 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":134:8)
#loc156 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":134:20)
#loc157 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":135:5)
#loc158 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":137:9)
#loc159 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":145:9)
#loc160 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":137:13)
#loc161 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":137:21)
#loc162 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":137:23)
#loc163 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":137:26)
#loc164 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":137:35)
#loc165 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":138:9)
#loc166 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":141:9)
#loc167 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":143:9)
#loc168 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":139:19)
#loc169 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":139:13)
#loc170 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":140:23)
#loc171 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":140:13)
#loc172 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":144:23)
#loc173 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":144:13)
#loc174 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":150:1)
#loc175 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":171:1)
#loc176 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":152:5)
#loc177 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":152:9)
#loc178 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":154:14)
#loc179 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":154:13)
#loc180 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":154:5)
#loc181 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":155:5)
#loc182 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":164:5)
#loc183 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":155:8)
#loc184 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":155:20)
#loc185 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":156:5)
#loc186 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":159:5)
#loc187 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":161:5)
#loc188 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":158:19)
#loc189 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":158:9)
#loc190 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":163:17)
#loc191 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":163:9)
#loc192 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":165:5)
#loc193 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":170:5)
#loc194 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":165:8)
#loc195 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":165:20)
#loc196 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":166:5)
#loc197 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":168:15)
#loc198 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":168:9)
#loc199 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":169:19)
#loc200 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":169:9)
#loc201 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":174:1)
#loc202 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":190:1)
#loc203 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":176:5)
#loc204 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":176:9)
#loc205 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":178:14)
#loc206 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":178:13)
#loc207 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":178:5)
#loc208 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":179:5)
#loc209 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":183:5)
#loc210 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":179:8)
#loc211 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":179:20)
#loc212 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":180:5)
#loc213 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":182:17)
#loc214 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":182:9)
#loc215 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":184:5)
#loc216 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":189:5)
#loc217 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":184:8)
#loc218 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":184:20)
#loc219 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":185:5)
#loc220 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":187:15)
#loc221 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":187:9)
#loc222 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":188:19)
#loc223 = loc("CWE400_Resource_Exhaustion__fgets_sleep_07.c":188:9)
#loc224 = loc(fused[#loc1, #loc2])
#loc225 = loc(fused[#loc3, #loc4])
#loc226 = loc(fused[#loc5, #loc6])
#loc227 = loc(fused[#loc7, #loc8])
#loc228 = loc(fused[#loc9, #loc10])
#loc229 = loc(fused[#loc12, #loc13])
#loc230 = loc(fused[#loc15, #loc16])
#loc231 = loc(fused[#loc17, #loc18])
#loc232 = loc(fused[#loc21, #loc19])
#loc233 = loc(fused[#loc22, #loc23])
#loc234 = loc(fused[#loc24, #loc25])
#loc235 = loc(fused[#loc26, #loc23])
#loc236 = loc(fused[#loc27, #loc28])
#loc237 = loc(fused[#loc29, #loc30])
#loc238 = loc(fused[#loc31, #loc32])
#loc239 = loc(fused[#loc36, #loc37])
#loc240 = loc(fused[#loc38, #loc39, #loc40, #loc32])
#loc241 = loc(fused[#loc43, #loc44])
#loc242 = loc(fused[#loc46, #loc47])
#loc243 = loc(fused[#loc48, #loc49])
#loc244 = loc(fused[#loc50, #loc47])
#loc245 = loc(fused[#loc54, #loc55])
#loc246 = loc(fused[#loc56, #loc57])
#loc247 = loc(fused[#loc58, #loc59])
#loc248 = loc(fused[#loc60, #loc61])
#loc249 = loc(fused[#loc62, #loc63])
#loc250 = loc(fused[#loc67, #loc68])
#loc251 = loc(fused[#loc69, #loc70])
#loc252 = loc(fused[#loc73, #loc71])
#loc253 = loc(fused[#loc74, #loc75])
#loc254 = loc(fused[#loc76, #loc77])
#loc255 = loc(fused[#loc78, #loc75])
#loc256 = loc(fused[#loc79, #loc80])
#loc257 = loc(fused[#loc81, #loc82])
#loc258 = loc(fused[#loc83, #loc84])
#loc259 = loc(fused[#loc88, #loc89])
#loc260 = loc(fused[#loc90, #loc91, #loc92, #loc84])
#loc261 = loc(fused[#loc95, #loc96])
#loc262 = loc(fused[#loc99, #loc100])
#loc263 = loc(fused[#loc101, #loc102])
#loc264 = loc(fused[#loc103, #loc104, #loc105, #loc100])
#loc265 = loc(fused[#loc107, #loc108])
#loc266 = loc(fused[#loc109, #loc110])
#loc267 = loc(fused[#loc112, #loc113])
#loc268 = loc(fused[#loc114, #loc115, #loc116, #loc108])
#loc269 = loc(fused[#loc121, #loc122])
#loc270 = loc(fused[#loc123, #loc124])
#loc271 = loc(fused[#loc127, #loc125])
#loc272 = loc(fused[#loc128, #loc129])
#loc273 = loc(fused[#loc130, #loc131])
#loc274 = loc(fused[#loc132, #loc129])
#loc275 = loc(fused[#loc133, #loc134])
#loc276 = loc(fused[#loc135, #loc136])
#loc277 = loc(fused[#loc137, #loc138])
#loc278 = loc(fused[#loc142, #loc143])
#loc279 = loc(fused[#loc144, #loc145, #loc146, #loc138])
#loc280 = loc(fused[#loc149, #loc150])
#loc281 = loc(fused[#loc153, #loc154])
#loc282 = loc(fused[#loc155, #loc156])
#loc283 = loc(fused[#loc157, #loc154])
#loc284 = loc(fused[#loc158, #loc159])
#loc285 = loc(fused[#loc160, #loc161])
#loc286 = loc(fused[#loc163, #loc164])
#loc287 = loc(fused[#loc165, #loc166, #loc167, #loc159])
#loc288 = loc(fused[#loc174, #loc175])
#loc289 = loc(fused[#loc176, #loc177])
#loc290 = loc(fused[#loc180, #loc178])
#loc291 = loc(fused[#loc181, #loc182])
#loc292 = loc(fused[#loc183, #loc184])
#loc293 = loc(fused[#loc185, #loc186, #loc187, #loc182])
#loc294 = loc(fused[#loc191, #loc190])
#loc295 = loc(fused[#loc192, #loc193])
#loc296 = loc(fused[#loc194, #loc195])
#loc297 = loc(fused[#loc196, #loc193])
#loc298 = loc(fused[#loc201, #loc202])
#loc299 = loc(fused[#loc203, #loc204])
#loc300 = loc(fused[#loc207, #loc205])
#loc301 = loc(fused[#loc208, #loc209])
#loc302 = loc(fused[#loc210, #loc211])
#loc303 = loc(fused[#loc212, #loc209])
#loc304 = loc(fused[#loc214, #loc213])
#loc305 = loc(fused[#loc215, #loc216])
#loc306 = loc(fused[#loc217, #loc218])
#loc307 = loc(fused[#loc219, #loc216])
