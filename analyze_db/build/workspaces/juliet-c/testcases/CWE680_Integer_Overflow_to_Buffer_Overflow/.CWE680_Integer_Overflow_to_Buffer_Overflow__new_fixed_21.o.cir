!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":27:22)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":27:26)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":71:27)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":71:31)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":110:27)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":110:31)
#loc205 = loc(fused[#loc5, #loc6])
#loc236 = loc(fused[#loc76, #loc77])
#loc263 = loc(fused[#loc141, #loc142])
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" internal dsolocal @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21L9badStaticE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc203)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21L9badSourceEi(%arg0: !s32i loc(fused[#loc5, #loc6])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc205)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc4)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc7)
    cir.scope {
      %4 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21L9badStaticE : !cir.ptr<!s32i> loc(#loc203)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc10)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc10)
      cir.if %6 {
        %7 = cir.const #cir.int<2147483647> : !s32i loc(#loc12)
        %8 = cir.const #cir.int<2> : !s32i loc(#loc13)
        %9 = cir.binop(div, %7, %8) : !s32i loc(#loc208)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc14)
        %11 = cir.binop(add, %9, %10) nsw : !s32i loc(#loc208)
        cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc209)
      } loc(#loc207)
    } loc(#loc206)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    cir.return %3 : !s32i loc(#loc210)
  } loc(#loc204)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc211)
  cir.func private @printIntLine(!s32i) loc(#loc212)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_213badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc214)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc27)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %4 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21L9badStaticE : !cir.ptr<!s32i> loc(#loc203)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %6 = cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21L9badSourceEi(%5) : (!s32i) -> !s32i loc(#loc32)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc219)
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc220)
      %9 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc221)
      %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc42)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc42)
      %12 = cir.const #cir.int<4> : !u64i loc(#loc222)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc223)
      cir.store %13, %7 : !u64i, !cir.ptr<!u64i> loc(#loc224)
      %14 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc46)
      %15 = cir.call @_Znam(%14) : (!u64i) -> !cir.ptr<!void> loc(#loc47)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc225)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc225)
      cir.store %17, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc226)
      cir.scope {
        %23 = cir.const #cir.int<0> : !s32i loc(#loc53)
        %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc53)
        cir.store %24, %8 : !u64i, !cir.ptr<!u64i> loc(#loc228)
        cir.for : cond {
          %25 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc55)
          %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc56)
          %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc229)
          cir.condition(%28) loc(#loc229)
        } body {
          cir.scope {
            %25 = cir.const #cir.int<0> : !s32i loc(#loc58)
            %26 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc59)
            %27 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc60)
            %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc61)
            cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc231)
          } loc(#loc230)
          cir.yield loc(#loc52)
        } step {
          %25 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc62)
          %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc63)
          cir.store %26, %8 : !u64i, !cir.ptr<!u64i> loc(#loc232)
          cir.yield loc(#loc227)
        } loc(#loc227)
      } loc(#loc227)
      %18 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
      %19 = cir.const #cir.int<0> : !s32i loc(#loc65)
      %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc66)
      %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc64)
      cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc67)
      %22 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc68)
      cir.delete.array %22 : <!s32i> loc(#loc68)
    } loc(#loc218)
    cir.return loc(#loc23)
  } loc(#loc213)
  cir.global "private" internal dsolocal @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21L14goodG2B1StaticE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc233)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc234)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc73)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21L14goodG2B1SourceEi(%arg0: !s32i loc(fused[#loc76, #loc77])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc236)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc75)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.scope {
      %4 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21L14goodG2B1StaticE : !cir.ptr<!s32i> loc(#loc233)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc81)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc81)
      cir.if %6 {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc73)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc73)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc85)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc86)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc239)
      } loc(#loc238)
    } loc(#loc237)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc240)
    cir.return %3 : !s32i loc(#loc240)
  } loc(#loc235)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc242)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc95)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %4 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21L14goodG2B1StaticE : !cir.ptr<!s32i> loc(#loc233)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %6 = cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21L14goodG2B1SourceEi(%5) : (!s32i) -> !s32i loc(#loc100)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc247)
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc248)
      %9 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc249)
      %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc110)
      %12 = cir.const #cir.int<4> : !u64i loc(#loc250)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc251)
      cir.store %13, %7 : !u64i, !cir.ptr<!u64i> loc(#loc252)
      %14 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc114)
      %15 = cir.call @_Znam(%14) : (!u64i) -> !cir.ptr<!void> loc(#loc115)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc253)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc253)
      cir.store %17, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc254)
      cir.scope {
        %23 = cir.const #cir.int<0> : !s32i loc(#loc121)
        %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc121)
        cir.store %24, %8 : !u64i, !cir.ptr<!u64i> loc(#loc256)
        cir.for : cond {
          %25 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc123)
          %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc124)
          %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc257)
          cir.condition(%28) loc(#loc257)
        } body {
          cir.scope {
            %25 = cir.const #cir.int<0> : !s32i loc(#loc126)
            %26 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc127)
            %27 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc128)
            %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc129)
            cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc259)
          } loc(#loc258)
          cir.yield loc(#loc120)
        } step {
          %25 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc130)
          %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc131)
          cir.store %26, %8 : !u64i, !cir.ptr<!u64i> loc(#loc260)
          cir.yield loc(#loc255)
        } loc(#loc255)
      } loc(#loc255)
      %18 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc132)
      %19 = cir.const #cir.int<0> : !s32i loc(#loc133)
      %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc134)
      %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc132)
      cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc135)
      %22 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc136)
      cir.delete.array %22 : <!s32i> loc(#loc136)
    } loc(#loc246)
    cir.return loc(#loc91)
  } loc(#loc241)
  cir.global "private" internal dsolocal @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21L14goodG2B2StaticE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc261)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21L14goodG2B2SourceEi(%arg0: !s32i loc(fused[#loc141, #loc142])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc263)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc140)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    cir.scope {
      %4 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21L14goodG2B2StaticE : !cir.ptr<!s32i> loc(#loc261)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc146)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc146)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc148)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc266)
      } loc(#loc265)
    } loc(#loc264)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc267)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc267)
    cir.return %3 : !s32i loc(#loc267)
  } loc(#loc262)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc269)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc157)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %4 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21L14goodG2B2StaticE : !cir.ptr<!s32i> loc(#loc261)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    %6 = cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21L14goodG2B2SourceEi(%5) : (!s32i) -> !s32i loc(#loc162)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc274)
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc275)
      %9 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc276)
      %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc172)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc172)
      %12 = cir.const #cir.int<4> : !u64i loc(#loc277)
      %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc278)
      cir.store %13, %7 : !u64i, !cir.ptr<!u64i> loc(#loc279)
      %14 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc176)
      %15 = cir.call @_Znam(%14) : (!u64i) -> !cir.ptr<!void> loc(#loc177)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc280)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc280)
      cir.store %17, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc281)
      cir.scope {
        %23 = cir.const #cir.int<0> : !s32i loc(#loc183)
        %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc183)
        cir.store %24, %8 : !u64i, !cir.ptr<!u64i> loc(#loc283)
        cir.for : cond {
          %25 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc185)
          %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc186)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc186)
          %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc284)
          cir.condition(%28) loc(#loc284)
        } body {
          cir.scope {
            %25 = cir.const #cir.int<0> : !s32i loc(#loc188)
            %26 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc189)
            %27 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc190)
            %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc191)
            cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc286)
          } loc(#loc285)
          cir.yield loc(#loc182)
        } step {
          %25 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc192)
          %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc193)
          cir.store %26, %8 : !u64i, !cir.ptr<!u64i> loc(#loc287)
          cir.yield loc(#loc282)
        } loc(#loc282)
      } loc(#loc282)
      %18 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc194)
      %19 = cir.const #cir.int<0> : !s32i loc(#loc195)
      %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc196)
      %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc194)
      cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc197)
      %22 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc198)
      cir.delete.array %22 : <!s32i> loc(#loc198)
    } loc(#loc273)
    cir.return loc(#loc153)
  } loc(#loc268)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_214goodEv() extra(#fn_attr) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21L8goodG2B1Ev() : () -> () loc(#loc201)
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21L8goodG2B2Ev() : () -> () loc(#loc202)
    cir.return loc(#loc200)
  } loc(#loc288)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":25:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":25:24)
#loc3 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":27:1)
#loc4 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":37:1)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":28:1)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":29:5)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":35:5)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":29:8)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":30:5)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":32:16)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":32:26)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":32:30)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":32:9)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":36:12)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":36:5)
#loc18 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc19 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":39:1)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":60:1)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":41:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":41:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":43:13)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":43:12)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":43:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":44:17)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":44:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":45:22)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":45:12)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":45:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":45:26)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":46:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":58:5)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":47:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":47:16)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":47:26)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":48:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":48:14)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":50:21)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":50:28)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":50:38)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":50:9)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":51:37)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":39:6)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":51:28)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":51:46)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":51:9)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":52:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":55:9)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":52:18)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":52:14)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":52:21)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":52:33)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":53:9)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":54:29)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":54:13)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":54:24)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":54:25)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":52:40)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":52:39)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":56:22)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":56:33)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":56:34)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":56:9)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":57:19)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":67:1)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":67:29)
#loc71 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc72 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":76:19)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":71:1)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":84:1)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":72:1)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":73:5)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":82:5)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":73:8)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":74:5)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":77:5)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":79:5)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":76:9)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":81:16)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":81:9)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":83:12)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":83:5)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":86:1)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":107:1)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":88:5)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":88:9)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":90:13)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":90:12)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":90:5)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":91:22)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":91:5)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":92:27)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":92:12)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":92:5)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":92:31)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":93:5)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":105:5)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":94:9)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":94:16)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":94:26)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":95:9)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":95:14)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":97:21)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":97:28)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":97:38)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":97:9)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":98:37)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":86:13)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":98:28)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":98:46)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":98:9)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":99:9)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":102:9)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":99:18)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":99:14)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":99:21)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":99:33)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":100:9)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":101:29)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":101:13)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":101:24)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":101:25)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":99:40)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":99:39)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":103:22)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":103:33)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":103:34)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":103:9)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":104:19)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":68:1)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":68:29)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":110:1)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":118:1)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":111:1)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":112:5)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":116:5)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":112:8)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":113:5)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":115:16)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":115:9)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":117:12)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":117:5)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":120:1)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":141:1)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":122:5)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":122:9)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":124:13)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":124:12)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":124:5)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":125:22)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":125:5)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":126:27)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":126:12)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":126:5)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":126:31)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":127:5)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":139:5)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":128:9)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":128:16)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":128:26)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":129:9)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":129:14)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":131:21)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":131:28)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":131:38)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":131:9)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":132:37)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":120:13)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":132:28)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":132:46)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":132:9)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":133:9)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":136:9)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":133:18)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":133:14)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":133:21)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":133:33)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":134:9)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":135:29)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":135:13)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":135:24)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":135:25)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":133:40)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":133:39)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":137:22)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":137:33)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":137:34)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":137:9)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":138:19)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":143:1)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":147:1)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":145:5)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fixed_21.cpp":146:5)
#loc203 = loc(fused[#loc1, #loc2])
#loc204 = loc(fused[#loc3, #loc4])
#loc206 = loc(fused[#loc8, #loc9])
#loc207 = loc(fused[#loc11, #loc9])
#loc208 = loc(fused[#loc12, #loc13])
#loc209 = loc(fused[#loc15, #loc14])
#loc210 = loc(fused[#loc17, #loc16])
#loc211 = loc(fused[#loc18, #loc19])
#loc212 = loc(fused[#loc20, #loc21])
#loc213 = loc(fused[#loc22, #loc23])
#loc214 = loc(fused[#loc24, #loc25])
#loc215 = loc(fused[#loc28, #loc26])
#loc216 = loc(fused[#loc30, #loc29])
#loc217 = loc(fused[#loc33, #loc34])
#loc218 = loc(fused[#loc35, #loc36])
#loc219 = loc(fused[#loc37, #loc38])
#loc220 = loc(fused[#loc37, #loc39])
#loc221 = loc(fused[#loc40, #loc41])
#loc222 = loc(fused[#loc43, #loc44])
#loc223 = loc(fused[#loc42, #loc44])
#loc224 = loc(fused[#loc45, #loc44])
#loc225 = loc(fused[#loc48, #loc49])
#loc226 = loc(fused[#loc50, #loc49])
#loc227 = loc(fused[#loc51, #loc52])
#loc228 = loc(fused[#loc54, #loc53])
#loc229 = loc(fused[#loc55, #loc56])
#loc230 = loc(fused[#loc57, #loc52])
#loc231 = loc(fused[#loc59, #loc58])
#loc232 = loc(fused[#loc63, #loc62])
#loc233 = loc(fused[#loc69, #loc70])
#loc234 = loc(fused[#loc71, #loc72])
#loc235 = loc(fused[#loc74, #loc75])
#loc237 = loc(fused[#loc79, #loc80])
#loc238 = loc(fused[#loc82, #loc83, #loc84, #loc80])
#loc239 = loc(fused[#loc87, #loc86])
#loc240 = loc(fused[#loc89, #loc88])
#loc241 = loc(fused[#loc90, #loc91])
#loc242 = loc(fused[#loc92, #loc93])
#loc243 = loc(fused[#loc96, #loc94])
#loc244 = loc(fused[#loc98, #loc97])
#loc245 = loc(fused[#loc101, #loc102])
#loc246 = loc(fused[#loc103, #loc104])
#loc247 = loc(fused[#loc105, #loc106])
#loc248 = loc(fused[#loc105, #loc107])
#loc249 = loc(fused[#loc108, #loc109])
#loc250 = loc(fused[#loc111, #loc112])
#loc251 = loc(fused[#loc110, #loc112])
#loc252 = loc(fused[#loc113, #loc112])
#loc253 = loc(fused[#loc116, #loc117])
#loc254 = loc(fused[#loc118, #loc117])
#loc255 = loc(fused[#loc119, #loc120])
#loc256 = loc(fused[#loc122, #loc121])
#loc257 = loc(fused[#loc123, #loc124])
#loc258 = loc(fused[#loc125, #loc120])
#loc259 = loc(fused[#loc127, #loc126])
#loc260 = loc(fused[#loc131, #loc130])
#loc261 = loc(fused[#loc137, #loc138])
#loc262 = loc(fused[#loc139, #loc140])
#loc264 = loc(fused[#loc144, #loc145])
#loc265 = loc(fused[#loc147, #loc145])
#loc266 = loc(fused[#loc149, #loc148])
#loc267 = loc(fused[#loc151, #loc150])
#loc268 = loc(fused[#loc152, #loc153])
#loc269 = loc(fused[#loc154, #loc155])
#loc270 = loc(fused[#loc158, #loc156])
#loc271 = loc(fused[#loc160, #loc159])
#loc272 = loc(fused[#loc163, #loc164])
#loc273 = loc(fused[#loc165, #loc166])
#loc274 = loc(fused[#loc167, #loc168])
#loc275 = loc(fused[#loc167, #loc169])
#loc276 = loc(fused[#loc170, #loc171])
#loc277 = loc(fused[#loc173, #loc174])
#loc278 = loc(fused[#loc172, #loc174])
#loc279 = loc(fused[#loc175, #loc174])
#loc280 = loc(fused[#loc178, #loc179])
#loc281 = loc(fused[#loc180, #loc179])
#loc282 = loc(fused[#loc181, #loc182])
#loc283 = loc(fused[#loc184, #loc183])
#loc284 = loc(fused[#loc185, #loc186])
#loc285 = loc(fused[#loc187, #loc182])
#loc286 = loc(fused[#loc189, #loc188])
#loc287 = loc(fused[#loc193, #loc192])
#loc288 = loc(fused[#loc199, #loc200])
