!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_int_static_06_bad.dataBuffer = #cir.zero : !cir.array<!s32i x 100> {alignment = 16 : i64} loc(#loc1)
  cir.func private @printIntLine(!s32i) loc(#loc168)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc169)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_int_static_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc172)
    cir.scope {
      %9 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc15)
      %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc174)
      cir.if %11 {
        cir.scope {
          %12 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_int_static_06_bad.dataBuffer : !cir.ptr<!cir.array<!s32i x 100>> loc(#loc1)
          cir.scope {
            %14 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc178)
            cir.scope {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc25)
              %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc25)
              cir.store %16, %14 : !u64i, !cir.ptr<!u64i> loc(#loc180)
              cir.for : cond {
                %17 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc27)
                %18 = cir.const #cir.int<100> : !s32i loc(#loc28)
                %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc28)
                %20 = cir.cmp(lt, %17, %19) : !u64i, !cir.bool loc(#loc181)
                cir.condition(%20) loc(#loc29)
              } body {
                cir.scope {
                  %17 = cir.const #cir.int<5> : !s32i loc(#loc31)
                  %18 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc32)
                  %19 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc33)
                  %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !u64i), !cir.ptr<!s32i> loc(#loc33)
                  cir.store %17, %20 : !s32i, !cir.ptr<!s32i> loc(#loc183)
                } loc(#loc182)
                cir.yield loc(#loc24)
              } step {
                %17 = cir.load %14 : !cir.ptr<!u64i>, !u64i loc(#loc34)
                %18 = cir.unary(inc, %17) : !u64i, !u64i loc(#loc35)
                cir.store %18, %14 : !u64i, !cir.ptr<!u64i> loc(#loc184)
                cir.yield loc(#loc179)
              } loc(#loc179)
            } loc(#loc179)
          } loc(#loc177)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc36)
          cir.store %13, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc185)
        } loc(#loc176)
      } loc(#loc175)
    } loc(#loc173)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!s32i>, %3 : !s32i), !cir.ptr<!s32i> loc(#loc40)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc41)
    %6 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc42)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc43)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc42)
    cir.return loc(#loc7)
  } loc(#loc170)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_int_static_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc187)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc46)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc188)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc48)
    cir.return loc(#loc45)
  } loc(#loc186)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc52)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc190)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc55)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc191)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc193)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc62)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc194)
    cir.scope {
      %9 = cir.const #cir.int<5> : !s32i loc(#loc66)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc67)
      %11 = cir.cmp(ne, %9, %10) : !s32i, !cir.bool loc(#loc196)
      cir.if %11 {
        %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc52)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc52)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc71)
      } else {
        cir.scope {
          %12 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc199)
          %13 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc76)
          %14 = cir.const #cir.int<100> : !s32i loc(#loc77)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc77)
          %16 = cir.const #cir.int<4> : !u64i loc(#loc200)
          %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc201)
          %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc76)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc202)
          cir.store %19, %12 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc199)
          cir.scope {
            %21 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc82)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc83)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc83)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s32i>, !cir.bool loc(#loc204)
            cir.if %24 {
              %25 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc55)
              %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc55)
              cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc85)
              %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc86)
              %28 = cir.const #cir.int<1> : !s32i loc(#loc87)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc86)
            } loc(#loc205)
          } loc(#loc203)
          cir.scope {
            %21 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc207)
            cir.scope {
              %22 = cir.const #cir.int<0> : !s32i loc(#loc94)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc94)
              cir.store %23, %21 : !u64i, !cir.ptr<!u64i> loc(#loc209)
              cir.for : cond {
                %24 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc96)
                %25 = cir.const #cir.int<100> : !s32i loc(#loc97)
                %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc97)
                %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc210)
                cir.condition(%27) loc(#loc98)
              } body {
                cir.scope {
                  %24 = cir.const #cir.int<5> : !s32i loc(#loc100)
                  %25 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc101)
                  %26 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc102)
                  %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !u64i), !cir.ptr<!s32i> loc(#loc103)
                  cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc212)
                } loc(#loc211)
                cir.yield loc(#loc93)
              } step {
                %24 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc104)
                %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc105)
                cir.store %25, %21 : !u64i, !cir.ptr<!u64i> loc(#loc213)
                cir.yield loc(#loc208)
              } loc(#loc208)
            } loc(#loc208)
          } loc(#loc206)
          %20 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc106)
          cir.store %20, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc214)
        } loc(#loc198)
      } loc(#loc197)
    } loc(#loc195)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc108)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!s32i>, %3 : !s32i), !cir.ptr<!s32i> loc(#loc110)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc111)
    %6 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc112)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc113)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc113)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc112)
    cir.return loc(#loc59)
  } loc(#loc192)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc216)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc118)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc217)
    cir.scope {
      %9 = cir.const #cir.int<5> : !s32i loc(#loc122)
      %10 = cir.const #cir.int<5> : !s32i loc(#loc123)
      %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc219)
      cir.if %11 {
        cir.scope {
          %12 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc222)
          %13 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc129)
          %14 = cir.const #cir.int<100> : !s32i loc(#loc130)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc130)
          %16 = cir.const #cir.int<4> : !u64i loc(#loc223)
          %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc224)
          %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc129)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc225)
          cir.store %19, %12 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc222)
          cir.scope {
            %21 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc135)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc136)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc136)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s32i>, !cir.bool loc(#loc227)
            cir.if %24 {
              %25 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc138)
              %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc138)
              cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc139)
              %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc140)
              %28 = cir.const #cir.int<1> : !s32i loc(#loc141)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc140)
            } loc(#loc228)
          } loc(#loc226)
          cir.scope {
            %21 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc230)
            cir.scope {
              %22 = cir.const #cir.int<0> : !s32i loc(#loc148)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc148)
              cir.store %23, %21 : !u64i, !cir.ptr<!u64i> loc(#loc232)
              cir.for : cond {
                %24 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc150)
                %25 = cir.const #cir.int<100> : !s32i loc(#loc151)
                %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc151)
                %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc233)
                cir.condition(%27) loc(#loc152)
              } body {
                cir.scope {
                  %24 = cir.const #cir.int<5> : !s32i loc(#loc154)
                  %25 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc155)
                  %26 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc156)
                  %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !u64i), !cir.ptr<!s32i> loc(#loc157)
                  cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc235)
                } loc(#loc234)
                cir.yield loc(#loc147)
              } step {
                %24 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc158)
                %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc159)
                cir.store %25, %21 : !u64i, !cir.ptr<!u64i> loc(#loc236)
                cir.yield loc(#loc231)
              } loc(#loc231)
            } loc(#loc231)
          } loc(#loc229)
          %20 = cir.load %12 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc160)
          cir.store %20, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc237)
        } loc(#loc221)
      } loc(#loc220)
    } loc(#loc218)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc162)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc163)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!s32i>, %3 : !s32i), !cir.ptr<!s32i> loc(#loc164)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc165)
    %6 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc166)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc167)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc167)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc166)
    cir.return loc(#loc115)
  } loc(#loc215)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":35:24)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("/usr/include/stdlib.h":687:1)
#loc5 = loc("/usr/include/stdlib.h":687:32)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":27:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":49:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":29:5)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":29:11)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":30:12)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":30:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":31:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":45:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":31:8)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":31:27)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":32:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":33:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":44:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":36:13)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":42:13)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":37:17)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":37:24)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":38:17)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":41:17)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":38:26)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":38:22)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":38:29)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":38:33)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":38:31)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":39:17)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":40:37)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":40:32)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":40:21)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":38:39)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":38:38)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":43:20)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":43:13)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":46:18)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":46:23)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":46:24)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":46:5)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":48:5)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":48:10)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":120:1)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":124:1)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":122:5)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":122:14)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":123:5)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":123:14)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":63:19)
#loc53 = loc("/usr/include/stdlib.h":672:1)
#loc54 = loc("/usr/include/stdlib.h":672:45)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":72:27)
#loc56 = loc("/usr/include/stdlib.h":756:1)
#loc57 = loc("/usr/include/stdlib.h":756:70)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":56:1)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":88:1)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":58:5)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":58:11)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":59:12)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":59:5)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":60:5)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":84:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":60:8)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":60:27)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":61:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":64:5)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":66:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":63:9)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":67:9)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":83:9)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":69:13)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":69:61)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":69:39)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":69:46)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":69:50)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":69:60)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":70:13)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":74:13)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":70:17)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":70:31)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":71:13)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":72:17)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":73:17)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":73:22)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":75:13)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":81:13)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":76:17)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":76:24)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":77:17)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":80:17)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":77:26)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":77:22)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":77:29)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":77:33)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":77:31)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":78:17)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":79:37)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":79:21)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":79:32)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":79:33)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":77:39)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":77:38)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":82:20)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":82:13)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":85:18)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":85:23)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":85:24)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":85:5)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":87:5)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":87:10)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":91:1)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":118:1)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":93:5)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":93:11)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":94:12)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":94:5)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":95:5)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":114:5)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":95:8)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":95:27)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":96:5)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":97:9)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":113:9)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":99:13)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":99:61)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":99:39)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":99:46)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":99:50)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":99:60)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":100:13)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":104:13)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":100:17)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":100:31)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":101:13)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":102:27)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":102:17)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":103:17)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":103:22)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":105:13)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":111:13)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":106:17)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":106:24)
#loc146 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":107:17)
#loc147 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":110:17)
#loc148 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":107:26)
#loc149 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":107:22)
#loc150 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":107:29)
#loc151 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":107:33)
#loc152 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":107:31)
#loc153 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":108:17)
#loc154 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":109:37)
#loc155 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":109:21)
#loc156 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":109:32)
#loc157 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":109:33)
#loc158 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":107:39)
#loc159 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":107:38)
#loc160 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":112:20)
#loc161 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":112:13)
#loc162 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":115:18)
#loc163 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":115:23)
#loc164 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":115:24)
#loc165 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":115:5)
#loc166 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":117:5)
#loc167 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_static_06.c":117:10)
#loc168 = loc(fused[#loc2, #loc3])
#loc169 = loc(fused[#loc4, #loc5])
#loc170 = loc(fused[#loc6, #loc7])
#loc171 = loc(fused[#loc8, #loc9])
#loc172 = loc(fused[#loc11, #loc10])
#loc173 = loc(fused[#loc12, #loc13])
#loc174 = loc(fused[#loc14, #loc15])
#loc175 = loc(fused[#loc16, #loc13])
#loc176 = loc(fused[#loc17, #loc18])
#loc177 = loc(fused[#loc19, #loc20])
#loc178 = loc(fused[#loc21, #loc22])
#loc179 = loc(fused[#loc23, #loc24])
#loc180 = loc(fused[#loc26, #loc25])
#loc181 = loc(fused[#loc27, #loc28])
#loc182 = loc(fused[#loc30, #loc24])
#loc183 = loc(fused[#loc33, #loc31])
#loc184 = loc(fused[#loc35, #loc34])
#loc185 = loc(fused[#loc37, #loc36])
#loc186 = loc(fused[#loc44, #loc45])
#loc187 = loc(fused[#loc46, #loc47])
#loc188 = loc(fused[#loc48, #loc49])
#loc189 = loc(fused[#loc50, #loc51])
#loc190 = loc(fused[#loc53, #loc54])
#loc191 = loc(fused[#loc56, #loc57])
#loc192 = loc(fused[#loc58, #loc59])
#loc193 = loc(fused[#loc60, #loc61])
#loc194 = loc(fused[#loc63, #loc62])
#loc195 = loc(fused[#loc64, #loc65])
#loc196 = loc(fused[#loc66, #loc67])
#loc197 = loc(fused[#loc68, #loc69, #loc70, #loc65])
#loc198 = loc(fused[#loc72, #loc73])
#loc199 = loc(fused[#loc74, #loc75])
#loc200 = loc(fused[#loc78, #loc79])
#loc201 = loc(fused[#loc77, #loc79])
#loc202 = loc(fused[#loc76, #loc75])
#loc203 = loc(fused[#loc80, #loc81])
#loc204 = loc(fused[#loc82, #loc83])
#loc205 = loc(fused[#loc84, #loc81])
#loc206 = loc(fused[#loc88, #loc89])
#loc207 = loc(fused[#loc90, #loc91])
#loc208 = loc(fused[#loc92, #loc93])
#loc209 = loc(fused[#loc95, #loc94])
#loc210 = loc(fused[#loc96, #loc97])
#loc211 = loc(fused[#loc99, #loc93])
#loc212 = loc(fused[#loc101, #loc100])
#loc213 = loc(fused[#loc105, #loc104])
#loc214 = loc(fused[#loc107, #loc106])
#loc215 = loc(fused[#loc114, #loc115])
#loc216 = loc(fused[#loc116, #loc117])
#loc217 = loc(fused[#loc119, #loc118])
#loc218 = loc(fused[#loc120, #loc121])
#loc219 = loc(fused[#loc122, #loc123])
#loc220 = loc(fused[#loc124, #loc121])
#loc221 = loc(fused[#loc125, #loc126])
#loc222 = loc(fused[#loc127, #loc128])
#loc223 = loc(fused[#loc131, #loc132])
#loc224 = loc(fused[#loc130, #loc132])
#loc225 = loc(fused[#loc129, #loc128])
#loc226 = loc(fused[#loc133, #loc134])
#loc227 = loc(fused[#loc135, #loc136])
#loc228 = loc(fused[#loc137, #loc134])
#loc229 = loc(fused[#loc142, #loc143])
#loc230 = loc(fused[#loc144, #loc145])
#loc231 = loc(fused[#loc146, #loc147])
#loc232 = loc(fused[#loc149, #loc148])
#loc233 = loc(fused[#loc150, #loc151])
#loc234 = loc(fused[#loc153, #loc147])
#loc235 = loc(fused[#loc155, #loc154])
#loc236 = loc(fused[#loc159, #loc158])
#loc237 = loc(fused[#loc161, #loc160])
