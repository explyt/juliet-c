!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc7 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":27:23)
#loc8 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":27:34)
#loc39 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":50:27)
#loc40 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":50:38)
#loc67 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":68:27)
#loc68 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":68:38)
#loc100 = loc(fused[#loc7, #loc8])
#loc113 = loc(fused[#loc39, #loc40])
#loc125 = loc(fused[#loc67, #loc68])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_int64_t_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc97)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc98)
  cir.func internal private @_ZN42CWE415_Double_Free__malloc_free_int64_t_43L9badSourceERPl(%arg0: !cir.ptr<!cir.ptr<!s64i>> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc100)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc9)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc10)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc11)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc11)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc101)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc102)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc10)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc103)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc15)
    cir.store %7, %8 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc104)
    cir.br ^bb1 loc(#loc105)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc18)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc18)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc19)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s64i>, !cir.bool loc(#loc106)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc107)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc21)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc23)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc21)
    cir.br ^bb3 loc(#loc17)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc24)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc24)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc24)
    cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc25)
    cir.return loc(#loc6)
  } loc(#loc99)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc108)
  cir.func @_ZN42CWE415_Double_Free__malloc_free_int64_t_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc32)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc111)
    cir.call @_ZN42CWE415_Double_Free__malloc_free_int64_t_43L9badSourceERPl(%0) : (!cir.ptr<!cir.ptr<!s64i>>) -> () loc(#loc34)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc35)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc36)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc36)
    cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc35)
    cir.return loc(#loc29)
  } loc(#loc109)
  cir.func internal private @_ZN42CWE415_Double_Free__malloc_free_int64_t_43L13goodG2BSourceERPl(%arg0: !cir.ptr<!cir.ptr<!s64i>> loc(fused[#loc39, #loc40])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc113)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc41)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc42)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc43)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc43)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc114)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc115)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc42)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc116)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc47)
    cir.store %7, %8 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc117)
    cir.br ^bb1 loc(#loc118)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc50)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc50)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc51)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s64i>, !cir.bool loc(#loc119)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc120)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc53)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc55)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc53)
    cir.br ^bb3 loc(#loc49)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc49)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc38)
  } loc(#loc112)
  cir.func internal private @_ZN42CWE415_Double_Free__malloc_free_int64_t_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc60)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc123)
    cir.call @_ZN42CWE415_Double_Free__malloc_free_int64_t_43L13goodG2BSourceERPl(%0) : (!cir.ptr<!cir.ptr<!s64i>>) -> () loc(#loc62)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc63)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc64)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc64)
    cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc63)
    cir.return loc(#loc57)
  } loc(#loc121)
  cir.func internal private @_ZN42CWE415_Double_Free__malloc_free_int64_t_43L13goodB2GSourceERPl(%arg0: !cir.ptr<!cir.ptr<!s64i>> loc(fused[#loc67, #loc68])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc125)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>> loc(#loc69)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc70)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc71)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc71)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc126)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc127)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc70)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc128)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc75)
    cir.store %7, %8 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc129)
    cir.br ^bb1 loc(#loc130)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc78)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc78)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc79)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s64i>, !cir.bool loc(#loc131)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc132)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc81)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc83)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc81)
    cir.br ^bb3 loc(#loc77)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc77)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s64i>>>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc84)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc84)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc84)
    cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc85)
    cir.return loc(#loc66)
  } loc(#loc124)
  cir.func internal private @_ZN42CWE415_Double_Free__malloc_free_int64_t_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc134)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc90)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc135)
    cir.call @_ZN42CWE415_Double_Free__malloc_free_int64_t_43L13goodB2GSourceERPl(%0) : (!cir.ptr<!cir.ptr<!s64i>>) -> () loc(#loc92)
    cir.return loc(#loc87)
  } loc(#loc133)
  cir.func @_ZN42CWE415_Double_Free__malloc_free_int64_t_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN42CWE415_Double_Free__malloc_free_int64_t_43L7goodG2BEv() : () -> () loc(#loc95)
    cir.call @_ZN42CWE415_Double_Free__malloc_free_int64_t_43L7goodB2GEv() : () -> () loc(#loc96)
    cir.return loc(#loc94)
  } loc(#loc136)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_int64_t_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":27:1)
#loc6 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":33:1)
#loc9 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":28:1)
#loc10 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":29:23)
#loc11 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":29:30)
#loc12 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":29:34)
#loc13 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":29:48)
#loc14 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":29:49)
#loc15 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":29:5)
#loc16 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":30:5)
#loc17 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":30:33)
#loc18 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":30:9)
#loc19 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":30:17)
#loc20 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":30:23)
#loc21 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":30:24)
#loc22 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":30:30)
#loc23 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":30:29)
#loc24 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":32:10)
#loc25 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":32:5)
#loc26 = loc("/usr/include/stdlib.h":687:1)
#loc27 = loc("/usr/include/stdlib.h":687:32)
#loc28 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":35:1)
#loc29 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":43:1)
#loc30 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":37:5)
#loc31 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":37:15)
#loc32 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":39:12)
#loc33 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":39:5)
#loc34 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":40:5)
#loc35 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":42:5)
#loc36 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":42:10)
#loc37 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":50:1)
#loc38 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":55:1)
#loc41 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":51:1)
#loc42 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":52:23)
#loc43 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":52:30)
#loc44 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":52:34)
#loc45 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":52:48)
#loc46 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":52:49)
#loc47 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":52:5)
#loc48 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":53:5)
#loc49 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":53:33)
#loc50 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":53:9)
#loc51 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":53:17)
#loc52 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":53:23)
#loc53 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":53:24)
#loc54 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":53:30)
#loc55 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":53:29)
#loc56 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":57:1)
#loc57 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":65:1)
#loc58 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":59:5)
#loc59 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":59:15)
#loc60 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":61:12)
#loc61 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":61:5)
#loc62 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":62:5)
#loc63 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":64:5)
#loc64 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":64:10)
#loc65 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":68:1)
#loc66 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":74:1)
#loc69 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":69:1)
#loc70 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":70:23)
#loc71 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":70:30)
#loc72 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":70:34)
#loc73 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":70:48)
#loc74 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":70:49)
#loc75 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":70:5)
#loc76 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":71:5)
#loc77 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":71:33)
#loc78 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":71:9)
#loc79 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":71:17)
#loc80 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":71:23)
#loc81 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":71:24)
#loc82 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":71:30)
#loc83 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":71:29)
#loc84 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":73:10)
#loc85 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":73:5)
#loc86 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":76:1)
#loc87 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":85:1)
#loc88 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":78:5)
#loc89 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":78:15)
#loc90 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":80:12)
#loc91 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":80:5)
#loc92 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":81:5)
#loc93 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":87:1)
#loc94 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":91:1)
#loc95 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":89:5)
#loc96 = loc("CWE415_Double_Free__malloc_free_int64_t_43.cpp":90:5)
#loc97 = loc(fused[#loc1, #loc2])
#loc98 = loc(fused[#loc3, #loc4])
#loc99 = loc(fused[#loc5, #loc6])
#loc101 = loc(fused[#loc12, #loc13])
#loc102 = loc(fused[#loc11, #loc13])
#loc103 = loc(fused[#loc10, #loc14])
#loc104 = loc(fused[#loc15, #loc14])
#loc105 = loc(fused[#loc16, #loc17])
#loc106 = loc(fused[#loc18, #loc19])
#loc107 = loc(fused[#loc20, #loc17])
#loc108 = loc(fused[#loc26, #loc27])
#loc109 = loc(fused[#loc28, #loc29])
#loc110 = loc(fused[#loc30, #loc31])
#loc111 = loc(fused[#loc33, #loc32])
#loc112 = loc(fused[#loc37, #loc38])
#loc114 = loc(fused[#loc44, #loc45])
#loc115 = loc(fused[#loc43, #loc45])
#loc116 = loc(fused[#loc42, #loc46])
#loc117 = loc(fused[#loc47, #loc46])
#loc118 = loc(fused[#loc48, #loc49])
#loc119 = loc(fused[#loc50, #loc51])
#loc120 = loc(fused[#loc52, #loc49])
#loc121 = loc(fused[#loc56, #loc57])
#loc122 = loc(fused[#loc58, #loc59])
#loc123 = loc(fused[#loc61, #loc60])
#loc124 = loc(fused[#loc65, #loc66])
#loc126 = loc(fused[#loc72, #loc73])
#loc127 = loc(fused[#loc71, #loc73])
#loc128 = loc(fused[#loc70, #loc74])
#loc129 = loc(fused[#loc75, #loc74])
#loc130 = loc(fused[#loc76, #loc77])
#loc131 = loc(fused[#loc78, #loc79])
#loc132 = loc(fused[#loc80, #loc77])
#loc133 = loc(fused[#loc86, #loc87])
#loc134 = loc(fused[#loc88, #loc89])
#loc135 = loc(fused[#loc91, #loc90])
#loc136 = loc(fused[#loc93, #loc94])
