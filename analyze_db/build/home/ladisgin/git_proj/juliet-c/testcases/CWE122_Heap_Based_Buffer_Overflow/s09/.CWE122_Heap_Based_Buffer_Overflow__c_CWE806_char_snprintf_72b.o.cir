!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:7)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:18)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:28)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":35:14)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":35:29)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":53:18)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":53:33)
#loc70 = loc(fused[#loc4, #loc5])
#loc77 = loc(fused[#loc26, #loc27])
#loc82 = loc(fused[#loc48, #loc49])
!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl_data = !cir.struct<struct "std::_Vector_base<char *, std::allocator<char *>>::_Vector_impl_data" {!cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl = !cir.struct<struct "std::_Vector_base<char *, std::allocator<char *>>::_Vector_impl" {!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl_data} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E = !cir.struct<struct "std::_Vector_base<char *, std::allocator<char *>>" {!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl} #cir.record.decl.ast>
!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E = !cir.struct<class "std::vector<char *, std::allocator<char *>>" {!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func linkonce_odr @_ZNSt6vectorIPcSaIS0_EEixEm(%arg0: !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1128:7), %arg1: !u64i loc(fused[#loc4, #loc5])) -> !cir.ptr<!cir.ptr<!s8i>> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__n", init] {alignment = 8 : i64} loc(#loc70)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["__retval"] {alignment = 8 : i64} loc(#loc2)
    cir.store %arg0, %0 : !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>> loc(#loc6)
    cir.store %arg1, %1 : !u64i, !cir.ptr<!u64i> loc(#loc6)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>>, !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> loc(#loc3)
    %4 = cir.base_class_addr(%3 : !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> loc(#loc7)
    %5 = cir.get_member %4[0] {name = "_M_impl"} : !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> -> !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl> loc(#loc8)
    %6 = cir.base_class_addr(%5 : !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl_data> loc(#loc7)
    %7 = cir.get_member %6[0] {name = "_M_start"} : !cir.ptr<!ty_std3A3A_Vector_base3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E3A3A_Vector_impl_data> -> !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc9)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc10)
    %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc11)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!cir.ptr<!s8i>>, %9 : !u64i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc71)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc71)
    cir.return %11 : !cir.ptr<!cir.ptr<!s8i>> loc(#loc71)
  } loc(#loc69)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr1) loc(#loc72)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc19)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc74)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc75)
  cir.func @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_727badSinkESt6vectorIPcSaIS1_EE(%arg0: !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E loc(fused[#loc26, #loc27])) extra(#fn_attr2) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc78)
    %1 = cir.alloca !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc77)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc79)
    cir.store %arg0, %1 : !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> loc(#loc32)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc33)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc33)
    %5 = cir.call @_ZNSt6vectorIPcSaIS0_EEixEm(%1, %4) : (!cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, !u64i) -> !cir.ptr<!cir.ptr<!s8i>> extra(#fn_attr1) loc(#loc34)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc79)
    cir.br ^bb1 loc(#loc80)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc78)
    cir.store %7, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc78)
    %8 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc37)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc38)
    %10 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc39)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc39)
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc19)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc19)
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %16 = cir.call @snprintf(%9, %12, %14, %15) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc37)
    %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc44)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
    cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc44)
    cir.br ^bb2 loc(#loc36)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc25)
  } loc(#loc76)
  cir.func @_ZN60CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_7211goodG2BSinkESt6vectorIPcSaIS1_EE(%arg0: !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E loc(fused[#loc48, #loc49])) extra(#fn_attr2) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc83)
    %1 = cir.alloca !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc82)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc84)
    cir.store %arg0, %1 : !ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E> loc(#loc54)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc55)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc55)
    %5 = cir.call @_ZNSt6vectorIPcSaIS0_EEixEm(%1, %4) : (!cir.ptr<!ty_std3A3Avector3Cchar_2A2C_std3A3Aallocator3Cchar_2A3E3E>, !u64i) -> !cir.ptr<!cir.ptr<!s8i>> extra(#fn_attr1) loc(#loc56)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
    cir.br ^bb1 loc(#loc85)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc83)
    cir.store %7, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc83)
    %8 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc59)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc60)
    %10 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc61)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc61)
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc63)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc63)
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %16 = cir.call @snprintf(%9, %12, %14, %15) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc59)
    %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc67)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc68)
    cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc67)
    cir.br ^bb2 loc(#loc58)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc47)
  } loc(#loc81)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1127:7)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1132:7)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1129:7)
#loc7 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:11)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":373:20)
#loc9 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":93:10)
#loc10 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:25)
#loc11 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:36)
#loc12 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:34)
#loc13 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:2)
#loc14 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/bits/stl_vector.h":1131:39)
#loc15 = loc("/usr/include/stdio.h":385:1)
#loc16 = loc("/usr/include/stdio.h":387:62)
#loc17 = loc("/usr/include/string.h":407:1)
#loc18 = loc("/usr/include/string.h":408:33)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":42:38)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc22 = loc("/usr/include/stdlib.h":687:1)
#loc23 = loc("/usr/include/stdlib.h":687:32)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":35:1)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":46:1)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":40:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":40:25)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":38:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":38:31)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":36:1)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":38:30)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":38:19)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":39:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":45:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":42:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":42:18)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":42:24)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":42:31)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":42:44)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":43:19)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":43:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":44:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":44:14)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":53:1)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":63:1)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":57:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":57:25)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":55:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":55:31)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":54:1)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":55:30)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":55:19)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":56:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":62:5)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":59:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":59:18)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":59:24)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":59:31)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":59:38)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":59:44)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":60:19)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":60:9)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":61:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_snprintf_72b.cpp":61:14)
#loc69 = loc(fused[#loc1, #loc2])
#loc71 = loc(fused[#loc13, #loc14])
#loc72 = loc(fused[#loc15, #loc16])
#loc73 = loc(fused[#loc17, #loc18])
#loc74 = loc(fused[#loc20, #loc21])
#loc75 = loc(fused[#loc22, #loc23])
#loc76 = loc(fused[#loc24, #loc25])
#loc78 = loc(fused[#loc28, #loc29])
#loc79 = loc(fused[#loc30, #loc31])
#loc80 = loc(fused[#loc35, #loc36])
#loc81 = loc(fused[#loc46, #loc47])
#loc83 = loc(fused[#loc50, #loc51])
#loc84 = loc(fused[#loc52, #loc53])
#loc85 = loc(fused[#loc57, #loc58])
