!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc70 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":96:10)
#loc71 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":96:14)
#loc72 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":96:20)
#loc73 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":96:32)
#loc163 = loc(fused[#loc70, #loc71])
#loc164 = loc(fused[#loc72, #loc73])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int_realloc_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc138)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc139)
  cir.func private @printIntLine(!s32i) loc(#loc140)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc141)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__int_realloc_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc144)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc15)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc16)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc16)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc17)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc145)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc146)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc147)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc148)
    cir.scope {
      %11 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc150)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc150)
      %13 = cir.call %12() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc24)
      %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc24)
      cir.if %14 {
        %15 = cir.const #cir.int<5> : !s32i loc(#loc29)
        %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc31)
        %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc32)
        cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc152)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc34)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc35)
        %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc33)
        cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc36)
        %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc37)
        %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc38)
        cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc37)
      } else {
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc41)
          %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc42)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc42)
          %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s32i>, !cir.bool loc(#loc154)
          cir.if %18 {
            %19 = cir.const #cir.int<5> : !s32i loc(#loc44)
            %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc45)
            %21 = cir.const #cir.int<0> : !s32i loc(#loc46)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc47)
            cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc156)
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
            %24 = cir.const #cir.int<0> : !s32i loc(#loc49)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc50)
            %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc48)
            cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc51)
            %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc52)
            %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc53)
            cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
          } loc(#loc155)
        } loc(#loc153)
      } loc(#loc151)
    } loc(#loc149)
    cir.return loc(#loc10)
  } loc(#loc142)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__int_realloc_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    cir.return loc(#loc55)
  } loc(#loc157)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc159)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc160)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc67)
  cir.func @main(%arg0: !s32i loc(fused[#loc70, #loc71]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc72, #loc73])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc163)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc164)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc69)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc74)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc75)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc76)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc76)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc77)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc64)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %8 = cir.get_global @CWE690_NULL_Deref_From_Return__int_realloc_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call @CWE690_NULL_Deref_From_Return__int_realloc_12_good() : () -> () loc(#loc79)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc65)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc66)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %13 = cir.get_global @CWE690_NULL_Deref_From_Return__int_realloc_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call @CWE690_NULL_Deref_From_Return__int_realloc_12_bad() : () -> () loc(#loc83)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc67)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc86)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    cir.return %17 : !s32i loc(#loc167)
  } loc(#loc162)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc92)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc170)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc94)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc95)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc95)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc96)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc171)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc172)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc94)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc173)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc174)
    cir.scope {
      %11 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc176)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc176)
      %13 = cir.call %12() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc103)
      %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc103)
      cir.if %14 {
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
          %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc111)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc111)
          %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s32i>, !cir.bool loc(#loc179)
          cir.if %18 {
            %19 = cir.const #cir.int<5> : !s32i loc(#loc113)
            %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc114)
            %21 = cir.const #cir.int<0> : !s32i loc(#loc115)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc116)
            cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc181)
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
            %24 = cir.const #cir.int<0> : !s32i loc(#loc118)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc119)
            %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc117)
            cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc120)
            %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc121)
            %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc122)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc122)
            cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc121)
          } loc(#loc180)
        } loc(#loc178)
      } else {
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc125)
          %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc126)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc126)
          %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s32i>, !cir.bool loc(#loc183)
          cir.if %18 {
            %19 = cir.const #cir.int<5> : !s32i loc(#loc128)
            %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc129)
            %21 = cir.const #cir.int<0> : !s32i loc(#loc130)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc131)
            cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc185)
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc132)
            %24 = cir.const #cir.int<0> : !s32i loc(#loc133)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc134)
            %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc132)
            cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc135)
            %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc136)
            %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc137)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc137)
            cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc136)
          } loc(#loc184)
        } loc(#loc182)
      } loc(#loc177)
    } loc(#loc175)
    cir.return loc(#loc89)
  } loc(#loc168)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int_realloc_12.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":23:1)
#loc10 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":46:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":25:5)
#loc12 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":25:11)
#loc13 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":26:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":26:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":28:19)
#loc16 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":28:27)
#loc17 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":28:33)
#loc18 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":28:35)
#loc19 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":28:45)
#loc20 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":28:46)
#loc21 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":28:5)
#loc22 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":29:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":45:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":29:8)
#loc25 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":29:33)
#loc26 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":30:5)
#loc27 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":35:5)
#loc28 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":37:5)
#loc29 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":32:19)
#loc30 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":32:9)
#loc31 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":32:14)
#loc32 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":32:15)
#loc33 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":33:22)
#loc34 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":33:27)
#loc35 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":33:28)
#loc36 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":33:9)
#loc37 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":34:9)
#loc38 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":34:14)
#loc39 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":39:9)
#loc40 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":44:9)
#loc41 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":39:13)
#loc42 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":39:21)
#loc43 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":40:9)
#loc44 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":41:23)
#loc45 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":41:13)
#loc46 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":41:18)
#loc47 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":41:19)
#loc48 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":42:26)
#loc49 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":42:31)
#loc50 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":42:32)
#loc51 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":42:13)
#loc52 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":43:13)
#loc53 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":43:18)
#loc54 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":82:1)
#loc55 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":85:1)
#loc56 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":84:5)
#loc57 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":84:13)
#loc58 = loc("/usr/include/stdlib.h":575:1)
#loc59 = loc("/usr/include/stdlib.h":575:41)
#loc60 = loc("/usr/include/time.h":76:1)
#loc61 = loc("/usr/include/time.h":76:38)
#loc62 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc63 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc64 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":101:15)
#loc65 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":103:15)
#loc66 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":106:15)
#loc67 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":108:15)
#loc68 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":96:1)
#loc69 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":111:1)
#loc74 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":97:1)
#loc75 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":99:27)
#loc76 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":99:22)
#loc77 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":99:5)
#loc78 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":101:5)
#loc79 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":102:5)
#loc80 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":102:56)
#loc81 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":103:5)
#loc82 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":106:5)
#loc83 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":107:5)
#loc84 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":107:55)
#loc85 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":108:5)
#loc86 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":110:12)
#loc87 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":110:5)
#loc88 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":54:1)
#loc89 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":80:1)
#loc90 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":56:5)
#loc91 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":56:11)
#loc92 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":57:12)
#loc93 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":57:5)
#loc94 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":59:19)
#loc95 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":59:27)
#loc96 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":59:33)
#loc97 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":59:35)
#loc98 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":59:45)
#loc99 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":59:46)
#loc100 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":59:5)
#loc101 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":60:5)
#loc102 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":79:5)
#loc103 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":60:8)
#loc104 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":60:33)
#loc105 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":61:5)
#loc106 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":69:5)
#loc107 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":71:5)
#loc108 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":63:9)
#loc109 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":68:9)
#loc110 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":63:13)
#loc111 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":63:21)
#loc112 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":64:9)
#loc113 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":65:23)
#loc114 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":65:13)
#loc115 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":65:18)
#loc116 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":65:19)
#loc117 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":66:26)
#loc118 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":66:31)
#loc119 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":66:32)
#loc120 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":66:13)
#loc121 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":67:13)
#loc122 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":67:18)
#loc123 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":73:9)
#loc124 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":78:9)
#loc125 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":73:13)
#loc126 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":73:21)
#loc127 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":74:9)
#loc128 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":75:23)
#loc129 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":75:13)
#loc130 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":75:18)
#loc131 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":75:19)
#loc132 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":76:26)
#loc133 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":76:31)
#loc134 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":76:32)
#loc135 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":76:13)
#loc136 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":77:13)
#loc137 = loc("CWE690_NULL_Deref_From_Return__int_realloc_12.c":77:18)
#loc138 = loc(fused[#loc1, #loc2])
#loc139 = loc(fused[#loc3, #loc4])
#loc140 = loc(fused[#loc5, #loc6])
#loc141 = loc(fused[#loc7, #loc8])
#loc142 = loc(fused[#loc9, #loc10])
#loc143 = loc(fused[#loc11, #loc12])
#loc144 = loc(fused[#loc14, #loc13])
#loc145 = loc(fused[#loc18, #loc19])
#loc146 = loc(fused[#loc17, #loc19])
#loc147 = loc(fused[#loc15, #loc20])
#loc148 = loc(fused[#loc21, #loc20])
#loc149 = loc(fused[#loc22, #loc23])
#loc150 = loc(fused[#loc24, #loc25])
#loc151 = loc(fused[#loc26, #loc27, #loc28, #loc23])
#loc152 = loc(fused[#loc30, #loc29])
#loc153 = loc(fused[#loc39, #loc40])
#loc154 = loc(fused[#loc41, #loc42])
#loc155 = loc(fused[#loc43, #loc40])
#loc156 = loc(fused[#loc45, #loc44])
#loc157 = loc(fused[#loc54, #loc55])
#loc158 = loc(fused[#loc56, #loc57])
#loc159 = loc(fused[#loc58, #loc59])
#loc160 = loc(fused[#loc60, #loc61])
#loc161 = loc(fused[#loc62, #loc63])
#loc162 = loc(fused[#loc68, #loc69])
#loc165 = loc(fused[#loc79, #loc80])
#loc166 = loc(fused[#loc83, #loc84])
#loc167 = loc(fused[#loc87, #loc86])
#loc168 = loc(fused[#loc88, #loc89])
#loc169 = loc(fused[#loc90, #loc91])
#loc170 = loc(fused[#loc93, #loc92])
#loc171 = loc(fused[#loc97, #loc98])
#loc172 = loc(fused[#loc96, #loc98])
#loc173 = loc(fused[#loc94, #loc99])
#loc174 = loc(fused[#loc100, #loc99])
#loc175 = loc(fused[#loc101, #loc102])
#loc176 = loc(fused[#loc103, #loc104])
#loc177 = loc(fused[#loc105, #loc106, #loc107, #loc102])
#loc178 = loc(fused[#loc108, #loc109])
#loc179 = loc(fused[#loc110, #loc111])
#loc180 = loc(fused[#loc112, #loc109])
#loc181 = loc(fused[#loc114, #loc113])
#loc182 = loc(fused[#loc123, #loc124])
#loc183 = loc(fused[#loc125, #loc126])
#loc184 = loc(fused[#loc127, #loc124])
#loc185 = loc(fused[#loc129, #loc128])
