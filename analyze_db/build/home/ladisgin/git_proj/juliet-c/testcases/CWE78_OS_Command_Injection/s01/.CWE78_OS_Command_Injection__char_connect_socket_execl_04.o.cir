!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":116:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_execl_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc217)
  cir.global "private" constant cir_private @__const.goodG2B1.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc218)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_execl_04_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc219)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc220)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc221)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc222)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc13)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc223)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc224)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc225)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc226)
  cir.func private @close(!s32i) -> !s32i loc(#loc227)
  cir.func private @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc228)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc26)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc27)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_execl_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc230)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc231)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc232)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc233)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc234)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc235)
    %6 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc219)
    %7 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_execl_04_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc219)
    cir.copy %7 to %6 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc219)
    %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
    cir.store %8, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc236)
    cir.br ^bb1 loc(#loc237)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc46)
    cir.brcond %10 ^bb2, ^bb42 loc(#loc238)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc239)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc37)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    %13 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc50)
    %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc50)
    cir.store %15, %4 : !u64i, !cir.ptr<!u64i> loc(#loc234)
    cir.br ^bb4 loc(#loc240)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc240)
  ^bb5:  // pred: ^bb34
    %16 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc54)
    cir.brcond %17 ^bb6, ^bb35 loc(#loc54)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %18 = cir.const #cir.int<2> : !s32i loc(#loc55)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %20 = cir.const #cir.int<6> : !s32i loc(#loc57)
    %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc58)
    cir.store %21, %3 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    cir.br ^bb7 loc(#loc242)
  ^bb7:  // pred: ^bb6
    %22 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc64)
    %25 = cir.cmp(eq, %22, %24) : !s32i, !cir.bool loc(#loc243)
    cir.brcond %25 ^bb8, ^bb9 loc(#loc244)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc66)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc62)
  ^bb10:  // pred: ^bb9
    %26 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc245)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %28 = cir.const #cir.int<16> : !u64i loc(#loc246)
    cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc247)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc74)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc74)
    %31 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc248)
    %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc13)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc13)
    %34 = cir.call @inet_addr(%33) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc77)
    %35 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
    %36 = cir.get_member %35[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
    cir.store %34, %36 : !u32i, !cir.ptr<!u32i> loc(#loc249)
    %37 = cir.const #cir.int<27015> : !s32i loc(#loc82)
    %38 = cir.cast(integral, %37 : !s32i), !u16i loc(#loc82)
    %39 = cir.call @htons(%38) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc83)
    %40 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
    cir.store %39, %40 : !u16i, !cir.ptr<!u16i> loc(#loc250)
    cir.br ^bb11 loc(#loc251)
  ^bb11:  // pred: ^bb10
    %41 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %42 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc252)
    %43 = cir.const #cir.int<16> : !u64i loc(#loc253)
    %44 = cir.cast(integral, %43 : !u64i), !u32i loc(#loc253)
    %45 = cir.call @connect(%41, %42, %44) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc94)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %47 = cir.unary(minus, %46) : !s32i, !s32i loc(#loc95)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc254)
    cir.brcond %48 ^bb12, ^bb13 loc(#loc255)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc97)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc88)
  ^bb14:  // pred: ^bb13
    %49 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %50 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    %51 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc100)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %51 : !u64i), !cir.ptr<!s8i> loc(#loc101)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc256)
    %54 = cir.const #cir.int<1> : !u64i loc(#loc257)
    %55 = cir.const #cir.int<100> : !s32i loc(#loc106)
    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc106)
    %57 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc107)
    %58 = cir.binop(sub, %56, %57) : !u64i loc(#loc258)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc108)
    %61 = cir.binop(sub, %58, %60) : !u64i loc(#loc259)
    %62 = cir.binop(mul, %54, %61) : !u64i loc(#loc260)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %64 = cir.call @recv(%49, %53, %62, %63) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc111)
    %65 = cir.cast(integral, %64 : !s64i), !s32i loc(#loc111)
    cir.store %65, %0 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    cir.br ^bb15 loc(#loc262)
  ^bb15:  // pred: ^bb14
    %66 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %67 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %68 = cir.unary(minus, %67) : !s32i, !s32i loc(#loc117)
    %69 = cir.cmp(eq, %66, %68) : !s32i, !cir.bool loc(#loc263)
    cir.brcond %69 ^bb16, ^bb17 loc(#loc118)
  ^bb16:  // pred: ^bb15
    %70 = cir.const #true loc(#loc118)
    cir.br ^bb22(%70 : !cir.bool) loc(#loc118)
  ^bb17:  // pred: ^bb15
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %73 = cir.cmp(eq, %71, %72) : !s32i, !cir.bool loc(#loc264)
    cir.brcond %73 ^bb18, ^bb19 loc(#loc118)
  ^bb18:  // pred: ^bb17
    %74 = cir.const #true loc(#loc118)
    cir.br ^bb20(%74 : !cir.bool) loc(#loc118)
  ^bb19:  // pred: ^bb17
    %75 = cir.const #false loc(#loc118)
    cir.br ^bb20(%75 : !cir.bool) loc(#loc118)
  ^bb20(%76: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":116:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc118)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%76 : !cir.bool) loc(#loc118)
  ^bb22(%77: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":116:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc118)
  ^bb23:  // pred: ^bb22
    cir.brcond %77 ^bb24, ^bb25 loc(#loc265)
  ^bb24:  // pred: ^bb23
    cir.br ^bb35 loc(#loc122)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc115)
  ^bb26:  // pred: ^bb25
    %78 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %79 = cir.cast(integral, %78 : !s32i), !s8i loc(#loc123)
    %80 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
    %81 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc125)
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %83 = cir.cast(integral, %82 : !s32i), !u64i loc(#loc126)
    %84 = cir.const #cir.int<1> : !u64i loc(#loc266)
    %85 = cir.binop(div, %83, %84) : !u64i loc(#loc267)
    %86 = cir.binop(add, %81, %85) : !u64i loc(#loc268)
    %87 = cir.ptr_stride(%80 : !cir.ptr<!s8i>, %86 : !u64i), !cir.ptr<!s8i> loc(#loc129)
    cir.store %79, %87 : !s8i, !cir.ptr<!s8i> loc(#loc269)
    %88 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    %89 = cir.const #cir.int<13> : !s32i loc(#loc131)
    %90 = cir.call @strchr(%88, %89) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc132)
    cir.store %90, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc270)
    cir.br ^bb27 loc(#loc271)
  ^bb27:  // pred: ^bb26
    %91 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    %92 = cir.cast(ptr_to_bool, %91 : !cir.ptr<!s8i>), !cir.bool loc(#loc137)
    cir.brcond %92 ^bb28, ^bb29 loc(#loc272)
  ^bb28:  // pred: ^bb27
    %93 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %94 = cir.cast(integral, %93 : !s32i), !s8i loc(#loc139)
    %95 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    cir.store %94, %95 : !s8i, !cir.ptr<!s8i> loc(#loc273)
    cir.br ^bb29 loc(#loc136)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc136)
  ^bb30:  // pred: ^bb29
    %96 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    %97 = cir.const #cir.int<10> : !s32i loc(#loc143)
    %98 = cir.call @strchr(%96, %97) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc144)
    cir.store %98, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc274)
    cir.br ^bb31 loc(#loc275)
  ^bb31:  // pred: ^bb30
    %99 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
    %100 = cir.cast(ptr_to_bool, %99 : !cir.ptr<!s8i>), !cir.bool loc(#loc149)
    cir.brcond %100 ^bb32, ^bb33 loc(#loc276)
  ^bb32:  // pred: ^bb31
    %101 = cir.const #cir.int<0> : !s32i loc(#loc151)
    %102 = cir.cast(integral, %101 : !s32i), !s8i loc(#loc151)
    %103 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
    cir.store %102, %103 : !s8i, !cir.ptr<!s8i> loc(#loc277)
    cir.br ^bb33 loc(#loc148)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc148)
  ^bb34:  // pred: ^bb33
    cir.br ^bb5 loc(#loc53)
  ^bb35:  // 4 preds: ^bb5, ^bb8, ^bb12, ^bb24
    cir.br ^bb36 loc(#loc53)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc278)
  ^bb37:  // pred: ^bb36
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    %105 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %106 = cir.unary(minus, %105) : !s32i, !s32i loc(#loc157)
    %107 = cir.cmp(ne, %104, %106) : !s32i, !cir.bool loc(#loc279)
    cir.brcond %107 ^bb38, ^bb39 loc(#loc280)
  ^bb38:  // pred: ^bb37
    %108 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %109 = cir.call @close(%108) : (!s32i) -> !s32i loc(#loc160)
    cir.br ^bb39 loc(#loc155)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc155)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc49)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc45)
  ^bb42:  // 2 preds: ^bb1, ^bb41
    cir.br ^bb43 loc(#loc45)
  ^bb43:  // pred: ^bb42
    %110 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc26)
    %111 = cir.cast(array_to_ptrdecay, %110 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc26)
    %112 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc161)
    %113 = cir.cast(array_to_ptrdecay, %112 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc161)
    %114 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc27)
    %115 = cir.cast(array_to_ptrdecay, %114 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc27)
    %116 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
    %117 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc163)
    %118 = cir.call @execl(%111, %113, %115, %116, %117) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc164)
    cir.return loc(#loc29)
  } loc(#loc229)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_execl_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc282)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc167)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc283)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc169)
    cir.return loc(#loc166)
  } loc(#loc281)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc284)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc173)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc285)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc176)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc287)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc218)
    %2 = cir.get_global @__const.goodG2B1.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc218)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc218)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc181)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc288)
    cir.br ^bb1 loc(#loc289)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc185)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc185)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc290)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc173)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc173)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc189)
    cir.br ^bb4 loc(#loc187)
  ^bb3:  // pred: ^bb1
    %8 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc190)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc176)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc176)
    %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc190)
    cir.br ^bb4 loc(#loc184)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc184)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc192)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc192)
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc193)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc193)
    %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc194)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc194)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc196)
    %21 = cir.call @execl(%14, %16, %18, %19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc197)
    cir.return loc(#loc178)
  } loc(#loc286)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc292)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc217)
    %2 = cir.get_global @__const.goodG2B2.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc217)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc217)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc202)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc293)
    cir.br ^bb1 loc(#loc294)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<1> : !s32i loc(#loc206)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc206)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc295)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc208)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
    %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc210)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc210)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc208)
    cir.br ^bb3 loc(#loc205)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc205)
  ^bb4:  // pred: ^bb3
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc211)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc211)
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc212)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc212)
    %15 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc213)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc213)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc214)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc215)
    %19 = cir.call @execl(%12, %14, %16, %17, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc216)
    cir.return loc(#loc199)
  } loc(#loc291)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":181:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":181:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":160:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":160:28)
#loc5 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":75:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":75:28)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/sys/socket.h":102:1)
#loc10 = loc("/usr/include/sys/socket.h":102:62)
#loc11 = loc("/usr/include/arpa/inet.h":34:1)
#loc12 = loc("/usr/include/arpa/inet.h":34:47)
#loc13 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":106:53)
#loc14 = loc("/usr/include/netinet/in.h":404:1)
#loc15 = loc("/usr/include/netinet/in.h":405:40)
#loc16 = loc("/usr/include/sys/socket.h":126:1)
#loc17 = loc("/usr/include/sys/socket.h":126:75)
#loc18 = loc("/usr/include/sys/socket.h":145:1)
#loc19 = loc("/usr/include/sys/socket.h":145:68)
#loc20 = loc("/usr/include/string.h":246:1)
#loc21 = loc("/usr/include/string.h":247:33)
#loc22 = loc("/usr/include/unistd.h":358:1)
#loc23 = loc("/usr/include/unistd.h":358:27)
#loc24 = loc("/usr/include/unistd.h":594:1)
#loc25 = loc("/usr/include/unistd.h":595:14)
#loc26 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":149:11)
#loc27 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":149:47)
#loc28 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":72:1)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":150:1)
#loc30 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":84:13)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":84:17)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":85:13)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":85:32)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":86:13)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":86:19)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":87:13)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":87:36)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":88:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":88:41)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":74:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":74:12)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":76:12)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":76:5)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":77:5)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":146:5)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":77:8)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":78:5)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":79:9)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":145:9)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":88:30)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":88:37)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":89:13)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":134:21)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":134:20)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":99:40)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":99:49)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":99:62)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":99:33)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":99:17)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":99:73)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":100:17)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":103:17)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":100:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":100:38)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":101:17)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":102:21)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":104:24)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":104:25)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":104:34)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":104:37)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":104:51)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":104:17)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":104:52)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":105:38)
#loc75 = loc("/usr/include/netinet/in.h":249:5)
#loc76 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":105:17)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":106:43)
#loc78 = loc("/usr/include/netinet/in.h":251:20)
#loc79 = loc("/usr/include/netinet/in.h":33:15)
#loc80 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":106:17)
#loc81 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":106:63)
#loc82 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":107:42)
#loc83 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":107:36)
#loc84 = loc("/usr/include/netinet/in.h":250:15)
#loc85 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":107:17)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":107:50)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":108:17)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":111:17)
#loc89 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":108:29)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":108:62)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":108:63)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":108:72)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":108:86)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":108:21)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":108:92)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":109:17)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":110:21)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":115:35)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":115:59)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":115:66)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":115:64)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":115:50)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":115:73)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":115:76)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":115:87)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":115:92)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":115:98)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":115:108)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":115:109)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":115:112)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":115:30)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":115:17)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":115:113)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":116:17)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":119:17)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":116:21)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":116:35)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":116:51)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":116:65)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":117:17)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":118:21)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":121:61)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":121:17)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":121:22)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":121:32)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":121:45)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":121:56)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":121:57)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":123:34)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":123:40)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":123:27)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":123:17)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":123:44)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":124:17)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":127:17)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":124:21)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":125:17)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":126:32)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":126:22)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":126:21)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":128:34)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":128:40)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":128:27)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":128:17)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":128:44)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":129:17)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":132:17)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":129:21)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":130:17)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":131:32)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":131:22)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":131:21)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":135:13)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":138:13)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":135:17)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":135:34)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":136:13)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":137:30)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":137:17)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":149:29)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":149:61)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":149:75)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":149:5)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":193:1)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":197:1)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":195:5)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":195:14)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":196:5)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":196:14)
#loc171 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc172 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":165:19)
#loc174 = loc("/usr/include/string.h":149:1)
#loc175 = loc("/usr/include/string.h":150:14)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":170:22)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":157:1)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":175:1)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":159:5)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":159:12)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":161:12)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":161:5)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":162:5)
#loc184 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":171:5)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":162:8)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":163:5)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":166:5)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":168:5)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":165:9)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":170:9)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":170:16)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":174:11)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":174:29)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":174:47)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":174:61)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":174:75)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":174:5)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":178:1)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":191:1)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":180:5)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":180:12)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":182:12)
#loc203 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":182:5)
#loc204 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":183:5)
#loc205 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":187:5)
#loc206 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":183:8)
#loc207 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":184:5)
#loc208 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":186:9)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":186:16)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":186:22)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":190:11)
#loc212 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":190:29)
#loc213 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":190:47)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":190:61)
#loc215 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":190:75)
#loc216 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_04.c":190:5)
#loc217 = loc(fused[#loc1, #loc2])
#loc218 = loc(fused[#loc3, #loc4])
#loc219 = loc(fused[#loc5, #loc6])
#loc220 = loc(fused[#loc7, #loc8])
#loc221 = loc(fused[#loc9, #loc10])
#loc222 = loc(fused[#loc11, #loc12])
#loc223 = loc(fused[#loc14, #loc15])
#loc224 = loc(fused[#loc16, #loc17])
#loc225 = loc(fused[#loc18, #loc19])
#loc226 = loc(fused[#loc20, #loc21])
#loc227 = loc(fused[#loc22, #loc23])
#loc228 = loc(fused[#loc24, #loc25])
#loc229 = loc(fused[#loc28, #loc29])
#loc230 = loc(fused[#loc30, #loc31])
#loc231 = loc(fused[#loc32, #loc33])
#loc232 = loc(fused[#loc34, #loc35])
#loc233 = loc(fused[#loc36, #loc37])
#loc234 = loc(fused[#loc38, #loc39])
#loc235 = loc(fused[#loc40, #loc41])
#loc236 = loc(fused[#loc43, #loc42])
#loc237 = loc(fused[#loc44, #loc45])
#loc238 = loc(fused[#loc47, #loc45])
#loc239 = loc(fused[#loc48, #loc49])
#loc240 = loc(fused[#loc52, #loc53])
#loc241 = loc(fused[#loc59, #loc60])
#loc242 = loc(fused[#loc61, #loc62])
#loc243 = loc(fused[#loc63, #loc64])
#loc244 = loc(fused[#loc65, #loc62])
#loc245 = loc(fused[#loc67, #loc68])
#loc246 = loc(fused[#loc70, #loc71])
#loc247 = loc(fused[#loc72, #loc73])
#loc248 = loc(fused[#loc76, #loc74])
#loc249 = loc(fused[#loc80, #loc81])
#loc250 = loc(fused[#loc85, #loc86])
#loc251 = loc(fused[#loc87, #loc88])
#loc252 = loc(fused[#loc90, #loc91])
#loc253 = loc(fused[#loc92, #loc93])
#loc254 = loc(fused[#loc94, #loc95])
#loc255 = loc(fused[#loc96, #loc88])
#loc256 = loc(fused[#loc102, #loc103])
#loc257 = loc(fused[#loc104, #loc105])
#loc258 = loc(fused[#loc106, #loc107])
#loc259 = loc(fused[#loc106, #loc108])
#loc260 = loc(fused[#loc104, #loc109])
#loc261 = loc(fused[#loc112, #loc113])
#loc262 = loc(fused[#loc114, #loc115])
#loc263 = loc(fused[#loc116, #loc117])
#loc264 = loc(fused[#loc119, #loc120])
#loc265 = loc(fused[#loc121, #loc115])
#loc266 = loc(fused[#loc127, #loc128])
#loc267 = loc(fused[#loc126, #loc128])
#loc268 = loc(fused[#loc125, #loc128])
#loc269 = loc(fused[#loc124, #loc123])
#loc270 = loc(fused[#loc133, #loc134])
#loc271 = loc(fused[#loc135, #loc136])
#loc272 = loc(fused[#loc138, #loc136])
#loc273 = loc(fused[#loc141, #loc139])
#loc274 = loc(fused[#loc145, #loc146])
#loc275 = loc(fused[#loc147, #loc148])
#loc276 = loc(fused[#loc150, #loc148])
#loc277 = loc(fused[#loc153, #loc151])
#loc278 = loc(fused[#loc154, #loc155])
#loc279 = loc(fused[#loc156, #loc157])
#loc280 = loc(fused[#loc158, #loc155])
#loc281 = loc(fused[#loc165, #loc166])
#loc282 = loc(fused[#loc167, #loc168])
#loc283 = loc(fused[#loc169, #loc170])
#loc284 = loc(fused[#loc171, #loc172])
#loc285 = loc(fused[#loc174, #loc175])
#loc286 = loc(fused[#loc177, #loc178])
#loc287 = loc(fused[#loc179, #loc180])
#loc288 = loc(fused[#loc182, #loc181])
#loc289 = loc(fused[#loc183, #loc184])
#loc290 = loc(fused[#loc186, #loc187, #loc188, #loc184])
#loc291 = loc(fused[#loc198, #loc199])
#loc292 = loc(fused[#loc200, #loc201])
#loc293 = loc(fused[#loc203, #loc202])
#loc294 = loc(fused[#loc204, #loc205])
#loc295 = loc(fused[#loc207, #loc205])
