!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc63 = loc("CWE401_Memory_Leak__strdup_char_15.c":213:10)
#loc64 = loc("CWE401_Memory_Leak__strdup_char_15.c":213:14)
#loc65 = loc("CWE401_Memory_Leak__strdup_char_15.c":213:20)
#loc66 = loc("CWE401_Memory_Leak__strdup_char_15.c":213:32)
#loc235 = loc(fused[#loc63, #loc64])
#loc236 = loc(fused[#loc65, #loc66])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodB2G2.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc215)
  cir.global "private" constant cir_private @__const.goodB2G1.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc216)
  cir.global "private" constant cir_private @__const.CWE401_Memory_Leak__strdup_char_15_bad.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc217)
  cir.func private @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc218)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc219)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc11)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc221)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc16)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc222)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc20)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc217)
            %4 = cir.get_global @__const.CWE401_Memory_Leak__strdup_char_15_bad.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc217)
            cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc217)
            %5 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc24)
            %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc25)
            %7 = cir.call @strdup(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc24)
            cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc225)
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc29)
          } loc(#loc224)
          cir.break loc(#loc30)
        } loc(#loc21)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc11)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc11)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc32)
          cir.break loc(#loc33)
        } loc(#loc31)
        cir.yield loc(#loc18)
      } loc(#loc18)
    } loc(#loc223)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc36)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.break loc(#loc38)
        } loc(#loc37)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc40)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc40)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc41)
          cir.break loc(#loc42)
        } loc(#loc39)
        cir.yield loc(#loc34)
      } loc(#loc34)
    } loc(#loc226)
    cir.return loc(#loc13)
  } loc(#loc220)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc228)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc229)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc230)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc231)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    cir.return loc(#loc44)
  } loc(#loc227)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc232)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc233)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc60)
  cir.func @main(%arg0: !s32i loc(fused[#loc63, #loc64]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc65, #loc66])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc235)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc236)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc62)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc67)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc67)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc68)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc69)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc69)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc70)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc57)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %8 = cir.get_global @CWE401_Memory_Leak__strdup_char_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc237)
    cir.call @CWE401_Memory_Leak__strdup_char_15_good() : () -> () loc(#loc72)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc58)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc59)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %13 = cir.get_global @CWE401_Memory_Leak__strdup_char_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc238)
    cir.call @CWE401_Memory_Leak__strdup_char_15_bad() : () -> () loc(#loc76)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc60)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc79)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc239)
    cir.return %17 : !s32i loc(#loc239)
  } loc(#loc234)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc240)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc242)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc87)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc91)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc216)
            %4 = cir.get_global @__const.goodB2G1.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc216)
            cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc216)
            %5 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc95)
            %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc96)
            %7 = cir.call @strdup(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc95)
            cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc246)
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc100)
          } loc(#loc245)
          cir.break loc(#loc101)
        } loc(#loc92)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc103)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc103)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc104)
          cir.break loc(#loc105)
        } loc(#loc102)
        cir.yield loc(#loc89)
      } loc(#loc89)
    } loc(#loc244)
    cir.scope {
      %2 = cir.const #cir.int<8> : !s32i loc(#loc108)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc110)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc110)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc111)
          cir.break loc(#loc112)
        } loc(#loc109)
        cir.case(default, []) {
          %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc114)
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
          cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc114)
          cir.break loc(#loc116)
        } loc(#loc113)
        cir.yield loc(#loc106)
      } loc(#loc106)
    } loc(#loc247)
    cir.return loc(#loc84)
  } loc(#loc241)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc249)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc121)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc250)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc125)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc215)
            %4 = cir.get_global @__const.goodB2G2.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc215)
            cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc215)
            %5 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc129)
            %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc130)
            %7 = cir.call @strdup(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc129)
            cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc253)
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc134)
          } loc(#loc252)
          cir.break loc(#loc135)
        } loc(#loc126)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc137)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc137)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc138)
          cir.break loc(#loc139)
        } loc(#loc136)
        cir.yield loc(#loc123)
      } loc(#loc123)
    } loc(#loc251)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc142)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc144)
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc145)
          cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc144)
          cir.break loc(#loc146)
        } loc(#loc143)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc148)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc148)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc149)
          cir.break loc(#loc150)
        } loc(#loc147)
        cir.yield loc(#loc140)
      } loc(#loc140)
    } loc(#loc254)
    cir.return loc(#loc118)
  } loc(#loc248)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc255)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"a string\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc153)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc257)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc158)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc258)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc162)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc164)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc164)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc165)
          cir.break loc(#loc166)
        } loc(#loc163)
        cir.case(default, []) {
          %3 = cir.const #cir.int<100> : !s32i loc(#loc168)
          %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc168)
          %5 = cir.const #cir.int<1> : !u64i loc(#loc168)
          %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc168)
          %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc168)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc168)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc168)
          cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc260)
          %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc170)
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
          %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc153)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc153)
          %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc170)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
          cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc173)
          cir.break loc(#loc174)
        } loc(#loc167)
        cir.yield loc(#loc160)
      } loc(#loc160)
    } loc(#loc259)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc177)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.break loc(#loc179)
        } loc(#loc178)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc181)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc181)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc182)
          cir.break loc(#loc183)
        } loc(#loc180)
        cir.yield loc(#loc175)
      } loc(#loc175)
    } loc(#loc261)
    cir.return loc(#loc155)
  } loc(#loc256)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc263)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc188)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc264)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc192)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.const #cir.int<100> : !s32i loc(#loc194)
          %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc194)
          %5 = cir.const #cir.int<1> : !u64i loc(#loc194)
          %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc194)
          %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc194)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc194)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc194)
          cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc266)
          %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc196)
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc197)
          %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc198)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc198)
          %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc196)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc199)
          cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc200)
          cir.break loc(#loc201)
        } loc(#loc193)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc203)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc203)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc204)
          cir.break loc(#loc205)
        } loc(#loc202)
        cir.yield loc(#loc190)
      } loc(#loc190)
    } loc(#loc265)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc208)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.break loc(#loc210)
        } loc(#loc209)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc212)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc212)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc213)
          cir.break loc(#loc214)
        } loc(#loc211)
        cir.yield loc(#loc206)
      } loc(#loc206)
    } loc(#loc267)
    cir.return loc(#loc185)
  } loc(#loc262)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_15.c":0:0)
#loc1 = loc("CWE401_Memory_Leak__strdup_char_15.c":105:9)
#loc2 = loc("CWE401_Memory_Leak__strdup_char_15.c":105:27)
#loc3 = loc("CWE401_Memory_Leak__strdup_char_15.c":71:9)
#loc4 = loc("CWE401_Memory_Leak__strdup_char_15.c":71:27)
#loc5 = loc("CWE401_Memory_Leak__strdup_char_15.c":32:9)
#loc6 = loc("CWE401_Memory_Leak__strdup_char_15.c":32:27)
#loc7 = loc("/usr/include/string.h":187:1)
#loc8 = loc("/usr/include/string.h":188:35)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE401_Memory_Leak__strdup_char_15.c":41:19)
#loc12 = loc("CWE401_Memory_Leak__strdup_char_15.c":24:1)
#loc13 = loc("CWE401_Memory_Leak__strdup_char_15.c":56:1)
#loc14 = loc("CWE401_Memory_Leak__strdup_char_15.c":26:5)
#loc15 = loc("CWE401_Memory_Leak__strdup_char_15.c":26:12)
#loc16 = loc("CWE401_Memory_Leak__strdup_char_15.c":27:12)
#loc17 = loc("CWE401_Memory_Leak__strdup_char_15.c":27:5)
#loc18 = loc("CWE401_Memory_Leak__strdup_char_15.c":28:5)
#loc19 = loc("CWE401_Memory_Leak__strdup_char_15.c":43:5)
#loc20 = loc("CWE401_Memory_Leak__strdup_char_15.c":28:12)
#loc21 = loc("CWE401_Memory_Leak__strdup_char_15.c":30:5)
#loc22 = loc("CWE401_Memory_Leak__strdup_char_15.c":31:5)
#loc23 = loc("CWE401_Memory_Leak__strdup_char_15.c":37:5)
#loc24 = loc("CWE401_Memory_Leak__strdup_char_15.c":34:16)
#loc25 = loc("CWE401_Memory_Leak__strdup_char_15.c":34:23)
#loc26 = loc("CWE401_Memory_Leak__strdup_char_15.c":34:9)
#loc27 = loc("CWE401_Memory_Leak__strdup_char_15.c":34:31)
#loc28 = loc("CWE401_Memory_Leak__strdup_char_15.c":36:19)
#loc29 = loc("CWE401_Memory_Leak__strdup_char_15.c":36:9)
#loc30 = loc("CWE401_Memory_Leak__strdup_char_15.c":38:5)
#loc31 = loc("CWE401_Memory_Leak__strdup_char_15.c":39:5)
#loc32 = loc("CWE401_Memory_Leak__strdup_char_15.c":41:9)
#loc33 = loc("CWE401_Memory_Leak__strdup_char_15.c":42:9)
#loc34 = loc("CWE401_Memory_Leak__strdup_char_15.c":44:5)
#loc35 = loc("CWE401_Memory_Leak__strdup_char_15.c":55:5)
#loc36 = loc("CWE401_Memory_Leak__strdup_char_15.c":44:12)
#loc37 = loc("CWE401_Memory_Leak__strdup_char_15.c":46:5)
#loc38 = loc("CWE401_Memory_Leak__strdup_char_15.c":50:9)
#loc39 = loc("CWE401_Memory_Leak__strdup_char_15.c":51:5)
#loc40 = loc("CWE401_Memory_Leak__strdup_char_15.c":53:19)
#loc41 = loc("CWE401_Memory_Leak__strdup_char_15.c":53:9)
#loc42 = loc("CWE401_Memory_Leak__strdup_char_15.c":54:9)
#loc43 = loc("CWE401_Memory_Leak__strdup_char_15.c":196:1)
#loc44 = loc("CWE401_Memory_Leak__strdup_char_15.c":202:1)
#loc45 = loc("CWE401_Memory_Leak__strdup_char_15.c":198:5)
#loc46 = loc("CWE401_Memory_Leak__strdup_char_15.c":198:14)
#loc47 = loc("CWE401_Memory_Leak__strdup_char_15.c":199:5)
#loc48 = loc("CWE401_Memory_Leak__strdup_char_15.c":199:14)
#loc49 = loc("CWE401_Memory_Leak__strdup_char_15.c":200:5)
#loc50 = loc("CWE401_Memory_Leak__strdup_char_15.c":200:14)
#loc51 = loc("CWE401_Memory_Leak__strdup_char_15.c":201:5)
#loc52 = loc("CWE401_Memory_Leak__strdup_char_15.c":201:14)
#loc53 = loc("/usr/include/stdlib.h":575:1)
#loc54 = loc("/usr/include/stdlib.h":575:41)
#loc55 = loc("/usr/include/time.h":76:1)
#loc56 = loc("/usr/include/time.h":76:38)
#loc57 = loc("CWE401_Memory_Leak__strdup_char_15.c":218:15)
#loc58 = loc("CWE401_Memory_Leak__strdup_char_15.c":220:15)
#loc59 = loc("CWE401_Memory_Leak__strdup_char_15.c":223:15)
#loc60 = loc("CWE401_Memory_Leak__strdup_char_15.c":225:15)
#loc61 = loc("CWE401_Memory_Leak__strdup_char_15.c":213:1)
#loc62 = loc("CWE401_Memory_Leak__strdup_char_15.c":228:1)
#loc67 = loc("CWE401_Memory_Leak__strdup_char_15.c":214:1)
#loc68 = loc("CWE401_Memory_Leak__strdup_char_15.c":216:27)
#loc69 = loc("CWE401_Memory_Leak__strdup_char_15.c":216:22)
#loc70 = loc("CWE401_Memory_Leak__strdup_char_15.c":216:5)
#loc71 = loc("CWE401_Memory_Leak__strdup_char_15.c":218:5)
#loc72 = loc("CWE401_Memory_Leak__strdup_char_15.c":219:5)
#loc73 = loc("CWE401_Memory_Leak__strdup_char_15.c":219:45)
#loc74 = loc("CWE401_Memory_Leak__strdup_char_15.c":220:5)
#loc75 = loc("CWE401_Memory_Leak__strdup_char_15.c":223:5)
#loc76 = loc("CWE401_Memory_Leak__strdup_char_15.c":224:5)
#loc77 = loc("CWE401_Memory_Leak__strdup_char_15.c":224:44)
#loc78 = loc("CWE401_Memory_Leak__strdup_char_15.c":225:5)
#loc79 = loc("CWE401_Memory_Leak__strdup_char_15.c":227:12)
#loc80 = loc("CWE401_Memory_Leak__strdup_char_15.c":227:5)
#loc81 = loc("/usr/include/stdlib.h":687:1)
#loc82 = loc("/usr/include/stdlib.h":687:32)
#loc83 = loc("CWE401_Memory_Leak__strdup_char_15.c":63:1)
#loc84 = loc("CWE401_Memory_Leak__strdup_char_15.c":94:1)
#loc85 = loc("CWE401_Memory_Leak__strdup_char_15.c":65:5)
#loc86 = loc("CWE401_Memory_Leak__strdup_char_15.c":65:12)
#loc87 = loc("CWE401_Memory_Leak__strdup_char_15.c":66:12)
#loc88 = loc("CWE401_Memory_Leak__strdup_char_15.c":66:5)
#loc89 = loc("CWE401_Memory_Leak__strdup_char_15.c":67:5)
#loc90 = loc("CWE401_Memory_Leak__strdup_char_15.c":82:5)
#loc91 = loc("CWE401_Memory_Leak__strdup_char_15.c":67:12)
#loc92 = loc("CWE401_Memory_Leak__strdup_char_15.c":69:5)
#loc93 = loc("CWE401_Memory_Leak__strdup_char_15.c":70:5)
#loc94 = loc("CWE401_Memory_Leak__strdup_char_15.c":76:5)
#loc95 = loc("CWE401_Memory_Leak__strdup_char_15.c":73:16)
#loc96 = loc("CWE401_Memory_Leak__strdup_char_15.c":73:23)
#loc97 = loc("CWE401_Memory_Leak__strdup_char_15.c":73:9)
#loc98 = loc("CWE401_Memory_Leak__strdup_char_15.c":73:31)
#loc99 = loc("CWE401_Memory_Leak__strdup_char_15.c":75:19)
#loc100 = loc("CWE401_Memory_Leak__strdup_char_15.c":75:9)
#loc101 = loc("CWE401_Memory_Leak__strdup_char_15.c":77:5)
#loc102 = loc("CWE401_Memory_Leak__strdup_char_15.c":78:5)
#loc103 = loc("CWE401_Memory_Leak__strdup_char_15.c":80:19)
#loc104 = loc("CWE401_Memory_Leak__strdup_char_15.c":80:9)
#loc105 = loc("CWE401_Memory_Leak__strdup_char_15.c":81:9)
#loc106 = loc("CWE401_Memory_Leak__strdup_char_15.c":83:5)
#loc107 = loc("CWE401_Memory_Leak__strdup_char_15.c":93:5)
#loc108 = loc("CWE401_Memory_Leak__strdup_char_15.c":83:12)
#loc109 = loc("CWE401_Memory_Leak__strdup_char_15.c":85:5)
#loc110 = loc("CWE401_Memory_Leak__strdup_char_15.c":87:19)
#loc111 = loc("CWE401_Memory_Leak__strdup_char_15.c":87:9)
#loc112 = loc("CWE401_Memory_Leak__strdup_char_15.c":88:9)
#loc113 = loc("CWE401_Memory_Leak__strdup_char_15.c":89:5)
#loc114 = loc("CWE401_Memory_Leak__strdup_char_15.c":91:9)
#loc115 = loc("CWE401_Memory_Leak__strdup_char_15.c":91:14)
#loc116 = loc("CWE401_Memory_Leak__strdup_char_15.c":92:9)
#loc117 = loc("CWE401_Memory_Leak__strdup_char_15.c":97:1)
#loc118 = loc("CWE401_Memory_Leak__strdup_char_15.c":128:1)
#loc119 = loc("CWE401_Memory_Leak__strdup_char_15.c":99:5)
#loc120 = loc("CWE401_Memory_Leak__strdup_char_15.c":99:12)
#loc121 = loc("CWE401_Memory_Leak__strdup_char_15.c":100:12)
#loc122 = loc("CWE401_Memory_Leak__strdup_char_15.c":100:5)
#loc123 = loc("CWE401_Memory_Leak__strdup_char_15.c":101:5)
#loc124 = loc("CWE401_Memory_Leak__strdup_char_15.c":116:5)
#loc125 = loc("CWE401_Memory_Leak__strdup_char_15.c":101:12)
#loc126 = loc("CWE401_Memory_Leak__strdup_char_15.c":103:5)
#loc127 = loc("CWE401_Memory_Leak__strdup_char_15.c":104:5)
#loc128 = loc("CWE401_Memory_Leak__strdup_char_15.c":110:5)
#loc129 = loc("CWE401_Memory_Leak__strdup_char_15.c":107:16)
#loc130 = loc("CWE401_Memory_Leak__strdup_char_15.c":107:23)
#loc131 = loc("CWE401_Memory_Leak__strdup_char_15.c":107:9)
#loc132 = loc("CWE401_Memory_Leak__strdup_char_15.c":107:31)
#loc133 = loc("CWE401_Memory_Leak__strdup_char_15.c":109:19)
#loc134 = loc("CWE401_Memory_Leak__strdup_char_15.c":109:9)
#loc135 = loc("CWE401_Memory_Leak__strdup_char_15.c":111:5)
#loc136 = loc("CWE401_Memory_Leak__strdup_char_15.c":112:5)
#loc137 = loc("CWE401_Memory_Leak__strdup_char_15.c":114:19)
#loc138 = loc("CWE401_Memory_Leak__strdup_char_15.c":114:9)
#loc139 = loc("CWE401_Memory_Leak__strdup_char_15.c":115:9)
#loc140 = loc("CWE401_Memory_Leak__strdup_char_15.c":117:5)
#loc141 = loc("CWE401_Memory_Leak__strdup_char_15.c":127:5)
#loc142 = loc("CWE401_Memory_Leak__strdup_char_15.c":117:12)
#loc143 = loc("CWE401_Memory_Leak__strdup_char_15.c":119:5)
#loc144 = loc("CWE401_Memory_Leak__strdup_char_15.c":121:9)
#loc145 = loc("CWE401_Memory_Leak__strdup_char_15.c":121:14)
#loc146 = loc("CWE401_Memory_Leak__strdup_char_15.c":122:9)
#loc147 = loc("CWE401_Memory_Leak__strdup_char_15.c":123:5)
#loc148 = loc("CWE401_Memory_Leak__strdup_char_15.c":125:19)
#loc149 = loc("CWE401_Memory_Leak__strdup_char_15.c":125:9)
#loc150 = loc("CWE401_Memory_Leak__strdup_char_15.c":126:9)
#loc151 = loc("/usr/include/string.h":141:1)
#loc152 = loc("/usr/include/string.h":142:14)
#loc153 = loc("CWE401_Memory_Leak__strdup_char_15.c":145:22)
#loc154 = loc("CWE401_Memory_Leak__strdup_char_15.c":131:1)
#loc155 = loc("CWE401_Memory_Leak__strdup_char_15.c":161:1)
#loc156 = loc("CWE401_Memory_Leak__strdup_char_15.c":133:5)
#loc157 = loc("CWE401_Memory_Leak__strdup_char_15.c":133:12)
#loc158 = loc("CWE401_Memory_Leak__strdup_char_15.c":134:12)
#loc159 = loc("CWE401_Memory_Leak__strdup_char_15.c":134:5)
#loc160 = loc("CWE401_Memory_Leak__strdup_char_15.c":135:5)
#loc161 = loc("CWE401_Memory_Leak__strdup_char_15.c":148:5)
#loc162 = loc("CWE401_Memory_Leak__strdup_char_15.c":135:12)
#loc163 = loc("CWE401_Memory_Leak__strdup_char_15.c":137:5)
#loc164 = loc("CWE401_Memory_Leak__strdup_char_15.c":139:19)
#loc165 = loc("CWE401_Memory_Leak__strdup_char_15.c":139:9)
#loc166 = loc("CWE401_Memory_Leak__strdup_char_15.c":140:9)
#loc167 = loc("CWE401_Memory_Leak__strdup_char_15.c":141:5)
#loc168 = loc("CWE401_Memory_Leak__strdup_char_15.c":143:24)
#loc169 = loc("CWE401_Memory_Leak__strdup_char_15.c":143:9)
#loc170 = loc("CWE401_Memory_Leak__strdup_char_15.c":145:9)
#loc171 = loc("CWE401_Memory_Leak__strdup_char_15.c":145:16)
#loc172 = loc("CWE401_Memory_Leak__strdup_char_15.c":146:19)
#loc173 = loc("CWE401_Memory_Leak__strdup_char_15.c":146:9)
#loc174 = loc("CWE401_Memory_Leak__strdup_char_15.c":147:9)
#loc175 = loc("CWE401_Memory_Leak__strdup_char_15.c":149:5)
#loc176 = loc("CWE401_Memory_Leak__strdup_char_15.c":160:5)
#loc177 = loc("CWE401_Memory_Leak__strdup_char_15.c":149:12)
#loc178 = loc("CWE401_Memory_Leak__strdup_char_15.c":151:5)
#loc179 = loc("CWE401_Memory_Leak__strdup_char_15.c":155:9)
#loc180 = loc("CWE401_Memory_Leak__strdup_char_15.c":156:5)
#loc181 = loc("CWE401_Memory_Leak__strdup_char_15.c":158:19)
#loc182 = loc("CWE401_Memory_Leak__strdup_char_15.c":158:9)
#loc183 = loc("CWE401_Memory_Leak__strdup_char_15.c":159:9)
#loc184 = loc("CWE401_Memory_Leak__strdup_char_15.c":164:1)
#loc185 = loc("CWE401_Memory_Leak__strdup_char_15.c":194:1)
#loc186 = loc("CWE401_Memory_Leak__strdup_char_15.c":166:5)
#loc187 = loc("CWE401_Memory_Leak__strdup_char_15.c":166:12)
#loc188 = loc("CWE401_Memory_Leak__strdup_char_15.c":167:12)
#loc189 = loc("CWE401_Memory_Leak__strdup_char_15.c":167:5)
#loc190 = loc("CWE401_Memory_Leak__strdup_char_15.c":168:5)
#loc191 = loc("CWE401_Memory_Leak__strdup_char_15.c":181:5)
#loc192 = loc("CWE401_Memory_Leak__strdup_char_15.c":168:12)
#loc193 = loc("CWE401_Memory_Leak__strdup_char_15.c":170:5)
#loc194 = loc("CWE401_Memory_Leak__strdup_char_15.c":172:24)
#loc195 = loc("CWE401_Memory_Leak__strdup_char_15.c":172:9)
#loc196 = loc("CWE401_Memory_Leak__strdup_char_15.c":174:9)
#loc197 = loc("CWE401_Memory_Leak__strdup_char_15.c":174:16)
#loc198 = loc("CWE401_Memory_Leak__strdup_char_15.c":174:22)
#loc199 = loc("CWE401_Memory_Leak__strdup_char_15.c":175:19)
#loc200 = loc("CWE401_Memory_Leak__strdup_char_15.c":175:9)
#loc201 = loc("CWE401_Memory_Leak__strdup_char_15.c":176:9)
#loc202 = loc("CWE401_Memory_Leak__strdup_char_15.c":177:5)
#loc203 = loc("CWE401_Memory_Leak__strdup_char_15.c":179:19)
#loc204 = loc("CWE401_Memory_Leak__strdup_char_15.c":179:9)
#loc205 = loc("CWE401_Memory_Leak__strdup_char_15.c":180:9)
#loc206 = loc("CWE401_Memory_Leak__strdup_char_15.c":182:5)
#loc207 = loc("CWE401_Memory_Leak__strdup_char_15.c":193:5)
#loc208 = loc("CWE401_Memory_Leak__strdup_char_15.c":182:12)
#loc209 = loc("CWE401_Memory_Leak__strdup_char_15.c":184:5)
#loc210 = loc("CWE401_Memory_Leak__strdup_char_15.c":188:9)
#loc211 = loc("CWE401_Memory_Leak__strdup_char_15.c":189:5)
#loc212 = loc("CWE401_Memory_Leak__strdup_char_15.c":191:19)
#loc213 = loc("CWE401_Memory_Leak__strdup_char_15.c":191:9)
#loc214 = loc("CWE401_Memory_Leak__strdup_char_15.c":192:9)
#loc215 = loc(fused[#loc1, #loc2])
#loc216 = loc(fused[#loc3, #loc4])
#loc217 = loc(fused[#loc5, #loc6])
#loc218 = loc(fused[#loc7, #loc8])
#loc219 = loc(fused[#loc9, #loc10])
#loc220 = loc(fused[#loc12, #loc13])
#loc221 = loc(fused[#loc14, #loc15])
#loc222 = loc(fused[#loc17, #loc16])
#loc223 = loc(fused[#loc18, #loc19])
#loc224 = loc(fused[#loc22, #loc23])
#loc225 = loc(fused[#loc26, #loc27])
#loc226 = loc(fused[#loc34, #loc35])
#loc227 = loc(fused[#loc43, #loc44])
#loc228 = loc(fused[#loc45, #loc46])
#loc229 = loc(fused[#loc47, #loc48])
#loc230 = loc(fused[#loc49, #loc50])
#loc231 = loc(fused[#loc51, #loc52])
#loc232 = loc(fused[#loc53, #loc54])
#loc233 = loc(fused[#loc55, #loc56])
#loc234 = loc(fused[#loc61, #loc62])
#loc237 = loc(fused[#loc72, #loc73])
#loc238 = loc(fused[#loc76, #loc77])
#loc239 = loc(fused[#loc80, #loc79])
#loc240 = loc(fused[#loc81, #loc82])
#loc241 = loc(fused[#loc83, #loc84])
#loc242 = loc(fused[#loc85, #loc86])
#loc243 = loc(fused[#loc88, #loc87])
#loc244 = loc(fused[#loc89, #loc90])
#loc245 = loc(fused[#loc93, #loc94])
#loc246 = loc(fused[#loc97, #loc98])
#loc247 = loc(fused[#loc106, #loc107])
#loc248 = loc(fused[#loc117, #loc118])
#loc249 = loc(fused[#loc119, #loc120])
#loc250 = loc(fused[#loc122, #loc121])
#loc251 = loc(fused[#loc123, #loc124])
#loc252 = loc(fused[#loc127, #loc128])
#loc253 = loc(fused[#loc131, #loc132])
#loc254 = loc(fused[#loc140, #loc141])
#loc255 = loc(fused[#loc151, #loc152])
#loc256 = loc(fused[#loc154, #loc155])
#loc257 = loc(fused[#loc156, #loc157])
#loc258 = loc(fused[#loc159, #loc158])
#loc259 = loc(fused[#loc160, #loc161])
#loc260 = loc(fused[#loc169, #loc168])
#loc261 = loc(fused[#loc175, #loc176])
#loc262 = loc(fused[#loc184, #loc185])
#loc263 = loc(fused[#loc186, #loc187])
#loc264 = loc(fused[#loc189, #loc188])
#loc265 = loc(fused[#loc190, #loc191])
#loc266 = loc(fused[#loc195, #loc194])
#loc267 = loc(fused[#loc206, #loc207])
