!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_03.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc155)
  cir.func private @printHexCharLine(!s8i) loc(#loc156)
  cir.func @_ZN31CWE401_Memory_Leak__new_char_033badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc158)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc13)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc161)
      cir.if %4 {
        %5 = cir.const #cir.int<1> : !u64i loc(#loc163)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc18)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc163)
        cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
        %8 = cir.const #cir.int<65> : !s8i loc(#loc20)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
        cir.store %8, %9 : !s8i, !cir.ptr<!s8i> loc(#loc165)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
        %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc24)
        cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc25)
      } loc(#loc162)
    } loc(#loc160)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc28)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc29)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc167)
      cir.if %4 {
      } loc(#loc168)
    } loc(#loc166)
    cir.return loc(#loc6)
  } loc(#loc157)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc33)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc170)
  cir.func internal private @_ZN31CWE401_Memory_Leak__new_char_03L8goodB2G1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc40)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc44)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc45)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc175)
      cir.if %4 {
        %5 = cir.const #cir.int<1> : !u64i loc(#loc177)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc49)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc177)
        cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
        %8 = cir.const #cir.int<65> : !s8i loc(#loc51)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
        cir.store %8, %9 : !s8i, !cir.ptr<!s8i> loc(#loc179)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
        %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc55)
        cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc56)
      } loc(#loc176)
    } loc(#loc174)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc59)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc60)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc181)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc33)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc33)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc64)
      } else {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
        cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc49)
      } loc(#loc182)
    } loc(#loc180)
    cir.return loc(#loc37)
  } loc(#loc171)
  cir.func internal private @_ZN31CWE401_Memory_Leak__new_char_03L8goodB2G2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc184)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc70)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc74)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc75)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc187)
      cir.if %4 {
        %5 = cir.const #cir.int<1> : !u64i loc(#loc189)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc79)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc189)
        cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc190)
        %8 = cir.const #cir.int<65> : !s8i loc(#loc81)
        %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
        cir.store %8, %9 : !s8i, !cir.ptr<!s8i> loc(#loc191)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
        %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc85)
        cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc86)
      } loc(#loc188)
    } loc(#loc186)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc89)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc90)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc193)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
        cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc79)
      } loc(#loc194)
    } loc(#loc192)
    cir.return loc(#loc67)
  } loc(#loc183)
  cir.func internal private @_ZN31CWE401_Memory_Leak__new_char_03L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc196)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc97)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc101)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc102)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc199)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc106)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc106)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc107)
      } else {
        %5 = cir.alloca !s8i, !cir.ptr<!s8i>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc201)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
        %6 = cir.const #cir.int<65> : !s8i loc(#loc112)
        %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
        cir.store %6, %7 : !s8i, !cir.ptr<!s8i> loc(#loc203)
        %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
        %9 = cir.load %8 : !cir.ptr<!s8i>, !s8i loc(#loc116)
        cir.call @printHexCharLine(%9) : (!s8i) -> () loc(#loc117)
      } loc(#loc200)
    } loc(#loc198)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc120)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc121)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc205)
      cir.if %4 {
      } loc(#loc206)
    } loc(#loc204)
    cir.return loc(#loc94)
  } loc(#loc195)
  cir.func internal private @_ZN31CWE401_Memory_Leak__new_char_03L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc127)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc131)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc132)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc211)
      cir.if %4 {
        %5 = cir.alloca !s8i, !cir.ptr<!s8i>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc213)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
        %6 = cir.const #cir.int<65> : !s8i loc(#loc138)
        %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
        cir.store %6, %7 : !s8i, !cir.ptr<!s8i> loc(#loc215)
        %8 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
        %9 = cir.load %8 : !cir.ptr<!s8i>, !s8i loc(#loc142)
        cir.call @printHexCharLine(%9) : (!s8i) -> () loc(#loc143)
      } loc(#loc212)
    } loc(#loc210)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc146)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc147)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc217)
      cir.if %4 {
      } loc(#loc218)
    } loc(#loc216)
    cir.return loc(#loc124)
  } loc(#loc207)
  cir.func @_ZN31CWE401_Memory_Leak__new_char_034goodEv() extra(#fn_attr) {
    cir.call @_ZN31CWE401_Memory_Leak__new_char_03L8goodB2G1Ev() : () -> () loc(#loc151)
    cir.call @_ZN31CWE401_Memory_Leak__new_char_03L8goodB2G2Ev() : () -> () loc(#loc152)
    cir.call @_ZN31CWE401_Memory_Leak__new_char_03L8goodG2B1Ev() : () -> () loc(#loc153)
    cir.call @_ZN31CWE401_Memory_Leak__new_char_03L8goodG2B2Ev() : () -> () loc(#loc154)
    cir.return loc(#loc150)
  } loc(#loc219)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_char_03.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc5 = loc("CWE401_Memory_Leak__new_char_03.cpp":29:1)
#loc6 = loc("CWE401_Memory_Leak__new_char_03.cpp":46:1)
#loc7 = loc("CWE401_Memory_Leak__new_char_03.cpp":31:5)
#loc8 = loc("CWE401_Memory_Leak__new_char_03.cpp":31:12)
#loc9 = loc("CWE401_Memory_Leak__new_char_03.cpp":32:12)
#loc10 = loc("CWE401_Memory_Leak__new_char_03.cpp":32:5)
#loc11 = loc("CWE401_Memory_Leak__new_char_03.cpp":33:5)
#loc12 = loc("CWE401_Memory_Leak__new_char_03.cpp":40:5)
#loc13 = loc("CWE401_Memory_Leak__new_char_03.cpp":33:8)
#loc14 = loc("CWE401_Memory_Leak__new_char_03.cpp":33:11)
#loc15 = loc("CWE401_Memory_Leak__new_char_03.cpp":34:5)
#loc16 = loc("CWE401_Memory_Leak__new_char_03.cpp":36:16)
#loc17 = loc("CWE401_Memory_Leak__new_char_03.cpp":36:20)
#loc18 = loc("CWE401_Memory_Leak__new_char_03.cpp":29:6)
#loc19 = loc("CWE401_Memory_Leak__new_char_03.cpp":36:9)
#loc20 = loc("CWE401_Memory_Leak__new_char_03.cpp":38:17)
#loc21 = loc("CWE401_Memory_Leak__new_char_03.cpp":38:10)
#loc22 = loc("CWE401_Memory_Leak__new_char_03.cpp":38:9)
#loc23 = loc("CWE401_Memory_Leak__new_char_03.cpp":39:27)
#loc24 = loc("CWE401_Memory_Leak__new_char_03.cpp":39:26)
#loc25 = loc("CWE401_Memory_Leak__new_char_03.cpp":39:9)
#loc26 = loc("CWE401_Memory_Leak__new_char_03.cpp":41:5)
#loc27 = loc("CWE401_Memory_Leak__new_char_03.cpp":45:5)
#loc28 = loc("CWE401_Memory_Leak__new_char_03.cpp":41:8)
#loc29 = loc("CWE401_Memory_Leak__new_char_03.cpp":41:11)
#loc30 = loc("CWE401_Memory_Leak__new_char_03.cpp":42:5)
#loc31 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc33 = loc("CWE401_Memory_Leak__new_char_03.cpp":68:19)
#loc34 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc35 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc36 = loc("CWE401_Memory_Leak__new_char_03.cpp":53:1)
#loc37 = loc("CWE401_Memory_Leak__new_char_03.cpp":75:1)
#loc38 = loc("CWE401_Memory_Leak__new_char_03.cpp":55:5)
#loc39 = loc("CWE401_Memory_Leak__new_char_03.cpp":55:12)
#loc40 = loc("CWE401_Memory_Leak__new_char_03.cpp":56:12)
#loc41 = loc("CWE401_Memory_Leak__new_char_03.cpp":56:5)
#loc42 = loc("CWE401_Memory_Leak__new_char_03.cpp":57:5)
#loc43 = loc("CWE401_Memory_Leak__new_char_03.cpp":64:5)
#loc44 = loc("CWE401_Memory_Leak__new_char_03.cpp":57:8)
#loc45 = loc("CWE401_Memory_Leak__new_char_03.cpp":57:11)
#loc46 = loc("CWE401_Memory_Leak__new_char_03.cpp":58:5)
#loc47 = loc("CWE401_Memory_Leak__new_char_03.cpp":60:16)
#loc48 = loc("CWE401_Memory_Leak__new_char_03.cpp":60:20)
#loc49 = loc("CWE401_Memory_Leak__new_char_03.cpp":53:13)
#loc50 = loc("CWE401_Memory_Leak__new_char_03.cpp":60:9)
#loc51 = loc("CWE401_Memory_Leak__new_char_03.cpp":62:17)
#loc52 = loc("CWE401_Memory_Leak__new_char_03.cpp":62:10)
#loc53 = loc("CWE401_Memory_Leak__new_char_03.cpp":62:9)
#loc54 = loc("CWE401_Memory_Leak__new_char_03.cpp":63:27)
#loc55 = loc("CWE401_Memory_Leak__new_char_03.cpp":63:26)
#loc56 = loc("CWE401_Memory_Leak__new_char_03.cpp":63:9)
#loc57 = loc("CWE401_Memory_Leak__new_char_03.cpp":65:5)
#loc58 = loc("CWE401_Memory_Leak__new_char_03.cpp":74:5)
#loc59 = loc("CWE401_Memory_Leak__new_char_03.cpp":65:8)
#loc60 = loc("CWE401_Memory_Leak__new_char_03.cpp":65:11)
#loc61 = loc("CWE401_Memory_Leak__new_char_03.cpp":66:5)
#loc62 = loc("CWE401_Memory_Leak__new_char_03.cpp":69:5)
#loc63 = loc("CWE401_Memory_Leak__new_char_03.cpp":71:5)
#loc64 = loc("CWE401_Memory_Leak__new_char_03.cpp":68:9)
#loc65 = loc("CWE401_Memory_Leak__new_char_03.cpp":73:16)
#loc66 = loc("CWE401_Memory_Leak__new_char_03.cpp":78:1)
#loc67 = loc("CWE401_Memory_Leak__new_char_03.cpp":95:1)
#loc68 = loc("CWE401_Memory_Leak__new_char_03.cpp":80:5)
#loc69 = loc("CWE401_Memory_Leak__new_char_03.cpp":80:12)
#loc70 = loc("CWE401_Memory_Leak__new_char_03.cpp":81:12)
#loc71 = loc("CWE401_Memory_Leak__new_char_03.cpp":81:5)
#loc72 = loc("CWE401_Memory_Leak__new_char_03.cpp":82:5)
#loc73 = loc("CWE401_Memory_Leak__new_char_03.cpp":89:5)
#loc74 = loc("CWE401_Memory_Leak__new_char_03.cpp":82:8)
#loc75 = loc("CWE401_Memory_Leak__new_char_03.cpp":82:11)
#loc76 = loc("CWE401_Memory_Leak__new_char_03.cpp":83:5)
#loc77 = loc("CWE401_Memory_Leak__new_char_03.cpp":85:16)
#loc78 = loc("CWE401_Memory_Leak__new_char_03.cpp":85:20)
#loc79 = loc("CWE401_Memory_Leak__new_char_03.cpp":78:13)
#loc80 = loc("CWE401_Memory_Leak__new_char_03.cpp":85:9)
#loc81 = loc("CWE401_Memory_Leak__new_char_03.cpp":87:17)
#loc82 = loc("CWE401_Memory_Leak__new_char_03.cpp":87:10)
#loc83 = loc("CWE401_Memory_Leak__new_char_03.cpp":87:9)
#loc84 = loc("CWE401_Memory_Leak__new_char_03.cpp":88:27)
#loc85 = loc("CWE401_Memory_Leak__new_char_03.cpp":88:26)
#loc86 = loc("CWE401_Memory_Leak__new_char_03.cpp":88:9)
#loc87 = loc("CWE401_Memory_Leak__new_char_03.cpp":90:5)
#loc88 = loc("CWE401_Memory_Leak__new_char_03.cpp":94:5)
#loc89 = loc("CWE401_Memory_Leak__new_char_03.cpp":90:8)
#loc90 = loc("CWE401_Memory_Leak__new_char_03.cpp":90:11)
#loc91 = loc("CWE401_Memory_Leak__new_char_03.cpp":91:5)
#loc92 = loc("CWE401_Memory_Leak__new_char_03.cpp":93:16)
#loc93 = loc("CWE401_Memory_Leak__new_char_03.cpp":98:1)
#loc94 = loc("CWE401_Memory_Leak__new_char_03.cpp":121:1)
#loc95 = loc("CWE401_Memory_Leak__new_char_03.cpp":100:5)
#loc96 = loc("CWE401_Memory_Leak__new_char_03.cpp":100:12)
#loc97 = loc("CWE401_Memory_Leak__new_char_03.cpp":101:12)
#loc98 = loc("CWE401_Memory_Leak__new_char_03.cpp":101:5)
#loc99 = loc("CWE401_Memory_Leak__new_char_03.cpp":102:5)
#loc100 = loc("CWE401_Memory_Leak__new_char_03.cpp":115:5)
#loc101 = loc("CWE401_Memory_Leak__new_char_03.cpp":102:8)
#loc102 = loc("CWE401_Memory_Leak__new_char_03.cpp":102:11)
#loc103 = loc("CWE401_Memory_Leak__new_char_03.cpp":103:5)
#loc104 = loc("CWE401_Memory_Leak__new_char_03.cpp":106:5)
#loc105 = loc("CWE401_Memory_Leak__new_char_03.cpp":108:5)
#loc106 = loc("CWE401_Memory_Leak__new_char_03.cpp":105:19)
#loc107 = loc("CWE401_Memory_Leak__new_char_03.cpp":105:9)
#loc108 = loc("CWE401_Memory_Leak__new_char_03.cpp":110:9)
#loc109 = loc("CWE401_Memory_Leak__new_char_03.cpp":110:14)
#loc110 = loc("CWE401_Memory_Leak__new_char_03.cpp":111:9)
#loc111 = loc("CWE401_Memory_Leak__new_char_03.cpp":111:17)
#loc112 = loc("CWE401_Memory_Leak__new_char_03.cpp":113:17)
#loc113 = loc("CWE401_Memory_Leak__new_char_03.cpp":113:10)
#loc114 = loc("CWE401_Memory_Leak__new_char_03.cpp":113:9)
#loc115 = loc("CWE401_Memory_Leak__new_char_03.cpp":114:27)
#loc116 = loc("CWE401_Memory_Leak__new_char_03.cpp":114:26)
#loc117 = loc("CWE401_Memory_Leak__new_char_03.cpp":114:9)
#loc118 = loc("CWE401_Memory_Leak__new_char_03.cpp":116:5)
#loc119 = loc("CWE401_Memory_Leak__new_char_03.cpp":120:5)
#loc120 = loc("CWE401_Memory_Leak__new_char_03.cpp":116:8)
#loc121 = loc("CWE401_Memory_Leak__new_char_03.cpp":116:11)
#loc122 = loc("CWE401_Memory_Leak__new_char_03.cpp":117:5)
#loc123 = loc("CWE401_Memory_Leak__new_char_03.cpp":124:1)
#loc124 = loc("CWE401_Memory_Leak__new_char_03.cpp":142:1)
#loc125 = loc("CWE401_Memory_Leak__new_char_03.cpp":126:5)
#loc126 = loc("CWE401_Memory_Leak__new_char_03.cpp":126:12)
#loc127 = loc("CWE401_Memory_Leak__new_char_03.cpp":127:12)
#loc128 = loc("CWE401_Memory_Leak__new_char_03.cpp":127:5)
#loc129 = loc("CWE401_Memory_Leak__new_char_03.cpp":128:5)
#loc130 = loc("CWE401_Memory_Leak__new_char_03.cpp":136:5)
#loc131 = loc("CWE401_Memory_Leak__new_char_03.cpp":128:8)
#loc132 = loc("CWE401_Memory_Leak__new_char_03.cpp":128:11)
#loc133 = loc("CWE401_Memory_Leak__new_char_03.cpp":129:5)
#loc134 = loc("CWE401_Memory_Leak__new_char_03.cpp":131:9)
#loc135 = loc("CWE401_Memory_Leak__new_char_03.cpp":131:14)
#loc136 = loc("CWE401_Memory_Leak__new_char_03.cpp":132:9)
#loc137 = loc("CWE401_Memory_Leak__new_char_03.cpp":132:17)
#loc138 = loc("CWE401_Memory_Leak__new_char_03.cpp":134:17)
#loc139 = loc("CWE401_Memory_Leak__new_char_03.cpp":134:10)
#loc140 = loc("CWE401_Memory_Leak__new_char_03.cpp":134:9)
#loc141 = loc("CWE401_Memory_Leak__new_char_03.cpp":135:27)
#loc142 = loc("CWE401_Memory_Leak__new_char_03.cpp":135:26)
#loc143 = loc("CWE401_Memory_Leak__new_char_03.cpp":135:9)
#loc144 = loc("CWE401_Memory_Leak__new_char_03.cpp":137:5)
#loc145 = loc("CWE401_Memory_Leak__new_char_03.cpp":141:5)
#loc146 = loc("CWE401_Memory_Leak__new_char_03.cpp":137:8)
#loc147 = loc("CWE401_Memory_Leak__new_char_03.cpp":137:11)
#loc148 = loc("CWE401_Memory_Leak__new_char_03.cpp":138:5)
#loc149 = loc("CWE401_Memory_Leak__new_char_03.cpp":144:1)
#loc150 = loc("CWE401_Memory_Leak__new_char_03.cpp":150:1)
#loc151 = loc("CWE401_Memory_Leak__new_char_03.cpp":146:5)
#loc152 = loc("CWE401_Memory_Leak__new_char_03.cpp":147:5)
#loc153 = loc("CWE401_Memory_Leak__new_char_03.cpp":148:5)
#loc154 = loc("CWE401_Memory_Leak__new_char_03.cpp":149:5)
#loc155 = loc(fused[#loc1, #loc2])
#loc156 = loc(fused[#loc3, #loc4])
#loc157 = loc(fused[#loc5, #loc6])
#loc158 = loc(fused[#loc7, #loc8])
#loc159 = loc(fused[#loc10, #loc9])
#loc160 = loc(fused[#loc11, #loc12])
#loc161 = loc(fused[#loc13, #loc14])
#loc162 = loc(fused[#loc15, #loc12])
#loc163 = loc(fused[#loc16, #loc17])
#loc164 = loc(fused[#loc19, #loc17])
#loc165 = loc(fused[#loc22, #loc20])
#loc166 = loc(fused[#loc26, #loc27])
#loc167 = loc(fused[#loc28, #loc29])
#loc168 = loc(fused[#loc30, #loc27])
#loc169 = loc(fused[#loc31, #loc32])
#loc170 = loc(fused[#loc34, #loc35])
#loc171 = loc(fused[#loc36, #loc37])
#loc172 = loc(fused[#loc38, #loc39])
#loc173 = loc(fused[#loc41, #loc40])
#loc174 = loc(fused[#loc42, #loc43])
#loc175 = loc(fused[#loc44, #loc45])
#loc176 = loc(fused[#loc46, #loc43])
#loc177 = loc(fused[#loc47, #loc48])
#loc178 = loc(fused[#loc50, #loc48])
#loc179 = loc(fused[#loc53, #loc51])
#loc180 = loc(fused[#loc57, #loc58])
#loc181 = loc(fused[#loc59, #loc60])
#loc182 = loc(fused[#loc61, #loc62, #loc63, #loc58])
#loc183 = loc(fused[#loc66, #loc67])
#loc184 = loc(fused[#loc68, #loc69])
#loc185 = loc(fused[#loc71, #loc70])
#loc186 = loc(fused[#loc72, #loc73])
#loc187 = loc(fused[#loc74, #loc75])
#loc188 = loc(fused[#loc76, #loc73])
#loc189 = loc(fused[#loc77, #loc78])
#loc190 = loc(fused[#loc80, #loc78])
#loc191 = loc(fused[#loc83, #loc81])
#loc192 = loc(fused[#loc87, #loc88])
#loc193 = loc(fused[#loc89, #loc90])
#loc194 = loc(fused[#loc91, #loc88])
#loc195 = loc(fused[#loc93, #loc94])
#loc196 = loc(fused[#loc95, #loc96])
#loc197 = loc(fused[#loc98, #loc97])
#loc198 = loc(fused[#loc99, #loc100])
#loc199 = loc(fused[#loc101, #loc102])
#loc200 = loc(fused[#loc103, #loc104, #loc105, #loc100])
#loc201 = loc(fused[#loc108, #loc109])
#loc202 = loc(fused[#loc110, #loc111])
#loc203 = loc(fused[#loc114, #loc112])
#loc204 = loc(fused[#loc118, #loc119])
#loc205 = loc(fused[#loc120, #loc121])
#loc206 = loc(fused[#loc122, #loc119])
#loc207 = loc(fused[#loc123, #loc124])
#loc208 = loc(fused[#loc125, #loc126])
#loc209 = loc(fused[#loc128, #loc127])
#loc210 = loc(fused[#loc129, #loc130])
#loc211 = loc(fused[#loc131, #loc132])
#loc212 = loc(fused[#loc133, #loc130])
#loc213 = loc(fused[#loc134, #loc135])
#loc214 = loc(fused[#loc136, #loc137])
#loc215 = loc(fused[#loc140, #loc138])
#loc216 = loc(fused[#loc144, #loc145])
#loc217 = loc(fused[#loc146, #loc147])
#loc218 = loc(fused[#loc148, #loc145])
#loc219 = loc(fused[#loc149, #loc150])
