!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":44:71)
#loc6 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":44:77)
#loc24 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":60:75)
#loc25 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":60:81)
#loc46 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":72:75)
#loc47 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":72:81)
#loc76 = loc(fused[#loc5, #loc6])
#loc83 = loc(fused[#loc24, #loc25])
#loc91 = loc(fused[#loc46, #loc47])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc74)
  cir.func  @CWE190_Integer_Overflow__int_connect_socket_multiply_63b_badSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc76)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc77)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc9)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc8)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc10)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    cir.scope {
      %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc13)
      %5 = cir.const #cir.int<0> : !s32i loc(#loc14)
      %6 = cir.cmp(gt, %4, %5) : !s32i, !s32i loc(#loc79)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc15)
      cir.if %7 {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc81)
        %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc19)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc18)
        %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc19)
        cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc81)
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc20)
        cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc21)
      } loc(#loc80)
    } loc(#loc78)
    cir.return loc(#loc4)
  } loc(#loc75)
  cir.func  @CWE190_Integer_Overflow__int_connect_socket_multiply_63b_goodG2BSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc24, #loc25])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc83)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc84)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc28)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc84)
    cir.scope {
      %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc32)
      %5 = cir.const #cir.int<0> : !s32i loc(#loc33)
      %6 = cir.cmp(gt, %4, %5) : !s32i, !s32i loc(#loc86)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc34)
      cir.if %7 {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc88)
        %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc38)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc37)
        %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc38)
        cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc88)
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc39)
        cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc40)
      } loc(#loc87)
    } loc(#loc85)
    cir.return loc(#loc23)
  } loc(#loc82)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc89)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc43)
  cir.func  @CWE190_Integer_Overflow__int_connect_socket_multiply_63b_goodB2GSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc46, #loc47])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc91)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc92)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc50)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc49)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    cir.scope {
      %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc54)
      %5 = cir.const #cir.int<0> : !s32i loc(#loc55)
      %6 = cir.cmp(gt, %4, %5) : !s32i, !s32i loc(#loc94)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc56)
      cir.if %7 {
        cir.scope {
          %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc60)
          %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc61)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc62)
          %11 = cir.binop(div, %9, %10) : !s32i loc(#loc97)
          %12 = cir.cmp(lt, %8, %11) : !s32i, !s32i loc(#loc98)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc64)
          cir.if %13 {
            %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc100)
            %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc70)
            %16 = cir.const #cir.int<2> : !s32i loc(#loc69)
            %17 = cir.binop(mul, %15, %16) nsw : !s32i loc(#loc70)
            cir.store %17, %14 : !s32i, !cir.ptr<!s32i> loc(#loc100)
            %18 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc71)
            cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc72)
          } else {
            %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc43)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc43)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc73)
          } loc(#loc99)
        } loc(#loc96)
      } loc(#loc95)
    } loc(#loc93)
    cir.return loc(#loc45)
  } loc(#loc90)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":44:1)
#loc4 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":53:1)
#loc7 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":46:5)
#loc8 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":46:17)
#loc9 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":45:1)
#loc10 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":46:16)
#loc11 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":47:5)
#loc12 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":52:5)
#loc13 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":47:8)
#loc14 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":47:15)
#loc15 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":47:13)
#loc16 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":48:5)
#loc17 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":50:9)
#loc18 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":50:29)
#loc19 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":50:22)
#loc20 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":51:22)
#loc21 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":51:9)
#loc22 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":60:1)
#loc23 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":69:1)
#loc26 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":62:5)
#loc27 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":62:17)
#loc28 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":61:1)
#loc29 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":62:16)
#loc30 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":63:5)
#loc31 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":68:5)
#loc32 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":63:8)
#loc33 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":63:15)
#loc34 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":63:13)
#loc35 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":64:5)
#loc36 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":66:9)
#loc37 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":66:29)
#loc38 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":66:22)
#loc39 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":67:22)
#loc40 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":67:9)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc43 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":85:23)
#loc44 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":72:1)
#loc45 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":88:1)
#loc48 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":74:5)
#loc49 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":74:17)
#loc50 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":73:1)
#loc51 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":74:16)
#loc52 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":75:5)
#loc53 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":87:5)
#loc54 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":75:8)
#loc55 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":75:15)
#loc56 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":75:13)
#loc57 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":76:5)
#loc58 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":78:9)
#loc59 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":86:9)
#loc60 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":78:13)
#loc61 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":78:21)
#loc62 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":78:29)
#loc63 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":78:30)
#loc64 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":78:18)
#loc65 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":79:9)
#loc66 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":82:9)
#loc67 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":84:9)
#loc68 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":80:13)
#loc69 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":80:33)
#loc70 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":80:26)
#loc71 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":81:26)
#loc72 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":81:13)
#loc73 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_63b.c":85:13)
#loc74 = loc(fused[#loc1, #loc2])
#loc75 = loc(fused[#loc3, #loc4])
#loc77 = loc(fused[#loc7, #loc8])
#loc78 = loc(fused[#loc11, #loc12])
#loc79 = loc(fused[#loc13, #loc14])
#loc80 = loc(fused[#loc16, #loc12])
#loc81 = loc(fused[#loc17, #loc18])
#loc82 = loc(fused[#loc22, #loc23])
#loc84 = loc(fused[#loc26, #loc27])
#loc85 = loc(fused[#loc30, #loc31])
#loc86 = loc(fused[#loc32, #loc33])
#loc87 = loc(fused[#loc35, #loc31])
#loc88 = loc(fused[#loc36, #loc37])
#loc89 = loc(fused[#loc41, #loc42])
#loc90 = loc(fused[#loc44, #loc45])
#loc92 = loc(fused[#loc48, #loc49])
#loc93 = loc(fused[#loc52, #loc53])
#loc94 = loc(fused[#loc54, #loc55])
#loc95 = loc(fused[#loc57, #loc53])
#loc96 = loc(fused[#loc58, #loc59])
#loc97 = loc(fused[#loc61, #loc62])
#loc98 = loc(fused[#loc60, #loc63])
#loc99 = loc(fused[#loc65, #loc66, #loc67, #loc59])
#loc100 = loc(fused[#loc68, #loc69])
