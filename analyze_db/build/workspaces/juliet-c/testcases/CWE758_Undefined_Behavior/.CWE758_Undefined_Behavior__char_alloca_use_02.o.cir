!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_alloca_use_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printHexCharLine(!s8i) loc(#loc78)
  cir.func no_proto @CWE758_Undefined_Behavior__char_alloca_use_02_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc7)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc7)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc83)
          %3 = cir.const #cir.int<1> : !u64i loc(#loc12)
          %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
          %5 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc84)
          %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
          cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
          %8 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
          %9 = cir.load %8 : !cir.ptr<!s8i>, !s8i loc(#loc15)
          cir.store %9, %5 : !s8i, !cir.ptr<!s8i> loc(#loc84)
          %10 = cir.load %5 : !cir.ptr<!s8i>, !s8i loc(#loc16)
          cir.call @printHexCharLine(%10) : (!s8i) -> () loc(#loc17)
        } loc(#loc82)
      } loc(#loc81)
    } loc(#loc80)
    cir.return loc(#loc4)
  } loc(#loc79)
  cir.func no_proto @CWE758_Undefined_Behavior__char_alloca_use_02_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc86)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc20)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc87)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc22)
    cir.return loc(#loc19)
  } loc(#loc85)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc26)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc31)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc31)
      cir.if %1 {
        %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc26)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc26)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc35)
      } else {
        cir.scope {
          %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc93)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc94)
          %4 = cir.const #cir.int<1> : !u64i loc(#loc41)
          %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc41)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc41)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
          cir.store %7, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
          %8 = cir.const #cir.int<5> : !s32i loc(#loc42)
          %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc42)
          cir.store %9, %2 : !s8i, !cir.ptr<!s8i> loc(#loc95)
          %10 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc44)
          %11 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
          cir.store %10, %11 : !s8i, !cir.ptr<!s8i> loc(#loc96)
          cir.scope {
            %12 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc98)
            %13 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
            %14 = cir.load %13 : !cir.ptr<!s8i>, !s8i loc(#loc51)
            cir.store %14, %12 : !s8i, !cir.ptr<!s8i> loc(#loc98)
            %15 = cir.load %12 : !cir.ptr<!s8i>, !s8i loc(#loc52)
            cir.call @printHexCharLine(%15) : (!s8i) -> () loc(#loc53)
          } loc(#loc97)
        } loc(#loc92)
      } loc(#loc91)
    } loc(#loc90)
    cir.return loc(#loc28)
  } loc(#loc89)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc58)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc58)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc103)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc104)
          %4 = cir.const #cir.int<1> : !u64i loc(#loc65)
          %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc65)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc65)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc65)
          cir.store %7, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
          %8 = cir.const #cir.int<5> : !s32i loc(#loc66)
          %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc66)
          cir.store %9, %2 : !s8i, !cir.ptr<!s8i> loc(#loc105)
          %10 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc68)
          %11 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
          cir.store %10, %11 : !s8i, !cir.ptr<!s8i> loc(#loc106)
          cir.scope {
            %12 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc108)
            %13 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
            %14 = cir.load %13 : !cir.ptr<!s8i>, !s8i loc(#loc75)
            cir.store %14, %12 : !s8i, !cir.ptr<!s8i> loc(#loc108)
            %15 = cir.load %12 : !cir.ptr<!s8i>, !s8i loc(#loc76)
            cir.call @printHexCharLine(%15) : (!s8i) -> () loc(#loc77)
          } loc(#loc107)
        } loc(#loc102)
      } loc(#loc101)
    } loc(#loc100)
    cir.return loc(#loc55)
  } loc(#loc99)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_alloca_use_02.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":20:1)
#loc4 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":30:1)
#loc5 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":22:5)
#loc6 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":29:5)
#loc7 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":22:8)
#loc8 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":23:5)
#loc9 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":24:9)
#loc10 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":28:9)
#loc11 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":25:13)
#loc12 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":25:38)
#loc13 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":26:13)
#loc14 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":26:26)
#loc15 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":26:25)
#loc16 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":27:30)
#loc17 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":27:13)
#loc18 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":77:1)
#loc19 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":81:1)
#loc20 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":79:5)
#loc21 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":79:11)
#loc22 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":80:5)
#loc23 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":80:11)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc26 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":42:19)
#loc27 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":37:1)
#loc28 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":57:1)
#loc29 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":39:5)
#loc30 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":56:5)
#loc31 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":39:8)
#loc32 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":40:5)
#loc33 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":43:5)
#loc34 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":45:5)
#loc35 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":42:9)
#loc36 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":46:9)
#loc37 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":55:9)
#loc38 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":47:13)
#loc39 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":47:18)
#loc40 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":48:13)
#loc41 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":48:38)
#loc42 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":49:20)
#loc43 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":49:13)
#loc44 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":50:24)
#loc45 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":50:14)
#loc46 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":50:13)
#loc47 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":51:13)
#loc48 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":54:13)
#loc49 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":52:17)
#loc50 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":52:30)
#loc51 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":52:29)
#loc52 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":53:34)
#loc53 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":53:17)
#loc54 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":60:1)
#loc55 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":75:1)
#loc56 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":62:5)
#loc57 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":74:5)
#loc58 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":62:8)
#loc59 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":63:5)
#loc60 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":64:9)
#loc61 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":73:9)
#loc62 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":65:13)
#loc63 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":65:18)
#loc64 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":66:13)
#loc65 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":66:38)
#loc66 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":67:20)
#loc67 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":67:13)
#loc68 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":68:24)
#loc69 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":68:14)
#loc70 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":68:13)
#loc71 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":69:13)
#loc72 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":72:13)
#loc73 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":70:17)
#loc74 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":70:30)
#loc75 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":70:29)
#loc76 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":71:34)
#loc77 = loc("CWE758_Undefined_Behavior__char_alloca_use_02.c":71:17)
#loc78 = loc(fused[#loc1, #loc2])
#loc79 = loc(fused[#loc3, #loc4])
#loc80 = loc(fused[#loc5, #loc6])
#loc81 = loc(fused[#loc8, #loc6])
#loc82 = loc(fused[#loc9, #loc10])
#loc83 = loc(fused[#loc11, #loc12])
#loc84 = loc(fused[#loc13, #loc14])
#loc85 = loc(fused[#loc18, #loc19])
#loc86 = loc(fused[#loc20, #loc21])
#loc87 = loc(fused[#loc22, #loc23])
#loc88 = loc(fused[#loc24, #loc25])
#loc89 = loc(fused[#loc27, #loc28])
#loc90 = loc(fused[#loc29, #loc30])
#loc91 = loc(fused[#loc32, #loc33, #loc34, #loc30])
#loc92 = loc(fused[#loc36, #loc37])
#loc93 = loc(fused[#loc38, #loc39])
#loc94 = loc(fused[#loc40, #loc41])
#loc95 = loc(fused[#loc43, #loc42])
#loc96 = loc(fused[#loc46, #loc44])
#loc97 = loc(fused[#loc47, #loc48])
#loc98 = loc(fused[#loc49, #loc50])
#loc99 = loc(fused[#loc54, #loc55])
#loc100 = loc(fused[#loc56, #loc57])
#loc101 = loc(fused[#loc59, #loc57])
#loc102 = loc(fused[#loc60, #loc61])
#loc103 = loc(fused[#loc62, #loc63])
#loc104 = loc(fused[#loc64, #loc65])
#loc105 = loc(fused[#loc67, #loc66])
#loc106 = loc(fused[#loc70, #loc68])
#loc107 = loc(fused[#loc71, #loc72])
#loc108 = loc(fused[#loc73, #loc74])
