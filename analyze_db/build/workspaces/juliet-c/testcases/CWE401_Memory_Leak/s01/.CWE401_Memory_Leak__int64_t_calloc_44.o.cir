!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":24:21)
#loc4 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":24:31)
#loc52 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":51:25)
#loc53 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":51:35)
#loc79 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":71:25)
#loc80 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":71:35)
#loc117 = loc(fused[#loc3, #loc4])
#loc136 = loc(fused[#loc52, #loc53])
#loc145 = loc(fused[#loc79, #loc80])
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func internal private @badSink(%arg0: !cir.ptr<!s64i> loc(fused[#loc3, #loc4])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc117)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc5)
    cir.return loc(#loc2)
  } loc(#loc116)
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc118)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc119)
  cir.func private @printLongLongLine(!s64i) loc(#loc120)
  cir.func no_proto @CWE401_Memory_Leak__int64_t_calloc_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc123)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<(!cir.ptr<!s64i>)>> loc(#loc17)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>> loc(#loc123)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc18)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc124)
    %4 = cir.get_global @calloc : !cir.ptr<!cir.func<(!u64i, !u64i) -> !cir.ptr<!void>>> loc(#loc20)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc21)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc125)
    %8 = cir.call @calloc(%6, %7) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc20)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc126)
    cir.store %9, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc127)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc28)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc29)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s64i>, !cir.bool loc(#loc129)
    cir.brcond %13 ^bb2, ^bb3 loc(#loc130)
  ^bb2:  // pred: ^bb1
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc31)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc33)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr1) loc(#loc31)
    cir.br ^bb3 loc(#loc27)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc27)
  ^bb4:  // pred: ^bb3
    %17 = cir.const #cir.int<5> : !s64i loc(#loc34)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc35)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!s64i>, %19 : !s32i), !cir.ptr<!s64i> loc(#loc37)
    cir.store %17, %20 : !s64i, !cir.ptr<!s64i> loc(#loc131)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc38)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s64i>, %22 : !s32i), !cir.ptr<!s64i> loc(#loc40)
    %24 = cir.load %23 : !cir.ptr<!s64i>, !s64i loc(#loc38)
    cir.call @printLongLongLine(%24) : (!s64i) -> () loc(#loc41)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s64i>)>> loc(#loc42)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc43)
    cir.call %25(%26) : (!cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>, !cir.ptr<!s64i>) -> () loc(#loc42)
    cir.return loc(#loc13)
  } loc(#loc121)
  cir.func no_proto @CWE401_Memory_Leak__int64_t_calloc_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc133)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc46)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc134)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc48)
    cir.return loc(#loc45)
  } loc(#loc132)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s64i> loc(fused[#loc52, #loc53])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc136)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc54)
    cir.return loc(#loc51)
  } loc(#loc135)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc139)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!cir.ptr<!s64i>)>> loc(#loc60)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>> loc(#loc139)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc61)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc140)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc63)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc63)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc63)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc63)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc63)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc63)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc63)
    cir.store %10, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc141)
    %11 = cir.const #cir.int<5> : !s64i loc(#loc65)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc66)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s64i>, %13 : !s32i), !cir.ptr<!s64i> loc(#loc68)
    cir.store %11, %14 : !s64i, !cir.ptr<!s64i> loc(#loc142)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc69)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s64i>, %16 : !s32i), !cir.ptr<!s64i> loc(#loc71)
    %18 = cir.load %17 : !cir.ptr<!s64i>, !s64i loc(#loc69)
    cir.call @printLongLongLine(%18) : (!s64i) -> () loc(#loc72)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s64i>)>> loc(#loc73)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc74)
    cir.call %19(%20) : (!cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>, !cir.ptr<!s64i>) -> () loc(#loc73)
    cir.return loc(#loc56)
  } loc(#loc137)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc143)
  cir.func internal private @goodB2GSink(%arg0: !cir.ptr<!s64i> loc(fused[#loc79, #loc80])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc145)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc81)
    %1 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc82)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc83)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc83)
    cir.call @free(%3) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc82)
    cir.return loc(#loc78)
  } loc(#loc144)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc148)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<(!cir.ptr<!s64i>)>> loc(#loc89)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>> loc(#loc148)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc90)
    cir.store %3, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc149)
    %4 = cir.get_global @calloc : !cir.ptr<!cir.func<(!u64i, !u64i) -> !cir.ptr<!void>>> loc(#loc92)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc93)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc93)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc150)
    %8 = cir.call @calloc(%6, %7) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc92)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc151)
    cir.store %9, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc152)
    cir.br ^bb1 loc(#loc153)
  ^bb1:  // pred: ^bb0
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc100)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc101)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc101)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s64i>, !cir.bool loc(#loc154)
    cir.brcond %13 ^bb2, ^bb3 loc(#loc155)
  ^bb2:  // pred: ^bb1
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc103)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc105)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr1) loc(#loc103)
    cir.br ^bb3 loc(#loc99)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc99)
  ^bb4:  // pred: ^bb3
    %17 = cir.const #cir.int<5> : !s64i loc(#loc106)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc107)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!s64i>, %19 : !s32i), !cir.ptr<!s64i> loc(#loc109)
    cir.store %17, %20 : !s64i, !cir.ptr<!s64i> loc(#loc156)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc110)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s64i>, %22 : !s32i), !cir.ptr<!s64i> loc(#loc112)
    %24 = cir.load %23 : !cir.ptr<!s64i>, !s64i loc(#loc110)
    cir.call @printLongLongLine(%24) : (!s64i) -> () loc(#loc113)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s64i>)>> loc(#loc114)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc115)
    cir.call %25(%26) : (!cir.ptr<!cir.func<(!cir.ptr<!s64i>)>>, !cir.ptr<!s64i>) -> () loc(#loc114)
    cir.return loc(#loc85)
  } loc(#loc146)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_calloc_44.c":0:0)
#loc1 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":24:1)
#loc2 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":28:1)
#loc5 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":25:1)
#loc6 = loc("/usr/include/stdlib.h":675:1)
#loc7 = loc("/usr/include/stdlib.h":676:14)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc12 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":30:1)
#loc13 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":44:1)
#loc14 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":32:5)
#loc15 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":32:15)
#loc16 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":34:5)
#loc17 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":34:35)
#loc18 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":35:12)
#loc19 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":35:5)
#loc20 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":37:23)
#loc21 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":37:30)
#loc22 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":37:35)
#loc23 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":37:49)
#loc24 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":37:50)
#loc25 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":37:5)
#loc26 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":38:5)
#loc27 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":38:33)
#loc28 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":38:9)
#loc29 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":38:17)
#loc30 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":38:23)
#loc31 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":38:24)
#loc32 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":38:30)
#loc33 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":38:29)
#loc34 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":40:15)
#loc35 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":40:5)
#loc36 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":40:10)
#loc37 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":40:11)
#loc38 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":41:23)
#loc39 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":41:28)
#loc40 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":41:29)
#loc41 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":41:5)
#loc42 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":43:5)
#loc43 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":43:13)
#loc44 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":91:1)
#loc45 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":95:1)
#loc46 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":93:5)
#loc47 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":93:13)
#loc48 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":94:5)
#loc49 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":94:13)
#loc50 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":51:1)
#loc51 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":55:1)
#loc54 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":52:1)
#loc55 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":57:1)
#loc56 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":68:1)
#loc57 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":59:5)
#loc58 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":59:15)
#loc59 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":60:5)
#loc60 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":60:35)
#loc61 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":61:12)
#loc62 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":61:5)
#loc63 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":63:23)
#loc64 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":63:5)
#loc65 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":65:15)
#loc66 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":65:5)
#loc67 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":65:10)
#loc68 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":65:11)
#loc69 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":66:23)
#loc70 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":66:28)
#loc71 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":66:29)
#loc72 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":66:5)
#loc73 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":67:5)
#loc74 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":67:13)
#loc75 = loc("/usr/include/stdlib.h":687:1)
#loc76 = loc("/usr/include/stdlib.h":687:32)
#loc77 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":71:1)
#loc78 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":75:1)
#loc81 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":72:1)
#loc82 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":74:5)
#loc83 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":74:10)
#loc84 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":77:1)
#loc85 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":89:1)
#loc86 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":79:5)
#loc87 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":79:15)
#loc88 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":80:5)
#loc89 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":80:35)
#loc90 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":81:12)
#loc91 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":81:5)
#loc92 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":83:23)
#loc93 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":83:30)
#loc94 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":83:35)
#loc95 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":83:49)
#loc96 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":83:50)
#loc97 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":83:5)
#loc98 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":84:5)
#loc99 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":84:33)
#loc100 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":84:9)
#loc101 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":84:17)
#loc102 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":84:23)
#loc103 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":84:24)
#loc104 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":84:30)
#loc105 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":84:29)
#loc106 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":86:15)
#loc107 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":86:5)
#loc108 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":86:10)
#loc109 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":86:11)
#loc110 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":87:23)
#loc111 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":87:28)
#loc112 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":87:29)
#loc113 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":87:5)
#loc114 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":88:5)
#loc115 = loc("CWE401_Memory_Leak__int64_t_calloc_44.c":88:13)
#loc116 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc6, #loc7])
#loc119 = loc(fused[#loc8, #loc9])
#loc120 = loc(fused[#loc10, #loc11])
#loc121 = loc(fused[#loc12, #loc13])
#loc122 = loc(fused[#loc14, #loc15])
#loc123 = loc(fused[#loc16, #loc17])
#loc124 = loc(fused[#loc19, #loc18])
#loc125 = loc(fused[#loc22, #loc23])
#loc126 = loc(fused[#loc20, #loc24])
#loc127 = loc(fused[#loc25, #loc24])
#loc128 = loc(fused[#loc26, #loc27])
#loc129 = loc(fused[#loc28, #loc29])
#loc130 = loc(fused[#loc30, #loc27])
#loc131 = loc(fused[#loc35, #loc34])
#loc132 = loc(fused[#loc44, #loc45])
#loc133 = loc(fused[#loc46, #loc47])
#loc134 = loc(fused[#loc48, #loc49])
#loc135 = loc(fused[#loc50, #loc51])
#loc137 = loc(fused[#loc55, #loc56])
#loc138 = loc(fused[#loc57, #loc58])
#loc139 = loc(fused[#loc59, #loc60])
#loc140 = loc(fused[#loc62, #loc61])
#loc141 = loc(fused[#loc64, #loc63])
#loc142 = loc(fused[#loc66, #loc65])
#loc143 = loc(fused[#loc75, #loc76])
#loc144 = loc(fused[#loc77, #loc78])
#loc146 = loc(fused[#loc84, #loc85])
#loc147 = loc(fused[#loc86, #loc87])
#loc148 = loc(fused[#loc88, #loc89])
#loc149 = loc(fused[#loc91, #loc90])
#loc150 = loc(fused[#loc94, #loc95])
#loc151 = loc(fused[#loc92, #loc96])
#loc152 = loc(fused[#loc97, #loc96])
#loc153 = loc(fused[#loc98, #loc99])
#loc154 = loc(fused[#loc100, #loc101])
#loc155 = loc(fused[#loc102, #loc99])
#loc156 = loc(fused[#loc107, #loc106])
