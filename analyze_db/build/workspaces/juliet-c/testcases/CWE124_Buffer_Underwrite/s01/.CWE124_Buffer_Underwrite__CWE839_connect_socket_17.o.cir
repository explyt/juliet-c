!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc390)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc391)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc392)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc393)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc394)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc395)
  cir.func private @close(!s32i) -> !s32i loc(#loc396)
  cir.func private @printIntLine(!s32i) loc(#loc397)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc398)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc400)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc401)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc402)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc29)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc403)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc33)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc405)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc36)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc406)
        cir.condition(%8) loc(#loc37)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc409)
            %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc410)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc411)
            %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc412)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc46)
            %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc46)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc411)
            cir.scope {
              cir.do {
                cir.scope {
                  %12 = cir.const #cir.int<2> : !s32i loc(#loc53)
                  %13 = cir.const #cir.int<1> : !s32i loc(#loc54)
                  %14 = cir.const #cir.int<6> : !s32i loc(#loc55)
                  %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
                  cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc415)
                  cir.scope {
                    %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                    %55 = cir.const #cir.int<1> : !s32i loc(#loc62)
                    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc62)
                    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc417)
                    cir.if %57 {
                      cir.break loc(#loc64)
                    } loc(#loc418)
                  } loc(#loc416)
                  %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc419)
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc67)
                  %18 = cir.const #cir.int<16> : !u64i loc(#loc420)
                  cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc421)
                  %19 = cir.const #cir.int<2> : !s32i loc(#loc72)
                  %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc72)
                  %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                  cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc422)
                  %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                  %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                  %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc75)
                  %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
                  %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
                  cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc423)
                  %27 = cir.const #cir.int<27015> : !s32i loc(#loc80)
                  %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc80)
                  %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc81)
                  %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
                  cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc424)
                  cir.scope {
                    %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                    %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc426)
                    %56 = cir.const #cir.int<16> : !u64i loc(#loc427)
                    %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc427)
                    %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc92)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc93)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc93)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc428)
                    cir.if %61 {
                      cir.break loc(#loc95)
                    } loc(#loc429)
                  } loc(#loc425)
                  %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                  %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc97)
                  %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
                  %34 = cir.const #cir.int<3> : !s32i loc(#loc98)
                  %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc98)
                  %36 = cir.const #cir.int<4> : !u64i loc(#loc98)
                  %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc98)
                  %38 = cir.const #cir.int<2> : !s32i loc(#loc98)
                  %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc98)
                  %40 = cir.binop(add, %37, %39) : !u64i loc(#loc98)
                  %41 = cir.const #cir.int<1> : !s32i loc(#loc99)
                  %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc99)
                  %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc430)
                  %44 = cir.const #cir.int<0> : !s32i loc(#loc100)
                  %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc101)
                  %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc101)
                  cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc431)
                  cir.scope {
                    %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                    %55 = cir.const #cir.int<1> : !s32i loc(#loc107)
                    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc107)
                    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc433)
                    %58 = cir.ternary(%57, true {
                      %59 = cir.const #true loc(#loc108)
                      cir.yield %59 : !cir.bool loc(#loc108)
                    }, false {
                      %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                      %60 = cir.const #cir.int<0> : !s32i loc(#loc110)
                      %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc434)
                      %62 = cir.ternary(%61, true {
                        %63 = cir.const #true loc(#loc108)
                        cir.yield %63 : !cir.bool loc(#loc108)
                      }, false {
                        %63 = cir.const #false loc(#loc108)
                        cir.yield %63 : !cir.bool loc(#loc108)
                      }) : (!cir.bool) -> !cir.bool loc(#loc108)
                      cir.yield %62 : !cir.bool loc(#loc108)
                    }) : (!cir.bool) -> !cir.bool loc(#loc108)
                    cir.if %58 {
                      cir.break loc(#loc112)
                    } loc(#loc435)
                  } loc(#loc432)
                  %47 = cir.const #cir.int<0> : !s32i loc(#loc113)
                  %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc113)
                  %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                  %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc115)
                  %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc115)
                  cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc436)
                  %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc116)
                  %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc117)
                  cir.store %53, %2 : !s32i, !cir.ptr<!s32i> loc(#loc437)
                } loc(#loc414)
                cir.yield loc(#loc50)
              } while {
                %12 = cir.const #cir.int<0> : !s32i loc(#loc120)
                %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc120)
                cir.condition(%13) loc(#loc120)
              } loc(#loc413)
            } loc(#loc413)
            cir.scope {
              %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc123)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc124)
              %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc124)
              %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc439)
              cir.if %15 {
                %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc126)
                %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc127)
              } loc(#loc440)
            } loc(#loc438)
          } loc(#loc408)
        } loc(#loc407)
        cir.yield loc(#loc32)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc129)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc441)
        cir.yield loc(#loc404)
      } loc(#loc404)
    } loc(#loc404)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc132)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc443)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc134)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc135)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc444)
        cir.condition(%8) loc(#loc136)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc447)
            %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc448)
            %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc448)
            cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc448)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc146)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc147)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc450)
              cir.if %11 {
                %12 = cir.const #cir.int<1> : !s32i loc(#loc151)
                %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc152)
                %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc153)
                %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc153)
                cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc452)
                cir.scope {
                  %16 = cir.const #cir.int<0> : !s32i loc(#loc156)
                  cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc454)
                  cir.for : cond {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc158)
                    %18 = cir.const #cir.int<10> : !s32i loc(#loc159)
                    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc455)
                    cir.condition(%19) loc(#loc160)
                  } body {
                    cir.scope {
                      %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc162)
                      %18 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc163)
                      %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc163)
                      %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc163)
                      cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc164)
                    } loc(#loc456)
                    cir.yield loc(#loc155)
                  } step {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc165)
                    %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc166)
                    cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc457)
                    cir.yield loc(#loc453)
                  } loc(#loc453)
                } loc(#loc453)
              } else {
                %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc20)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc20)
                cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc167)
              } loc(#loc451)
            } loc(#loc449)
          } loc(#loc446)
        } loc(#loc445)
        cir.yield loc(#loc131)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc168)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc169)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc458)
        cir.yield loc(#loc442)
      } loc(#loc442)
    } loc(#loc442)
    cir.return loc(#loc22)
  } loc(#loc399)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc460)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc172)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc461)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc174)
    cir.return loc(#loc171)
  } loc(#loc459)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc176)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc463)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc464)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc465)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc185)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc466)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc189)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc468)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc191)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc192)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc469)
        cir.condition(%8) loc(#loc193)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc472)
            %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc473)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc474)
            %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc475)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc202)
            %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc202)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc474)
            cir.scope {
              cir.do {
                cir.scope {
                  %12 = cir.const #cir.int<2> : !s32i loc(#loc209)
                  %13 = cir.const #cir.int<1> : !s32i loc(#loc210)
                  %14 = cir.const #cir.int<6> : !s32i loc(#loc211)
                  %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc212)
                  cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc478)
                  cir.scope {
                    %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc217)
                    %55 = cir.const #cir.int<1> : !s32i loc(#loc218)
                    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc218)
                    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc480)
                    cir.if %57 {
                      cir.break loc(#loc220)
                    } loc(#loc481)
                  } loc(#loc479)
                  %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc482)
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc223)
                  %18 = cir.const #cir.int<16> : !u64i loc(#loc483)
                  cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc484)
                  %19 = cir.const #cir.int<2> : !s32i loc(#loc228)
                  %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc228)
                  %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                  cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc485)
                  %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc230)
                  %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc230)
                  %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc231)
                  %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
                  %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
                  cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc486)
                  %27 = cir.const #cir.int<27015> : !s32i loc(#loc234)
                  %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc234)
                  %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc235)
                  %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
                  cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc487)
                  cir.scope {
                    %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc240)
                    %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc489)
                    %56 = cir.const #cir.int<16> : !u64i loc(#loc490)
                    %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc490)
                    %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc245)
                    %59 = cir.const #cir.int<1> : !s32i loc(#loc246)
                    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc246)
                    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc491)
                    cir.if %61 {
                      cir.break loc(#loc248)
                    } loc(#loc492)
                  } loc(#loc488)
                  %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc249)
                  %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc250)
                  %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc250)
                  %34 = cir.const #cir.int<3> : !s32i loc(#loc251)
                  %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc251)
                  %36 = cir.const #cir.int<4> : !u64i loc(#loc251)
                  %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc251)
                  %38 = cir.const #cir.int<2> : !s32i loc(#loc251)
                  %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc251)
                  %40 = cir.binop(add, %37, %39) : !u64i loc(#loc251)
                  %41 = cir.const #cir.int<1> : !s32i loc(#loc252)
                  %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc252)
                  %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc493)
                  %44 = cir.const #cir.int<0> : !s32i loc(#loc253)
                  %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc254)
                  %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc254)
                  cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc494)
                  cir.scope {
                    %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc259)
                    %55 = cir.const #cir.int<1> : !s32i loc(#loc260)
                    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc260)
                    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc496)
                    %58 = cir.ternary(%57, true {
                      %59 = cir.const #true loc(#loc261)
                      cir.yield %59 : !cir.bool loc(#loc261)
                    }, false {
                      %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc262)
                      %60 = cir.const #cir.int<0> : !s32i loc(#loc263)
                      %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc497)
                      %62 = cir.ternary(%61, true {
                        %63 = cir.const #true loc(#loc261)
                        cir.yield %63 : !cir.bool loc(#loc261)
                      }, false {
                        %63 = cir.const #false loc(#loc261)
                        cir.yield %63 : !cir.bool loc(#loc261)
                      }) : (!cir.bool) -> !cir.bool loc(#loc261)
                      cir.yield %62 : !cir.bool loc(#loc261)
                    }) : (!cir.bool) -> !cir.bool loc(#loc261)
                    cir.if %58 {
                      cir.break loc(#loc265)
                    } loc(#loc498)
                  } loc(#loc495)
                  %47 = cir.const #cir.int<0> : !s32i loc(#loc266)
                  %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc266)
                  %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc267)
                  %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc268)
                  %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc268)
                  cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc499)
                  %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc269)
                  %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc270)
                  cir.store %53, %2 : !s32i, !cir.ptr<!s32i> loc(#loc500)
                } loc(#loc477)
                cir.yield loc(#loc206)
              } while {
                %12 = cir.const #cir.int<0> : !s32i loc(#loc273)
                %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc273)
                cir.condition(%13) loc(#loc273)
              } loc(#loc476)
            } loc(#loc476)
            cir.scope {
              %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc276)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc277)
              %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc277)
              %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc502)
              cir.if %15 {
                %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc279)
                %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc280)
              } loc(#loc503)
            } loc(#loc501)
          } loc(#loc471)
        } loc(#loc470)
        cir.yield loc(#loc188)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc281)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc282)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc504)
        cir.yield loc(#loc467)
      } loc(#loc467)
    } loc(#loc467)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc285)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc506)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc287)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc288)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc507)
        cir.condition(%8) loc(#loc289)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc510)
            %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc511)
            %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc511)
            cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc511)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc299)
              %10 = cir.const #cir.int<0> : !s32i loc(#loc300)
              %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc513)
              %12 = cir.ternary(%11, true {
                %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc302)
                %14 = cir.const #cir.int<10> : !s32i loc(#loc303)
                %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc514)
                %16 = cir.ternary(%15, true {
                  %17 = cir.const #true loc(#loc301)
                  cir.yield %17 : !cir.bool loc(#loc301)
                }, false {
                  %17 = cir.const #false loc(#loc301)
                  cir.yield %17 : !cir.bool loc(#loc301)
                }) : (!cir.bool) -> !cir.bool loc(#loc301)
                cir.yield %16 : !cir.bool loc(#loc301)
              }, false {
                %13 = cir.const #false loc(#loc301)
                cir.yield %13 : !cir.bool loc(#loc301)
              }) : (!cir.bool) -> !cir.bool loc(#loc301)
              cir.if %12 {
                %13 = cir.const #cir.int<1> : !s32i loc(#loc308)
                %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc309)
                %15 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc310)
                %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc310)
                cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc516)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc313)
                  cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc518)
                  cir.for : cond {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc315)
                    %19 = cir.const #cir.int<10> : !s32i loc(#loc316)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc519)
                    cir.condition(%20) loc(#loc317)
                  } body {
                    cir.scope {
                      %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc319)
                      %19 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc320)
                      %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc320)
                      %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc320)
                      cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc321)
                    } loc(#loc520)
                    cir.yield loc(#loc312)
                  } step {
                    %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc322)
                    %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc323)
                    cir.store %19, %6 : !s32i, !cir.ptr<!s32i> loc(#loc521)
                    cir.yield loc(#loc517)
                  } loc(#loc517)
                } loc(#loc517)
              } else {
                %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc176)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc176)
                cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc324)
              } loc(#loc515)
            } loc(#loc512)
          } loc(#loc509)
        } loc(#loc508)
        cir.yield loc(#loc284)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc325)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc326)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc522)
        cir.yield loc(#loc505)
      } loc(#loc505)
    } loc(#loc505)
    cir.return loc(#loc178)
  } loc(#loc462)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc524)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc525)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc526)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc334)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc335)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc527)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc339)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc529)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc341)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc342)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc530)
        cir.condition(%8) loc(#loc343)
      } body {
        cir.scope {
          %6 = cir.const #cir.int<7> : !s32i loc(#loc345)
          cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc532)
        } loc(#loc531)
        cir.yield loc(#loc338)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc347)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc348)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc533)
        cir.yield loc(#loc528)
      } loc(#loc528)
    } loc(#loc528)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc351)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc535)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc353)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc354)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc536)
        cir.condition(%8) loc(#loc355)
      } body {
        cir.scope {
          cir.scope {
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc539)
            %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc540)
            %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc540)
            cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc540)
            cir.scope {
              %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc365)
              %10 = cir.const #cir.int<10> : !s32i loc(#loc366)
              %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc542)
              cir.if %11 {
                %12 = cir.const #cir.int<1> : !s32i loc(#loc370)
                %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc371)
                %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc372)
                %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc372)
                cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc544)
                cir.scope {
                  %16 = cir.const #cir.int<0> : !s32i loc(#loc375)
                  cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc546)
                  cir.for : cond {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc377)
                    %18 = cir.const #cir.int<10> : !s32i loc(#loc378)
                    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc547)
                    cir.condition(%19) loc(#loc379)
                  } body {
                    cir.scope {
                      %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc381)
                      %18 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc382)
                      %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc382)
                      %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc382)
                      cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc383)
                    } loc(#loc548)
                    cir.yield loc(#loc374)
                  } step {
                    %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc384)
                    %18 = cir.unary(inc, %17) nsw : !s32i, !s32i loc(#loc385)
                    cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc549)
                    cir.yield loc(#loc545)
                  } loc(#loc545)
                } loc(#loc545)
              } else {
                %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc386)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc386)
                cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc387)
              } loc(#loc543)
            } loc(#loc541)
          } loc(#loc538)
        } loc(#loc537)
        cir.yield loc(#loc350)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc388)
        %7 = cir.unary(inc, %6) nsw : !s32i, !s32i loc(#loc389)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc550)
        cir.yield loc(#loc534)
      } loc(#loc534)
    } loc(#loc534)
    cir.return loc(#loc328)
  } loc(#loc523)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":78:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":127:27)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":44:1)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":131:1)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":46:5)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":46:9)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":46:11)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":47:5)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":47:9)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":49:13)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":49:12)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":49:5)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":50:5)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":108:5)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":50:13)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":50:9)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":50:16)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":50:20)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":50:18)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":51:5)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":52:9)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":107:9)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":57:13)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":57:17)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":58:13)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":58:32)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":59:13)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":59:36)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":60:13)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":60:45)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":61:13)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":96:21)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":62:13)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":95:13)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":71:40)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":71:49)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":71:62)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":71:33)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":71:17)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":71:73)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":72:17)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":75:17)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":72:21)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":72:38)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":73:17)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":74:21)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":76:24)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":76:25)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":76:34)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":76:37)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":76:51)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":76:17)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":76:52)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":77:38)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":77:17)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":78:43)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":78:17)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":78:63)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":79:42)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":79:36)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":79:17)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":79:50)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":80:17)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":83:17)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":80:29)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":80:62)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":80:63)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":80:72)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":80:86)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":80:21)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":80:92)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":81:17)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":82:21)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":86:35)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":86:50)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":86:63)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":86:81)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":86:84)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":86:30)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":86:17)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":86:85)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":87:17)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":90:17)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":87:21)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":87:35)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":87:48)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":87:51)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":87:65)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":88:17)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":89:21)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":92:43)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":92:29)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":92:17)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":94:29)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":94:24)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":94:17)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":94:40)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":96:20)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":97:13)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":100:13)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":97:17)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":97:34)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":98:13)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":99:30)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":99:17)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":50:24)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":50:23)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":109:5)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":130:5)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":109:13)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":109:9)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":109:16)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":109:20)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":109:18)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":110:5)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":111:9)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":129:9)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":112:13)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":112:17)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":113:13)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":113:34)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":116:13)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":128:13)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":116:17)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":116:24)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":117:13)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":124:13)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":126:13)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":118:32)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":118:24)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":118:17)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":120:17)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":123:17)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":120:25)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":120:21)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":120:28)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":120:32)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":120:30)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":121:17)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":122:41)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":122:34)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":122:21)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":120:37)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":120:36)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":127:17)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":109:24)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":109:23)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":263:1)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":267:1)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":265:5)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":265:13)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":266:5)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":266:13)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":220:27)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":138:1)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":224:1)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":140:5)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":140:9)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":140:11)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":141:5)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":141:9)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":143:13)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":143:12)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":143:5)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":144:5)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":202:5)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":144:13)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":144:9)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":144:16)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":144:20)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":144:18)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":145:5)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":146:9)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":201:9)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":151:13)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":151:17)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":152:13)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":152:32)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":153:13)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":153:36)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":154:13)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":154:45)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":155:13)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":190:21)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":156:13)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":189:13)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":165:40)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":165:49)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":165:62)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":165:33)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":165:17)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":165:73)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":166:17)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":169:17)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":166:21)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":166:38)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":167:17)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":168:21)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":170:24)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":170:25)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":170:34)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":170:37)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":170:51)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":170:17)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":170:52)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":171:38)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":171:17)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":172:53)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":172:43)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":172:17)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":172:63)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":173:42)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":173:36)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":173:17)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":173:50)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":174:17)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":177:17)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":174:29)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":174:62)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":174:63)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":174:72)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":174:86)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":174:21)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":174:92)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":175:17)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":176:21)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":180:35)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":180:50)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":180:63)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":180:81)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":180:84)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":180:30)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":180:17)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":180:85)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":181:17)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":184:17)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":181:21)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":181:35)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":181:48)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":181:51)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":181:65)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":182:17)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":183:21)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":186:43)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":186:29)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":186:17)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":188:29)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":188:24)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":188:17)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":188:40)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":190:20)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":191:13)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":194:13)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":191:17)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":191:34)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":192:13)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":193:30)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":193:17)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":144:24)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":144:23)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":203:5)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":223:5)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":203:13)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":203:9)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":203:16)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":203:20)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":203:18)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":204:5)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":205:9)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":222:9)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":206:13)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":206:17)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":207:13)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":207:34)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":209:13)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":221:13)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":209:17)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":209:25)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":209:27)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":209:30)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":209:38)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":209:40)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":210:13)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":217:13)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":219:13)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":211:32)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":211:24)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":211:17)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":213:17)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":216:17)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":213:25)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":213:21)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":213:28)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":213:32)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":213:30)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":214:17)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":215:41)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":215:34)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":215:21)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":213:37)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":213:36)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":220:17)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":203:24)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":203:23)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":227:1)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":261:1)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":229:5)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":229:9)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":229:11)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":230:5)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":230:9)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":232:13)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":232:12)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":232:5)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":233:5)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":238:5)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":233:13)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":233:9)
#loc341 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":233:16)
#loc342 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":233:20)
#loc343 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":233:18)
#loc344 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":234:5)
#loc345 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":237:16)
#loc346 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":237:9)
#loc347 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":233:24)
#loc348 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":233:23)
#loc349 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":239:5)
#loc350 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":260:5)
#loc351 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":239:13)
#loc352 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":239:9)
#loc353 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":239:16)
#loc354 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":239:20)
#loc355 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":239:18)
#loc356 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":240:5)
#loc357 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":241:9)
#loc358 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":259:9)
#loc359 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":242:13)
#loc360 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":242:17)
#loc361 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":243:13)
#loc362 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":243:34)
#loc363 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":246:13)
#loc364 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":258:13)
#loc365 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":246:17)
#loc366 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":246:24)
#loc367 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":247:13)
#loc368 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":254:13)
#loc369 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":256:13)
#loc370 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":248:32)
#loc371 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":248:24)
#loc372 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":248:17)
#loc373 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":250:17)
#loc374 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":253:17)
#loc375 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":250:25)
#loc376 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":250:21)
#loc377 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":250:28)
#loc378 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":250:32)
#loc379 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":250:30)
#loc380 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":251:17)
#loc381 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":252:41)
#loc382 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":252:34)
#loc383 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":252:21)
#loc384 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":250:37)
#loc385 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":250:36)
#loc386 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":257:27)
#loc387 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":257:17)
#loc388 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":239:24)
#loc389 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_17.c":239:23)
#loc390 = loc(fused[#loc1, #loc2])
#loc391 = loc(fused[#loc3, #loc4])
#loc392 = loc(fused[#loc6, #loc7])
#loc393 = loc(fused[#loc8, #loc9])
#loc394 = loc(fused[#loc10, #loc11])
#loc395 = loc(fused[#loc12, #loc13])
#loc396 = loc(fused[#loc14, #loc15])
#loc397 = loc(fused[#loc16, #loc17])
#loc398 = loc(fused[#loc18, #loc19])
#loc399 = loc(fused[#loc21, #loc22])
#loc400 = loc(fused[#loc23, #loc24])
#loc401 = loc(fused[#loc23, #loc25])
#loc402 = loc(fused[#loc26, #loc27])
#loc403 = loc(fused[#loc30, #loc28])
#loc404 = loc(fused[#loc31, #loc32])
#loc405 = loc(fused[#loc34, #loc33])
#loc406 = loc(fused[#loc35, #loc36])
#loc407 = loc(fused[#loc38, #loc32])
#loc408 = loc(fused[#loc39, #loc40])
#loc409 = loc(fused[#loc41, #loc42])
#loc410 = loc(fused[#loc43, #loc44])
#loc411 = loc(fused[#loc45, #loc46])
#loc412 = loc(fused[#loc47, #loc48])
#loc413 = loc(fused[#loc49, #loc50])
#loc414 = loc(fused[#loc51, #loc52])
#loc415 = loc(fused[#loc57, #loc58])
#loc416 = loc(fused[#loc59, #loc60])
#loc417 = loc(fused[#loc61, #loc62])
#loc418 = loc(fused[#loc63, #loc60])
#loc419 = loc(fused[#loc65, #loc66])
#loc420 = loc(fused[#loc68, #loc69])
#loc421 = loc(fused[#loc70, #loc71])
#loc422 = loc(fused[#loc74, #loc72])
#loc423 = loc(fused[#loc78, #loc79])
#loc424 = loc(fused[#loc83, #loc84])
#loc425 = loc(fused[#loc85, #loc86])
#loc426 = loc(fused[#loc88, #loc89])
#loc427 = loc(fused[#loc90, #loc91])
#loc428 = loc(fused[#loc92, #loc93])
#loc429 = loc(fused[#loc94, #loc86])
#loc430 = loc(fused[#loc98, #loc99])
#loc431 = loc(fused[#loc102, #loc103])
#loc432 = loc(fused[#loc104, #loc105])
#loc433 = loc(fused[#loc106, #loc107])
#loc434 = loc(fused[#loc109, #loc110])
#loc435 = loc(fused[#loc111, #loc105])
#loc436 = loc(fused[#loc115, #loc113])
#loc437 = loc(fused[#loc118, #loc119])
#loc438 = loc(fused[#loc121, #loc122])
#loc439 = loc(fused[#loc123, #loc124])
#loc440 = loc(fused[#loc125, #loc122])
#loc441 = loc(fused[#loc129, #loc128])
#loc442 = loc(fused[#loc130, #loc131])
#loc443 = loc(fused[#loc133, #loc132])
#loc444 = loc(fused[#loc134, #loc135])
#loc445 = loc(fused[#loc137, #loc131])
#loc446 = loc(fused[#loc138, #loc139])
#loc447 = loc(fused[#loc140, #loc141])
#loc448 = loc(fused[#loc142, #loc143])
#loc449 = loc(fused[#loc144, #loc145])
#loc450 = loc(fused[#loc146, #loc147])
#loc451 = loc(fused[#loc148, #loc149, #loc150, #loc145])
#loc452 = loc(fused[#loc153, #loc151])
#loc453 = loc(fused[#loc154, #loc155])
#loc454 = loc(fused[#loc157, #loc156])
#loc455 = loc(fused[#loc158, #loc159])
#loc456 = loc(fused[#loc161, #loc155])
#loc457 = loc(fused[#loc166, #loc165])
#loc458 = loc(fused[#loc169, #loc168])
#loc459 = loc(fused[#loc170, #loc171])
#loc460 = loc(fused[#loc172, #loc173])
#loc461 = loc(fused[#loc174, #loc175])
#loc462 = loc(fused[#loc177, #loc178])
#loc463 = loc(fused[#loc179, #loc180])
#loc464 = loc(fused[#loc179, #loc181])
#loc465 = loc(fused[#loc182, #loc183])
#loc466 = loc(fused[#loc186, #loc184])
#loc467 = loc(fused[#loc187, #loc188])
#loc468 = loc(fused[#loc190, #loc189])
#loc469 = loc(fused[#loc191, #loc192])
#loc470 = loc(fused[#loc194, #loc188])
#loc471 = loc(fused[#loc195, #loc196])
#loc472 = loc(fused[#loc197, #loc198])
#loc473 = loc(fused[#loc199, #loc200])
#loc474 = loc(fused[#loc201, #loc202])
#loc475 = loc(fused[#loc203, #loc204])
#loc476 = loc(fused[#loc205, #loc206])
#loc477 = loc(fused[#loc207, #loc208])
#loc478 = loc(fused[#loc213, #loc214])
#loc479 = loc(fused[#loc215, #loc216])
#loc480 = loc(fused[#loc217, #loc218])
#loc481 = loc(fused[#loc219, #loc216])
#loc482 = loc(fused[#loc221, #loc222])
#loc483 = loc(fused[#loc224, #loc225])
#loc484 = loc(fused[#loc226, #loc227])
#loc485 = loc(fused[#loc229, #loc228])
#loc486 = loc(fused[#loc232, #loc233])
#loc487 = loc(fused[#loc236, #loc237])
#loc488 = loc(fused[#loc238, #loc239])
#loc489 = loc(fused[#loc241, #loc242])
#loc490 = loc(fused[#loc243, #loc244])
#loc491 = loc(fused[#loc245, #loc246])
#loc492 = loc(fused[#loc247, #loc239])
#loc493 = loc(fused[#loc251, #loc252])
#loc494 = loc(fused[#loc255, #loc256])
#loc495 = loc(fused[#loc257, #loc258])
#loc496 = loc(fused[#loc259, #loc260])
#loc497 = loc(fused[#loc262, #loc263])
#loc498 = loc(fused[#loc264, #loc258])
#loc499 = loc(fused[#loc268, #loc266])
#loc500 = loc(fused[#loc271, #loc272])
#loc501 = loc(fused[#loc274, #loc275])
#loc502 = loc(fused[#loc276, #loc277])
#loc503 = loc(fused[#loc278, #loc275])
#loc504 = loc(fused[#loc282, #loc281])
#loc505 = loc(fused[#loc283, #loc284])
#loc506 = loc(fused[#loc286, #loc285])
#loc507 = loc(fused[#loc287, #loc288])
#loc508 = loc(fused[#loc290, #loc284])
#loc509 = loc(fused[#loc291, #loc292])
#loc510 = loc(fused[#loc293, #loc294])
#loc511 = loc(fused[#loc295, #loc296])
#loc512 = loc(fused[#loc297, #loc298])
#loc513 = loc(fused[#loc299, #loc300])
#loc514 = loc(fused[#loc302, #loc304])
#loc515 = loc(fused[#loc305, #loc306, #loc307, #loc298])
#loc516 = loc(fused[#loc310, #loc308])
#loc517 = loc(fused[#loc311, #loc312])
#loc518 = loc(fused[#loc314, #loc313])
#loc519 = loc(fused[#loc315, #loc316])
#loc520 = loc(fused[#loc318, #loc312])
#loc521 = loc(fused[#loc323, #loc322])
#loc522 = loc(fused[#loc326, #loc325])
#loc523 = loc(fused[#loc327, #loc328])
#loc524 = loc(fused[#loc329, #loc330])
#loc525 = loc(fused[#loc329, #loc331])
#loc526 = loc(fused[#loc332, #loc333])
#loc527 = loc(fused[#loc336, #loc334])
#loc528 = loc(fused[#loc337, #loc338])
#loc529 = loc(fused[#loc340, #loc339])
#loc530 = loc(fused[#loc341, #loc342])
#loc531 = loc(fused[#loc344, #loc338])
#loc532 = loc(fused[#loc346, #loc345])
#loc533 = loc(fused[#loc348, #loc347])
#loc534 = loc(fused[#loc349, #loc350])
#loc535 = loc(fused[#loc352, #loc351])
#loc536 = loc(fused[#loc353, #loc354])
#loc537 = loc(fused[#loc356, #loc350])
#loc538 = loc(fused[#loc357, #loc358])
#loc539 = loc(fused[#loc359, #loc360])
#loc540 = loc(fused[#loc361, #loc362])
#loc541 = loc(fused[#loc363, #loc364])
#loc542 = loc(fused[#loc365, #loc366])
#loc543 = loc(fused[#loc367, #loc368, #loc369, #loc364])
#loc544 = loc(fused[#loc372, #loc370])
#loc545 = loc(fused[#loc373, #loc374])
#loc546 = loc(fused[#loc376, #loc375])
#loc547 = loc(fused[#loc377, #loc378])
#loc548 = loc(fused[#loc380, #loc374])
#loc549 = loc(fused[#loc385, #loc384])
#loc550 = loc(fused[#loc389, #loc388])
