clang: warning: argument unused during compilation: '-c' [-Wunused-command-line-argument]
NYI
UNREACHABLE executed at /home/ladisgin/git_proj/clangir/clang/lib/CIR/CodeGen/CIRGenClass.cpp:151!
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace, preprocessed source, and associated run script.
Stack dump:
0.	Program arguments: /home/ladisgin/git_proj/clangir/build/bin/clang -S -Xclang -emit-cir -I ../../../testcasesupport -c CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_82_bad.cpp -o .CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_82_bad.o.cir
1.	<eof> parser at end of file
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  clang     0x000000000b7d3f02 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 59
1  clang     0x000000000b7d4340
2  clang     0x000000000b7d1b42 llvm::sys::RunSignalHandlers() + 131
3  clang     0x000000000b7d37e2 llvm::sys::CleanupOnSignal(unsigned long) + 117
4  clang     0x000000000b70064a
5  clang     0x000000000b700ad9
6  libc.so.6 0x00007feaa284fd00
7  libc.so.6 0x00007feaa28a8664
8  libc.so.6 0x00007feaa284fc4e gsignal + 30
9  libc.so.6 0x00007feaa2837902 abort + 223
10 clang     0x000000000b70ab07
11 clang     0x000000000ddea9e9
12 clang     0x000000000ddebd9f
13 clang     0x000000000ddebc37
14 clang     0x000000000ddeddae cir::CIRGenFunction::buildImplicitAssignmentOperatorBody(cir::FunctionArgList&) + 346
15 clang     0x000000000dd1c7ee cir::CIRGenFunction::generateCode(clang::GlobalDecl, mlir::cir::FuncOp, cir::CIRGenFunctionInfo const&) + 2290
16 clang     0x000000000dce67a2 cir::CIRGenModule::buildGlobalFunctionDefinition(clang::GlobalDecl, mlir::Operation*) + 544
17 clang     0x000000000dce9b8f cir::CIRGenModule::buildGlobalDefinition(clang::GlobalDecl, mlir::Operation*) + 323
18 clang     0x000000000dcef60e cir::CIRGenModule::buildGlobalDecl(clang::GlobalDecl&) + 488
19 clang     0x000000000dcef9b5 cir::CIRGenModule::buildDefaultMethods() + 95
20 clang     0x000000000dce21d0 cir::CIRGenerator::buildDefaultMethods() + 38
21 clang     0x000000000da4d449
22 clang     0x0000000011cc5279 clang::ParseAST(clang::Sema&, bool, bool) + 1049
23 clang     0x000000000cd33ea2 clang::ASTFrontendAction::ExecuteAction() + 328
24 clang     0x000000000da4ad8f cir::CIRGenAction::ExecuteAction() + 73
25 clang     0x000000000cd337ff clang::FrontendAction::Execute() + 139
26 clang     0x000000000cc526b7 clang::CompilerInstance::ExecuteAction(clang::FrontendAction&) + 1019
27 clang     0x000000000cee12dd clang::ExecuteCompilerInvocation(clang::CompilerInstance*) + 1322
28 clang     0x00000000099a75fd cc1_main(llvm::ArrayRef<char const*>, char const*, void*) + 1791
29 clang     0x0000000009999715
30 clang     0x00000000099998f9
31 clang     0x000000000999ae97
32 clang     0x000000000caa073d
33 clang     0x000000000ca9f4ac
34 clang     0x000000000ca9f8d1
35 clang     0x000000000a3e4d10
36 clang     0x000000000b700ca6 llvm::CrashRecoveryContext::RunSafely(llvm::function_ref<void ()>) + 212
37 clang     0x000000000ca9f6a0 clang::driver::CC1Command::Execute(llvm::ArrayRef<std::optional<llvm::StringRef>>, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>*, bool*) const + 490
38 clang     0x000000000ca3d77d clang::driver::Compilation::ExecuteCommand(clang::driver::Command const&, clang::driver::Command const*&, bool) const + 893
39 clang     0x000000000ca3daa9 clang::driver::Compilation::ExecuteJobs(clang::driver::JobList const&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&, bool) const + 145
40 clang     0x000000000ca5050a clang::driver::Driver::ExecuteCompilation(clang::driver::Compilation&, llvm::SmallVectorImpl<std::pair<int, clang::driver::Command const*>>&) + 638
41 clang     0x000000000999aa53 clang_main(int, char**, llvm::ToolContext const&) + 4440
42 clang     0x00000000099d020b main + 112
43 libc.so.6 0x00007feaa2839088
44 libc.so.6 0x00007feaa283914b __libc_start_main + 139
45 clang     0x0000000009998b65 _start + 37
clang: error: clang frontend command failed with exit code 134 (use -v to see invocation)
clang version 20.0.0git (git@github.com:llvm/clangir.git d7de21ff0bfc89f47dbf03a469008fb2a4730e02)
Target: x86_64-unknown-linux-gnu
Thread model: posix
InstalledDir: /home/ladisgin/git_proj/clangir/build/bin
Build config: +unoptimized, +assertions
clang: error: unable to execute command: Aborted (core dumped)
clang: note: diagnostic msg: Error generating preprocessed source(s).
