!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc47 = loc("CWE563_Unused_Variable__unused_value_int_07.c":144:10)
#loc48 = loc("CWE563_Unused_Variable__unused_value_int_07.c":144:14)
#loc49 = loc("CWE563_Unused_Variable__unused_value_int_07.c":144:20)
#loc50 = loc("CWE563_Unused_Variable__unused_value_int_07.c":144:32)
#loc174 = loc(fused[#loc47, #loc48])
#loc175 = loc(fused[#loc49, #loc50])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE563_Unused_Variable/CWE563_Unused_Variable__unused_value_int_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc153)
  cir.func private @printIntLine(!s32i) loc(#loc154)
  cir.func no_proto @CWE563_Unused_Variable__unused_value_int_07_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc156)
    cir.br ^bb1 loc(#loc157)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc153)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc11)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc12)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc158)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc159)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<5> : !s32i loc(#loc14)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    cir.br ^bb3 loc(#loc10)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc10)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc161)
  ^bb5:  // pred: ^bb4
    %6 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc153)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc18)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc19)
    %9 = cir.cmp(eq, %7, %8) : !s32i, !cir.bool loc(#loc162)
    cir.brcond %9 ^bb6, ^bb7 loc(#loc163)
  ^bb6:  // pred: ^bb5
    %10 = cir.const #cir.int<10> : !s32i loc(#loc21)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc24)
    cir.br ^bb7 loc(#loc17)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc17)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc6)
  } loc(#loc155)
  cir.func no_proto @CWE563_Unused_Variable__unused_value_int_07_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc168)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc169)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    cir.return loc(#loc26)
  } loc(#loc165)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc170)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc171)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc44)
  cir.func @main(%arg0: !s32i loc(fused[#loc47, #loc48]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc49, #loc50])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc174)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc175)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc46)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc51)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc51)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc52)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc53)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc53)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc54)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc41)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %8 = cir.get_global @CWE563_Unused_Variable__unused_value_int_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc176)
    cir.call @CWE563_Unused_Variable__unused_value_int_07_good() : () -> () loc(#loc56)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc42)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc43)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %13 = cir.get_global @CWE563_Unused_Variable__unused_value_int_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call @CWE563_Unused_Variable__unused_value_int_07_bad() : () -> () loc(#loc60)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc44)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc63)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    cir.return %17 : !s32i loc(#loc178)
  } loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc65)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc180)
    cir.br ^bb1 loc(#loc181)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc153)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc73)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc182)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc183)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<5> : !s32i loc(#loc75)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    cir.br ^bb3 loc(#loc71)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc71)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc185)
  ^bb5:  // pred: ^bb4
    %6 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc153)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc80)
    %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc186)
    cir.brcond %9 ^bb6, ^bb7 loc(#loc187)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc65)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    cir.br ^bb8 loc(#loc82)
  ^bb7:  // pred: ^bb5
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc86)
    cir.br ^bb8 loc(#loc78)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc78)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc67)
  } loc(#loc179)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc189)
    cir.br ^bb1 loc(#loc190)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc153)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc94)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc191)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc192)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<5> : !s32i loc(#loc96)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.br ^bb3 loc(#loc92)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc92)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc194)
  ^bb5:  // pred: ^bb4
    %6 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc153)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc101)
    %9 = cir.cmp(eq, %7, %8) : !s32i, !cir.bool loc(#loc195)
    cir.brcond %9 ^bb6, ^bb7 loc(#loc196)
  ^bb6:  // pred: ^bb5
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc104)
    cir.br ^bb7 loc(#loc99)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc99)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc88)
  } loc(#loc188)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc198)
    cir.br ^bb1 loc(#loc199)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc153)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc112)
    %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc200)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc201)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc116)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    cir.br ^bb4 loc(#loc114)
  ^bb3:  // pred: ^bb1
    %7 = cir.const #cir.int<5> : !s32i loc(#loc118)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc121)
    cir.br ^bb4 loc(#loc110)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc110)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc203)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc153)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc125)
    %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc204)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc205)
  ^bb7:  // pred: ^bb6
    %13 = cir.const #cir.int<10> : !s32i loc(#loc127)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc130)
    cir.br ^bb8 loc(#loc123)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc123)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc106)
  } loc(#loc197)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc208)
    cir.br ^bb1 loc(#loc209)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc153)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc138)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc210)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc211)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<5> : !s32i loc(#loc140)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc143)
    cir.br ^bb3 loc(#loc136)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc136)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc213)
  ^bb5:  // pred: ^bb4
    %7 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc153)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc147)
    %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc214)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc215)
  ^bb6:  // pred: ^bb5
    %11 = cir.const #cir.int<10> : !s32i loc(#loc149)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc152)
    cir.br ^bb7 loc(#loc145)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc145)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc132)
  } loc(#loc207)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE563_Unused_Variable/CWE563_Unused_Variable__unused_value_int_07.c":0:0)
#loc1 = loc("CWE563_Unused_Variable__unused_value_int_07.c":25:1)
#loc2 = loc("CWE563_Unused_Variable__unused_value_int_07.c":25:25)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE563_Unused_Variable__unused_value_int_07.c":29:1)
#loc6 = loc("CWE563_Unused_Variable__unused_value_int_07.c":43:1)
#loc7 = loc("CWE563_Unused_Variable__unused_value_int_07.c":31:5)
#loc8 = loc("CWE563_Unused_Variable__unused_value_int_07.c":31:9)
#loc9 = loc("CWE563_Unused_Variable__unused_value_int_07.c":32:5)
#loc10 = loc("CWE563_Unused_Variable__unused_value_int_07.c":36:5)
#loc11 = loc("CWE563_Unused_Variable__unused_value_int_07.c":32:8)
#loc12 = loc("CWE563_Unused_Variable__unused_value_int_07.c":32:20)
#loc13 = loc("CWE563_Unused_Variable__unused_value_int_07.c":33:5)
#loc14 = loc("CWE563_Unused_Variable__unused_value_int_07.c":35:16)
#loc15 = loc("CWE563_Unused_Variable__unused_value_int_07.c":35:9)
#loc16 = loc("CWE563_Unused_Variable__unused_value_int_07.c":37:5)
#loc17 = loc("CWE563_Unused_Variable__unused_value_int_07.c":42:5)
#loc18 = loc("CWE563_Unused_Variable__unused_value_int_07.c":37:8)
#loc19 = loc("CWE563_Unused_Variable__unused_value_int_07.c":37:20)
#loc20 = loc("CWE563_Unused_Variable__unused_value_int_07.c":38:5)
#loc21 = loc("CWE563_Unused_Variable__unused_value_int_07.c":40:16)
#loc22 = loc("CWE563_Unused_Variable__unused_value_int_07.c":40:9)
#loc23 = loc("CWE563_Unused_Variable__unused_value_int_07.c":41:22)
#loc24 = loc("CWE563_Unused_Variable__unused_value_int_07.c":41:9)
#loc25 = loc("CWE563_Unused_Variable__unused_value_int_07.c":127:1)
#loc26 = loc("CWE563_Unused_Variable__unused_value_int_07.c":133:1)
#loc27 = loc("CWE563_Unused_Variable__unused_value_int_07.c":129:5)
#loc28 = loc("CWE563_Unused_Variable__unused_value_int_07.c":129:14)
#loc29 = loc("CWE563_Unused_Variable__unused_value_int_07.c":130:5)
#loc30 = loc("CWE563_Unused_Variable__unused_value_int_07.c":130:14)
#loc31 = loc("CWE563_Unused_Variable__unused_value_int_07.c":131:5)
#loc32 = loc("CWE563_Unused_Variable__unused_value_int_07.c":131:14)
#loc33 = loc("CWE563_Unused_Variable__unused_value_int_07.c":132:5)
#loc34 = loc("CWE563_Unused_Variable__unused_value_int_07.c":132:14)
#loc35 = loc("/usr/include/stdlib.h":575:1)
#loc36 = loc("/usr/include/stdlib.h":575:41)
#loc37 = loc("/usr/include/time.h":76:1)
#loc38 = loc("/usr/include/time.h":76:38)
#loc39 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc40 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc41 = loc("CWE563_Unused_Variable__unused_value_int_07.c":149:15)
#loc42 = loc("CWE563_Unused_Variable__unused_value_int_07.c":151:15)
#loc43 = loc("CWE563_Unused_Variable__unused_value_int_07.c":154:15)
#loc44 = loc("CWE563_Unused_Variable__unused_value_int_07.c":156:15)
#loc45 = loc("CWE563_Unused_Variable__unused_value_int_07.c":144:1)
#loc46 = loc("CWE563_Unused_Variable__unused_value_int_07.c":159:1)
#loc51 = loc("CWE563_Unused_Variable__unused_value_int_07.c":145:1)
#loc52 = loc("CWE563_Unused_Variable__unused_value_int_07.c":147:27)
#loc53 = loc("CWE563_Unused_Variable__unused_value_int_07.c":147:22)
#loc54 = loc("CWE563_Unused_Variable__unused_value_int_07.c":147:5)
#loc55 = loc("CWE563_Unused_Variable__unused_value_int_07.c":149:5)
#loc56 = loc("CWE563_Unused_Variable__unused_value_int_07.c":150:5)
#loc57 = loc("CWE563_Unused_Variable__unused_value_int_07.c":150:54)
#loc58 = loc("CWE563_Unused_Variable__unused_value_int_07.c":151:5)
#loc59 = loc("CWE563_Unused_Variable__unused_value_int_07.c":154:5)
#loc60 = loc("CWE563_Unused_Variable__unused_value_int_07.c":155:5)
#loc61 = loc("CWE563_Unused_Variable__unused_value_int_07.c":155:53)
#loc62 = loc("CWE563_Unused_Variable__unused_value_int_07.c":156:5)
#loc63 = loc("CWE563_Unused_Variable__unused_value_int_07.c":158:12)
#loc64 = loc("CWE563_Unused_Variable__unused_value_int_07.c":158:5)
#loc65 = loc("CWE563_Unused_Variable__unused_value_int_07.c":61:19)
#loc66 = loc("CWE563_Unused_Variable__unused_value_int_07.c":50:1)
#loc67 = loc("CWE563_Unused_Variable__unused_value_int_07.c":68:1)
#loc68 = loc("CWE563_Unused_Variable__unused_value_int_07.c":52:5)
#loc69 = loc("CWE563_Unused_Variable__unused_value_int_07.c":52:9)
#loc70 = loc("CWE563_Unused_Variable__unused_value_int_07.c":53:5)
#loc71 = loc("CWE563_Unused_Variable__unused_value_int_07.c":57:5)
#loc72 = loc("CWE563_Unused_Variable__unused_value_int_07.c":53:8)
#loc73 = loc("CWE563_Unused_Variable__unused_value_int_07.c":53:20)
#loc74 = loc("CWE563_Unused_Variable__unused_value_int_07.c":54:5)
#loc75 = loc("CWE563_Unused_Variable__unused_value_int_07.c":56:16)
#loc76 = loc("CWE563_Unused_Variable__unused_value_int_07.c":56:9)
#loc77 = loc("CWE563_Unused_Variable__unused_value_int_07.c":58:5)
#loc78 = loc("CWE563_Unused_Variable__unused_value_int_07.c":67:5)
#loc79 = loc("CWE563_Unused_Variable__unused_value_int_07.c":58:8)
#loc80 = loc("CWE563_Unused_Variable__unused_value_int_07.c":58:20)
#loc81 = loc("CWE563_Unused_Variable__unused_value_int_07.c":59:5)
#loc82 = loc("CWE563_Unused_Variable__unused_value_int_07.c":62:5)
#loc83 = loc("CWE563_Unused_Variable__unused_value_int_07.c":64:5)
#loc84 = loc("CWE563_Unused_Variable__unused_value_int_07.c":61:9)
#loc85 = loc("CWE563_Unused_Variable__unused_value_int_07.c":66:22)
#loc86 = loc("CWE563_Unused_Variable__unused_value_int_07.c":66:9)
#loc87 = loc("CWE563_Unused_Variable__unused_value_int_07.c":71:1)
#loc88 = loc("CWE563_Unused_Variable__unused_value_int_07.c":84:1)
#loc89 = loc("CWE563_Unused_Variable__unused_value_int_07.c":73:5)
#loc90 = loc("CWE563_Unused_Variable__unused_value_int_07.c":73:9)
#loc91 = loc("CWE563_Unused_Variable__unused_value_int_07.c":74:5)
#loc92 = loc("CWE563_Unused_Variable__unused_value_int_07.c":78:5)
#loc93 = loc("CWE563_Unused_Variable__unused_value_int_07.c":74:8)
#loc94 = loc("CWE563_Unused_Variable__unused_value_int_07.c":74:20)
#loc95 = loc("CWE563_Unused_Variable__unused_value_int_07.c":75:5)
#loc96 = loc("CWE563_Unused_Variable__unused_value_int_07.c":77:16)
#loc97 = loc("CWE563_Unused_Variable__unused_value_int_07.c":77:9)
#loc98 = loc("CWE563_Unused_Variable__unused_value_int_07.c":79:5)
#loc99 = loc("CWE563_Unused_Variable__unused_value_int_07.c":83:5)
#loc100 = loc("CWE563_Unused_Variable__unused_value_int_07.c":79:8)
#loc101 = loc("CWE563_Unused_Variable__unused_value_int_07.c":79:20)
#loc102 = loc("CWE563_Unused_Variable__unused_value_int_07.c":80:5)
#loc103 = loc("CWE563_Unused_Variable__unused_value_int_07.c":82:22)
#loc104 = loc("CWE563_Unused_Variable__unused_value_int_07.c":82:9)
#loc105 = loc("CWE563_Unused_Variable__unused_value_int_07.c":87:1)
#loc106 = loc("CWE563_Unused_Variable__unused_value_int_07.c":107:1)
#loc107 = loc("CWE563_Unused_Variable__unused_value_int_07.c":89:5)
#loc108 = loc("CWE563_Unused_Variable__unused_value_int_07.c":89:9)
#loc109 = loc("CWE563_Unused_Variable__unused_value_int_07.c":90:5)
#loc110 = loc("CWE563_Unused_Variable__unused_value_int_07.c":100:5)
#loc111 = loc("CWE563_Unused_Variable__unused_value_int_07.c":90:8)
#loc112 = loc("CWE563_Unused_Variable__unused_value_int_07.c":90:20)
#loc113 = loc("CWE563_Unused_Variable__unused_value_int_07.c":91:5)
#loc114 = loc("CWE563_Unused_Variable__unused_value_int_07.c":94:5)
#loc115 = loc("CWE563_Unused_Variable__unused_value_int_07.c":96:5)
#loc116 = loc("CWE563_Unused_Variable__unused_value_int_07.c":93:19)
#loc117 = loc("CWE563_Unused_Variable__unused_value_int_07.c":93:9)
#loc118 = loc("CWE563_Unused_Variable__unused_value_int_07.c":98:16)
#loc119 = loc("CWE563_Unused_Variable__unused_value_int_07.c":98:9)
#loc120 = loc("CWE563_Unused_Variable__unused_value_int_07.c":99:22)
#loc121 = loc("CWE563_Unused_Variable__unused_value_int_07.c":99:9)
#loc122 = loc("CWE563_Unused_Variable__unused_value_int_07.c":101:5)
#loc123 = loc("CWE563_Unused_Variable__unused_value_int_07.c":106:5)
#loc124 = loc("CWE563_Unused_Variable__unused_value_int_07.c":101:8)
#loc125 = loc("CWE563_Unused_Variable__unused_value_int_07.c":101:20)
#loc126 = loc("CWE563_Unused_Variable__unused_value_int_07.c":102:5)
#loc127 = loc("CWE563_Unused_Variable__unused_value_int_07.c":104:16)
#loc128 = loc("CWE563_Unused_Variable__unused_value_int_07.c":104:9)
#loc129 = loc("CWE563_Unused_Variable__unused_value_int_07.c":105:22)
#loc130 = loc("CWE563_Unused_Variable__unused_value_int_07.c":105:9)
#loc131 = loc("CWE563_Unused_Variable__unused_value_int_07.c":110:1)
#loc132 = loc("CWE563_Unused_Variable__unused_value_int_07.c":125:1)
#loc133 = loc("CWE563_Unused_Variable__unused_value_int_07.c":112:5)
#loc134 = loc("CWE563_Unused_Variable__unused_value_int_07.c":112:9)
#loc135 = loc("CWE563_Unused_Variable__unused_value_int_07.c":113:5)
#loc136 = loc("CWE563_Unused_Variable__unused_value_int_07.c":118:5)
#loc137 = loc("CWE563_Unused_Variable__unused_value_int_07.c":113:8)
#loc138 = loc("CWE563_Unused_Variable__unused_value_int_07.c":113:20)
#loc139 = loc("CWE563_Unused_Variable__unused_value_int_07.c":114:5)
#loc140 = loc("CWE563_Unused_Variable__unused_value_int_07.c":116:16)
#loc141 = loc("CWE563_Unused_Variable__unused_value_int_07.c":116:9)
#loc142 = loc("CWE563_Unused_Variable__unused_value_int_07.c":117:22)
#loc143 = loc("CWE563_Unused_Variable__unused_value_int_07.c":117:9)
#loc144 = loc("CWE563_Unused_Variable__unused_value_int_07.c":119:5)
#loc145 = loc("CWE563_Unused_Variable__unused_value_int_07.c":124:5)
#loc146 = loc("CWE563_Unused_Variable__unused_value_int_07.c":119:8)
#loc147 = loc("CWE563_Unused_Variable__unused_value_int_07.c":119:20)
#loc148 = loc("CWE563_Unused_Variable__unused_value_int_07.c":120:5)
#loc149 = loc("CWE563_Unused_Variable__unused_value_int_07.c":122:16)
#loc150 = loc("CWE563_Unused_Variable__unused_value_int_07.c":122:9)
#loc151 = loc("CWE563_Unused_Variable__unused_value_int_07.c":123:22)
#loc152 = loc("CWE563_Unused_Variable__unused_value_int_07.c":123:9)
#loc153 = loc(fused[#loc1, #loc2])
#loc154 = loc(fused[#loc3, #loc4])
#loc155 = loc(fused[#loc5, #loc6])
#loc156 = loc(fused[#loc7, #loc8])
#loc157 = loc(fused[#loc9, #loc10])
#loc158 = loc(fused[#loc11, #loc12])
#loc159 = loc(fused[#loc13, #loc10])
#loc160 = loc(fused[#loc15, #loc14])
#loc161 = loc(fused[#loc16, #loc17])
#loc162 = loc(fused[#loc18, #loc19])
#loc163 = loc(fused[#loc20, #loc17])
#loc164 = loc(fused[#loc22, #loc21])
#loc165 = loc(fused[#loc25, #loc26])
#loc166 = loc(fused[#loc27, #loc28])
#loc167 = loc(fused[#loc29, #loc30])
#loc168 = loc(fused[#loc31, #loc32])
#loc169 = loc(fused[#loc33, #loc34])
#loc170 = loc(fused[#loc35, #loc36])
#loc171 = loc(fused[#loc37, #loc38])
#loc172 = loc(fused[#loc39, #loc40])
#loc173 = loc(fused[#loc45, #loc46])
#loc176 = loc(fused[#loc56, #loc57])
#loc177 = loc(fused[#loc60, #loc61])
#loc178 = loc(fused[#loc64, #loc63])
#loc179 = loc(fused[#loc66, #loc67])
#loc180 = loc(fused[#loc68, #loc69])
#loc181 = loc(fused[#loc70, #loc71])
#loc182 = loc(fused[#loc72, #loc73])
#loc183 = loc(fused[#loc74, #loc71])
#loc184 = loc(fused[#loc76, #loc75])
#loc185 = loc(fused[#loc77, #loc78])
#loc186 = loc(fused[#loc79, #loc80])
#loc187 = loc(fused[#loc81, #loc82, #loc83, #loc78])
#loc188 = loc(fused[#loc87, #loc88])
#loc189 = loc(fused[#loc89, #loc90])
#loc190 = loc(fused[#loc91, #loc92])
#loc191 = loc(fused[#loc93, #loc94])
#loc192 = loc(fused[#loc95, #loc92])
#loc193 = loc(fused[#loc97, #loc96])
#loc194 = loc(fused[#loc98, #loc99])
#loc195 = loc(fused[#loc100, #loc101])
#loc196 = loc(fused[#loc102, #loc99])
#loc197 = loc(fused[#loc105, #loc106])
#loc198 = loc(fused[#loc107, #loc108])
#loc199 = loc(fused[#loc109, #loc110])
#loc200 = loc(fused[#loc111, #loc112])
#loc201 = loc(fused[#loc113, #loc114, #loc115, #loc110])
#loc202 = loc(fused[#loc119, #loc118])
#loc203 = loc(fused[#loc122, #loc123])
#loc204 = loc(fused[#loc124, #loc125])
#loc205 = loc(fused[#loc126, #loc123])
#loc206 = loc(fused[#loc128, #loc127])
#loc207 = loc(fused[#loc131, #loc132])
#loc208 = loc(fused[#loc133, #loc134])
#loc209 = loc(fused[#loc135, #loc136])
#loc210 = loc(fused[#loc137, #loc138])
#loc211 = loc(fused[#loc139, #loc136])
#loc212 = loc(fused[#loc141, #loc140])
#loc213 = loc(fused[#loc144, #loc145])
#loc214 = loc(fused[#loc146, #loc147])
#loc215 = loc(fused[#loc148, #loc145])
#loc216 = loc(fused[#loc150, #loc149])
