!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc145 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":114:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_32L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc270)
  cir.global "private" constant cir_private @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_323badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc271)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc272)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc273)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc274)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc275)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc276)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc277)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc278)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc279)
  cir.func private @close(!s32i) -> !s32i loc(#loc280)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc281)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc283)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc284)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc285)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc286)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc287)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc288)
    %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc289)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc290)
    %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc291)
    %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc292)
    %10 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc293)
    %11 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc294)
    %12 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc271)
    cir.store %9, %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc293)
    cir.store %9, %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc294)
    %13 = cir.get_global @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_323badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc271)
    cir.copy %13 to %12 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc271)
    %14 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc51)
    cir.store %14, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc295)
    cir.br ^bb1 loc(#loc296)
  ^bb1:  // pred: ^bb0
    %15 = cir.load deref %10 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc28)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    cir.store %16, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc283)
    cir.br ^bb2 loc(#loc297)
  ^bb2:  // pred: ^bb1
    %17 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc36)
    cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc38)
    cir.store %20, %5 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc58)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc58)
    cir.store %23, %6 : !u64i, !cir.ptr<!u64i> loc(#loc289)
    cir.br ^bb3 loc(#loc298)
  ^bb3:  // pred: ^bb2
    cir.br ^bb5 loc(#loc298)
  ^bb4:  // pred: ^bb41
    %24 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc62)
    cir.brcond %25 ^bb5, ^bb42 loc(#loc62)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    %26 = cir.const #cir.int<2> : !s32i loc(#loc63)
    %27 = cir.const #cir.int<1> : !u32i loc(#loc64)
    %28 = cir.cast(integral, %27 : !u32i), !s32i loc(#loc64)
    %29 = cir.const #cir.int<6> : !u32i loc(#loc65)
    %30 = cir.cast(integral, %29 : !u32i), !s32i loc(#loc65)
    %31 = cir.call @socket(%26, %28, %30) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc66)
    cir.store %31, %4 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    cir.br ^bb6 loc(#loc300)
  ^bb6:  // pred: ^bb5
    %32 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc72)
    %35 = cir.cmp(eq, %32, %34) : !s32i, !cir.bool loc(#loc301)
    cir.brcond %35 ^bb7, ^bb8 loc(#loc302)
  ^bb7:  // pred: ^bb6
    cir.br ^bb42 loc(#loc74)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc70)
  ^bb9:  // pred: ^bb8
    %36 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc303)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc304)
    cir.libc.memset %38 bytes from %36 set to %37 : !cir.ptr<!void>, !s32i, !u64i loc(#loc305)
    %39 = cir.const #cir.int<2> : !s32i loc(#loc82)
    %40 = cir.cast(integral, %39 : !s32i), !u16i loc(#loc82)
    %41 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
    cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc306)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %43 = cir.cast(integral, %42 : !s32i), !u32i loc(#loc85)
    %44 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc86)
    %45 = cir.get_member %44[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc87)
    cir.store %43, %45 : !u32i, !cir.ptr<!u32i> loc(#loc307)
    %46 = cir.const #cir.int<27015> : !s32i loc(#loc89)
    %47 = cir.cast(integral, %46 : !s32i), !u16i loc(#loc89)
    %48 = cir.call @htons(%47) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc90)
    %49 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc91)
    cir.store %48, %49 : !u16i, !cir.ptr<!u16i> loc(#loc308)
    cir.br ^bb10 loc(#loc309)
  ^bb10:  // pred: ^bb9
    %50 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %51 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc310)
    %52 = cir.const #cir.int<16> : !u64i loc(#loc311)
    %53 = cir.cast(integral, %52 : !u64i), !u32i loc(#loc311)
    %54 = cir.call @bind(%50, %51, %53) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc101)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc102)
    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc312)
    cir.brcond %57 ^bb11, ^bb12 loc(#loc313)
  ^bb11:  // pred: ^bb10
    cir.br ^bb42 loc(#loc104)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc95)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc314)
  ^bb14:  // pred: ^bb13
    %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %59 = cir.const #cir.int<5> : !s32i loc(#loc108)
    %60 = cir.call @listen(%58, %59) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc109)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc110)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc315)
    cir.brcond %63 ^bb15, ^bb16 loc(#loc316)
  ^bb15:  // pred: ^bb14
    cir.br ^bb42 loc(#loc112)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc106)
  ^bb17:  // pred: ^bb16
    %64 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %65 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc114)
    %66 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc115)
    %67 = cir.call @accept(%64, %65, %66) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc116)
    cir.store %67, %5 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    cir.br ^bb18 loc(#loc318)
  ^bb18:  // pred: ^bb17
    %68 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %69 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %70 = cir.unary(minus, %69) : !s32i, !s32i loc(#loc122)
    %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc319)
    cir.brcond %71 ^bb19, ^bb20 loc(#loc320)
  ^bb19:  // pred: ^bb18
    cir.br ^bb42 loc(#loc124)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc120)
  ^bb21:  // pred: ^bb20
    %72 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %73 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %74 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc127)
    %75 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %74 : !u64i), !cir.ptr<!s8i> loc(#loc128)
    %76 = cir.cast(bitcast, %75 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc321)
    %77 = cir.const #cir.int<1> : !u64i loc(#loc322)
    %78 = cir.const #cir.int<4096> : !s32i loc(#loc133)
    %79 = cir.cast(integral, %78 : !s32i), !u64i loc(#loc133)
    %80 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc134)
    %81 = cir.binop(sub, %79, %80) : !u64i loc(#loc323)
    %82 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %83 = cir.cast(integral, %82 : !s32i), !u64i loc(#loc135)
    %84 = cir.binop(sub, %81, %83) : !u64i loc(#loc324)
    %85 = cir.binop(mul, %77, %84) : !u64i loc(#loc325)
    %86 = cir.const #cir.int<0> : !s32i loc(#loc137)
    %87 = cir.call @recv(%72, %76, %85, %86) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc138)
    %88 = cir.cast(integral, %87 : !s64i), !s32i loc(#loc138)
    cir.store %88, %1 : !s32i, !cir.ptr<!s32i> loc(#loc326)
    cir.br ^bb22 loc(#loc327)
  ^bb22:  // pred: ^bb21
    %89 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %90 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %91 = cir.unary(minus, %90) : !s32i, !s32i loc(#loc144)
    %92 = cir.cmp(eq, %89, %91) : !s32i, !cir.bool loc(#loc328)
    cir.brcond %92 ^bb23, ^bb24 loc(#loc145)
  ^bb23:  // pred: ^bb22
    %93 = cir.const #true loc(#loc145)
    cir.br ^bb29(%93 : !cir.bool) loc(#loc145)
  ^bb24:  // pred: ^bb22
    %94 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %95 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %96 = cir.cmp(eq, %94, %95) : !s32i, !cir.bool loc(#loc329)
    cir.brcond %96 ^bb25, ^bb26 loc(#loc145)
  ^bb25:  // pred: ^bb24
    %97 = cir.const #true loc(#loc145)
    cir.br ^bb27(%97 : !cir.bool) loc(#loc145)
  ^bb26:  // pred: ^bb24
    %98 = cir.const #false loc(#loc145)
    cir.br ^bb27(%98 : !cir.bool) loc(#loc145)
  ^bb27(%99: !cir.bool loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":114:48)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc145)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29(%99 : !cir.bool) loc(#loc145)
  ^bb29(%100: !cir.bool loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":114:48)):  // 2 preds: ^bb23, ^bb28
    cir.br ^bb30 loc(#loc145)
  ^bb30:  // pred: ^bb29
    cir.brcond %100 ^bb31, ^bb32 loc(#loc330)
  ^bb31:  // pred: ^bb30
    cir.br ^bb42 loc(#loc149)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc142)
  ^bb33:  // pred: ^bb32
    %101 = cir.const #cir.int<0> : !s8i loc(#loc150)
    %102 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
    %103 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc152)
    %104 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %105 = cir.cast(integral, %104 : !s32i), !u64i loc(#loc153)
    %106 = cir.const #cir.int<1> : !u64i loc(#loc331)
    %107 = cir.binop(div, %105, %106) : !u64i loc(#loc332)
    %108 = cir.binop(add, %103, %107) : !u64i loc(#loc333)
    %109 = cir.ptr_stride(%102 : !cir.ptr<!s8i>, %108 : !u64i), !cir.ptr<!s8i> loc(#loc156)
    cir.store %101, %109 : !s8i, !cir.ptr<!s8i> loc(#loc334)
    %110 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    %111 = cir.const #cir.int<13> : !s8i loc(#loc158)
    %112 = cir.cast(integral, %111 : !s8i), !s32i loc(#loc158)
    %113 = cir.call @strchr(%110, %112) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc159)
    cir.store %113, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc335)
    cir.br ^bb34 loc(#loc336)
  ^bb34:  // pred: ^bb33
    %114 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
    %115 = cir.cast(ptr_to_bool, %114 : !cir.ptr<!s8i>), !cir.bool loc(#loc164)
    cir.brcond %115 ^bb35, ^bb36 loc(#loc337)
  ^bb35:  // pred: ^bb34
    %116 = cir.const #cir.int<0> : !s8i loc(#loc166)
    %117 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
    cir.store %116, %117 : !s8i, !cir.ptr<!s8i> loc(#loc338)
    cir.br ^bb36 loc(#loc163)
  ^bb36:  // 2 preds: ^bb34, ^bb35
    cir.br ^bb37 loc(#loc163)
  ^bb37:  // pred: ^bb36
    %118 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
    %119 = cir.const #cir.int<10> : !s8i loc(#loc170)
    %120 = cir.cast(integral, %119 : !s8i), !s32i loc(#loc170)
    %121 = cir.call @strchr(%118, %120) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc171)
    cir.store %121, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc339)
    cir.br ^bb38 loc(#loc340)
  ^bb38:  // pred: ^bb37
    %122 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
    %123 = cir.cast(ptr_to_bool, %122 : !cir.ptr<!s8i>), !cir.bool loc(#loc176)
    cir.brcond %123 ^bb39, ^bb40 loc(#loc341)
  ^bb39:  // pred: ^bb38
    %124 = cir.const #cir.int<0> : !s8i loc(#loc178)
    %125 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
    cir.store %124, %125 : !s8i, !cir.ptr<!s8i> loc(#loc342)
    cir.br ^bb40 loc(#loc175)
  ^bb40:  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc175)
  ^bb41:  // pred: ^bb40
    cir.br ^bb4 loc(#loc61)
  ^bb42:  // 6 preds: ^bb4, ^bb7, ^bb11, ^bb15, ^bb19, ^bb31
    cir.br ^bb43 loc(#loc61)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc343)
  ^bb44:  // pred: ^bb43
    %126 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    %127 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %128 = cir.unary(minus, %127) : !s32i, !s32i loc(#loc184)
    %129 = cir.cmp(ne, %126, %128) : !s32i, !cir.bool loc(#loc344)
    cir.brcond %129 ^bb45, ^bb46 loc(#loc345)
  ^bb45:  // pred: ^bb44
    %130 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    %131 = cir.call @close(%130) : (!s32i) -> !s32i loc(#loc187)
    cir.br ^bb46 loc(#loc182)
  ^bb46:  // 2 preds: ^bb44, ^bb45
    cir.br ^bb47 loc(#loc182)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc346)
  ^bb48:  // pred: ^bb47
    %132 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    %133 = cir.const #cir.int<1> : !s32i loc(#loc191)
    %134 = cir.unary(minus, %133) : !s32i, !s32i loc(#loc191)
    %135 = cir.cmp(ne, %132, %134) : !s32i, !cir.bool loc(#loc347)
    cir.brcond %135 ^bb49, ^bb50 loc(#loc348)
  ^bb49:  // pred: ^bb48
    %136 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    %137 = cir.call @close(%136) : (!s32i) -> !s32i loc(#loc194)
    cir.br ^bb50 loc(#loc189)
  ^bb50:  // 2 preds: ^bb48, ^bb49
    cir.br ^bb51 loc(#loc189)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc57)
  ^bb52:  // pred: ^bb51
    %138 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
    %139 = cir.load deref %10 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
    cir.store %138, %139 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc349)
    cir.br ^bb53 loc(#loc54)
  ^bb53:  // pred: ^bb52
    cir.br ^bb54 loc(#loc350)
  ^bb54:  // pred: ^bb53
    %140 = cir.load deref %11 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc42)
    %141 = cir.load %140 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc200)
    cir.store %141, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc290)
    cir.br ^bb55 loc(#loc351)
  ^bb55:  // pred: ^bb54
    %142 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
    %143 = cir.const #cir.int<2> : !s32i loc(#loc204)
    %144 = cir.const #cir.int<64> : !s32i loc(#loc205)
    %145 = cir.binop(or, %143, %144) : !s32i loc(#loc352)
    %146 = cir.const #cir.int<256> : !s32i loc(#loc206)
    %147 = cir.const #cir.int<128> : !s32i loc(#loc207)
    %148 = cir.binop(or, %146, %147) : !s32i loc(#loc353)
    %149 = cir.call @open(%142, %145, %148) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc208)
    cir.store %149, %8 : !s32i, !cir.ptr<!s32i> loc(#loc354)
    cir.br ^bb56 loc(#loc355)
  ^bb56:  // pred: ^bb55
    %150 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc213)
    %151 = cir.const #cir.int<1> : !s32i loc(#loc214)
    %152 = cir.unary(minus, %151) : !s32i, !s32i loc(#loc215)
    %153 = cir.cmp(ne, %150, %152) : !s32i, !cir.bool loc(#loc356)
    cir.brcond %153 ^bb57, ^bb58 loc(#loc357)
  ^bb57:  // pred: ^bb56
    %154 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    %155 = cir.call @close(%154) : (!s32i) -> !s32i loc(#loc218)
    cir.br ^bb58 loc(#loc212)
  ^bb58:  // 2 preds: ^bb56, ^bb57
    cir.br ^bb59 loc(#loc212)
  ^bb59:  // pred: ^bb58
    cir.br ^bb60 loc(#loc202)
  ^bb60:  // pred: ^bb59
    cir.br ^bb61 loc(#loc199)
  ^bb61:  // pred: ^bb60
    cir.return loc(#loc26)
  } loc(#loc282)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc358)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc221)
  cir.func internal private @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc360)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc361)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc362)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc363)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc364)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc365)
    %6 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc270)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc364)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc365)
    %7 = cir.get_global @__const._ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_32L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc270)
    cir.copy %7 to %6 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc270)
    %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc236)
    cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc366)
    cir.br ^bb1 loc(#loc367)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc225)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc240)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc360)
    %11 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc241)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc242)
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc221)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc221)
    %15 = cir.call @strcat(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc241)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc243)
    %17 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc244)
    cir.store %16, %17 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc368)
    cir.br ^bb2 loc(#loc239)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc369)
  ^bb3:  // pred: ^bb2
    %18 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc227)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc248)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc361)
    cir.br ^bb4 loc(#loc370)
  ^bb4:  // pred: ^bb3
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc251)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc252)
    %22 = cir.const #cir.int<64> : !s32i loc(#loc253)
    %23 = cir.binop(or, %21, %22) : !s32i loc(#loc371)
    %24 = cir.const #cir.int<256> : !s32i loc(#loc254)
    %25 = cir.const #cir.int<128> : !s32i loc(#loc255)
    %26 = cir.binop(or, %24, %25) : !s32i loc(#loc372)
    %27 = cir.call @open(%20, %23, %26) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc256)
    cir.store %27, %2 : !s32i, !cir.ptr<!s32i> loc(#loc373)
    cir.br ^bb5 loc(#loc374)
  ^bb5:  // pred: ^bb4
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc261)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc262)
    %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc263)
    %31 = cir.cmp(ne, %28, %30) : !s32i, !cir.bool loc(#loc375)
    cir.brcond %31 ^bb6, ^bb7 loc(#loc376)
  ^bb6:  // pred: ^bb5
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %33 = cir.call @close(%32) : (!s32i) -> !s32i loc(#loc266)
    cir.br ^bb7 loc(#loc260)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc260)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc250)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc247)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc223)
  } loc(#loc359)
  cir.func @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_32L7goodG2BEv() : () -> () loc(#loc269)
    cir.return loc(#loc268)
  } loc(#loc377)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":174:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":174:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":65:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":65:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/sys/socket.h":102:1)
#loc8 = loc("/usr/include/sys/socket.h":102:62)
#loc9 = loc("/usr/include/netinet/in.h":404:1)
#loc10 = loc("/usr/include/netinet/in.h":405:40)
#loc11 = loc("/usr/include/sys/socket.h":112:1)
#loc12 = loc("/usr/include/sys/socket.h":113:6)
#loc13 = loc("/usr/include/sys/socket.h":296:1)
#loc14 = loc("/usr/include/sys/socket.h":296:39)
#loc15 = loc("/usr/include/sys/socket.h":306:1)
#loc16 = loc("/usr/include/sys/socket.h":307:38)
#loc17 = loc("/usr/include/sys/socket.h":145:1)
#loc18 = loc("/usr/include/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":226:1)
#loc20 = loc("/usr/include/string.h":227:50)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("/usr/include/fcntl.h":209:1)
#loc24 = loc("/usr/include/fcntl.h":209:56)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":60:1)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":162:1)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":68:9)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":68:24)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":74:13)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":74:17)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":75:13)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":75:32)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":76:13)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":76:19)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":77:13)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":77:35)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":78:13)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":78:35)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":79:13)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":79:41)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":151:9)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":151:24)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":153:13)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":153:17)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":62:5)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":62:12)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":63:5)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":63:25)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":64:5)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":64:25)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":66:12)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":66:5)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":67:5)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":149:5)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":68:23)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":69:9)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":147:9)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":79:30)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":79:37)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":80:13)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":132:21)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":132:20)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":90:39)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":90:48)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":90:61)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":90:32)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":90:17)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":90:72)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":91:17)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":94:17)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":91:21)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":91:37)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":92:17)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":93:21)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":95:24)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":95:25)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":95:34)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":95:37)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":95:51)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":95:17)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":95:52)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":96:38)
#loc83 = loc("/usr/include/netinet/in.h":249:5)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":96:17)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":97:43)
#loc86 = loc("/usr/include/netinet/in.h":251:20)
#loc87 = loc("/usr/include/netinet/in.h":33:15)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":97:17)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":98:42)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":98:36)
#loc91 = loc("/usr/include/netinet/in.h":250:15)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":98:17)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":98:50)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":99:17)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":102:17)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":99:26)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":99:58)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":99:59)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":99:68)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":99:82)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":99:21)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":99:88)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":100:17)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":101:21)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":103:17)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":106:17)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":103:28)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":103:42)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":103:21)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":103:61)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":104:17)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":105:21)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":107:39)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":107:53)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":107:59)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":107:32)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":107:17)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":107:63)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":108:17)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":111:17)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":108:21)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":108:37)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":109:17)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":110:21)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:35)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:58)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:65)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:63)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:49)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:72)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:75)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:86)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:91)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:106)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:116)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:117)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:120)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:30)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:17)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":113:121)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":114:17)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":117:17)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":114:21)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":114:35)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":114:51)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":114:65)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":115:17)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":116:21)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":119:61)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":119:17)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":119:22)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":119:32)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":119:45)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":119:56)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":119:57)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":121:34)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":121:40)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":121:27)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":121:17)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":121:44)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":122:17)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":125:17)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":122:21)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":123:17)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":124:32)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":124:22)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":124:21)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":126:34)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":126:40)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":126:27)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":126:17)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":126:44)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":127:17)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":130:17)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":127:21)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":128:17)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":129:32)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":129:22)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":129:21)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":133:13)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":136:13)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":133:17)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":133:33)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":134:13)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":135:30)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":135:17)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":137:13)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":140:13)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":137:17)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":137:33)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":138:13)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":139:30)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":139:17)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":148:21)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":148:10)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":148:9)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":150:5)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":161:5)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":151:23)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":152:9)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":160:9)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":155:29)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":155:35)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":155:42)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":155:51)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":155:59)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":155:24)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":155:13)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":155:67)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":156:13)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":159:13)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":156:17)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":156:30)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":156:29)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":157:13)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":158:23)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":158:17)
#loc219 = loc("/usr/include/string.h":149:1)
#loc220 = loc("/usr/include/string.h":150:14)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":179:22)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":169:1)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":194:1)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":177:9)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":177:24)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":183:9)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":183:24)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":185:13)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":185:17)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":171:5)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":171:12)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":172:5)
#loc233 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":172:25)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":173:5)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":173:25)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":175:12)
#loc237 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":175:5)
#loc238 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":176:5)
#loc239 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":181:5)
#loc240 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":177:23)
#loc241 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":179:9)
#loc242 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":179:16)
#loc243 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":180:21)
#loc244 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":180:10)
#loc245 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":180:9)
#loc246 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":182:5)
#loc247 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":193:5)
#loc248 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":183:23)
#loc249 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":184:9)
#loc250 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":192:9)
#loc251 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":187:29)
#loc252 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":187:35)
#loc253 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":187:42)
#loc254 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":187:51)
#loc255 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":187:59)
#loc256 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":187:24)
#loc257 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":187:13)
#loc258 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":187:67)
#loc259 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":188:13)
#loc260 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":191:13)
#loc261 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":188:17)
#loc262 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":188:30)
#loc263 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":188:29)
#loc264 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":189:13)
#loc265 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":190:23)
#loc266 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":190:17)
#loc267 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":196:1)
#loc268 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":199:1)
#loc269 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_32.cpp":198:5)
#loc270 = loc(fused[#loc1, #loc2])
#loc271 = loc(fused[#loc3, #loc4])
#loc272 = loc(fused[#loc5, #loc6])
#loc273 = loc(fused[#loc7, #loc8])
#loc274 = loc(fused[#loc9, #loc10])
#loc275 = loc(fused[#loc11, #loc12])
#loc276 = loc(fused[#loc13, #loc14])
#loc277 = loc(fused[#loc15, #loc16])
#loc278 = loc(fused[#loc17, #loc18])
#loc279 = loc(fused[#loc19, #loc20])
#loc280 = loc(fused[#loc21, #loc22])
#loc281 = loc(fused[#loc23, #loc24])
#loc282 = loc(fused[#loc25, #loc26])
#loc283 = loc(fused[#loc27, #loc28])
#loc284 = loc(fused[#loc29, #loc30])
#loc285 = loc(fused[#loc31, #loc32])
#loc286 = loc(fused[#loc33, #loc34])
#loc287 = loc(fused[#loc35, #loc36])
#loc288 = loc(fused[#loc37, #loc38])
#loc289 = loc(fused[#loc39, #loc40])
#loc290 = loc(fused[#loc41, #loc42])
#loc291 = loc(fused[#loc43, #loc44])
#loc292 = loc(fused[#loc45, #loc46])
#loc293 = loc(fused[#loc47, #loc48])
#loc294 = loc(fused[#loc49, #loc50])
#loc295 = loc(fused[#loc52, #loc51])
#loc296 = loc(fused[#loc53, #loc54])
#loc297 = loc(fused[#loc56, #loc57])
#loc298 = loc(fused[#loc60, #loc61])
#loc299 = loc(fused[#loc67, #loc68])
#loc300 = loc(fused[#loc69, #loc70])
#loc301 = loc(fused[#loc71, #loc72])
#loc302 = loc(fused[#loc73, #loc70])
#loc303 = loc(fused[#loc75, #loc76])
#loc304 = loc(fused[#loc78, #loc79])
#loc305 = loc(fused[#loc80, #loc81])
#loc306 = loc(fused[#loc84, #loc82])
#loc307 = loc(fused[#loc88, #loc85])
#loc308 = loc(fused[#loc92, #loc93])
#loc309 = loc(fused[#loc94, #loc95])
#loc310 = loc(fused[#loc97, #loc98])
#loc311 = loc(fused[#loc99, #loc100])
#loc312 = loc(fused[#loc101, #loc102])
#loc313 = loc(fused[#loc103, #loc95])
#loc314 = loc(fused[#loc105, #loc106])
#loc315 = loc(fused[#loc109, #loc110])
#loc316 = loc(fused[#loc111, #loc106])
#loc317 = loc(fused[#loc117, #loc118])
#loc318 = loc(fused[#loc119, #loc120])
#loc319 = loc(fused[#loc121, #loc122])
#loc320 = loc(fused[#loc123, #loc120])
#loc321 = loc(fused[#loc129, #loc130])
#loc322 = loc(fused[#loc131, #loc132])
#loc323 = loc(fused[#loc133, #loc134])
#loc324 = loc(fused[#loc133, #loc135])
#loc325 = loc(fused[#loc131, #loc136])
#loc326 = loc(fused[#loc139, #loc140])
#loc327 = loc(fused[#loc141, #loc142])
#loc328 = loc(fused[#loc143, #loc144])
#loc329 = loc(fused[#loc146, #loc147])
#loc330 = loc(fused[#loc148, #loc142])
#loc331 = loc(fused[#loc154, #loc155])
#loc332 = loc(fused[#loc153, #loc155])
#loc333 = loc(fused[#loc152, #loc155])
#loc334 = loc(fused[#loc151, #loc150])
#loc335 = loc(fused[#loc160, #loc161])
#loc336 = loc(fused[#loc162, #loc163])
#loc337 = loc(fused[#loc165, #loc163])
#loc338 = loc(fused[#loc168, #loc166])
#loc339 = loc(fused[#loc172, #loc173])
#loc340 = loc(fused[#loc174, #loc175])
#loc341 = loc(fused[#loc177, #loc175])
#loc342 = loc(fused[#loc180, #loc178])
#loc343 = loc(fused[#loc181, #loc182])
#loc344 = loc(fused[#loc183, #loc184])
#loc345 = loc(fused[#loc185, #loc182])
#loc346 = loc(fused[#loc188, #loc189])
#loc347 = loc(fused[#loc190, #loc191])
#loc348 = loc(fused[#loc192, #loc189])
#loc349 = loc(fused[#loc197, #loc195])
#loc350 = loc(fused[#loc198, #loc199])
#loc351 = loc(fused[#loc201, #loc202])
#loc352 = loc(fused[#loc204, #loc205])
#loc353 = loc(fused[#loc206, #loc207])
#loc354 = loc(fused[#loc209, #loc210])
#loc355 = loc(fused[#loc211, #loc212])
#loc356 = loc(fused[#loc213, #loc214])
#loc357 = loc(fused[#loc216, #loc212])
#loc358 = loc(fused[#loc219, #loc220])
#loc359 = loc(fused[#loc222, #loc223])
#loc360 = loc(fused[#loc224, #loc225])
#loc361 = loc(fused[#loc226, #loc227])
#loc362 = loc(fused[#loc228, #loc229])
#loc363 = loc(fused[#loc230, #loc231])
#loc364 = loc(fused[#loc232, #loc233])
#loc365 = loc(fused[#loc234, #loc235])
#loc366 = loc(fused[#loc237, #loc236])
#loc367 = loc(fused[#loc238, #loc239])
#loc368 = loc(fused[#loc245, #loc243])
#loc369 = loc(fused[#loc246, #loc247])
#loc370 = loc(fused[#loc249, #loc250])
#loc371 = loc(fused[#loc252, #loc253])
#loc372 = loc(fused[#loc254, #loc255])
#loc373 = loc(fused[#loc257, #loc258])
#loc374 = loc(fused[#loc259, #loc260])
#loc375 = loc(fused[#loc261, #loc262])
#loc376 = loc(fused[#loc264, #loc260])
#loc377 = loc(fused[#loc267, #loc268])
