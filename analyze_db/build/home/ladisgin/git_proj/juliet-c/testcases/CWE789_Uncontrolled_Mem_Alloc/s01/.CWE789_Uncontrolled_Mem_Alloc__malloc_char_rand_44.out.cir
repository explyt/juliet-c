!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":28:21)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":28:28)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":152:10)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":152:14)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":152:20)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":152:32)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":69:25)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":69:32)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":104:25)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":104:32)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":111:41)
#true = #cir.bool<true> : !cir.bool
#loc213 = loc(fused[#loc13, #loc14])
#loc240 = loc(fused[#loc82, #loc83])
#loc241 = loc(fused[#loc84, #loc85])
#loc246 = loc(fused[#loc102, #loc103])
#loc266 = loc(fused[#loc155, #loc156])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc208)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc209)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc211)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc10)
  cir.func internal private @badSink(%arg0: !u64i loc(fused[#loc13, #loc14])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc214)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc213)
    cir.store %arg0, %1 : !u64i, !cir.ptr<!u64i> loc(#loc17)
    cir.br ^bb1 loc(#loc215)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc216)
  ^bb2:  // pred: ^bb1
    %2 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc22)
    %3 = cir.const #cir.int<5> : !u64i loc(#loc217)
    %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc218)
    cir.brcond %4 ^bb3, ^bb8 loc(#loc219)
  ^bb3:  // pred: ^bb2
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc28)
    %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc29)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc220)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc221)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc28)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc222)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
    cir.br ^bb4 loc(#loc224)
  ^bb4:  // pred: ^bb3
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc37)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc225)
    cir.brcond %14 ^bb5, ^bb6 loc(#loc226)
  ^bb5:  // pred: ^bb4
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc39)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc41)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc39)
    cir.br ^bb6 loc(#loc35)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc35)
  ^bb7:  // pred: ^bb6
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %19 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
    %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc43)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc46)
    cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc47)
    cir.br ^bb9 loc(#loc26)
  ^bb8:  // pred: ^bb2
    %25 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc10)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc10)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    cir.br ^bb9 loc(#loc21)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc21)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc19)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc12)
  } loc(#loc212)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc227)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc229)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc230)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!u64i)>> loc(#loc56)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>> loc(#loc230)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc57)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc231)
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc59)
    cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc232)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>>, !cir.ptr<!cir.func<!void (!u64i)>> loc(#loc62)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc63)
    cir.call %7(%8) : (!cir.ptr<!cir.func<!void (!u64i)>>, !u64i) -> () loc(#loc62)
    cir.return loc(#loc52)
  } loc(#loc228)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc234)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc235)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    cir.return loc(#loc65)
  } loc(#loc233)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc236)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc237)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc238)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc79)
  cir.func @main(%arg0: !s32i loc(fused[#loc82, #loc83]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc84, #loc85])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc240)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc241)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc81)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc86)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc86)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc87)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc88)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc88)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc89)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc76)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %8 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc242)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44_good() : () -> () loc(#loc91)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc77)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc78)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %13 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc243)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44_bad() : () -> () loc(#loc95)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc79)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc98)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc244)
    cir.return %17 : !s32i loc(#loc244)
  } loc(#loc239)
  cir.func internal private @goodG2BSink(%arg0: !u64i loc(fused[#loc102, #loc103])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc247)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc246)
    cir.store %arg0, %1 : !u64i, !cir.ptr<!u64i> loc(#loc106)
    cir.br ^bb1 loc(#loc248)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc249)
  ^bb2:  // pred: ^bb1
    %2 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc111)
    %3 = cir.const #cir.int<5> : !u64i loc(#loc250)
    %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc251)
    cir.brcond %4 ^bb3, ^bb8 loc(#loc252)
  ^bb3:  // pred: ^bb2
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc117)
    %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc118)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc253)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc254)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc117)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc255)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc256)
    cir.br ^bb4 loc(#loc257)
  ^bb4:  // pred: ^bb3
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc126)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc126)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc258)
    cir.brcond %14 ^bb5, ^bb6 loc(#loc259)
  ^bb5:  // pred: ^bb4
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc128)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc129)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc130)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc128)
    cir.br ^bb6 loc(#loc124)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc124)
  ^bb7:  // pred: ^bb6
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    %19 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc132)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc132)
    %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc133)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc136)
    cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc137)
    cir.br ^bb9 loc(#loc115)
  ^bb8:  // pred: ^bb2
    %25 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc138)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc138)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    cir.br ^bb9 loc(#loc110)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc110)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc108)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc101)
  } loc(#loc245)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc261)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc262)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!u64i)>> loc(#loc145)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>> loc(#loc262)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc146)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc263)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc148)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc148)
    cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc264)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>>, !cir.ptr<!cir.func<!void (!u64i)>> loc(#loc150)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc151)
    cir.call %7(%8) : (!cir.ptr<!cir.func<!void (!u64i)>>, !u64i) -> () loc(#loc150)
    cir.return loc(#loc141)
  } loc(#loc260)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc152)
  cir.func internal private @goodB2GSink(%arg0: !u64i loc(fused[#loc155, #loc156])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc267)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc266)
    cir.store %arg0, %1 : !u64i, !cir.ptr<!u64i> loc(#loc159)
    cir.br ^bb1 loc(#loc268)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc269)
  ^bb2:  // pred: ^bb1
    %2 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc164)
    %3 = cir.const #cir.int<5> : !u64i loc(#loc270)
    %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc271)
    cir.brcond %4 ^bb3, ^bb8 loc(#loc167)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc168)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc169)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc169)
    %8 = cir.cmp(lt, %5, %7) : !u64i, !cir.bool loc(#loc272)
    cir.brcond %8 ^bb4, ^bb5 loc(#loc167)
  ^bb4:  // pred: ^bb3
    %9 = cir.const #true loc(#loc167)
    cir.br ^bb6(%9 : !cir.bool) loc(#loc167)
  ^bb5:  // pred: ^bb3
    %10 = cir.const #false loc(#loc167)
    cir.br ^bb6(%10 : !cir.bool) loc(#loc167)
  ^bb6(%11: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":111:41)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc167)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%11 : !cir.bool) loc(#loc167)
  ^bb8:  // pred: ^bb2
    %12 = cir.const #false loc(#loc167)
    cir.br ^bb9(%12 : !cir.bool) loc(#loc167)
  ^bb9(%13: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":111:41)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc167)
  ^bb10:  // pred: ^bb9
    cir.brcond %13 ^bb11, ^bb16 loc(#loc273)
  ^bb11:  // pred: ^bb10
    %14 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc173)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc174)
    %16 = cir.const #cir.int<1> : !u64i loc(#loc274)
    %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc275)
    %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc173)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc276)
    cir.store %19, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc277)
    cir.br ^bb12 loc(#loc278)
  ^bb12:  // pred: ^bb11
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc182)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc182)
    %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc279)
    cir.brcond %23 ^bb13, ^bb14 loc(#loc280)
  ^bb13:  // pred: ^bb12
    %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc184)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc185)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc186)
    cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc184)
    cir.br ^bb14 loc(#loc180)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc180)
  ^bb15:  // pred: ^bb14
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
    %28 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc188)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc188)
    %30 = cir.call @strcpy(%27, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc189)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc191)
    %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc192)
    cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc193)
    cir.br ^bb17 loc(#loc171)
  ^bb16:  // pred: ^bb10
    %34 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc152)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc152)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc194)
    cir.br ^bb17 loc(#loc163)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc163)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc161)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc154)
  } loc(#loc265)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc282)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc283)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!u64i)>> loc(#loc200)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>> loc(#loc283)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc201)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc201)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc284)
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc203)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc203)
    cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc285)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>>, !cir.ptr<!cir.func<!void (!u64i)>> loc(#loc206)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc207)
    cir.call %7(%8) : (!cir.ptr<!cir.func<!void (!u64i)>>, !u64i) -> () loc(#loc206)
    cir.return loc(#loc196)
  } loc(#loc281)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":40:30)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":46:23)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":28:1)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":49:1)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":31:9)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":31:16)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":29:1)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":30:5)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":48:5)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":35:9)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":47:9)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":35:13)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":35:20)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":35:39)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":36:9)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":43:9)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":45:9)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":37:32)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":37:39)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":37:44)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":37:55)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":37:56)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":37:13)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":38:13)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":38:45)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":38:17)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":38:29)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":38:35)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":38:36)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":38:42)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":38:41)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":40:20)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":40:13)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":41:23)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":41:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":42:18)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":42:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":46:13)
#loc49 = loc("/usr/include/stdlib.h":573:1)
#loc50 = loc("/usr/include/stdlib.h":573:24)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":51:1)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":62:1)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":53:5)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":53:12)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":55:5)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":55:32)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":57:12)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":57:5)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":59:12)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":59:5)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":59:17)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":61:5)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":61:13)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":138:1)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":142:1)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":140:5)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":140:13)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":141:5)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":141:13)
#loc70 = loc("/usr/include/stdlib.h":575:1)
#loc71 = loc("/usr/include/stdlib.h":575:41)
#loc72 = loc("/usr/include/time.h":76:1)
#loc73 = loc("/usr/include/time.h":76:38)
#loc74 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc75 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":157:15)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":159:15)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":162:15)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":164:15)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":152:1)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":167:1)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":153:1)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":155:27)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":155:22)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":155:5)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":157:5)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":158:5)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":158:61)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":159:5)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":162:5)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":163:5)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":163:60)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":164:5)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":166:12)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":166:5)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":69:1)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":90:1)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":72:9)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":72:16)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":70:1)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":71:5)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":89:5)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":76:9)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":88:9)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":76:13)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":76:20)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":76:39)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":77:9)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":84:9)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":86:9)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":78:32)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":78:39)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":78:44)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":78:55)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":78:56)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":78:13)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":79:13)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":79:45)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":79:17)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":79:29)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":79:35)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":79:36)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":79:42)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":79:41)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":81:20)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":81:30)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":81:13)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":82:23)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":82:13)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":83:18)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":83:13)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":87:23)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":87:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":92:1)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":101:1)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":94:5)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":94:12)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":95:5)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":95:32)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":97:12)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":97:5)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":99:12)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":99:5)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":100:5)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":100:13)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":122:23)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":104:1)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":125:1)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":107:9)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":107:16)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":105:1)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":106:5)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":124:5)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":111:9)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":123:9)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":111:13)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":111:20)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":111:39)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":111:44)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":111:51)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":112:9)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":119:9)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":121:9)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":113:32)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":113:39)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":113:44)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":113:55)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":113:56)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":113:13)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":114:13)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":114:45)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":114:17)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":114:29)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":114:35)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":114:36)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":114:42)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":114:41)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":116:20)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":116:30)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":116:13)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":117:23)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":117:13)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":118:18)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":118:13)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":122:13)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":127:1)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":136:1)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":129:5)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":129:12)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":130:5)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":130:32)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":132:12)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":132:5)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":134:12)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":134:5)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":134:17)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":135:5)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_44.c":135:13)
#loc208 = loc(fused[#loc1, #loc2])
#loc209 = loc(fused[#loc3, #loc4])
#loc210 = loc(fused[#loc5, #loc6])
#loc211 = loc(fused[#loc8, #loc9])
#loc212 = loc(fused[#loc11, #loc12])
#loc214 = loc(fused[#loc15, #loc16])
#loc215 = loc(fused[#loc18, #loc19])
#loc216 = loc(fused[#loc20, #loc21])
#loc217 = loc(fused[#loc23, #loc24])
#loc218 = loc(fused[#loc22, #loc24])
#loc219 = loc(fused[#loc25, #loc26, #loc27, #loc21])
#loc220 = loc(fused[#loc30, #loc31])
#loc221 = loc(fused[#loc29, #loc31])
#loc222 = loc(fused[#loc28, #loc32])
#loc223 = loc(fused[#loc33, #loc32])
#loc224 = loc(fused[#loc34, #loc35])
#loc225 = loc(fused[#loc36, #loc37])
#loc226 = loc(fused[#loc38, #loc35])
#loc227 = loc(fused[#loc49, #loc50])
#loc228 = loc(fused[#loc51, #loc52])
#loc229 = loc(fused[#loc53, #loc54])
#loc230 = loc(fused[#loc55, #loc56])
#loc231 = loc(fused[#loc58, #loc57])
#loc232 = loc(fused[#loc60, #loc61])
#loc233 = loc(fused[#loc64, #loc65])
#loc234 = loc(fused[#loc66, #loc67])
#loc235 = loc(fused[#loc68, #loc69])
#loc236 = loc(fused[#loc70, #loc71])
#loc237 = loc(fused[#loc72, #loc73])
#loc238 = loc(fused[#loc74, #loc75])
#loc239 = loc(fused[#loc80, #loc81])
#loc242 = loc(fused[#loc91, #loc92])
#loc243 = loc(fused[#loc95, #loc96])
#loc244 = loc(fused[#loc99, #loc98])
#loc245 = loc(fused[#loc100, #loc101])
#loc247 = loc(fused[#loc104, #loc105])
#loc248 = loc(fused[#loc107, #loc108])
#loc249 = loc(fused[#loc109, #loc110])
#loc250 = loc(fused[#loc112, #loc113])
#loc251 = loc(fused[#loc111, #loc113])
#loc252 = loc(fused[#loc114, #loc115, #loc116, #loc110])
#loc253 = loc(fused[#loc119, #loc120])
#loc254 = loc(fused[#loc118, #loc120])
#loc255 = loc(fused[#loc117, #loc121])
#loc256 = loc(fused[#loc122, #loc121])
#loc257 = loc(fused[#loc123, #loc124])
#loc258 = loc(fused[#loc125, #loc126])
#loc259 = loc(fused[#loc127, #loc124])
#loc260 = loc(fused[#loc140, #loc141])
#loc261 = loc(fused[#loc142, #loc143])
#loc262 = loc(fused[#loc144, #loc145])
#loc263 = loc(fused[#loc147, #loc146])
#loc264 = loc(fused[#loc149, #loc148])
#loc265 = loc(fused[#loc153, #loc154])
#loc267 = loc(fused[#loc157, #loc158])
#loc268 = loc(fused[#loc160, #loc161])
#loc269 = loc(fused[#loc162, #loc163])
#loc270 = loc(fused[#loc165, #loc166])
#loc271 = loc(fused[#loc164, #loc166])
#loc272 = loc(fused[#loc168, #loc169])
#loc273 = loc(fused[#loc170, #loc171, #loc172, #loc163])
#loc274 = loc(fused[#loc175, #loc176])
#loc275 = loc(fused[#loc174, #loc176])
#loc276 = loc(fused[#loc173, #loc177])
#loc277 = loc(fused[#loc178, #loc177])
#loc278 = loc(fused[#loc179, #loc180])
#loc279 = loc(fused[#loc181, #loc182])
#loc280 = loc(fused[#loc183, #loc180])
#loc281 = loc(fused[#loc195, #loc196])
#loc282 = loc(fused[#loc197, #loc198])
#loc283 = loc(fused[#loc199, #loc200])
#loc284 = loc(fused[#loc202, #loc201])
#loc285 = loc(fused[#loc204, #loc205])
