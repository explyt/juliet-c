!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":82:10)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":82:14)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":82:20)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":82:32)
#loc99 = loc(fused[#loc43, #loc44])
#loc100 = loc(fused[#loc45, #loc46])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc83)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc87)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc88)
    cir.br ^bb1 loc(#loc89)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc89)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %3 ^bb3, ^bb10 loc(#loc17)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc90)
  ^bb4:  // pred: ^bb3
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc87)
    cir.store %4, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc87)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc88)
    cir.br ^bb5 loc(#loc91)
  ^bb5:  // pred: ^bb4
    %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc22)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc84)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc5)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc5)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %12 = cir.call @__isoc99_fscanf(%8, %10, %11) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc22)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc92)
    cir.brcond %14 ^bb6, ^bb7 loc(#loc93)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc8)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    cir.br ^bb7 loc(#loc21)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc21)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc19)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc28)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc16)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc10)
  } loc(#loc86)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc95)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    cir.return loc(#loc30)
  } loc(#loc94)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc96)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc40)
  cir.func @main(%arg0: !s32i loc(fused[#loc43, #loc44]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc45, #loc46])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc99)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc100)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc42)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc47)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc47)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc48)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc49)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc49)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc50)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc37)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %8 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc101)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16_good() : () -> () loc(#loc52)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc38)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc39)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %13 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc102)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16_bad() : () -> () loc(#loc56)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc40)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc59)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc103)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    cir.return %17 : !s32i loc(#loc103)
  } loc(#loc98)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc105)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc106)
    cir.br ^bb1 loc(#loc107)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc107)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc69)
    cir.brcond %3 ^bb3, ^bb10 loc(#loc69)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc108)
  ^bb4:  // pred: ^bb3
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc105)
    cir.store %4, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc105)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    cir.br ^bb5 loc(#loc109)
  ^bb5:  // pred: ^bb4
    %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc74)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc84)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc75)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc76)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc76)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %12 = cir.call @__isoc99_fscanf(%8, %10, %11) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc74)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc78)
    %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc110)
    cir.brcond %15 ^bb6, ^bb7 loc(#loc111)
  ^bb6:  // pred: ^bb5
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc80)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    cir.br ^bb7 loc(#loc73)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc73)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc71)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc82)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc68)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc62)
  } loc(#loc104)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":35:31)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":37:27)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":24:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":42:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":31:13)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":31:36)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":32:13)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":32:27)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":26:5)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":41:5)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":26:11)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":28:9)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":39:9)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":35:13)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":38:13)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":35:17)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":35:24)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":35:41)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":35:50)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":36:13)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":37:17)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":40:9)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":68:1)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":71:1)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":70:5)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":70:11)
#loc33 = loc("/usr/include/stdlib.h":575:1)
#loc34 = loc("/usr/include/stdlib.h":575:41)
#loc35 = loc("/usr/include/time.h":76:1)
#loc36 = loc("/usr/include/time.h":76:38)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":87:15)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":89:15)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":92:15)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":94:15)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":82:1)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":97:1)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":83:1)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":85:27)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":85:22)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":85:5)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":87:5)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":88:5)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":88:74)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":89:5)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":92:5)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":93:5)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":93:73)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":94:5)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":96:12)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":96:5)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":49:1)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":66:1)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":56:13)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":56:36)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":57:13)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":57:27)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":51:5)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":65:5)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":51:11)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":53:9)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":63:9)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":59:13)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":62:13)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":59:17)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":59:24)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":59:31)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":59:41)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":59:50)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":60:13)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":61:27)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":61:17)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_16.c":64:9)
#loc83 = loc(fused[#loc1, #loc2])
#loc84 = loc(fused[#loc3, #loc4])
#loc85 = loc(fused[#loc6, #loc7])
#loc86 = loc(fused[#loc9, #loc10])
#loc87 = loc(fused[#loc11, #loc12])
#loc88 = loc(fused[#loc13, #loc14])
#loc89 = loc(fused[#loc15, #loc16])
#loc90 = loc(fused[#loc18, #loc19])
#loc91 = loc(fused[#loc20, #loc21])
#loc92 = loc(fused[#loc22, #loc25])
#loc93 = loc(fused[#loc26, #loc21])
#loc94 = loc(fused[#loc29, #loc30])
#loc95 = loc(fused[#loc31, #loc32])
#loc96 = loc(fused[#loc33, #loc34])
#loc97 = loc(fused[#loc35, #loc36])
#loc98 = loc(fused[#loc41, #loc42])
#loc101 = loc(fused[#loc52, #loc53])
#loc102 = loc(fused[#loc56, #loc57])
#loc103 = loc(fused[#loc60, #loc59])
#loc104 = loc(fused[#loc61, #loc62])
#loc105 = loc(fused[#loc63, #loc64])
#loc106 = loc(fused[#loc65, #loc66])
#loc107 = loc(fused[#loc67, #loc68])
#loc108 = loc(fused[#loc70, #loc71])
#loc109 = loc(fused[#loc72, #loc73])
#loc110 = loc(fused[#loc74, #loc78])
#loc111 = loc(fused[#loc79, #loc73])
