!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc217 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":246:10)
#loc218 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":246:14)
#loc219 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":246:20)
#loc220 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":246:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc496 = loc(fused[#loc217, #loc218])
#loc497 = loc(fused[#loc219, #loc220])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc409)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc410)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc411)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc412)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc413)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc414)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc415)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc416)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc417)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc418)
  cir.func private @close(!s32i) -> !s32i loc(#loc419)
  cir.func private @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64b_badSink(!cir.ptr<!void>) loc(#loc420)
  cir.func no_proto @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc422)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc29)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc30)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc423)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc424)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc29)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc425)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc426)
    cir.scope {
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
      %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
      %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc428)
      cir.if %17 {
        %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc40)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc41)
        %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc42)
        cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc40)
      } loc(#loc429)
    } loc(#loc427)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc43)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc46)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc430)
    cir.scope {
      %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc432)
      %15 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc433)
      %16 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc434)
      %17 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc435)
      %18 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc436)
      %19 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc437)
      %20 = cir.const #cir.int<1> : !s32i loc(#loc56)
      %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc56)
      cir.store %21, %17 : !s32i, !cir.ptr<!s32i> loc(#loc435)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc58)
      %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc58)
      cir.store %23, %18 : !s32i, !cir.ptr<!s32i> loc(#loc436)
      %24 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc61)
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
      %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc61)
      cir.store %26, %19 : !u64i, !cir.ptr<!u64i> loc(#loc437)
      cir.scope {
        cir.do {
          %27 = cir.const #cir.int<2> : !s32i loc(#loc65)
          %28 = cir.const #cir.int<1> : !s32i loc(#loc66)
          %29 = cir.const #cir.int<6> : !s32i loc(#loc67)
          %30 = cir.call @socket(%27, %28, %29) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc68)
          cir.store %30, %17 : !s32i, !cir.ptr<!s32i> loc(#loc439)
          cir.scope {
            %84 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc73)
            %85 = cir.const #cir.int<1> : !s32i loc(#loc74)
            %86 = cir.unary(minus, %85) : !s32i, !s32i loc(#loc74)
            %87 = cir.cmp(eq, %84, %86) : !s32i, !cir.bool loc(#loc441)
            cir.if %87 {
              cir.break loc(#loc76)
            } loc(#loc442)
          } loc(#loc440)
          %31 = cir.cast(bitcast, %15 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc443)
          %32 = cir.const #cir.int<0> : !s32i loc(#loc79)
          %33 = cir.const #cir.int<16> : !u64i loc(#loc444)
          cir.libc.memset %33 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc445)
          %34 = cir.const #cir.int<2> : !s32i loc(#loc84)
          %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc84)
          %36 = cir.get_member %15[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
          cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc446)
          %37 = cir.const #cir.int<0> : !s32i loc(#loc87)
          %38 = cir.cast(integral, %37 : !s32i), !u32i loc(#loc87)
          %39 = cir.get_member %15[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc88)
          %40 = cir.get_member %39[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc89)
          cir.store %38, %40 : !u32i, !cir.ptr<!u32i> loc(#loc447)
          %41 = cir.const #cir.int<27015> : !s32i loc(#loc91)
          %42 = cir.cast(integral, %41 : !s32i), !u16i loc(#loc91)
          %43 = cir.call @htons(%42) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc92)
          %44 = cir.get_member %15[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc93)
          cir.store %43, %44 : !u16i, !cir.ptr<!u16i> loc(#loc448)
          cir.scope {
            %84 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc98)
            %85 = cir.cast(bitcast, %15 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc450)
            %86 = cir.const #cir.int<16> : !u64i loc(#loc451)
            %87 = cir.cast(integral, %86 : !u64i), !u32i loc(#loc451)
            %88 = cir.call @bind(%84, %85, %87) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc103)
            %89 = cir.const #cir.int<1> : !s32i loc(#loc104)
            %90 = cir.unary(minus, %89) : !s32i, !s32i loc(#loc104)
            %91 = cir.cmp(eq, %88, %90) : !s32i, !cir.bool loc(#loc452)
            cir.if %91 {
              cir.break loc(#loc106)
            } loc(#loc453)
          } loc(#loc449)
          cir.scope {
            %84 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc109)
            %85 = cir.const #cir.int<5> : !s32i loc(#loc110)
            %86 = cir.call @listen(%84, %85) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc111)
            %87 = cir.const #cir.int<1> : !s32i loc(#loc112)
            %88 = cir.unary(minus, %87) : !s32i, !s32i loc(#loc112)
            %89 = cir.cmp(eq, %86, %88) : !s32i, !cir.bool loc(#loc455)
            cir.if %89 {
              cir.break loc(#loc114)
            } loc(#loc456)
          } loc(#loc454)
          %45 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc115)
          %46 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc116)
          %47 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc117)
          %48 = cir.call @accept(%45, %46, %47) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc118)
          cir.store %48, %18 : !s32i, !cir.ptr<!s32i> loc(#loc457)
          cir.scope {
            %84 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc123)
            %85 = cir.const #cir.int<1> : !s32i loc(#loc124)
            %86 = cir.unary(minus, %85) : !s32i, !s32i loc(#loc124)
            %87 = cir.cmp(eq, %84, %86) : !s32i, !cir.bool loc(#loc459)
            cir.if %87 {
              cir.break loc(#loc126)
            } loc(#loc460)
          } loc(#loc458)
          %49 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc127)
          %50 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
          %51 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc129)
          %52 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %51 : !u64i), !cir.ptr<!s8i> loc(#loc130)
          %53 = cir.cast(bitcast, %52 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc461)
          %54 = cir.const #cir.int<1> : !u64i loc(#loc462)
          %55 = cir.const #cir.int<100> : !s32i loc(#loc135)
          %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc135)
          %57 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc136)
          %58 = cir.binop(sub, %56, %57) : !u64i loc(#loc463)
          %59 = cir.const #cir.int<1> : !s32i loc(#loc137)
          %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc137)
          %61 = cir.binop(sub, %58, %60) : !u64i loc(#loc464)
          %62 = cir.binop(mul, %54, %61) : !u64i loc(#loc465)
          %63 = cir.const #cir.int<0> : !s32i loc(#loc139)
          %64 = cir.call @recv(%49, %53, %62, %63) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc140)
          %65 = cir.cast(integral, %64 : !s64i), !s32i loc(#loc140)
          cir.store %65, %14 : !s32i, !cir.ptr<!s32i> loc(#loc466)
          cir.scope {
            %84 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc145)
            %85 = cir.const #cir.int<1> : !s32i loc(#loc146)
            %86 = cir.unary(minus, %85) : !s32i, !s32i loc(#loc146)
            %87 = cir.cmp(eq, %84, %86) : !s32i, !cir.bool loc(#loc468)
            %88 = cir.ternary(%87, true {
              %89 = cir.const #true loc(#loc147)
              cir.yield %89 : !cir.bool loc(#loc147)
            }, false {
              %89 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc148)
              %90 = cir.const #cir.int<0> : !s32i loc(#loc149)
              %91 = cir.cmp(eq, %89, %90) : !s32i, !cir.bool loc(#loc469)
              %92 = cir.ternary(%91, true {
                %93 = cir.const #true loc(#loc147)
                cir.yield %93 : !cir.bool loc(#loc147)
              }, false {
                %93 = cir.const #false loc(#loc147)
                cir.yield %93 : !cir.bool loc(#loc147)
              }) : (!cir.bool) -> !cir.bool loc(#loc147)
              cir.yield %92 : !cir.bool loc(#loc147)
            }) : (!cir.bool) -> !cir.bool loc(#loc147)
            cir.if %88 {
              cir.break loc(#loc151)
            } loc(#loc470)
          } loc(#loc467)
          %66 = cir.const #cir.int<0> : !s32i loc(#loc152)
          %67 = cir.cast(integral, %66 : !s32i), !s8i loc(#loc152)
          %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
          %69 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc154)
          %70 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc155)
          %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc155)
          %72 = cir.const #cir.int<1> : !u64i loc(#loc471)
          %73 = cir.binop(div, %71, %72) : !u64i loc(#loc472)
          %74 = cir.binop(add, %69, %73) : !u64i loc(#loc473)
          %75 = cir.ptr_stride(%68 : !cir.ptr<!s8i>, %74 : !u64i), !cir.ptr<!s8i> loc(#loc158)
          cir.store %67, %75 : !s8i, !cir.ptr<!s8i> loc(#loc474)
          %76 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc159)
          %77 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
          %78 = cir.const #cir.int<13> : !s32i loc(#loc161)
          %79 = cir.call @strchr(%77, %78) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc159)
          cir.store %79, %16 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc475)
          cir.scope {
            %84 = cir.load %16 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
            %85 = cir.cast(ptr_to_bool, %84 : !cir.ptr<!s8i>), !cir.bool loc(#loc166)
            cir.if %85 {
              %86 = cir.const #cir.int<0> : !s32i loc(#loc168)
              %87 = cir.cast(integral, %86 : !s32i), !s8i loc(#loc168)
              %88 = cir.load deref %16 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
              cir.store %87, %88 : !s8i, !cir.ptr<!s8i> loc(#loc478)
            } loc(#loc477)
          } loc(#loc476)
          %80 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc171)
          %81 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
          %82 = cir.const #cir.int<10> : !s32i loc(#loc173)
          %83 = cir.call @strchr(%81, %82) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc171)
          cir.store %83, %16 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc479)
          cir.scope {
            %84 = cir.load %16 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
            %85 = cir.cast(ptr_to_bool, %84 : !cir.ptr<!s8i>), !cir.bool loc(#loc178)
            cir.if %85 {
              %86 = cir.const #cir.int<0> : !s32i loc(#loc180)
              %87 = cir.cast(integral, %86 : !s32i), !s8i loc(#loc180)
              %88 = cir.load deref %16 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
              cir.store %87, %88 : !s8i, !cir.ptr<!s8i> loc(#loc482)
            } loc(#loc481)
          } loc(#loc480)
          cir.yield loc(#loc64)
        } while {
          %27 = cir.const #cir.int<0> : !s32i loc(#loc183)
          %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc183)
          cir.condition(%28) loc(#loc183)
        } loc(#loc438)
      } loc(#loc438)
      cir.scope {
        %27 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc186)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc187)
        %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc187)
        %30 = cir.cmp(ne, %27, %29) : !s32i, !cir.bool loc(#loc484)
        cir.if %30 {
          %31 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc189)
          %32 = cir.call @close(%31) : (!s32i) -> !s32i loc(#loc190)
        } loc(#loc485)
      } loc(#loc483)
      cir.scope {
        %27 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc193)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc194)
        %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc194)
        %30 = cir.cmp(ne, %27, %29) : !s32i, !cir.bool loc(#loc487)
        cir.if %30 {
          %31 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc196)
          %32 = cir.call @close(%31) : (!s32i) -> !s32i loc(#loc197)
        } loc(#loc488)
      } loc(#loc486)
    } loc(#loc431)
    %13 = cir.cast(bitcast, %0 : !cir.ptr<!cir.ptr<!s8i>>), !cir.ptr<!void> loc(#loc489)
    cir.call @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64b_badSink(%13) : (!cir.ptr<!void>) -> () loc(#loc200)
    cir.return loc(#loc26)
  } loc(#loc421)
  cir.func no_proto @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc491)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc203)
    cir.return loc(#loc202)
  } loc(#loc490)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc492)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc493)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc494)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc211)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc212)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc213)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc214)
  cir.func @main(%arg0: !s32i loc(fused[#loc217, #loc218]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc219, #loc220])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc496)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc497)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc216)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc221)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc222)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc223)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc223)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc224)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc211)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc211)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc225)
    %8 = cir.get_global @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64_good : !cir.ptr<!cir.func<!void ()>> loc(#loc498)
    cir.call @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64_good() : () -> () loc(#loc226)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc212)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc212)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc228)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc213)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc213)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc229)
    %13 = cir.get_global @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc499)
    cir.call @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64_bad() : () -> () loc(#loc230)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc214)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc214)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc232)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc233)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc500)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc500)
    cir.return %17 : !s32i loc(#loc500)
  } loc(#loc495)
  cir.func private @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64b_goodB2GSink(!cir.ptr<!void>) loc(#loc501)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc503)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc241)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc242)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc242)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc504)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc505)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc241)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc506)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc507)
    cir.scope {
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc249)
      %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc250)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc250)
      %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc509)
      cir.if %17 {
        %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc252)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc253)
        %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc254)
        cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc252)
      } loc(#loc510)
    } loc(#loc508)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc255)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc255)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc256)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc257)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc258)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc511)
    cir.scope {
      %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc513)
      %15 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc514)
      %16 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc515)
      %17 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc516)
      %18 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc517)
      %19 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc518)
      %20 = cir.const #cir.int<1> : !s32i loc(#loc268)
      %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc268)
      cir.store %21, %17 : !s32i, !cir.ptr<!s32i> loc(#loc516)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc270)
      %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc270)
      cir.store %23, %18 : !s32i, !cir.ptr<!s32i> loc(#loc517)
      %24 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc273)
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc274)
      %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc273)
      cir.store %26, %19 : !u64i, !cir.ptr<!u64i> loc(#loc518)
      cir.scope {
        cir.do {
          %27 = cir.const #cir.int<2> : !s32i loc(#loc277)
          %28 = cir.const #cir.int<1> : !s32i loc(#loc278)
          %29 = cir.const #cir.int<6> : !s32i loc(#loc279)
          %30 = cir.call @socket(%27, %28, %29) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc280)
          cir.store %30, %17 : !s32i, !cir.ptr<!s32i> loc(#loc520)
          cir.scope {
            %84 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc285)
            %85 = cir.const #cir.int<1> : !s32i loc(#loc286)
            %86 = cir.unary(minus, %85) : !s32i, !s32i loc(#loc286)
            %87 = cir.cmp(eq, %84, %86) : !s32i, !cir.bool loc(#loc522)
            cir.if %87 {
              cir.break loc(#loc288)
            } loc(#loc523)
          } loc(#loc521)
          %31 = cir.cast(bitcast, %15 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc524)
          %32 = cir.const #cir.int<0> : !s32i loc(#loc291)
          %33 = cir.const #cir.int<16> : !u64i loc(#loc525)
          cir.libc.memset %33 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc526)
          %34 = cir.const #cir.int<2> : !s32i loc(#loc296)
          %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc296)
          %36 = cir.get_member %15[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
          cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc527)
          %37 = cir.const #cir.int<0> : !s32i loc(#loc298)
          %38 = cir.cast(integral, %37 : !s32i), !u32i loc(#loc298)
          %39 = cir.get_member %15[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc88)
          %40 = cir.get_member %39[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc89)
          cir.store %38, %40 : !u32i, !cir.ptr<!u32i> loc(#loc528)
          %41 = cir.const #cir.int<27015> : !s32i loc(#loc300)
          %42 = cir.cast(integral, %41 : !s32i), !u16i loc(#loc300)
          %43 = cir.call @htons(%42) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc301)
          %44 = cir.get_member %15[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc93)
          cir.store %43, %44 : !u16i, !cir.ptr<!u16i> loc(#loc529)
          cir.scope {
            %84 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc306)
            %85 = cir.cast(bitcast, %15 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc531)
            %86 = cir.const #cir.int<16> : !u64i loc(#loc532)
            %87 = cir.cast(integral, %86 : !u64i), !u32i loc(#loc532)
            %88 = cir.call @bind(%84, %85, %87) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc311)
            %89 = cir.const #cir.int<1> : !s32i loc(#loc312)
            %90 = cir.unary(minus, %89) : !s32i, !s32i loc(#loc312)
            %91 = cir.cmp(eq, %88, %90) : !s32i, !cir.bool loc(#loc533)
            cir.if %91 {
              cir.break loc(#loc314)
            } loc(#loc534)
          } loc(#loc530)
          cir.scope {
            %84 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc317)
            %85 = cir.const #cir.int<5> : !s32i loc(#loc318)
            %86 = cir.call @listen(%84, %85) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc319)
            %87 = cir.const #cir.int<1> : !s32i loc(#loc320)
            %88 = cir.unary(minus, %87) : !s32i, !s32i loc(#loc320)
            %89 = cir.cmp(eq, %86, %88) : !s32i, !cir.bool loc(#loc536)
            cir.if %89 {
              cir.break loc(#loc322)
            } loc(#loc537)
          } loc(#loc535)
          %45 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc323)
          %46 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc324)
          %47 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc325)
          %48 = cir.call @accept(%45, %46, %47) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc326)
          cir.store %48, %18 : !s32i, !cir.ptr<!s32i> loc(#loc538)
          cir.scope {
            %84 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc331)
            %85 = cir.const #cir.int<1> : !s32i loc(#loc332)
            %86 = cir.unary(minus, %85) : !s32i, !s32i loc(#loc332)
            %87 = cir.cmp(eq, %84, %86) : !s32i, !cir.bool loc(#loc540)
            cir.if %87 {
              cir.break loc(#loc334)
            } loc(#loc541)
          } loc(#loc539)
          %49 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc335)
          %50 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc336)
          %51 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc337)
          %52 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %51 : !u64i), !cir.ptr<!s8i> loc(#loc338)
          %53 = cir.cast(bitcast, %52 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc542)
          %54 = cir.const #cir.int<1> : !u64i loc(#loc543)
          %55 = cir.const #cir.int<100> : !s32i loc(#loc343)
          %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc343)
          %57 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc344)
          %58 = cir.binop(sub, %56, %57) : !u64i loc(#loc544)
          %59 = cir.const #cir.int<1> : !s32i loc(#loc345)
          %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc345)
          %61 = cir.binop(sub, %58, %60) : !u64i loc(#loc545)
          %62 = cir.binop(mul, %54, %61) : !u64i loc(#loc546)
          %63 = cir.const #cir.int<0> : !s32i loc(#loc347)
          %64 = cir.call @recv(%49, %53, %62, %63) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc348)
          %65 = cir.cast(integral, %64 : !s64i), !s32i loc(#loc348)
          cir.store %65, %14 : !s32i, !cir.ptr<!s32i> loc(#loc547)
          cir.scope {
            %84 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc353)
            %85 = cir.const #cir.int<1> : !s32i loc(#loc354)
            %86 = cir.unary(minus, %85) : !s32i, !s32i loc(#loc354)
            %87 = cir.cmp(eq, %84, %86) : !s32i, !cir.bool loc(#loc549)
            %88 = cir.ternary(%87, true {
              %89 = cir.const #true loc(#loc355)
              cir.yield %89 : !cir.bool loc(#loc355)
            }, false {
              %89 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc356)
              %90 = cir.const #cir.int<0> : !s32i loc(#loc357)
              %91 = cir.cmp(eq, %89, %90) : !s32i, !cir.bool loc(#loc550)
              %92 = cir.ternary(%91, true {
                %93 = cir.const #true loc(#loc355)
                cir.yield %93 : !cir.bool loc(#loc355)
              }, false {
                %93 = cir.const #false loc(#loc355)
                cir.yield %93 : !cir.bool loc(#loc355)
              }) : (!cir.bool) -> !cir.bool loc(#loc355)
              cir.yield %92 : !cir.bool loc(#loc355)
            }) : (!cir.bool) -> !cir.bool loc(#loc355)
            cir.if %88 {
              cir.break loc(#loc359)
            } loc(#loc551)
          } loc(#loc548)
          %66 = cir.const #cir.int<0> : !s32i loc(#loc360)
          %67 = cir.cast(integral, %66 : !s32i), !s8i loc(#loc360)
          %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc361)
          %69 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc362)
          %70 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc363)
          %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc363)
          %72 = cir.const #cir.int<1> : !u64i loc(#loc552)
          %73 = cir.binop(div, %71, %72) : !u64i loc(#loc553)
          %74 = cir.binop(add, %69, %73) : !u64i loc(#loc554)
          %75 = cir.ptr_stride(%68 : !cir.ptr<!s8i>, %74 : !u64i), !cir.ptr<!s8i> loc(#loc366)
          cir.store %67, %75 : !s8i, !cir.ptr<!s8i> loc(#loc555)
          %76 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc367)
          %77 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc368)
          %78 = cir.const #cir.int<13> : !s32i loc(#loc369)
          %79 = cir.call @strchr(%77, %78) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc367)
          cir.store %79, %16 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc556)
          cir.scope {
            %84 = cir.load %16 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc374)
            %85 = cir.cast(ptr_to_bool, %84 : !cir.ptr<!s8i>), !cir.bool loc(#loc374)
            cir.if %85 {
              %86 = cir.const #cir.int<0> : !s32i loc(#loc376)
              %87 = cir.cast(integral, %86 : !s32i), !s8i loc(#loc376)
              %88 = cir.load deref %16 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc377)
              cir.store %87, %88 : !s8i, !cir.ptr<!s8i> loc(#loc559)
            } loc(#loc558)
          } loc(#loc557)
          %80 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc379)
          %81 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc380)
          %82 = cir.const #cir.int<10> : !s32i loc(#loc381)
          %83 = cir.call @strchr(%81, %82) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc379)
          cir.store %83, %16 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc560)
          cir.scope {
            %84 = cir.load %16 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc386)
            %85 = cir.cast(ptr_to_bool, %84 : !cir.ptr<!s8i>), !cir.bool loc(#loc386)
            cir.if %85 {
              %86 = cir.const #cir.int<0> : !s32i loc(#loc388)
              %87 = cir.cast(integral, %86 : !s32i), !s8i loc(#loc388)
              %88 = cir.load deref %16 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc389)
              cir.store %87, %88 : !s8i, !cir.ptr<!s8i> loc(#loc563)
            } loc(#loc562)
          } loc(#loc561)
          cir.yield loc(#loc276)
        } while {
          %27 = cir.const #cir.int<0> : !s32i loc(#loc391)
          %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc391)
          cir.condition(%28) loc(#loc391)
        } loc(#loc519)
      } loc(#loc519)
      cir.scope {
        %27 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc394)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc395)
        %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc395)
        %30 = cir.cmp(ne, %27, %29) : !s32i, !cir.bool loc(#loc565)
        cir.if %30 {
          %31 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc397)
          %32 = cir.call @close(%31) : (!s32i) -> !s32i loc(#loc398)
        } loc(#loc566)
      } loc(#loc564)
      cir.scope {
        %27 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc401)
        %28 = cir.const #cir.int<1> : !s32i loc(#loc402)
        %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc402)
        %30 = cir.cmp(ne, %27, %29) : !s32i, !cir.bool loc(#loc568)
        cir.if %30 {
          %31 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc404)
          %32 = cir.call @close(%31) : (!s32i) -> !s32i loc(#loc405)
        } loc(#loc569)
      } loc(#loc567)
    } loc(#loc512)
    %13 = cir.cast(bitcast, %0 : !cir.ptr<!cir.ptr<!s8i>>), !cir.ptr<!void> loc(#loc570)
    cir.call @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64b_goodB2GSink(%13) : (!cir.ptr<!void>) -> () loc(#loc408)
    cir.return loc(#loc238)
  } loc(#loc502)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/sys/socket.h":102:1)
#loc8 = loc("/usr/include/sys/socket.h":102:62)
#loc9 = loc("/usr/include/netinet/in.h":404:1)
#loc10 = loc("/usr/include/netinet/in.h":405:40)
#loc11 = loc("/usr/include/sys/socket.h":112:1)
#loc12 = loc("/usr/include/sys/socket.h":113:6)
#loc13 = loc("/usr/include/sys/socket.h":296:1)
#loc14 = loc("/usr/include/sys/socket.h":296:39)
#loc15 = loc("/usr/include/sys/socket.h":306:1)
#loc16 = loc("/usr/include/sys/socket.h":307:38)
#loc17 = loc("/usr/include/sys/socket.h":145:1)
#loc18 = loc("/usr/include/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":246:1)
#loc20 = loc("/usr/include/string.h":247:33)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":47:1)
#loc24 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":47:99)
#loc25 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":49:1)
#loc26 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":135:1)
#loc27 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":51:5)
#loc28 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":51:12)
#loc29 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":52:20)
#loc30 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":52:27)
#loc31 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":52:31)
#loc32 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":52:42)
#loc33 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":52:43)
#loc34 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":52:5)
#loc35 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":53:5)
#loc36 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":53:33)
#loc37 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":53:9)
#loc38 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":53:17)
#loc39 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":53:23)
#loc40 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":53:24)
#loc41 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":53:30)
#loc42 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":53:29)
#loc43 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":54:15)
#loc44 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":54:5)
#loc45 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":54:10)
#loc46 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":54:11)
#loc47 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":55:5)
#loc48 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":133:5)
#loc49 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":60:9)
#loc50 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":60:13)
#loc51 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":61:9)
#loc52 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":61:28)
#loc53 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":62:9)
#loc54 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":62:15)
#loc55 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":63:9)
#loc56 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":63:31)
#loc57 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":64:9)
#loc58 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":64:31)
#loc59 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":65:9)
#loc60 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":65:37)
#loc61 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":65:26)
#loc62 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":65:33)
#loc63 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":66:9)
#loc64 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":118:17)
#loc65 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":76:35)
#loc66 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":76:44)
#loc67 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":76:57)
#loc68 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":76:28)
#loc69 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":76:13)
#loc70 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":76:68)
#loc71 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":77:13)
#loc72 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":80:13)
#loc73 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":77:17)
#loc74 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":77:33)
#loc75 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":78:13)
#loc76 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":79:17)
#loc77 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":81:20)
#loc78 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":81:21)
#loc79 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":81:30)
#loc80 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":81:33)
#loc81 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":81:47)
#loc82 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":81:13)
#loc83 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":81:48)
#loc84 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":82:34)
#loc85 = loc("/usr/include/netinet/in.h":249:5)
#loc86 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":82:13)
#loc87 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":83:39)
#loc88 = loc("/usr/include/netinet/in.h":251:20)
#loc89 = loc("/usr/include/netinet/in.h":33:15)
#loc90 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":83:13)
#loc91 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":84:38)
#loc92 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":84:32)
#loc93 = loc("/usr/include/netinet/in.h":250:15)
#loc94 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":84:13)
#loc95 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":84:46)
#loc96 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":85:13)
#loc97 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":88:13)
#loc98 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":85:22)
#loc99 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":85:54)
#loc100 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":85:55)
#loc101 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":85:64)
#loc102 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":85:78)
#loc103 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":85:17)
#loc104 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":85:84)
#loc105 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":86:13)
#loc106 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":87:17)
#loc107 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":89:13)
#loc108 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":92:13)
#loc109 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":89:24)
#loc110 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":89:38)
#loc111 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":89:17)
#loc112 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":89:57)
#loc113 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":90:13)
#loc114 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":91:17)
#loc115 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":93:35)
#loc116 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":93:49)
#loc117 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":93:55)
#loc118 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":93:28)
#loc119 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":93:13)
#loc120 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":93:59)
#loc121 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":94:13)
#loc122 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":97:13)
#loc123 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":94:17)
#loc124 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":94:33)
#loc125 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":95:13)
#loc126 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":96:17)
#loc127 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":99:31)
#loc128 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":99:54)
#loc129 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":99:61)
#loc130 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":99:59)
#loc131 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":99:45)
#loc132 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":99:68)
#loc133 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":99:71)
#loc134 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":99:82)
#loc135 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":99:87)
#loc136 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":99:93)
#loc137 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":99:103)
#loc138 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":99:104)
#loc139 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":99:107)
#loc140 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":99:26)
#loc141 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":99:13)
#loc142 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":99:108)
#loc143 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":100:13)
#loc144 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":103:13)
#loc145 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":100:17)
#loc146 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":100:31)
#loc147 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":100:44)
#loc148 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":100:47)
#loc149 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":100:61)
#loc150 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":101:13)
#loc151 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":102:17)
#loc152 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":105:57)
#loc153 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":105:13)
#loc154 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":105:18)
#loc155 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":105:28)
#loc156 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":105:41)
#loc157 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":105:52)
#loc158 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":105:53)
#loc159 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":107:23)
#loc160 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":107:30)
#loc161 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":107:36)
#loc162 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":107:13)
#loc163 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":107:40)
#loc164 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":108:13)
#loc165 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":111:13)
#loc166 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":108:17)
#loc167 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":109:13)
#loc168 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":110:28)
#loc169 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":110:18)
#loc170 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":110:17)
#loc171 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":112:23)
#loc172 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":112:30)
#loc173 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":112:36)
#loc174 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":112:13)
#loc175 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":112:40)
#loc176 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":113:13)
#loc177 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":116:13)
#loc178 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":113:17)
#loc179 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":114:13)
#loc180 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":115:28)
#loc181 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":115:18)
#loc182 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":115:17)
#loc183 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":118:16)
#loc184 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":119:9)
#loc185 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":122:9)
#loc186 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":119:13)
#loc187 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":119:29)
#loc188 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":120:9)
#loc189 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":121:26)
#loc190 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":121:13)
#loc191 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":123:9)
#loc192 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":126:9)
#loc193 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":123:13)
#loc194 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":123:29)
#loc195 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":124:9)
#loc196 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":125:26)
#loc197 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":125:13)
#loc198 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":134:80)
#loc199 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":134:81)
#loc200 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":134:5)
#loc201 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":232:1)
#loc202 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":235:1)
#loc203 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":234:5)
#loc204 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":234:13)
#loc205 = loc("/usr/include/stdlib.h":575:1)
#loc206 = loc("/usr/include/stdlib.h":575:41)
#loc207 = loc("/usr/include/time.h":76:1)
#loc208 = loc("/usr/include/time.h":76:38)
#loc209 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc210 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc211 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":251:15)
#loc212 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":253:15)
#loc213 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":256:15)
#loc214 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":258:15)
#loc215 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":246:1)
#loc216 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":261:1)
#loc221 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":247:1)
#loc222 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":249:27)
#loc223 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":249:22)
#loc224 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":249:5)
#loc225 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":251:5)
#loc226 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":252:5)
#loc227 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":252:76)
#loc228 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":253:5)
#loc229 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":256:5)
#loc230 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":257:5)
#loc231 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":257:75)
#loc232 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":258:5)
#loc233 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":260:12)
#loc234 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":260:5)
#loc235 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":142:1)
#loc236 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":142:103)
#loc237 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":144:1)
#loc238 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":230:1)
#loc239 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":146:5)
#loc240 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":146:12)
#loc241 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":147:20)
#loc242 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":147:27)
#loc243 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":147:31)
#loc244 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":147:42)
#loc245 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":147:43)
#loc246 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":147:5)
#loc247 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":148:5)
#loc248 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":148:33)
#loc249 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":148:9)
#loc250 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":148:17)
#loc251 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":148:23)
#loc252 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":148:24)
#loc253 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":148:30)
#loc254 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":148:29)
#loc255 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":149:15)
#loc256 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":149:5)
#loc257 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":149:10)
#loc258 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":149:11)
#loc259 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":150:5)
#loc260 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":228:5)
#loc261 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":155:9)
#loc262 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":155:13)
#loc263 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":156:9)
#loc264 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":156:28)
#loc265 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":157:9)
#loc266 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":157:15)
#loc267 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":158:9)
#loc268 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":158:31)
#loc269 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":159:9)
#loc270 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":159:31)
#loc271 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":160:9)
#loc272 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":160:37)
#loc273 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":160:26)
#loc274 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":160:33)
#loc275 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":161:9)
#loc276 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":213:17)
#loc277 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":171:35)
#loc278 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":171:44)
#loc279 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":171:57)
#loc280 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":171:28)
#loc281 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":171:13)
#loc282 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":171:68)
#loc283 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":172:13)
#loc284 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":175:13)
#loc285 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":172:17)
#loc286 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":172:33)
#loc287 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":173:13)
#loc288 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":174:17)
#loc289 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":176:20)
#loc290 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":176:21)
#loc291 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":176:30)
#loc292 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":176:33)
#loc293 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":176:47)
#loc294 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":176:13)
#loc295 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":176:48)
#loc296 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":177:34)
#loc297 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":177:13)
#loc298 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":178:39)
#loc299 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":178:13)
#loc300 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":179:38)
#loc301 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":179:32)
#loc302 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":179:13)
#loc303 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":179:46)
#loc304 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":180:13)
#loc305 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":183:13)
#loc306 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":180:22)
#loc307 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":180:54)
#loc308 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":180:55)
#loc309 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":180:64)
#loc310 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":180:78)
#loc311 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":180:17)
#loc312 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":180:84)
#loc313 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":181:13)
#loc314 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":182:17)
#loc315 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":184:13)
#loc316 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":187:13)
#loc317 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":184:24)
#loc318 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":184:38)
#loc319 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":184:17)
#loc320 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":184:57)
#loc321 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":185:13)
#loc322 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":186:17)
#loc323 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":188:35)
#loc324 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":188:49)
#loc325 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":188:55)
#loc326 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":188:28)
#loc327 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":188:13)
#loc328 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":188:59)
#loc329 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":189:13)
#loc330 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":192:13)
#loc331 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":189:17)
#loc332 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":189:33)
#loc333 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":190:13)
#loc334 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":191:17)
#loc335 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":194:31)
#loc336 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":194:54)
#loc337 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":194:61)
#loc338 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":194:59)
#loc339 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":194:45)
#loc340 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":194:68)
#loc341 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":194:71)
#loc342 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":194:82)
#loc343 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":194:87)
#loc344 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":194:93)
#loc345 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":194:103)
#loc346 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":194:104)
#loc347 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":194:107)
#loc348 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":194:26)
#loc349 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":194:13)
#loc350 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":194:108)
#loc351 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":195:13)
#loc352 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":198:13)
#loc353 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":195:17)
#loc354 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":195:31)
#loc355 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":195:44)
#loc356 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":195:47)
#loc357 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":195:61)
#loc358 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":196:13)
#loc359 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":197:17)
#loc360 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":200:57)
#loc361 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":200:13)
#loc362 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":200:18)
#loc363 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":200:28)
#loc364 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":200:41)
#loc365 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":200:52)
#loc366 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":200:53)
#loc367 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":202:23)
#loc368 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":202:30)
#loc369 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":202:36)
#loc370 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":202:13)
#loc371 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":202:40)
#loc372 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":203:13)
#loc373 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":206:13)
#loc374 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":203:17)
#loc375 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":204:13)
#loc376 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":205:28)
#loc377 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":205:18)
#loc378 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":205:17)
#loc379 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":207:23)
#loc380 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":207:30)
#loc381 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":207:36)
#loc382 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":207:13)
#loc383 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":207:40)
#loc384 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":208:13)
#loc385 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":211:13)
#loc386 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":208:17)
#loc387 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":209:13)
#loc388 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":210:28)
#loc389 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":210:18)
#loc390 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":210:17)
#loc391 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":213:16)
#loc392 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":214:9)
#loc393 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":217:9)
#loc394 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":214:13)
#loc395 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":214:29)
#loc396 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":215:9)
#loc397 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":216:26)
#loc398 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":216:13)
#loc399 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":218:9)
#loc400 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":221:9)
#loc401 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":218:13)
#loc402 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":218:29)
#loc403 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":219:9)
#loc404 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":220:26)
#loc405 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":220:13)
#loc406 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":229:84)
#loc407 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":229:85)
#loc408 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_listen_socket_64a.c":229:5)
#loc409 = loc(fused[#loc1, #loc2])
#loc410 = loc(fused[#loc3, #loc4])
#loc411 = loc(fused[#loc5, #loc6])
#loc412 = loc(fused[#loc7, #loc8])
#loc413 = loc(fused[#loc9, #loc10])
#loc414 = loc(fused[#loc11, #loc12])
#loc415 = loc(fused[#loc13, #loc14])
#loc416 = loc(fused[#loc15, #loc16])
#loc417 = loc(fused[#loc17, #loc18])
#loc418 = loc(fused[#loc19, #loc20])
#loc419 = loc(fused[#loc21, #loc22])
#loc420 = loc(fused[#loc23, #loc24])
#loc421 = loc(fused[#loc25, #loc26])
#loc422 = loc(fused[#loc27, #loc28])
#loc423 = loc(fused[#loc31, #loc32])
#loc424 = loc(fused[#loc30, #loc32])
#loc425 = loc(fused[#loc29, #loc33])
#loc426 = loc(fused[#loc34, #loc33])
#loc427 = loc(fused[#loc35, #loc36])
#loc428 = loc(fused[#loc37, #loc38])
#loc429 = loc(fused[#loc39, #loc36])
#loc430 = loc(fused[#loc44, #loc43])
#loc431 = loc(fused[#loc47, #loc48])
#loc432 = loc(fused[#loc49, #loc50])
#loc433 = loc(fused[#loc51, #loc52])
#loc434 = loc(fused[#loc53, #loc54])
#loc435 = loc(fused[#loc55, #loc56])
#loc436 = loc(fused[#loc57, #loc58])
#loc437 = loc(fused[#loc59, #loc60])
#loc438 = loc(fused[#loc63, #loc64])
#loc439 = loc(fused[#loc69, #loc70])
#loc440 = loc(fused[#loc71, #loc72])
#loc441 = loc(fused[#loc73, #loc74])
#loc442 = loc(fused[#loc75, #loc72])
#loc443 = loc(fused[#loc77, #loc78])
#loc444 = loc(fused[#loc80, #loc81])
#loc445 = loc(fused[#loc82, #loc83])
#loc446 = loc(fused[#loc86, #loc84])
#loc447 = loc(fused[#loc90, #loc87])
#loc448 = loc(fused[#loc94, #loc95])
#loc449 = loc(fused[#loc96, #loc97])
#loc450 = loc(fused[#loc99, #loc100])
#loc451 = loc(fused[#loc101, #loc102])
#loc452 = loc(fused[#loc103, #loc104])
#loc453 = loc(fused[#loc105, #loc97])
#loc454 = loc(fused[#loc107, #loc108])
#loc455 = loc(fused[#loc111, #loc112])
#loc456 = loc(fused[#loc113, #loc108])
#loc457 = loc(fused[#loc119, #loc120])
#loc458 = loc(fused[#loc121, #loc122])
#loc459 = loc(fused[#loc123, #loc124])
#loc460 = loc(fused[#loc125, #loc122])
#loc461 = loc(fused[#loc131, #loc132])
#loc462 = loc(fused[#loc133, #loc134])
#loc463 = loc(fused[#loc135, #loc136])
#loc464 = loc(fused[#loc135, #loc137])
#loc465 = loc(fused[#loc133, #loc138])
#loc466 = loc(fused[#loc141, #loc142])
#loc467 = loc(fused[#loc143, #loc144])
#loc468 = loc(fused[#loc145, #loc146])
#loc469 = loc(fused[#loc148, #loc149])
#loc470 = loc(fused[#loc150, #loc144])
#loc471 = loc(fused[#loc156, #loc157])
#loc472 = loc(fused[#loc155, #loc157])
#loc473 = loc(fused[#loc154, #loc157])
#loc474 = loc(fused[#loc153, #loc152])
#loc475 = loc(fused[#loc162, #loc163])
#loc476 = loc(fused[#loc164, #loc165])
#loc477 = loc(fused[#loc167, #loc165])
#loc478 = loc(fused[#loc170, #loc168])
#loc479 = loc(fused[#loc174, #loc175])
#loc480 = loc(fused[#loc176, #loc177])
#loc481 = loc(fused[#loc179, #loc177])
#loc482 = loc(fused[#loc182, #loc180])
#loc483 = loc(fused[#loc184, #loc185])
#loc484 = loc(fused[#loc186, #loc187])
#loc485 = loc(fused[#loc188, #loc185])
#loc486 = loc(fused[#loc191, #loc192])
#loc487 = loc(fused[#loc193, #loc194])
#loc488 = loc(fused[#loc195, #loc192])
#loc489 = loc(fused[#loc198, #loc199])
#loc490 = loc(fused[#loc201, #loc202])
#loc491 = loc(fused[#loc203, #loc204])
#loc492 = loc(fused[#loc205, #loc206])
#loc493 = loc(fused[#loc207, #loc208])
#loc494 = loc(fused[#loc209, #loc210])
#loc495 = loc(fused[#loc215, #loc216])
#loc498 = loc(fused[#loc226, #loc227])
#loc499 = loc(fused[#loc230, #loc231])
#loc500 = loc(fused[#loc234, #loc233])
#loc501 = loc(fused[#loc235, #loc236])
#loc502 = loc(fused[#loc237, #loc238])
#loc503 = loc(fused[#loc239, #loc240])
#loc504 = loc(fused[#loc243, #loc244])
#loc505 = loc(fused[#loc242, #loc244])
#loc506 = loc(fused[#loc241, #loc245])
#loc507 = loc(fused[#loc246, #loc245])
#loc508 = loc(fused[#loc247, #loc248])
#loc509 = loc(fused[#loc249, #loc250])
#loc510 = loc(fused[#loc251, #loc248])
#loc511 = loc(fused[#loc256, #loc255])
#loc512 = loc(fused[#loc259, #loc260])
#loc513 = loc(fused[#loc261, #loc262])
#loc514 = loc(fused[#loc263, #loc264])
#loc515 = loc(fused[#loc265, #loc266])
#loc516 = loc(fused[#loc267, #loc268])
#loc517 = loc(fused[#loc269, #loc270])
#loc518 = loc(fused[#loc271, #loc272])
#loc519 = loc(fused[#loc275, #loc276])
#loc520 = loc(fused[#loc281, #loc282])
#loc521 = loc(fused[#loc283, #loc284])
#loc522 = loc(fused[#loc285, #loc286])
#loc523 = loc(fused[#loc287, #loc284])
#loc524 = loc(fused[#loc289, #loc290])
#loc525 = loc(fused[#loc292, #loc293])
#loc526 = loc(fused[#loc294, #loc295])
#loc527 = loc(fused[#loc297, #loc296])
#loc528 = loc(fused[#loc299, #loc298])
#loc529 = loc(fused[#loc302, #loc303])
#loc530 = loc(fused[#loc304, #loc305])
#loc531 = loc(fused[#loc307, #loc308])
#loc532 = loc(fused[#loc309, #loc310])
#loc533 = loc(fused[#loc311, #loc312])
#loc534 = loc(fused[#loc313, #loc305])
#loc535 = loc(fused[#loc315, #loc316])
#loc536 = loc(fused[#loc319, #loc320])
#loc537 = loc(fused[#loc321, #loc316])
#loc538 = loc(fused[#loc327, #loc328])
#loc539 = loc(fused[#loc329, #loc330])
#loc540 = loc(fused[#loc331, #loc332])
#loc541 = loc(fused[#loc333, #loc330])
#loc542 = loc(fused[#loc339, #loc340])
#loc543 = loc(fused[#loc341, #loc342])
#loc544 = loc(fused[#loc343, #loc344])
#loc545 = loc(fused[#loc343, #loc345])
#loc546 = loc(fused[#loc341, #loc346])
#loc547 = loc(fused[#loc349, #loc350])
#loc548 = loc(fused[#loc351, #loc352])
#loc549 = loc(fused[#loc353, #loc354])
#loc550 = loc(fused[#loc356, #loc357])
#loc551 = loc(fused[#loc358, #loc352])
#loc552 = loc(fused[#loc364, #loc365])
#loc553 = loc(fused[#loc363, #loc365])
#loc554 = loc(fused[#loc362, #loc365])
#loc555 = loc(fused[#loc361, #loc360])
#loc556 = loc(fused[#loc370, #loc371])
#loc557 = loc(fused[#loc372, #loc373])
#loc558 = loc(fused[#loc375, #loc373])
#loc559 = loc(fused[#loc378, #loc376])
#loc560 = loc(fused[#loc382, #loc383])
#loc561 = loc(fused[#loc384, #loc385])
#loc562 = loc(fused[#loc387, #loc385])
#loc563 = loc(fused[#loc390, #loc388])
#loc564 = loc(fused[#loc392, #loc393])
#loc565 = loc(fused[#loc394, #loc395])
#loc566 = loc(fused[#loc396, #loc393])
#loc567 = loc(fused[#loc399, #loc400])
#loc568 = loc(fused[#loc401, #loc402])
#loc569 = loc(fused[#loc403, #loc400])
#loc570 = loc(fused[#loc406, #loc407])
