!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":117:10)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":117:14)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":117:20)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":117:32)
#loc220 = loc(fused[#loc92, #loc93])
#loc221 = loc(fused[#loc94, #loc95])
!ty__charVoid = !cir.struct<struct "_charVoid" {!cir.array<!s8i x 16>, !cir.ptr<!void>, !cir.ptr<!void>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc181)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"0123456789abcdef0123456789abcde\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc182)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc185)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc185)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc10)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc10)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc188)
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc3)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc3)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc3)
          %8 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          cir.store %7, %8 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc189)
          %9 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc21)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc190)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc23)
          %12 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc191)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc191)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc27)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc27)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
          %18 = cir.const #cir.int<32> : !u64i loc(#loc192)
          cir.libc.memcpy %18 bytes from %17 to %14 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc193)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc32)
          %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc32)
          %21 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %22 = cir.const #cir.int<16> : !u64i loc(#loc194)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc195)
          %24 = cir.binop(div, %22, %23) : !u64i loc(#loc196)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc37)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc37)
          %27 = cir.binop(sub, %24, %26) : !u64i loc(#loc197)
          %28 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc39)
          %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc40)
          cir.store %20, %29 : !s8i, !cir.ptr<!s8i> loc(#loc198)
          %30 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc199)
          cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc43)
          %32 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          %33 = cir.load %32 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc44)
          %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc200)
          cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc46)
        } loc(#loc187)
      } else {
        cir.scope {
          %4 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc202)
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc51)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc51)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc51)
          %8 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          cir.store %7, %8 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc203)
          %9 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc53)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc204)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc55)
          %12 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc205)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc205)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc58)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc58)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc206)
          cir.libc.memcpy %18 bytes from %17 to %14 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc207)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc63)
          %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc63)
          %21 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %22 = cir.const #cir.int<16> : !u64i loc(#loc208)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc209)
          %24 = cir.binop(div, %22, %23) : !u64i loc(#loc210)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc68)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc68)
          %27 = cir.binop(sub, %24, %26) : !u64i loc(#loc211)
          %28 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc70)
          %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc71)
          cir.store %20, %29 : !s8i, !cir.ptr<!s8i> loc(#loc212)
          %30 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc213)
          cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc74)
          %32 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          %33 = cir.load %32 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc75)
          %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc214)
          cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc77)
        } loc(#loc201)
      } loc(#loc186)
    } loc(#loc184)
    cir.return loc(#loc7)
  } loc(#loc183)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc216)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc80)
    cir.return loc(#loc79)
  } loc(#loc215)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc217)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc218)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc89)
  cir.func @main(%arg0: !s32i loc(fused[#loc92, #loc93]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc94, #loc95])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc220)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc221)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc91)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc96)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc96)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc97)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc98)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc98)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc99)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc86)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc222)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12_good() : () -> () loc(#loc101)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc87)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc88)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc223)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12_bad() : () -> () loc(#loc105)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc89)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc108)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc224)
    cir.return %17 : !s32i loc(#loc224)
  } loc(#loc219)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc227)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc227)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc114)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc114)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc230)
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc123)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc123)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc123)
          %8 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          cir.store %7, %8 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc231)
          %9 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc125)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc232)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc127)
          %12 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc233)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc233)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc130)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc130)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc234)
          cir.libc.memcpy %18 bytes from %17 to %14 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc235)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc135)
          %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc135)
          %21 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %22 = cir.const #cir.int<16> : !u64i loc(#loc236)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc237)
          %24 = cir.binop(div, %22, %23) : !u64i loc(#loc238)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc140)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc140)
          %27 = cir.binop(sub, %24, %26) : !u64i loc(#loc239)
          %28 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc142)
          %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc143)
          cir.store %20, %29 : !s8i, !cir.ptr<!s8i> loc(#loc240)
          %30 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc241)
          cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc146)
          %32 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          %33 = cir.load %32 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc147)
          %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc242)
          cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc149)
        } loc(#loc229)
      } else {
        cir.scope {
          %4 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc244)
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc154)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc154)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc154)
          %8 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          cir.store %7, %8 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc245)
          %9 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          %10 = cir.load %9 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc156)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc246)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc158)
          %12 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc247)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc247)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc161)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc161)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc161)
          %18 = cir.const #cir.int<16> : !u64i loc(#loc248)
          cir.libc.memcpy %18 bytes from %17 to %14 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc249)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc166)
          %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc166)
          %21 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %22 = cir.const #cir.int<16> : !u64i loc(#loc250)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc251)
          %24 = cir.binop(div, %22, %23) : !u64i loc(#loc252)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc171)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc171)
          %27 = cir.binop(sub, %24, %26) : !u64i loc(#loc253)
          %28 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc173)
          %29 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %27 : !u64i), !cir.ptr<!s8i> loc(#loc174)
          cir.store %20, %29 : !s8i, !cir.ptr<!s8i> loc(#loc254)
          %30 = cir.get_member %4[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc24)
          %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc255)
          cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc177)
          %32 = cir.get_member %4[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc19)
          %33 = cir.load %32 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc178)
          %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc256)
          cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc180)
        } loc(#loc243)
      } loc(#loc228)
    } loc(#loc226)
    cir.return loc(#loc111)
  } loc(#loc225)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":40:49)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":34:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":64:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":36:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":63:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":36:8)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":36:33)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":37:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":49:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":51:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":38:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":48:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":39:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":39:22)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":28:12)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":40:13)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":42:46)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":42:31)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":42:13)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":27:10)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":44:20)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":44:35)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":44:46)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":44:55)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":44:76)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":44:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":44:77)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":45:91)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":45:39)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":45:70)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":45:72)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":45:83)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":45:86)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":45:38)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":45:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":45:28)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":46:31)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":46:46)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":46:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":47:46)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":47:31)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":47:13)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":52:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":62:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":53:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":53:22)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":54:49)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":54:13)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":56:46)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":56:31)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":56:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":58:20)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":58:35)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":58:46)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":58:55)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":58:86)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":58:13)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":58:87)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":59:91)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":59:39)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":59:70)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":59:72)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":59:83)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":59:86)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":59:38)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":59:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":59:28)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":60:31)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":60:46)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":60:13)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":61:46)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":61:31)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":61:13)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":103:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":106:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":105:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":105:11)
#loc82 = loc("/usr/include/stdlib.h":575:1)
#loc83 = loc("/usr/include/stdlib.h":575:41)
#loc84 = loc("/usr/include/time.h":76:1)
#loc85 = loc("/usr/include/time.h":76:38)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":122:15)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":124:15)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":127:15)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":129:15)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":117:1)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":132:1)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":118:1)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":120:27)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":120:22)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":120:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":122:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":123:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":123:74)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":124:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":127:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":128:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":128:73)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":129:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":131:12)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":131:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":71:1)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":101:1)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":73:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":100:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":73:8)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":73:33)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":74:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":86:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":88:5)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":75:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":85:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":76:13)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":76:22)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":77:49)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":77:13)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":79:46)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":79:31)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":79:13)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":81:20)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":81:35)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":81:46)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":81:55)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":81:86)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":81:13)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":81:87)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":82:91)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":82:39)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":82:70)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":82:72)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":82:83)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":82:86)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":82:38)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":82:13)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":82:28)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":83:31)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":83:46)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":83:13)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":84:46)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":84:31)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":84:13)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":89:9)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":99:9)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":90:13)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":90:22)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":91:49)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":91:13)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":93:46)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":93:31)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":93:13)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":95:20)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":95:35)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":95:46)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":95:55)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":95:86)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":95:13)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":95:87)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":96:91)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":96:39)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":96:70)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":96:72)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":96:83)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":96:86)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":96:38)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":96:13)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":96:28)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":97:31)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":97:46)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":97:13)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":98:46)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":98:31)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_12.c":98:13)
#loc181 = loc(fused[#loc1, #loc2])
#loc182 = loc(fused[#loc4, #loc5])
#loc183 = loc(fused[#loc6, #loc7])
#loc184 = loc(fused[#loc8, #loc9])
#loc185 = loc(fused[#loc10, #loc11])
#loc186 = loc(fused[#loc12, #loc13, #loc14, #loc9])
#loc187 = loc(fused[#loc15, #loc16])
#loc188 = loc(fused[#loc17, #loc18])
#loc189 = loc(fused[#loc20, #loc3])
#loc190 = loc(fused[#loc22, #loc21])
#loc191 = loc(fused[#loc25, #loc26])
#loc192 = loc(fused[#loc28, #loc29])
#loc193 = loc(fused[#loc30, #loc31])
#loc194 = loc(fused[#loc33, #loc34])
#loc195 = loc(fused[#loc35, #loc36])
#loc196 = loc(fused[#loc33, #loc36])
#loc197 = loc(fused[#loc38, #loc37])
#loc198 = loc(fused[#loc39, #loc32])
#loc199 = loc(fused[#loc41, #loc42])
#loc200 = loc(fused[#loc45, #loc44])
#loc201 = loc(fused[#loc47, #loc48])
#loc202 = loc(fused[#loc49, #loc50])
#loc203 = loc(fused[#loc52, #loc51])
#loc204 = loc(fused[#loc54, #loc53])
#loc205 = loc(fused[#loc56, #loc57])
#loc206 = loc(fused[#loc59, #loc60])
#loc207 = loc(fused[#loc61, #loc62])
#loc208 = loc(fused[#loc64, #loc65])
#loc209 = loc(fused[#loc66, #loc67])
#loc210 = loc(fused[#loc64, #loc67])
#loc211 = loc(fused[#loc69, #loc68])
#loc212 = loc(fused[#loc70, #loc63])
#loc213 = loc(fused[#loc72, #loc73])
#loc214 = loc(fused[#loc76, #loc75])
#loc215 = loc(fused[#loc78, #loc79])
#loc216 = loc(fused[#loc80, #loc81])
#loc217 = loc(fused[#loc82, #loc83])
#loc218 = loc(fused[#loc84, #loc85])
#loc219 = loc(fused[#loc90, #loc91])
#loc222 = loc(fused[#loc101, #loc102])
#loc223 = loc(fused[#loc105, #loc106])
#loc224 = loc(fused[#loc109, #loc108])
#loc225 = loc(fused[#loc110, #loc111])
#loc226 = loc(fused[#loc112, #loc113])
#loc227 = loc(fused[#loc114, #loc115])
#loc228 = loc(fused[#loc116, #loc117, #loc118, #loc113])
#loc229 = loc(fused[#loc119, #loc120])
#loc230 = loc(fused[#loc121, #loc122])
#loc231 = loc(fused[#loc124, #loc123])
#loc232 = loc(fused[#loc126, #loc125])
#loc233 = loc(fused[#loc128, #loc129])
#loc234 = loc(fused[#loc131, #loc132])
#loc235 = loc(fused[#loc133, #loc134])
#loc236 = loc(fused[#loc136, #loc137])
#loc237 = loc(fused[#loc138, #loc139])
#loc238 = loc(fused[#loc136, #loc139])
#loc239 = loc(fused[#loc141, #loc140])
#loc240 = loc(fused[#loc142, #loc135])
#loc241 = loc(fused[#loc144, #loc145])
#loc242 = loc(fused[#loc148, #loc147])
#loc243 = loc(fused[#loc150, #loc151])
#loc244 = loc(fused[#loc152, #loc153])
#loc245 = loc(fused[#loc155, #loc154])
#loc246 = loc(fused[#loc157, #loc156])
#loc247 = loc(fused[#loc159, #loc160])
#loc248 = loc(fused[#loc162, #loc163])
#loc249 = loc(fused[#loc164, #loc165])
#loc250 = loc(fused[#loc167, #loc168])
#loc251 = loc(fused[#loc169, #loc170])
#loc252 = loc(fused[#loc167, #loc170])
#loc253 = loc(fused[#loc172, #loc171])
#loc254 = loc(fused[#loc173, #loc166])
#loc255 = loc(fused[#loc175, #loc176])
#loc256 = loc(fused[#loc179, #loc178])
