!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc37 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":104:10)
#loc38 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":104:14)
#loc39 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":104:20)
#loc40 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":104:32)
#loc155 = loc(fused[#loc37, #loc38])
#loc156 = loc(fused[#loc39, #loc40])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc141)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_alloca_use_04_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc7)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc7)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc146)
          %3 = cir.const #cir.int<8> : !u64i loc(#loc12)
          %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
          %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc147)
          %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
          cir.store %7, %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc146)
          %8 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc14)
          %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc15)
          cir.store %9, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc147)
          %10 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc16)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc17)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc18)
        } loc(#loc145)
      } loc(#loc144)
    } loc(#loc143)
    cir.return loc(#loc4)
  } loc(#loc142)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_alloca_use_04_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc21)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    cir.return loc(#loc20)
  } loc(#loc148)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc151)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc152)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc31)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc32)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc34)
  cir.func @main(%arg0: !s32i loc(fused[#loc37, #loc38]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc39, #loc40])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc155)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc156)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc36)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc41)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc41)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc42)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc43)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc43)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc44)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc31)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    %8 = cir.get_global @CWE758_Undefined_Behavior__int_pointer_alloca_use_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call @CWE758_Undefined_Behavior__int_pointer_alloca_use_04_good() : () -> () loc(#loc46)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc32)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc33)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    %13 = cir.get_global @CWE758_Undefined_Behavior__int_pointer_alloca_use_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call @CWE758_Undefined_Behavior__int_pointer_alloca_use_04_bad() : () -> () loc(#loc50)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc34)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc53)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.return %17 : !s32i loc(#loc159)
  } loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc55)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc160)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc161)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc64)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc64)
      cir.if %1 {
        %2 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc55)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc55)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc68)
      } else {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc166)
          %3 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc167)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc74)
          %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc74)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc74)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc74)
          cir.store %7, %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc167)
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc75)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc168)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc75)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc169)
          cir.store %11, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc170)
          cir.scope {
            %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc82)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc83)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc83)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc172)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc85)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc86)
              %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc87)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr1) loc(#loc85)
            } loc(#loc173)
          } loc(#loc171)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc88)
          %13 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
          cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc174)
          %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc91)
          %15 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc92)
          cir.store %14, %15 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc175)
          cir.scope {
            %16 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc177)
            %17 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc97)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
            cir.store %18, %16 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc177)
            %19 = cir.load deref %16 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
            %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc100)
            cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc101)
          } loc(#loc176)
        } loc(#loc165)
      } loc(#loc164)
    } loc(#loc163)
    cir.return loc(#loc61)
  } loc(#loc162)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc106)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc106)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc182)
          %3 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc183)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc113)
          %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc113)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc113)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc113)
          cir.store %7, %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc183)
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc114)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc184)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc114)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc185)
          cir.store %11, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc186)
          cir.scope {
            %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc121)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc122)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc122)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc188)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc124)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc125)
              %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc126)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr1) loc(#loc124)
            } loc(#loc189)
          } loc(#loc187)
          %12 = cir.const #cir.int<5> : !s32i loc(#loc127)
          %13 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc128)
          cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc190)
          %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc130)
          %15 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc131)
          cir.store %14, %15 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc191)
          cir.scope {
            %16 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc193)
            %17 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc136)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc137)
            cir.store %18, %16 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc193)
            %19 = cir.load deref %16 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc138)
            %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc139)
            cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc140)
          } loc(#loc192)
        } loc(#loc181)
      } loc(#loc180)
    } loc(#loc179)
    cir.return loc(#loc103)
  } loc(#loc178)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":26:1)
#loc4 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":36:1)
#loc5 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":28:5)
#loc6 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":35:5)
#loc7 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":28:8)
#loc8 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":29:5)
#loc9 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":30:9)
#loc10 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":34:9)
#loc11 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":31:13)
#loc12 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":31:40)
#loc13 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":32:13)
#loc14 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":32:27)
#loc15 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":32:26)
#loc16 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":33:27)
#loc17 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":33:26)
#loc18 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":33:13)
#loc19 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":89:1)
#loc20 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":93:1)
#loc21 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":91:5)
#loc22 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":91:11)
#loc23 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":92:5)
#loc24 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":92:11)
#loc25 = loc("/usr/include/stdlib.h":575:1)
#loc26 = loc("/usr/include/stdlib.h":575:41)
#loc27 = loc("/usr/include/time.h":76:1)
#loc28 = loc("/usr/include/time.h":76:38)
#loc29 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc31 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":109:15)
#loc32 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":111:15)
#loc33 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":114:15)
#loc34 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":116:15)
#loc35 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":104:1)
#loc36 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":119:1)
#loc41 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":105:1)
#loc42 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":107:27)
#loc43 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":107:22)
#loc44 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":107:5)
#loc45 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":109:5)
#loc46 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":110:5)
#loc47 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":110:63)
#loc48 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":111:5)
#loc49 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":114:5)
#loc50 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":115:5)
#loc51 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":115:62)
#loc52 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":116:5)
#loc53 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":118:12)
#loc54 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":118:5)
#loc55 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":48:19)
#loc56 = loc("/usr/include/stdlib.h":672:1)
#loc57 = loc("/usr/include/stdlib.h":672:45)
#loc58 = loc("/usr/include/stdlib.h":756:1)
#loc59 = loc("/usr/include/stdlib.h":756:70)
#loc60 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":43:1)
#loc61 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":66:1)
#loc62 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":45:5)
#loc63 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":65:5)
#loc64 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":45:8)
#loc65 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":46:5)
#loc66 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":49:5)
#loc67 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":51:5)
#loc68 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":48:9)
#loc69 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":52:9)
#loc70 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":64:9)
#loc71 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":53:13)
#loc72 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":53:19)
#loc73 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":54:13)
#loc74 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":54:40)
#loc75 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":56:27)
#loc76 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":56:34)
#loc77 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":56:44)
#loc78 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":56:45)
#loc79 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":56:13)
#loc80 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":57:13)
#loc81 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":57:41)
#loc82 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":57:17)
#loc83 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":57:25)
#loc84 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":57:31)
#loc85 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":57:32)
#loc86 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":57:38)
#loc87 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":57:37)
#loc88 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":58:21)
#loc89 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":58:14)
#loc90 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":58:13)
#loc91 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":59:24)
#loc92 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":59:14)
#loc93 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":59:13)
#loc94 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":60:13)
#loc95 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":63:13)
#loc96 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":61:17)
#loc97 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":61:31)
#loc98 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":61:30)
#loc99 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":62:31)
#loc100 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":62:30)
#loc101 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":62:17)
#loc102 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":69:1)
#loc103 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":87:1)
#loc104 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":71:5)
#loc105 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":86:5)
#loc106 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":71:8)
#loc107 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":72:5)
#loc108 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":73:9)
#loc109 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":85:9)
#loc110 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":74:13)
#loc111 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":74:19)
#loc112 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":75:13)
#loc113 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":75:40)
#loc114 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":77:27)
#loc115 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":77:34)
#loc116 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":77:44)
#loc117 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":77:45)
#loc118 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":77:13)
#loc119 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":78:13)
#loc120 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":78:41)
#loc121 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":78:17)
#loc122 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":78:25)
#loc123 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":78:31)
#loc124 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":78:32)
#loc125 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":78:38)
#loc126 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":78:37)
#loc127 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":79:21)
#loc128 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":79:14)
#loc129 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":79:13)
#loc130 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":80:24)
#loc131 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":80:14)
#loc132 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":80:13)
#loc133 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":81:13)
#loc134 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":84:13)
#loc135 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":82:17)
#loc136 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":82:31)
#loc137 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":82:30)
#loc138 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":83:31)
#loc139 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":83:30)
#loc140 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_04.c":83:17)
#loc141 = loc(fused[#loc1, #loc2])
#loc142 = loc(fused[#loc3, #loc4])
#loc143 = loc(fused[#loc5, #loc6])
#loc144 = loc(fused[#loc8, #loc6])
#loc145 = loc(fused[#loc9, #loc10])
#loc146 = loc(fused[#loc11, #loc12])
#loc147 = loc(fused[#loc13, #loc14])
#loc148 = loc(fused[#loc19, #loc20])
#loc149 = loc(fused[#loc21, #loc22])
#loc150 = loc(fused[#loc23, #loc24])
#loc151 = loc(fused[#loc25, #loc26])
#loc152 = loc(fused[#loc27, #loc28])
#loc153 = loc(fused[#loc29, #loc30])
#loc154 = loc(fused[#loc35, #loc36])
#loc157 = loc(fused[#loc46, #loc47])
#loc158 = loc(fused[#loc50, #loc51])
#loc159 = loc(fused[#loc54, #loc53])
#loc160 = loc(fused[#loc56, #loc57])
#loc161 = loc(fused[#loc58, #loc59])
#loc162 = loc(fused[#loc60, #loc61])
#loc163 = loc(fused[#loc62, #loc63])
#loc164 = loc(fused[#loc65, #loc66, #loc67, #loc63])
#loc165 = loc(fused[#loc69, #loc70])
#loc166 = loc(fused[#loc71, #loc72])
#loc167 = loc(fused[#loc73, #loc74])
#loc168 = loc(fused[#loc76, #loc77])
#loc169 = loc(fused[#loc75, #loc78])
#loc170 = loc(fused[#loc79, #loc78])
#loc171 = loc(fused[#loc80, #loc81])
#loc172 = loc(fused[#loc82, #loc83])
#loc173 = loc(fused[#loc84, #loc81])
#loc174 = loc(fused[#loc90, #loc88])
#loc175 = loc(fused[#loc93, #loc91])
#loc176 = loc(fused[#loc94, #loc95])
#loc177 = loc(fused[#loc96, #loc97])
#loc178 = loc(fused[#loc102, #loc103])
#loc179 = loc(fused[#loc104, #loc105])
#loc180 = loc(fused[#loc107, #loc105])
#loc181 = loc(fused[#loc108, #loc109])
#loc182 = loc(fused[#loc110, #loc111])
#loc183 = loc(fused[#loc112, #loc113])
#loc184 = loc(fused[#loc115, #loc116])
#loc185 = loc(fused[#loc114, #loc117])
#loc186 = loc(fused[#loc118, #loc117])
#loc187 = loc(fused[#loc119, #loc120])
#loc188 = loc(fused[#loc121, #loc122])
#loc189 = loc(fused[#loc123, #loc120])
#loc190 = loc(fused[#loc129, #loc127])
#loc191 = loc(fused[#loc132, #loc130])
#loc192 = loc(fused[#loc133, #loc134])
#loc193 = loc(fused[#loc135, #loc136])
