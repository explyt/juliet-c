!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc8 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":27:21)
#loc9 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":27:28)
#loc73 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":61:25)
#loc74 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":61:32)
#loc136 = loc(fused[#loc8, #loc9])
#loc162 = loc(fused[#loc73, #loc74])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"We have a match!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc3)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc134)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc8, #loc9])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc136)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc10)
    cir.br ^bb1 loc(#loc137)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc137)
  ^bb2:  // 2 preds: ^bb1, ^bb10
    %1 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %2 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc14)
    %3 = cir.cast(integral, %2 : !s8i), !s32i loc(#loc14)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc15)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc138)
    cir.brcond %5 ^bb3, ^bb11 loc(#loc16)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc139)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc140)
  ^bb5:  // pred: ^bb4
    %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %7 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc21)
    %8 = cir.cast(integral, %7 : !s8i), !s32i loc(#loc21)
    %9 = cir.const #cir.int<83> : !s32i loc(#loc22)
    %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc141)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc142)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc3)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc24)
    cir.br ^bb11 loc(#loc25)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc19)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc12)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc12)
  ^bb10:  // pred: ^bb9
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc143)
    cir.store %15, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    cir.br ^bb2 loc(#loc137)
  ^bb11:  // 2 preds: ^bb2, ^bb6
    cir.br ^bb12 loc(#loc12)
  ^bb12:  // pred: ^bb11
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
    cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc29)
    cir.return loc(#loc7)
  } loc(#loc135)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc144)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc145)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Fixed String\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc36)
  cir.func no_proto @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc148)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc149)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc42)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc149)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc43)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc44)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc44)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc150)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc151)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc43)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc152)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    cir.br ^bb1 loc(#loc154)
  ^bb1:  // pred: ^bb0
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc52)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc52)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc155)
    cir.brcond %13 ^bb2, ^bb3 loc(#loc156)
  ^bb2:  // pred: ^bb1
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc54)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc56)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc54)
    cir.br ^bb3 loc(#loc50)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc50)
  ^bb4:  // pred: ^bb3
    %17 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc57)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc60)
    cir.store %18, %21 : !s8i, !cir.ptr<!s8i> loc(#loc157)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc36)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc36)
    %25 = cir.call @strcpy(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc62)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc63)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    cir.call %26(%27) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc63)
    cir.return loc(#loc38)
  } loc(#loc147)
  cir.func no_proto @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc159)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc66)
  } loc(#loc158)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc160)
  cir.func internal private @goodB2GSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc73, #loc74])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc163)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc162)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc77)
    cir.br ^bb1 loc(#loc164)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc165)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc82)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc166)
    cir.br ^bb3 loc(#loc165)
  ^bb3:  // 2 preds: ^bb2, ^bb11
    %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc84)
    %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc85)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc85)
    %8 = cir.cmp(lt, %4, %7) : !u64i, !cir.bool loc(#loc167)
    cir.brcond %8 ^bb4, ^bb12 loc(#loc88)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc168)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc169)
  ^bb6:  // pred: ^bb5
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc93)
    %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !u64i), !cir.ptr<!s8i> loc(#loc94)
    %12 = cir.load %11 : !cir.ptr<!s8i>, !s8i loc(#loc92)
    %13 = cir.cast(integral, %12 : !s8i), !s32i loc(#loc92)
    %14 = cir.const #cir.int<83> : !s32i loc(#loc95)
    %15 = cir.cmp(eq, %13, %14) : !s32i, !cir.bool loc(#loc170)
    cir.brcond %15 ^bb7, ^bb8 loc(#loc171)
  ^bb7:  // pred: ^bb6
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc97)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    cir.br ^bb12 loc(#loc99)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc91)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc81)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc81)
  ^bb11:  // pred: ^bb10
    %18 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc100)
    %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc101)
    cir.store %19, %0 : !u64i, !cir.ptr<!u64i> loc(#loc172)
    cir.br ^bb3 loc(#loc165)
  ^bb12:  // 2 preds: ^bb3, ^bb7
    cir.br ^bb13 loc(#loc81)
  ^bb13:  // pred: ^bb12
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
    cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc103)
    cir.br ^bb14 loc(#loc79)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc72)
  } loc(#loc161)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc174)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc175)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc109)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc175)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc110)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc111)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc111)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc176)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc177)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc110)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc178)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    cir.br ^bb1 loc(#loc180)
  ^bb1:  // pred: ^bb0
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc119)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc181)
    cir.brcond %13 ^bb2, ^bb3 loc(#loc182)
  ^bb2:  // pred: ^bb1
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc121)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc123)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc121)
    cir.br ^bb3 loc(#loc117)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc117)
  ^bb4:  // pred: ^bb3
    %17 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc124)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc127)
    cir.store %18, %21 : !s8i, !cir.ptr<!s8i> loc(#loc183)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc129)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc129)
    %25 = cir.call @strcpy(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc130)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc131)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
    cir.call %26(%27) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc131)
    cir.return loc(#loc105)
  } loc(#loc173)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":35:23)
#loc4 = loc("/usr/include/stdlib.h":687:1)
#loc5 = loc("/usr/include/stdlib.h":687:32)
#loc6 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":27:1)
#loc7 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":40:1)
#loc10 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":28:1)
#loc11 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":31:5)
#loc12 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":38:5)
#loc13 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":31:13)
#loc14 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":31:12)
#loc15 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":31:21)
#loc16 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":31:18)
#loc17 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":32:5)
#loc18 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":33:9)
#loc19 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":37:9)
#loc20 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":33:14)
#loc21 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":33:13)
#loc22 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":33:22)
#loc23 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":34:9)
#loc24 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":35:13)
#loc25 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":36:13)
#loc26 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":31:31)
#loc27 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":31:27)
#loc28 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":39:10)
#loc29 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":39:5)
#loc30 = loc("/usr/include/stdlib.h":672:1)
#loc31 = loc("/usr/include/stdlib.h":672:45)
#loc32 = loc("/usr/include/stdlib.h":756:1)
#loc33 = loc("/usr/include/stdlib.h":756:70)
#loc34 = loc("/usr/include/string.h":141:1)
#loc35 = loc("/usr/include/string.h":142:14)
#loc36 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":51:18)
#loc37 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":42:1)
#loc38 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":54:1)
#loc39 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":44:5)
#loc40 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":44:12)
#loc41 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":46:5)
#loc42 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":46:32)
#loc43 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":47:20)
#loc44 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":47:27)
#loc45 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":47:31)
#loc46 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":47:42)
#loc47 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":47:43)
#loc48 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":47:5)
#loc49 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":48:5)
#loc50 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":48:33)
#loc51 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":48:9)
#loc52 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":48:17)
#loc53 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":48:23)
#loc54 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":48:24)
#loc55 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":48:30)
#loc56 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":48:29)
#loc57 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":49:15)
#loc58 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":49:5)
#loc59 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":49:10)
#loc60 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":49:11)
#loc61 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":51:12)
#loc62 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":51:5)
#loc63 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":53:5)
#loc64 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":53:13)
#loc65 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":90:1)
#loc66 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":93:1)
#loc67 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":92:5)
#loc68 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":92:13)
#loc69 = loc("/usr/include/string.h":407:1)
#loc70 = loc("/usr/include/string.h":408:33)
#loc71 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":61:1)
#loc72 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":76:1)
#loc75 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":64:9)
#loc76 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":64:16)
#loc77 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":62:1)
#loc78 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":63:5)
#loc79 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":75:5)
#loc80 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":66:9)
#loc81 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":73:9)
#loc82 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":66:16)
#loc83 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":66:14)
#loc84 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":66:19)
#loc85 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":66:23)
#loc86 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":66:30)
#loc87 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":66:34)
#loc88 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":66:21)
#loc89 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":67:9)
#loc90 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":68:13)
#loc91 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":72:13)
#loc92 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":68:17)
#loc93 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":68:22)
#loc94 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":68:23)
#loc95 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":68:28)
#loc96 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":69:13)
#loc97 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":70:27)
#loc98 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":70:17)
#loc99 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":71:17)
#loc100 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":66:38)
#loc101 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":66:37)
#loc102 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":74:14)
#loc103 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":74:9)
#loc104 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":78:1)
#loc105 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":88:1)
#loc106 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":80:5)
#loc107 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":80:12)
#loc108 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":81:5)
#loc109 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":81:32)
#loc110 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":82:20)
#loc111 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":82:27)
#loc112 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":82:31)
#loc113 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":82:42)
#loc114 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":82:43)
#loc115 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":82:5)
#loc116 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":83:5)
#loc117 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":83:33)
#loc118 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":83:9)
#loc119 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":83:17)
#loc120 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":83:23)
#loc121 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":83:24)
#loc122 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":83:30)
#loc123 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":83:29)
#loc124 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":84:15)
#loc125 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":84:5)
#loc126 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":84:10)
#loc127 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":84:11)
#loc128 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":86:12)
#loc129 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":86:18)
#loc130 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":86:5)
#loc131 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":87:5)
#loc132 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_44.c":87:13)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc4, #loc5])
#loc135 = loc(fused[#loc6, #loc7])
#loc137 = loc(fused[#loc11, #loc12])
#loc138 = loc(fused[#loc14, #loc15])
#loc139 = loc(fused[#loc17, #loc12])
#loc140 = loc(fused[#loc18, #loc19])
#loc141 = loc(fused[#loc21, #loc22])
#loc142 = loc(fused[#loc23, #loc19])
#loc143 = loc(fused[#loc27, #loc26])
#loc144 = loc(fused[#loc30, #loc31])
#loc145 = loc(fused[#loc32, #loc33])
#loc146 = loc(fused[#loc34, #loc35])
#loc147 = loc(fused[#loc37, #loc38])
#loc148 = loc(fused[#loc39, #loc40])
#loc149 = loc(fused[#loc41, #loc42])
#loc150 = loc(fused[#loc45, #loc46])
#loc151 = loc(fused[#loc44, #loc46])
#loc152 = loc(fused[#loc43, #loc47])
#loc153 = loc(fused[#loc48, #loc47])
#loc154 = loc(fused[#loc49, #loc50])
#loc155 = loc(fused[#loc51, #loc52])
#loc156 = loc(fused[#loc53, #loc50])
#loc157 = loc(fused[#loc58, #loc57])
#loc158 = loc(fused[#loc65, #loc66])
#loc159 = loc(fused[#loc67, #loc68])
#loc160 = loc(fused[#loc69, #loc70])
#loc161 = loc(fused[#loc71, #loc72])
#loc163 = loc(fused[#loc75, #loc76])
#loc164 = loc(fused[#loc78, #loc79])
#loc165 = loc(fused[#loc80, #loc81])
#loc166 = loc(fused[#loc83, #loc82])
#loc167 = loc(fused[#loc84, #loc87])
#loc168 = loc(fused[#loc89, #loc81])
#loc169 = loc(fused[#loc90, #loc91])
#loc170 = loc(fused[#loc92, #loc95])
#loc171 = loc(fused[#loc96, #loc91])
#loc172 = loc(fused[#loc101, #loc100])
#loc173 = loc(fused[#loc104, #loc105])
#loc174 = loc(fused[#loc106, #loc107])
#loc175 = loc(fused[#loc108, #loc109])
#loc176 = loc(fused[#loc112, #loc113])
#loc177 = loc(fused[#loc111, #loc113])
#loc178 = loc(fused[#loc110, #loc114])
#loc179 = loc(fused[#loc115, #loc114])
#loc180 = loc(fused[#loc116, #loc117])
#loc181 = loc(fused[#loc118, #loc119])
#loc182 = loc(fused[#loc120, #loc117])
#loc183 = loc(fused[#loc125, #loc124])
