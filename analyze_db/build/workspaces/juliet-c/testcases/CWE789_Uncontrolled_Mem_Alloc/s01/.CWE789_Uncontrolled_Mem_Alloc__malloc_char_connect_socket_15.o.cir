!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc608)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc609)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc610)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc611)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc612)
  cir.func private @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc613)
  cir.func private @close(!s32i) -> !s32i loc(#loc614)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc615)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc18)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc616)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc617)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc618)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc25)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc619)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc28)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc621)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc33)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc622)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc37)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc625)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc626)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc627)
            %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc628)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc46)
            %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc46)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc627)
            cir.scope {
              cir.do {
                cir.scope {
                  %10 = cir.const #cir.int<2> : !s32i loc(#loc53)
                  %11 = cir.const #cir.int<1> : !s32i loc(#loc54)
                  %12 = cir.const #cir.int<6> : !s32i loc(#loc55)
                  %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
                  cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc631)
                  cir.scope {
                    %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                    %56 = cir.const #cir.int<1> : !s32i loc(#loc62)
                    %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc62)
                    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc633)
                    cir.if %58 {
                      cir.break loc(#loc64)
                    } loc(#loc634)
                  } loc(#loc632)
                  %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc635)
                  %15 = cir.const #cir.int<0> : !s32i loc(#loc67)
                  %16 = cir.const #cir.int<16> : !u64i loc(#loc636)
                  cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc637)
                  %17 = cir.const #cir.int<2> : !s32i loc(#loc72)
                  %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc72)
                  %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                  cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc638)
                  %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                  %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                  %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc75)
                  %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
                  %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
                  cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc639)
                  %25 = cir.const #cir.int<27015> : !s32i loc(#loc80)
                  %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc80)
                  %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc81)
                  %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
                  cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc640)
                  cir.scope {
                    %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                    %56 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc642)
                    %57 = cir.const #cir.int<16> : !u64i loc(#loc643)
                    %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc643)
                    %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc92)
                    %60 = cir.const #cir.int<1> : !s32i loc(#loc93)
                    %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc93)
                    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc644)
                    cir.if %62 {
                      cir.break loc(#loc95)
                    } loc(#loc645)
                  } loc(#loc641)
                  %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                  %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc97)
                  %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
                  %32 = cir.const #cir.int<3> : !s32i loc(#loc98)
                  %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc98)
                  %34 = cir.const #cir.int<8> : !u64i loc(#loc98)
                  %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc98)
                  %36 = cir.const #cir.int<2> : !s32i loc(#loc98)
                  %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc98)
                  %38 = cir.binop(add, %35, %37) : !u64i loc(#loc98)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc99)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc99)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc646)
                  %42 = cir.const #cir.int<0> : !s32i loc(#loc100)
                  %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc101)
                  %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc101)
                  cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc647)
                  cir.scope {
                    %55 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                    %56 = cir.const #cir.int<1> : !s32i loc(#loc107)
                    %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc107)
                    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc649)
                    %59 = cir.ternary(%58, true {
                      %60 = cir.const #true loc(#loc108)
                      cir.yield %60 : !cir.bool loc(#loc108)
                    }, false {
                      %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                      %61 = cir.const #cir.int<0> : !s32i loc(#loc110)
                      %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc650)
                      %63 = cir.ternary(%62, true {
                        %64 = cir.const #true loc(#loc108)
                        cir.yield %64 : !cir.bool loc(#loc108)
                      }, false {
                        %64 = cir.const #false loc(#loc108)
                        cir.yield %64 : !cir.bool loc(#loc108)
                      }) : (!cir.bool) -> !cir.bool loc(#loc108)
                      cir.yield %63 : !cir.bool loc(#loc108)
                    }) : (!cir.bool) -> !cir.bool loc(#loc108)
                    cir.if %59 {
                      cir.break loc(#loc112)
                    } loc(#loc651)
                  } loc(#loc648)
                  %45 = cir.const #cir.int<0> : !s32i loc(#loc113)
                  %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc113)
                  %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                  %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc115)
                  %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc115)
                  cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc652)
                  %50 = cir.get_global @strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc116)
                  %51 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc117)
                  %52 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
                  %53 = cir.const #cir.int<0> : !s32i loc(#loc119)
                  %54 = cir.call @strtoul(%51, %52, %53) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc116)
                  cir.store %54, %0 : !u64i, !cir.ptr<!u64i> loc(#loc653)
                } loc(#loc630)
                cir.yield loc(#loc50)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc122)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc122)
                cir.condition(%11) loc(#loc122)
              } loc(#loc629)
            } loc(#loc629)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc125)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc126)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc126)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc655)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc128)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc129)
              } loc(#loc656)
            } loc(#loc654)
          } loc(#loc624)
          cir.break loc(#loc130)
        } loc(#loc38)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc18)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc18)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc132)
          cir.break loc(#loc133)
        } loc(#loc131)
        cir.yield loc(#loc35)
      } loc(#loc35)
    } loc(#loc623)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc136)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc659)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc144)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc661)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc662)
              cir.if %7 {
                %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc150)
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc151)
                %10 = cir.const #cir.int<1> : !u64i loc(#loc664)
                %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc665)
                %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc150)
                %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc666)
                cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc667)
                cir.scope {
                  %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
                  %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc159)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc159)
                  %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc669)
                  cir.if %26 {
                    %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc161)
                    %28 = cir.const #cir.int<1> : !s32i loc(#loc162)
                    %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc163)
                    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc161)
                  } loc(#loc670)
                } loc(#loc668)
                %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc164)
                %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
                %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc25)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc25)
                %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc164)
                %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
                cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc167)
                %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc168)
                %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
                %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc169)
                cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc168)
              } else {
                %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc28)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc28)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc170)
              } loc(#loc663)
            } loc(#loc660)
          } loc(#loc658)
          cir.break loc(#loc171)
        } loc(#loc137)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc173)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc173)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc174)
          cir.break loc(#loc175)
        } loc(#loc172)
        cir.yield loc(#loc134)
      } loc(#loc134)
    } loc(#loc657)
    cir.return loc(#loc30)
  } loc(#loc620)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc672)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc178)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc673)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc180)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc674)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc182)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc675)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc184)
    cir.return loc(#loc177)
  } loc(#loc671)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc186)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc677)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc191)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc191)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc678)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc195)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc681)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc682)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc683)
            %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc684)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc204)
            %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc204)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc683)
            cir.scope {
              cir.do {
                cir.scope {
                  %10 = cir.const #cir.int<2> : !s32i loc(#loc211)
                  %11 = cir.const #cir.int<1> : !s32i loc(#loc212)
                  %12 = cir.const #cir.int<6> : !s32i loc(#loc213)
                  %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc214)
                  cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc687)
                  cir.scope {
                    %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc219)
                    %56 = cir.const #cir.int<1> : !s32i loc(#loc220)
                    %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc220)
                    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc689)
                    cir.if %58 {
                      cir.break loc(#loc222)
                    } loc(#loc690)
                  } loc(#loc688)
                  %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc691)
                  %15 = cir.const #cir.int<0> : !s32i loc(#loc225)
                  %16 = cir.const #cir.int<16> : !u64i loc(#loc692)
                  cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc693)
                  %17 = cir.const #cir.int<2> : !s32i loc(#loc230)
                  %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc230)
                  %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                  cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc694)
                  %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc232)
                  %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc232)
                  %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc233)
                  %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
                  %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
                  cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc695)
                  %25 = cir.const #cir.int<27015> : !s32i loc(#loc236)
                  %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc236)
                  %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc237)
                  %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
                  cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc696)
                  cir.scope {
                    %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc242)
                    %56 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc698)
                    %57 = cir.const #cir.int<16> : !u64i loc(#loc699)
                    %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc699)
                    %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc247)
                    %60 = cir.const #cir.int<1> : !s32i loc(#loc248)
                    %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc248)
                    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc700)
                    cir.if %62 {
                      cir.break loc(#loc250)
                    } loc(#loc701)
                  } loc(#loc697)
                  %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc251)
                  %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc252)
                  %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc252)
                  %32 = cir.const #cir.int<3> : !s32i loc(#loc253)
                  %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc253)
                  %34 = cir.const #cir.int<8> : !u64i loc(#loc253)
                  %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc253)
                  %36 = cir.const #cir.int<2> : !s32i loc(#loc253)
                  %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc253)
                  %38 = cir.binop(add, %35, %37) : !u64i loc(#loc253)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc254)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc254)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc702)
                  %42 = cir.const #cir.int<0> : !s32i loc(#loc255)
                  %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc256)
                  %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc256)
                  cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc703)
                  cir.scope {
                    %55 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc261)
                    %56 = cir.const #cir.int<1> : !s32i loc(#loc262)
                    %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc262)
                    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc705)
                    %59 = cir.ternary(%58, true {
                      %60 = cir.const #true loc(#loc263)
                      cir.yield %60 : !cir.bool loc(#loc263)
                    }, false {
                      %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc264)
                      %61 = cir.const #cir.int<0> : !s32i loc(#loc265)
                      %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc706)
                      %63 = cir.ternary(%62, true {
                        %64 = cir.const #true loc(#loc263)
                        cir.yield %64 : !cir.bool loc(#loc263)
                      }, false {
                        %64 = cir.const #false loc(#loc263)
                        cir.yield %64 : !cir.bool loc(#loc263)
                      }) : (!cir.bool) -> !cir.bool loc(#loc263)
                      cir.yield %63 : !cir.bool loc(#loc263)
                    }) : (!cir.bool) -> !cir.bool loc(#loc263)
                    cir.if %59 {
                      cir.break loc(#loc267)
                    } loc(#loc707)
                  } loc(#loc704)
                  %45 = cir.const #cir.int<0> : !s32i loc(#loc268)
                  %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc268)
                  %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc269)
                  %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc270)
                  %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc270)
                  cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc708)
                  %50 = cir.get_global @strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc271)
                  %51 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc272)
                  %52 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc273)
                  %53 = cir.const #cir.int<0> : !s32i loc(#loc274)
                  %54 = cir.call @strtoul(%51, %52, %53) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc271)
                  cir.store %54, %0 : !u64i, !cir.ptr<!u64i> loc(#loc709)
                } loc(#loc686)
                cir.yield loc(#loc208)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc277)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc277)
                cir.condition(%11) loc(#loc277)
              } loc(#loc685)
            } loc(#loc685)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc280)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc281)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc281)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc711)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc283)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc284)
              } loc(#loc712)
            } loc(#loc710)
          } loc(#loc680)
          cir.break loc(#loc285)
        } loc(#loc196)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc287)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc287)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc288)
          cir.break loc(#loc289)
        } loc(#loc286)
        cir.yield loc(#loc193)
      } loc(#loc193)
    } loc(#loc679)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc292)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc294)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc294)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc295)
          cir.break loc(#loc296)
        } loc(#loc293)
        cir.case(default, []) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc715)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc304)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc717)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc718)
              %8 = cir.ternary(%7, true {
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc308)
                %10 = cir.const #cir.int<100> : !s32i loc(#loc309)
                %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc309)
                %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc719)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc307)
                  cir.yield %14 : !cir.bool loc(#loc307)
                }, false {
                  %14 = cir.const #false loc(#loc307)
                  cir.yield %14 : !cir.bool loc(#loc307)
                }) : (!cir.bool) -> !cir.bool loc(#loc307)
                cir.yield %13 : !cir.bool loc(#loc307)
              }, false {
                %9 = cir.const #false loc(#loc307)
                cir.yield %9 : !cir.bool loc(#loc307)
              }) : (!cir.bool) -> !cir.bool loc(#loc307)
              cir.if %8 {
                %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc313)
                %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc314)
                %11 = cir.const #cir.int<1> : !u64i loc(#loc721)
                %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc722)
                %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc313)
                %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc723)
                cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc724)
                cir.scope {
                  %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc321)
                  %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc322)
                  %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc322)
                  %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc726)
                  cir.if %27 {
                    %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc324)
                    %29 = cir.const #cir.int<1> : !s32i loc(#loc325)
                    %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc326)
                    cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc324)
                  } loc(#loc727)
                } loc(#loc725)
                %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc327)
                %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc328)
                %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc329)
                %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc329)
                %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc327)
                %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc330)
                cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc331)
                %21 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc332)
                %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc333)
                %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc333)
                cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc332)
              } else {
                %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc186)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc186)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc334)
              } loc(#loc720)
            } loc(#loc716)
          } loc(#loc714)
          cir.break loc(#loc335)
        } loc(#loc297)
        cir.yield loc(#loc290)
      } loc(#loc290)
    } loc(#loc713)
    cir.return loc(#loc188)
  } loc(#loc676)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc729)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc340)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc340)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc730)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc344)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc733)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc734)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc735)
            %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc736)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc353)
            %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc353)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc735)
            cir.scope {
              cir.do {
                cir.scope {
                  %10 = cir.const #cir.int<2> : !s32i loc(#loc360)
                  %11 = cir.const #cir.int<1> : !s32i loc(#loc361)
                  %12 = cir.const #cir.int<6> : !s32i loc(#loc362)
                  %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc363)
                  cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc739)
                  cir.scope {
                    %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc368)
                    %56 = cir.const #cir.int<1> : !s32i loc(#loc369)
                    %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc369)
                    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc741)
                    cir.if %58 {
                      cir.break loc(#loc371)
                    } loc(#loc742)
                  } loc(#loc740)
                  %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc743)
                  %15 = cir.const #cir.int<0> : !s32i loc(#loc374)
                  %16 = cir.const #cir.int<16> : !u64i loc(#loc744)
                  cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc745)
                  %17 = cir.const #cir.int<2> : !s32i loc(#loc379)
                  %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc379)
                  %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                  cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc746)
                  %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc381)
                  %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc381)
                  %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc382)
                  %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
                  %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
                  cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc747)
                  %25 = cir.const #cir.int<27015> : !s32i loc(#loc385)
                  %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc385)
                  %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc386)
                  %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
                  cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc748)
                  cir.scope {
                    %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc391)
                    %56 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc750)
                    %57 = cir.const #cir.int<16> : !u64i loc(#loc751)
                    %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc751)
                    %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc396)
                    %60 = cir.const #cir.int<1> : !s32i loc(#loc397)
                    %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc397)
                    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc752)
                    cir.if %62 {
                      cir.break loc(#loc399)
                    } loc(#loc753)
                  } loc(#loc749)
                  %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc400)
                  %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc401)
                  %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc401)
                  %32 = cir.const #cir.int<3> : !s32i loc(#loc402)
                  %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc402)
                  %34 = cir.const #cir.int<8> : !u64i loc(#loc402)
                  %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc402)
                  %36 = cir.const #cir.int<2> : !s32i loc(#loc402)
                  %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc402)
                  %38 = cir.binop(add, %35, %37) : !u64i loc(#loc402)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc403)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc403)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc754)
                  %42 = cir.const #cir.int<0> : !s32i loc(#loc404)
                  %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc405)
                  %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc405)
                  cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc755)
                  cir.scope {
                    %55 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc410)
                    %56 = cir.const #cir.int<1> : !s32i loc(#loc411)
                    %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc411)
                    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc757)
                    %59 = cir.ternary(%58, true {
                      %60 = cir.const #true loc(#loc412)
                      cir.yield %60 : !cir.bool loc(#loc412)
                    }, false {
                      %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc413)
                      %61 = cir.const #cir.int<0> : !s32i loc(#loc414)
                      %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc758)
                      %63 = cir.ternary(%62, true {
                        %64 = cir.const #true loc(#loc412)
                        cir.yield %64 : !cir.bool loc(#loc412)
                      }, false {
                        %64 = cir.const #false loc(#loc412)
                        cir.yield %64 : !cir.bool loc(#loc412)
                      }) : (!cir.bool) -> !cir.bool loc(#loc412)
                      cir.yield %63 : !cir.bool loc(#loc412)
                    }) : (!cir.bool) -> !cir.bool loc(#loc412)
                    cir.if %59 {
                      cir.break loc(#loc416)
                    } loc(#loc759)
                  } loc(#loc756)
                  %45 = cir.const #cir.int<0> : !s32i loc(#loc417)
                  %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc417)
                  %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc418)
                  %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc419)
                  %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc419)
                  cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc760)
                  %50 = cir.get_global @strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc420)
                  %51 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc421)
                  %52 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc422)
                  %53 = cir.const #cir.int<0> : !s32i loc(#loc423)
                  %54 = cir.call @strtoul(%51, %52, %53) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc420)
                  cir.store %54, %0 : !u64i, !cir.ptr<!u64i> loc(#loc761)
                } loc(#loc738)
                cir.yield loc(#loc357)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc426)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc426)
                cir.condition(%11) loc(#loc426)
              } loc(#loc737)
            } loc(#loc737)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc429)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc430)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc430)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc763)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc432)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc433)
              } loc(#loc764)
            } loc(#loc762)
          } loc(#loc732)
          cir.break loc(#loc434)
        } loc(#loc345)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc436)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc436)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc437)
          cir.break loc(#loc438)
        } loc(#loc435)
        cir.yield loc(#loc342)
      } loc(#loc342)
    } loc(#loc731)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc441)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc767)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc449)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc769)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc770)
              %8 = cir.ternary(%7, true {
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc453)
                %10 = cir.const #cir.int<100> : !s32i loc(#loc454)
                %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc454)
                %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc771)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc452)
                  cir.yield %14 : !cir.bool loc(#loc452)
                }, false {
                  %14 = cir.const #false loc(#loc452)
                  cir.yield %14 : !cir.bool loc(#loc452)
                }) : (!cir.bool) -> !cir.bool loc(#loc452)
                cir.yield %13 : !cir.bool loc(#loc452)
              }, false {
                %9 = cir.const #false loc(#loc452)
                cir.yield %9 : !cir.bool loc(#loc452)
              }) : (!cir.bool) -> !cir.bool loc(#loc452)
              cir.if %8 {
                %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc458)
                %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc459)
                %11 = cir.const #cir.int<1> : !u64i loc(#loc773)
                %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc774)
                %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc458)
                %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc775)
                cir.store %14, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc776)
                cir.scope {
                  %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc466)
                  %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc467)
                  %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc467)
                  %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc778)
                  cir.if %27 {
                    %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc469)
                    %29 = cir.const #cir.int<1> : !s32i loc(#loc470)
                    %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc471)
                    cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc469)
                  } loc(#loc779)
                } loc(#loc777)
                %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc472)
                %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc473)
                %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc474)
                %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc474)
                %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc472)
                %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc475)
                cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc476)
                %21 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc477)
                %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc478)
                %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc478)
                cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc477)
              } else {
                %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc479)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc479)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc480)
              } loc(#loc772)
            } loc(#loc768)
          } loc(#loc766)
          cir.break loc(#loc481)
        } loc(#loc442)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc483)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc483)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc484)
          cir.break loc(#loc485)
        } loc(#loc482)
        cir.yield loc(#loc439)
      } loc(#loc439)
    } loc(#loc765)
    cir.return loc(#loc337)
  } loc(#loc728)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc781)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc490)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc490)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc782)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc494)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc496)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc496)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc497)
          cir.break loc(#loc498)
        } loc(#loc495)
        cir.case(default, []) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc500)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc500)
          cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc784)
          cir.break loc(#loc502)
        } loc(#loc499)
        cir.yield loc(#loc492)
      } loc(#loc492)
    } loc(#loc783)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc505)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc787)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc513)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc789)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc790)
              cir.if %7 {
                %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc519)
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc520)
                %10 = cir.const #cir.int<1> : !u64i loc(#loc792)
                %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc793)
                %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc519)
                %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc794)
                cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc795)
                cir.scope {
                  %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc527)
                  %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc528)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc528)
                  %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc797)
                  cir.if %26 {
                    %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc530)
                    %28 = cir.const #cir.int<1> : !s32i loc(#loc531)
                    %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc532)
                    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc530)
                  } loc(#loc798)
                } loc(#loc796)
                %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc533)
                %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc534)
                %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc535)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc535)
                %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc533)
                %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc536)
                cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc537)
                %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc538)
                %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc539)
                %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc539)
                cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc538)
              } else {
                %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc540)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc540)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc541)
              } loc(#loc791)
            } loc(#loc788)
          } loc(#loc786)
          cir.break loc(#loc542)
        } loc(#loc506)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc544)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc544)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc545)
          cir.break loc(#loc546)
        } loc(#loc543)
        cir.yield loc(#loc503)
      } loc(#loc503)
    } loc(#loc785)
    cir.return loc(#loc487)
  } loc(#loc780)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc800)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc551)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc551)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc801)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc555)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc557)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc557)
          cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc803)
          cir.break loc(#loc559)
        } loc(#loc556)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc561)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc561)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc562)
          cir.break loc(#loc563)
        } loc(#loc560)
        cir.yield loc(#loc553)
      } loc(#loc553)
    } loc(#loc802)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc566)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc806)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc574)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc808)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc809)
              cir.if %7 {
                %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc580)
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc581)
                %10 = cir.const #cir.int<1> : !u64i loc(#loc811)
                %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc812)
                %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc580)
                %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc813)
                cir.store %13, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc814)
                cir.scope {
                  %23 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc588)
                  %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc589)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc589)
                  %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc816)
                  cir.if %26 {
                    %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc591)
                    %28 = cir.const #cir.int<1> : !s32i loc(#loc592)
                    %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc593)
                    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc591)
                  } loc(#loc817)
                } loc(#loc815)
                %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc594)
                %15 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc595)
                %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc596)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc596)
                %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc594)
                %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc597)
                cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc598)
                %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc599)
                %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc600)
                %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc600)
                cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc599)
              } else {
                %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc601)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc601)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc602)
              } loc(#loc810)
            } loc(#loc807)
          } loc(#loc805)
          cir.break loc(#loc603)
        } loc(#loc567)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc605)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc605)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc606)
          cir.break loc(#loc607)
        } loc(#loc604)
        cir.yield loc(#loc564)
      } loc(#loc564)
    } loc(#loc804)
    cir.return loc(#loc548)
  } loc(#loc799)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":84:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":181:1)
#loc13 = loc("/usr/include/stdlib.h":183:14)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":117:19)
#loc19 = loc("/usr/include/stdlib.h":672:1)
#loc20 = loc("/usr/include/stdlib.h":672:45)
#loc21 = loc("/usr/include/stdlib.h":756:1)
#loc22 = loc("/usr/include/stdlib.h":756:70)
#loc23 = loc("/usr/include/string.h":141:1)
#loc24 = loc("/usr/include/string.h":142:14)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":133:30)
#loc26 = loc("/usr/include/stdlib.h":687:1)
#loc27 = loc("/usr/include/stdlib.h":687:32)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":139:23)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":50:1)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":148:1)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":52:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":52:12)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":54:12)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":54:5)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":55:5)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":119:5)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":55:12)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":57:5)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":58:5)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":113:5)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":63:9)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":63:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":64:9)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":64:28)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":65:9)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":65:32)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":66:9)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":66:41)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":67:9)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":102:17)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":68:9)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":101:9)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":77:36)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":77:45)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":77:58)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":77:29)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":77:13)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":77:69)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":78:13)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":81:13)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":78:17)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":78:34)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":79:13)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":80:17)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":82:20)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":82:21)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":82:30)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":82:33)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":82:47)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":82:13)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":82:48)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":83:34)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":83:13)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":84:39)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":84:13)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":84:59)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":85:38)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":85:32)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":85:13)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":85:46)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":86:13)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":89:13)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":86:25)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":86:58)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":86:59)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":86:68)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":86:82)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":86:17)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":86:88)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":87:13)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":88:17)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":92:31)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":92:46)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":92:59)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":92:77)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":92:80)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":92:26)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":92:13)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":92:81)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":93:13)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":96:13)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":93:17)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":93:31)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":93:44)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":93:47)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":93:61)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":94:13)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":95:17)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":98:39)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":98:25)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":98:13)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":100:20)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":100:28)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":100:41)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":100:47)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":100:13)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":100:48)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":102:16)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":103:9)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":106:9)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":103:13)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":103:30)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":104:9)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":105:26)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":105:13)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":114:5)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":115:5)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":117:9)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":118:9)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":120:5)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":147:5)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":120:12)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":122:5)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":123:5)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":141:5)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":124:9)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":124:16)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":128:9)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":140:9)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":128:13)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":128:20)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":128:39)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":129:9)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":136:9)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":138:9)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":130:32)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":130:39)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":130:44)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":130:55)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":130:56)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":130:13)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":131:13)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":131:45)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":131:17)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":131:29)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":131:35)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":131:36)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":131:42)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":131:41)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":133:13)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":133:20)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":134:23)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":134:13)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":135:13)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":135:18)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":139:13)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":142:5)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":143:5)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":145:19)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":145:9)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":146:9)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":450:1)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":456:1)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":452:5)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":452:14)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":453:5)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":453:14)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":454:5)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":454:14)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":455:5)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":455:14)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":248:23)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":155:1)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":253:1)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":157:5)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":157:12)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":159:12)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":159:5)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":160:5)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":224:5)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":160:12)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":162:5)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":163:5)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":218:5)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":168:9)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":168:13)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":169:9)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":169:28)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":170:9)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":170:32)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":171:9)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":171:41)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":172:9)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":207:17)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":173:9)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":206:9)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":182:36)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":182:45)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":182:58)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":182:29)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":182:13)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":182:69)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":183:13)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":186:13)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":183:17)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":183:34)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":184:13)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":185:17)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":187:20)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":187:21)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":187:30)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":187:33)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":187:47)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":187:13)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":187:48)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":188:34)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":188:13)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":189:49)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":189:39)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":189:13)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":189:59)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":190:38)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":190:32)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":190:13)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":190:46)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":191:13)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":194:13)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":191:25)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":191:58)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":191:59)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":191:68)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":191:82)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":191:17)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":191:88)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":192:13)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":193:17)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":197:31)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":197:46)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":197:59)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":197:77)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":197:80)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":197:26)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":197:13)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":197:81)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":198:13)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":201:13)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":198:17)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":198:31)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":198:44)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":198:47)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":198:61)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":199:13)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":200:17)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":203:39)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":203:25)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":203:13)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":205:20)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":205:28)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":205:41)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":205:47)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":205:13)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":205:48)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":207:16)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":208:9)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":211:9)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":208:13)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":208:30)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":209:9)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":210:26)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":210:13)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":219:5)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":220:5)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":222:19)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":222:9)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":223:9)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":225:5)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":252:5)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":225:12)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":227:5)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":229:19)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":229:9)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":230:9)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":231:5)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":232:5)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":250:5)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":233:9)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":233:16)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":237:9)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":249:9)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":237:13)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":237:20)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":237:39)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":237:41)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":237:44)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":237:51)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":238:9)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":245:9)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":247:9)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":239:32)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":239:39)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":239:44)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":239:55)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":239:56)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":239:13)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":240:13)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":240:45)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":240:17)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":240:29)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":240:35)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":240:36)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":240:42)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":240:41)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":242:13)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":242:20)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":242:30)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":243:23)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":243:13)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":244:13)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":244:18)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":248:13)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":251:5)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":256:1)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":354:1)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":258:5)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":258:12)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":260:12)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":260:5)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":261:5)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":325:5)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":261:12)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":263:5)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":264:5)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":319:5)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":269:9)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":269:13)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":270:9)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":270:28)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":271:9)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":271:32)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":272:9)
#loc355 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":272:41)
#loc356 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":273:9)
#loc357 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":308:17)
#loc358 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":274:9)
#loc359 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":307:9)
#loc360 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":283:36)
#loc361 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":283:45)
#loc362 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":283:58)
#loc363 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":283:29)
#loc364 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":283:13)
#loc365 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":283:69)
#loc366 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":284:13)
#loc367 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":287:13)
#loc368 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":284:17)
#loc369 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":284:34)
#loc370 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":285:13)
#loc371 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":286:17)
#loc372 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":288:20)
#loc373 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":288:21)
#loc374 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":288:30)
#loc375 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":288:33)
#loc376 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":288:47)
#loc377 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":288:13)
#loc378 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":288:48)
#loc379 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":289:34)
#loc380 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":289:13)
#loc381 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":290:49)
#loc382 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":290:39)
#loc383 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":290:13)
#loc384 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":290:59)
#loc385 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":291:38)
#loc386 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":291:32)
#loc387 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":291:13)
#loc388 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":291:46)
#loc389 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":292:13)
#loc390 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":295:13)
#loc391 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":292:25)
#loc392 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":292:58)
#loc393 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":292:59)
#loc394 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":292:68)
#loc395 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":292:82)
#loc396 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":292:17)
#loc397 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":292:88)
#loc398 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":293:13)
#loc399 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":294:17)
#loc400 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":298:31)
#loc401 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":298:46)
#loc402 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":298:59)
#loc403 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":298:77)
#loc404 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":298:80)
#loc405 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":298:26)
#loc406 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":298:13)
#loc407 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":298:81)
#loc408 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":299:13)
#loc409 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":302:13)
#loc410 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":299:17)
#loc411 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":299:31)
#loc412 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":299:44)
#loc413 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":299:47)
#loc414 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":299:61)
#loc415 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":300:13)
#loc416 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":301:17)
#loc417 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":304:39)
#loc418 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":304:25)
#loc419 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":304:13)
#loc420 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":306:20)
#loc421 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":306:28)
#loc422 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":306:41)
#loc423 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":306:47)
#loc424 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":306:13)
#loc425 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":306:48)
#loc426 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":308:16)
#loc427 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":309:9)
#loc428 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":312:9)
#loc429 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":309:13)
#loc430 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":309:30)
#loc431 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":310:9)
#loc432 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":311:26)
#loc433 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":311:13)
#loc434 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":320:5)
#loc435 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":321:5)
#loc436 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":323:19)
#loc437 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":323:9)
#loc438 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":324:9)
#loc439 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":326:5)
#loc440 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":353:5)
#loc441 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":326:12)
#loc442 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":328:5)
#loc443 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":329:5)
#loc444 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":347:5)
#loc445 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":330:9)
#loc446 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":330:16)
#loc447 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":334:9)
#loc448 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":346:9)
#loc449 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":334:13)
#loc450 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":334:20)
#loc451 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":334:39)
#loc452 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":334:41)
#loc453 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":334:44)
#loc454 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":334:51)
#loc455 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":335:9)
#loc456 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":342:9)
#loc457 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":344:9)
#loc458 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":336:32)
#loc459 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":336:39)
#loc460 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":336:44)
#loc461 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":336:55)
#loc462 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":336:56)
#loc463 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":336:13)
#loc464 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":337:13)
#loc465 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":337:45)
#loc466 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":337:17)
#loc467 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":337:29)
#loc468 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":337:35)
#loc469 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":337:36)
#loc470 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":337:42)
#loc471 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":337:41)
#loc472 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":339:13)
#loc473 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":339:20)
#loc474 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":339:30)
#loc475 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":340:23)
#loc476 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":340:13)
#loc477 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":341:13)
#loc478 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":341:18)
#loc479 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":345:23)
#loc480 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":345:13)
#loc481 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":348:5)
#loc482 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":349:5)
#loc483 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":351:19)
#loc484 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":351:9)
#loc485 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":352:9)
#loc486 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":357:1)
#loc487 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":401:1)
#loc488 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":359:5)
#loc489 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":359:12)
#loc490 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":361:12)
#loc491 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":361:5)
#loc492 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":362:5)
#loc493 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":372:5)
#loc494 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":362:12)
#loc495 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":364:5)
#loc496 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":366:19)
#loc497 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":366:9)
#loc498 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":367:9)
#loc499 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":368:5)
#loc500 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":370:16)
#loc501 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":370:9)
#loc502 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":371:9)
#loc503 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":373:5)
#loc504 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":400:5)
#loc505 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":373:12)
#loc506 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":375:5)
#loc507 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":376:5)
#loc508 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":394:5)
#loc509 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":377:9)
#loc510 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":377:16)
#loc511 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":381:9)
#loc512 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":393:9)
#loc513 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":381:13)
#loc514 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":381:20)
#loc515 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":381:39)
#loc516 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":382:9)
#loc517 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":389:9)
#loc518 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":391:9)
#loc519 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":383:32)
#loc520 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":383:39)
#loc521 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":383:44)
#loc522 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":383:55)
#loc523 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":383:56)
#loc524 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":383:13)
#loc525 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":384:13)
#loc526 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":384:45)
#loc527 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":384:17)
#loc528 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":384:29)
#loc529 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":384:35)
#loc530 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":384:36)
#loc531 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":384:42)
#loc532 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":384:41)
#loc533 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":386:13)
#loc534 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":386:20)
#loc535 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":386:30)
#loc536 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":387:23)
#loc537 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":387:13)
#loc538 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":388:13)
#loc539 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":388:18)
#loc540 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":392:23)
#loc541 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":392:13)
#loc542 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":395:5)
#loc543 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":396:5)
#loc544 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":398:19)
#loc545 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":398:9)
#loc546 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":399:9)
#loc547 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":404:1)
#loc548 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":448:1)
#loc549 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":406:5)
#loc550 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":406:12)
#loc551 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":408:12)
#loc552 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":408:5)
#loc553 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":409:5)
#loc554 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":419:5)
#loc555 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":409:12)
#loc556 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":411:5)
#loc557 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":413:16)
#loc558 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":413:9)
#loc559 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":414:9)
#loc560 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":415:5)
#loc561 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":417:19)
#loc562 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":417:9)
#loc563 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":418:9)
#loc564 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":420:5)
#loc565 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":447:5)
#loc566 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":420:12)
#loc567 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":422:5)
#loc568 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":423:5)
#loc569 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":441:5)
#loc570 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":424:9)
#loc571 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":424:16)
#loc572 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":428:9)
#loc573 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":440:9)
#loc574 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":428:13)
#loc575 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":428:20)
#loc576 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":428:39)
#loc577 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":429:9)
#loc578 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":436:9)
#loc579 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":438:9)
#loc580 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":430:32)
#loc581 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":430:39)
#loc582 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":430:44)
#loc583 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":430:55)
#loc584 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":430:56)
#loc585 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":430:13)
#loc586 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":431:13)
#loc587 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":431:45)
#loc588 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":431:17)
#loc589 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":431:29)
#loc590 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":431:35)
#loc591 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":431:36)
#loc592 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":431:42)
#loc593 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":431:41)
#loc594 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":433:13)
#loc595 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":433:20)
#loc596 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":433:30)
#loc597 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":434:23)
#loc598 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":434:13)
#loc599 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":435:13)
#loc600 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":435:18)
#loc601 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":439:23)
#loc602 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":439:13)
#loc603 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":442:5)
#loc604 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":443:5)
#loc605 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":445:19)
#loc606 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":445:9)
#loc607 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_15.c":446:9)
#loc608 = loc(fused[#loc1, #loc2])
#loc609 = loc(fused[#loc3, #loc4])
#loc610 = loc(fused[#loc6, #loc7])
#loc611 = loc(fused[#loc8, #loc9])
#loc612 = loc(fused[#loc10, #loc11])
#loc613 = loc(fused[#loc12, #loc13])
#loc614 = loc(fused[#loc14, #loc15])
#loc615 = loc(fused[#loc16, #loc17])
#loc616 = loc(fused[#loc19, #loc20])
#loc617 = loc(fused[#loc21, #loc22])
#loc618 = loc(fused[#loc23, #loc24])
#loc619 = loc(fused[#loc26, #loc27])
#loc620 = loc(fused[#loc29, #loc30])
#loc621 = loc(fused[#loc31, #loc32])
#loc622 = loc(fused[#loc34, #loc33])
#loc623 = loc(fused[#loc35, #loc36])
#loc624 = loc(fused[#loc39, #loc40])
#loc625 = loc(fused[#loc41, #loc42])
#loc626 = loc(fused[#loc43, #loc44])
#loc627 = loc(fused[#loc45, #loc46])
#loc628 = loc(fused[#loc47, #loc48])
#loc629 = loc(fused[#loc49, #loc50])
#loc630 = loc(fused[#loc51, #loc52])
#loc631 = loc(fused[#loc57, #loc58])
#loc632 = loc(fused[#loc59, #loc60])
#loc633 = loc(fused[#loc61, #loc62])
#loc634 = loc(fused[#loc63, #loc60])
#loc635 = loc(fused[#loc65, #loc66])
#loc636 = loc(fused[#loc68, #loc69])
#loc637 = loc(fused[#loc70, #loc71])
#loc638 = loc(fused[#loc74, #loc72])
#loc639 = loc(fused[#loc78, #loc79])
#loc640 = loc(fused[#loc83, #loc84])
#loc641 = loc(fused[#loc85, #loc86])
#loc642 = loc(fused[#loc88, #loc89])
#loc643 = loc(fused[#loc90, #loc91])
#loc644 = loc(fused[#loc92, #loc93])
#loc645 = loc(fused[#loc94, #loc86])
#loc646 = loc(fused[#loc98, #loc99])
#loc647 = loc(fused[#loc102, #loc103])
#loc648 = loc(fused[#loc104, #loc105])
#loc649 = loc(fused[#loc106, #loc107])
#loc650 = loc(fused[#loc109, #loc110])
#loc651 = loc(fused[#loc111, #loc105])
#loc652 = loc(fused[#loc115, #loc113])
#loc653 = loc(fused[#loc120, #loc121])
#loc654 = loc(fused[#loc123, #loc124])
#loc655 = loc(fused[#loc125, #loc126])
#loc656 = loc(fused[#loc127, #loc124])
#loc657 = loc(fused[#loc134, #loc135])
#loc658 = loc(fused[#loc138, #loc139])
#loc659 = loc(fused[#loc140, #loc141])
#loc660 = loc(fused[#loc142, #loc143])
#loc661 = loc(fused[#loc145, #loc146])
#loc662 = loc(fused[#loc144, #loc146])
#loc663 = loc(fused[#loc147, #loc148, #loc149, #loc143])
#loc664 = loc(fused[#loc152, #loc153])
#loc665 = loc(fused[#loc151, #loc153])
#loc666 = loc(fused[#loc150, #loc154])
#loc667 = loc(fused[#loc155, #loc154])
#loc668 = loc(fused[#loc156, #loc157])
#loc669 = loc(fused[#loc158, #loc159])
#loc670 = loc(fused[#loc160, #loc157])
#loc671 = loc(fused[#loc176, #loc177])
#loc672 = loc(fused[#loc178, #loc179])
#loc673 = loc(fused[#loc180, #loc181])
#loc674 = loc(fused[#loc182, #loc183])
#loc675 = loc(fused[#loc184, #loc185])
#loc676 = loc(fused[#loc187, #loc188])
#loc677 = loc(fused[#loc189, #loc190])
#loc678 = loc(fused[#loc192, #loc191])
#loc679 = loc(fused[#loc193, #loc194])
#loc680 = loc(fused[#loc197, #loc198])
#loc681 = loc(fused[#loc199, #loc200])
#loc682 = loc(fused[#loc201, #loc202])
#loc683 = loc(fused[#loc203, #loc204])
#loc684 = loc(fused[#loc205, #loc206])
#loc685 = loc(fused[#loc207, #loc208])
#loc686 = loc(fused[#loc209, #loc210])
#loc687 = loc(fused[#loc215, #loc216])
#loc688 = loc(fused[#loc217, #loc218])
#loc689 = loc(fused[#loc219, #loc220])
#loc690 = loc(fused[#loc221, #loc218])
#loc691 = loc(fused[#loc223, #loc224])
#loc692 = loc(fused[#loc226, #loc227])
#loc693 = loc(fused[#loc228, #loc229])
#loc694 = loc(fused[#loc231, #loc230])
#loc695 = loc(fused[#loc234, #loc235])
#loc696 = loc(fused[#loc238, #loc239])
#loc697 = loc(fused[#loc240, #loc241])
#loc698 = loc(fused[#loc243, #loc244])
#loc699 = loc(fused[#loc245, #loc246])
#loc700 = loc(fused[#loc247, #loc248])
#loc701 = loc(fused[#loc249, #loc241])
#loc702 = loc(fused[#loc253, #loc254])
#loc703 = loc(fused[#loc257, #loc258])
#loc704 = loc(fused[#loc259, #loc260])
#loc705 = loc(fused[#loc261, #loc262])
#loc706 = loc(fused[#loc264, #loc265])
#loc707 = loc(fused[#loc266, #loc260])
#loc708 = loc(fused[#loc270, #loc268])
#loc709 = loc(fused[#loc275, #loc276])
#loc710 = loc(fused[#loc278, #loc279])
#loc711 = loc(fused[#loc280, #loc281])
#loc712 = loc(fused[#loc282, #loc279])
#loc713 = loc(fused[#loc290, #loc291])
#loc714 = loc(fused[#loc298, #loc299])
#loc715 = loc(fused[#loc300, #loc301])
#loc716 = loc(fused[#loc302, #loc303])
#loc717 = loc(fused[#loc305, #loc306])
#loc718 = loc(fused[#loc304, #loc306])
#loc719 = loc(fused[#loc308, #loc309])
#loc720 = loc(fused[#loc310, #loc311, #loc312, #loc303])
#loc721 = loc(fused[#loc315, #loc316])
#loc722 = loc(fused[#loc314, #loc316])
#loc723 = loc(fused[#loc313, #loc317])
#loc724 = loc(fused[#loc318, #loc317])
#loc725 = loc(fused[#loc319, #loc320])
#loc726 = loc(fused[#loc321, #loc322])
#loc727 = loc(fused[#loc323, #loc320])
#loc728 = loc(fused[#loc336, #loc337])
#loc729 = loc(fused[#loc338, #loc339])
#loc730 = loc(fused[#loc341, #loc340])
#loc731 = loc(fused[#loc342, #loc343])
#loc732 = loc(fused[#loc346, #loc347])
#loc733 = loc(fused[#loc348, #loc349])
#loc734 = loc(fused[#loc350, #loc351])
#loc735 = loc(fused[#loc352, #loc353])
#loc736 = loc(fused[#loc354, #loc355])
#loc737 = loc(fused[#loc356, #loc357])
#loc738 = loc(fused[#loc358, #loc359])
#loc739 = loc(fused[#loc364, #loc365])
#loc740 = loc(fused[#loc366, #loc367])
#loc741 = loc(fused[#loc368, #loc369])
#loc742 = loc(fused[#loc370, #loc367])
#loc743 = loc(fused[#loc372, #loc373])
#loc744 = loc(fused[#loc375, #loc376])
#loc745 = loc(fused[#loc377, #loc378])
#loc746 = loc(fused[#loc380, #loc379])
#loc747 = loc(fused[#loc383, #loc384])
#loc748 = loc(fused[#loc387, #loc388])
#loc749 = loc(fused[#loc389, #loc390])
#loc750 = loc(fused[#loc392, #loc393])
#loc751 = loc(fused[#loc394, #loc395])
#loc752 = loc(fused[#loc396, #loc397])
#loc753 = loc(fused[#loc398, #loc390])
#loc754 = loc(fused[#loc402, #loc403])
#loc755 = loc(fused[#loc406, #loc407])
#loc756 = loc(fused[#loc408, #loc409])
#loc757 = loc(fused[#loc410, #loc411])
#loc758 = loc(fused[#loc413, #loc414])
#loc759 = loc(fused[#loc415, #loc409])
#loc760 = loc(fused[#loc419, #loc417])
#loc761 = loc(fused[#loc424, #loc425])
#loc762 = loc(fused[#loc427, #loc428])
#loc763 = loc(fused[#loc429, #loc430])
#loc764 = loc(fused[#loc431, #loc428])
#loc765 = loc(fused[#loc439, #loc440])
#loc766 = loc(fused[#loc443, #loc444])
#loc767 = loc(fused[#loc445, #loc446])
#loc768 = loc(fused[#loc447, #loc448])
#loc769 = loc(fused[#loc450, #loc451])
#loc770 = loc(fused[#loc449, #loc451])
#loc771 = loc(fused[#loc453, #loc454])
#loc772 = loc(fused[#loc455, #loc456, #loc457, #loc448])
#loc773 = loc(fused[#loc460, #loc461])
#loc774 = loc(fused[#loc459, #loc461])
#loc775 = loc(fused[#loc458, #loc462])
#loc776 = loc(fused[#loc463, #loc462])
#loc777 = loc(fused[#loc464, #loc465])
#loc778 = loc(fused[#loc466, #loc467])
#loc779 = loc(fused[#loc468, #loc465])
#loc780 = loc(fused[#loc486, #loc487])
#loc781 = loc(fused[#loc488, #loc489])
#loc782 = loc(fused[#loc491, #loc490])
#loc783 = loc(fused[#loc492, #loc493])
#loc784 = loc(fused[#loc501, #loc500])
#loc785 = loc(fused[#loc503, #loc504])
#loc786 = loc(fused[#loc507, #loc508])
#loc787 = loc(fused[#loc509, #loc510])
#loc788 = loc(fused[#loc511, #loc512])
#loc789 = loc(fused[#loc514, #loc515])
#loc790 = loc(fused[#loc513, #loc515])
#loc791 = loc(fused[#loc516, #loc517, #loc518, #loc512])
#loc792 = loc(fused[#loc521, #loc522])
#loc793 = loc(fused[#loc520, #loc522])
#loc794 = loc(fused[#loc519, #loc523])
#loc795 = loc(fused[#loc524, #loc523])
#loc796 = loc(fused[#loc525, #loc526])
#loc797 = loc(fused[#loc527, #loc528])
#loc798 = loc(fused[#loc529, #loc526])
#loc799 = loc(fused[#loc547, #loc548])
#loc800 = loc(fused[#loc549, #loc550])
#loc801 = loc(fused[#loc552, #loc551])
#loc802 = loc(fused[#loc553, #loc554])
#loc803 = loc(fused[#loc558, #loc557])
#loc804 = loc(fused[#loc564, #loc565])
#loc805 = loc(fused[#loc568, #loc569])
#loc806 = loc(fused[#loc570, #loc571])
#loc807 = loc(fused[#loc572, #loc573])
#loc808 = loc(fused[#loc575, #loc576])
#loc809 = loc(fused[#loc574, #loc576])
#loc810 = loc(fused[#loc577, #loc578, #loc579, #loc573])
#loc811 = loc(fused[#loc582, #loc583])
#loc812 = loc(fused[#loc581, #loc583])
#loc813 = loc(fused[#loc580, #loc584])
#loc814 = loc(fused[#loc585, #loc584])
#loc815 = loc(fused[#loc586, #loc587])
#loc816 = loc(fused[#loc588, #loc589])
#loc817 = loc(fused[#loc590, #loc587])
