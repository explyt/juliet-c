!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc5 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc124 = loc("../../../testcasesupport/std_testcase.h":68:7)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":143:10)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":143:14)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":143:20)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":143:32)
!ty_OneIntClass = !cir.struct<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc291 = loc(fused[#loc195, #loc196])
#loc292 = loc(fused[#loc197, #loc198])
!ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_343A3AunionType = !cir.struct<union "CWE122_Heap_Based_Buffer_Overflow__placement_new_34::unionType" {!cir.ptr<!s8i>, !cir.ptr<!s8i>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc211)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc212)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc5)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc5)
    cir.return loc(#loc5)
  } loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc213)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc214)
  cir.func @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_343badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc216)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc217)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc218)
    %3 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_343A3AunionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_343A3AunionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc219)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc220)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc221)
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc24)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc222)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc223)
    cir.store %9, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
    cir.br ^bb1 loc(#loc224)
  ^bb1:  // pred: ^bb0
    %10 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc30)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc225)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc226)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc34)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
    cir.br ^bb3 loc(#loc28)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc28)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<8> : !u64i loc(#loc227)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc37)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc228)
    cir.store %18, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc221)
    cir.br ^bb5 loc(#loc229)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc41)
    %21 = cir.cmp(eq, %19, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc230)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc231)
  ^bb6:  // pred: ^bb5
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc43)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc45)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc43)
    cir.br ^bb7 loc(#loc39)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc39)
  ^bb8:  // pred: ^bb7
    %25 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    cir.store %25, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc232)
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %27 = cir.get_member %3[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_343A3AunionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc49)
    cir.store %26, %27 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc233)
    cir.br ^bb9 loc(#loc234)
  ^bb9:  // pred: ^bb8
    %28 = cir.get_member %3[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_343A3AunionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc53)
    %29 = cir.load %28 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    cir.store %29, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
    cir.br ^bb10 loc(#loc235)
  ^bb10:  // pred: ^bb9
    %30 = cir.const #cir.int<8> : !u64i loc(#loc236)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc236)
    cir.call @_ZN12TwoIntsClassC2Ev(%33) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc15)
    cir.store %33, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc217)
    %34 = cir.const #cir.int<5> : !s32i loc(#loc58)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc59)
    %36 = cir.get_member %35[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc60)
    cir.store %34, %36 : !s32i, !cir.ptr<!s32i> loc(#loc237)
    %37 = cir.const #cir.int<10> : !s32i loc(#loc61)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc62)
    %39 = cir.get_member %38[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc63)
    cir.store %37, %39 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc64)
    %41 = cir.get_member %40[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc60)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    cir.call @printIntLine(%42) : (!s32i) -> () loc(#loc66)
    %43 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc67)
    %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc68)
    cir.call @free(%45) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc67)
    cir.br ^bb11 loc(#loc55)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc52)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc11)
  } loc(#loc215)
  cir.func internal private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_34L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc240)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc241)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc242)
    %3 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_343A3AunionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_343A3AunionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc243)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc244)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc245)
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc83)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc246)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc247)
    cir.store %9, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc244)
    cir.br ^bb1 loc(#loc248)
  ^bb1:  // pred: ^bb0
    %10 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc89)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc249)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc250)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc91)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc93)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc91)
    cir.br ^bb3 loc(#loc87)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc87)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<8> : !u64i loc(#loc251)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc96)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc252)
    cir.store %18, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc245)
    cir.br ^bb5 loc(#loc253)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc100)
    %21 = cir.cmp(eq, %19, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc254)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc255)
  ^bb6:  // pred: ^bb5
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc102)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc104)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc102)
    cir.br ^bb7 loc(#loc98)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc98)
  ^bb8:  // pred: ^bb7
    %25 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    cir.store %25, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc256)
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %27 = cir.get_member %3[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_343A3AunionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc49)
    cir.store %26, %27 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc257)
    cir.br ^bb9 loc(#loc258)
  ^bb9:  // pred: ^bb8
    %28 = cir.get_member %3[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_343A3AunionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc53)
    %29 = cir.load %28 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    cir.store %29, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc240)
    cir.br ^bb10 loc(#loc259)
  ^bb10:  // pred: ^bb9
    %30 = cir.const #cir.int<8> : !u64i loc(#loc260)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc114)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc260)
    cir.call @_ZN12TwoIntsClassC2Ev(%33) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc74)
    cir.store %33, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc241)
    %34 = cir.const #cir.int<5> : !s32i loc(#loc115)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc116)
    %36 = cir.get_member %35[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc60)
    cir.store %34, %36 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    %37 = cir.const #cir.int<10> : !s32i loc(#loc117)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc118)
    %39 = cir.get_member %38[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc63)
    cir.store %37, %39 : !s32i, !cir.ptr<!s32i> loc(#loc262)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc119)
    %41 = cir.get_member %40[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc60)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    cir.call @printIntLine(%42) : (!s32i) -> () loc(#loc121)
    %43 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc122)
    %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc123)
    cir.call @free(%45) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc122)
    cir.br ^bb11 loc(#loc112)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc110)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc70)
  } loc(#loc239)
  cir.func linkonce_odr @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc124)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc124)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc124)
    cir.return loc(#loc124)
  } loc(#loc124)
  cir.func internal private @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_34L7goodB2GEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc264)
    %1 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc265)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc266)
    %3 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_343A3AunionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_343A3AunionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc267)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc268)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc269)
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc139)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc270)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc139)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc271)
    cir.store %9, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc268)
    cir.br ^bb1 loc(#loc272)
  ^bb1:  // pred: ^bb0
    %10 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc145)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc273)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc274)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc147)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc149)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc147)
    cir.br ^bb3 loc(#loc143)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc143)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<8> : !u64i loc(#loc275)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc152)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc276)
    cir.store %18, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc269)
    cir.br ^bb5 loc(#loc277)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc156)
    %21 = cir.cmp(eq, %19, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc278)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc279)
  ^bb6:  // pred: ^bb5
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc158)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc160)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc158)
    cir.br ^bb7 loc(#loc154)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc154)
  ^bb8:  // pred: ^bb7
    %25 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
    cir.store %25, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc280)
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    %27 = cir.get_member %3[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_343A3AunionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc49)
    cir.store %26, %27 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc281)
    cir.br ^bb9 loc(#loc282)
  ^bb9:  // pred: ^bb8
    %28 = cir.get_member %3[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__placement_new_343A3AunionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc53)
    %29 = cir.load %28 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    cir.store %29, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc264)
    cir.br ^bb10 loc(#loc283)
  ^bb10:  // pred: ^bb9
    %30 = cir.const #cir.int<4> : !u64i loc(#loc284)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc170)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc284)
    cir.call @_ZN11OneIntClassC2Ev(%33) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr) loc(#loc130)
    cir.store %33, %1 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc265)
    %34 = cir.const #cir.int<5> : !s32i loc(#loc171)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc172)
    %36 = cir.get_member %35[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc173)
    cir.store %34, %36 : !s32i, !cir.ptr<!s32i> loc(#loc285)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc174)
    %38 = cir.get_member %37[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc173)
    %39 = cir.load %38 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    cir.call @printIntLine(%39) : (!s32i) -> () loc(#loc176)
    %40 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc177)
    %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc178)
    cir.call @free(%42) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc177)
    cir.br ^bb11 loc(#loc168)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc166)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc126)
  } loc(#loc263)
  cir.func @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_344goodEv() extra(#fn_attr2) {
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_34L7goodG2BEv() : () -> () loc(#loc181)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_34L7goodB2GEv() : () -> () loc(#loc182)
    cir.return loc(#loc180)
  } loc(#loc286)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc287)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc288)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc289)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc190)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc192)
  cir.func @main(%arg0: !s32i loc(fused[#loc195, #loc196]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc197, #loc198])) -> !s32i extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc291)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc292)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc194)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc199)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc200)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc201)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc201)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc202)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc189)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc189)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc203)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_344goodEv() : () -> () loc(#loc204)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc190)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc190)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc205)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc191)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc191)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc206)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__placement_new_343badEv() : () -> () loc(#loc207)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc192)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc192)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc208)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc209)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc293)
    cir.return %15 : !s32i loc(#loc293)
  } loc(#loc290)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":31:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":59:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":43:9)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":43:31)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":50:13)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":50:49)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":33:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":33:12)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":34:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":34:15)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":35:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":35:62)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":37:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":37:64)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":35:36)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":35:43)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":35:61)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":36:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":36:42)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":36:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":36:26)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":36:32)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":36:33)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":36:39)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":36:38)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":37:44)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":37:63)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":37:37)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":38:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":38:43)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":38:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":38:27)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":38:33)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":38:34)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":38:40)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":38:39)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":40:12)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":40:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":41:26)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":25:12)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":41:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":42:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":58:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":26:12)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":44:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":57:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":50:39)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":50:43)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":52:32)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":52:13)
#loc60 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":53:32)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":53:13)
#loc63 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":54:26)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":54:36)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":54:13)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":56:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":56:18)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":66:1)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":94:1)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":78:9)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":78:31)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":85:13)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":85:49)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":68:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":68:12)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":69:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":69:15)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":70:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":70:62)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":72:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":72:64)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":70:36)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":70:43)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":70:61)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":71:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":71:42)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":71:9)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":71:26)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":71:32)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":71:33)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":71:39)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":71:38)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":72:44)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":72:63)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":72:37)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":73:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":73:43)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":73:9)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":73:27)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":73:33)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":73:34)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":73:40)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":73:39)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":75:12)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":75:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":76:26)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":76:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":77:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":93:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":79:9)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":92:9)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":85:39)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":85:43)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":87:32)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":87:13)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":88:32)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":88:13)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":89:26)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":89:36)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":89:13)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":91:13)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":91:18)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":97:1)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":123:1)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":109:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":109:31)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":116:13)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":116:48)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":99:5)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":99:12)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":100:5)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":100:15)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":101:5)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":101:62)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":103:5)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":103:64)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":101:36)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":101:43)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":101:61)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":102:5)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":102:42)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":102:9)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":102:26)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":102:32)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":102:33)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":102:39)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":102:38)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":103:44)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":103:63)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":103:37)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":104:5)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":104:43)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":104:9)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":104:27)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":104:33)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":104:34)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":104:40)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":104:39)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":106:12)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":106:5)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":107:26)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":107:5)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":108:5)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":122:5)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":110:9)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":121:9)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":116:38)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":116:42)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":118:32)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":118:13)
#loc173 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":119:26)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":119:36)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":119:13)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":120:13)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":120:18)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":125:1)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":129:1)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":127:5)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":128:5)
#loc183 = loc("/usr/include/stdlib.h":575:1)
#loc184 = loc("/usr/include/stdlib.h":575:41)
#loc185 = loc("/usr/include/time.h":76:1)
#loc186 = loc("/usr/include/time.h":76:38)
#loc187 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc188 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":148:15)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":150:15)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":153:15)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":155:15)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":143:1)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":158:1)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":144:1)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":146:27)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":146:22)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":146:5)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":148:5)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":149:5)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":150:5)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":153:5)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":154:5)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":155:5)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":157:12)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__placement_new_34.cpp":157:5)
#loc211 = loc(fused[#loc1, #loc2])
#loc212 = loc(fused[#loc3, #loc4])
#loc213 = loc(fused[#loc6, #loc7])
#loc214 = loc(fused[#loc8, #loc9])
#loc215 = loc(fused[#loc10, #loc11])
#loc216 = loc(fused[#loc12, #loc13])
#loc217 = loc(fused[#loc14, #loc15])
#loc218 = loc(fused[#loc16, #loc17])
#loc219 = loc(fused[#loc18, #loc19])
#loc220 = loc(fused[#loc20, #loc21])
#loc221 = loc(fused[#loc22, #loc23])
#loc222 = loc(fused[#loc25, #loc26])
#loc223 = loc(fused[#loc24, #loc21])
#loc224 = loc(fused[#loc27, #loc28])
#loc225 = loc(fused[#loc29, #loc30])
#loc226 = loc(fused[#loc31, #loc28])
#loc227 = loc(fused[#loc35, #loc36])
#loc228 = loc(fused[#loc37, #loc23])
#loc229 = loc(fused[#loc38, #loc39])
#loc230 = loc(fused[#loc40, #loc41])
#loc231 = loc(fused[#loc42, #loc39])
#loc232 = loc(fused[#loc47, #loc46])
#loc233 = loc(fused[#loc50, #loc48])
#loc234 = loc(fused[#loc51, #loc52])
#loc235 = loc(fused[#loc54, #loc55])
#loc236 = loc(fused[#loc56, #loc15])
#loc237 = loc(fused[#loc59, #loc58])
#loc238 = loc(fused[#loc62, #loc61])
#loc239 = loc(fused[#loc69, #loc70])
#loc240 = loc(fused[#loc71, #loc72])
#loc241 = loc(fused[#loc73, #loc74])
#loc242 = loc(fused[#loc75, #loc76])
#loc243 = loc(fused[#loc77, #loc78])
#loc244 = loc(fused[#loc79, #loc80])
#loc245 = loc(fused[#loc81, #loc82])
#loc246 = loc(fused[#loc84, #loc85])
#loc247 = loc(fused[#loc83, #loc80])
#loc248 = loc(fused[#loc86, #loc87])
#loc249 = loc(fused[#loc88, #loc89])
#loc250 = loc(fused[#loc90, #loc87])
#loc251 = loc(fused[#loc94, #loc95])
#loc252 = loc(fused[#loc96, #loc82])
#loc253 = loc(fused[#loc97, #loc98])
#loc254 = loc(fused[#loc99, #loc100])
#loc255 = loc(fused[#loc101, #loc98])
#loc256 = loc(fused[#loc106, #loc105])
#loc257 = loc(fused[#loc108, #loc107])
#loc258 = loc(fused[#loc109, #loc110])
#loc259 = loc(fused[#loc111, #loc112])
#loc260 = loc(fused[#loc113, #loc74])
#loc261 = loc(fused[#loc116, #loc115])
#loc262 = loc(fused[#loc118, #loc117])
#loc263 = loc(fused[#loc125, #loc126])
#loc264 = loc(fused[#loc127, #loc128])
#loc265 = loc(fused[#loc129, #loc130])
#loc266 = loc(fused[#loc131, #loc132])
#loc267 = loc(fused[#loc133, #loc134])
#loc268 = loc(fused[#loc135, #loc136])
#loc269 = loc(fused[#loc137, #loc138])
#loc270 = loc(fused[#loc140, #loc141])
#loc271 = loc(fused[#loc139, #loc136])
#loc272 = loc(fused[#loc142, #loc143])
#loc273 = loc(fused[#loc144, #loc145])
#loc274 = loc(fused[#loc146, #loc143])
#loc275 = loc(fused[#loc150, #loc151])
#loc276 = loc(fused[#loc152, #loc138])
#loc277 = loc(fused[#loc153, #loc154])
#loc278 = loc(fused[#loc155, #loc156])
#loc279 = loc(fused[#loc157, #loc154])
#loc280 = loc(fused[#loc162, #loc161])
#loc281 = loc(fused[#loc164, #loc163])
#loc282 = loc(fused[#loc165, #loc166])
#loc283 = loc(fused[#loc167, #loc168])
#loc284 = loc(fused[#loc169, #loc130])
#loc285 = loc(fused[#loc172, #loc171])
#loc286 = loc(fused[#loc179, #loc180])
#loc287 = loc(fused[#loc183, #loc184])
#loc288 = loc(fused[#loc185, #loc186])
#loc289 = loc(fused[#loc187, #loc188])
#loc290 = loc(fused[#loc193, #loc194])
#loc293 = loc(fused[#loc210, #loc209])
