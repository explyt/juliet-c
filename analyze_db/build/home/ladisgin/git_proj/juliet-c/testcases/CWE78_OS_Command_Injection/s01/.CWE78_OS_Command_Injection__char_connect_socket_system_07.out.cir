!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":208:10)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":208:14)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":208:20)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":208:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc341 = loc(fused[#loc192, #loc193])
#loc342 = loc(fused[#loc194, #loc195])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_system_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc264)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc265)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_system_07_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc266)
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc267)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc268)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc269)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc270)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc15)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc271)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc272)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc273)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc274)
  cir.func private @close(!s32i) -> !s32i loc(#loc275)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc276)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc277)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc30)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc278)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_system_07_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc280)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc266)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_system_07_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc266)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc266)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc281)
    cir.scope {
      %4 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc267)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc41)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc42)
      %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc283)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc286)
          %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc287)
          %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc288)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc289)
          %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc290)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc53)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc53)
          cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc289)
          %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc56)
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
          %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc56)
          cir.store %17, %12 : !u64i, !cir.ptr<!u64i> loc(#loc290)
          cir.scope {
            cir.do {
              %18 = cir.const #cir.int<2> : !s32i loc(#loc60)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc61)
              %20 = cir.const #cir.int<6> : !s32i loc(#loc62)
              %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc63)
              cir.store %21, %11 : !s32i, !cir.ptr<!s32i> loc(#loc292)
              cir.scope {
                %72 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc68)
                %73 = cir.const #cir.int<1> : !s32i loc(#loc69)
                %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc69)
                %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc294)
                cir.if %75 {
                  cir.break loc(#loc71)
                } loc(#loc295)
              } loc(#loc293)
              %22 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc296)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc74)
              %24 = cir.const #cir.int<16> : !u64i loc(#loc297)
              cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc298)
              %25 = cir.const #cir.int<2> : !s32i loc(#loc79)
              %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc79)
              %27 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
              cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc299)
              %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc15)
              %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc15)
              %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc82)
              %31 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc83)
              %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc84)
              cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc300)
              %33 = cir.const #cir.int<27015> : !s32i loc(#loc87)
              %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc87)
              %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc88)
              %36 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
              cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc301)
              cir.scope {
                %72 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                %73 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc303)
                %74 = cir.const #cir.int<16> : !u64i loc(#loc304)
                %75 = cir.cast(integral, %74 : !u64i), !u32i loc(#loc304)
                %76 = cir.call @connect(%72, %73, %75) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc99)
                %77 = cir.const #cir.int<1> : !s32i loc(#loc100)
                %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc100)
                %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc305)
                cir.if %79 {
                  cir.break loc(#loc102)
                } loc(#loc306)
              } loc(#loc302)
              %37 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc103)
              %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
              %39 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc105)
              %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc106)
              %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc307)
              %42 = cir.const #cir.int<1> : !u64i loc(#loc308)
              %43 = cir.const #cir.int<100> : !s32i loc(#loc111)
              %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc111)
              %45 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc112)
              %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc309)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc113)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc113)
              %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc310)
              %50 = cir.binop(mul, %42, %49) : !u64i loc(#loc311)
              %51 = cir.const #cir.int<0> : !s32i loc(#loc115)
              %52 = cir.call @recv(%37, %41, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc116)
              %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc116)
              cir.store %53, %8 : !s32i, !cir.ptr<!s32i> loc(#loc312)
              cir.scope {
                %72 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                %73 = cir.const #cir.int<1> : !s32i loc(#loc122)
                %74 = cir.unary(minus, %73) : !s32i, !s32i loc(#loc122)
                %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc314)
                %76 = cir.ternary(%75, true {
                  %77 = cir.const #true loc(#loc123)
                  cir.yield %77 : !cir.bool loc(#loc123)
                }, false {
                  %77 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc124)
                  %78 = cir.const #cir.int<0> : !s32i loc(#loc125)
                  %79 = cir.cmp(eq, %77, %78) : !s32i, !cir.bool loc(#loc315)
                  %80 = cir.ternary(%79, true {
                    %81 = cir.const #true loc(#loc123)
                    cir.yield %81 : !cir.bool loc(#loc123)
                  }, false {
                    %81 = cir.const #false loc(#loc123)
                    cir.yield %81 : !cir.bool loc(#loc123)
                  }) : (!cir.bool) -> !cir.bool loc(#loc123)
                  cir.yield %80 : !cir.bool loc(#loc123)
                }) : (!cir.bool) -> !cir.bool loc(#loc123)
                cir.if %76 {
                  cir.break loc(#loc127)
                } loc(#loc316)
              } loc(#loc313)
              %54 = cir.const #cir.int<0> : !s32i loc(#loc128)
              %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc128)
              %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
              %57 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc130)
              %58 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc131)
              %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc131)
              %60 = cir.const #cir.int<1> : !u64i loc(#loc317)
              %61 = cir.binop(div, %59, %60) : !u64i loc(#loc318)
              %62 = cir.binop(add, %57, %61) : !u64i loc(#loc319)
              %63 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc134)
              cir.store %55, %63 : !s8i, !cir.ptr<!s8i> loc(#loc320)
              %64 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc135)
              %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
              %66 = cir.const #cir.int<13> : !s32i loc(#loc137)
              %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc135)
              cir.store %67, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc321)
              cir.scope {
                %72 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
                %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc142)
                cir.if %73 {
                  %74 = cir.const #cir.int<0> : !s32i loc(#loc144)
                  %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc144)
                  %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
                  cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc324)
                } loc(#loc323)
              } loc(#loc322)
              %68 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc147)
              %69 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
              %70 = cir.const #cir.int<10> : !s32i loc(#loc149)
              %71 = cir.call @strchr(%69, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc147)
              cir.store %71, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc325)
              cir.scope {
                %72 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
                %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc154)
                cir.if %73 {
                  %74 = cir.const #cir.int<0> : !s32i loc(#loc156)
                  %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc156)
                  %76 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
                  cir.store %75, %76 : !s8i, !cir.ptr<!s8i> loc(#loc328)
                } loc(#loc327)
              } loc(#loc326)
              cir.yield loc(#loc59)
            } while {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc159)
              %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc159)
              cir.condition(%19) loc(#loc159)
            } loc(#loc291)
          } loc(#loc291)
          cir.scope {
            %18 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc162)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc163)
            %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc163)
            %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc330)
            cir.if %21 {
              %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc165)
              %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc166)
            } loc(#loc331)
          } loc(#loc329)
        } loc(#loc285)
      } loc(#loc284)
    } loc(#loc282)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc170)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc171)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc333)
      cir.if %7 {
        %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc30)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc30)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc173)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc174)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc175)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc174)
      } loc(#loc334)
    } loc(#loc332)
    cir.return loc(#loc34)
  } loc(#loc279)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_system_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc336)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc178)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc337)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc180)
    cir.return loc(#loc177)
  } loc(#loc335)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc338)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc339)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc187)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc189)
  cir.func @main(%arg0: !s32i loc(fused[#loc192, #loc193]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc194, #loc195])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc341)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc342)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc191)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc196)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc197)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc198)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc198)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc199)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc186)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc186)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc200)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_connect_socket_system_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc343)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_system_07_good() : () -> () loc(#loc201)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc187)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc187)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc203)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc188)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc188)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc204)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_connect_socket_system_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc344)
    cir.call @CWE78_OS_Command_Injection__char_connect_socket_system_07_bad() : () -> () loc(#loc205)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc189)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc189)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc207)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc208)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc345)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc345)
    cir.return %17 : !s32i loc(#loc345)
  } loc(#loc340)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc210)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc346)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc213)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc348)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc265)
    %2 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc265)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc265)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc218)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc349)
    cir.scope {
      %4 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc267)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc222)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc223)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc351)
      cir.if %7 {
        %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc210)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc210)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc227)
      } else {
        %8 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc228)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc229)
        %10 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc213)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc213)
        %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc228)
      } loc(#loc352)
    } loc(#loc350)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc232)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc233)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc234)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc354)
      cir.if %7 {
        %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc236)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc236)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc237)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc238)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc239)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc238)
      } loc(#loc355)
    } loc(#loc353)
    cir.return loc(#loc215)
  } loc(#loc347)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc357)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc264)
    %2 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc264)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc264)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc244)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc358)
    cir.scope {
      %4 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc267)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc248)
      %6 = cir.const #cir.int<5> : !s32i loc(#loc249)
      %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc360)
      cir.if %7 {
        %8 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc251)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc252)
        %10 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc253)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc253)
        %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc251)
      } loc(#loc361)
    } loc(#loc359)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc256)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc257)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc258)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc363)
      cir.if %7 {
        %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc260)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc260)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc261)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc262)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc263)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc262)
      } loc(#loc364)
    } loc(#loc362)
    cir.return loc(#loc241)
  } loc(#loc356)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_system_07.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":177:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":177:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":153:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":153:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":65:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":65:26)
#loc7 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":58:1)
#loc8 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":58:25)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("/usr/include/sys/socket.h":102:1)
#loc12 = loc("/usr/include/sys/socket.h":102:62)
#loc13 = loc("/usr/include/arpa/inet.h":34:1)
#loc14 = loc("/usr/include/arpa/inet.h":34:47)
#loc15 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":96:53)
#loc16 = loc("/usr/include/netinet/in.h":404:1)
#loc17 = loc("/usr/include/netinet/in.h":405:40)
#loc18 = loc("/usr/include/sys/socket.h":126:1)
#loc19 = loc("/usr/include/sys/socket.h":126:75)
#loc20 = loc("/usr/include/sys/socket.h":145:1)
#loc21 = loc("/usr/include/sys/socket.h":145:68)
#loc22 = loc("/usr/include/string.h":246:1)
#loc23 = loc("/usr/include/string.h":247:33)
#loc24 = loc("/usr/include/unistd.h":358:1)
#loc25 = loc("/usr/include/unistd.h":358:27)
#loc26 = loc("/usr/include/stdlib.h":923:1)
#loc27 = loc("/usr/include/stdlib.h":923:41)
#loc28 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc29 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc30 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":140:19)
#loc31 = loc("/usr/include/stdlib.h":756:1)
#loc32 = loc("/usr/include/stdlib.h":756:70)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":62:1)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":143:1)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":64:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":64:12)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":66:12)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":66:5)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":67:5)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":136:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":67:8)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":67:20)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":68:5)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":69:9)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":135:9)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":74:13)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":74:17)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":75:13)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":75:32)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":76:13)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":76:19)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":77:13)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":77:36)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":78:13)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":78:41)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":78:30)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":78:37)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":79:13)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":124:21)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":89:40)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":89:49)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":89:62)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":89:33)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":89:17)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":89:73)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":90:17)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":93:17)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":90:21)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":90:38)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":91:17)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":92:21)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":94:24)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":94:25)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":94:34)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":94:37)
#loc76 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":94:51)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":94:17)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":94:52)
#loc79 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":95:38)
#loc80 = loc("/usr/include/netinet/in.h":249:5)
#loc81 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":95:17)
#loc82 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":96:43)
#loc83 = loc("/usr/include/netinet/in.h":251:20)
#loc84 = loc("/usr/include/netinet/in.h":33:15)
#loc85 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":96:17)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":96:63)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":97:42)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":97:36)
#loc89 = loc("/usr/include/netinet/in.h":250:15)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":97:17)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":97:50)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":98:17)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":101:17)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":98:29)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":98:62)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":98:63)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":98:72)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":98:86)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":98:21)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":98:92)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":99:17)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":100:21)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":105:35)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":105:59)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":105:66)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":105:64)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":105:50)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":105:73)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":105:76)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":105:87)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":105:92)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":105:98)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":105:108)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":105:109)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":105:112)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":105:30)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":105:17)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":105:113)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":106:17)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":109:17)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":106:21)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":106:35)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":106:48)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":106:51)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":106:65)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":107:17)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":108:21)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":111:61)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":111:17)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":111:22)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":111:32)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":111:45)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":111:56)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":111:57)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":113:27)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":113:34)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":113:40)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":113:17)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":113:44)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":114:17)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":117:17)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":114:21)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":115:17)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":116:32)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":116:22)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":116:21)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":118:27)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":118:34)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":118:40)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":118:17)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":118:44)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":119:17)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":122:17)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":119:21)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":120:17)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":121:32)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":121:22)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":121:21)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":124:20)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":125:13)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":128:13)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":125:17)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":125:34)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":126:13)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":127:30)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":127:17)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":138:5)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":142:5)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":138:16)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":138:9)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":138:25)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":139:5)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":140:9)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":141:9)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":141:14)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":192:1)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":196:1)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":194:5)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":194:14)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":195:5)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":195:14)
#loc182 = loc("/usr/include/stdlib.h":575:1)
#loc183 = loc("/usr/include/stdlib.h":575:41)
#loc184 = loc("/usr/include/time.h":76:1)
#loc185 = loc("/usr/include/time.h":76:38)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":213:15)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":215:15)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":218:15)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":220:15)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":208:1)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":223:1)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":209:1)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":211:27)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":211:22)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":211:5)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":213:5)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":214:5)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":214:68)
#loc203 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":215:5)
#loc204 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":218:5)
#loc205 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":219:5)
#loc206 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":219:67)
#loc207 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":220:5)
#loc208 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":222:12)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":222:5)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":158:19)
#loc211 = loc("/usr/include/string.h":149:1)
#loc212 = loc("/usr/include/string.h":150:14)
#loc213 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":163:22)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":150:1)
#loc215 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":171:1)
#loc216 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":152:5)
#loc217 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":152:12)
#loc218 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":154:12)
#loc219 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":154:5)
#loc220 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":155:5)
#loc221 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":164:5)
#loc222 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":155:8)
#loc223 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":155:20)
#loc224 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":156:5)
#loc225 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":159:5)
#loc226 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":161:5)
#loc227 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":158:9)
#loc228 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":163:9)
#loc229 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":163:16)
#loc230 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":166:5)
#loc231 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":170:5)
#loc232 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":166:16)
#loc233 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":166:9)
#loc234 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":166:25)
#loc235 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":167:5)
#loc236 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":168:19)
#loc237 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":168:9)
#loc238 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":169:9)
#loc239 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":169:14)
#loc240 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":174:1)
#loc241 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":190:1)
#loc242 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":176:5)
#loc243 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":176:12)
#loc244 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":178:12)
#loc245 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":178:5)
#loc246 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":179:5)
#loc247 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":183:5)
#loc248 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":179:8)
#loc249 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":179:20)
#loc250 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":180:5)
#loc251 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":182:9)
#loc252 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":182:16)
#loc253 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":182:22)
#loc254 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":185:5)
#loc255 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":189:5)
#loc256 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":185:16)
#loc257 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":185:9)
#loc258 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":185:25)
#loc259 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":186:5)
#loc260 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":187:19)
#loc261 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":187:9)
#loc262 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":188:9)
#loc263 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_07.c":188:14)
#loc264 = loc(fused[#loc1, #loc2])
#loc265 = loc(fused[#loc3, #loc4])
#loc266 = loc(fused[#loc5, #loc6])
#loc267 = loc(fused[#loc7, #loc8])
#loc268 = loc(fused[#loc9, #loc10])
#loc269 = loc(fused[#loc11, #loc12])
#loc270 = loc(fused[#loc13, #loc14])
#loc271 = loc(fused[#loc16, #loc17])
#loc272 = loc(fused[#loc18, #loc19])
#loc273 = loc(fused[#loc20, #loc21])
#loc274 = loc(fused[#loc22, #loc23])
#loc275 = loc(fused[#loc24, #loc25])
#loc276 = loc(fused[#loc26, #loc27])
#loc277 = loc(fused[#loc28, #loc29])
#loc278 = loc(fused[#loc31, #loc32])
#loc279 = loc(fused[#loc33, #loc34])
#loc280 = loc(fused[#loc35, #loc36])
#loc281 = loc(fused[#loc38, #loc37])
#loc282 = loc(fused[#loc39, #loc40])
#loc283 = loc(fused[#loc41, #loc42])
#loc284 = loc(fused[#loc43, #loc40])
#loc285 = loc(fused[#loc44, #loc45])
#loc286 = loc(fused[#loc46, #loc47])
#loc287 = loc(fused[#loc48, #loc49])
#loc288 = loc(fused[#loc50, #loc51])
#loc289 = loc(fused[#loc52, #loc53])
#loc290 = loc(fused[#loc54, #loc55])
#loc291 = loc(fused[#loc58, #loc59])
#loc292 = loc(fused[#loc64, #loc65])
#loc293 = loc(fused[#loc66, #loc67])
#loc294 = loc(fused[#loc68, #loc69])
#loc295 = loc(fused[#loc70, #loc67])
#loc296 = loc(fused[#loc72, #loc73])
#loc297 = loc(fused[#loc75, #loc76])
#loc298 = loc(fused[#loc77, #loc78])
#loc299 = loc(fused[#loc81, #loc79])
#loc300 = loc(fused[#loc85, #loc86])
#loc301 = loc(fused[#loc90, #loc91])
#loc302 = loc(fused[#loc92, #loc93])
#loc303 = loc(fused[#loc95, #loc96])
#loc304 = loc(fused[#loc97, #loc98])
#loc305 = loc(fused[#loc99, #loc100])
#loc306 = loc(fused[#loc101, #loc93])
#loc307 = loc(fused[#loc107, #loc108])
#loc308 = loc(fused[#loc109, #loc110])
#loc309 = loc(fused[#loc111, #loc112])
#loc310 = loc(fused[#loc111, #loc113])
#loc311 = loc(fused[#loc109, #loc114])
#loc312 = loc(fused[#loc117, #loc118])
#loc313 = loc(fused[#loc119, #loc120])
#loc314 = loc(fused[#loc121, #loc122])
#loc315 = loc(fused[#loc124, #loc125])
#loc316 = loc(fused[#loc126, #loc120])
#loc317 = loc(fused[#loc132, #loc133])
#loc318 = loc(fused[#loc131, #loc133])
#loc319 = loc(fused[#loc130, #loc133])
#loc320 = loc(fused[#loc129, #loc128])
#loc321 = loc(fused[#loc138, #loc139])
#loc322 = loc(fused[#loc140, #loc141])
#loc323 = loc(fused[#loc143, #loc141])
#loc324 = loc(fused[#loc146, #loc144])
#loc325 = loc(fused[#loc150, #loc151])
#loc326 = loc(fused[#loc152, #loc153])
#loc327 = loc(fused[#loc155, #loc153])
#loc328 = loc(fused[#loc158, #loc156])
#loc329 = loc(fused[#loc160, #loc161])
#loc330 = loc(fused[#loc162, #loc163])
#loc331 = loc(fused[#loc164, #loc161])
#loc332 = loc(fused[#loc167, #loc168])
#loc333 = loc(fused[#loc170, #loc171])
#loc334 = loc(fused[#loc172, #loc168])
#loc335 = loc(fused[#loc176, #loc177])
#loc336 = loc(fused[#loc178, #loc179])
#loc337 = loc(fused[#loc180, #loc181])
#loc338 = loc(fused[#loc182, #loc183])
#loc339 = loc(fused[#loc184, #loc185])
#loc340 = loc(fused[#loc190, #loc191])
#loc343 = loc(fused[#loc201, #loc202])
#loc344 = loc(fused[#loc205, #loc206])
#loc345 = loc(fused[#loc209, #loc208])
#loc346 = loc(fused[#loc211, #loc212])
#loc347 = loc(fused[#loc214, #loc215])
#loc348 = loc(fused[#loc216, #loc217])
#loc349 = loc(fused[#loc219, #loc218])
#loc350 = loc(fused[#loc220, #loc221])
#loc351 = loc(fused[#loc222, #loc223])
#loc352 = loc(fused[#loc224, #loc225, #loc226, #loc221])
#loc353 = loc(fused[#loc230, #loc231])
#loc354 = loc(fused[#loc233, #loc234])
#loc355 = loc(fused[#loc235, #loc231])
#loc356 = loc(fused[#loc240, #loc241])
#loc357 = loc(fused[#loc242, #loc243])
#loc358 = loc(fused[#loc245, #loc244])
#loc359 = loc(fused[#loc246, #loc247])
#loc360 = loc(fused[#loc248, #loc249])
#loc361 = loc(fused[#loc250, #loc247])
#loc362 = loc(fused[#loc254, #loc255])
#loc363 = loc(fused[#loc257, #loc258])
#loc364 = loc(fused[#loc259, #loc255])
