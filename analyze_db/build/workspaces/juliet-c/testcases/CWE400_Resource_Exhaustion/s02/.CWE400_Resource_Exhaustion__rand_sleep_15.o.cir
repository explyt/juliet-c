!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc20 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":39:17)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":74:17)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":89:23)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":112:17)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":123:23)
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc186)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc187)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc5)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc190)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc14)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    cir.br ^bb1 loc(#loc192)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc18)
    cir.br ^bb2 loc(#loc16)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb9 [
      6: ^bb4
    ] loc(#loc16)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc20)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc20)
    cir.brcond %7 ^bb5, ^bb6 loc(#loc20)
  ^bb5:  // pred: ^bb4
    %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
    %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc20)
    %10 = cir.const #cir.int<30> : !s32i loc(#loc20)
    %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc20)
    %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc20)
    %14 = cir.const #cir.int<15> : !s32i loc(#loc20)
    %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc20)
    %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc20)
    %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc20)
    %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc20)
    cir.br ^bb7(%19 : !u32i) loc(#loc20)
  ^bb6:  // pred: ^bb4
    %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc20)
    %22 = cir.const #cir.int<30> : !s32i loc(#loc20)
    %23 = cir.shift(left, %21 : !u32i, %22 : !s32i) -> !u32i loc(#loc20)
    %24 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
    %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc20)
    %26 = cir.const #cir.int<15> : !s32i loc(#loc20)
    %27 = cir.shift(left, %25 : !u32i, %26 : !s32i) -> !u32i loc(#loc20)
    %28 = cir.binop(xor, %23, %27) : !u32i loc(#loc20)
    %29 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc20)
    %31 = cir.binop(xor, %28, %30) : !u32i loc(#loc20)
    %32 = cir.unary(minus, %31) : !u32i, !u32i loc(#loc20)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc20)
    %35 = cir.binop(sub, %32, %34) : !u32i loc(#loc20)
    cir.br ^bb7(%35 : !u32i) loc(#loc20)
  ^bb7(%36: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":39:17)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc20)
  ^bb8:  // pred: ^bb7
    %37 = cir.cast(integral, %36 : !u32i), !s32i loc(#loc20)
    cir.store %37, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.br ^bb10 loc(#loc22)
  ^bb9:  // pred: ^bb2
    %38 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc5)
    %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc23)
    cir.br ^bb10 loc(#loc24)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc17)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc194)
  ^bb12:  // pred: ^bb11
    %40 = cir.const #cir.int<7> : !s32i loc(#loc27)
    cir.br ^bb13 loc(#loc25)
  ^bb13:  // pred: ^bb12
    cir.switch.flat %40 : !s32i, ^bb16 [
      7: ^bb15
    ] loc(#loc25)
  ^bb14:  // no predecessors
    cir.br ^bb15 loc(#loc28)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    %41 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %42 = cir.cast(integral, %41 : !s32i), !u32i loc(#loc29)
    %43 = cir.call @usleep(%42) : (!u32i) -> !s32i loc(#loc30)
    %44 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc8)
    %45 = cir.cast(array_to_ptrdecay, %44 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    cir.br ^bb17 loc(#loc32)
  ^bb16:  // pred: ^bb13
    %46 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc33)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc34)
    cir.br ^bb17 loc(#loc35)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc26)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc10)
  } loc(#loc189)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc196)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc197)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc198)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc199)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc44)
    cir.return loc(#loc37)
  } loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc47)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc201)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc53)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    cir.br ^bb1 loc(#loc203)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc57)
    cir.br ^bb2 loc(#loc55)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb9 [
      6: ^bb4
    ] loc(#loc55)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc58)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc59)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc59)
    cir.brcond %7 ^bb5, ^bb6 loc(#loc59)
  ^bb5:  // pred: ^bb4
    %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
    %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc59)
    %10 = cir.const #cir.int<30> : !s32i loc(#loc59)
    %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc59)
    %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc59)
    %14 = cir.const #cir.int<15> : !s32i loc(#loc59)
    %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc59)
    %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc59)
    %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc59)
    %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc59)
    cir.br ^bb7(%19 : !u32i) loc(#loc59)
  ^bb6:  // pred: ^bb4
    %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc59)
    %22 = cir.const #cir.int<30> : !s32i loc(#loc59)
    %23 = cir.shift(left, %21 : !u32i, %22 : !s32i) -> !u32i loc(#loc59)
    %24 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
    %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc59)
    %26 = cir.const #cir.int<15> : !s32i loc(#loc59)
    %27 = cir.shift(left, %25 : !u32i, %26 : !s32i) -> !u32i loc(#loc59)
    %28 = cir.binop(xor, %23, %27) : !u32i loc(#loc59)
    %29 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc59)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc59)
    %31 = cir.binop(xor, %28, %30) : !u32i loc(#loc59)
    %32 = cir.unary(minus, %31) : !u32i, !u32i loc(#loc59)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc59)
    %35 = cir.binop(sub, %32, %34) : !u32i loc(#loc59)
    cir.br ^bb7(%35 : !u32i) loc(#loc59)
  ^bb7(%36: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":74:17)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc59)
  ^bb8:  // pred: ^bb7
    %37 = cir.cast(integral, %36 : !u32i), !s32i loc(#loc59)
    cir.store %37, %0 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    cir.br ^bb10 loc(#loc61)
  ^bb9:  // pred: ^bb2
    %38 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc62)
    %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    cir.br ^bb10 loc(#loc64)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc56)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc205)
  ^bb12:  // pred: ^bb11
    %40 = cir.const #cir.int<8> : !s32i loc(#loc67)
    cir.br ^bb13 loc(#loc65)
  ^bb13:  // pred: ^bb12
    cir.switch.flat %40 : !s32i, ^bb16 [
      7: ^bb15
    ] loc(#loc65)
  ^bb14:  // no predecessors
    cir.br ^bb15 loc(#loc68)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    %41 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc69)
    %42 = cir.cast(array_to_ptrdecay, %41 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    cir.br ^bb30 loc(#loc71)
  ^bb16:  // pred: ^bb13
    cir.br ^bb17 loc(#loc206)
  ^bb17:  // pred: ^bb16
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %44 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %45 = cir.cmp(gt, %43, %44) : !s32i, !cir.bool loc(#loc207)
    cir.brcond %45 ^bb18, ^bb23 loc(#loc76)
  ^bb18:  // pred: ^bb17
    %46 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %47 = cir.const #cir.int<2000> : !s32i loc(#loc78)
    %48 = cir.cmp(le, %46, %47) : !s32i, !cir.bool loc(#loc208)
    cir.brcond %48 ^bb19, ^bb20 loc(#loc76)
  ^bb19:  // pred: ^bb18
    %49 = cir.const #true loc(#loc76)
    cir.br ^bb21(%49 : !cir.bool) loc(#loc76)
  ^bb20:  // pred: ^bb18
    %50 = cir.const #false loc(#loc76)
    cir.br ^bb21(%50 : !cir.bool) loc(#loc76)
  ^bb21(%51: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":89:23)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc76)
  ^bb22:  // pred: ^bb21
    cir.br ^bb24(%51 : !cir.bool) loc(#loc76)
  ^bb23:  // pred: ^bb17
    %52 = cir.const #false loc(#loc76)
    cir.br ^bb24(%52 : !cir.bool) loc(#loc76)
  ^bb24(%53: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":89:23)):  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc76)
  ^bb25:  // pred: ^bb24
    cir.brcond %53 ^bb26, ^bb27 loc(#loc209)
  ^bb26:  // pred: ^bb25
    %54 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    %55 = cir.cast(integral, %54 : !s32i), !u32i loc(#loc82)
    %56 = cir.call @usleep(%55) : (!u32i) -> !s32i loc(#loc83)
    %57 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc46)
    %58 = cir.cast(array_to_ptrdecay, %57 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    cir.br ^bb28 loc(#loc80)
  ^bb27:  // pred: ^bb25
    %59 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc47)
    %60 = cir.cast(array_to_ptrdecay, %59 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%60) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    cir.br ^bb28 loc(#loc73)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc73)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc86)
  ^bb30:  // 2 preds: ^bb15, ^bb29
    cir.br ^bb31 loc(#loc66)
  ^bb31:  // pred: ^bb30
    cir.return loc(#loc49)
  } loc(#loc200)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc211)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc92)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    cir.br ^bb1 loc(#loc213)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc96)
    cir.br ^bb2 loc(#loc94)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb9 [
      6: ^bb4
    ] loc(#loc94)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc97)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc98)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc98)
    cir.brcond %7 ^bb5, ^bb6 loc(#loc98)
  ^bb5:  // pred: ^bb4
    %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc98)
    %10 = cir.const #cir.int<30> : !s32i loc(#loc98)
    %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc98)
    %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc98)
    %14 = cir.const #cir.int<15> : !s32i loc(#loc98)
    %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc98)
    %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc98)
    %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc98)
    %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc98)
    cir.br ^bb7(%19 : !u32i) loc(#loc98)
  ^bb6:  // pred: ^bb4
    %20 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %21 = cir.cast(integral, %20 : !s32i), !u32i loc(#loc98)
    %22 = cir.const #cir.int<30> : !s32i loc(#loc98)
    %23 = cir.shift(left, %21 : !u32i, %22 : !s32i) -> !u32i loc(#loc98)
    %24 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc98)
    %26 = cir.const #cir.int<15> : !s32i loc(#loc98)
    %27 = cir.shift(left, %25 : !u32i, %26 : !s32i) -> !u32i loc(#loc98)
    %28 = cir.binop(xor, %23, %27) : !u32i loc(#loc98)
    %29 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc98)
    %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc98)
    %31 = cir.binop(xor, %28, %30) : !u32i loc(#loc98)
    %32 = cir.unary(minus, %31) : !u32i, !u32i loc(#loc98)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc98)
    %35 = cir.binop(sub, %32, %34) : !u32i loc(#loc98)
    cir.br ^bb7(%35 : !u32i) loc(#loc98)
  ^bb7(%36: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":112:17)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc98)
  ^bb8:  // pred: ^bb7
    %37 = cir.cast(integral, %36 : !u32i), !s32i loc(#loc98)
    cir.store %37, %0 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    cir.br ^bb10 loc(#loc100)
  ^bb9:  // pred: ^bb2
    %38 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc101)
    %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    cir.br ^bb10 loc(#loc103)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc95)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc215)
  ^bb12:  // pred: ^bb11
    %40 = cir.const #cir.int<7> : !s32i loc(#loc106)
    cir.br ^bb13 loc(#loc104)
  ^bb13:  // pred: ^bb12
    cir.switch.flat %40 : !s32i, ^bb29 [
      7: ^bb15
    ] loc(#loc104)
  ^bb14:  // no predecessors
    cir.br ^bb15 loc(#loc107)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc216)
  ^bb16:  // pred: ^bb15
    %41 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %43 = cir.cmp(gt, %41, %42) : !s32i, !cir.bool loc(#loc217)
    cir.brcond %43 ^bb17, ^bb22 loc(#loc112)
  ^bb17:  // pred: ^bb16
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %45 = cir.const #cir.int<2000> : !s32i loc(#loc114)
    %46 = cir.cmp(le, %44, %45) : !s32i, !cir.bool loc(#loc218)
    cir.brcond %46 ^bb18, ^bb19 loc(#loc112)
  ^bb18:  // pred: ^bb17
    %47 = cir.const #true loc(#loc112)
    cir.br ^bb20(%47 : !cir.bool) loc(#loc112)
  ^bb19:  // pred: ^bb17
    %48 = cir.const #false loc(#loc112)
    cir.br ^bb20(%48 : !cir.bool) loc(#loc112)
  ^bb20(%49: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":123:23)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc112)
  ^bb21:  // pred: ^bb20
    cir.br ^bb23(%49 : !cir.bool) loc(#loc112)
  ^bb22:  // pred: ^bb16
    %50 = cir.const #false loc(#loc112)
    cir.br ^bb23(%50 : !cir.bool) loc(#loc112)
  ^bb23(%51: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":123:23)):  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc112)
  ^bb24:  // pred: ^bb23
    cir.brcond %51 ^bb25, ^bb26 loc(#loc219)
  ^bb25:  // pred: ^bb24
    %52 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %53 = cir.cast(integral, %52 : !s32i), !u32i loc(#loc118)
    %54 = cir.call @usleep(%53) : (!u32i) -> !s32i loc(#loc119)
    %55 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc120)
    %56 = cir.cast(array_to_ptrdecay, %55 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc120)
    cir.call @printLine(%56) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    cir.br ^bb27 loc(#loc116)
  ^bb26:  // pred: ^bb24
    %57 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc122)
    %58 = cir.cast(array_to_ptrdecay, %57 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    cir.br ^bb27 loc(#loc109)
  ^bb27:  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc109)
  ^bb28:  // pred: ^bb27
    cir.br ^bb30 loc(#loc124)
  ^bb29:  // pred: ^bb13
    %59 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc125)
    %60 = cir.cast(array_to_ptrdecay, %59 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc125)
    cir.call @printLine(%60) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    cir.br ^bb30 loc(#loc127)
  ^bb30:  // 2 preds: ^bb28, ^bb29
    cir.br ^bb31 loc(#loc105)
  ^bb31:  // pred: ^bb30
    cir.return loc(#loc88)
  } loc(#loc210)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc221)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc133)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    cir.br ^bb1 loc(#loc223)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc137)
    cir.br ^bb2 loc(#loc135)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc135)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc138)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc139)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    cir.br ^bb6 loc(#loc141)
  ^bb5:  // pred: ^bb2
    %6 = cir.const #cir.int<20> : !s32i loc(#loc142)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    cir.br ^bb6 loc(#loc144)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc136)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc225)
  ^bb8:  // pred: ^bb7
    %7 = cir.const #cir.int<7> : !s32i loc(#loc147)
    cir.br ^bb9 loc(#loc145)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %7 : !s32i, ^bb12 [
      7: ^bb11
    ] loc(#loc145)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc148)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc149)
    %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc150)
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc151)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc151)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc152)
    cir.br ^bb13 loc(#loc153)
  ^bb12:  // pred: ^bb9
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc154)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc154)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc155)
    cir.br ^bb13 loc(#loc156)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc146)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc129)
  } loc(#loc220)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc227)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc161)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc162)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    cir.br ^bb1 loc(#loc229)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc166)
    cir.br ^bb2 loc(#loc164)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc164)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc167)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.const #cir.int<20> : !s32i loc(#loc168)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    cir.br ^bb6 loc(#loc170)
  ^bb5:  // pred: ^bb2
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc171)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc172)
    cir.br ^bb6 loc(#loc173)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc165)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc231)
  ^bb8:  // pred: ^bb7
    %7 = cir.const #cir.int<7> : !s32i loc(#loc176)
    cir.br ^bb9 loc(#loc174)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %7 : !s32i, ^bb12 [
      7: ^bb11
    ] loc(#loc174)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc177)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc178)
    %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc179)
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc180)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc180)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc181)
    cir.br ^bb13 loc(#loc182)
  ^bb12:  // pred: ^bb9
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc183)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc183)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    cir.br ^bb13 loc(#loc185)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc175)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc158)
  } loc(#loc226)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":43:19)
#loc6 = loc("/usr/include/unistd.h":480:1)
#loc7 = loc("/usr/include/unistd.h":480:43)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":51:19)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":30:1)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":58:1)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":32:5)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":32:9)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":34:14)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":34:13)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":34:5)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":35:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":45:5)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":35:12)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":37:5)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":39:9)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":40:9)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":43:9)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":44:9)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":46:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":57:5)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":46:12)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":48:5)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":50:15)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":50:9)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":51:9)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":52:9)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":55:19)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":55:9)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":56:9)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":202:1)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":208:1)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":204:5)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":204:14)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":205:5)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":205:14)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":206:5)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":206:14)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":207:5)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":207:14)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":92:23)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":96:23)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":65:1)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":100:1)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":67:5)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":67:9)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":69:14)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":69:13)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":69:5)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":70:5)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":80:5)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":70:12)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":72:5)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":74:9)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":75:9)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":78:19)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":78:9)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":79:9)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":81:5)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":99:5)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":81:12)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":83:5)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":85:19)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":85:9)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":86:9)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":89:9)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":97:9)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":89:13)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":89:21)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":89:26)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":89:35)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":90:9)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":93:9)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":95:9)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":91:19)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":91:13)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":92:13)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":96:13)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":98:9)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":103:1)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":138:1)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":105:5)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":105:9)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":107:14)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":107:13)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":107:5)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":108:5)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":118:5)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":108:12)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":110:5)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":112:9)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":113:9)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":116:19)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":116:9)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":117:9)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":119:5)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":137:5)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":119:12)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":121:5)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":123:9)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":131:9)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":123:13)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":123:21)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":123:26)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":123:35)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":124:9)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":127:9)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":129:9)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":125:19)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":125:13)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":126:23)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":126:13)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":130:23)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":130:13)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":132:9)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":135:19)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":135:9)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":136:9)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":141:1)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":169:1)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":143:5)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":143:9)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":145:14)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":145:13)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":145:5)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":146:5)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":156:5)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":146:12)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":148:5)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":150:19)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":150:9)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":151:9)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":154:17)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":154:9)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":155:9)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":157:5)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":168:5)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":157:12)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":159:5)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":161:15)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":161:9)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":162:19)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":162:9)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":163:9)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":166:19)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":166:9)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":167:9)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":172:1)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":200:1)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":174:5)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":174:9)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":176:14)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":176:13)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":176:5)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":177:5)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":187:5)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":177:12)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":179:5)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":181:17)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":181:9)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":182:9)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":185:19)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":185:9)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":186:9)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":188:5)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":199:5)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":188:12)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":190:5)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":192:15)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":192:9)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":193:19)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":193:9)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":194:9)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":197:19)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":197:9)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_sleep_15.c":198:9)
#loc186 = loc(fused[#loc1, #loc2])
#loc187 = loc(fused[#loc3, #loc4])
#loc188 = loc(fused[#loc6, #loc7])
#loc189 = loc(fused[#loc9, #loc10])
#loc190 = loc(fused[#loc11, #loc12])
#loc191 = loc(fused[#loc15, #loc13])
#loc192 = loc(fused[#loc16, #loc17])
#loc193 = loc(fused[#loc21, #loc20])
#loc194 = loc(fused[#loc25, #loc26])
#loc195 = loc(fused[#loc36, #loc37])
#loc196 = loc(fused[#loc38, #loc39])
#loc197 = loc(fused[#loc40, #loc41])
#loc198 = loc(fused[#loc42, #loc43])
#loc199 = loc(fused[#loc44, #loc45])
#loc200 = loc(fused[#loc48, #loc49])
#loc201 = loc(fused[#loc50, #loc51])
#loc202 = loc(fused[#loc54, #loc52])
#loc203 = loc(fused[#loc55, #loc56])
#loc204 = loc(fused[#loc60, #loc59])
#loc205 = loc(fused[#loc65, #loc66])
#loc206 = loc(fused[#loc72, #loc73])
#loc207 = loc(fused[#loc74, #loc75])
#loc208 = loc(fused[#loc77, #loc78])
#loc209 = loc(fused[#loc79, #loc80, #loc81, #loc73])
#loc210 = loc(fused[#loc87, #loc88])
#loc211 = loc(fused[#loc89, #loc90])
#loc212 = loc(fused[#loc93, #loc91])
#loc213 = loc(fused[#loc94, #loc95])
#loc214 = loc(fused[#loc99, #loc98])
#loc215 = loc(fused[#loc104, #loc105])
#loc216 = loc(fused[#loc108, #loc109])
#loc217 = loc(fused[#loc110, #loc111])
#loc218 = loc(fused[#loc113, #loc114])
#loc219 = loc(fused[#loc115, #loc116, #loc117, #loc109])
#loc220 = loc(fused[#loc128, #loc129])
#loc221 = loc(fused[#loc130, #loc131])
#loc222 = loc(fused[#loc134, #loc132])
#loc223 = loc(fused[#loc135, #loc136])
#loc224 = loc(fused[#loc143, #loc142])
#loc225 = loc(fused[#loc145, #loc146])
#loc226 = loc(fused[#loc157, #loc158])
#loc227 = loc(fused[#loc159, #loc160])
#loc228 = loc(fused[#loc163, #loc161])
#loc229 = loc(fused[#loc164, #loc165])
#loc230 = loc(fused[#loc169, #loc168])
#loc231 = loc(fused[#loc174, #loc175])
