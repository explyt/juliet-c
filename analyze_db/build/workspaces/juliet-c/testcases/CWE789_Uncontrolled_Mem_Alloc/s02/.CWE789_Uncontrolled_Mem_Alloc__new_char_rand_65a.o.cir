!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_657badSinkEm(!u64i) loc(#loc51)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc52)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_653badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc54)
    %1 = cir.alloca !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc55)
    %2 = cir.get_global @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_657badSinkEm : !cir.ptr<!cir.func<(!u64i)>> loc(#loc10)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>> loc(#loc55)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc11)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc11)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc56)
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc13)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc13)
    cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc57)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, !cir.ptr<!cir.func<(!u64i)>> loc(#loc16)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc17)
    cir.call %7(%8) : (!cir.ptr<!cir.func<(!u64i)>>, !u64i) -> () loc(#loc16)
    cir.return loc(#loc6)
  } loc(#loc53)
  cir.func private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_6511goodG2BSinkEm(!u64i) loc(#loc58)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc60)
    %1 = cir.alloca !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc61)
    %2 = cir.get_global @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_6511goodG2BSinkEm : !cir.ptr<!cir.func<(!u64i)>> loc(#loc25)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>> loc(#loc61)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc26)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc62)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc28)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc28)
    cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc63)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, !cir.ptr<!cir.func<(!u64i)>> loc(#loc30)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    cir.call %7(%8) : (!cir.ptr<!cir.func<(!u64i)>>, !u64i) -> () loc(#loc30)
    cir.return loc(#loc21)
  } loc(#loc59)
  cir.func private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_6511goodB2GSinkEm(!u64i) loc(#loc64)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc66)
    %1 = cir.alloca !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc67)
    %2 = cir.get_global @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_6511goodB2GSinkEm : !cir.ptr<!cir.func<(!u64i)>> loc(#loc39)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>> loc(#loc67)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc40)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc68)
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc42)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc42)
    cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc69)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!u64i)>>>, !cir.ptr<!cir.func<(!u64i)>> loc(#loc45)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    cir.call %7(%8) : (!cir.ptr<!cir.func<(!u64i)>>, !u64i) -> () loc(#loc45)
    cir.return loc(#loc35)
  } loc(#loc65)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_654goodEv() extra(#fn_attr1) {
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65L7goodG2BEv() : () -> () loc(#loc49)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65L7goodB2GEv() : () -> () loc(#loc50)
    cir.return loc(#loc48)
  } loc(#loc70)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":0:0)
#loc1 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":32:1)
#loc2 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":32:25)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":34:1)
#loc6 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":45:1)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":36:5)
#loc8 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":36:12)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":38:5)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":38:32)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":40:12)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":40:5)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":42:12)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":42:5)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":42:17)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":44:5)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":44:13)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":52:1)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":52:29)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":54:1)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":63:1)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":56:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":56:12)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":57:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":57:32)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":59:12)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":59:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":61:12)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":61:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":62:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":62:13)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":66:1)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":66:29)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":68:1)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":77:1)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":70:5)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":70:12)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":71:5)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":71:32)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":73:12)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":73:5)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":75:12)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":75:5)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":75:17)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":76:5)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":76:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":79:1)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":83:1)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":81:5)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65a.cpp":82:5)
#loc51 = loc(fused[#loc1, #loc2])
#loc52 = loc(fused[#loc3, #loc4])
#loc53 = loc(fused[#loc5, #loc6])
#loc54 = loc(fused[#loc7, #loc8])
#loc55 = loc(fused[#loc9, #loc10])
#loc56 = loc(fused[#loc12, #loc11])
#loc57 = loc(fused[#loc14, #loc15])
#loc58 = loc(fused[#loc18, #loc19])
#loc59 = loc(fused[#loc20, #loc21])
#loc60 = loc(fused[#loc22, #loc23])
#loc61 = loc(fused[#loc24, #loc25])
#loc62 = loc(fused[#loc27, #loc26])
#loc63 = loc(fused[#loc29, #loc28])
#loc64 = loc(fused[#loc32, #loc33])
#loc65 = loc(fused[#loc34, #loc35])
#loc66 = loc(fused[#loc36, #loc37])
#loc67 = loc(fused[#loc38, #loc39])
#loc68 = loc(fused[#loc41, #loc40])
#loc69 = loc(fused[#loc43, #loc44])
#loc70 = loc(fused[#loc47, #loc48])
