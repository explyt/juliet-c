!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s07/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc126)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc127)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc129)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc133)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    cir.br ^bb1 loc(#loc135)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc126)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc136)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
    %9 = cir.const #cir.int<65> : !s32i loc(#loc25)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc26)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc26)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc137)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc30)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %17 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc32)
    %20 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc138)
    cir.br ^bb3 loc(#loc21)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc139)
  ^bb5:  // pred: ^bb4
    %21 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc131)
    cir.store %21, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc131)
    %22 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc37)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc38)
    %24 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc39)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc39)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %30 = cir.call @snprintf(%23, %26, %28, %29) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc37)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb6 loc(#loc36)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc11)
  } loc(#loc130)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc141)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc46)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc142)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc48)
    cir.return loc(#loc45)
  } loc(#loc140)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc52)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc145)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc147)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc143)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc65)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc150)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc52)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    cir.br ^bb4 loc(#loc67)
  ^bb3:  // pred: ^bb1
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc70)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc71)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc72)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc72)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc72)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc151)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc76)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc76)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %19 = cir.const #cir.int<50> : !s32i loc(#loc78)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc78)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc80)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc152)
    cir.br ^bb4 loc(#loc64)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc64)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc153)
  ^bb6:  // pred: ^bb5
    %23 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc145)
    cir.store %23, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc145)
    %24 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc83)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc84)
    %26 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc85)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    %28 = cir.call @strlen(%27) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc85)
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc87)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc87)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %32 = cir.call @snprintf(%25, %28, %30, %31) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc83)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    cir.br ^bb7 loc(#loc82)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc54)
  } loc(#loc144)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc155)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc157)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc99)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    cir.br ^bb1 loc(#loc159)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc126)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc103)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc160)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
    %9 = cir.const #cir.int<65> : !s32i loc(#loc106)
    %10 = cir.const #cir.int<50> : !s32i loc(#loc107)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc107)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc107)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc161)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc111)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %17 = cir.const #cir.int<50> : !s32i loc(#loc113)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc113)
    %20 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc115)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc162)
    cir.br ^bb3 loc(#loc102)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc102)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc163)
  ^bb5:  // pred: ^bb4
    %21 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc155)
    cir.store %21, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc155)
    %22 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc118)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc119)
    %24 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc120)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc120)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc122)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc122)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %30 = cir.call @snprintf(%23, %26, %28, %29) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc118)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    cir.br ^bb6 loc(#loc117)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc92)
  } loc(#loc154)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s07/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":31:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":31:25)
#loc3 = loc("/usr/include/stdio.h":385:1)
#loc4 = loc("/usr/include/stdio.h":387:62)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":50:38)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":36:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":53:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":48:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":48:25)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":38:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":38:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":39:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":39:24)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":40:12)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":40:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":41:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":46:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":41:8)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":42:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":44:16)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":44:22)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":44:27)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":44:31)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":44:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":44:32)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":45:23)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":45:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":45:14)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":45:18)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":45:19)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":47:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":52:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":50:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":50:18)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":50:24)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":50:31)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":50:44)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":51:19)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":51:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":104:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":108:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":106:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":106:14)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":107:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":107:14)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":32:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":32:26)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":68:19)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":60:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":82:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":77:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":77:25)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":62:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":62:12)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":63:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":63:24)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":64:12)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":64:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":65:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":75:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":65:8)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":66:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":69:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":71:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":68:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":73:16)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":73:22)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":73:27)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":73:30)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":73:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":73:31)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":74:22)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":74:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":74:14)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":74:17)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":74:18)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":76:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":81:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":79:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":79:18)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":79:24)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":79:31)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":79:38)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":79:44)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":80:19)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":80:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":85:1)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":102:1)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":97:9)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":97:25)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":87:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":87:12)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":88:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":88:24)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":89:12)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":89:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":90:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":95:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":90:8)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":91:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":93:16)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":93:22)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":93:27)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":93:30)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":93:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":93:31)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":94:22)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":94:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":94:14)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":94:17)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":94:18)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":96:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":101:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":99:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":99:18)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":99:24)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":99:31)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":99:38)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":99:44)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":100:19)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_05.c":100:9)
#loc126 = loc(fused[#loc1, #loc2])
#loc127 = loc(fused[#loc3, #loc4])
#loc128 = loc(fused[#loc5, #loc6])
#loc129 = loc(fused[#loc8, #loc9])
#loc130 = loc(fused[#loc10, #loc11])
#loc131 = loc(fused[#loc12, #loc13])
#loc132 = loc(fused[#loc14, #loc15])
#loc133 = loc(fused[#loc16, #loc17])
#loc134 = loc(fused[#loc19, #loc18])
#loc135 = loc(fused[#loc20, #loc21])
#loc136 = loc(fused[#loc23, #loc21])
#loc137 = loc(fused[#loc28, #loc29])
#loc138 = loc(fused[#loc31, #loc30])
#loc139 = loc(fused[#loc35, #loc36])
#loc140 = loc(fused[#loc44, #loc45])
#loc141 = loc(fused[#loc46, #loc47])
#loc142 = loc(fused[#loc48, #loc49])
#loc143 = loc(fused[#loc50, #loc51])
#loc144 = loc(fused[#loc53, #loc54])
#loc145 = loc(fused[#loc55, #loc56])
#loc146 = loc(fused[#loc57, #loc58])
#loc147 = loc(fused[#loc59, #loc60])
#loc148 = loc(fused[#loc62, #loc61])
#loc149 = loc(fused[#loc63, #loc64])
#loc150 = loc(fused[#loc66, #loc67, #loc68, #loc64])
#loc151 = loc(fused[#loc74, #loc75])
#loc152 = loc(fused[#loc77, #loc76])
#loc153 = loc(fused[#loc81, #loc82])
#loc154 = loc(fused[#loc91, #loc92])
#loc155 = loc(fused[#loc93, #loc94])
#loc156 = loc(fused[#loc95, #loc96])
#loc157 = loc(fused[#loc97, #loc98])
#loc158 = loc(fused[#loc100, #loc99])
#loc159 = loc(fused[#loc101, #loc102])
#loc160 = loc(fused[#loc104, #loc102])
#loc161 = loc(fused[#loc109, #loc110])
#loc162 = loc(fused[#loc112, #loc111])
#loc163 = loc(fused[#loc116, #loc117])
