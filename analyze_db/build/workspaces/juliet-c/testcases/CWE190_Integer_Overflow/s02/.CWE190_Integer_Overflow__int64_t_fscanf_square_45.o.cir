!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc107)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc108)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc109)
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__int64_t_fscanf_square_45_badData = #cir.int<0> : !s64i {alignment = 8 : i64} loc(#loc110)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_square_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc112)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc13)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc113)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc15)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc108)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc16)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc109)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc109)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc15)
    %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc17)
    %9 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_square_45_badData : !cir.ptr<!s64i> loc(#loc110)
    cir.store %8, %9 : !s64i, !cir.ptr<!s64i> loc(#loc114)
    %10 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc115)
    cir.call %10() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc19)
    cir.return loc(#loc10)
  } loc(#loc111)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_square_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc117)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc23)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc118)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc25)
    cir.return loc(#loc22)
  } loc(#loc116)
  cir.func private @printLongLongLine(!s64i) loc(#loc119)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc121)
    %1 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_square_45_badData : !cir.ptr<!s64i> loc(#loc110)
    %2 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc32)
    cir.store %2, %0 : !s64i, !cir.ptr<!s64i> loc(#loc121)
    cir.scope {
      %3 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc123)
      %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc37)
      %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc36)
      %6 = cir.binop(mul, %4, %5) nsw : !s64i loc(#loc37)
      cir.store %6, %3 : !s64i, !cir.ptr<!s64i> loc(#loc123)
      %7 = cir.load %3 : !cir.ptr<!s64i>, !s64i loc(#loc38)
      cir.call @printLongLongLine(%7) : (!s64i) -> () loc(#loc39)
    } loc(#loc122)
    cir.return loc(#loc30)
  } loc(#loc120)
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__int64_t_fscanf_square_45_goodG2BData = #cir.int<0> : !s64i {alignment = 8 : i64} loc(#loc124)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc126)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc46)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc127)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc48)
    %3 = cir.cast(integral, %2 : !s32i), !s64i loc(#loc48)
    cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc128)
    %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc50)
    %5 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_square_45_goodG2BData : !cir.ptr<!s64i> loc(#loc124)
    cir.store %4, %5 : !s64i, !cir.ptr<!s64i> loc(#loc129)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc130)
    cir.call %6() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc52)
    cir.return loc(#loc43)
  } loc(#loc125)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_square_45_goodG2BData : !cir.ptr<!s64i> loc(#loc124)
    %2 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc57)
    cir.store %2, %0 : !s64i, !cir.ptr<!s64i> loc(#loc132)
    cir.scope {
      %3 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc134)
      %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc62)
      %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc61)
      %6 = cir.binop(mul, %4, %5) nsw : !s64i loc(#loc62)
      cir.store %6, %3 : !s64i, !cir.ptr<!s64i> loc(#loc134)
      %7 = cir.load %3 : !cir.ptr<!s64i>, !s64i loc(#loc63)
      cir.call @printLongLongLine(%7) : (!s64i) -> () loc(#loc64)
    } loc(#loc133)
    cir.return loc(#loc55)
  } loc(#loc131)
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__int64_t_fscanf_square_45_goodB2GData = #cir.int<0> : !s64i {alignment = 8 : i64} loc(#loc135)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc71)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc138)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc73)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc108)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc74)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc139)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc139)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc73)
    %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc77)
    %9 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_square_45_goodB2GData : !cir.ptr<!s64i> loc(#loc135)
    cir.store %8, %9 : !s64i, !cir.ptr<!s64i> loc(#loc140)
    %10 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<()>> loc(#loc141)
    cir.call %10() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc79)
    cir.return loc(#loc68)
  } loc(#loc136)
  cir.func private @imaxabs(!s64i) -> !s64i extra(#fn_attr1) loc(#loc142)
  cir.func private @sqrtl(!cir.long_double<!cir.f80>) -> !cir.long_double<!cir.f80> extra(#fn_attr1) loc(#loc83)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc86)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc145)
    %1 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_square_45_goodB2GData : !cir.ptr<!s64i> loc(#loc135)
    %2 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc90)
    cir.store %2, %0 : !s64i, !cir.ptr<!s64i> loc(#loc145)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc93)
      %4 = cir.call @imaxabs(%3) : (!s64i) -> !s64i side_effect(const) extra(#fn_attr1) loc(#loc94)
      %5 = cir.cast(int_to_float, %4 : !s64i), !cir.long_double<!cir.f80> loc(#loc94)
      %6 = cir.get_global @sqrtl : !cir.ptr<!cir.func<(!cir.long_double<!cir.f80>) -> !cir.long_double<!cir.f80>>> loc(#loc95)
      %7 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc96)
      %8 = cir.cast(int_to_float, %7 : !s64i), !cir.long_double<!cir.f80> loc(#loc96)
      %9 = cir.call @sqrtl(%8) : (!cir.long_double<!cir.f80>) -> !cir.long_double<!cir.f80> extra(#fn_attr1) loc(#loc95)
      %10 = cir.cmp(le, %5, %9) : !cir.long_double<!cir.f80>, !cir.bool loc(#loc147)
      cir.if %10 {
        %11 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc149)
        %12 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc103)
        %13 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc102)
        %14 = cir.binop(mul, %12, %13) nsw : !s64i loc(#loc103)
        cir.store %14, %11 : !s64i, !cir.ptr<!s64i> loc(#loc149)
        %15 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc104)
        cir.call @printLongLongLine(%15) : (!s64i) -> () loc(#loc105)
      } else {
        %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc86)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc86)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc106)
      } loc(#loc148)
    } loc(#loc146)
    cir.return loc(#loc88)
  } loc(#loc144)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":44:20)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":44:24)
#loc7 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":23:1)
#loc8 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":23:16)
#loc9 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":39:1)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":47:1)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":41:5)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":41:13)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":42:12)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":42:5)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":44:5)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":44:13)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":45:65)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":45:5)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":46:5)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":46:13)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":100:1)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":104:1)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":102:5)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":102:13)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":103:5)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":103:13)
#loc27 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc28 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":29:1)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":37:1)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":31:5)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":31:20)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":32:5)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":36:5)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":34:9)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":34:33)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":34:26)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":35:27)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":35:9)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":24:1)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":24:16)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":64:1)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":72:1)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":66:5)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":66:13)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":67:12)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":67:5)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":69:12)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":69:5)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":70:69)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":70:5)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":71:5)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":71:17)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":54:1)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":62:1)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":56:5)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":56:20)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":57:5)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":61:5)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":59:9)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":59:33)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":59:26)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":60:27)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":60:9)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":25:1)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":25:16)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":90:1)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":98:1)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":92:5)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":92:13)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":93:12)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":93:5)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":95:5)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":95:13)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":95:20)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":95:24)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":96:69)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":96:5)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":97:5)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":97:17)
#loc81 = loc("/usr/include/inttypes.h":351:1)
#loc82 = loc("/usr/include/inttypes.h":351:74)
#loc83 = loc("/usr/include/x86_64-linux-gnu/bits/mathcalls.h":143:1)
#loc84 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc85 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":86:19)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":75:1)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":88:1)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":77:5)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":77:20)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":79:5)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":87:5)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":79:27)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":79:9)
#loc95 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":79:36)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":79:42)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":79:51)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":80:5)
#loc99 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":83:5)
#loc100 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":85:5)
#loc101 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":81:9)
#loc102 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":81:33)
#loc103 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":81:26)
#loc104 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":82:27)
#loc105 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":82:9)
#loc106 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_45.c":86:9)
#loc107 = loc(fused[#loc1, #loc2])
#loc108 = loc(fused[#loc3, #loc4])
#loc109 = loc(fused[#loc5, #loc6])
#loc110 = loc(fused[#loc7, #loc8])
#loc111 = loc(fused[#loc9, #loc10])
#loc112 = loc(fused[#loc11, #loc12])
#loc113 = loc(fused[#loc14, #loc13])
#loc114 = loc(fused[#loc18, #loc17])
#loc115 = loc(fused[#loc19, #loc20])
#loc116 = loc(fused[#loc21, #loc22])
#loc117 = loc(fused[#loc23, #loc24])
#loc118 = loc(fused[#loc25, #loc26])
#loc119 = loc(fused[#loc27, #loc28])
#loc120 = loc(fused[#loc29, #loc30])
#loc121 = loc(fused[#loc31, #loc32])
#loc122 = loc(fused[#loc33, #loc34])
#loc123 = loc(fused[#loc35, #loc36])
#loc124 = loc(fused[#loc40, #loc41])
#loc125 = loc(fused[#loc42, #loc43])
#loc126 = loc(fused[#loc44, #loc45])
#loc127 = loc(fused[#loc47, #loc46])
#loc128 = loc(fused[#loc49, #loc48])
#loc129 = loc(fused[#loc51, #loc50])
#loc130 = loc(fused[#loc52, #loc53])
#loc131 = loc(fused[#loc54, #loc55])
#loc132 = loc(fused[#loc56, #loc57])
#loc133 = loc(fused[#loc58, #loc59])
#loc134 = loc(fused[#loc60, #loc61])
#loc135 = loc(fused[#loc65, #loc66])
#loc136 = loc(fused[#loc67, #loc68])
#loc137 = loc(fused[#loc69, #loc70])
#loc138 = loc(fused[#loc72, #loc71])
#loc139 = loc(fused[#loc75, #loc76])
#loc140 = loc(fused[#loc78, #loc77])
#loc141 = loc(fused[#loc79, #loc80])
#loc142 = loc(fused[#loc81, #loc82])
#loc143 = loc(fused[#loc84, #loc85])
#loc144 = loc(fused[#loc87, #loc88])
#loc145 = loc(fused[#loc89, #loc90])
#loc146 = loc(fused[#loc91, #loc92])
#loc147 = loc(fused[#loc94, #loc97])
#loc148 = loc(fused[#loc98, #loc99, #loc100, #loc92])
#loc149 = loc(fused[#loc101, #loc102])
