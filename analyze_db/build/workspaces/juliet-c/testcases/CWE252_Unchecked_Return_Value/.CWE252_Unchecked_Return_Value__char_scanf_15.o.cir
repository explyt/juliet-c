!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_scanf_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @__isoc99_scanf(!cir.ptr<!s8i>, ...) -> !s32i loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_scanf_15_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc11)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc88)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc89)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc88)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc88)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
            cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc89)
            %5 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc19)
            %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc3)
            %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc3)
            %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
            %9 = cir.call @__isoc99_scanf(%7, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc19)
          } loc(#loc87)
          cir.break loc(#loc21)
        } loc(#loc12)
        cir.case(default, []) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc6)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc6)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc23)
          cir.break loc(#loc24)
        } loc(#loc22)
        cir.yield loc(#loc9)
      } loc(#loc9)
    } loc(#loc86)
    cir.return loc(#loc8)
  } loc(#loc85)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_scanf_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc91)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc27)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc92)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    cir.return loc(#loc26)
  } loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"scanf failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc31)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc36)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc38)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc38)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc39)
          cir.break loc(#loc40)
        } loc(#loc37)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc96)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc97)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc96)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc96)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
            cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc97)
            cir.scope {
              %5 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc50)
              %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc51)
              %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc51)
              %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
              %9 = cir.call @__isoc99_scanf(%7, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc50)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc53)
              %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc53)
              %12 = cir.cmp(eq, %9, %11) : !s32i, !cir.bool loc(#loc99)
              cir.if %12 {
                %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc31)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc31)
                cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc55)
              } loc(#loc100)
            } loc(#loc98)
          } loc(#loc95)
          cir.break loc(#loc56)
        } loc(#loc41)
        cir.yield loc(#loc34)
      } loc(#loc34)
    } loc(#loc94)
    cir.return loc(#loc33)
  } loc(#loc93)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc61)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc104)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc105)
            %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc104)
            cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc104)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
            cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
            cir.scope {
              %5 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc71)
              %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc72)
              %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc72)
              %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
              %9 = cir.call @__isoc99_scanf(%7, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc71)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc74)
              %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc74)
              %12 = cir.cmp(eq, %9, %11) : !s32i, !cir.bool loc(#loc107)
              cir.if %12 {
                %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc76)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc76)
                cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc77)
              } loc(#loc108)
            } loc(#loc106)
          } loc(#loc103)
          cir.break loc(#loc78)
        } loc(#loc62)
        cir.case(default, []) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc80)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc80)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc81)
          cir.break loc(#loc82)
        } loc(#loc79)
        cir.yield loc(#loc59)
      } loc(#loc59)
    } loc(#loc102)
    cir.return loc(#loc58)
  } loc(#loc101)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_scanf_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":466:1)
#loc2 = loc("/usr/include/stdio.h":466:12)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":35:15)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":40:19)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":24:1)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":43:1)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":26:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":42:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":26:12)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":28:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":29:5)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":36:5)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":32:9)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":32:32)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":33:9)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":33:23)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":35:9)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":35:25)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":37:5)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":38:5)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":40:9)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":41:9)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":99:1)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":103:1)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":101:5)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":101:11)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":102:5)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":102:11)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":67:23)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":50:1)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":72:1)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":52:5)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":71:5)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":52:12)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":54:5)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":56:19)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":56:9)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":57:9)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":58:5)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":59:5)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":69:5)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":62:9)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":62:32)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":63:9)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":63:23)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":65:9)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":68:9)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":65:13)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":65:19)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":65:29)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":65:38)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":66:9)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":67:13)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":70:5)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":75:1)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":97:1)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":77:5)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":96:5)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":77:12)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":79:5)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":80:5)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":90:5)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":83:9)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":83:32)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":84:9)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":84:23)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":86:9)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":89:9)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":86:13)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":86:19)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":86:29)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":86:38)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":87:9)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":88:23)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":88:13)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":91:5)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":92:5)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":94:19)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":94:9)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_scanf_15.c":95:9)
#loc83 = loc(fused[#loc1, #loc2])
#loc84 = loc(fused[#loc4, #loc5])
#loc85 = loc(fused[#loc7, #loc8])
#loc86 = loc(fused[#loc9, #loc10])
#loc87 = loc(fused[#loc13, #loc14])
#loc88 = loc(fused[#loc15, #loc16])
#loc89 = loc(fused[#loc17, #loc18])
#loc90 = loc(fused[#loc25, #loc26])
#loc91 = loc(fused[#loc27, #loc28])
#loc92 = loc(fused[#loc29, #loc30])
#loc93 = loc(fused[#loc32, #loc33])
#loc94 = loc(fused[#loc34, #loc35])
#loc95 = loc(fused[#loc42, #loc43])
#loc96 = loc(fused[#loc44, #loc45])
#loc97 = loc(fused[#loc46, #loc47])
#loc98 = loc(fused[#loc48, #loc49])
#loc99 = loc(fused[#loc50, #loc53])
#loc100 = loc(fused[#loc54, #loc49])
#loc101 = loc(fused[#loc57, #loc58])
#loc102 = loc(fused[#loc59, #loc60])
#loc103 = loc(fused[#loc63, #loc64])
#loc104 = loc(fused[#loc65, #loc66])
#loc105 = loc(fused[#loc67, #loc68])
#loc106 = loc(fused[#loc69, #loc70])
#loc107 = loc(fused[#loc71, #loc74])
#loc108 = loc(fused[#loc75, #loc70])
