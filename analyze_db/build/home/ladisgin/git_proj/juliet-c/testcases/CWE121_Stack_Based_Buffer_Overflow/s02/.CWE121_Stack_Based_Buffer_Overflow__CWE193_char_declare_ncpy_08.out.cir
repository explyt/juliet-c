!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":132:10)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":132:14)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":132:20)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":132:32)
#loc169 = loc(fused[#loc58, #loc59])
#loc170 = loc(fused[#loc60, #loc61])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc146)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc147)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc148)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc149)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc150)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc151)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc148)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc154)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc155)
    cir.br ^bb1 loc(#loc156)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc157)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc23)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc158)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc28)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc31)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc160)
    cir.br ^bb3 loc(#loc22)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc22)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc161)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc148)
    cir.copy %13 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc148)
    %14 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc34)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc36)
    %17 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc37)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc38)
    %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc37)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc39)
    %22 = cir.binop(add, %19, %21) : !u64i loc(#loc162)
    %23 = cir.call @strncpy(%15, %16, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc34)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    cir.br ^bb6 loc(#loc33)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc14)
  } loc(#loc152)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc163)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc166)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc55)
  cir.func @main(%arg0: !s32i loc(fused[#loc58, #loc59]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc60, #loc61])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc169)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc170)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc57)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc62)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc64)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc64)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc65)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08_good() : () -> () loc(#loc67)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc53)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc54)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08_bad() : () -> () loc(#loc71)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc55)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    cir.return %17 : !s32i loc(#loc173)
  } loc(#loc168)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc77)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc78)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    cir.return %2 : !s32i loc(#loc175)
  } loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc80)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc178)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc179)
    cir.br ^bb1 loc(#loc180)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc181)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc91)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc91)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc182)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc80)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    cir.br ^bb4 loc(#loc94)
  ^bb3:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc97)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc183)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc99)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc102)
    cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc184)
    cir.br ^bb4 loc(#loc90)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc90)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc185)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc147)
    cir.copy %15 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc147)
    %16 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc105)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc107)
    %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc108)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc109)
    %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc108)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc110)
    %24 = cir.binop(add, %21, %23) : !u64i loc(#loc186)
    %25 = cir.call @strncpy(%17, %18, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc105)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    cir.br ^bb7 loc(#loc104)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc82)
  } loc(#loc176)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc114)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc115)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    cir.return %2 : !s32i loc(#loc188)
  } loc(#loc187)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc190)
    %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc191)
    %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc192)
    cir.br ^bb1 loc(#loc193)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc194)
    %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc127)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc127)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc195)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc130)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc132)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc132)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc135)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc197)
    cir.br ^bb3 loc(#loc126)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc126)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc198)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc146)
    cir.copy %13 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc146)
    %14 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc138)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc140)
    %17 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc141)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc142)
    %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc141)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc143)
    %22 = cir.binop(add, %19, %21) : !u64i loc(#loc199)
    %23 = cir.call @strncpy(%15, %16, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc138)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    cir.br ^bb6 loc(#loc137)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc118)
  } loc(#loc189)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":108:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":108:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":86:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":86:29)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":55:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":55:29)
#loc7 = loc("/usr/include/string.h":144:1)
#loc8 = loc("/usr/include/string.h":146:14)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":42:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":61:1)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":44:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":44:12)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":45:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":45:26)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":46:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":46:29)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":47:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":53:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":47:8)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":47:26)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":48:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":51:16)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":51:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":52:19)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":52:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":52:14)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":52:15)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":54:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":60:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":58:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":58:17)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":58:23)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":58:31)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":58:38)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":58:48)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":59:19)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":59:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":116:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":120:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":118:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":118:14)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":119:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":119:14)
#loc48 = loc("/usr/include/stdlib.h":575:1)
#loc49 = loc("/usr/include/stdlib.h":575:41)
#loc50 = loc("/usr/include/time.h":76:1)
#loc51 = loc("/usr/include/time.h":76:38)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":137:15)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":139:15)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":142:15)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":144:15)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":132:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":147:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":133:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":135:27)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":135:22)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":135:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":137:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":138:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":138:74)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":139:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":142:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":143:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":143:73)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":144:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":146:12)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":146:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":30:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":33:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":32:12)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":32:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":76:19)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":68:1)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":92:1)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":70:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":70:12)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":71:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":71:26)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":72:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":72:29)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":73:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":84:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":73:8)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":73:27)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":74:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":77:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":79:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":76:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":82:16)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":82:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":83:19)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":83:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":83:14)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":83:15)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":85:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":91:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":89:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":89:17)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":89:23)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":89:31)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":89:38)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":89:48)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":90:19)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":90:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":35:1)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":38:1)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":37:12)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":37:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":95:1)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":114:1)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":97:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":97:12)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":98:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":98:26)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":99:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":99:29)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":100:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":106:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":100:8)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":100:26)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":101:5)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":104:16)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":104:9)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":105:19)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":105:9)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":105:14)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":105:15)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":107:5)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":113:5)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":111:9)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":111:17)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":111:23)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":111:31)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":111:38)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":111:48)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":112:19)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_08.c":112:9)
#loc146 = loc(fused[#loc1, #loc2])
#loc147 = loc(fused[#loc3, #loc4])
#loc148 = loc(fused[#loc5, #loc6])
#loc149 = loc(fused[#loc7, #loc8])
#loc150 = loc(fused[#loc9, #loc10])
#loc151 = loc(fused[#loc11, #loc12])
#loc152 = loc(fused[#loc13, #loc14])
#loc153 = loc(fused[#loc15, #loc16])
#loc154 = loc(fused[#loc17, #loc18])
#loc155 = loc(fused[#loc19, #loc20])
#loc156 = loc(fused[#loc21, #loc22])
#loc157 = loc(fused[#loc23, #loc24])
#loc158 = loc(fused[#loc25, #loc22])
#loc159 = loc(fused[#loc27, #loc26])
#loc160 = loc(fused[#loc29, #loc28])
#loc161 = loc(fused[#loc32, #loc33])
#loc162 = loc(fused[#loc37, #loc39])
#loc163 = loc(fused[#loc42, #loc43])
#loc164 = loc(fused[#loc44, #loc45])
#loc165 = loc(fused[#loc46, #loc47])
#loc166 = loc(fused[#loc48, #loc49])
#loc167 = loc(fused[#loc50, #loc51])
#loc168 = loc(fused[#loc56, #loc57])
#loc171 = loc(fused[#loc67, #loc68])
#loc172 = loc(fused[#loc71, #loc72])
#loc173 = loc(fused[#loc75, #loc74])
#loc174 = loc(fused[#loc76, #loc77])
#loc175 = loc(fused[#loc79, #loc78])
#loc176 = loc(fused[#loc81, #loc82])
#loc177 = loc(fused[#loc83, #loc84])
#loc178 = loc(fused[#loc85, #loc86])
#loc179 = loc(fused[#loc87, #loc88])
#loc180 = loc(fused[#loc89, #loc90])
#loc181 = loc(fused[#loc91, #loc92])
#loc182 = loc(fused[#loc93, #loc94, #loc95, #loc90])
#loc183 = loc(fused[#loc98, #loc97])
#loc184 = loc(fused[#loc100, #loc99])
#loc185 = loc(fused[#loc103, #loc104])
#loc186 = loc(fused[#loc108, #loc110])
#loc187 = loc(fused[#loc113, #loc114])
#loc188 = loc(fused[#loc116, #loc115])
#loc189 = loc(fused[#loc117, #loc118])
#loc190 = loc(fused[#loc119, #loc120])
#loc191 = loc(fused[#loc121, #loc122])
#loc192 = loc(fused[#loc123, #loc124])
#loc193 = loc(fused[#loc125, #loc126])
#loc194 = loc(fused[#loc127, #loc128])
#loc195 = loc(fused[#loc129, #loc126])
#loc196 = loc(fused[#loc131, #loc130])
#loc197 = loc(fused[#loc133, #loc132])
#loc198 = loc(fused[#loc136, #loc137])
#loc199 = loc(fused[#loc141, #loc143])
