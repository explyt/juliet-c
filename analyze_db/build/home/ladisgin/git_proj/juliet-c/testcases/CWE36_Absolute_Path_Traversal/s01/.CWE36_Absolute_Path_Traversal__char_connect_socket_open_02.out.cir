!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc267 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":225:10)
#loc268 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":225:14)
#loc269 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":225:20)
#loc270 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":225:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc387 = loc(fused[#loc267, #loc268])
#loc388 = loc(fused[#loc269, #loc270])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc283)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc284)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc285)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc286)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc287)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc288)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc289)
  cir.func private @close(!s32i) -> !s32i loc(#loc290)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc291)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_023badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc293)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc294)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc294)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc294)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc295)
    cir.scope {
      %4 = cir.const #cir.int<1> : !s32i loc(#loc30)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc30)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc299)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc300)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc301)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc302)
          %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc303)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc41)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc302)
          %13 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc44)
          %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
          %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc44)
          cir.store %15, %10 : !u64i, !cir.ptr<!u64i> loc(#loc303)
          cir.scope {
            cir.do {
              %16 = cir.const #cir.int<2> : !s32i loc(#loc48)
              %17 = cir.const #cir.int<1> : !u32i loc(#loc49)
              %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc49)
              %19 = cir.const #cir.int<6> : !u32i loc(#loc50)
              %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc50)
              %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
              cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc305)
              cir.scope {
                %71 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc56)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc57)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc57)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc307)
                cir.if %74 {
                  cir.break loc(#loc59)
                } loc(#loc308)
              } loc(#loc306)
              %22 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc309)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc62)
              %24 = cir.const #cir.int<16> : !u64i loc(#loc310)
              cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc311)
              %25 = cir.const #cir.int<2> : !s32i loc(#loc67)
              %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc67)
              %27 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
              cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc312)
              %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
              %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
              %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc70)
              %31 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
              %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
              cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc313)
              %33 = cir.const #cir.int<27015> : !s32i loc(#loc75)
              %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc75)
              %35 = cir.call @htons(%34) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc76)
              %36 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
              cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc314)
              cir.scope {
                %71 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc82)
                %72 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc316)
                %73 = cir.const #cir.int<16> : !u64i loc(#loc317)
                %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc317)
                %75 = cir.call @connect(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc87)
                %76 = cir.const #cir.int<1> : !s32i loc(#loc88)
                %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc88)
                %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc318)
                cir.if %78 {
                  cir.break loc(#loc90)
                } loc(#loc319)
              } loc(#loc315)
              %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc91)
              %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
              %39 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc93)
              %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc94)
              %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc320)
              %42 = cir.const #cir.int<1> : !u64i loc(#loc321)
              %43 = cir.const #cir.int<4096> : !s32i loc(#loc99)
              %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc99)
              %45 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc100)
              %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc322)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc101)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc101)
              %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc323)
              %50 = cir.binop(mul, %42, %49) : !u64i loc(#loc324)
              %51 = cir.const #cir.int<0> : !s32i loc(#loc103)
              %52 = cir.call @recv(%37, %41, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc104)
              %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc104)
              cir.store %53, %6 : !s32i, !cir.ptr<!s32i> loc(#loc325)
              cir.scope {
                %71 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                %72 = cir.const #cir.int<1> : !s32i loc(#loc110)
                %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc110)
                %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc327)
                %75 = cir.ternary(%74, true {
                  %76 = cir.const #true loc(#loc111)
                  cir.yield %76 : !cir.bool loc(#loc111)
                }, false {
                  %76 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                  %77 = cir.const #cir.int<0> : !s32i loc(#loc113)
                  %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc328)
                  %79 = cir.ternary(%78, true {
                    %80 = cir.const #true loc(#loc111)
                    cir.yield %80 : !cir.bool loc(#loc111)
                  }, false {
                    %80 = cir.const #false loc(#loc111)
                    cir.yield %80 : !cir.bool loc(#loc111)
                  }) : (!cir.bool) -> !cir.bool loc(#loc111)
                  cir.yield %79 : !cir.bool loc(#loc111)
                }) : (!cir.bool) -> !cir.bool loc(#loc111)
                cir.if %75 {
                  cir.break loc(#loc115)
                } loc(#loc329)
              } loc(#loc326)
              %54 = cir.const #cir.int<0> : !s8i loc(#loc116)
              %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
              %56 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc118)
              %57 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc119)
              %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc119)
              %59 = cir.const #cir.int<1> : !u64i loc(#loc330)
              %60 = cir.binop(div, %58, %59) : !u64i loc(#loc331)
              %61 = cir.binop(add, %56, %60) : !u64i loc(#loc332)
              %62 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc122)
              cir.store %54, %62 : !s8i, !cir.ptr<!s8i> loc(#loc333)
              %63 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
              %64 = cir.const #cir.int<13> : !s8i loc(#loc124)
              %65 = cir.cast(integral, %64 : !s8i), !s32i loc(#loc124)
              %66 = cir.call @strchr(%63, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc125)
              cir.store %66, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc334)
              cir.scope {
                %71 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc130)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s8i loc(#loc132)
                  %74 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
                  cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc337)
                } loc(#loc336)
              } loc(#loc335)
              %67 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
              %68 = cir.const #cir.int<10> : !s8i loc(#loc136)
              %69 = cir.cast(integral, %68 : !s8i), !s32i loc(#loc136)
              %70 = cir.call @strchr(%67, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc137)
              cir.store %70, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc338)
              cir.scope {
                %71 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
                %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc142)
                cir.if %72 {
                  %73 = cir.const #cir.int<0> : !s8i loc(#loc144)
                  %74 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
                  cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc341)
                } loc(#loc340)
              } loc(#loc339)
              cir.yield loc(#loc47)
            } while {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc147)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc147)
              cir.condition(%17) loc(#loc147)
            } loc(#loc304)
          } loc(#loc304)
          cir.scope {
            %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc150)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc151)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc151)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc343)
            cir.if %19 {
              %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc153)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc154)
            } loc(#loc344)
          } loc(#loc342)
        } loc(#loc298)
      } loc(#loc297)
    } loc(#loc296)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc346)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc160)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc161)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc347)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc162)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc163)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc348)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc164)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc349)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc169)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc170)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc171)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc351)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc173)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc174)
        } loc(#loc352)
      } loc(#loc350)
    } loc(#loc345)
    cir.return loc(#loc21)
  } loc(#loc292)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc175)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc353)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc178)
  cir.func internal private @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_02L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc355)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc356)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc356)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc356)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc185)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc357)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc189)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc189)
      cir.if %5 {
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc175)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc175)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc193)
      } else {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc194)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
        %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc178)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc178)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc194)
      } loc(#loc359)
    } loc(#loc358)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc361)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc200)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc201)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc202)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc362)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc203)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc204)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc363)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc205)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc364)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc210)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc211)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc212)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc366)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc214)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc215)
        } loc(#loc367)
      } loc(#loc365)
    } loc(#loc360)
    cir.return loc(#loc180)
  } loc(#loc354)
  cir.func internal private @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_02L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc369)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc370)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc370)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc370)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc222)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc371)
    cir.scope {
      %4 = cir.const #cir.int<1> : !s32i loc(#loc226)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc226)
      cir.if %5 {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc228)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc229)
        %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc230)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc230)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc228)
      } loc(#loc373)
    } loc(#loc372)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc375)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc235)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc236)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc237)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc376)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc238)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc239)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc377)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc240)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc378)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc245)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc246)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc247)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc380)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc249)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc250)
        } loc(#loc381)
      } loc(#loc379)
    } loc(#loc374)
    cir.return loc(#loc217)
  } loc(#loc368)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_024goodEv() extra(#fn_attr1) {
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_02L8goodG2B1Ev() : () -> () loc(#loc253)
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_02L8goodG2B2Ev() : () -> () loc(#loc254)
    cir.return loc(#loc252)
  } loc(#loc382)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc383)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc384)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc385)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc261)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc262)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc263)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc264)
  cir.func @main(%arg0: !s32i loc(fused[#loc267, #loc268]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc269, #loc270])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc387)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc388)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc266)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc271)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc272)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc273)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc273)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc274)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc261)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc261)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc275)
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_024goodEv() : () -> () loc(#loc276)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc262)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc262)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc277)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc263)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc263)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc278)
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_023badEv() : () -> () loc(#loc279)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc264)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc264)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc280)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc281)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc389)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc389)
    cir.return %15 : !s32i loc(#loc389)
  } loc(#loc386)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":91:53)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/string.h":226:1)
#loc15 = loc("/usr/include/string.h":227:50)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/fcntl.h":209:1)
#loc19 = loc("/usr/include/fcntl.h":209:56)
#loc20 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":57:1)
#loc21 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":141:1)
#loc22 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":59:5)
#loc23 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":59:12)
#loc24 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":60:5)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":60:37)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":61:12)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":61:5)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":62:5)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":131:5)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":62:8)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":63:5)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":64:9)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":130:9)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":69:13)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":69:17)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":70:13)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":70:32)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":71:13)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":71:19)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":72:13)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":72:36)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":73:13)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":73:41)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":73:30)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":73:37)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":74:13)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":119:21)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":84:40)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":84:49)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":84:62)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":84:33)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":84:17)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":84:73)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":85:17)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":88:17)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":85:21)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":85:38)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":86:17)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":87:21)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":89:24)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":89:25)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":89:34)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":89:37)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":89:51)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":89:17)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":89:52)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":90:38)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":90:17)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":91:43)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":91:17)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":91:63)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":92:42)
#loc76 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":92:36)
#loc77 = loc("/usr/include/netinet/in.h":250:15)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":92:17)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":92:50)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":93:17)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":96:17)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":93:29)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":93:62)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":93:63)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":93:72)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":93:86)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":93:21)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":93:92)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":94:17)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":95:21)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":100:35)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":100:59)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":100:66)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":100:64)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":100:50)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":100:73)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":100:76)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":100:87)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":100:92)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":100:107)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":100:117)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":100:118)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":100:121)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":100:30)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":100:17)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":100:122)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":101:17)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":104:17)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":101:21)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":101:35)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":101:48)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":101:51)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":101:65)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":102:17)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":103:21)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":106:61)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":106:17)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":106:22)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":106:32)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":106:45)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":106:56)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":106:57)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":108:34)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":108:40)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":108:27)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":108:17)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":108:44)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":109:17)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":112:17)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":109:21)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":110:17)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":111:32)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":111:22)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":111:21)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":113:34)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":113:40)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":113:27)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":113:17)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":113:44)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":114:17)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":117:17)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":114:21)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":115:17)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":116:32)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":116:22)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":116:21)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":119:20)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":120:13)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":123:13)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":120:17)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":120:34)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":121:13)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":122:30)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":122:17)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":132:5)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":140:5)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":133:9)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":133:13)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":135:25)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":135:31)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":135:38)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":135:47)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":135:55)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":135:20)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":135:9)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":135:63)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":136:9)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":139:9)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":136:13)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":136:26)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":136:25)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":137:9)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":138:19)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":138:13)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":156:19)
#loc176 = loc("/usr/include/string.h":149:1)
#loc177 = loc("/usr/include/string.h":150:14)
#loc178 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":165:22)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":148:1)
#loc180 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":177:1)
#loc181 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":150:5)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":150:12)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":151:5)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":151:37)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":152:12)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":152:5)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":153:5)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":167:5)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":153:8)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":154:5)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":157:5)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":159:5)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":156:9)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":165:9)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":165:16)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":168:5)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":176:5)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":169:9)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":169:13)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":171:25)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":171:31)
#loc202 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":171:38)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":171:47)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":171:55)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":171:20)
#loc206 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":171:9)
#loc207 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":171:63)
#loc208 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":172:9)
#loc209 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":175:9)
#loc210 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":172:13)
#loc211 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":172:26)
#loc212 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":172:25)
#loc213 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":173:9)
#loc214 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":174:19)
#loc215 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":174:13)
#loc216 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":180:1)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":204:1)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":182:5)
#loc219 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":182:12)
#loc220 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":183:5)
#loc221 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":183:37)
#loc222 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":184:12)
#loc223 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":184:5)
#loc224 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":185:5)
#loc225 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":194:5)
#loc226 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":185:8)
#loc227 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":186:5)
#loc228 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":192:9)
#loc229 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":192:16)
#loc230 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":192:22)
#loc231 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":195:5)
#loc232 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":203:5)
#loc233 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":196:9)
#loc234 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":196:13)
#loc235 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":198:25)
#loc236 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":198:31)
#loc237 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":198:38)
#loc238 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":198:47)
#loc239 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":198:55)
#loc240 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":198:20)
#loc241 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":198:9)
#loc242 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":198:63)
#loc243 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":199:9)
#loc244 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":202:9)
#loc245 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":199:13)
#loc246 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":199:26)
#loc247 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":199:25)
#loc248 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":200:9)
#loc249 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":201:19)
#loc250 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":201:13)
#loc251 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":206:1)
#loc252 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":210:1)
#loc253 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":208:5)
#loc254 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":209:5)
#loc255 = loc("/usr/include/stdlib.h":575:1)
#loc256 = loc("/usr/include/stdlib.h":575:41)
#loc257 = loc("/usr/include/time.h":76:1)
#loc258 = loc("/usr/include/time.h":76:38)
#loc259 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc260 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc261 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":230:15)
#loc262 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":232:15)
#loc263 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":235:15)
#loc264 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":237:15)
#loc265 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":225:1)
#loc266 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":240:1)
#loc271 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":226:1)
#loc272 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":228:27)
#loc273 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":228:22)
#loc274 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":228:5)
#loc275 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":230:5)
#loc276 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":231:5)
#loc277 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":232:5)
#loc278 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":235:5)
#loc279 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":236:5)
#loc280 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":237:5)
#loc281 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":239:12)
#loc282 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_02.cpp":239:5)
#loc283 = loc(fused[#loc1, #loc2])
#loc284 = loc(fused[#loc3, #loc4])
#loc285 = loc(fused[#loc5, #loc6])
#loc286 = loc(fused[#loc8, #loc9])
#loc287 = loc(fused[#loc10, #loc11])
#loc288 = loc(fused[#loc12, #loc13])
#loc289 = loc(fused[#loc14, #loc15])
#loc290 = loc(fused[#loc16, #loc17])
#loc291 = loc(fused[#loc18, #loc19])
#loc292 = loc(fused[#loc20, #loc21])
#loc293 = loc(fused[#loc22, #loc23])
#loc294 = loc(fused[#loc24, #loc25])
#loc295 = loc(fused[#loc27, #loc26])
#loc296 = loc(fused[#loc28, #loc29])
#loc297 = loc(fused[#loc31, #loc29])
#loc298 = loc(fused[#loc32, #loc33])
#loc299 = loc(fused[#loc34, #loc35])
#loc300 = loc(fused[#loc36, #loc37])
#loc301 = loc(fused[#loc38, #loc39])
#loc302 = loc(fused[#loc40, #loc41])
#loc303 = loc(fused[#loc42, #loc43])
#loc304 = loc(fused[#loc46, #loc47])
#loc305 = loc(fused[#loc52, #loc53])
#loc306 = loc(fused[#loc54, #loc55])
#loc307 = loc(fused[#loc56, #loc57])
#loc308 = loc(fused[#loc58, #loc55])
#loc309 = loc(fused[#loc60, #loc61])
#loc310 = loc(fused[#loc63, #loc64])
#loc311 = loc(fused[#loc65, #loc66])
#loc312 = loc(fused[#loc69, #loc67])
#loc313 = loc(fused[#loc73, #loc74])
#loc314 = loc(fused[#loc78, #loc79])
#loc315 = loc(fused[#loc80, #loc81])
#loc316 = loc(fused[#loc83, #loc84])
#loc317 = loc(fused[#loc85, #loc86])
#loc318 = loc(fused[#loc87, #loc88])
#loc319 = loc(fused[#loc89, #loc81])
#loc320 = loc(fused[#loc95, #loc96])
#loc321 = loc(fused[#loc97, #loc98])
#loc322 = loc(fused[#loc99, #loc100])
#loc323 = loc(fused[#loc99, #loc101])
#loc324 = loc(fused[#loc97, #loc102])
#loc325 = loc(fused[#loc105, #loc106])
#loc326 = loc(fused[#loc107, #loc108])
#loc327 = loc(fused[#loc109, #loc110])
#loc328 = loc(fused[#loc112, #loc113])
#loc329 = loc(fused[#loc114, #loc108])
#loc330 = loc(fused[#loc120, #loc121])
#loc331 = loc(fused[#loc119, #loc121])
#loc332 = loc(fused[#loc118, #loc121])
#loc333 = loc(fused[#loc117, #loc116])
#loc334 = loc(fused[#loc126, #loc127])
#loc335 = loc(fused[#loc128, #loc129])
#loc336 = loc(fused[#loc131, #loc129])
#loc337 = loc(fused[#loc134, #loc132])
#loc338 = loc(fused[#loc138, #loc139])
#loc339 = loc(fused[#loc140, #loc141])
#loc340 = loc(fused[#loc143, #loc141])
#loc341 = loc(fused[#loc146, #loc144])
#loc342 = loc(fused[#loc148, #loc149])
#loc343 = loc(fused[#loc150, #loc151])
#loc344 = loc(fused[#loc152, #loc149])
#loc345 = loc(fused[#loc155, #loc156])
#loc346 = loc(fused[#loc157, #loc158])
#loc347 = loc(fused[#loc160, #loc161])
#loc348 = loc(fused[#loc162, #loc163])
#loc349 = loc(fused[#loc165, #loc166])
#loc350 = loc(fused[#loc167, #loc168])
#loc351 = loc(fused[#loc169, #loc170])
#loc352 = loc(fused[#loc172, #loc168])
#loc353 = loc(fused[#loc176, #loc177])
#loc354 = loc(fused[#loc179, #loc180])
#loc355 = loc(fused[#loc181, #loc182])
#loc356 = loc(fused[#loc183, #loc184])
#loc357 = loc(fused[#loc186, #loc185])
#loc358 = loc(fused[#loc187, #loc188])
#loc359 = loc(fused[#loc190, #loc191, #loc192, #loc188])
#loc360 = loc(fused[#loc196, #loc197])
#loc361 = loc(fused[#loc198, #loc199])
#loc362 = loc(fused[#loc201, #loc202])
#loc363 = loc(fused[#loc203, #loc204])
#loc364 = loc(fused[#loc206, #loc207])
#loc365 = loc(fused[#loc208, #loc209])
#loc366 = loc(fused[#loc210, #loc211])
#loc367 = loc(fused[#loc213, #loc209])
#loc368 = loc(fused[#loc216, #loc217])
#loc369 = loc(fused[#loc218, #loc219])
#loc370 = loc(fused[#loc220, #loc221])
#loc371 = loc(fused[#loc223, #loc222])
#loc372 = loc(fused[#loc224, #loc225])
#loc373 = loc(fused[#loc227, #loc225])
#loc374 = loc(fused[#loc231, #loc232])
#loc375 = loc(fused[#loc233, #loc234])
#loc376 = loc(fused[#loc236, #loc237])
#loc377 = loc(fused[#loc238, #loc239])
#loc378 = loc(fused[#loc241, #loc242])
#loc379 = loc(fused[#loc243, #loc244])
#loc380 = loc(fused[#loc245, #loc246])
#loc381 = loc(fused[#loc248, #loc244])
#loc382 = loc(fused[#loc251, #loc252])
#loc383 = loc(fused[#loc255, #loc256])
#loc384 = loc(fused[#loc257, #loc258])
#loc385 = loc(fused[#loc259, #loc260])
#loc386 = loc(fused[#loc265, #loc266])
#loc389 = loc(fused[#loc282, #loc281])
