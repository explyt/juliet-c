!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fwrite_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc63)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private"  external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc64)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_fwrite_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc66)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc12)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc68)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc14)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc15)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !s32i loc(#loc69)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc16)
        cir.condition(%5) loc(#loc16)
      } body {
        cir.scope {
          %2 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc18)
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc71)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc72)
          %7 = cir.const #cir.int<6> : !u64i loc(#loc73)
          %8 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc64)
          %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc24)
          %10 = cir.call @fwrite(%5, %6, %7, %9) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc18)
        } loc(#loc70)
        cir.yield loc(#loc11)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc26)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
        cir.yield loc(#loc67)
      } loc(#loc67)
    } loc(#loc67)
    cir.return loc(#loc7)
  } loc(#loc65)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_fwrite_17_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc76)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    cir.return loc(#loc28)
  } loc(#loc75)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc77)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"fwrite failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc33)
  cir.func no_proto internal private  @good1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc79)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc40)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc81)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc42)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc43)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !s32i loc(#loc82)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc44)
        cir.condition(%5) loc(#loc44)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc48)
            %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc49)
            %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc49)
            %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
            %6 = cir.const #cir.int<1> : !u64i loc(#loc86)
            %7 = cir.const #cir.int<6> : !u64i loc(#loc87)
            %8 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc64)
            %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc55)
            %10 = cir.call @fwrite(%5, %6, %7, %9) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc48)
            %11 = cir.const #cir.int<6> : !u64i loc(#loc88)
            %12 = cir.cmp(ne, %10, %11) : !u64i, !s32i loc(#loc89)
            %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc58)
            cir.if %13 {
              %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc33)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc33)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc60)
            } loc(#loc90)
          } loc(#loc84)
        } loc(#loc83)
        cir.yield loc(#loc39)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc61)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc62)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc91)
        cir.yield loc(#loc80)
      } loc(#loc80)
    } loc(#loc80)
    cir.return loc(#loc35)
  } loc(#loc78)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fwrite_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":745:1)
#loc2 = loc("/usr/include/stdio.h":746:43)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":30:24)
#loc4 = loc("/usr/include/stdio.h":150:1)
#loc5 = loc("/usr/include/stdio.h":150:14)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":24:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":32:1)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":26:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":26:9)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":27:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":31:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":27:13)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":27:9)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":27:16)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":27:20)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":27:18)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":28:5)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":30:9)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":30:16)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":30:34)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":30:45)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":30:48)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":30:63)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":30:66)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":27:24)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":27:23)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":52:1)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":55:1)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":54:5)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":54:11)
#loc31 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc32 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":47:23)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":39:1)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":50:1)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":41:5)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":41:9)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":42:5)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":49:5)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":42:13)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":42:9)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":42:16)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":42:20)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":42:18)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":43:5)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":45:9)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":48:9)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":45:13)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":45:28)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":45:20)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":45:38)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":45:49)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":45:52)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":45:67)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":45:70)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":45:81)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":45:96)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":45:78)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":46:9)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":47:13)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":42:24)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fwrite_17.c":42:23)
#loc63 = loc(fused[#loc1, #loc2])
#loc64 = loc(fused[#loc4, #loc5])
#loc65 = loc(fused[#loc6, #loc7])
#loc66 = loc(fused[#loc8, #loc9])
#loc67 = loc(fused[#loc10, #loc11])
#loc68 = loc(fused[#loc13, #loc12])
#loc69 = loc(fused[#loc14, #loc15])
#loc70 = loc(fused[#loc17, #loc11])
#loc71 = loc(fused[#loc19, #loc3])
#loc72 = loc(fused[#loc20, #loc21])
#loc73 = loc(fused[#loc22, #loc23])
#loc74 = loc(fused[#loc26, #loc25])
#loc75 = loc(fused[#loc27, #loc28])
#loc76 = loc(fused[#loc29, #loc30])
#loc77 = loc(fused[#loc31, #loc32])
#loc78 = loc(fused[#loc34, #loc35])
#loc79 = loc(fused[#loc36, #loc37])
#loc80 = loc(fused[#loc38, #loc39])
#loc81 = loc(fused[#loc41, #loc40])
#loc82 = loc(fused[#loc42, #loc43])
#loc83 = loc(fused[#loc45, #loc39])
#loc84 = loc(fused[#loc46, #loc47])
#loc85 = loc(fused[#loc50, #loc49])
#loc86 = loc(fused[#loc51, #loc52])
#loc87 = loc(fused[#loc53, #loc54])
#loc88 = loc(fused[#loc56, #loc57])
#loc89 = loc(fused[#loc48, #loc57])
#loc90 = loc(fused[#loc59, #loc47])
#loc91 = loc(fused[#loc62, #loc61])
