!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc178 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":175:10)
#loc179 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":175:14)
#loc180 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":175:20)
#loc181 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":175:32)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i}>
#loc257 = loc(fused[#loc178, #loc179])
#loc258 = loc(fused[#loc180, #loc181])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_02.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc194)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private @printIntLine(!s32i) loc(#loc195)
  cir.func @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_023badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc197)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc198)
    cir.br ^bb1 loc(#loc199)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc200)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<8> : !u64i loc(#loc201)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc18)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc201)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc17)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc202)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc21)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc24)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc26)
    %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc28)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc29)
    %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc25)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc31)
    cir.br ^bb3 loc(#loc13)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc13)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc205)
  ^bb5:  // pred: ^bb4
    %19 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc34)
    cir.brcond %20 ^bb6, ^bb7 loc(#loc206)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc33)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc33)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc7)
  } loc(#loc196)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc36)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr2) loc(#loc207)
  cir.func internal private @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_02L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc209)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc43)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc210)
    cir.br ^bb1 loc(#loc211)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc47)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc212)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<8> : !u64i loc(#loc213)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc51)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc213)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc50)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc214)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc54)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc56)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc57)
    %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc59)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc60)
    %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc25)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc62)
    cir.br ^bb3 loc(#loc46)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc46)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc217)
  ^bb5:  // pred: ^bb4
    %19 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc65)
    cir.brcond %20 ^bb6, ^bb7 loc(#loc218)
  ^bb6:  // pred: ^bb5
    %21 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc36)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    cir.br ^bb8 loc(#loc67)
  ^bb7:  // pred: ^bb5
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc70)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc70)
    cir.call @_ZdlPv(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc51)
    cir.br ^bb8 loc(#loc64)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc64)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc40)
  } loc(#loc208)
  cir.func internal private @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_02L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc220)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc75)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc221)
    cir.br ^bb1 loc(#loc222)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc79)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc223)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<8> : !u64i loc(#loc224)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc83)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc224)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc82)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc225)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc86)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc88)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc89)
    %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc91)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc92)
    %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc25)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc94)
    cir.br ^bb3 loc(#loc78)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc78)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc228)
  ^bb5:  // pred: ^bb4
    %19 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc97)
    cir.brcond %20 ^bb6, ^bb7 loc(#loc229)
  ^bb6:  // pred: ^bb5
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc99)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc99)
    cir.call @_ZdlPv(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr2) loc(#loc83)
    cir.br ^bb7 loc(#loc96)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc96)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc72)
  } loc(#loc219)
  cir.func internal private @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_02L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !ty_TwoIntsClass, !cir.ptr<!ty_TwoIntsClass>, ["dataGoodBuffer"] {alignment = 4 : i64} loc(#loc231)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc232)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc106)
    cir.store %2, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc233)
    cir.br ^bb1 loc(#loc234)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc110)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc235)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc114)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    cir.br ^bb4 loc(#loc112)
  ^bb3:  // pred: ^bb1
    cir.store %0, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc236)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc119)
    %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
    cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc237)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc121)
    %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc122)
    %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc124)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc125)
    %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc25)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc127)
    cir.br ^bb4 loc(#loc109)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc109)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc239)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc130)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc240)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc129)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc129)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc101)
  } loc(#loc230)
  cir.func internal private @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_02L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !ty_TwoIntsClass, !cir.ptr<!ty_TwoIntsClass>, ["dataGoodBuffer"] {alignment = 4 : i64} loc(#loc242)
    %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc243)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc138)
    cir.store %2, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc244)
    cir.br ^bb1 loc(#loc245)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc142)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc246)
  ^bb2:  // pred: ^bb1
    cir.store %0, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc247)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc147)
    %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
    cir.store %5, %7 : !s32i, !cir.ptr<!s32i> loc(#loc248)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc148)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc149)
    %10 = cir.get_member %9[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc249)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc150)
    %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc22)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc152)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc153)
    %15 = cir.get_member %14[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc25)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc155)
    cir.br ^bb3 loc(#loc141)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc141)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc250)
  ^bb5:  // pred: ^bb4
    %17 = cir.const #cir.int<1> : !s32i loc(#loc158)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc158)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc251)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc157)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc157)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc133)
  } loc(#loc241)
  cir.func @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_024goodEv() extra(#fn_attr1) {
    cir.call @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_02L8goodB2G1Ev() : () -> () loc(#loc162)
    cir.call @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_02L8goodB2G2Ev() : () -> () loc(#loc163)
    cir.call @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_02L8goodG2B1Ev() : () -> () loc(#loc164)
    cir.call @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_02L8goodG2B2Ev() : () -> () loc(#loc165)
    cir.return loc(#loc161)
  } loc(#loc252)
  cir.func private @srand(!u32i) extra(#fn_attr2) loc(#loc253)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr2) loc(#loc254)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc255)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc175)
  cir.func @main(%arg0: !s32i loc(fused[#loc178, #loc179]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc180, #loc181])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc257)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc258)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc177)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc182)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc183)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr2) loc(#loc184)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc184)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr2) loc(#loc185)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc172)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc186)
    cir.call @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_024goodEv() : () -> () loc(#loc187)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc173)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc173)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc188)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc174)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc174)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc189)
    cir.call @_ZN39CWE401_Memory_Leak__new_TwoIntsClass_023badEv() : () -> () loc(#loc190)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc175)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc191)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc192)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc259)
    cir.return %15 : !s32i loc(#loc259)
  } loc(#loc256)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":29:1)
#loc7 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":48:1)
#loc8 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":31:5)
#loc9 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":31:20)
#loc10 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":32:12)
#loc11 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":32:5)
#loc12 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":33:5)
#loc13 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":42:5)
#loc14 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":33:8)
#loc15 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":34:5)
#loc16 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":36:16)
#loc17 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":36:20)
#loc18 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":29:6)
#loc19 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":36:9)
#loc20 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":38:24)
#loc21 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":38:9)
#loc22 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc23 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":39:24)
#loc24 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":39:9)
#loc25 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc26 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":40:22)
#loc27 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":40:28)
#loc28 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":40:9)
#loc29 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":41:22)
#loc30 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":41:28)
#loc31 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":41:9)
#loc32 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":43:5)
#loc33 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":47:5)
#loc34 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":43:8)
#loc35 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":44:5)
#loc36 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":72:19)
#loc37 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc38 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc39 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":55:1)
#loc40 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":79:1)
#loc41 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":57:5)
#loc42 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":57:20)
#loc43 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":58:12)
#loc44 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":58:5)
#loc45 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":59:5)
#loc46 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":68:5)
#loc47 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":59:8)
#loc48 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":60:5)
#loc49 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":62:16)
#loc50 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":62:20)
#loc51 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":55:13)
#loc52 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":62:9)
#loc53 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":64:24)
#loc54 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":64:9)
#loc55 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":65:24)
#loc56 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":65:9)
#loc57 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":66:22)
#loc58 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":66:28)
#loc59 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":66:9)
#loc60 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":67:22)
#loc61 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":67:28)
#loc62 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":67:9)
#loc63 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":69:5)
#loc64 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":78:5)
#loc65 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":69:8)
#loc66 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":70:5)
#loc67 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":73:5)
#loc68 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":75:5)
#loc69 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":72:9)
#loc70 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":77:16)
#loc71 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":82:1)
#loc72 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":101:1)
#loc73 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":84:5)
#loc74 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":84:20)
#loc75 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":85:12)
#loc76 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":85:5)
#loc77 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":86:5)
#loc78 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":95:5)
#loc79 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":86:8)
#loc80 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":87:5)
#loc81 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":89:16)
#loc82 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":89:20)
#loc83 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":82:13)
#loc84 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":89:9)
#loc85 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":91:24)
#loc86 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":91:9)
#loc87 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":92:24)
#loc88 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":92:9)
#loc89 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":93:22)
#loc90 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":93:28)
#loc91 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":93:9)
#loc92 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":94:22)
#loc93 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":94:28)
#loc94 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":94:9)
#loc95 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":96:5)
#loc96 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":100:5)
#loc97 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":96:8)
#loc98 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":97:5)
#loc99 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":99:16)
#loc100 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":104:1)
#loc101 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":129:1)
#loc102 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":116:9)
#loc103 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":116:22)
#loc104 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":106:5)
#loc105 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":106:20)
#loc106 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":107:12)
#loc107 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":107:5)
#loc108 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":108:5)
#loc109 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":123:5)
#loc110 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":108:8)
#loc111 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":109:5)
#loc112 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":112:5)
#loc113 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":114:5)
#loc114 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":111:19)
#loc115 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":111:9)
#loc116 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":117:9)
#loc117 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":117:17)
#loc118 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":119:24)
#loc119 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":119:9)
#loc120 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":120:24)
#loc121 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":120:9)
#loc122 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":121:22)
#loc123 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":121:28)
#loc124 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":121:9)
#loc125 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":122:22)
#loc126 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":122:28)
#loc127 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":122:9)
#loc128 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":124:5)
#loc129 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":128:5)
#loc130 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":124:8)
#loc131 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":125:5)
#loc132 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":132:1)
#loc133 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":152:1)
#loc134 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":139:9)
#loc135 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":139:22)
#loc136 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":134:5)
#loc137 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":134:20)
#loc138 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":135:12)
#loc139 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":135:5)
#loc140 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":136:5)
#loc141 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":146:5)
#loc142 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":136:8)
#loc143 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":137:5)
#loc144 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":140:9)
#loc145 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":140:17)
#loc146 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":142:24)
#loc147 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":142:9)
#loc148 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":143:24)
#loc149 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":143:9)
#loc150 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":144:22)
#loc151 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":144:28)
#loc152 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":144:9)
#loc153 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":145:22)
#loc154 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":145:28)
#loc155 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":145:9)
#loc156 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":147:5)
#loc157 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":151:5)
#loc158 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":147:8)
#loc159 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":148:5)
#loc160 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":154:1)
#loc161 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":160:1)
#loc162 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":156:5)
#loc163 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":157:5)
#loc164 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":158:5)
#loc165 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":159:5)
#loc166 = loc("/usr/include/stdlib.h":575:1)
#loc167 = loc("/usr/include/stdlib.h":575:41)
#loc168 = loc("/usr/include/time.h":76:1)
#loc169 = loc("/usr/include/time.h":76:38)
#loc170 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc171 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc172 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":180:15)
#loc173 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":182:15)
#loc174 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":185:15)
#loc175 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":187:15)
#loc176 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":175:1)
#loc177 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":190:1)
#loc182 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":176:1)
#loc183 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":178:27)
#loc184 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":178:22)
#loc185 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":178:5)
#loc186 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":180:5)
#loc187 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":181:5)
#loc188 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":182:5)
#loc189 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":185:5)
#loc190 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":186:5)
#loc191 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":187:5)
#loc192 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":189:12)
#loc193 = loc("CWE401_Memory_Leak__new_TwoIntsClass_02.cpp":189:5)
#loc194 = loc(fused[#loc1, #loc2])
#loc195 = loc(fused[#loc4, #loc5])
#loc196 = loc(fused[#loc6, #loc7])
#loc197 = loc(fused[#loc8, #loc9])
#loc198 = loc(fused[#loc11, #loc10])
#loc199 = loc(fused[#loc12, #loc13])
#loc200 = loc(fused[#loc15, #loc13])
#loc201 = loc(fused[#loc16, #loc17])
#loc202 = loc(fused[#loc19, #loc17])
#loc203 = loc(fused[#loc21, #loc20])
#loc204 = loc(fused[#loc24, #loc23])
#loc205 = loc(fused[#loc32, #loc33])
#loc206 = loc(fused[#loc35, #loc33])
#loc207 = loc(fused[#loc37, #loc38])
#loc208 = loc(fused[#loc39, #loc40])
#loc209 = loc(fused[#loc41, #loc42])
#loc210 = loc(fused[#loc44, #loc43])
#loc211 = loc(fused[#loc45, #loc46])
#loc212 = loc(fused[#loc48, #loc46])
#loc213 = loc(fused[#loc49, #loc50])
#loc214 = loc(fused[#loc52, #loc50])
#loc215 = loc(fused[#loc54, #loc53])
#loc216 = loc(fused[#loc56, #loc55])
#loc217 = loc(fused[#loc63, #loc64])
#loc218 = loc(fused[#loc66, #loc67, #loc68, #loc64])
#loc219 = loc(fused[#loc71, #loc72])
#loc220 = loc(fused[#loc73, #loc74])
#loc221 = loc(fused[#loc76, #loc75])
#loc222 = loc(fused[#loc77, #loc78])
#loc223 = loc(fused[#loc80, #loc78])
#loc224 = loc(fused[#loc81, #loc82])
#loc225 = loc(fused[#loc84, #loc82])
#loc226 = loc(fused[#loc86, #loc85])
#loc227 = loc(fused[#loc88, #loc87])
#loc228 = loc(fused[#loc95, #loc96])
#loc229 = loc(fused[#loc98, #loc96])
#loc230 = loc(fused[#loc100, #loc101])
#loc231 = loc(fused[#loc102, #loc103])
#loc232 = loc(fused[#loc104, #loc105])
#loc233 = loc(fused[#loc107, #loc106])
#loc234 = loc(fused[#loc108, #loc109])
#loc235 = loc(fused[#loc111, #loc112, #loc113, #loc109])
#loc236 = loc(fused[#loc116, #loc117])
#loc237 = loc(fused[#loc119, #loc118])
#loc238 = loc(fused[#loc121, #loc120])
#loc239 = loc(fused[#loc128, #loc129])
#loc240 = loc(fused[#loc131, #loc129])
#loc241 = loc(fused[#loc132, #loc133])
#loc242 = loc(fused[#loc134, #loc135])
#loc243 = loc(fused[#loc136, #loc137])
#loc244 = loc(fused[#loc139, #loc138])
#loc245 = loc(fused[#loc140, #loc141])
#loc246 = loc(fused[#loc143, #loc141])
#loc247 = loc(fused[#loc144, #loc145])
#loc248 = loc(fused[#loc147, #loc146])
#loc249 = loc(fused[#loc149, #loc148])
#loc250 = loc(fused[#loc156, #loc157])
#loc251 = loc(fused[#loc159, #loc157])
#loc252 = loc(fused[#loc160, #loc161])
#loc253 = loc(fused[#loc166, #loc167])
#loc254 = loc(fused[#loc168, #loc169])
#loc255 = loc(fused[#loc170, #loc171])
#loc256 = loc(fused[#loc176, #loc177])
#loc259 = loc(fused[#loc193, #loc192])
