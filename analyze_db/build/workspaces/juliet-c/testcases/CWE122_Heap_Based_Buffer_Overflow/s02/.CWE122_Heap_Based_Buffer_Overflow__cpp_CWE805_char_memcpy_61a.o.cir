!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s02/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @_ZN60CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_619badSourceEPc(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc88)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc89)
  cir.func @_ZN60CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_613badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc91)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc92)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    %3 = cir.call @_ZN60CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_619badSourceEPc(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc12)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc93)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc95)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc19)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc19)
      %7 = cir.const #cir.int<67> : !s8i loc(#loc20)
      %8 = cir.cast(integral, %7 : !s8i), !s32i loc(#loc20)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc21)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc22)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc21)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc21)
      cir.libc.memset %12 bytes from %6 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc96)
      %13 = cir.const #cir.int<0> : !s8i loc(#loc25)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc26)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc27)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc26)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc28)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc97)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc29)
      %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc30)
      %23 = cir.const #cir.int<100> : !s32i loc(#loc31)
      %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc31)
      %25 = cir.const #cir.int<1> : !u64i loc(#loc98)
      %26 = cir.binop(mul, %24, %25) : !u64i loc(#loc99)
      cir.libc.memcpy %26 bytes from %22 to %20 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc100)
      %27 = cir.const #cir.int<0> : !s8i loc(#loc36)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
      %29 = cir.const #cir.int<100> : !s32i loc(#loc38)
      %30 = cir.const #cir.int<1> : !s32i loc(#loc39)
      %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc38)
      %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc40)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc101)
      %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc42)
      %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      cir.delete.array %34 : <!s8i> loc(#loc43)
    } loc(#loc94)
    cir.return loc(#loc6)
  } loc(#loc90)
  cir.func private @_ZN60CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_6113goodG2BSourceEPc(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc102)
  cir.func internal private @_ZN60CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc104)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc50)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    %3 = cir.call @_ZN60CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_6113goodG2BSourceEPc(%2) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc53)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc108)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc60)
      %7 = cir.const #cir.int<67> : !s8i loc(#loc61)
      %8 = cir.cast(integral, %7 : !s8i), !s32i loc(#loc61)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc62)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc63)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc62)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc62)
      cir.libc.memset %12 bytes from %6 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc109)
      %13 = cir.const #cir.int<0> : !s8i loc(#loc66)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc67)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc68)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc67)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc69)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc110)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc70)
      %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc71)
      %23 = cir.const #cir.int<100> : !s32i loc(#loc72)
      %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc72)
      %25 = cir.const #cir.int<1> : !u64i loc(#loc111)
      %26 = cir.binop(mul, %24, %25) : !u64i loc(#loc112)
      cir.libc.memcpy %26 bytes from %22 to %20 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc113)
      %27 = cir.const #cir.int<0> : !s8i loc(#loc77)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
      %29 = cir.const #cir.int<100> : !s32i loc(#loc79)
      %30 = cir.const #cir.int<1> : !s32i loc(#loc80)
      %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc79)
      %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc81)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc114)
      %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc83)
      %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
      cir.delete.array %34 : <!s8i> loc(#loc84)
    } loc(#loc107)
    cir.return loc(#loc47)
  } loc(#loc103)
  cir.func @_ZN60CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_614goodEv() extra(#fn_attr) {
    cir.call @_ZN60CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61L7goodG2BEv() : () -> () loc(#loc87)
    cir.return loc(#loc86)
  } loc(#loc115)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s02/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":27:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":27:29)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":29:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":44:1)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":31:5)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":31:12)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":32:12)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":32:5)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":33:22)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":33:12)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":33:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":33:26)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":34:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":43:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":35:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":35:24)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":36:16)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":36:24)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":36:29)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":36:33)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":36:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":36:34)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":37:25)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":37:16)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":37:20)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":37:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":39:16)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":39:22)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":39:30)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":39:34)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":39:45)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":39:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":39:46)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":40:23)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":40:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":40:14)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":40:18)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":40:19)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":41:19)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":41:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":42:19)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":51:1)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":51:33)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":53:1)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":68:1)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":55:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":55:12)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":56:12)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":56:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":57:26)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":57:12)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":57:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":57:30)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":58:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":67:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":59:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":59:24)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":60:16)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":60:24)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":60:29)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":60:33)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":60:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":60:34)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":61:25)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":61:16)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":61:20)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":61:9)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":63:16)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":63:22)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":63:30)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":63:34)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":63:45)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":63:9)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":63:46)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":64:23)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":64:9)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":64:14)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":64:18)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":64:19)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":65:19)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":65:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":66:19)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":70:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":73:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE805_char_memcpy_61a.cpp":72:5)
#loc88 = loc(fused[#loc1, #loc2])
#loc89 = loc(fused[#loc3, #loc4])
#loc90 = loc(fused[#loc5, #loc6])
#loc91 = loc(fused[#loc7, #loc8])
#loc92 = loc(fused[#loc10, #loc9])
#loc93 = loc(fused[#loc13, #loc14])
#loc94 = loc(fused[#loc15, #loc16])
#loc95 = loc(fused[#loc17, #loc18])
#loc96 = loc(fused[#loc23, #loc24])
#loc97 = loc(fused[#loc28, #loc25])
#loc98 = loc(fused[#loc32, #loc33])
#loc99 = loc(fused[#loc31, #loc33])
#loc100 = loc(fused[#loc34, #loc35])
#loc101 = loc(fused[#loc37, #loc36])
#loc102 = loc(fused[#loc44, #loc45])
#loc103 = loc(fused[#loc46, #loc47])
#loc104 = loc(fused[#loc48, #loc49])
#loc105 = loc(fused[#loc51, #loc50])
#loc106 = loc(fused[#loc54, #loc55])
#loc107 = loc(fused[#loc56, #loc57])
#loc108 = loc(fused[#loc58, #loc59])
#loc109 = loc(fused[#loc64, #loc65])
#loc110 = loc(fused[#loc69, #loc66])
#loc111 = loc(fused[#loc73, #loc74])
#loc112 = loc(fused[#loc72, #loc74])
#loc113 = loc(fused[#loc75, #loc76])
#loc114 = loc(fused[#loc78, #loc77])
#loc115 = loc(fused[#loc85, #loc86])
