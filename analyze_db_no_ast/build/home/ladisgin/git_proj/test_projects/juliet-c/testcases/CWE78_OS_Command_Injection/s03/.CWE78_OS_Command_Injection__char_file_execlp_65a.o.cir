!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execlp_65a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @CWE78_OS_Command_Injection__char_file_execlp_65b_badSink(!cir.ptr<!s8i>) loc(#loc94)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc95)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc96)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc7)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc8)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc97)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc98)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc99)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_file_execlp_65_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc101)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc102)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc103)
    %3 = cir.get_global @CWE78_OS_Command_Injection__char_file_execlp_65b_badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc21)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc102)
    %4 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc103)
    cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc103)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
    cir.scope {
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc106)
      %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc107)
      %10 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc32)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
      %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc32)
      cir.store %12, %8 : !u64i, !cir.ptr<!u64i> loc(#loc106)
      cir.scope {
        %13 = cir.const #cir.int<100> : !s32i loc(#loc36)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc36)
        %15 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc37)
        %16 = cir.binop(sub, %14, %15) : !u64i loc(#loc109)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc38)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc38)
        %19 = cir.cmp(gt, %16, %18) : !u64i, !s32i loc(#loc110)
        %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc39)
        cir.if %20 {
          %21 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc41)
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc7)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc7)
          %24 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc8)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc8)
          %26 = cir.call @fopen(%23, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc41)
          cir.store %26, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc112)
          cir.scope {
            %27 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc46)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc47)
            %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc114)
            %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc48)
            cir.if %31 {
              cir.scope {
                %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
                %35 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc53)
                %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc54)
                %37 = cir.const #cir.int<100> : !s32i loc(#loc55)
                %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc55)
                %39 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc56)
                %40 = cir.binop(sub, %38, %39) : !u64i loc(#loc117)
                %41 = cir.cast(integral, %40 : !u64i), !s32i loc(#loc117)
                %42 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc57)
                %43 = cir.call @fgets(%36, %41, %42) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc58)
                %44 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc59)
                %45 = cir.cast(bitcast, %44 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc59)
                %46 = cir.cmp(eq, %43, %45) : !cir.ptr<!s8i>, !s32i loc(#loc118)
                %47 = cir.cast(int_to_bool, %46 : !s32i), !cir.bool loc(#loc60)
                cir.if %47 {
                  %48 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
                  %49 = cir.cast(array_to_ptrdecay, %48 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
                  cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc62)
                  %50 = cir.const #cir.int<0> : !s32i loc(#loc63)
                  %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc63)
                  %52 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
                  %53 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc65)
                  %54 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %53 : !u64i), !cir.ptr<!s8i> loc(#loc66)
                  cir.store %51, %54 : !s8i, !cir.ptr<!s8i> loc(#loc120)
                } loc(#loc119)
              } loc(#loc116)
              %32 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc67)
              %33 = cir.call @fclose(%32) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc68)
            } loc(#loc115)
          } loc(#loc113)
        } loc(#loc111)
      } loc(#loc108)
    } loc(#loc105)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc69)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc69)
    cir.return loc(#loc17)
  } loc(#loc100)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_file_execlp_65_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc122)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    cir.return loc(#loc72)
  } loc(#loc121)
  cir.func private  @CWE78_OS_Command_Injection__char_file_execlp_65b_goodG2BSink(!cir.ptr<!s8i>) loc(#loc123)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc124)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc79)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc126)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc127)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc128)
    %3 = cir.get_global @CWE78_OS_Command_Injection__char_file_execlp_65b_goodG2BSink : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc85)
    cir.store %3, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>> loc(#loc127)
    %4 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc128)
    cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc128)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc88)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc90)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    %8 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc79)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc79)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc90)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>> loc(#loc92)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc92)
    cir.return loc(#loc81)
  } loc(#loc125)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execlp_65a.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":52:1)
#loc2 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":52:74)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/stdio.h":264:1)
#loc6 = loc("/usr/include/stdio.h":266:3)
#loc7 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":68:27)
#loc8 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":68:37)
#loc9 = loc("/usr/include/stdio.h":654:1)
#loc10 = loc("/usr/include/stdio.h":655:59)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":74:31)
#loc14 = loc("/usr/include/stdio.h":184:1)
#loc15 = loc("/usr/include/stdio.h":184:36)
#loc16 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":54:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":84:1)
#loc18 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":56:5)
#loc19 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":56:12)
#loc20 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":58:5)
#loc21 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":58:32)
#loc22 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":59:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":59:28)
#loc24 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":60:12)
#loc25 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":60:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":61:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":81:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":63:9)
#loc29 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":63:37)
#loc30 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":64:9)
#loc31 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":64:16)
#loc32 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":63:26)
#loc33 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":63:33)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":66:9)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":80:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":66:13)
#loc37 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":66:17)
#loc38 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":66:27)
#loc39 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":66:25)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":67:9)
#loc41 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":68:21)
#loc42 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":68:13)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":68:40)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":69:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":79:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":69:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":69:26)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":69:23)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":70:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":72:17)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":77:17)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":72:27)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":72:32)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":72:31)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":72:47)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":72:51)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":72:61)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":72:21)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":72:71)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":72:68)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":73:17)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":74:21)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":76:37)
#loc64 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":76:21)
#loc65 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":76:26)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":76:33)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":78:24)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":78:17)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":83:5)
#loc70 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":83:13)
#loc71 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":104:1)
#loc72 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":107:1)
#loc73 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":106:5)
#loc74 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":106:13)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":91:1)
#loc76 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":91:78)
#loc77 = loc("/usr/include/string.h":149:1)
#loc78 = loc("/usr/include/string.h":150:14)
#loc79 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":100:18)
#loc80 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":93:1)
#loc81 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":102:1)
#loc82 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":95:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":95:12)
#loc84 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":96:5)
#loc85 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":96:32)
#loc86 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":97:5)
#loc87 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":97:28)
#loc88 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":98:12)
#loc89 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":98:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":100:5)
#loc91 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":100:12)
#loc92 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":101:5)
#loc93 = loc("CWE78_OS_Command_Injection__char_file_execlp_65a.c":101:13)
#loc94 = loc(fused[#loc1, #loc2])
#loc95 = loc(fused[#loc3, #loc4])
#loc96 = loc(fused[#loc5, #loc6])
#loc97 = loc(fused[#loc9, #loc10])
#loc98 = loc(fused[#loc11, #loc12])
#loc99 = loc(fused[#loc14, #loc15])
#loc100 = loc(fused[#loc16, #loc17])
#loc101 = loc(fused[#loc18, #loc19])
#loc102 = loc(fused[#loc20, #loc21])
#loc103 = loc(fused[#loc22, #loc23])
#loc104 = loc(fused[#loc25, #loc24])
#loc105 = loc(fused[#loc26, #loc27])
#loc106 = loc(fused[#loc28, #loc29])
#loc107 = loc(fused[#loc30, #loc31])
#loc108 = loc(fused[#loc34, #loc35])
#loc109 = loc(fused[#loc36, #loc37])
#loc110 = loc(fused[#loc36, #loc38])
#loc111 = loc(fused[#loc40, #loc35])
#loc112 = loc(fused[#loc42, #loc43])
#loc113 = loc(fused[#loc44, #loc45])
#loc114 = loc(fused[#loc46, #loc47])
#loc115 = loc(fused[#loc49, #loc45])
#loc116 = loc(fused[#loc50, #loc51])
#loc117 = loc(fused[#loc55, #loc56])
#loc118 = loc(fused[#loc58, #loc59])
#loc119 = loc(fused[#loc61, #loc51])
#loc120 = loc(fused[#loc64, #loc63])
#loc121 = loc(fused[#loc71, #loc72])
#loc122 = loc(fused[#loc73, #loc74])
#loc123 = loc(fused[#loc75, #loc76])
#loc124 = loc(fused[#loc77, #loc78])
#loc125 = loc(fused[#loc80, #loc81])
#loc126 = loc(fused[#loc82, #loc83])
#loc127 = loc(fused[#loc84, #loc85])
#loc128 = loc(fused[#loc86, #loc87])
#loc129 = loc(fused[#loc89, #loc88])
