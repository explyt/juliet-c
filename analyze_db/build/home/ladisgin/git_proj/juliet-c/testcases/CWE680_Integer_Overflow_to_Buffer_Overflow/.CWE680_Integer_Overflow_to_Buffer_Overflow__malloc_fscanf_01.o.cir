!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc116)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc118)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc119)
  cir.func private @printIntLine(!s32i) loc(#loc120)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc121)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc123)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc124)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc125)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc23)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc25)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc117)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc25)
    cir.br ^bb1 loc(#loc127)
  ^bb1:  // pred: ^bb0
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc29)
    %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc30)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc128)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc129)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc29)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc130)
    cir.store %17, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc131)
    cir.br ^bb2 loc(#loc132)
  ^bb2:  // pred: ^bb1
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc38)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc133)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc134)
  ^bb3:  // pred: ^bb2
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc40)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc42)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc40)
    cir.br ^bb4 loc(#loc36)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc36)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc135)
  ^bb6:  // pred: ^bb5
    %25 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc45)
    cir.store %26, %0 : !u64i, !cir.ptr<!u64i> loc(#loc136)
    cir.br ^bb7 loc(#loc135)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %27 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc48)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc137)
    cir.brcond %30 ^bb8, ^bb12 loc(#loc49)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc138)
  ^bb9:  // pred: ^bb8
    %31 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc52)
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !u64i), !cir.ptr<!s32i> loc(#loc54)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    cir.br ^bb10 loc(#loc44)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc44)
  ^bb11:  // pred: ^bb10
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc56)
    cir.store %36, %0 : !u64i, !cir.ptr<!u64i> loc(#loc140)
    cir.br ^bb7 loc(#loc135)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc44)
  ^bb13:  // pred: ^bb12
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !s32i), !cir.ptr<!s32i> loc(#loc59)
    %40 = cir.load %39 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    cir.call @printIntLine(%40) : (!s32i) -> () loc(#loc60)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc61)
    cir.call @free(%42) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc62)
    cir.br ^bb14 loc(#loc28)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc15)
  } loc(#loc122)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc142)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    cir.return loc(#loc64)
  } loc(#loc141)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc145)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc146)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc76)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc78)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc82)
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc83)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc150)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc151)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc82)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc152)
    cir.store %12, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc153)
    cir.br ^bb2 loc(#loc154)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc90)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc91)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc91)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc155)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc156)
  ^bb3:  // pred: ^bb2
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc93)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc95)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc93)
    cir.br ^bb4 loc(#loc89)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc89)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc157)
  ^bb6:  // pred: ^bb5
    %20 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc98)
    cir.store %21, %0 : !u64i, !cir.ptr<!u64i> loc(#loc158)
    cir.br ^bb7 loc(#loc157)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %22 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc100)
    %23 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc101)
    %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc159)
    cir.brcond %25 ^bb8, ^bb12 loc(#loc102)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc160)
  ^bb9:  // pred: ^bb8
    %26 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc105)
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc106)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !u64i), !cir.ptr<!s32i> loc(#loc107)
    cir.store %26, %29 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb10 loc(#loc97)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc97)
  ^bb11:  // pred: ^bb10
    %30 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc108)
    %31 = cir.unary(inc, %30) : !u64i, !u64i loc(#loc109)
    cir.store %31, %0 : !u64i, !cir.ptr<!u64i> loc(#loc162)
    cir.br ^bb7 loc(#loc157)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc97)
  ^bb13:  // pred: ^bb12
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !s32i), !cir.ptr<!s32i> loc(#loc112)
    %35 = cir.load %34 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc113)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc114)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc114)
    cir.call @free(%37) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc115)
    cir.br ^bb14 loc(#loc81)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc68)
  } loc(#loc143)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":27:19)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":21:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":42:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":29:9)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":29:16)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":30:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":30:14)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":23:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":23:9)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":25:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":25:12)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":25:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":27:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":27:12)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":28:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":41:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":33:28)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":33:35)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":33:42)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":33:52)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":33:53)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":33:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":34:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":34:43)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":34:13)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":34:27)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":34:33)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":34:34)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":34:40)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":34:39)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":35:9)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":38:9)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":35:18)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":35:14)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":35:21)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":35:33)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":35:23)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":36:9)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":37:29)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":37:13)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":37:24)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":37:25)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":35:40)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":35:39)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":39:22)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":39:33)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":39:34)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":39:9)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":40:14)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":40:9)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":72:1)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":75:1)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":74:5)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":74:13)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":49:1)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":70:1)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":57:9)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":57:16)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":58:9)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":58:14)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":51:5)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":51:9)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":53:13)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":53:12)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":53:5)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":55:12)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":55:5)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":56:5)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":69:5)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":61:28)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":61:35)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":61:42)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":61:52)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":61:53)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":61:9)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":62:9)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":62:43)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":62:13)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":62:27)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":62:33)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":62:34)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":62:40)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":62:39)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":63:9)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":66:9)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":63:18)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":63:14)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":63:21)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":63:33)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":63:23)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":64:9)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":65:29)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":65:13)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":65:24)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":65:25)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":63:40)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":63:39)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":67:22)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":67:33)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":67:34)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":67:9)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":68:14)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_01.c":68:9)
#loc116 = loc(fused[#loc1, #loc2])
#loc117 = loc(fused[#loc3, #loc4])
#loc118 = loc(fused[#loc6, #loc7])
#loc119 = loc(fused[#loc8, #loc9])
#loc120 = loc(fused[#loc10, #loc11])
#loc121 = loc(fused[#loc12, #loc13])
#loc122 = loc(fused[#loc14, #loc15])
#loc123 = loc(fused[#loc16, #loc17])
#loc124 = loc(fused[#loc18, #loc19])
#loc125 = loc(fused[#loc20, #loc21])
#loc126 = loc(fused[#loc24, #loc22])
#loc127 = loc(fused[#loc27, #loc28])
#loc128 = loc(fused[#loc31, #loc32])
#loc129 = loc(fused[#loc30, #loc32])
#loc130 = loc(fused[#loc29, #loc33])
#loc131 = loc(fused[#loc34, #loc33])
#loc132 = loc(fused[#loc35, #loc36])
#loc133 = loc(fused[#loc37, #loc38])
#loc134 = loc(fused[#loc39, #loc36])
#loc135 = loc(fused[#loc43, #loc44])
#loc136 = loc(fused[#loc46, #loc45])
#loc137 = loc(fused[#loc47, #loc48])
#loc138 = loc(fused[#loc50, #loc44])
#loc139 = loc(fused[#loc52, #loc51])
#loc140 = loc(fused[#loc56, #loc55])
#loc141 = loc(fused[#loc63, #loc64])
#loc142 = loc(fused[#loc65, #loc66])
#loc143 = loc(fused[#loc67, #loc68])
#loc144 = loc(fused[#loc69, #loc70])
#loc145 = loc(fused[#loc71, #loc72])
#loc146 = loc(fused[#loc73, #loc74])
#loc147 = loc(fused[#loc77, #loc75])
#loc148 = loc(fused[#loc79, #loc78])
#loc149 = loc(fused[#loc80, #loc81])
#loc150 = loc(fused[#loc84, #loc85])
#loc151 = loc(fused[#loc83, #loc85])
#loc152 = loc(fused[#loc82, #loc86])
#loc153 = loc(fused[#loc87, #loc86])
#loc154 = loc(fused[#loc88, #loc89])
#loc155 = loc(fused[#loc90, #loc91])
#loc156 = loc(fused[#loc92, #loc89])
#loc157 = loc(fused[#loc96, #loc97])
#loc158 = loc(fused[#loc99, #loc98])
#loc159 = loc(fused[#loc100, #loc101])
#loc160 = loc(fused[#loc103, #loc97])
#loc161 = loc(fused[#loc105, #loc104])
#loc162 = loc(fused[#loc109, #loc108])
