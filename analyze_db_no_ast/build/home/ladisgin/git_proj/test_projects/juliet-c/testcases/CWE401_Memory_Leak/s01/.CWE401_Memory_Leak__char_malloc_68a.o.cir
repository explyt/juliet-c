!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_68a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc104)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc105)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc106)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc107)
  cir.global  external dsolocal @CWE401_Memory_Leak__char_malloc_68_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc108)
  cir.func no_proto private  @CWE401_Memory_Leak__char_malloc_68b_badSink(...) loc(#loc109)
  cir.func no_proto  @CWE401_Memory_Leak__char_malloc_68_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc111)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc18)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc21)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc113)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc114)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc115)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    cir.scope {
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
      %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
      %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc118)
      %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc30)
      cir.if %23 {
        %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
        %25 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc34)
        cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
      } loc(#loc119)
    } loc(#loc117)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc35)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
    %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc35)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %16 = cir.get_global @CWE401_Memory_Leak__char_malloc_68_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
    cir.store %15, %16 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    %17 = cir.get_global @CWE401_Memory_Leak__char_malloc_68b_badSink : !cir.ptr<!cir.func<!void (...)>> loc(#loc121)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!cir.func<!void (...)>>), !cir.ptr<!cir.func<!void ()>> loc(#loc121)
    cir.call %18() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc15)
  } loc(#loc110)
  cir.func no_proto  @CWE401_Memory_Leak__char_malloc_68_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc123)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc124)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc44)
  } loc(#loc122)
  cir.global  external dsolocal @CWE401_Memory_Leak__char_malloc_68_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc125)
  cir.global  external dsolocal @CWE401_Memory_Leak__char_malloc_68_goodB2GData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc126)
  cir.func no_proto private  @CWE401_Memory_Leak__char_malloc_68b_goodG2BSink(...) loc(#loc127)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc59)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc61)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc61)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc61)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc61)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc61)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc61)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc61)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc63)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc65)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc65)
    %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc63)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    %16 = cir.get_global @CWE401_Memory_Leak__char_malloc_68_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    cir.store %15, %16 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    %17 = cir.get_global @CWE401_Memory_Leak__char_malloc_68b_goodG2BSink : !cir.ptr<!cir.func<!void (...)>> loc(#loc133)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!cir.func<!void (...)>>), !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call %18() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    cir.return loc(#loc56)
  } loc(#loc128)
  cir.func no_proto private  @CWE401_Memory_Leak__char_malloc_68b_goodB2GSink(...) loc(#loc134)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc136)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc78)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc80)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc81)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc138)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc139)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc80)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc140)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    cir.scope {
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
      %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc89)
      %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc143)
      %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc90)
      cir.if %23 {
        %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc92)
        %25 = cir.const #cir.int<1> : !s32i loc(#loc93)
        %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc94)
        cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc92)
      } loc(#loc144)
    } loc(#loc142)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc95)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc97)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc97)
    %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc95)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    %16 = cir.get_global @CWE401_Memory_Leak__char_malloc_68_goodB2GData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
    cir.store %15, %16 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    %17 = cir.get_global @CWE401_Memory_Leak__char_malloc_68b_goodB2GSink : !cir.ptr<!cir.func<!void (...)>> loc(#loc146)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!cir.func<!void (...)>>), !cir.ptr<!cir.func<!void ()>> loc(#loc146)
    cir.call %18() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc102)
    cir.return loc(#loc75)
  } loc(#loc135)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_68a.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__char_malloc_68a.c":39:18)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE401_Memory_Leak__char_malloc_68a.c":22:1)
#loc11 = loc("CWE401_Memory_Leak__char_malloc_68a.c":22:8)
#loc12 = loc("CWE401_Memory_Leak__char_malloc_68a.c":29:1)
#loc13 = loc("CWE401_Memory_Leak__char_malloc_68a.c":29:50)
#loc14 = loc("CWE401_Memory_Leak__char_malloc_68a.c":31:1)
#loc15 = loc("CWE401_Memory_Leak__char_malloc_68a.c":43:1)
#loc16 = loc("CWE401_Memory_Leak__char_malloc_68a.c":33:5)
#loc17 = loc("CWE401_Memory_Leak__char_malloc_68a.c":33:12)
#loc18 = loc("CWE401_Memory_Leak__char_malloc_68a.c":34:12)
#loc19 = loc("CWE401_Memory_Leak__char_malloc_68a.c":34:5)
#loc20 = loc("CWE401_Memory_Leak__char_malloc_68a.c":36:20)
#loc21 = loc("CWE401_Memory_Leak__char_malloc_68a.c":36:27)
#loc22 = loc("CWE401_Memory_Leak__char_malloc_68a.c":36:31)
#loc23 = loc("CWE401_Memory_Leak__char_malloc_68a.c":36:42)
#loc24 = loc("CWE401_Memory_Leak__char_malloc_68a.c":36:43)
#loc25 = loc("CWE401_Memory_Leak__char_malloc_68a.c":36:5)
#loc26 = loc("CWE401_Memory_Leak__char_malloc_68a.c":37:5)
#loc27 = loc("CWE401_Memory_Leak__char_malloc_68a.c":37:33)
#loc28 = loc("CWE401_Memory_Leak__char_malloc_68a.c":37:9)
#loc29 = loc("CWE401_Memory_Leak__char_malloc_68a.c":37:17)
#loc30 = loc("CWE401_Memory_Leak__char_malloc_68a.c":37:14)
#loc31 = loc("CWE401_Memory_Leak__char_malloc_68a.c":37:23)
#loc32 = loc("CWE401_Memory_Leak__char_malloc_68a.c":37:24)
#loc33 = loc("CWE401_Memory_Leak__char_malloc_68a.c":37:30)
#loc34 = loc("CWE401_Memory_Leak__char_malloc_68a.c":37:29)
#loc35 = loc("CWE401_Memory_Leak__char_malloc_68a.c":39:5)
#loc36 = loc("CWE401_Memory_Leak__char_malloc_68a.c":39:12)
#loc37 = loc("CWE401_Memory_Leak__char_malloc_68a.c":40:15)
#loc38 = loc("CWE401_Memory_Leak__char_malloc_68a.c":40:5)
#loc39 = loc("CWE401_Memory_Leak__char_malloc_68a.c":41:50)
#loc40 = loc("CWE401_Memory_Leak__char_malloc_68a.c":41:5)
#loc41 = loc("CWE401_Memory_Leak__char_malloc_68a.c":42:5)
#loc42 = loc("CWE401_Memory_Leak__char_malloc_68a.c":42:49)
#loc43 = loc("CWE401_Memory_Leak__char_malloc_68a.c":82:1)
#loc44 = loc("CWE401_Memory_Leak__char_malloc_68a.c":86:1)
#loc45 = loc("CWE401_Memory_Leak__char_malloc_68a.c":84:5)
#loc46 = loc("CWE401_Memory_Leak__char_malloc_68a.c":84:13)
#loc47 = loc("CWE401_Memory_Leak__char_malloc_68a.c":85:5)
#loc48 = loc("CWE401_Memory_Leak__char_malloc_68a.c":85:13)
#loc49 = loc("CWE401_Memory_Leak__char_malloc_68a.c":23:1)
#loc50 = loc("CWE401_Memory_Leak__char_malloc_68a.c":23:8)
#loc51 = loc("CWE401_Memory_Leak__char_malloc_68a.c":24:1)
#loc52 = loc("CWE401_Memory_Leak__char_malloc_68a.c":24:8)
#loc53 = loc("CWE401_Memory_Leak__char_malloc_68a.c":50:1)
#loc54 = loc("CWE401_Memory_Leak__char_malloc_68a.c":50:54)
#loc55 = loc("CWE401_Memory_Leak__char_malloc_68a.c":54:1)
#loc56 = loc("CWE401_Memory_Leak__char_malloc_68a.c":65:1)
#loc57 = loc("CWE401_Memory_Leak__char_malloc_68a.c":56:5)
#loc58 = loc("CWE401_Memory_Leak__char_malloc_68a.c":56:12)
#loc59 = loc("CWE401_Memory_Leak__char_malloc_68a.c":57:12)
#loc60 = loc("CWE401_Memory_Leak__char_malloc_68a.c":57:5)
#loc61 = loc("CWE401_Memory_Leak__char_malloc_68a.c":59:20)
#loc62 = loc("CWE401_Memory_Leak__char_malloc_68a.c":59:5)
#loc63 = loc("CWE401_Memory_Leak__char_malloc_68a.c":61:5)
#loc64 = loc("CWE401_Memory_Leak__char_malloc_68a.c":61:12)
#loc65 = loc("CWE401_Memory_Leak__char_malloc_68a.c":61:18)
#loc66 = loc("CWE401_Memory_Leak__char_malloc_68a.c":62:15)
#loc67 = loc("CWE401_Memory_Leak__char_malloc_68a.c":62:5)
#loc68 = loc("CWE401_Memory_Leak__char_malloc_68a.c":63:54)
#loc69 = loc("CWE401_Memory_Leak__char_malloc_68a.c":63:5)
#loc70 = loc("CWE401_Memory_Leak__char_malloc_68a.c":64:5)
#loc71 = loc("CWE401_Memory_Leak__char_malloc_68a.c":64:53)
#loc72 = loc("CWE401_Memory_Leak__char_malloc_68a.c":51:1)
#loc73 = loc("CWE401_Memory_Leak__char_malloc_68a.c":51:54)
#loc74 = loc("CWE401_Memory_Leak__char_malloc_68a.c":68:1)
#loc75 = loc("CWE401_Memory_Leak__char_malloc_68a.c":80:1)
#loc76 = loc("CWE401_Memory_Leak__char_malloc_68a.c":70:5)
#loc77 = loc("CWE401_Memory_Leak__char_malloc_68a.c":70:12)
#loc78 = loc("CWE401_Memory_Leak__char_malloc_68a.c":71:12)
#loc79 = loc("CWE401_Memory_Leak__char_malloc_68a.c":71:5)
#loc80 = loc("CWE401_Memory_Leak__char_malloc_68a.c":73:20)
#loc81 = loc("CWE401_Memory_Leak__char_malloc_68a.c":73:27)
#loc82 = loc("CWE401_Memory_Leak__char_malloc_68a.c":73:31)
#loc83 = loc("CWE401_Memory_Leak__char_malloc_68a.c":73:42)
#loc84 = loc("CWE401_Memory_Leak__char_malloc_68a.c":73:43)
#loc85 = loc("CWE401_Memory_Leak__char_malloc_68a.c":73:5)
#loc86 = loc("CWE401_Memory_Leak__char_malloc_68a.c":74:5)
#loc87 = loc("CWE401_Memory_Leak__char_malloc_68a.c":74:33)
#loc88 = loc("CWE401_Memory_Leak__char_malloc_68a.c":74:9)
#loc89 = loc("CWE401_Memory_Leak__char_malloc_68a.c":74:17)
#loc90 = loc("CWE401_Memory_Leak__char_malloc_68a.c":74:14)
#loc91 = loc("CWE401_Memory_Leak__char_malloc_68a.c":74:23)
#loc92 = loc("CWE401_Memory_Leak__char_malloc_68a.c":74:24)
#loc93 = loc("CWE401_Memory_Leak__char_malloc_68a.c":74:30)
#loc94 = loc("CWE401_Memory_Leak__char_malloc_68a.c":74:29)
#loc95 = loc("CWE401_Memory_Leak__char_malloc_68a.c":76:5)
#loc96 = loc("CWE401_Memory_Leak__char_malloc_68a.c":76:12)
#loc97 = loc("CWE401_Memory_Leak__char_malloc_68a.c":76:18)
#loc98 = loc("CWE401_Memory_Leak__char_malloc_68a.c":77:15)
#loc99 = loc("CWE401_Memory_Leak__char_malloc_68a.c":77:5)
#loc100 = loc("CWE401_Memory_Leak__char_malloc_68a.c":78:54)
#loc101 = loc("CWE401_Memory_Leak__char_malloc_68a.c":78:5)
#loc102 = loc("CWE401_Memory_Leak__char_malloc_68a.c":79:5)
#loc103 = loc("CWE401_Memory_Leak__char_malloc_68a.c":79:53)
#loc104 = loc(fused[#loc1, #loc2])
#loc105 = loc(fused[#loc3, #loc4])
#loc106 = loc(fused[#loc5, #loc6])
#loc107 = loc(fused[#loc8, #loc9])
#loc108 = loc(fused[#loc10, #loc11])
#loc109 = loc(fused[#loc12, #loc13])
#loc110 = loc(fused[#loc14, #loc15])
#loc111 = loc(fused[#loc16, #loc17])
#loc112 = loc(fused[#loc19, #loc18])
#loc113 = loc(fused[#loc22, #loc23])
#loc114 = loc(fused[#loc21, #loc23])
#loc115 = loc(fused[#loc20, #loc24])
#loc116 = loc(fused[#loc25, #loc24])
#loc117 = loc(fused[#loc26, #loc27])
#loc118 = loc(fused[#loc28, #loc29])
#loc119 = loc(fused[#loc31, #loc27])
#loc120 = loc(fused[#loc40, #loc39])
#loc121 = loc(fused[#loc41, #loc42])
#loc122 = loc(fused[#loc43, #loc44])
#loc123 = loc(fused[#loc45, #loc46])
#loc124 = loc(fused[#loc47, #loc48])
#loc125 = loc(fused[#loc49, #loc50])
#loc126 = loc(fused[#loc51, #loc52])
#loc127 = loc(fused[#loc53, #loc54])
#loc128 = loc(fused[#loc55, #loc56])
#loc129 = loc(fused[#loc57, #loc58])
#loc130 = loc(fused[#loc60, #loc59])
#loc131 = loc(fused[#loc62, #loc61])
#loc132 = loc(fused[#loc69, #loc68])
#loc133 = loc(fused[#loc70, #loc71])
#loc134 = loc(fused[#loc72, #loc73])
#loc135 = loc(fused[#loc74, #loc75])
#loc136 = loc(fused[#loc76, #loc77])
#loc137 = loc(fused[#loc79, #loc78])
#loc138 = loc(fused[#loc82, #loc83])
#loc139 = loc(fused[#loc81, #loc83])
#loc140 = loc(fused[#loc80, #loc84])
#loc141 = loc(fused[#loc85, #loc84])
#loc142 = loc(fused[#loc86, #loc87])
#loc143 = loc(fused[#loc88, #loc89])
#loc144 = loc(fused[#loc91, #loc87])
#loc145 = loc(fused[#loc101, #loc100])
#loc146 = loc(fused[#loc102, #loc103])
