!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":73:45)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":118:45)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":139:45)
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @globalReturnsTrueOrFalse() -> !s32i loc(#loc246)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc247)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc248)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc249)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc250)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc12)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc13)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_123badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc252)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc253)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc254)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc22)
    cir.store %4, %2 : !u64i, !cir.ptr<!u64i> loc(#loc255)
    cir.br ^bb1 loc(#loc256)
  ^bb1:  // pred: ^bb0
    %5 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc26)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc257)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc258)
  ^bb2:  // pred: ^bb1
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc31)
    cir.store %8, %2 : !u64i, !cir.ptr<!u64i> loc(#loc259)
    cir.br ^bb4 loc(#loc29)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<20> : !s32i loc(#loc34)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc34)
    cir.store %10, %2 : !u64i, !cir.ptr<!u64i> loc(#loc260)
    cir.br ^bb4 loc(#loc25)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc25)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc261)
  ^bb6:  // pred: ^bb5
    %11 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc38)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc262)
    cir.brcond %12 ^bb7, ^bb15 loc(#loc263)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc264)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc265)
  ^bb9:  // pred: ^bb8
    %13 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %14 = cir.const #cir.int<5> : !u64i loc(#loc266)
    %15 = cir.cmp(gt, %13, %14) : !u64i, !cir.bool loc(#loc267)
    cir.brcond %15 ^bb10, ^bb11 loc(#loc268)
  ^bb10:  // pred: ^bb9
    %16 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %17 = cir.call @_Znam(%16) : (!u64i) -> !cir.ptr<!void> loc(#loc54)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc269)
    cir.store %18, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc270)
    %19 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc58)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc9)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc9)
    %23 = cir.call @strcpy(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc58)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    cir.delete.array %25 : <!s8i> loc(#loc62)
    cir.br ^bb12 loc(#loc51)
  ^bb11:  // pred: ^bb9
    %26 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc12)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc12)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    cir.br ^bb12 loc(#loc46)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc46)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc44)
  ^bb14:  // pred: ^bb13
    cir.br ^bb31 loc(#loc41)
  ^bb15:  // pred: ^bb6
    cir.br ^bb16 loc(#loc271)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc272)
  ^bb17:  // pred: ^bb16
    %28 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc68)
    %29 = cir.const #cir.int<5> : !u64i loc(#loc273)
    %30 = cir.cmp(gt, %28, %29) : !u64i, !cir.bool loc(#loc274)
    cir.brcond %30 ^bb18, ^bb23 loc(#loc71)
  ^bb18:  // pred: ^bb17
    %31 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc72)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc73)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc73)
    %34 = cir.cmp(lt, %31, %33) : !u64i, !cir.bool loc(#loc275)
    cir.brcond %34 ^bb19, ^bb20 loc(#loc71)
  ^bb19:  // pred: ^bb18
    %35 = cir.const #true loc(#loc71)
    cir.br ^bb21(%35 : !cir.bool) loc(#loc71)
  ^bb20:  // pred: ^bb18
    %36 = cir.const #false loc(#loc71)
    cir.br ^bb21(%36 : !cir.bool) loc(#loc71)
  ^bb21(%37: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":73:45)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc71)
  ^bb22:  // pred: ^bb21
    cir.br ^bb24(%37 : !cir.bool) loc(#loc71)
  ^bb23:  // pred: ^bb17
    %38 = cir.const #false loc(#loc71)
    cir.br ^bb24(%38 : !cir.bool) loc(#loc71)
  ^bb24(%39: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":73:45)):  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc71)
  ^bb25:  // pred: ^bb24
    cir.brcond %39 ^bb26, ^bb27 loc(#loc276)
  ^bb26:  // pred: ^bb25
    %40 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc77)
    %41 = cir.call @_Znam(%40) : (!u64i) -> !cir.ptr<!void> loc(#loc54)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc277)
    cir.store %42, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc278)
    %43 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc81)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %45 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc83)
    %46 = cir.cast(array_to_ptrdecay, %45 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc83)
    %47 = cir.call @strcpy(%44, %46) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc81)
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    cir.delete.array %49 : <!s8i> loc(#loc86)
    cir.br ^bb28 loc(#loc75)
  ^bb27:  // pred: ^bb25
    %50 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc13)
    %51 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc13)
    cir.call @printLine(%51) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    cir.br ^bb28 loc(#loc67)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc67)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc65)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc37)
  ^bb31:  // 2 preds: ^bb14, ^bb30
    cir.br ^bb32 loc(#loc37)
  ^bb32:  // pred: ^bb31
    cir.return loc(#loc15)
  } loc(#loc251)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc280)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc281)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc282)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc96)
    cir.store %4, %2 : !u64i, !cir.ptr<!u64i> loc(#loc283)
    cir.br ^bb1 loc(#loc284)
  ^bb1:  // pred: ^bb0
    %5 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc100)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc285)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc286)
  ^bb2:  // pred: ^bb1
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc105)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc105)
    cir.store %8, %2 : !u64i, !cir.ptr<!u64i> loc(#loc287)
    cir.br ^bb4 loc(#loc103)
  ^bb3:  // pred: ^bb1
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc108)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc108)
    cir.store %10, %2 : !u64i, !cir.ptr<!u64i> loc(#loc288)
    cir.br ^bb4 loc(#loc99)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc99)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc289)
  ^bb6:  // pred: ^bb5
    %11 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc113)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc290)
    cir.brcond %12 ^bb7, ^bb23 loc(#loc291)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc292)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc293)
  ^bb9:  // pred: ^bb8
    %13 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc122)
    %14 = cir.const #cir.int<5> : !u64i loc(#loc294)
    %15 = cir.cmp(gt, %13, %14) : !u64i, !cir.bool loc(#loc295)
    cir.brcond %15 ^bb10, ^bb15 loc(#loc125)
  ^bb10:  // pred: ^bb9
    %16 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc126)
    %17 = cir.const #cir.int<100> : !s32i loc(#loc127)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc127)
    %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc296)
    cir.brcond %19 ^bb11, ^bb12 loc(#loc125)
  ^bb11:  // pred: ^bb10
    %20 = cir.const #true loc(#loc125)
    cir.br ^bb13(%20 : !cir.bool) loc(#loc125)
  ^bb12:  // pred: ^bb10
    %21 = cir.const #false loc(#loc125)
    cir.br ^bb13(%21 : !cir.bool) loc(#loc125)
  ^bb13(%22: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":118:45)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc125)
  ^bb14:  // pred: ^bb13
    cir.br ^bb16(%22 : !cir.bool) loc(#loc125)
  ^bb15:  // pred: ^bb9
    %23 = cir.const #false loc(#loc125)
    cir.br ^bb16(%23 : !cir.bool) loc(#loc125)
  ^bb16(%24: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":118:45)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc125)
  ^bb17:  // pred: ^bb16
    cir.brcond %24 ^bb18, ^bb19 loc(#loc297)
  ^bb18:  // pred: ^bb17
    %25 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc131)
    %26 = cir.call @_Znam(%25) : (!u64i) -> !cir.ptr<!void> loc(#loc132)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc298)
    cir.store %27, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc299)
    %28 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc136)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc138)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc138)
    %32 = cir.call @strcpy(%29, %31) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc136)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
    cir.delete.array %34 : <!s8i> loc(#loc141)
    cir.br ^bb20 loc(#loc129)
  ^bb19:  // pred: ^bb17
    %35 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc142)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc142)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc143)
    cir.br ^bb20 loc(#loc121)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc121)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc119)
  ^bb22:  // pred: ^bb21
    cir.br ^bb39 loc(#loc116)
  ^bb23:  // pred: ^bb6
    cir.br ^bb24 loc(#loc300)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc301)
  ^bb25:  // pred: ^bb24
    %37 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc148)
    %38 = cir.const #cir.int<5> : !u64i loc(#loc302)
    %39 = cir.cmp(gt, %37, %38) : !u64i, !cir.bool loc(#loc303)
    cir.brcond %39 ^bb26, ^bb31 loc(#loc151)
  ^bb26:  // pred: ^bb25
    %40 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc152)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc153)
    %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc153)
    %43 = cir.cmp(lt, %40, %42) : !u64i, !cir.bool loc(#loc304)
    cir.brcond %43 ^bb27, ^bb28 loc(#loc151)
  ^bb27:  // pred: ^bb26
    %44 = cir.const #true loc(#loc151)
    cir.br ^bb29(%44 : !cir.bool) loc(#loc151)
  ^bb28:  // pred: ^bb26
    %45 = cir.const #false loc(#loc151)
    cir.br ^bb29(%45 : !cir.bool) loc(#loc151)
  ^bb29(%46: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":139:45)):  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc151)
  ^bb30:  // pred: ^bb29
    cir.br ^bb32(%46 : !cir.bool) loc(#loc151)
  ^bb31:  // pred: ^bb25
    %47 = cir.const #false loc(#loc151)
    cir.br ^bb32(%47 : !cir.bool) loc(#loc151)
  ^bb32(%48: !cir.bool loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":139:45)):  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc151)
  ^bb33:  // pred: ^bb32
    cir.brcond %48 ^bb34, ^bb35 loc(#loc305)
  ^bb34:  // pred: ^bb33
    %49 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc157)
    %50 = cir.call @_Znam(%49) : (!u64i) -> !cir.ptr<!void> loc(#loc132)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc306)
    cir.store %51, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc307)
    %52 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc161)
    %53 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
    %54 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc163)
    %55 = cir.cast(array_to_ptrdecay, %54 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc163)
    %56 = cir.call @strcpy(%53, %55) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc161)
    %57 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
    cir.call @printLine(%57) : (!cir.ptr<!s8i>) -> () loc(#loc165)
    %58 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
    cir.delete.array %58 : <!s8i> loc(#loc166)
    cir.br ^bb36 loc(#loc155)
  ^bb35:  // pred: ^bb33
    %59 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc167)
    %60 = cir.cast(array_to_ptrdecay, %59 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc167)
    cir.call @printLine(%60) : (!cir.ptr<!s8i>) -> () loc(#loc168)
    cir.br ^bb36 loc(#loc147)
  ^bb36:  // 2 preds: ^bb34, ^bb35
    cir.br ^bb37 loc(#loc147)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc145)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc112)
  ^bb39:  // 2 preds: ^bb22, ^bb38
    cir.br ^bb40 loc(#loc112)
  ^bb40:  // pred: ^bb39
    cir.return loc(#loc89)
  } loc(#loc279)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc309)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc310)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc311)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc177)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc177)
    cir.store %4, %2 : !u64i, !cir.ptr<!u64i> loc(#loc312)
    cir.br ^bb1 loc(#loc313)
  ^bb1:  // pred: ^bb0
    %5 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc181)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc314)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc315)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<20> : !s32i loc(#loc186)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc186)
    cir.store %8, %2 : !u64i, !cir.ptr<!u64i> loc(#loc316)
    cir.br ^bb4 loc(#loc184)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<20> : !s32i loc(#loc188)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc188)
    cir.store %10, %2 : !u64i, !cir.ptr<!u64i> loc(#loc317)
    cir.br ^bb4 loc(#loc180)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc180)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc318)
  ^bb6:  // pred: ^bb5
    %11 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc192)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc319)
    cir.brcond %12 ^bb7, ^bb15 loc(#loc320)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc321)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc322)
  ^bb9:  // pred: ^bb8
    %13 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc201)
    %14 = cir.const #cir.int<5> : !u64i loc(#loc323)
    %15 = cir.cmp(gt, %13, %14) : !u64i, !cir.bool loc(#loc324)
    cir.brcond %15 ^bb10, ^bb11 loc(#loc325)
  ^bb10:  // pred: ^bb9
    %16 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc207)
    %17 = cir.call @_Znam(%16) : (!u64i) -> !cir.ptr<!void> loc(#loc208)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc326)
    cir.store %18, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc327)
    %19 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc212)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc213)
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc214)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc214)
    %23 = cir.call @strcpy(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc212)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc215)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc216)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc217)
    cir.delete.array %25 : <!s8i> loc(#loc217)
    cir.br ^bb12 loc(#loc205)
  ^bb11:  // pred: ^bb9
    %26 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc218)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc218)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc219)
    cir.br ^bb12 loc(#loc200)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc200)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc198)
  ^bb14:  // pred: ^bb13
    cir.br ^bb23 loc(#loc195)
  ^bb15:  // pred: ^bb6
    cir.br ^bb16 loc(#loc328)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc329)
  ^bb17:  // pred: ^bb16
    %28 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc224)
    %29 = cir.const #cir.int<5> : !u64i loc(#loc330)
    %30 = cir.cmp(gt, %28, %29) : !u64i, !cir.bool loc(#loc331)
    cir.brcond %30 ^bb18, ^bb19 loc(#loc332)
  ^bb18:  // pred: ^bb17
    %31 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc230)
    %32 = cir.call @_Znam(%31) : (!u64i) -> !cir.ptr<!void> loc(#loc208)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc333)
    cir.store %33, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc334)
    %34 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc234)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc235)
    %36 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc236)
    %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc236)
    %38 = cir.call @strcpy(%35, %37) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc234)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc237)
    cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc238)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
    cir.delete.array %40 : <!s8i> loc(#loc239)
    cir.br ^bb20 loc(#loc228)
  ^bb19:  // pred: ^bb17
    %41 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc240)
    %42 = cir.cast(array_to_ptrdecay, %41 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc240)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc241)
    cir.br ^bb20 loc(#loc223)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc223)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc221)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc191)
  ^bb23:  // 2 preds: ^bb14, ^bb22
    cir.br ^bb24 loc(#loc191)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc170)
  } loc(#loc308)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_124goodEv() extra(#fn_attr1) {
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12L7goodB2GEv() : () -> () loc(#loc244)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12L7goodG2BEv() : () -> () loc(#loc245)
    cir.return loc(#loc243)
  } loc(#loc335)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":56:34)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":62:27)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":83:27)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":30:1)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":87:1)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":48:13)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":48:20)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":69:13)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":69:20)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":32:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":32:12)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":34:12)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":34:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":35:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":44:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":35:8)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":35:33)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":36:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":39:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":41:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":38:16)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":38:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":38:21)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":43:16)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":43:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":45:5)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":86:5)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":45:8)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":45:33)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":46:5)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":65:5)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":67:5)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":47:9)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":64:9)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":52:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":63:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":52:17)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":52:24)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":52:43)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":53:13)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":59:13)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":61:13)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":54:37)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":30:6)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":54:28)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":54:41)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":54:17)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":56:17)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":56:24)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":57:27)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":57:17)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":58:27)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":62:17)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":68:9)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":85:9)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":73:13)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":84:13)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":73:17)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":73:24)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":73:43)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":73:48)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":73:55)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":74:13)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":80:13)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":82:13)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":75:37)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":75:28)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":75:41)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":75:17)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":77:17)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":77:24)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":77:34)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":78:27)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":78:17)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":79:27)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":83:17)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":96:1)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":153:1)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":114:13)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":114:20)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":135:13)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":135:20)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":98:5)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":98:12)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":100:12)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":100:5)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":101:5)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":110:5)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":101:8)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":101:33)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":102:5)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":105:5)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":107:5)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":104:16)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":104:9)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":104:21)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":109:16)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":109:9)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":109:21)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":111:5)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":152:5)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":111:8)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":111:33)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":112:5)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":131:5)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":133:5)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":113:9)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":130:9)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":118:13)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":129:13)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":118:17)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":118:24)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":118:43)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":118:48)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":118:55)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":119:13)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":125:13)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":127:13)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":120:37)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":96:13)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":120:28)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":120:41)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":120:17)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":122:17)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":122:24)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":122:34)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":123:27)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":123:17)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":124:27)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":128:27)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":128:17)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":134:9)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":151:9)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":139:13)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":150:13)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":139:17)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":139:24)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":139:43)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":139:48)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":139:55)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":140:13)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":146:13)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":148:13)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":141:37)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":141:28)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":141:41)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":141:17)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":143:17)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":143:24)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":143:34)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":144:27)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":144:17)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":145:27)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":149:27)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":149:17)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":158:1)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":215:1)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":176:13)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":176:20)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":197:13)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":197:20)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":160:5)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":160:12)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":162:12)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":162:5)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":163:5)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":172:5)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":163:8)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":163:33)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":164:5)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":167:5)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":169:5)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":166:16)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":166:9)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":171:16)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":171:9)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":173:5)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":214:5)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":173:8)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":173:33)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":174:5)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":193:5)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":195:5)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":175:9)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":192:9)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":180:13)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":191:13)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":180:17)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":180:24)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":180:43)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":181:13)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":187:13)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":189:13)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":182:37)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":158:13)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":182:28)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":182:41)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":182:17)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":184:17)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":184:24)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":184:34)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":185:27)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":185:17)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":186:27)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":190:27)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":190:17)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":196:9)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":213:9)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":201:13)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":212:13)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":201:17)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":201:24)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":201:43)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":202:13)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":208:13)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":210:13)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":203:37)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":203:28)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":203:41)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":203:17)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":205:17)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":205:24)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":205:34)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":206:27)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":206:17)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":207:27)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":211:27)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":211:17)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":217:1)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":221:1)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":219:5)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_12.cpp":220:5)
#loc246 = loc(fused[#loc1, #loc2])
#loc247 = loc(fused[#loc3, #loc4])
#loc248 = loc(fused[#loc5, #loc6])
#loc249 = loc(fused[#loc7, #loc8])
#loc250 = loc(fused[#loc10, #loc11])
#loc251 = loc(fused[#loc14, #loc15])
#loc252 = loc(fused[#loc16, #loc17])
#loc253 = loc(fused[#loc18, #loc19])
#loc254 = loc(fused[#loc20, #loc21])
#loc255 = loc(fused[#loc23, #loc22])
#loc256 = loc(fused[#loc24, #loc25])
#loc257 = loc(fused[#loc26, #loc27])
#loc258 = loc(fused[#loc28, #loc29, #loc30, #loc25])
#loc259 = loc(fused[#loc32, #loc33])
#loc260 = loc(fused[#loc35, #loc34])
#loc261 = loc(fused[#loc36, #loc37])
#loc262 = loc(fused[#loc38, #loc39])
#loc263 = loc(fused[#loc40, #loc41, #loc42, #loc37])
#loc264 = loc(fused[#loc43, #loc44])
#loc265 = loc(fused[#loc45, #loc46])
#loc266 = loc(fused[#loc48, #loc49])
#loc267 = loc(fused[#loc47, #loc49])
#loc268 = loc(fused[#loc50, #loc51, #loc52, #loc46])
#loc269 = loc(fused[#loc55, #loc56])
#loc270 = loc(fused[#loc57, #loc56])
#loc271 = loc(fused[#loc64, #loc65])
#loc272 = loc(fused[#loc66, #loc67])
#loc273 = loc(fused[#loc69, #loc70])
#loc274 = loc(fused[#loc68, #loc70])
#loc275 = loc(fused[#loc72, #loc73])
#loc276 = loc(fused[#loc74, #loc75, #loc76, #loc67])
#loc277 = loc(fused[#loc78, #loc79])
#loc278 = loc(fused[#loc80, #loc79])
#loc279 = loc(fused[#loc88, #loc89])
#loc280 = loc(fused[#loc90, #loc91])
#loc281 = loc(fused[#loc92, #loc93])
#loc282 = loc(fused[#loc94, #loc95])
#loc283 = loc(fused[#loc97, #loc96])
#loc284 = loc(fused[#loc98, #loc99])
#loc285 = loc(fused[#loc100, #loc101])
#loc286 = loc(fused[#loc102, #loc103, #loc104, #loc99])
#loc287 = loc(fused[#loc106, #loc107])
#loc288 = loc(fused[#loc109, #loc110])
#loc289 = loc(fused[#loc111, #loc112])
#loc290 = loc(fused[#loc113, #loc114])
#loc291 = loc(fused[#loc115, #loc116, #loc117, #loc112])
#loc292 = loc(fused[#loc118, #loc119])
#loc293 = loc(fused[#loc120, #loc121])
#loc294 = loc(fused[#loc123, #loc124])
#loc295 = loc(fused[#loc122, #loc124])
#loc296 = loc(fused[#loc126, #loc127])
#loc297 = loc(fused[#loc128, #loc129, #loc130, #loc121])
#loc298 = loc(fused[#loc133, #loc134])
#loc299 = loc(fused[#loc135, #loc134])
#loc300 = loc(fused[#loc144, #loc145])
#loc301 = loc(fused[#loc146, #loc147])
#loc302 = loc(fused[#loc149, #loc150])
#loc303 = loc(fused[#loc148, #loc150])
#loc304 = loc(fused[#loc152, #loc153])
#loc305 = loc(fused[#loc154, #loc155, #loc156, #loc147])
#loc306 = loc(fused[#loc158, #loc159])
#loc307 = loc(fused[#loc160, #loc159])
#loc308 = loc(fused[#loc169, #loc170])
#loc309 = loc(fused[#loc171, #loc172])
#loc310 = loc(fused[#loc173, #loc174])
#loc311 = loc(fused[#loc175, #loc176])
#loc312 = loc(fused[#loc178, #loc177])
#loc313 = loc(fused[#loc179, #loc180])
#loc314 = loc(fused[#loc181, #loc182])
#loc315 = loc(fused[#loc183, #loc184, #loc185, #loc180])
#loc316 = loc(fused[#loc187, #loc186])
#loc317 = loc(fused[#loc189, #loc188])
#loc318 = loc(fused[#loc190, #loc191])
#loc319 = loc(fused[#loc192, #loc193])
#loc320 = loc(fused[#loc194, #loc195, #loc196, #loc191])
#loc321 = loc(fused[#loc197, #loc198])
#loc322 = loc(fused[#loc199, #loc200])
#loc323 = loc(fused[#loc202, #loc203])
#loc324 = loc(fused[#loc201, #loc203])
#loc325 = loc(fused[#loc204, #loc205, #loc206, #loc200])
#loc326 = loc(fused[#loc209, #loc210])
#loc327 = loc(fused[#loc211, #loc210])
#loc328 = loc(fused[#loc220, #loc221])
#loc329 = loc(fused[#loc222, #loc223])
#loc330 = loc(fused[#loc225, #loc226])
#loc331 = loc(fused[#loc224, #loc226])
#loc332 = loc(fused[#loc227, #loc228, #loc229, #loc223])
#loc333 = loc(fused[#loc231, #loc232])
#loc334 = loc(fused[#loc233, #loc232])
#loc335 = loc(fused[#loc242, #loc243])
