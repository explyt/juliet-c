!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc121 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":98:48)
#loc165 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":183:10)
#loc166 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":183:14)
#loc167 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":183:20)
#loc168 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":183:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc284 = loc(fused[#loc165, #loc166])
#loc285 = loc(fused[#loc167, #loc168])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__listen_socket_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc219)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc220)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc221)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc222)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc223)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc224)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc225)
  cir.func private @close(!s32i) -> !s32i loc(#loc226)
  cir.func private @__assert_fail(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) extra(#fn_attr) loc(#loc227)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data > ASSERT_VALUE\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc19)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"CWE617_Reachable_Assertion__listen_socket_03.c\00" : !cir.array<!s8i x 47>> : !cir.array<!s8i x 47> {alignment = 1 : i64} loc(#loc19)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"void CWE617_Reachable_Assertion__listen_socket_03_bad()\00" : !cir.array<!s8i x 56>> : !cir.array<!s8i x 56> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto @CWE617_Reachable_Assertion__listen_socket_03_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc229)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc230)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc231)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc232)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc233)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc234)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc35)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    cir.br ^bb1 loc(#loc236)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<5> : !s32i loc(#loc39)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc40)
    %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc237)
    cir.brcond %10 ^bb2, ^bb46 loc(#loc238)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc239)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc27)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc29)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    cir.br ^bb4 loc(#loc240)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc240)
  ^bb5:  // pred: ^bb34
    %15 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc46)
    cir.brcond %16 ^bb6, ^bb35 loc(#loc46)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %17 = cir.const #cir.int<2> : !s32i loc(#loc47)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc49)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    cir.br ^bb7 loc(#loc242)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc56)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc243)
    cir.brcond %24 ^bb8, ^bb9 loc(#loc244)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc58)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc54)
  ^bb10:  // pred: ^bb9
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc245)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc246)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc247)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc66)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc66)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc248)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc69)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc249)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc73)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc73)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc74)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc250)
    cir.br ^bb11 loc(#loc251)
  ^bb11:  // pred: ^bb10
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc252)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc253)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc253)
    %43 = cir.call @bind(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc85)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc86)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc254)
    cir.brcond %46 ^bb12, ^bb13 loc(#loc255)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc88)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc79)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc256)
  ^bb15:  // pred: ^bb14
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %48 = cir.const #cir.int<5> : !s32i loc(#loc92)
    %49 = cir.call @listen(%47, %48) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc93)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc94)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc257)
    cir.brcond %52 ^bb16, ^bb17 loc(#loc258)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc96)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc90)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc98)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc99)
    %56 = cir.call @accept(%53, %54, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc100)
    cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    cir.br ^bb19 loc(#loc260)
  ^bb19:  // pred: ^bb18
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc106)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc261)
    cir.brcond %60 ^bb20, ^bb21 loc(#loc262)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc108)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc104)
  ^bb22:  // pred: ^bb21
    %61 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
    %64 = cir.const #cir.int<3> : !s32i loc(#loc111)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc111)
    %66 = cir.const #cir.int<4> : !u64i loc(#loc111)
    %67 = cir.binop(mul, %65, %66) : !u64i loc(#loc111)
    %68 = cir.const #cir.int<2> : !s32i loc(#loc111)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc111)
    %70 = cir.binop(add, %67, %69) : !u64i loc(#loc111)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc112)
    %73 = cir.binop(sub, %70, %72) : !u64i loc(#loc263)
    %74 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %75 = cir.call @recv(%61, %63, %73, %74) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc114)
    %76 = cir.cast(integral, %75 : !s64i), !s32i loc(#loc114)
    cir.store %76, %0 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    cir.br ^bb23 loc(#loc265)
  ^bb23:  // pred: ^bb22
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc120)
    %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc266)
    cir.brcond %80 ^bb24, ^bb25 loc(#loc121)
  ^bb24:  // pred: ^bb23
    %81 = cir.const #true loc(#loc121)
    cir.br ^bb30(%81 : !cir.bool) loc(#loc121)
  ^bb25:  // pred: ^bb23
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %83 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc267)
    cir.brcond %84 ^bb26, ^bb27 loc(#loc121)
  ^bb26:  // pred: ^bb25
    %85 = cir.const #true loc(#loc121)
    cir.br ^bb28(%85 : !cir.bool) loc(#loc121)
  ^bb27:  // pred: ^bb25
    %86 = cir.const #false loc(#loc121)
    cir.br ^bb28(%86 : !cir.bool) loc(#loc121)
  ^bb28(%87: !cir.bool loc("CWE617_Reachable_Assertion__listen_socket_03.c":98:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc121)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%87 : !cir.bool) loc(#loc121)
  ^bb30(%88: !cir.bool loc("CWE617_Reachable_Assertion__listen_socket_03.c":98:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc121)
  ^bb31:  // pred: ^bb30
    cir.brcond %88 ^bb32, ^bb33 loc(#loc268)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc125)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc118)
  ^bb34:  // pred: ^bb33
    %89 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %90 = cir.cast(integral, %89 : !s32i), !s8i loc(#loc126)
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc128)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !s32i), !cir.ptr<!s8i> loc(#loc128)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc269)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
    %95 = cir.call @atoi(%94) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc130)
    cir.store %95, %5 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    cir.br ^bb5 loc(#loc45)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc45)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc271)
  ^bb37:  // pred: ^bb36
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %98 = cir.unary(minus, %97) : !s32i, !s32i loc(#loc136)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc272)
    cir.brcond %99 ^bb38, ^bb39 loc(#loc273)
  ^bb38:  // pred: ^bb37
    %100 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc139)
    cir.br ^bb39 loc(#loc134)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc134)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc274)
  ^bb41:  // pred: ^bb40
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %104 = cir.unary(minus, %103) : !s32i, !s32i loc(#loc143)
    %105 = cir.cmp(ne, %102, %104) : !s32i, !cir.bool loc(#loc275)
    cir.brcond %105 ^bb42, ^bb43 loc(#loc276)
  ^bb42:  // pred: ^bb41
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %107 = cir.call @close(%106) : (!s32i) -> !s32i loc(#loc146)
    cir.br ^bb43 loc(#loc141)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc141)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc43)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc38)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc38)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc19)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc19)
  ^bb49:  // pred: ^bb48
    %108 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %109 = cir.const #cir.int<5> : !s32i loc(#loc19)
    %110 = cir.cmp(gt, %108, %109) : !s32i, !cir.bool loc(#loc19)
    cir.brcond %110 ^bb50, ^bb51 loc(#loc19)
  ^bb50:  // pred: ^bb49
    cir.br ^bb52 loc(#loc19)
  ^bb51:  // pred: ^bb49
    %111 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc19)
    %112 = cir.cast(array_to_ptrdecay, %111 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc19)
    %113 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 47>> loc(#loc19)
    %114 = cir.cast(array_to_ptrdecay, %113 : !cir.ptr<!cir.array<!s8i x 47>>), !cir.ptr<!s8i> loc(#loc19)
    %115 = cir.const #cir.int<125> : !s32i loc(#loc19)
    %116 = cir.cast(integral, %115 : !s32i), !u32i loc(#loc19)
    %117 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 56>> loc(#loc19)
    %118 = cir.cast(array_to_ptrdecay, %117 : !cir.ptr<!cir.array<!s8i x 56>>), !cir.ptr<!s8i> loc(#loc19)
    cir.call @__assert_fail(%112, %114, %116, %118) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc19)
    cir.br ^bb52 loc(#loc19)
  ^bb52:  // 2 preds: ^bb50, ^bb51
    cir.br ^bb53 loc(#loc19)
  ^bb53:  // pred: ^bb52
    cir.br ^bb54 loc(#loc19)
  ^bb54:  // pred: ^bb53
    cir.return loc(#loc21)
  } loc(#loc228)
  cir.func no_proto @CWE617_Reachable_Assertion__listen_socket_03_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc278)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc149)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc279)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc151)
    cir.return loc(#loc148)
  } loc(#loc277)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc280)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc281)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc282)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc162)
  cir.func @main(%arg0: !s32i loc(fused[#loc165, #loc166]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc167, #loc168])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc284)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc285)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc164)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc169)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc170)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc171)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc171)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc172)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc159)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc159)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc173)
    %8 = cir.get_global @CWE617_Reachable_Assertion__listen_socket_03_good : !cir.ptr<!cir.func<!void ()>> loc(#loc286)
    cir.call @CWE617_Reachable_Assertion__listen_socket_03_good() : () -> () loc(#loc174)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc160)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc160)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc176)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc161)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc161)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc177)
    %13 = cir.get_global @CWE617_Reachable_Assertion__listen_socket_03_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc287)
    cir.call @CWE617_Reachable_Assertion__listen_socket_03_bad() : () -> () loc(#loc178)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc162)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc162)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc180)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc181)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    cir.return %17 : !s32i loc(#loc288)
  } loc(#loc283)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc183)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"void goodG2B1()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc184)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc290)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc189)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc190)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    cir.br ^bb1 loc(#loc292)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc194)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc195)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc293)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc294)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc183)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc183)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc199)
    cir.br ^bb4 loc(#loc197)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<5> : !s32i loc(#loc200)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc201)
    %10 = cir.binop(add, %8, %9) nsw : !s32i loc(#loc200)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc295)
    cir.br ^bb4 loc(#loc193)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc193)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc184)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc184)
  ^bb7:  // pred: ^bb6
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc184)
    %13 = cir.cmp(gt, %11, %12) : !s32i, !cir.bool loc(#loc184)
    cir.brcond %13 ^bb8, ^bb9 loc(#loc184)
  ^bb8:  // pred: ^bb7
    cir.br ^bb10 loc(#loc184)
  ^bb9:  // pred: ^bb7
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc184)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc184)
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 47>> loc(#loc184)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 47>>), !cir.ptr<!s8i> loc(#loc184)
    %18 = cir.const #cir.int<149> : !s32i loc(#loc184)
    %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc184)
    %20 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc184)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc184)
    cir.call @__assert_fail(%15, %17, %19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc184)
    cir.br ^bb10 loc(#loc184)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc184)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc184)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc186)
  } loc(#loc289)
  cir.global "private" constant cir_private dsolocal @".str.9" = #cir.const_array<"void goodG2B2()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc203)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc297)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc208)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc209)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc298)
    cir.br ^bb1 loc(#loc299)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc213)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc214)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc300)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc301)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<5> : !s32i loc(#loc216)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc217)
    %8 = cir.binop(add, %6, %7) nsw : !s32i loc(#loc216)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc302)
    cir.br ^bb3 loc(#loc212)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc212)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc203)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc203)
  ^bb6:  // pred: ^bb5
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc203)
    %11 = cir.cmp(gt, %9, %10) : !s32i, !cir.bool loc(#loc203)
    cir.brcond %11 ^bb7, ^bb8 loc(#loc203)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9 loc(#loc203)
  ^bb8:  // pred: ^bb6
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc203)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc203)
    %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 47>> loc(#loc203)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 47>>), !cir.ptr<!s8i> loc(#loc203)
    %16 = cir.const #cir.int<164> : !s32i loc(#loc203)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc203)
    %18 = cir.get_global @".str.9" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc203)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc203)
    cir.call @__assert_fail(%13, %15, %17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc203)
    cir.br ^bb9 loc(#loc203)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc203)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc203)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc205)
  } loc(#loc296)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__listen_socket_03.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/include/assert.h":67:1)
#loc18 = loc("/usr/include/assert.h":69:43)
#loc19 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":125:5)
#loc20 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":47:1)
#loc21 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":126:1)
#loc22 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":59:13)
#loc23 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":59:17)
#loc24 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":60:13)
#loc25 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":60:32)
#loc26 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":61:13)
#loc27 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":61:35)
#loc28 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":62:13)
#loc29 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":62:35)
#loc30 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":63:13)
#loc31 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":63:45)
#loc32 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":49:5)
#loc33 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":49:9)
#loc34 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":51:13)
#loc35 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":51:12)
#loc36 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":51:5)
#loc37 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":52:5)
#loc38 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":123:5)
#loc39 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":52:8)
#loc40 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":52:11)
#loc41 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":53:5)
#loc42 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":54:9)
#loc43 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":122:9)
#loc44 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":64:13)
#loc45 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":107:21)
#loc46 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":107:20)
#loc47 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":74:39)
#loc48 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":74:48)
#loc49 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":74:61)
#loc50 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":74:32)
#loc51 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":74:17)
#loc52 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":74:72)
#loc53 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":75:17)
#loc54 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":78:17)
#loc55 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":75:21)
#loc56 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":75:37)
#loc57 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":76:17)
#loc58 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":77:21)
#loc59 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":79:24)
#loc60 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":79:25)
#loc61 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":79:34)
#loc62 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":79:37)
#loc63 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":79:51)
#loc64 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":79:17)
#loc65 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":79:52)
#loc66 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":80:38)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":80:17)
#loc69 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":81:43)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":81:17)
#loc73 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":82:42)
#loc74 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":82:36)
#loc75 = loc("/usr/include/netinet/in.h":250:15)
#loc76 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":82:17)
#loc77 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":82:50)
#loc78 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":83:17)
#loc79 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":86:17)
#loc80 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":83:26)
#loc81 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":83:58)
#loc82 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":83:59)
#loc83 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":83:68)
#loc84 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":83:82)
#loc85 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":83:21)
#loc86 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":83:88)
#loc87 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":84:17)
#loc88 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":85:21)
#loc89 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":87:17)
#loc90 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":90:17)
#loc91 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":87:28)
#loc92 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":87:42)
#loc93 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":87:21)
#loc94 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":87:61)
#loc95 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":88:17)
#loc96 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":89:21)
#loc97 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":91:39)
#loc98 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":91:53)
#loc99 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":91:59)
#loc100 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":91:32)
#loc101 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":91:17)
#loc102 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":91:63)
#loc103 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":92:17)
#loc104 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":95:17)
#loc105 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":92:21)
#loc106 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":92:37)
#loc107 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":93:17)
#loc108 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":94:21)
#loc109 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":97:35)
#loc110 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":97:49)
#loc111 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":97:62)
#loc112 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":97:80)
#loc113 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":97:83)
#loc114 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":97:30)
#loc115 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":97:17)
#loc116 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":97:84)
#loc117 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":98:17)
#loc118 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":101:17)
#loc119 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":98:21)
#loc120 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":98:35)
#loc122 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":98:51)
#loc123 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":98:65)
#loc124 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":99:17)
#loc125 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":100:21)
#loc126 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":103:43)
#loc127 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":103:29)
#loc128 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":103:17)
#loc129 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":105:29)
#loc130 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":105:24)
#loc131 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":105:17)
#loc132 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":105:40)
#loc133 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":108:13)
#loc134 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":111:13)
#loc135 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":108:17)
#loc136 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":108:33)
#loc137 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":109:13)
#loc138 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":110:30)
#loc139 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":110:17)
#loc140 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":112:13)
#loc141 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":115:13)
#loc142 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":112:17)
#loc143 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":112:33)
#loc144 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":113:13)
#loc145 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":114:30)
#loc146 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":114:17)
#loc147 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":167:1)
#loc148 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":171:1)
#loc149 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":169:5)
#loc150 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":169:14)
#loc151 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":170:5)
#loc152 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":170:14)
#loc153 = loc("/usr/include/stdlib.h":575:1)
#loc154 = loc("/usr/include/stdlib.h":575:41)
#loc155 = loc("/usr/include/time.h":76:1)
#loc156 = loc("/usr/include/time.h":76:38)
#loc157 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc158 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc159 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":188:15)
#loc160 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":190:15)
#loc161 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":193:15)
#loc162 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":195:15)
#loc163 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":183:1)
#loc164 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":198:1)
#loc169 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":184:1)
#loc170 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":186:27)
#loc171 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":186:22)
#loc172 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":186:5)
#loc173 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":188:5)
#loc174 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":189:5)
#loc175 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":189:55)
#loc176 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":190:5)
#loc177 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":193:5)
#loc178 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":194:5)
#loc179 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":194:54)
#loc180 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":195:5)
#loc181 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":197:12)
#loc182 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":197:5)
#loc183 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":141:19)
#loc184 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":149:5)
#loc185 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":133:1)
#loc186 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":150:1)
#loc187 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":135:5)
#loc188 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":135:9)
#loc189 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":137:13)
#loc190 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":137:12)
#loc191 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":137:5)
#loc192 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":138:5)
#loc193 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":147:5)
#loc194 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":138:8)
#loc195 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":138:11)
#loc196 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":139:5)
#loc197 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":142:5)
#loc198 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":144:5)
#loc199 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":141:9)
#loc200 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":146:16)
#loc201 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":146:29)
#loc202 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":146:9)
#loc203 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":164:5)
#loc204 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":153:1)
#loc205 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":165:1)
#loc206 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":155:5)
#loc207 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":155:9)
#loc208 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":157:13)
#loc209 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":157:12)
#loc210 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":157:5)
#loc211 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":158:5)
#loc212 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":162:5)
#loc213 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":158:8)
#loc214 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":158:11)
#loc215 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":159:5)
#loc216 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":161:16)
#loc217 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":161:29)
#loc218 = loc("CWE617_Reachable_Assertion__listen_socket_03.c":161:9)
#loc219 = loc(fused[#loc1, #loc2])
#loc220 = loc(fused[#loc3, #loc4])
#loc221 = loc(fused[#loc5, #loc6])
#loc222 = loc(fused[#loc7, #loc8])
#loc223 = loc(fused[#loc9, #loc10])
#loc224 = loc(fused[#loc11, #loc12])
#loc225 = loc(fused[#loc13, #loc14])
#loc226 = loc(fused[#loc15, #loc16])
#loc227 = loc(fused[#loc17, #loc18])
#loc228 = loc(fused[#loc20, #loc21])
#loc229 = loc(fused[#loc22, #loc23])
#loc230 = loc(fused[#loc24, #loc25])
#loc231 = loc(fused[#loc26, #loc27])
#loc232 = loc(fused[#loc28, #loc29])
#loc233 = loc(fused[#loc30, #loc31])
#loc234 = loc(fused[#loc32, #loc33])
#loc235 = loc(fused[#loc36, #loc34])
#loc236 = loc(fused[#loc37, #loc38])
#loc237 = loc(fused[#loc39, #loc40])
#loc238 = loc(fused[#loc41, #loc38])
#loc239 = loc(fused[#loc42, #loc43])
#loc240 = loc(fused[#loc44, #loc45])
#loc241 = loc(fused[#loc51, #loc52])
#loc242 = loc(fused[#loc53, #loc54])
#loc243 = loc(fused[#loc55, #loc56])
#loc244 = loc(fused[#loc57, #loc54])
#loc245 = loc(fused[#loc59, #loc60])
#loc246 = loc(fused[#loc62, #loc63])
#loc247 = loc(fused[#loc64, #loc65])
#loc248 = loc(fused[#loc68, #loc66])
#loc249 = loc(fused[#loc72, #loc69])
#loc250 = loc(fused[#loc76, #loc77])
#loc251 = loc(fused[#loc78, #loc79])
#loc252 = loc(fused[#loc81, #loc82])
#loc253 = loc(fused[#loc83, #loc84])
#loc254 = loc(fused[#loc85, #loc86])
#loc255 = loc(fused[#loc87, #loc79])
#loc256 = loc(fused[#loc89, #loc90])
#loc257 = loc(fused[#loc93, #loc94])
#loc258 = loc(fused[#loc95, #loc90])
#loc259 = loc(fused[#loc101, #loc102])
#loc260 = loc(fused[#loc103, #loc104])
#loc261 = loc(fused[#loc105, #loc106])
#loc262 = loc(fused[#loc107, #loc104])
#loc263 = loc(fused[#loc111, #loc112])
#loc264 = loc(fused[#loc115, #loc116])
#loc265 = loc(fused[#loc117, #loc118])
#loc266 = loc(fused[#loc119, #loc120])
#loc267 = loc(fused[#loc122, #loc123])
#loc268 = loc(fused[#loc124, #loc118])
#loc269 = loc(fused[#loc128, #loc126])
#loc270 = loc(fused[#loc131, #loc132])
#loc271 = loc(fused[#loc133, #loc134])
#loc272 = loc(fused[#loc135, #loc136])
#loc273 = loc(fused[#loc137, #loc134])
#loc274 = loc(fused[#loc140, #loc141])
#loc275 = loc(fused[#loc142, #loc143])
#loc276 = loc(fused[#loc144, #loc141])
#loc277 = loc(fused[#loc147, #loc148])
#loc278 = loc(fused[#loc149, #loc150])
#loc279 = loc(fused[#loc151, #loc152])
#loc280 = loc(fused[#loc153, #loc154])
#loc281 = loc(fused[#loc155, #loc156])
#loc282 = loc(fused[#loc157, #loc158])
#loc283 = loc(fused[#loc163, #loc164])
#loc286 = loc(fused[#loc174, #loc175])
#loc287 = loc(fused[#loc178, #loc179])
#loc288 = loc(fused[#loc182, #loc181])
#loc289 = loc(fused[#loc185, #loc186])
#loc290 = loc(fused[#loc187, #loc188])
#loc291 = loc(fused[#loc191, #loc189])
#loc292 = loc(fused[#loc192, #loc193])
#loc293 = loc(fused[#loc194, #loc195])
#loc294 = loc(fused[#loc196, #loc197, #loc198, #loc193])
#loc295 = loc(fused[#loc202, #loc201])
#loc296 = loc(fused[#loc204, #loc205])
#loc297 = loc(fused[#loc206, #loc207])
#loc298 = loc(fused[#loc210, #loc208])
#loc299 = loc(fused[#loc211, #loc212])
#loc300 = loc(fused[#loc213, #loc214])
#loc301 = loc(fused[#loc215, #loc212])
#loc302 = loc(fused[#loc218, #loc217])
