!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fgets_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc62)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Please enter a string: \00" : !cir.array<!s8i x 24>> : !cir.array<!s8i x 24> {alignment = 1 : i64} loc(#loc3)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc63)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc64)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_fgets_16_bad() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc12)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc12)
        cir.condition(%1) loc(#loc12)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc68)
          %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc69)
          %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc68)
          cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc68)
          %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
          cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc69)
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 24>> loc(#loc3)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 24>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc19)
          %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc21)
          %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc64)
          %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc22)
          %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc23)
          %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc25)
        } loc(#loc67)
        cir.break loc(#loc26)
      } loc(#loc66)
    } loc(#loc66)
    cir.return loc(#loc9)
  } loc(#loc65)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_fgets_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc71)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    cir.return loc(#loc28)
  } loc(#loc70)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"fgets failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc31)
  cir.func private  @exit(!s32i) extra(#fn_attr1) loc(#loc72)
  cir.func no_proto internal private  @good1() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc38)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc38)
        cir.condition(%1) loc(#loc38)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc76)
          %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc77)
          %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc76)
          cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc76)
          %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
          cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc77)
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 24>> loc(#loc45)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 24>>), !cir.ptr<!s8i> loc(#loc45)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc46)
          cir.scope {
            %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
            %8 = cir.const #cir.int<100> : !s32i loc(#loc50)
            %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc64)
            %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc51)
            %11 = cir.call @fgets(%7, %8, %10) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc52)
            %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc53)
            %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc53)
            %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !s32i loc(#loc79)
            %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc54)
            cir.if %15 {
              %16 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc31)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc31)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc56)
              %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc57)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc58)
              cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr1) loc(#loc57)
            } loc(#loc80)
          } loc(#loc78)
          %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc60)
        } loc(#loc75)
        cir.break loc(#loc61)
      } loc(#loc74)
    } loc(#loc74)
    cir.return loc(#loc35)
  } loc(#loc73)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fgets_16.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":33:23)
#loc4 = loc("/usr/include/stdio.h":654:1)
#loc5 = loc("/usr/include/stdio.h":655:59)
#loc6 = loc("/usr/include/stdio.h":149:1)
#loc7 = loc("/usr/include/stdio.h":149:14)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":24:1)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":40:1)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":26:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":39:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":26:11)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":28:9)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":37:9)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":31:13)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":31:36)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":32:13)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":32:27)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":33:13)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":35:19)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":35:25)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":35:30)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":35:13)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":36:23)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":36:13)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":38:9)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":69:1)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":72:1)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":71:5)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":71:11)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":60:27)
#loc32 = loc("/usr/include/stdlib.h":756:1)
#loc33 = loc("/usr/include/stdlib.h":756:70)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":47:1)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":67:1)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":49:5)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":66:5)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":49:11)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":51:9)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":64:9)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":54:13)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":54:36)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":55:13)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":55:27)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":56:23)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":56:13)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":58:13)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":62:13)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":58:23)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":58:29)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":58:34)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":58:17)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":58:44)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":58:41)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":59:13)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":60:17)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":61:17)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":61:22)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":63:23)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":63:13)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fgets_16.c":65:9)
#loc62 = loc(fused[#loc1, #loc2])
#loc63 = loc(fused[#loc4, #loc5])
#loc64 = loc(fused[#loc6, #loc7])
#loc65 = loc(fused[#loc8, #loc9])
#loc66 = loc(fused[#loc10, #loc11])
#loc67 = loc(fused[#loc13, #loc14])
#loc68 = loc(fused[#loc15, #loc16])
#loc69 = loc(fused[#loc17, #loc18])
#loc70 = loc(fused[#loc27, #loc28])
#loc71 = loc(fused[#loc29, #loc30])
#loc72 = loc(fused[#loc32, #loc33])
#loc73 = loc(fused[#loc34, #loc35])
#loc74 = loc(fused[#loc36, #loc37])
#loc75 = loc(fused[#loc39, #loc40])
#loc76 = loc(fused[#loc41, #loc42])
#loc77 = loc(fused[#loc43, #loc44])
#loc78 = loc(fused[#loc47, #loc48])
#loc79 = loc(fused[#loc52, #loc53])
#loc80 = loc(fused[#loc55, #loc48])
