!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE570_Expression_Always_False/CWE570_Expression_Always_False__global_five_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @globalFive : !s32i {alignment = 4 : i64} loc(#loc32)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Never prints\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE570_Expression_Always_False__global_five_01_bad() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc35)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc32)
    %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc10)
    %2 = cir.const #cir.int<5> : !s32i loc(#loc11)
    %3 = cir.cmp(ne, %1, %2) : !s32i, !cir.bool loc(#loc36)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc37)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc5)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc13)
    cir.br ^bb3 loc(#loc9)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc9)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc7)
  } loc(#loc34)
  cir.func no_proto @CWE570_Expression_Always_False__global_five_01_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc39)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc16)
    cir.return loc(#loc15)
  } loc(#loc38)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sometimes prints\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc42)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc43)
    %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc43)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc25)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc27)
    %4 = cir.binop(add, %2, %3) nsw : !s32i loc(#loc25)
    %5 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc32)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    %7 = cir.cmp(eq, %4, %6) : !s32i, !cir.bool loc(#loc44)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc45)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc20)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc20)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    cir.br ^bb3 loc(#loc24)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc24)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc22)
  } loc(#loc41)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE570_Expression_Always_False/CWE570_Expression_Always_False__global_five_01.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":118:12)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE570_Expression_Always_False__global_five_01.c":15:19)
#loc6 = loc("CWE570_Expression_Always_False__global_five_01.c":10:1)
#loc7 = loc("CWE570_Expression_Always_False__global_five_01.c":17:1)
#loc8 = loc("CWE570_Expression_Always_False__global_five_01.c":13:5)
#loc9 = loc("CWE570_Expression_Always_False__global_five_01.c":16:5)
#loc10 = loc("CWE570_Expression_Always_False__global_five_01.c":13:9)
#loc11 = loc("CWE570_Expression_Always_False__global_five_01.c":13:23)
#loc12 = loc("CWE570_Expression_Always_False__global_five_01.c":14:5)
#loc13 = loc("CWE570_Expression_Always_False__global_five_01.c":15:9)
#loc14 = loc("CWE570_Expression_Always_False__global_five_01.c":33:1)
#loc15 = loc("CWE570_Expression_Always_False__global_five_01.c":36:1)
#loc16 = loc("CWE570_Expression_Always_False__global_five_01.c":35:5)
#loc17 = loc("CWE570_Expression_Always_False__global_five_01.c":35:11)
#loc18 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc20 = loc("CWE570_Expression_Always_False__global_five_01.c":29:19)
#loc21 = loc("CWE570_Expression_Always_False__global_five_01.c":24:1)
#loc22 = loc("CWE570_Expression_Always_False__global_five_01.c":31:1)
#loc23 = loc("CWE570_Expression_Always_False__global_five_01.c":27:5)
#loc24 = loc("CWE570_Expression_Always_False__global_five_01.c":30:5)
#loc25 = loc("CWE570_Expression_Always_False__global_five_01.c":27:10)
#loc26 = loc("CWE570_Expression_Always_False__global_five_01.c":27:35)
#loc27 = loc("CWE570_Expression_Always_False__global_five_01.c":27:39)
#loc28 = loc("CWE570_Expression_Always_False__global_five_01.c":27:45)
#loc29 = loc("CWE570_Expression_Always_False__global_five_01.c":27:9)
#loc30 = loc("CWE570_Expression_Always_False__global_five_01.c":28:5)
#loc31 = loc("CWE570_Expression_Always_False__global_five_01.c":29:9)
#loc32 = loc(fused[#loc1, #loc2])
#loc33 = loc(fused[#loc3, #loc4])
#loc34 = loc(fused[#loc6, #loc7])
#loc35 = loc(fused[#loc8, #loc9])
#loc36 = loc(fused[#loc10, #loc11])
#loc37 = loc(fused[#loc12, #loc9])
#loc38 = loc(fused[#loc14, #loc15])
#loc39 = loc(fused[#loc16, #loc17])
#loc40 = loc(fused[#loc18, #loc19])
#loc41 = loc(fused[#loc21, #loc22])
#loc42 = loc(fused[#loc23, #loc24])
#loc43 = loc(fused[#loc25, #loc26])
#loc44 = loc(fused[#loc29, #loc28])
#loc45 = loc(fused[#loc30, #loc24])
