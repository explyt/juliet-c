!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc53 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":138:10)
#loc54 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":138:14)
#loc55 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":138:20)
#loc56 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":138:32)
#loc149 = loc(fused[#loc53, #loc54])
#loc150 = loc(fused[#loc55, #loc56])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE484_Omitted_Break_Statement_in_Switch/CWE484_Omitted_Break_Statement_in_Switch__basic_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc135)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"0\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"1\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc6)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"2\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc7)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Invalid Number\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc8)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE484_Omitted_Break_Statement_in_Switch__basic_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["x", init] {alignment = 4 : i64} loc(#loc138)
    cir.br ^bb1 loc(#loc139)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<6> : !s32i loc(#loc16)
    cir.br ^bb2 loc(#loc14)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb17 [
      6: ^bb4
    ] loc(#loc14)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc140)
  ^bb5:  // pred: ^bb4
    %2 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc20)
    %3 = cir.const #cir.int<3> : !s32i loc(#loc21)
    %4 = cir.binop(rem, %2, %3) : !s32i loc(#loc141)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    cir.br ^bb6 loc(#loc142)
  ^bb6:  // pred: ^bb5
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    cir.br ^bb7 loc(#loc22)
  ^bb7:  // pred: ^bb6
    cir.switch.flat %5 : !s32i, ^bb13 [
      0: ^bb9,
      1: ^bb11,
      2: ^bb12
    ] loc(#loc22)
  ^bb8:  // no predecessors
    cir.br ^bb9 loc(#loc25)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc26)
    cir.br ^bb10 loc(#loc25)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc27)
  ^bb11:  // 2 preds: ^bb7, ^bb10
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc6)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc6)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc28)
    cir.br ^bb14 loc(#loc29)
  ^bb12:  // pred: ^bb7
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc7)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc30)
    cir.br ^bb14 loc(#loc31)
  ^bb13:  // pred: ^bb7
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc8)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc32)
    cir.br ^bb14 loc(#loc33)
  ^bb14:  // 3 preds: ^bb11, ^bb12, ^bb13
    cir.br ^bb15 loc(#loc23)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc19)
  ^bb16:  // pred: ^bb15
    cir.br ^bb18 loc(#loc34)
  ^bb17:  // pred: ^bb2
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc9)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    cir.br ^bb18 loc(#loc36)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc15)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc11)
  } loc(#loc137)
  cir.func no_proto @CWE484_Omitted_Break_Statement_in_Switch__basic_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc38)
  } loc(#loc143)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc146)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc50)
  cir.func @main(%arg0: !s32i loc(fused[#loc53, #loc54]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc55, #loc56])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc52)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc57)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc57)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc58)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc59)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc59)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc60)
    %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc47)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %8 = cir.get_global @CWE484_Omitted_Break_Statement_in_Switch__basic_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call @CWE484_Omitted_Break_Statement_in_Switch__basic_15_good() : () -> () loc(#loc62)
    %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc48)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %11 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc49)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %13 = cir.get_global @CWE484_Omitted_Break_Statement_in_Switch__basic_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc152)
    cir.call @CWE484_Omitted_Break_Statement_in_Switch__basic_15_bad() : () -> () loc(#loc66)
    %14 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc50)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc69)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    cir.return %17 : !s32i loc(#loc153)
  } loc(#loc148)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["x", init] {alignment = 4 : i64} loc(#loc155)
    cir.br ^bb1 loc(#loc156)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<5> : !s32i loc(#loc77)
    cir.br ^bb2 loc(#loc75)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc75)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc78)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %2 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc79)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    cir.br ^bb17 loc(#loc81)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc157)
  ^bb6:  // pred: ^bb5
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc84)
    %5 = cir.const #cir.int<3> : !s32i loc(#loc85)
    %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc158)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    cir.br ^bb7 loc(#loc159)
  ^bb7:  // pred: ^bb6
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    cir.br ^bb8 loc(#loc86)
  ^bb8:  // pred: ^bb7
    cir.switch.flat %7 : !s32i, ^bb13 [
      0: ^bb10,
      1: ^bb11,
      2: ^bb12
    ] loc(#loc86)
  ^bb9:  // no predecessors
    cir.br ^bb10 loc(#loc89)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc90)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    cir.br ^bb14 loc(#loc92)
  ^bb11:  // pred: ^bb8
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc93)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    cir.br ^bb14 loc(#loc95)
  ^bb12:  // pred: ^bb8
    %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc96)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    cir.br ^bb14 loc(#loc98)
  ^bb13:  // pred: ^bb8
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc99)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    cir.br ^bb14 loc(#loc101)
  ^bb14:  // 4 preds: ^bb10, ^bb11, ^bb12, ^bb13
    cir.br ^bb15 loc(#loc87)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc83)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc102)
  ^bb17:  // 2 preds: ^bb4, ^bb16
    cir.br ^bb18 loc(#loc76)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc72)
  } loc(#loc154)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["x", init] {alignment = 4 : i64} loc(#loc161)
    cir.br ^bb1 loc(#loc162)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<6> : !s32i loc(#loc109)
    cir.br ^bb2 loc(#loc107)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb16 [
      6: ^bb4
    ] loc(#loc107)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc110)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc163)
  ^bb5:  // pred: ^bb4
    %2 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc113)
    %3 = cir.const #cir.int<3> : !s32i loc(#loc114)
    %4 = cir.binop(rem, %2, %3) : !s32i loc(#loc164)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb6 loc(#loc165)
  ^bb6:  // pred: ^bb5
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    cir.br ^bb7 loc(#loc115)
  ^bb7:  // pred: ^bb6
    cir.switch.flat %5 : !s32i, ^bb12 [
      0: ^bb9,
      1: ^bb10,
      2: ^bb11
    ] loc(#loc115)
  ^bb8:  // no predecessors
    cir.br ^bb9 loc(#loc118)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc119)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.br ^bb13 loc(#loc121)
  ^bb10:  // pred: ^bb7
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc122)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    cir.br ^bb13 loc(#loc124)
  ^bb11:  // pred: ^bb7
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc125)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc125)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    cir.br ^bb13 loc(#loc127)
  ^bb12:  // pred: ^bb7
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc128)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc128)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    cir.br ^bb13 loc(#loc130)
  ^bb13:  // 4 preds: ^bb9, ^bb10, ^bb11, ^bb12
    cir.br ^bb14 loc(#loc116)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc112)
  ^bb15:  // pred: ^bb14
    cir.br ^bb17 loc(#loc131)
  ^bb16:  // pred: ^bb2
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc132)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc132)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc133)
    cir.br ^bb17 loc(#loc134)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc108)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc104)
  } loc(#loc160)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE484_Omitted_Break_Statement_in_Switch/CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":31:23)
#loc6 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":33:23)
#loc7 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":36:23)
#loc8 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":39:23)
#loc9 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":46:19)
#loc10 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":20:1)
#loc11 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":49:1)
#loc12 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":26:9)
#loc13 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":26:28)
#loc14 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":22:5)
#loc15 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":48:5)
#loc16 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":22:12)
#loc17 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":24:5)
#loc18 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":25:5)
#loc19 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":42:5)
#loc20 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":26:18)
#loc21 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":26:27)
#loc22 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":28:9)
#loc23 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":41:9)
#loc24 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":28:17)
#loc25 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":30:9)
#loc26 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":31:13)
#loc27 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":32:9)
#loc28 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":33:13)
#loc29 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":34:13)
#loc30 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":36:13)
#loc31 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":37:13)
#loc32 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":39:13)
#loc33 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":40:13)
#loc34 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":43:5)
#loc35 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":46:9)
#loc36 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":47:9)
#loc37 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":123:1)
#loc38 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":127:1)
#loc39 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":125:5)
#loc40 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":125:11)
#loc41 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":126:5)
#loc42 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":126:11)
#loc43 = loc("/usr/include/stdlib.h":575:1)
#loc44 = loc("/usr/include/stdlib.h":575:41)
#loc45 = loc("/usr/include/time.h":76:1)
#loc46 = loc("/usr/include/time.h":76:38)
#loc47 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":143:15)
#loc48 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":145:15)
#loc49 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":148:15)
#loc50 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":150:15)
#loc51 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":138:1)
#loc52 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":153:1)
#loc57 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":139:1)
#loc58 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":141:27)
#loc59 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":141:22)
#loc60 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":141:5)
#loc61 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":143:5)
#loc62 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":144:5)
#loc63 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":144:61)
#loc64 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":145:5)
#loc65 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":148:5)
#loc66 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":149:5)
#loc67 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":149:60)
#loc68 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":150:5)
#loc69 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":152:12)
#loc70 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":152:5)
#loc71 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":56:1)
#loc72 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":87:1)
#loc73 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":66:9)
#loc74 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":66:28)
#loc75 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":58:5)
#loc76 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":86:5)
#loc77 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":58:12)
#loc78 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":60:5)
#loc79 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":62:19)
#loc80 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":62:9)
#loc81 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":63:9)
#loc82 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":65:5)
#loc83 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":84:5)
#loc84 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":66:18)
#loc85 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":66:27)
#loc86 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":69:9)
#loc87 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":83:9)
#loc88 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":69:17)
#loc89 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":71:9)
#loc90 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":72:23)
#loc91 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":72:13)
#loc92 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":73:13)
#loc93 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":75:23)
#loc94 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":75:13)
#loc95 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":76:13)
#loc96 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":78:23)
#loc97 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":78:13)
#loc98 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":79:13)
#loc99 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":81:23)
#loc100 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":81:13)
#loc101 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":82:13)
#loc102 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":85:5)
#loc103 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":90:1)
#loc104 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":121:1)
#loc105 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":96:9)
#loc106 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":96:28)
#loc107 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":92:5)
#loc108 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":120:5)
#loc109 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":92:12)
#loc110 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":94:5)
#loc111 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":95:5)
#loc112 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":114:5)
#loc113 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":96:18)
#loc114 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":96:27)
#loc115 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":99:9)
#loc116 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":113:9)
#loc117 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":99:17)
#loc118 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":101:9)
#loc119 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":102:23)
#loc120 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":102:13)
#loc121 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":103:13)
#loc122 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":105:23)
#loc123 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":105:13)
#loc124 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":106:13)
#loc125 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":108:23)
#loc126 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":108:13)
#loc127 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":109:13)
#loc128 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":111:23)
#loc129 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":111:13)
#loc130 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":112:13)
#loc131 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":115:5)
#loc132 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":118:19)
#loc133 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":118:9)
#loc134 = loc("CWE484_Omitted_Break_Statement_in_Switch__basic_15.c":119:9)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc10, #loc11])
#loc138 = loc(fused[#loc12, #loc13])
#loc139 = loc(fused[#loc14, #loc15])
#loc140 = loc(fused[#loc18, #loc19])
#loc141 = loc(fused[#loc20, #loc21])
#loc142 = loc(fused[#loc22, #loc23])
#loc143 = loc(fused[#loc37, #loc38])
#loc144 = loc(fused[#loc39, #loc40])
#loc145 = loc(fused[#loc41, #loc42])
#loc146 = loc(fused[#loc43, #loc44])
#loc147 = loc(fused[#loc45, #loc46])
#loc148 = loc(fused[#loc51, #loc52])
#loc151 = loc(fused[#loc62, #loc63])
#loc152 = loc(fused[#loc66, #loc67])
#loc153 = loc(fused[#loc70, #loc69])
#loc154 = loc(fused[#loc71, #loc72])
#loc155 = loc(fused[#loc73, #loc74])
#loc156 = loc(fused[#loc75, #loc76])
#loc157 = loc(fused[#loc82, #loc83])
#loc158 = loc(fused[#loc84, #loc85])
#loc159 = loc(fused[#loc86, #loc87])
#loc160 = loc(fused[#loc103, #loc104])
#loc161 = loc(fused[#loc105, #loc106])
#loc162 = loc(fused[#loc107, #loc108])
#loc163 = loc(fused[#loc111, #loc112])
#loc164 = loc(fused[#loc113, #loc114])
#loc165 = loc(fused[#loc115, #loc116])
