!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc315)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc316)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc317)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc318)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc319)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc11)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc320)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc321)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc16)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc17)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc323)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc22)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc324)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc326)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc326)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc26)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc26)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc31)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc328)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc34)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc34)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc329)
      } loc(#loc327)
    } loc(#loc325)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc331)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc331)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc38)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc38)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc334)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc49)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc336)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc337)
            cir.if %10 {
              %11 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc55)
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc56)
              %13 = cir.const #cir.int<1> : !u64i loc(#loc339)
              %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc340)
              %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc55)
              %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc341)
              cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc342)
              cir.scope {
                %26 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
                %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc64)
                %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc64)
                %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc344)
                cir.if %29 {
                  %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc66)
                  %31 = cir.const #cir.int<1> : !s32i loc(#loc67)
                  %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc68)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc66)
                } loc(#loc345)
              } loc(#loc343)
              %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc69)
              %18 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc11)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc11)
              %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc69)
              %22 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc72)
              %23 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc73)
              %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
              %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc74)
              cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc73)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc16)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc16)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc75)
            } loc(#loc338)
          } loc(#loc335)
        } loc(#loc333)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc347)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc82)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc349)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc350)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc86)
              %13 = cir.const #cir.int<100> : !s32i loc(#loc87)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc87)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc351)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc85)
                cir.yield %17 : !cir.bool loc(#loc85)
              }, false {
                %17 = cir.const #false loc(#loc85)
                cir.yield %17 : !cir.bool loc(#loc85)
              }) : (!cir.bool) -> !cir.bool loc(#loc85)
              cir.yield %16 : !cir.bool loc(#loc85)
            }, false {
              %12 = cir.const #false loc(#loc85)
              cir.yield %12 : !cir.bool loc(#loc85)
            }) : (!cir.bool) -> !cir.bool loc(#loc85)
            cir.if %11 {
              %12 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc91)
              %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc92)
              %14 = cir.const #cir.int<1> : !u64i loc(#loc353)
              %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc354)
              %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc91)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc355)
              cir.store %17, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc356)
              cir.scope {
                %27 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc100)
                %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc100)
                %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc358)
                cir.if %30 {
                  %31 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc102)
                  %32 = cir.const #cir.int<1> : !s32i loc(#loc103)
                  %33 = cir.unary(minus, %32) nsw : !s32i, !s32i loc(#loc104)
                  cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc102)
                } loc(#loc359)
              } loc(#loc357)
              %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc105)
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc107)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc107)
              %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc105)
              %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc109)
              %24 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc110)
              %25 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
              %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
              cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc110)
            } else {
              %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc17)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc17)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc112)
            } loc(#loc352)
          } loc(#loc348)
        } loc(#loc346)
      } loc(#loc332)
    } loc(#loc330)
    cir.return loc(#loc19)
  } loc(#loc322)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc361)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc115)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc362)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc117)
    cir.return loc(#loc114)
  } loc(#loc360)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc364)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc123)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc365)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc367)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc367)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc127)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc127)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc132)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc132)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc369)
      } else {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc135)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc135)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc370)
      } loc(#loc368)
    } loc(#loc366)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc372)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc372)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc140)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc140)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc375)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc151)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc377)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc378)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc155)
              %13 = cir.const #cir.int<100> : !s32i loc(#loc156)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc156)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc379)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc154)
                cir.yield %17 : !cir.bool loc(#loc154)
              }, false {
                %17 = cir.const #false loc(#loc154)
                cir.yield %17 : !cir.bool loc(#loc154)
              }) : (!cir.bool) -> !cir.bool loc(#loc154)
              cir.yield %16 : !cir.bool loc(#loc154)
            }, false {
              %12 = cir.const #false loc(#loc154)
              cir.yield %12 : !cir.bool loc(#loc154)
            }) : (!cir.bool) -> !cir.bool loc(#loc154)
            cir.if %11 {
              %12 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc160)
              %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc161)
              %14 = cir.const #cir.int<1> : !u64i loc(#loc381)
              %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc382)
              %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc160)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc383)
              cir.store %17, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc384)
              cir.scope {
                %27 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc169)
                %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc169)
                %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc386)
                cir.if %30 {
                  %31 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc171)
                  %32 = cir.const #cir.int<1> : !s32i loc(#loc172)
                  %33 = cir.unary(minus, %32) nsw : !s32i, !s32i loc(#loc173)
                  cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc171)
                } loc(#loc387)
              } loc(#loc385)
              %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc174)
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc176)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc176)
              %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc174)
              %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc178)
              %24 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc179)
              %25 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
              %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc180)
              cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc179)
            } else {
              %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc181)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc181)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc182)
            } loc(#loc380)
          } loc(#loc376)
        } loc(#loc374)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc389)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc189)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc391)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc392)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc193)
              %13 = cir.const #cir.int<100> : !s32i loc(#loc194)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc194)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc393)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc192)
                cir.yield %17 : !cir.bool loc(#loc192)
              }, false {
                %17 = cir.const #false loc(#loc192)
                cir.yield %17 : !cir.bool loc(#loc192)
              }) : (!cir.bool) -> !cir.bool loc(#loc192)
              cir.yield %16 : !cir.bool loc(#loc192)
            }, false {
              %12 = cir.const #false loc(#loc192)
              cir.yield %12 : !cir.bool loc(#loc192)
            }) : (!cir.bool) -> !cir.bool loc(#loc192)
            cir.if %11 {
              %12 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc198)
              %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc199)
              %14 = cir.const #cir.int<1> : !u64i loc(#loc395)
              %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc396)
              %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc198)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc397)
              cir.store %17, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc398)
              cir.scope {
                %27 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc206)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc207)
                %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc207)
                %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc400)
                cir.if %30 {
                  %31 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc209)
                  %32 = cir.const #cir.int<1> : !s32i loc(#loc210)
                  %33 = cir.unary(minus, %32) nsw : !s32i, !s32i loc(#loc211)
                  cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc209)
                } loc(#loc401)
              } loc(#loc399)
              %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc212)
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc213)
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc214)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc214)
              %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc212)
              %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc215)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc216)
              %24 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc217)
              %25 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc218)
              %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc218)
              cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc217)
            } else {
              %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc219)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc219)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc220)
            } loc(#loc394)
          } loc(#loc390)
        } loc(#loc388)
      } loc(#loc373)
    } loc(#loc371)
    cir.return loc(#loc120)
  } loc(#loc363)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc403)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc225)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc225)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc404)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc406)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc406)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc229)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc229)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc234)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc234)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc408)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc236)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc236)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc409)
      } loc(#loc407)
    } loc(#loc405)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc411)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc411)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc240)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc240)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc414)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc251)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc416)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc417)
            cir.if %10 {
              %11 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc257)
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc258)
              %13 = cir.const #cir.int<1> : !u64i loc(#loc419)
              %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc420)
              %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc257)
              %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc421)
              cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc422)
              cir.scope {
                %26 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc265)
                %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc266)
                %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc266)
                %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc424)
                cir.if %29 {
                  %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc268)
                  %31 = cir.const #cir.int<1> : !s32i loc(#loc269)
                  %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc270)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc268)
                } loc(#loc425)
              } loc(#loc423)
              %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc271)
              %18 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc272)
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc273)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc273)
              %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc271)
              %22 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc274)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc275)
              %23 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc276)
              %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc277)
              %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc277)
              cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc276)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc278)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc278)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc279)
            } loc(#loc418)
          } loc(#loc415)
        } loc(#loc413)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc427)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc286)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc429)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc430)
            cir.if %10 {
              %11 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc292)
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc293)
              %13 = cir.const #cir.int<1> : !u64i loc(#loc432)
              %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc433)
              %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc292)
              %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc434)
              cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc435)
              cir.scope {
                %26 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc300)
                %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc301)
                %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc301)
                %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc437)
                cir.if %29 {
                  %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc303)
                  %31 = cir.const #cir.int<1> : !s32i loc(#loc304)
                  %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc305)
                  cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc303)
                } loc(#loc438)
              } loc(#loc436)
              %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc306)
              %18 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc307)
              %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc308)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc308)
              %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc306)
              %22 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc309)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc310)
              %23 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc311)
              %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc312)
              %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc312)
              cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc311)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc313)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc313)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc314)
            } loc(#loc431)
          } loc(#loc428)
        } loc(#loc426)
      } loc(#loc412)
    } loc(#loc410)
    cir.return loc(#loc222)
  } loc(#loc402)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/string.h":141:1)
#loc10 = loc("/usr/include/string.h":142:14)
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":55:34)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc14 = loc("/usr/include/stdlib.h":687:1)
#loc15 = loc("/usr/include/stdlib.h":687:32)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":61:27)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":83:27)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":28:1)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":87:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":30:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":30:12)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":32:12)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":32:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":33:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":42:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":33:8)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":33:33)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":34:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":37:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":39:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":36:16)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":36:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":36:21)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":41:16)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":41:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":43:5)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":86:5)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":43:8)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":43:33)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":44:5)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":64:5)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":66:5)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":45:9)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":63:9)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":46:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":46:20)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":50:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":62:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":50:17)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":50:24)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":50:43)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":51:13)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":58:13)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":60:13)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":52:36)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":52:43)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":52:48)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":52:59)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":52:60)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":52:17)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":53:17)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":53:49)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":53:21)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":53:33)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":53:39)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":53:40)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":53:46)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":53:45)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":55:17)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":55:24)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":56:27)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":56:17)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":57:17)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":57:22)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":61:17)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":67:9)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":85:9)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":68:13)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":68:20)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":72:13)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":84:13)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":72:17)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":72:24)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":72:43)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":72:45)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":72:48)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":72:55)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":73:13)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":80:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":82:13)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":74:36)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":74:43)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":74:48)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":74:59)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":74:60)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":74:17)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":75:17)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":75:49)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":75:21)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":75:33)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":75:39)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":75:40)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":75:46)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":75:45)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":77:17)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":77:24)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":77:34)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":78:27)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":78:17)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":79:17)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":79:22)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":83:17)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":221:1)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":225:1)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":223:5)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":223:13)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":224:5)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":224:13)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":96:1)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":155:1)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":98:5)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":98:12)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":100:12)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":100:5)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":101:5)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":110:5)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":101:8)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":101:33)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":102:5)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":105:5)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":107:5)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":104:16)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":104:9)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":104:21)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":109:16)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":109:9)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":109:21)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":111:5)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":154:5)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":111:8)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":111:33)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":112:5)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":132:5)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":134:5)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":113:9)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":131:9)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":114:13)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":114:20)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":118:13)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":130:13)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":118:17)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":118:24)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":118:43)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":118:45)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":118:48)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":118:55)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":119:13)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":126:13)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":128:13)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":120:36)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":120:43)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":120:48)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":120:59)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":120:60)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":120:17)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":121:17)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":121:49)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":121:21)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":121:33)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":121:39)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":121:40)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":121:46)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":121:45)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":123:17)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":123:24)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":123:34)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":124:27)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":124:17)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":125:17)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":125:22)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":129:27)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":129:17)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":135:9)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":153:9)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":136:13)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":136:20)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":140:13)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":152:13)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":140:17)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":140:24)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":140:43)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":140:45)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":140:48)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":140:55)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":141:13)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":148:13)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":150:13)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":142:36)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":142:43)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":142:48)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":142:59)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":142:60)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":142:17)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":143:17)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":143:49)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":143:21)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":143:33)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":143:39)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":143:40)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":143:46)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":143:45)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":145:17)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":145:24)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":145:34)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":146:27)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":146:17)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":147:17)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":147:22)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":151:27)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":151:17)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":160:1)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":219:1)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":162:5)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":162:12)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":164:12)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":164:5)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":165:5)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":174:5)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":165:8)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":165:33)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":166:5)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":169:5)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":171:5)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":168:16)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":168:9)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":173:16)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":173:9)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":175:5)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":218:5)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":175:8)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":175:33)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":176:5)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":196:5)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":198:5)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":177:9)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":195:9)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":178:13)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":178:20)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":182:13)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":194:13)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":182:17)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":182:24)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":182:43)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":183:13)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":190:13)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":192:13)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":184:36)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":184:43)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":184:48)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":184:59)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":184:60)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":184:17)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":185:17)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":185:49)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":185:21)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":185:33)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":185:39)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":185:40)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":185:46)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":185:45)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":187:17)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":187:24)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":187:34)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":188:27)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":188:17)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":189:17)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":189:22)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":193:27)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":193:17)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":199:9)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":217:9)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":200:13)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":200:20)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":204:13)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":216:13)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":204:17)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":204:24)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":204:43)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":205:13)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":212:13)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":214:13)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":206:36)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":206:43)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":206:48)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":206:59)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":206:60)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":206:17)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":207:17)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":207:49)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":207:21)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":207:33)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":207:39)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":207:40)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":207:46)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":207:45)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":209:17)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":209:24)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":209:34)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":210:27)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":210:17)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":211:17)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":211:22)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":215:27)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_12.c":215:17)
#loc315 = loc(fused[#loc1, #loc2])
#loc316 = loc(fused[#loc3, #loc4])
#loc317 = loc(fused[#loc5, #loc6])
#loc318 = loc(fused[#loc7, #loc8])
#loc319 = loc(fused[#loc9, #loc10])
#loc320 = loc(fused[#loc12, #loc13])
#loc321 = loc(fused[#loc14, #loc15])
#loc322 = loc(fused[#loc18, #loc19])
#loc323 = loc(fused[#loc20, #loc21])
#loc324 = loc(fused[#loc23, #loc22])
#loc325 = loc(fused[#loc24, #loc25])
#loc326 = loc(fused[#loc26, #loc27])
#loc327 = loc(fused[#loc28, #loc29, #loc30, #loc25])
#loc328 = loc(fused[#loc32, #loc33])
#loc329 = loc(fused[#loc35, #loc34])
#loc330 = loc(fused[#loc36, #loc37])
#loc331 = loc(fused[#loc38, #loc39])
#loc332 = loc(fused[#loc40, #loc41, #loc42, #loc37])
#loc333 = loc(fused[#loc43, #loc44])
#loc334 = loc(fused[#loc45, #loc46])
#loc335 = loc(fused[#loc47, #loc48])
#loc336 = loc(fused[#loc50, #loc51])
#loc337 = loc(fused[#loc49, #loc51])
#loc338 = loc(fused[#loc52, #loc53, #loc54, #loc48])
#loc339 = loc(fused[#loc57, #loc58])
#loc340 = loc(fused[#loc56, #loc58])
#loc341 = loc(fused[#loc55, #loc59])
#loc342 = loc(fused[#loc60, #loc59])
#loc343 = loc(fused[#loc61, #loc62])
#loc344 = loc(fused[#loc63, #loc64])
#loc345 = loc(fused[#loc65, #loc62])
#loc346 = loc(fused[#loc76, #loc77])
#loc347 = loc(fused[#loc78, #loc79])
#loc348 = loc(fused[#loc80, #loc81])
#loc349 = loc(fused[#loc83, #loc84])
#loc350 = loc(fused[#loc82, #loc84])
#loc351 = loc(fused[#loc86, #loc87])
#loc352 = loc(fused[#loc88, #loc89, #loc90, #loc81])
#loc353 = loc(fused[#loc93, #loc94])
#loc354 = loc(fused[#loc92, #loc94])
#loc355 = loc(fused[#loc91, #loc95])
#loc356 = loc(fused[#loc96, #loc95])
#loc357 = loc(fused[#loc97, #loc98])
#loc358 = loc(fused[#loc99, #loc100])
#loc359 = loc(fused[#loc101, #loc98])
#loc360 = loc(fused[#loc113, #loc114])
#loc361 = loc(fused[#loc115, #loc116])
#loc362 = loc(fused[#loc117, #loc118])
#loc363 = loc(fused[#loc119, #loc120])
#loc364 = loc(fused[#loc121, #loc122])
#loc365 = loc(fused[#loc124, #loc123])
#loc366 = loc(fused[#loc125, #loc126])
#loc367 = loc(fused[#loc127, #loc128])
#loc368 = loc(fused[#loc129, #loc130, #loc131, #loc126])
#loc369 = loc(fused[#loc133, #loc134])
#loc370 = loc(fused[#loc136, #loc137])
#loc371 = loc(fused[#loc138, #loc139])
#loc372 = loc(fused[#loc140, #loc141])
#loc373 = loc(fused[#loc142, #loc143, #loc144, #loc139])
#loc374 = loc(fused[#loc145, #loc146])
#loc375 = loc(fused[#loc147, #loc148])
#loc376 = loc(fused[#loc149, #loc150])
#loc377 = loc(fused[#loc152, #loc153])
#loc378 = loc(fused[#loc151, #loc153])
#loc379 = loc(fused[#loc155, #loc156])
#loc380 = loc(fused[#loc157, #loc158, #loc159, #loc150])
#loc381 = loc(fused[#loc162, #loc163])
#loc382 = loc(fused[#loc161, #loc163])
#loc383 = loc(fused[#loc160, #loc164])
#loc384 = loc(fused[#loc165, #loc164])
#loc385 = loc(fused[#loc166, #loc167])
#loc386 = loc(fused[#loc168, #loc169])
#loc387 = loc(fused[#loc170, #loc167])
#loc388 = loc(fused[#loc183, #loc184])
#loc389 = loc(fused[#loc185, #loc186])
#loc390 = loc(fused[#loc187, #loc188])
#loc391 = loc(fused[#loc190, #loc191])
#loc392 = loc(fused[#loc189, #loc191])
#loc393 = loc(fused[#loc193, #loc194])
#loc394 = loc(fused[#loc195, #loc196, #loc197, #loc188])
#loc395 = loc(fused[#loc200, #loc201])
#loc396 = loc(fused[#loc199, #loc201])
#loc397 = loc(fused[#loc198, #loc202])
#loc398 = loc(fused[#loc203, #loc202])
#loc399 = loc(fused[#loc204, #loc205])
#loc400 = loc(fused[#loc206, #loc207])
#loc401 = loc(fused[#loc208, #loc205])
#loc402 = loc(fused[#loc221, #loc222])
#loc403 = loc(fused[#loc223, #loc224])
#loc404 = loc(fused[#loc226, #loc225])
#loc405 = loc(fused[#loc227, #loc228])
#loc406 = loc(fused[#loc229, #loc230])
#loc407 = loc(fused[#loc231, #loc232, #loc233, #loc228])
#loc408 = loc(fused[#loc235, #loc234])
#loc409 = loc(fused[#loc237, #loc236])
#loc410 = loc(fused[#loc238, #loc239])
#loc411 = loc(fused[#loc240, #loc241])
#loc412 = loc(fused[#loc242, #loc243, #loc244, #loc239])
#loc413 = loc(fused[#loc245, #loc246])
#loc414 = loc(fused[#loc247, #loc248])
#loc415 = loc(fused[#loc249, #loc250])
#loc416 = loc(fused[#loc252, #loc253])
#loc417 = loc(fused[#loc251, #loc253])
#loc418 = loc(fused[#loc254, #loc255, #loc256, #loc250])
#loc419 = loc(fused[#loc259, #loc260])
#loc420 = loc(fused[#loc258, #loc260])
#loc421 = loc(fused[#loc257, #loc261])
#loc422 = loc(fused[#loc262, #loc261])
#loc423 = loc(fused[#loc263, #loc264])
#loc424 = loc(fused[#loc265, #loc266])
#loc425 = loc(fused[#loc267, #loc264])
#loc426 = loc(fused[#loc280, #loc281])
#loc427 = loc(fused[#loc282, #loc283])
#loc428 = loc(fused[#loc284, #loc285])
#loc429 = loc(fused[#loc287, #loc288])
#loc430 = loc(fused[#loc286, #loc288])
#loc431 = loc(fused[#loc289, #loc290, #loc291, #loc285])
#loc432 = loc(fused[#loc294, #loc295])
#loc433 = loc(fused[#loc293, #loc295])
#loc434 = loc(fused[#loc292, #loc296])
#loc435 = loc(fused[#loc297, #loc296])
#loc436 = loc(fused[#loc298, #loc299])
#loc437 = loc(fused[#loc300, #loc301])
#loc438 = loc(fused[#loc302, #loc299])
