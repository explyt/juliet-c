!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc129 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":196:10)
#loc130 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":196:14)
#loc131 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":196:20)
#loc132 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":196:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc396 = loc(fused[#loc129, #loc130])
#loc397 = loc(fused[#loc131, #loc132])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc343)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc344)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc345)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc346)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc347)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_struct_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc349)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc350)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc352)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc352)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc19)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc19)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc24)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc25)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc25)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc354)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc355)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc356)
        cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc357)
        cir.scope {
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
          %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc359)
          cir.if %19 {
            %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc36)
            %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc37)
            cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
          } loc(#loc360)
        } loc(#loc358)
        cir.scope {
          %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc362)
          cir.scope {
            %17 = cir.const #cir.int<0> : !s32i loc(#loc44)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc44)
            cir.store %18, %16 : !u64i, !cir.ptr<!u64i> loc(#loc364)
            cir.for : cond {
              %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc46)
              %20 = cir.const #cir.int<100> : !s32i loc(#loc47)
              %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc47)
              %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc365)
              cir.condition(%22) loc(#loc48)
            } body {
              cir.scope {
                %19 = cir.const #cir.int<1> : !s32i loc(#loc50)
                %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
                %21 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc52)
                %22 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %21 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
                %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc54)
                cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc367)
                %24 = cir.const #cir.int<2> : !s32i loc(#loc55)
                %25 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
                %26 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc57)
                %27 = cir.ptr_stride(%25 : !cir.ptr<!ty__twoIntsStruct>, %26 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
                %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc59)
                cir.store %24, %28 : !s32i, !cir.ptr<!s32i> loc(#loc368)
              } loc(#loc366)
              cir.yield loc(#loc43)
            } step {
              %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc60)
              %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc61)
              cir.store %20, %16 : !u64i, !cir.ptr<!u64i> loc(#loc369)
              cir.yield loc(#loc363)
            } loc(#loc363)
          } loc(#loc363)
        } loc(#loc361)
        %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc62)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc63)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc63)
        cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc62)
      } else {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc64)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc65)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc65)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc370)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc371)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc64)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc372)
        cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc373)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc73)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc73)
          %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc375)
          cir.if %16 {
            %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc75)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc76)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc77)
            cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc75)
          } loc(#loc376)
        } loc(#loc374)
        cir.scope {
          %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc378)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc84)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc84)
            cir.store %15, %13 : !u64i, !cir.ptr<!u64i> loc(#loc380)
            cir.for : cond {
              %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc86)
              %17 = cir.const #cir.int<100> : !s32i loc(#loc87)
              %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc87)
              %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc381)
              cir.condition(%19) loc(#loc88)
            } body {
              cir.scope {
                %16 = cir.const #cir.int<1> : !s32i loc(#loc90)
                %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
                %18 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc92)
                %19 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %18 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
                %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc54)
                cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc383)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc94)
                %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc95)
                %23 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc96)
                %24 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %23 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc97)
                %25 = cir.get_member %24[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc59)
                cir.store %21, %25 : !s32i, !cir.ptr<!s32i> loc(#loc384)
              } loc(#loc382)
              cir.yield loc(#loc83)
            } step {
              %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc98)
              %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc99)
              cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc385)
              cir.yield loc(#loc379)
            } loc(#loc379)
          } loc(#loc379)
        } loc(#loc377)
      } loc(#loc353)
    } loc(#loc351)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc387)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc387)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc102)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc102)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc108)
        %8 = cir.ptr_stride(%6 : !cir.ptr<!ty__twoIntsStruct>, %7 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
        cir.call @printStructLine(%8) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc110)
      } else {
      } loc(#loc388)
    } loc(#loc386)
    cir.return loc(#loc12)
  } loc(#loc348)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_struct_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc390)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc113)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc391)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc115)
    cir.return loc(#loc112)
  } loc(#loc389)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc392)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc393)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc394)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc126)
  cir.func @main(%arg0: !s32i loc(fused[#loc129, #loc130]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc131, #loc132])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc396)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc397)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc128)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc133)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc134)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc135)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc135)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc136)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc123)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc137)
    %8 = cir.get_global @CWE416_Use_After_Free__malloc_free_struct_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc398)
    cir.call @CWE416_Use_After_Free__malloc_free_struct_12_good() : () -> () loc(#loc138)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc124)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc124)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc125)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc125)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc141)
    %13 = cir.get_global @CWE416_Use_After_Free__malloc_free_struct_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc399)
    cir.call @CWE416_Use_After_Free__malloc_free_struct_12_bad() : () -> () loc(#loc142)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc126)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc126)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc144)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc145)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc400)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc400)
    cir.return %17 : !s32i loc(#loc400)
  } loc(#loc395)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc402)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc151)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc403)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc405)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc405)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc155)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc155)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc160)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc161)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc161)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc407)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc408)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc160)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc409)
        cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc410)
        cir.scope {
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc168)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc169)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc169)
          %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc412)
          cir.if %19 {
            %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc171)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc172)
            %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc173)
            cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc171)
          } loc(#loc413)
        } loc(#loc411)
        cir.scope {
          %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc415)
          cir.scope {
            %17 = cir.const #cir.int<0> : !s32i loc(#loc180)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc180)
            cir.store %18, %16 : !u64i, !cir.ptr<!u64i> loc(#loc417)
            cir.for : cond {
              %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc182)
              %20 = cir.const #cir.int<100> : !s32i loc(#loc183)
              %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc183)
              %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc418)
              cir.condition(%22) loc(#loc184)
            } body {
              cir.scope {
                %19 = cir.const #cir.int<1> : !s32i loc(#loc186)
                %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc187)
                %21 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc188)
                %22 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %21 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc189)
                %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc54)
                cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc420)
                %24 = cir.const #cir.int<2> : !s32i loc(#loc190)
                %25 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc191)
                %26 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc192)
                %27 = cir.ptr_stride(%25 : !cir.ptr<!ty__twoIntsStruct>, %26 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc193)
                %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc59)
                cir.store %24, %28 : !s32i, !cir.ptr<!s32i> loc(#loc421)
              } loc(#loc419)
              cir.yield loc(#loc179)
            } step {
              %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc194)
              %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc195)
              cir.store %20, %16 : !u64i, !cir.ptr<!u64i> loc(#loc422)
              cir.yield loc(#loc416)
            } loc(#loc416)
          } loc(#loc416)
        } loc(#loc414)
        %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc196)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc197)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc197)
        cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc196)
      } else {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc198)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc199)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc199)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc423)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc424)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc198)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc425)
        cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc426)
        cir.scope {
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc206)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc207)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc207)
          %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc428)
          cir.if %19 {
            %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc209)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc210)
            %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc211)
            cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc209)
          } loc(#loc429)
        } loc(#loc427)
        cir.scope {
          %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc431)
          cir.scope {
            %17 = cir.const #cir.int<0> : !s32i loc(#loc218)
            %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc218)
            cir.store %18, %16 : !u64i, !cir.ptr<!u64i> loc(#loc433)
            cir.for : cond {
              %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc220)
              %20 = cir.const #cir.int<100> : !s32i loc(#loc221)
              %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc221)
              %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc434)
              cir.condition(%22) loc(#loc222)
            } body {
              cir.scope {
                %19 = cir.const #cir.int<1> : !s32i loc(#loc224)
                %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc225)
                %21 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc226)
                %22 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %21 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc227)
                %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc54)
                cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc436)
                %24 = cir.const #cir.int<2> : !s32i loc(#loc228)
                %25 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc229)
                %26 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc230)
                %27 = cir.ptr_stride(%25 : !cir.ptr<!ty__twoIntsStruct>, %26 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc231)
                %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc59)
                cir.store %24, %28 : !s32i, !cir.ptr<!s32i> loc(#loc437)
              } loc(#loc435)
              cir.yield loc(#loc217)
            } step {
              %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc232)
              %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc233)
              cir.store %20, %16 : !u64i, !cir.ptr<!u64i> loc(#loc438)
              cir.yield loc(#loc432)
            } loc(#loc432)
          } loc(#loc432)
        } loc(#loc430)
        %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc234)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc235)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc235)
        cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc234)
      } loc(#loc406)
    } loc(#loc404)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc440)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc440)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc238)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc238)
      cir.if %5 {
      } else {
      } loc(#loc441)
    } loc(#loc439)
    cir.return loc(#loc148)
  } loc(#loc401)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc443)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc247)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc444)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc446)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc446)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc251)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc251)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc256)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc257)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc257)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc448)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc449)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc256)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc450)
        cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc451)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc264)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc265)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc265)
          %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc453)
          cir.if %16 {
            %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc267)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc268)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc269)
            cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc267)
          } loc(#loc454)
        } loc(#loc452)
        cir.scope {
          %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc456)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc276)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc276)
            cir.store %15, %13 : !u64i, !cir.ptr<!u64i> loc(#loc458)
            cir.for : cond {
              %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc278)
              %17 = cir.const #cir.int<100> : !s32i loc(#loc279)
              %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc279)
              %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc459)
              cir.condition(%19) loc(#loc280)
            } body {
              cir.scope {
                %16 = cir.const #cir.int<1> : !s32i loc(#loc282)
                %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc283)
                %18 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc284)
                %19 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %18 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc285)
                %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc54)
                cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc461)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc286)
                %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc287)
                %23 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc288)
                %24 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %23 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc289)
                %25 = cir.get_member %24[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc59)
                cir.store %21, %25 : !s32i, !cir.ptr<!s32i> loc(#loc462)
              } loc(#loc460)
              cir.yield loc(#loc275)
            } step {
              %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc290)
              %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc291)
              cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc463)
              cir.yield loc(#loc457)
            } loc(#loc457)
          } loc(#loc457)
        } loc(#loc455)
      } else {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc292)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc293)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc293)
        %9 = cir.const #cir.int<8> : !u64i loc(#loc464)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc465)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc292)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc466)
        cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc467)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc300)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc301)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc301)
          %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc469)
          cir.if %16 {
            %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc303)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc304)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc305)
            cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc303)
          } loc(#loc470)
        } loc(#loc468)
        cir.scope {
          %13 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc472)
          cir.scope {
            %14 = cir.const #cir.int<0> : !s32i loc(#loc312)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc312)
            cir.store %15, %13 : !u64i, !cir.ptr<!u64i> loc(#loc474)
            cir.for : cond {
              %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc314)
              %17 = cir.const #cir.int<100> : !s32i loc(#loc315)
              %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc315)
              %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc475)
              cir.condition(%19) loc(#loc316)
            } body {
              cir.scope {
                %16 = cir.const #cir.int<1> : !s32i loc(#loc318)
                %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc319)
                %18 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc320)
                %19 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %18 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc321)
                %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc54)
                cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc477)
                %21 = cir.const #cir.int<2> : !s32i loc(#loc322)
                %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc323)
                %23 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc324)
                %24 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %23 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc325)
                %25 = cir.get_member %24[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc59)
                cir.store %21, %25 : !s32i, !cir.ptr<!s32i> loc(#loc478)
              } loc(#loc476)
              cir.yield loc(#loc311)
            } step {
              %16 = cir.load %13 : !cir.ptr<!u64i>, !u64i loc(#loc326)
              %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc327)
              cir.store %17, %13 : !u64i, !cir.ptr<!u64i> loc(#loc479)
              cir.yield loc(#loc473)
            } loc(#loc473)
          } loc(#loc473)
        } loc(#loc471)
      } loc(#loc447)
    } loc(#loc445)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc481)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc481)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc330)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc330)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc335)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc336)
        %8 = cir.ptr_stride(%6 : !cir.ptr<!ty__twoIntsStruct>, %7 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc337)
        cir.call @printStructLine(%8) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc338)
      } else {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc339)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc340)
        %8 = cir.ptr_stride(%6 : !cir.ptr<!ty__twoIntsStruct>, %7 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc341)
        cir.call @printStructLine(%8) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc342)
      } loc(#loc482)
    } loc(#loc480)
    cir.return loc(#loc244)
  } loc(#loc442)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":40:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":40:63)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":24:1)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":71:1)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":26:5)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":26:21)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":28:12)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":28:5)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":29:5)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":57:5)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":29:8)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":29:33)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":30:5)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":43:5)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":45:5)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":31:33)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":31:40)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":31:44)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":31:64)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":31:65)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":31:9)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":32:9)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":32:37)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":32:13)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":32:21)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":32:27)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":32:28)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":32:34)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":32:33)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":33:9)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":40:9)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":34:13)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":34:20)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":35:13)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":39:13)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":35:21)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":35:17)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":35:24)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":35:28)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":35:26)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":36:13)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":37:34)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":37:17)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":37:22)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":37:23)
#loc54 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":38:34)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":38:17)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":38:22)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":38:23)
#loc59 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc60 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":35:34)
#loc61 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":35:33)
#loc62 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":42:9)
#loc63 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":42:14)
#loc64 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":46:33)
#loc65 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":46:40)
#loc66 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":46:44)
#loc67 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":46:64)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":46:65)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":46:9)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":47:9)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":47:37)
#loc72 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":47:13)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":47:21)
#loc74 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":47:27)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":47:28)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":47:34)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":47:33)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":48:9)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":55:9)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":49:13)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":49:20)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":50:13)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":54:13)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":50:21)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":50:17)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":50:24)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":50:28)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":50:26)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":51:13)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":52:34)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":52:17)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":52:22)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":52:23)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":53:34)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":53:17)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":53:22)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":53:23)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":50:34)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":50:33)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":58:5)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":70:5)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":58:8)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":58:33)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":59:5)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":63:5)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":65:5)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":61:26)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":61:31)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":61:32)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":61:9)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":181:1)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":185:1)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":183:5)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":183:13)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":184:5)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":184:13)
#loc117 = loc("/usr/include/stdlib.h":575:1)
#loc118 = loc("/usr/include/stdlib.h":575:41)
#loc119 = loc("/usr/include/time.h":76:1)
#loc120 = loc("/usr/include/time.h":76:38)
#loc121 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc122 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc123 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":201:15)
#loc124 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":203:15)
#loc125 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":206:15)
#loc126 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":208:15)
#loc127 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":196:1)
#loc128 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":211:1)
#loc133 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":197:1)
#loc134 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":199:27)
#loc135 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":199:22)
#loc136 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":199:5)
#loc137 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":201:5)
#loc138 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":202:5)
#loc139 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":202:55)
#loc140 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":203:5)
#loc141 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":206:5)
#loc142 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":207:5)
#loc143 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":207:54)
#loc144 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":208:5)
#loc145 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":210:12)
#loc146 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":210:5)
#loc147 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":80:1)
#loc148 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":129:1)
#loc149 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":82:5)
#loc150 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":82:21)
#loc151 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":84:12)
#loc152 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":84:5)
#loc153 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":85:5)
#loc154 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":114:5)
#loc155 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":85:8)
#loc156 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":85:33)
#loc157 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":86:5)
#loc158 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":99:5)
#loc159 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":101:5)
#loc160 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":87:33)
#loc161 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":87:40)
#loc162 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":87:44)
#loc163 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":87:64)
#loc164 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":87:65)
#loc165 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":87:9)
#loc166 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":88:9)
#loc167 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":88:37)
#loc168 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":88:13)
#loc169 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":88:21)
#loc170 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":88:27)
#loc171 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":88:28)
#loc172 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":88:34)
#loc173 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":88:33)
#loc174 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":89:9)
#loc175 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":96:9)
#loc176 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":90:13)
#loc177 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":90:20)
#loc178 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":91:13)
#loc179 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":95:13)
#loc180 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":91:21)
#loc181 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":91:17)
#loc182 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":91:24)
#loc183 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":91:28)
#loc184 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":91:26)
#loc185 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":92:13)
#loc186 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":93:34)
#loc187 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":93:17)
#loc188 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":93:22)
#loc189 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":93:23)
#loc190 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":94:34)
#loc191 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":94:17)
#loc192 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":94:22)
#loc193 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":94:23)
#loc194 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":91:34)
#loc195 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":91:33)
#loc196 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":98:9)
#loc197 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":98:14)
#loc198 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":102:33)
#loc199 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":102:40)
#loc200 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":102:44)
#loc201 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":102:64)
#loc202 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":102:65)
#loc203 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":102:9)
#loc204 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":103:9)
#loc205 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":103:37)
#loc206 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":103:13)
#loc207 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":103:21)
#loc208 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":103:27)
#loc209 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":103:28)
#loc210 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":103:34)
#loc211 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":103:33)
#loc212 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":104:9)
#loc213 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":111:9)
#loc214 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":105:13)
#loc215 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":105:20)
#loc216 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":106:13)
#loc217 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":110:13)
#loc218 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":106:21)
#loc219 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":106:17)
#loc220 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":106:24)
#loc221 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":106:28)
#loc222 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":106:26)
#loc223 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":107:13)
#loc224 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":108:34)
#loc225 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":108:17)
#loc226 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":108:22)
#loc227 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":108:23)
#loc228 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":109:34)
#loc229 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":109:17)
#loc230 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":109:22)
#loc231 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":109:23)
#loc232 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":106:34)
#loc233 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":106:33)
#loc234 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":113:9)
#loc235 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":113:14)
#loc236 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":115:5)
#loc237 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":128:5)
#loc238 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":115:8)
#loc239 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":115:33)
#loc240 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":116:5)
#loc241 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":121:5)
#loc242 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":123:5)
#loc243 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":134:1)
#loc244 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":179:1)
#loc245 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":136:5)
#loc246 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":136:21)
#loc247 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":138:12)
#loc248 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":138:5)
#loc249 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":139:5)
#loc250 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":166:5)
#loc251 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":139:8)
#loc252 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":139:33)
#loc253 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":140:5)
#loc254 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":152:5)
#loc255 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":154:5)
#loc256 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":141:33)
#loc257 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":141:40)
#loc258 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":141:44)
#loc259 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":141:64)
#loc260 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":141:65)
#loc261 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":141:9)
#loc262 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":142:9)
#loc263 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":142:37)
#loc264 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":142:13)
#loc265 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":142:21)
#loc266 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":142:27)
#loc267 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":142:28)
#loc268 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":142:34)
#loc269 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":142:33)
#loc270 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":143:9)
#loc271 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":150:9)
#loc272 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":144:13)
#loc273 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":144:20)
#loc274 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":145:13)
#loc275 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":149:13)
#loc276 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":145:21)
#loc277 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":145:17)
#loc278 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":145:24)
#loc279 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":145:28)
#loc280 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":145:26)
#loc281 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":146:13)
#loc282 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":147:34)
#loc283 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":147:17)
#loc284 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":147:22)
#loc285 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":147:23)
#loc286 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":148:34)
#loc287 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":148:17)
#loc288 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":148:22)
#loc289 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":148:23)
#loc290 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":145:34)
#loc291 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":145:33)
#loc292 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":155:33)
#loc293 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":155:40)
#loc294 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":155:44)
#loc295 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":155:64)
#loc296 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":155:65)
#loc297 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":155:9)
#loc298 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":156:9)
#loc299 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":156:37)
#loc300 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":156:13)
#loc301 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":156:21)
#loc302 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":156:27)
#loc303 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":156:28)
#loc304 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":156:34)
#loc305 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":156:33)
#loc306 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":157:9)
#loc307 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":164:9)
#loc308 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":158:13)
#loc309 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":158:20)
#loc310 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":159:13)
#loc311 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":163:13)
#loc312 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":159:21)
#loc313 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":159:17)
#loc314 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":159:24)
#loc315 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":159:28)
#loc316 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":159:26)
#loc317 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":160:13)
#loc318 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":161:34)
#loc319 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":161:17)
#loc320 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":161:22)
#loc321 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":161:23)
#loc322 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":162:34)
#loc323 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":162:17)
#loc324 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":162:22)
#loc325 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":162:23)
#loc326 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":159:34)
#loc327 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":159:33)
#loc328 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":167:5)
#loc329 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":178:5)
#loc330 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":167:8)
#loc331 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":167:33)
#loc332 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":168:5)
#loc333 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":172:5)
#loc334 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":174:5)
#loc335 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":170:26)
#loc336 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":170:31)
#loc337 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":170:32)
#loc338 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":170:9)
#loc339 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":176:26)
#loc340 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":176:31)
#loc341 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":176:32)
#loc342 = loc("CWE416_Use_After_Free__malloc_free_struct_12.c":176:9)
#loc343 = loc(fused[#loc1, #loc2])
#loc344 = loc(fused[#loc3, #loc4])
#loc345 = loc(fused[#loc5, #loc6])
#loc346 = loc(fused[#loc7, #loc8])
#loc347 = loc(fused[#loc9, #loc10])
#loc348 = loc(fused[#loc11, #loc12])
#loc349 = loc(fused[#loc13, #loc14])
#loc350 = loc(fused[#loc16, #loc15])
#loc351 = loc(fused[#loc17, #loc18])
#loc352 = loc(fused[#loc19, #loc20])
#loc353 = loc(fused[#loc21, #loc22, #loc23, #loc18])
#loc354 = loc(fused[#loc26, #loc27])
#loc355 = loc(fused[#loc25, #loc27])
#loc356 = loc(fused[#loc24, #loc28])
#loc357 = loc(fused[#loc29, #loc28])
#loc358 = loc(fused[#loc30, #loc31])
#loc359 = loc(fused[#loc32, #loc33])
#loc360 = loc(fused[#loc34, #loc31])
#loc361 = loc(fused[#loc38, #loc39])
#loc362 = loc(fused[#loc40, #loc41])
#loc363 = loc(fused[#loc42, #loc43])
#loc364 = loc(fused[#loc45, #loc44])
#loc365 = loc(fused[#loc46, #loc47])
#loc366 = loc(fused[#loc49, #loc43])
#loc367 = loc(fused[#loc51, #loc50])
#loc368 = loc(fused[#loc56, #loc55])
#loc369 = loc(fused[#loc61, #loc60])
#loc370 = loc(fused[#loc66, #loc67])
#loc371 = loc(fused[#loc65, #loc67])
#loc372 = loc(fused[#loc64, #loc68])
#loc373 = loc(fused[#loc69, #loc68])
#loc374 = loc(fused[#loc70, #loc71])
#loc375 = loc(fused[#loc72, #loc73])
#loc376 = loc(fused[#loc74, #loc71])
#loc377 = loc(fused[#loc78, #loc79])
#loc378 = loc(fused[#loc80, #loc81])
#loc379 = loc(fused[#loc82, #loc83])
#loc380 = loc(fused[#loc85, #loc84])
#loc381 = loc(fused[#loc86, #loc87])
#loc382 = loc(fused[#loc89, #loc83])
#loc383 = loc(fused[#loc91, #loc90])
#loc384 = loc(fused[#loc95, #loc94])
#loc385 = loc(fused[#loc99, #loc98])
#loc386 = loc(fused[#loc100, #loc101])
#loc387 = loc(fused[#loc102, #loc103])
#loc388 = loc(fused[#loc104, #loc105, #loc106, #loc101])
#loc389 = loc(fused[#loc111, #loc112])
#loc390 = loc(fused[#loc113, #loc114])
#loc391 = loc(fused[#loc115, #loc116])
#loc392 = loc(fused[#loc117, #loc118])
#loc393 = loc(fused[#loc119, #loc120])
#loc394 = loc(fused[#loc121, #loc122])
#loc395 = loc(fused[#loc127, #loc128])
#loc398 = loc(fused[#loc138, #loc139])
#loc399 = loc(fused[#loc142, #loc143])
#loc400 = loc(fused[#loc146, #loc145])
#loc401 = loc(fused[#loc147, #loc148])
#loc402 = loc(fused[#loc149, #loc150])
#loc403 = loc(fused[#loc152, #loc151])
#loc404 = loc(fused[#loc153, #loc154])
#loc405 = loc(fused[#loc155, #loc156])
#loc406 = loc(fused[#loc157, #loc158, #loc159, #loc154])
#loc407 = loc(fused[#loc162, #loc163])
#loc408 = loc(fused[#loc161, #loc163])
#loc409 = loc(fused[#loc160, #loc164])
#loc410 = loc(fused[#loc165, #loc164])
#loc411 = loc(fused[#loc166, #loc167])
#loc412 = loc(fused[#loc168, #loc169])
#loc413 = loc(fused[#loc170, #loc167])
#loc414 = loc(fused[#loc174, #loc175])
#loc415 = loc(fused[#loc176, #loc177])
#loc416 = loc(fused[#loc178, #loc179])
#loc417 = loc(fused[#loc181, #loc180])
#loc418 = loc(fused[#loc182, #loc183])
#loc419 = loc(fused[#loc185, #loc179])
#loc420 = loc(fused[#loc187, #loc186])
#loc421 = loc(fused[#loc191, #loc190])
#loc422 = loc(fused[#loc195, #loc194])
#loc423 = loc(fused[#loc200, #loc201])
#loc424 = loc(fused[#loc199, #loc201])
#loc425 = loc(fused[#loc198, #loc202])
#loc426 = loc(fused[#loc203, #loc202])
#loc427 = loc(fused[#loc204, #loc205])
#loc428 = loc(fused[#loc206, #loc207])
#loc429 = loc(fused[#loc208, #loc205])
#loc430 = loc(fused[#loc212, #loc213])
#loc431 = loc(fused[#loc214, #loc215])
#loc432 = loc(fused[#loc216, #loc217])
#loc433 = loc(fused[#loc219, #loc218])
#loc434 = loc(fused[#loc220, #loc221])
#loc435 = loc(fused[#loc223, #loc217])
#loc436 = loc(fused[#loc225, #loc224])
#loc437 = loc(fused[#loc229, #loc228])
#loc438 = loc(fused[#loc233, #loc232])
#loc439 = loc(fused[#loc236, #loc237])
#loc440 = loc(fused[#loc238, #loc239])
#loc441 = loc(fused[#loc240, #loc241, #loc242, #loc237])
#loc442 = loc(fused[#loc243, #loc244])
#loc443 = loc(fused[#loc245, #loc246])
#loc444 = loc(fused[#loc248, #loc247])
#loc445 = loc(fused[#loc249, #loc250])
#loc446 = loc(fused[#loc251, #loc252])
#loc447 = loc(fused[#loc253, #loc254, #loc255, #loc250])
#loc448 = loc(fused[#loc258, #loc259])
#loc449 = loc(fused[#loc257, #loc259])
#loc450 = loc(fused[#loc256, #loc260])
#loc451 = loc(fused[#loc261, #loc260])
#loc452 = loc(fused[#loc262, #loc263])
#loc453 = loc(fused[#loc264, #loc265])
#loc454 = loc(fused[#loc266, #loc263])
#loc455 = loc(fused[#loc270, #loc271])
#loc456 = loc(fused[#loc272, #loc273])
#loc457 = loc(fused[#loc274, #loc275])
#loc458 = loc(fused[#loc277, #loc276])
#loc459 = loc(fused[#loc278, #loc279])
#loc460 = loc(fused[#loc281, #loc275])
#loc461 = loc(fused[#loc283, #loc282])
#loc462 = loc(fused[#loc287, #loc286])
#loc463 = loc(fused[#loc291, #loc290])
#loc464 = loc(fused[#loc294, #loc295])
#loc465 = loc(fused[#loc293, #loc295])
#loc466 = loc(fused[#loc292, #loc296])
#loc467 = loc(fused[#loc297, #loc296])
#loc468 = loc(fused[#loc298, #loc299])
#loc469 = loc(fused[#loc300, #loc301])
#loc470 = loc(fused[#loc302, #loc299])
#loc471 = loc(fused[#loc306, #loc307])
#loc472 = loc(fused[#loc308, #loc309])
#loc473 = loc(fused[#loc310, #loc311])
#loc474 = loc(fused[#loc313, #loc312])
#loc475 = loc(fused[#loc314, #loc315])
#loc476 = loc(fused[#loc317, #loc311])
#loc477 = loc(fused[#loc319, #loc318])
#loc478 = loc(fused[#loc323, #loc322])
#loc479 = loc(fused[#loc327, #loc326])
#loc480 = loc(fused[#loc328, #loc329])
#loc481 = loc(fused[#loc330, #loc331])
#loc482 = loc(fused[#loc332, #loc333, #loc334, #loc329])
