!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc159)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc160)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc161)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc162)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc163)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc161)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc165)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc166)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc167)
    %4 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc168)
    %5 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc169)
    cir.br ^bb1 loc(#loc170)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc171)
  ^bb2:  // pred: ^bb1
    %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc28)
    %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc31)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc173)
    cir.br ^bb3 loc(#loc23)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc23)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc174)
  ^bb5:  // pred: ^bb4
    %14 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc161)
    cir.copy %14 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc161)
    %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc34)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc35)
    %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc34)
    cir.store %17, %2 : !u64i, !cir.ptr<!u64i> loc(#loc175)
    cir.br ^bb6 loc(#loc176)
  ^bb6:  // pred: ^bb5
    %18 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc40)
    cir.store %19, %1 : !u64i, !cir.ptr<!u64i> loc(#loc177)
    cir.br ^bb7 loc(#loc176)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc42)
    %21 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc44)
    %24 = cir.binop(add, %21, %23) : !u64i loc(#loc178)
    %25 = cir.cmp(lt, %20, %24) : !u64i, !cir.bool loc(#loc179)
    cir.brcond %25 ^bb8, ^bb12 loc(#loc45)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc180)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc48)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc48)
    %29 = cir.load %28 : !cir.ptr<!s8i>, !s8i loc(#loc48)
    %30 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc50)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %31 : !u64i), !cir.ptr<!s8i> loc(#loc51)
    cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc181)
    cir.br ^bb10 loc(#loc39)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc39)
  ^bb11:  // pred: ^bb10
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc54)
    cir.store %34, %1 : !u64i, !cir.ptr<!u64i> loc(#loc182)
    cir.br ^bb7 loc(#loc176)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc39)
  ^bb13:  // pred: ^bb12
    %35 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    cir.br ^bb14 loc(#loc33)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc12)
  } loc(#loc164)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc184)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc59)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc185)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc61)
    cir.return loc(#loc58)
  } loc(#loc183)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc63)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc160)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc187)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc188)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc189)
    %4 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc190)
    %5 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc191)
    cir.br ^bb1 loc(#loc192)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc77)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc193)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc63)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    cir.br ^bb4 loc(#loc79)
  ^bb3:  // pred: ^bb1
    %10 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc82)
    cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc84)
    %13 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc87)
    cir.store %12, %15 : !s8i, !cir.ptr<!s8i> loc(#loc195)
    cir.br ^bb4 loc(#loc76)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc76)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc196)
  ^bb6:  // pred: ^bb5
    %16 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc160)
    cir.copy %16 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc160)
    %17 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc90)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc91)
    %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc90)
    cir.store %19, %2 : !u64i, !cir.ptr<!u64i> loc(#loc197)
    cir.br ^bb7 loc(#loc198)
  ^bb7:  // pred: ^bb6
    %20 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc96)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc199)
    cir.br ^bb8 loc(#loc198)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc98)
    %23 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc99)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc100)
    %26 = cir.binop(add, %23, %25) : !u64i loc(#loc200)
    %27 = cir.cmp(lt, %22, %26) : !u64i, !cir.bool loc(#loc201)
    cir.brcond %27 ^bb9, ^bb13 loc(#loc101)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc202)
  ^bb10:  // pred: ^bb9
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc103)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc104)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !u64i), !cir.ptr<!s8i> loc(#loc104)
    %31 = cir.load %30 : !cir.ptr<!s8i>, !s8i loc(#loc104)
    %32 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc106)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %33 : !u64i), !cir.ptr<!s8i> loc(#loc107)
    cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc203)
    cir.br ^bb11 loc(#loc95)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc95)
  ^bb12:  // pred: ^bb11
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc109)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc110)
    cir.store %36, %1 : !u64i, !cir.ptr<!u64i> loc(#loc204)
    cir.br ^bb8 loc(#loc198)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc95)
  ^bb14:  // pred: ^bb13
    %37 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    cir.br ^bb15 loc(#loc89)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc65)
  } loc(#loc186)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc159)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc206)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc207)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %4 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc209)
    %5 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc210)
    cir.br ^bb1 loc(#loc211)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc126)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc212)
  ^bb2:  // pred: ^bb1
    %8 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc128)
    cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc213)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc130)
    %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc132)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc133)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc214)
    cir.br ^bb3 loc(#loc125)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc125)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc215)
  ^bb5:  // pred: ^bb4
    %14 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc159)
    cir.copy %14 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc159)
    %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc136)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc137)
    %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc136)
    cir.store %17, %2 : !u64i, !cir.ptr<!u64i> loc(#loc216)
    cir.br ^bb6 loc(#loc217)
  ^bb6:  // pred: ^bb5
    %18 = cir.const #cir.int<0> : !s32i loc(#loc142)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc142)
    cir.store %19, %1 : !u64i, !cir.ptr<!u64i> loc(#loc218)
    cir.br ^bb7 loc(#loc217)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc144)
    %21 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc145)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc146)
    %24 = cir.binop(add, %21, %23) : !u64i loc(#loc219)
    %25 = cir.cmp(lt, %20, %24) : !u64i, !cir.bool loc(#loc220)
    cir.brcond %25 ^bb8, ^bb12 loc(#loc147)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc221)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc149)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc150)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc150)
    %29 = cir.load %28 : !cir.ptr<!s8i>, !s8i loc(#loc150)
    %30 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc152)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %31 : !u64i), !cir.ptr<!s8i> loc(#loc153)
    cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc222)
    cir.br ^bb10 loc(#loc141)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc141)
  ^bb11:  // pred: ^bb10
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc155)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc156)
    cir.store %34, %1 : !u64i, !cir.ptr<!u64i> loc(#loc223)
    cir.br ^bb7 loc(#loc217)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc141)
  ^bb13:  // pred: ^bb12
    %35 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    cir.br ^bb14 loc(#loc135)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc114)
  } loc(#loc205)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":111:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":111:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":84:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":84:29)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":48:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":48:29)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":35:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":59:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":49:9)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":49:16)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":49:19)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":37:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":37:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":38:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":38:26)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":39:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":39:29)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":40:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":46:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":40:8)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":41:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":44:16)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":44:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":45:19)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":45:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":45:14)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":45:15)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":47:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":58:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":50:21)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":50:28)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":50:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":50:34)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":53:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":56:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":53:18)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":53:14)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":53:21)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":53:25)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":53:37)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":53:23)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":54:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":55:30)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":55:23)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":55:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":55:18)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":55:19)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":55:31)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":53:41)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":53:40)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":57:19)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":57:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":124:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":128:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":126:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":126:14)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":127:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":127:14)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":74:19)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":66:1)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":95:1)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":85:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":85:16)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":85:19)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":68:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":68:12)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":69:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":69:26)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":70:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":70:29)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":71:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":82:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":71:8)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":72:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":75:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":77:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":74:9)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":80:16)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":80:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":81:19)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":81:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":81:14)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":81:15)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":83:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":94:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":86:21)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":86:28)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":86:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":86:34)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":89:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":92:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":89:18)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":89:14)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":89:21)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":89:25)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":89:37)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":89:23)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":90:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":91:30)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":91:23)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":91:13)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":91:18)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":91:19)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":91:31)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":89:41)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":89:40)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":93:19)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":93:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":98:1)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":122:1)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":112:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":112:16)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":112:19)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":100:5)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":100:12)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":101:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":101:26)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":102:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":102:29)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":103:5)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":109:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":103:8)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":104:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":107:16)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":107:9)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":108:19)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":108:9)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":108:14)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":108:15)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":110:5)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":121:5)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":113:21)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":113:28)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":113:9)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":113:34)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":116:9)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":119:9)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":116:18)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":116:14)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":116:21)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":116:25)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":116:37)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":116:23)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":117:9)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":118:30)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":118:23)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":118:13)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":118:18)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":118:19)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":118:31)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":116:41)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":116:40)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":120:19)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":120:9)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc7, #loc8])
#loc163 = loc(fused[#loc9, #loc10])
#loc164 = loc(fused[#loc11, #loc12])
#loc165 = loc(fused[#loc13, #loc14])
#loc166 = loc(fused[#loc13, #loc15])
#loc167 = loc(fused[#loc16, #loc17])
#loc168 = loc(fused[#loc18, #loc19])
#loc169 = loc(fused[#loc20, #loc21])
#loc170 = loc(fused[#loc22, #loc23])
#loc171 = loc(fused[#loc25, #loc23])
#loc172 = loc(fused[#loc27, #loc26])
#loc173 = loc(fused[#loc29, #loc28])
#loc174 = loc(fused[#loc32, #loc33])
#loc175 = loc(fused[#loc36, #loc37])
#loc176 = loc(fused[#loc38, #loc39])
#loc177 = loc(fused[#loc41, #loc40])
#loc178 = loc(fused[#loc43, #loc44])
#loc179 = loc(fused[#loc42, #loc44])
#loc180 = loc(fused[#loc46, #loc39])
#loc181 = loc(fused[#loc49, #loc52])
#loc182 = loc(fused[#loc54, #loc53])
#loc183 = loc(fused[#loc57, #loc58])
#loc184 = loc(fused[#loc59, #loc60])
#loc185 = loc(fused[#loc61, #loc62])
#loc186 = loc(fused[#loc64, #loc65])
#loc187 = loc(fused[#loc66, #loc67])
#loc188 = loc(fused[#loc66, #loc68])
#loc189 = loc(fused[#loc69, #loc70])
#loc190 = loc(fused[#loc71, #loc72])
#loc191 = loc(fused[#loc73, #loc74])
#loc192 = loc(fused[#loc75, #loc76])
#loc193 = loc(fused[#loc78, #loc79, #loc80, #loc76])
#loc194 = loc(fused[#loc83, #loc82])
#loc195 = loc(fused[#loc85, #loc84])
#loc196 = loc(fused[#loc88, #loc89])
#loc197 = loc(fused[#loc92, #loc93])
#loc198 = loc(fused[#loc94, #loc95])
#loc199 = loc(fused[#loc97, #loc96])
#loc200 = loc(fused[#loc99, #loc100])
#loc201 = loc(fused[#loc98, #loc100])
#loc202 = loc(fused[#loc102, #loc95])
#loc203 = loc(fused[#loc105, #loc108])
#loc204 = loc(fused[#loc110, #loc109])
#loc205 = loc(fused[#loc113, #loc114])
#loc206 = loc(fused[#loc115, #loc116])
#loc207 = loc(fused[#loc115, #loc117])
#loc208 = loc(fused[#loc118, #loc119])
#loc209 = loc(fused[#loc120, #loc121])
#loc210 = loc(fused[#loc122, #loc123])
#loc211 = loc(fused[#loc124, #loc125])
#loc212 = loc(fused[#loc127, #loc125])
#loc213 = loc(fused[#loc129, #loc128])
#loc214 = loc(fused[#loc131, #loc130])
#loc215 = loc(fused[#loc134, #loc135])
#loc216 = loc(fused[#loc138, #loc139])
#loc217 = loc(fused[#loc140, #loc141])
#loc218 = loc(fused[#loc143, #loc142])
#loc219 = loc(fused[#loc145, #loc146])
#loc220 = loc(fused[#loc144, #loc146])
#loc221 = loc(fused[#loc148, #loc141])
#loc222 = loc(fused[#loc151, #loc154])
#loc223 = loc(fused[#loc156, #loc155])
