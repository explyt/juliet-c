!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc213)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc214)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc216)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc217)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc218)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc219)
  cir.func private @close(!s32i) -> !s32i loc(#loc220)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc221)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_183badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc223)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc224)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc225)
    %3 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc226)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc227)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc228)
    %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc229)
    %7 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc224)
    cir.store %7, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc224)
    %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc36)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc230)
    cir.goto "source" loc(#loc231)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc40)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc33)
    cir.store %10, %5 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    %11 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc41)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc41)
    cir.store %13, %6 : !u64i, !cir.ptr<!u64i> loc(#loc229)
    cir.scope {
      cir.do {
        cir.scope {
          %14 = cir.const #cir.int<2> : !s32i loc(#loc47)
          %15 = cir.const #cir.int<1> : !u32i loc(#loc48)
          %16 = cir.cast(integral, %15 : !u32i), !s32i loc(#loc48)
          %17 = cir.const #cir.int<6> : !u32i loc(#loc49)
          %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc49)
          %19 = cir.call @socket(%14, %16, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
          cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc234)
          cir.scope {
            %69 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc55)
            %70 = cir.const #cir.int<1> : !s32i loc(#loc56)
            %71 = cir.unary(minus, %70) nsw : !s32i, !s32i loc(#loc56)
            %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc236)
            cir.if %72 {
              cir.break loc(#loc58)
            } loc(#loc237)
          } loc(#loc235)
          %20 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc238)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc61)
          %22 = cir.const #cir.int<16> : !u64i loc(#loc239)
          cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc240)
          %23 = cir.const #cir.int<2> : !s32i loc(#loc66)
          %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc66)
          %25 = cir.get_member %3[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
          cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc241)
          %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
          %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
          %28 = cir.call @inet_addr(%27) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc69)
          %29 = cir.get_member %3[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
          %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
          cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc242)
          %31 = cir.const #cir.int<27015> : !s32i loc(#loc74)
          %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc74)
          %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc75)
          %34 = cir.get_member %3[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
          cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc243)
          cir.scope {
            %69 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc81)
            %70 = cir.cast(bitcast, %3 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc245)
            %71 = cir.const #cir.int<16> : !u64i loc(#loc246)
            %72 = cir.cast(integral, %71 : !u64i), !u32i loc(#loc246)
            %73 = cir.call @connect(%69, %70, %72) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc86)
            %74 = cir.const #cir.int<1> : !s32i loc(#loc87)
            %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc87)
            %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc247)
            cir.if %76 {
              cir.break loc(#loc89)
            } loc(#loc248)
          } loc(#loc244)
          %35 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc90)
          %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
          %37 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc92)
          %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc93)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc249)
          %40 = cir.const #cir.int<1> : !u64i loc(#loc250)
          %41 = cir.const #cir.int<4096> : !s32i loc(#loc98)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc98)
          %43 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc99)
          %44 = cir.binop(sub, %42, %43) : !u64i loc(#loc251)
          %45 = cir.const #cir.int<1> : !s32i loc(#loc100)
          %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc100)
          %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc252)
          %48 = cir.binop(mul, %40, %47) : !u64i loc(#loc253)
          %49 = cir.const #cir.int<0> : !s32i loc(#loc102)
          %50 = cir.call @recv(%35, %39, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc103)
          %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc103)
          cir.store %51, %2 : !s32i, !cir.ptr<!s32i> loc(#loc254)
          cir.scope {
            %69 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc108)
            %70 = cir.const #cir.int<1> : !s32i loc(#loc109)
            %71 = cir.unary(minus, %70) nsw : !s32i, !s32i loc(#loc109)
            %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc256)
            %73 = cir.ternary(%72, true {
              %74 = cir.const #true loc(#loc110)
              cir.yield %74 : !cir.bool loc(#loc110)
            }, false {
              %74 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc111)
              %75 = cir.const #cir.int<0> : !s32i loc(#loc112)
              %76 = cir.cmp(eq, %74, %75) : !s32i, !cir.bool loc(#loc257)
              %77 = cir.ternary(%76, true {
                %78 = cir.const #true loc(#loc110)
                cir.yield %78 : !cir.bool loc(#loc110)
              }, false {
                %78 = cir.const #false loc(#loc110)
                cir.yield %78 : !cir.bool loc(#loc110)
              }) : (!cir.bool) -> !cir.bool loc(#loc110)
              cir.yield %77 : !cir.bool loc(#loc110)
            }) : (!cir.bool) -> !cir.bool loc(#loc110)
            cir.if %73 {
              cir.break loc(#loc114)
            } loc(#loc258)
          } loc(#loc255)
          %52 = cir.const #cir.int<0> : !s8i loc(#loc115)
          %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
          %54 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc117)
          %55 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc118)
          %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc118)
          %57 = cir.const #cir.int<1> : !u64i loc(#loc259)
          %58 = cir.binop(div, %56, %57) : !u64i loc(#loc260)
          %59 = cir.binop(add, %54, %58) : !u64i loc(#loc261)
          %60 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc121)
          cir.store %52, %60 : !s8i, !cir.ptr<!s8i> loc(#loc262)
          %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
          %62 = cir.const #cir.int<13> : !s8i loc(#loc123)
          %63 = cir.cast(integral, %62 : !s8i), !s32i loc(#loc123)
          %64 = cir.call @strchr(%61, %63) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc124)
          cir.store %64, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc263)
          cir.scope {
            %69 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
            %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc129)
            cir.if %70 {
              %71 = cir.const #cir.int<0> : !s8i loc(#loc131)
              %72 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
              cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc266)
            } loc(#loc265)
          } loc(#loc264)
          %65 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
          %66 = cir.const #cir.int<10> : !s8i loc(#loc135)
          %67 = cir.cast(integral, %66 : !s8i), !s32i loc(#loc135)
          %68 = cir.call @strchr(%65, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc136)
          cir.store %68, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc267)
          cir.scope {
            %69 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
            %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc141)
            cir.if %70 {
              %71 = cir.const #cir.int<0> : !s8i loc(#loc143)
              %72 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
              cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc270)
            } loc(#loc269)
          } loc(#loc268)
        } loc(#loc233)
        cir.yield loc(#loc44)
      } while {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc146)
        %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc146)
        cir.condition(%15) loc(#loc146)
      } loc(#loc232)
    } loc(#loc232)
    cir.scope {
      %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc149)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc150)
      %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc150)
      %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc272)
      cir.if %17 {
        %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc152)
        %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc153)
      } loc(#loc273)
    } loc(#loc271)
    cir.scope {
      %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc275)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
      %16 = cir.const #cir.int<2> : !s32i loc(#loc159)
      %17 = cir.const #cir.int<64> : !s32i loc(#loc160)
      %18 = cir.binop(or, %16, %17) : !s32i loc(#loc276)
      %19 = cir.const #cir.int<256> : !s32i loc(#loc161)
      %20 = cir.const #cir.int<128> : !s32i loc(#loc162)
      %21 = cir.binop(or, %19, %20) : !s32i loc(#loc277)
      %22 = cir.call @open(%15, %18, %21) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc163)
      cir.store %22, %14 : !s32i, !cir.ptr<!s32i> loc(#loc278)
      cir.scope {
        %23 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc168)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc169)
        %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc170)
        %26 = cir.cmp(ne, %23, %25) : !s32i, !cir.bool loc(#loc280)
        cir.if %26 {
          %27 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc172)
          %28 = cir.call @close(%27) : (!s32i) -> !s32i loc(#loc173)
        } loc(#loc281)
      } loc(#loc279)
    } loc(#loc274)
    cir.return loc(#loc21)
  } loc(#loc222)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc282)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc176)
  cir.func internal private @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_18L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc284)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc285)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc285)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc285)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc183)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc286)
    cir.goto "source" loc(#loc287)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc187)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc188)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc189)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc176)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc176)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc188)
    cir.scope {
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc289)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc194)
      %11 = cir.const #cir.int<2> : !s32i loc(#loc195)
      %12 = cir.const #cir.int<64> : !s32i loc(#loc196)
      %13 = cir.binop(or, %11, %12) : !s32i loc(#loc290)
      %14 = cir.const #cir.int<256> : !s32i loc(#loc197)
      %15 = cir.const #cir.int<128> : !s32i loc(#loc198)
      %16 = cir.binop(or, %14, %15) : !s32i loc(#loc291)
      %17 = cir.call @open(%10, %13, %16) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc199)
      cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc292)
      cir.scope {
        %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc204)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc205)
        %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc206)
        %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc294)
        cir.if %21 {
          %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc208)
          %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc209)
        } loc(#loc295)
      } loc(#loc293)
    } loc(#loc288)
    cir.return loc(#loc178)
  } loc(#loc283)
  cir.func @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_184goodEv() extra(#fn_attr1) {
    cir.call @_ZN58CWE36_Absolute_Path_Traversal__char_connect_socket_open_18L7goodG2BEv() : () -> () loc(#loc212)
    cir.return loc(#loc211)
  } loc(#loc296)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":91:49)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/string.h":226:1)
#loc15 = loc("/usr/include/string.h":227:50)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("/usr/include/fcntl.h":209:1)
#loc19 = loc("/usr/include/fcntl.h":209:56)
#loc20 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":57:1)
#loc21 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":140:1)
#loc22 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":59:5)
#loc23 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":59:12)
#loc24 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":60:5)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":60:37)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":69:9)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":69:13)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":70:9)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":70:28)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":71:9)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":71:15)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":72:9)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":72:32)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":73:9)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":73:37)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":61:12)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":61:5)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":62:5)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":62:10)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":63:1)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":73:26)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":73:33)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":74:9)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":119:17)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":75:9)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":118:9)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":84:36)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":84:45)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":84:58)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":84:29)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":84:13)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":84:69)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":85:13)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":88:13)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":85:17)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":85:34)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":86:13)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":87:17)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":89:20)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":89:21)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":89:30)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":89:33)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":89:47)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":89:13)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":89:48)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":90:34)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":90:13)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":91:39)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":91:13)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":91:59)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":92:38)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":92:32)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":92:13)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":92:46)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":93:13)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":96:13)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":93:25)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":93:58)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":93:59)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":93:68)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":93:82)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":93:17)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":93:88)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":94:13)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":95:17)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":100:31)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":100:55)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":100:62)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":100:60)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":100:46)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":100:69)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":100:72)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":100:83)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":100:88)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":100:103)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":100:113)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":100:114)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":100:117)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":100:26)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":100:13)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":100:118)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":101:13)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":104:13)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":101:17)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":101:31)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":101:44)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":101:47)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":101:61)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":102:13)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":103:17)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":106:57)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":106:13)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":106:18)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":106:28)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":106:41)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":106:52)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":106:53)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":108:30)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":108:36)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":108:23)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":108:13)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":108:40)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":109:13)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":112:13)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":109:17)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":110:13)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":111:28)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":111:18)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":111:17)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":113:30)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":113:36)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":113:23)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":113:13)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":113:40)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":114:13)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":117:13)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":114:17)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":115:13)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":116:28)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":116:18)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":116:17)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":119:16)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":120:9)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":123:9)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":120:13)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":120:30)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":121:9)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":122:26)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":122:13)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":131:5)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":139:5)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":132:9)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":132:13)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":134:25)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":134:31)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":134:38)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":134:47)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":134:55)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":134:20)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":134:9)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":134:63)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":135:9)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":138:9)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":135:13)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":135:26)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":135:25)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":136:9)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":137:19)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":137:13)
#loc174 = loc("/usr/include/string.h":149:1)
#loc175 = loc("/usr/include/string.h":150:14)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":159:18)
#loc177 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":147:1)
#loc178 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":170:1)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":149:5)
#loc180 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":149:12)
#loc181 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":150:5)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":150:37)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":151:12)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":151:5)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":152:5)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":152:10)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":153:1)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":159:5)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":159:12)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":161:5)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":169:5)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":162:9)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":162:13)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":164:25)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":164:31)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":164:38)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":164:47)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":164:55)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":164:20)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":164:9)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":164:63)
#loc202 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":165:9)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":168:9)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":165:13)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":165:26)
#loc206 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":165:25)
#loc207 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":166:9)
#loc208 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":167:19)
#loc209 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":167:13)
#loc210 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":172:1)
#loc211 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":175:1)
#loc212 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_open_18.cpp":174:5)
#loc213 = loc(fused[#loc1, #loc2])
#loc214 = loc(fused[#loc3, #loc4])
#loc215 = loc(fused[#loc5, #loc6])
#loc216 = loc(fused[#loc8, #loc9])
#loc217 = loc(fused[#loc10, #loc11])
#loc218 = loc(fused[#loc12, #loc13])
#loc219 = loc(fused[#loc14, #loc15])
#loc220 = loc(fused[#loc16, #loc17])
#loc221 = loc(fused[#loc18, #loc19])
#loc222 = loc(fused[#loc20, #loc21])
#loc223 = loc(fused[#loc22, #loc23])
#loc224 = loc(fused[#loc24, #loc25])
#loc225 = loc(fused[#loc26, #loc27])
#loc226 = loc(fused[#loc28, #loc29])
#loc227 = loc(fused[#loc30, #loc31])
#loc228 = loc(fused[#loc32, #loc33])
#loc229 = loc(fused[#loc34, #loc35])
#loc230 = loc(fused[#loc37, #loc36])
#loc231 = loc(fused[#loc38, #loc39])
#loc232 = loc(fused[#loc43, #loc44])
#loc233 = loc(fused[#loc45, #loc46])
#loc234 = loc(fused[#loc51, #loc52])
#loc235 = loc(fused[#loc53, #loc54])
#loc236 = loc(fused[#loc55, #loc56])
#loc237 = loc(fused[#loc57, #loc54])
#loc238 = loc(fused[#loc59, #loc60])
#loc239 = loc(fused[#loc62, #loc63])
#loc240 = loc(fused[#loc64, #loc65])
#loc241 = loc(fused[#loc68, #loc66])
#loc242 = loc(fused[#loc72, #loc73])
#loc243 = loc(fused[#loc77, #loc78])
#loc244 = loc(fused[#loc79, #loc80])
#loc245 = loc(fused[#loc82, #loc83])
#loc246 = loc(fused[#loc84, #loc85])
#loc247 = loc(fused[#loc86, #loc87])
#loc248 = loc(fused[#loc88, #loc80])
#loc249 = loc(fused[#loc94, #loc95])
#loc250 = loc(fused[#loc96, #loc97])
#loc251 = loc(fused[#loc98, #loc99])
#loc252 = loc(fused[#loc98, #loc100])
#loc253 = loc(fused[#loc96, #loc101])
#loc254 = loc(fused[#loc104, #loc105])
#loc255 = loc(fused[#loc106, #loc107])
#loc256 = loc(fused[#loc108, #loc109])
#loc257 = loc(fused[#loc111, #loc112])
#loc258 = loc(fused[#loc113, #loc107])
#loc259 = loc(fused[#loc119, #loc120])
#loc260 = loc(fused[#loc118, #loc120])
#loc261 = loc(fused[#loc117, #loc120])
#loc262 = loc(fused[#loc116, #loc115])
#loc263 = loc(fused[#loc125, #loc126])
#loc264 = loc(fused[#loc127, #loc128])
#loc265 = loc(fused[#loc130, #loc128])
#loc266 = loc(fused[#loc133, #loc131])
#loc267 = loc(fused[#loc137, #loc138])
#loc268 = loc(fused[#loc139, #loc140])
#loc269 = loc(fused[#loc142, #loc140])
#loc270 = loc(fused[#loc145, #loc143])
#loc271 = loc(fused[#loc147, #loc148])
#loc272 = loc(fused[#loc149, #loc150])
#loc273 = loc(fused[#loc151, #loc148])
#loc274 = loc(fused[#loc154, #loc155])
#loc275 = loc(fused[#loc156, #loc157])
#loc276 = loc(fused[#loc159, #loc160])
#loc277 = loc(fused[#loc161, #loc162])
#loc278 = loc(fused[#loc164, #loc165])
#loc279 = loc(fused[#loc166, #loc167])
#loc280 = loc(fused[#loc168, #loc169])
#loc281 = loc(fused[#loc171, #loc167])
#loc282 = loc(fused[#loc174, #loc175])
#loc283 = loc(fused[#loc177, #loc178])
#loc284 = loc(fused[#loc179, #loc180])
#loc285 = loc(fused[#loc181, #loc182])
#loc286 = loc(fused[#loc184, #loc183])
#loc287 = loc(fused[#loc185, #loc186])
#loc288 = loc(fused[#loc190, #loc191])
#loc289 = loc(fused[#loc192, #loc193])
#loc290 = loc(fused[#loc195, #loc196])
#loc291 = loc(fused[#loc197, #loc198])
#loc292 = loc(fused[#loc200, #loc201])
#loc293 = loc(fused[#loc202, #loc203])
#loc294 = loc(fused[#loc204, #loc205])
#loc295 = loc(fused[#loc207, #loc203])
#loc296 = loc(fused[#loc210, #loc211])
