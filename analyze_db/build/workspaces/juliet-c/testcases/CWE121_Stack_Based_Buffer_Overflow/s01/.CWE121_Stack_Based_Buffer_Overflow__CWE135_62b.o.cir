!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":30:16)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":30:24)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":41:20)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":41:28)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":48:20)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":48:28)
#loc23 = loc(fused[#loc4, #loc5])
#loc26 = loc(fused[#loc11, #loc12])
#loc29 = loc(fused[#loc17, #loc18])
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<[#cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<0> : !s32i]> : !cir.array<!s32i x 43> {alignment = 4 : i64} loc(#loc1)
  cir.func @_ZN45CWE121_Stack_Based_Buffer_Overflow__CWE135_629badSourceERPv(%arg0: !cir.ptr<!cir.ptr<!void>> loc(fused[#loc4, #loc5])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc23)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!cir.ptr<!cir.ptr<!void>>> loc(#loc6)
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 43>> loc(#loc1)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 43>>), !cir.ptr<!s32i> loc(#loc1)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc1)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, !cir.ptr<!cir.ptr<!void>> loc(#loc7)
    cir.store %3, %4 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc24)
    cir.return loc(#loc3)
  } loc(#loc22)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\00" : !cir.array<!s8i x 43>> : !cir.array<!s8i x 43> {alignment = 1 : i64} loc(#loc8)
  cir.func @_ZN45CWE121_Stack_Based_Buffer_Overflow__CWE135_6213goodG2BSourceERPv(%arg0: !cir.ptr<!cir.ptr<!void>> loc(fused[#loc11, #loc12])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc26)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!cir.ptr<!cir.ptr<!void>>> loc(#loc13)
    %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 43>> loc(#loc8)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 43>>), !cir.ptr<!s8i> loc(#loc8)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc8)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, !cir.ptr<!cir.ptr<!void>> loc(#loc14)
    cir.store %3, %4 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc27)
    cir.return loc(#loc10)
  } loc(#loc25)
  cir.func @_ZN45CWE121_Stack_Based_Buffer_Overflow__CWE135_6213goodB2GSourceERPv(%arg0: !cir.ptr<!cir.ptr<!void>> loc(fused[#loc17, #loc18])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc29)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!cir.ptr<!cir.ptr<!void>>> loc(#loc19)
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 43>> loc(#loc20)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 43>>), !cir.ptr<!s32i> loc(#loc20)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc20)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!void>>>, !cir.ptr<!cir.ptr<!void>> loc(#loc21)
    cir.store %3, %4 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc30)
    cir.return loc(#loc16)
  } loc(#loc28)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":33:20)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":30:1)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":34:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":31:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":33:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":44:20)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":41:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":45:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":42:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":44:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":48:1)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":52:1)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":49:1)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":51:20)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_62b.cpp":51:5)
#loc22 = loc(fused[#loc2, #loc3])
#loc24 = loc(fused[#loc7, #loc1])
#loc25 = loc(fused[#loc9, #loc10])
#loc27 = loc(fused[#loc14, #loc8])
#loc28 = loc(fused[#loc15, #loc16])
#loc30 = loc(fused[#loc21, #loc20])
