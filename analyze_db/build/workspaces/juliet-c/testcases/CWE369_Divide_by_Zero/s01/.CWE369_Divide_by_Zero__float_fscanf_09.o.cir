!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_09.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc170)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc171)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%f\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printIntLine(!s32i) loc(#loc173)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fscanf_09_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc175)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc14)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc176)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc170)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc18)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc18)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc20)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc172)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc20)
      } loc(#loc178)
    } loc(#loc177)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc170)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc24)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc24)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc182)
          %6 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc30)
          %7 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc31)
          %8 = cir.cast(floating, %7 : !cir.float), !cir.double loc(#loc31)
          %9 = cir.binop(div, %6, %8) : !cir.double loc(#loc183)
          %10 = cir.cast(float_to_int, %9 : !cir.double), !s32i loc(#loc183)
          cir.store %10, %5 : !s32i, !cir.ptr<!s32i> loc(#loc182)
          %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc32)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc33)
        } loc(#loc181)
      } loc(#loc180)
    } loc(#loc179)
    cir.return loc(#loc11)
  } loc(#loc174)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fscanf_09_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc185)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc186)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc187)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc188)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    cir.return loc(#loc35)
  } loc(#loc184)
  cir.global "private" constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc189)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc190)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc49)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc192)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc54)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc193)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc170)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc58)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc58)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc60)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc172)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc61)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc62)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc62)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc60)
      } loc(#loc195)
    } loc(#loc194)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc189)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc65)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc65)
      cir.if %4 {
        %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc48)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc48)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc69)
      } else {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc72)
          %6 = cir.cast(floating, %5 : !cir.float), !cir.double loc(#loc72)
          %7 = cir.fabs %6 : !cir.double loc(#loc72)
          %8 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc73)
          %9 = cir.cmp(gt, %7, %8) : !cir.double, !cir.bool loc(#loc199)
          cir.if %9 {
            %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc201)
            %11 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc80)
            %12 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc81)
            %13 = cir.cast(floating, %12 : !cir.float), !cir.double loc(#loc81)
            %14 = cir.binop(div, %11, %13) : !cir.double loc(#loc202)
            %15 = cir.cast(float_to_int, %14 : !cir.double), !s32i loc(#loc202)
            cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc201)
            %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc82)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc83)
          } else {
            %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc49)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc49)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc84)
          } loc(#loc200)
        } loc(#loc198)
      } loc(#loc197)
    } loc(#loc196)
    cir.return loc(#loc51)
  } loc(#loc191)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc204)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc89)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc205)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc170)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc93)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc93)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc95)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc172)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc96)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc97)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc97)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!cir.float>) -> !s32i loc(#loc95)
      } loc(#loc207)
    } loc(#loc206)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc170)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc100)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc100)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc104)
          %6 = cir.cast(floating, %5 : !cir.float), !cir.double loc(#loc104)
          %7 = cir.fabs %6 : !cir.double loc(#loc104)
          %8 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc105)
          %9 = cir.cmp(gt, %7, %8) : !cir.double, !cir.bool loc(#loc211)
          cir.if %9 {
            %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc213)
            %11 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc112)
            %12 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc113)
            %13 = cir.cast(floating, %12 : !cir.float), !cir.double loc(#loc113)
            %14 = cir.binop(div, %11, %13) : !cir.double loc(#loc214)
            %15 = cir.cast(float_to_int, %14 : !cir.double), !s32i loc(#loc214)
            cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc213)
            %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc114)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc115)
          } else {
            %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc116)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc116)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc117)
          } loc(#loc212)
        } loc(#loc210)
      } loc(#loc209)
    } loc(#loc208)
    cir.return loc(#loc86)
  } loc(#loc203)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc216)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc122)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc217)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc189)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc126)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc126)
      cir.if %4 {
        %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc130)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc130)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc131)
      } else {
        %5 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc132)
        cir.store %5, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc220)
      } loc(#loc219)
    } loc(#loc218)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc170)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc136)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc136)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc224)
          %6 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc142)
          %7 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc143)
          %8 = cir.cast(floating, %7 : !cir.float), !cir.double loc(#loc143)
          %9 = cir.binop(div, %6, %8) : !cir.double loc(#loc225)
          %10 = cir.cast(float_to_int, %9 : !cir.double), !s32i loc(#loc225)
          cir.store %10, %5 : !s32i, !cir.ptr<!s32i> loc(#loc224)
          %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc144)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc145)
        } loc(#loc223)
      } loc(#loc222)
    } loc(#loc221)
    cir.return loc(#loc119)
  } loc(#loc215)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc227)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc150)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc228)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc170)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc154)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc154)
      cir.if %4 {
        %5 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc156)
        cir.store %5, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc231)
      } loc(#loc230)
    } loc(#loc229)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc170)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc160)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc160)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc235)
          %6 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc166)
          %7 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc167)
          %8 = cir.cast(floating, %7 : !cir.float), !cir.double loc(#loc167)
          %9 = cir.binop(div, %6, %8) : !cir.double loc(#loc236)
          %10 = cir.cast(float_to_int, %9 : !cir.double), !s32i loc(#loc236)
          cir.store %10, %5 : !s32i, !cir.ptr<!s32i> loc(#loc235)
          %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc168)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc169)
        } loc(#loc234)
      } loc(#loc233)
    } loc(#loc232)
    cir.return loc(#loc147)
  } loc(#loc226)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fscanf_09.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":109:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":109:18)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":32:24)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":24:1)
#loc11 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":42:1)
#loc12 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":26:5)
#loc13 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":26:11)
#loc14 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":28:12)
#loc15 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":28:5)
#loc16 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":29:5)
#loc17 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":33:5)
#loc18 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":29:8)
#loc19 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":30:5)
#loc20 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":32:9)
#loc21 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":32:17)
#loc22 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":34:5)
#loc23 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":41:5)
#loc24 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":34:8)
#loc25 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":35:5)
#loc26 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":36:9)
#loc27 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":40:9)
#loc28 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":38:13)
#loc29 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":38:44)
#loc30 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":38:32)
#loc31 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":38:40)
#loc32 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":39:26)
#loc33 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":39:13)
#loc34 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":152:1)
#loc35 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":158:1)
#loc36 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":154:5)
#loc37 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":154:14)
#loc38 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":155:5)
#loc39 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":155:14)
#loc40 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":156:5)
#loc41 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":156:14)
#loc42 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":157:5)
#loc43 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":157:14)
#loc44 = loc("../../../testcasesupport/std_testcase.h":110:1)
#loc45 = loc("../../../testcasesupport/std_testcase.h":110:18)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":62:19)
#loc49 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":74:23)
#loc50 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":49:1)
#loc51 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":77:1)
#loc52 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":51:5)
#loc53 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":51:11)
#loc54 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":53:12)
#loc55 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":53:5)
#loc56 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":54:5)
#loc57 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":58:5)
#loc58 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":54:8)
#loc59 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":55:5)
#loc60 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":57:9)
#loc61 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":57:17)
#loc62 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":57:24)
#loc63 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":59:5)
#loc64 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":76:5)
#loc65 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":59:8)
#loc66 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":60:5)
#loc67 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":63:5)
#loc68 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":65:5)
#loc69 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":62:9)
#loc70 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":67:9)
#loc71 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":75:9)
#loc72 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":67:17)
#loc73 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":67:25)
#loc74 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":67:12)
#loc75 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":68:9)
#loc76 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":71:9)
#loc77 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":73:9)
#loc78 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":69:13)
#loc79 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":69:44)
#loc80 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":69:32)
#loc81 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":69:40)
#loc82 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":70:26)
#loc83 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":70:13)
#loc84 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":74:13)
#loc85 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":80:1)
#loc86 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":103:1)
#loc87 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":82:5)
#loc88 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":82:11)
#loc89 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":84:12)
#loc90 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":84:5)
#loc91 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":85:5)
#loc92 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":89:5)
#loc93 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":85:8)
#loc94 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":86:5)
#loc95 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":88:9)
#loc96 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":88:17)
#loc97 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":88:24)
#loc98 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":90:5)
#loc99 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":102:5)
#loc100 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":90:8)
#loc101 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":91:5)
#loc102 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":93:9)
#loc103 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":101:9)
#loc104 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":93:17)
#loc105 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":93:25)
#loc106 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":93:12)
#loc107 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":94:9)
#loc108 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":97:9)
#loc109 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":99:9)
#loc110 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":95:13)
#loc111 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":95:44)
#loc112 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":95:32)
#loc113 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":95:40)
#loc114 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":96:26)
#loc115 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":96:13)
#loc116 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":100:23)
#loc117 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":100:13)
#loc118 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":106:1)
#loc119 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":129:1)
#loc120 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":108:5)
#loc121 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":108:11)
#loc122 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":110:12)
#loc123 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":110:5)
#loc124 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":111:5)
#loc125 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":120:5)
#loc126 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":111:8)
#loc127 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":112:5)
#loc128 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":115:5)
#loc129 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":117:5)
#loc130 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":114:19)
#loc131 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":114:9)
#loc132 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":119:16)
#loc133 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":119:9)
#loc134 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":121:5)
#loc135 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":128:5)
#loc136 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":121:8)
#loc137 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":122:5)
#loc138 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":123:9)
#loc139 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":127:9)
#loc140 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":125:13)
#loc141 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":125:44)
#loc142 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":125:32)
#loc143 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":125:40)
#loc144 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":126:26)
#loc145 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":126:13)
#loc146 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":132:1)
#loc147 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":150:1)
#loc148 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":134:5)
#loc149 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":134:11)
#loc150 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":136:12)
#loc151 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":136:5)
#loc152 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":137:5)
#loc153 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":141:5)
#loc154 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":137:8)
#loc155 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":138:5)
#loc156 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":140:16)
#loc157 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":140:9)
#loc158 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":142:5)
#loc159 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":149:5)
#loc160 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":142:8)
#loc161 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":143:5)
#loc162 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":144:9)
#loc163 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":148:9)
#loc164 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":146:13)
#loc165 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":146:44)
#loc166 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":146:32)
#loc167 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":146:40)
#loc168 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":147:26)
#loc169 = loc("CWE369_Divide_by_Zero__float_fscanf_09.c":147:13)
#loc170 = loc(fused[#loc1, #loc2])
#loc171 = loc(fused[#loc3, #loc4])
#loc172 = loc(fused[#loc5, #loc6])
#loc173 = loc(fused[#loc8, #loc9])
#loc174 = loc(fused[#loc10, #loc11])
#loc175 = loc(fused[#loc12, #loc13])
#loc176 = loc(fused[#loc15, #loc14])
#loc177 = loc(fused[#loc16, #loc17])
#loc178 = loc(fused[#loc19, #loc17])
#loc179 = loc(fused[#loc22, #loc23])
#loc180 = loc(fused[#loc25, #loc23])
#loc181 = loc(fused[#loc26, #loc27])
#loc182 = loc(fused[#loc28, #loc29])
#loc183 = loc(fused[#loc30, #loc31])
#loc184 = loc(fused[#loc34, #loc35])
#loc185 = loc(fused[#loc36, #loc37])
#loc186 = loc(fused[#loc38, #loc39])
#loc187 = loc(fused[#loc40, #loc41])
#loc188 = loc(fused[#loc42, #loc43])
#loc189 = loc(fused[#loc44, #loc45])
#loc190 = loc(fused[#loc46, #loc47])
#loc191 = loc(fused[#loc50, #loc51])
#loc192 = loc(fused[#loc52, #loc53])
#loc193 = loc(fused[#loc55, #loc54])
#loc194 = loc(fused[#loc56, #loc57])
#loc195 = loc(fused[#loc59, #loc57])
#loc196 = loc(fused[#loc63, #loc64])
#loc197 = loc(fused[#loc66, #loc67, #loc68, #loc64])
#loc198 = loc(fused[#loc70, #loc71])
#loc199 = loc(fused[#loc74, #loc73])
#loc200 = loc(fused[#loc75, #loc76, #loc77, #loc71])
#loc201 = loc(fused[#loc78, #loc79])
#loc202 = loc(fused[#loc80, #loc81])
#loc203 = loc(fused[#loc85, #loc86])
#loc204 = loc(fused[#loc87, #loc88])
#loc205 = loc(fused[#loc90, #loc89])
#loc206 = loc(fused[#loc91, #loc92])
#loc207 = loc(fused[#loc94, #loc92])
#loc208 = loc(fused[#loc98, #loc99])
#loc209 = loc(fused[#loc101, #loc99])
#loc210 = loc(fused[#loc102, #loc103])
#loc211 = loc(fused[#loc106, #loc105])
#loc212 = loc(fused[#loc107, #loc108, #loc109, #loc103])
#loc213 = loc(fused[#loc110, #loc111])
#loc214 = loc(fused[#loc112, #loc113])
#loc215 = loc(fused[#loc118, #loc119])
#loc216 = loc(fused[#loc120, #loc121])
#loc217 = loc(fused[#loc123, #loc122])
#loc218 = loc(fused[#loc124, #loc125])
#loc219 = loc(fused[#loc127, #loc128, #loc129, #loc125])
#loc220 = loc(fused[#loc133, #loc132])
#loc221 = loc(fused[#loc134, #loc135])
#loc222 = loc(fused[#loc137, #loc135])
#loc223 = loc(fused[#loc138, #loc139])
#loc224 = loc(fused[#loc140, #loc141])
#loc225 = loc(fused[#loc142, #loc143])
#loc226 = loc(fused[#loc146, #loc147])
#loc227 = loc(fused[#loc148, #loc149])
#loc228 = loc(fused[#loc151, #loc150])
#loc229 = loc(fused[#loc152, #loc153])
#loc230 = loc(fused[#loc155, #loc153])
#loc231 = loc(fused[#loc157, #loc156])
#loc232 = loc(fused[#loc158, #loc159])
#loc233 = loc(fused[#loc161, #loc159])
#loc234 = loc(fused[#loc162, #loc163])
#loc235 = loc(fused[#loc164, #loc165])
#loc236 = loc(fused[#loc166, #loc167])
