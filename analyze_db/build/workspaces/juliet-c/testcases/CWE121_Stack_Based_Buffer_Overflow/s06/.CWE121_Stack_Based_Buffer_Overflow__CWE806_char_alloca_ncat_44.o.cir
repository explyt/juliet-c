!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":23:21)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":23:28)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":53:25)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":53:32)
#loc101 = loc(fused[#loc9, #loc10])
#loc115 = loc(fused[#loc56, #loc57])
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc97)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc98)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc99)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc9, #loc10])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc102)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc101)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    cir.br ^bb1 loc(#loc103)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc102)
    cir.store %2, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc102)
    %3 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc16)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc17)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %6 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc19)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc19)
    %9 = cir.call @strncat(%4, %5, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc16)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc21)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc22)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc22)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc24)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc24)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc104)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc26)
    cir.br ^bb2 loc(#loc15)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc8)
  } loc(#loc100)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc106)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc107)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc108)
    %3 = cir.get_global @badSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc32)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc107)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc34)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc34)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc34)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc34)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc34)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
    %14 = cir.const #cir.int<65> : !s32i loc(#loc38)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc39)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc39)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc39)
    cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc110)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc43)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc45)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc45)
    %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc47)
    cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc111)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc48)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    cir.call %26(%27) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc48)
    cir.return loc(#loc28)
  } loc(#loc105)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc113)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc52)
    cir.return loc(#loc51)
  } loc(#loc112)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc56, #loc57])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc116)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc115)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc60)
    cir.br ^bb1 loc(#loc117)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc116)
    cir.store %2, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc116)
    %3 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc63)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc64)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    %6 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc66)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc66)
    %9 = cir.call @strncat(%4, %5, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc63)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc68)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc69)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc69)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc71)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc71)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc118)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    cir.br ^bb2 loc(#loc62)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc55)
  } loc(#loc114)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc120)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc121)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc122)
    %3 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc79)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc121)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc81)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc81)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc81)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc81)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc81)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc81)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc81)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
    %14 = cir.const #cir.int<65> : !s32i loc(#loc85)
    %15 = cir.const #cir.int<50> : !s32i loc(#loc86)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc86)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc86)
    cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc124)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc90)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    %22 = cir.const #cir.int<50> : !s32i loc(#loc92)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc92)
    %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc94)
    cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc125)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc95)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
    cir.call %26(%27) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc95)
    cir.return loc(#loc75)
  } loc(#loc119)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":0:0)
#loc1 = loc("/usr/include/string.h":152:1)
#loc2 = loc("/usr/include/string.h":153:29)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":23:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":32:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":26:9)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":26:25)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":24:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":25:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":31:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":28:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":28:17)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":28:23)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":28:29)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":28:36)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":29:22)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":29:14)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":29:17)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":29:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":30:19)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":30:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":34:1)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":46:1)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":36:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":36:12)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":38:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":38:32)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":39:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":39:33)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":40:12)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":40:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":42:12)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":42:18)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":42:23)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":42:27)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":42:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":42:28)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":43:19)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":43:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":43:10)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":43:14)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":43:15)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":45:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":45:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":76:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":79:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":78:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":78:13)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":53:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":62:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":56:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":56:25)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":54:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":55:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":61:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":58:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":58:17)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":58:23)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":58:29)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":58:36)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":59:22)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":59:14)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":59:17)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":59:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":60:19)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":60:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":64:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":74:1)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":66:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":66:12)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":67:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":67:32)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":68:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":68:33)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":69:12)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":69:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":71:12)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":71:18)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":71:23)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":71:26)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":71:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":71:27)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":72:18)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":72:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":72:10)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":72:13)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":72:14)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":73:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_44.c":73:13)
#loc97 = loc(fused[#loc1, #loc2])
#loc98 = loc(fused[#loc3, #loc4])
#loc99 = loc(fused[#loc5, #loc6])
#loc100 = loc(fused[#loc7, #loc8])
#loc102 = loc(fused[#loc11, #loc12])
#loc103 = loc(fused[#loc14, #loc15])
#loc104 = loc(fused[#loc24, #loc21])
#loc105 = loc(fused[#loc27, #loc28])
#loc106 = loc(fused[#loc29, #loc30])
#loc107 = loc(fused[#loc31, #loc32])
#loc108 = loc(fused[#loc33, #loc34])
#loc109 = loc(fused[#loc36, #loc35])
#loc110 = loc(fused[#loc41, #loc42])
#loc111 = loc(fused[#loc44, #loc43])
#loc112 = loc(fused[#loc50, #loc51])
#loc113 = loc(fused[#loc52, #loc53])
#loc114 = loc(fused[#loc54, #loc55])
#loc116 = loc(fused[#loc58, #loc59])
#loc117 = loc(fused[#loc61, #loc62])
#loc118 = loc(fused[#loc71, #loc68])
#loc119 = loc(fused[#loc74, #loc75])
#loc120 = loc(fused[#loc76, #loc77])
#loc121 = loc(fused[#loc78, #loc79])
#loc122 = loc(fused[#loc80, #loc81])
#loc123 = loc(fused[#loc83, #loc82])
#loc124 = loc(fused[#loc88, #loc89])
#loc125 = loc(fused[#loc91, #loc90])
