!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":21:75)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":21:79)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":53:79)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":53:83)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":97:10)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":97:14)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":97:20)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":97:32)
#loc165 = loc(fused[#loc11, #loc12])
#loc188 = loc(fused[#loc72, #loc73])
#loc211 = loc(fused[#loc131, #loc132])
#loc212 = loc(fused[#loc133, #loc134])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc160)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc161)
  cir.func private @printIntLine(!s32i) loc(#loc162)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc163)
  cir.func @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41_badSink(%arg0: !s32i loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc165)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc13)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc167)
      %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc168)
      %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc21)
      %6 = cir.const #cir.int<4> : !u64i loc(#loc169)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc170)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc171)
      cir.store %9, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc172)
      cir.scope {
        %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc29)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc174)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc32)
          %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc33)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
        } loc(#loc175)
      } loc(#loc173)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc36)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc36)
        cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc177)
        cir.for : cond {
          %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc38)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc39)
          %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc178)
          cir.condition(%22) loc(#loc40)
        } body {
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc42)
            %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
            %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc44)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc45)
            cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc180)
          } loc(#loc179)
          cir.yield loc(#loc35)
        } step {
          %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc46)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc47)
          cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc181)
          cir.yield loc(#loc176)
        } loc(#loc176)
      } loc(#loc176)
      %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc49)
      %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc50)
      %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc51)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc52)
      %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc53)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
    } loc(#loc166)
    cir.return loc(#loc10)
  } loc(#loc164)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc182)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc183)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc58)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc185)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc64)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc66)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc183)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc67)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc58)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc58)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc66)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41_badSink(%9) : (!s32i) -> () loc(#loc69)
    cir.return loc(#loc60)
  } loc(#loc184)
  cir.func @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41_goodG2BSink(%arg0: !s32i loc(fused[#loc72, #loc73])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc188)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc190)
      %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc191)
      %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc81)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc82)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc82)
      %6 = cir.const #cir.int<4> : !u64i loc(#loc192)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc193)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc81)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc194)
      cir.store %9, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc195)
      cir.scope {
        %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc90)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc90)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc197)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc92)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc93)
          %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc94)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc92)
        } loc(#loc198)
      } loc(#loc196)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc97)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc97)
        cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc200)
        cir.for : cond {
          %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc99)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc100)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc100)
          %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc201)
          cir.condition(%22) loc(#loc101)
        } body {
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc103)
            %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc104)
            %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc105)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc106)
            cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc203)
          } loc(#loc202)
          cir.yield loc(#loc96)
        } step {
          %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc107)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc108)
          cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc204)
          cir.yield loc(#loc199)
        } loc(#loc199)
      } loc(#loc199)
      %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc109)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc110)
      %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc111)
      %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc109)
      cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc112)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc113)
      %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc114)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc114)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc113)
    } loc(#loc189)
    cir.return loc(#loc71)
  } loc(#loc187)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc117)
    cir.return loc(#loc116)
  } loc(#loc205)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc207)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc208)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc128)
  cir.func @main(%arg0: !s32i loc(fused[#loc131, #loc132]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc133, #loc134])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc211)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc212)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc130)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc135)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc136)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc137)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc137)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc138)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc125)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc125)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41_good() : () -> () loc(#loc140)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc126)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc126)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc127)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc143)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41_bad() : () -> () loc(#loc144)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc128)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc128)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc147)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    cir.return %17 : !s32i loc(#loc215)
  } loc(#loc210)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc217)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc153)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc154)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc156)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41_goodG2BSink(%4) : (!s32i) -> () loc(#loc159)
    cir.return loc(#loc150)
  } loc(#loc216)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":21:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":37:1)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":22:1)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":23:5)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":36:5)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":24:9)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":24:16)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":25:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":25:14)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":28:28)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":28:35)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":28:42)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":28:52)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":28:53)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":28:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":29:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":29:43)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":29:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":29:27)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":29:33)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":29:34)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":29:40)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":29:39)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":30:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":33:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":30:18)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":30:14)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":30:21)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":30:33)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":30:23)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":31:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":32:29)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":32:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":32:24)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":32:25)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":30:40)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":30:39)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":34:22)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":34:33)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":34:34)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":34:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":35:9)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":35:14)
#loc54 = loc("/usr/include/stdio.h":463:1)
#loc55 = loc("/usr/include/stdio.h":465:33)
#loc56 = loc("/usr/include/stdio.h":149:1)
#loc57 = loc("/usr/include/stdio.h":149:14)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":45:19)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":39:1)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":47:1)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":41:5)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":41:9)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":43:13)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":43:12)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":43:5)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":45:5)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":45:12)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":46:74)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":46:5)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":53:1)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":69:1)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":54:1)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":55:5)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":68:5)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":56:9)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":56:16)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":57:9)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":57:14)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":60:28)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":60:35)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":60:42)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":60:52)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":60:53)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":60:9)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":61:9)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":61:43)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":61:13)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":61:27)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":61:33)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":61:34)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":61:40)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":61:39)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":62:9)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":65:9)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":62:18)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":62:14)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":62:21)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":62:33)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":62:23)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":63:9)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":64:29)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":64:13)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":64:24)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":64:25)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":62:40)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":62:39)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":66:22)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":66:33)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":66:34)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":66:9)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":67:9)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":67:14)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":82:1)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":85:1)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":84:5)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":84:13)
#loc119 = loc("/usr/include/stdlib.h":575:1)
#loc120 = loc("/usr/include/stdlib.h":575:41)
#loc121 = loc("/usr/include/time.h":76:1)
#loc122 = loc("/usr/include/time.h":76:38)
#loc123 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc124 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":102:15)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":104:15)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":107:15)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":109:15)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":97:1)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":112:1)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":98:1)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":100:27)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":100:22)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":100:5)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":102:5)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":103:5)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":103:71)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":104:5)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":107:5)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":108:5)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":108:70)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":109:5)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":111:12)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":111:5)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":72:1)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":80:1)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":74:5)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":74:9)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":76:13)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":76:12)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":76:5)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":78:12)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":78:5)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":79:78)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_41.c":79:5)
#loc160 = loc(fused[#loc1, #loc2])
#loc161 = loc(fused[#loc3, #loc4])
#loc162 = loc(fused[#loc5, #loc6])
#loc163 = loc(fused[#loc7, #loc8])
#loc164 = loc(fused[#loc9, #loc10])
#loc166 = loc(fused[#loc14, #loc15])
#loc167 = loc(fused[#loc16, #loc17])
#loc168 = loc(fused[#loc18, #loc19])
#loc169 = loc(fused[#loc22, #loc23])
#loc170 = loc(fused[#loc21, #loc23])
#loc171 = loc(fused[#loc20, #loc24])
#loc172 = loc(fused[#loc25, #loc24])
#loc173 = loc(fused[#loc26, #loc27])
#loc174 = loc(fused[#loc28, #loc29])
#loc175 = loc(fused[#loc30, #loc27])
#loc176 = loc(fused[#loc34, #loc35])
#loc177 = loc(fused[#loc37, #loc36])
#loc178 = loc(fused[#loc38, #loc39])
#loc179 = loc(fused[#loc41, #loc35])
#loc180 = loc(fused[#loc43, #loc42])
#loc181 = loc(fused[#loc47, #loc46])
#loc182 = loc(fused[#loc54, #loc55])
#loc183 = loc(fused[#loc56, #loc57])
#loc184 = loc(fused[#loc59, #loc60])
#loc185 = loc(fused[#loc61, #loc62])
#loc186 = loc(fused[#loc65, #loc63])
#loc187 = loc(fused[#loc70, #loc71])
#loc189 = loc(fused[#loc75, #loc76])
#loc190 = loc(fused[#loc77, #loc78])
#loc191 = loc(fused[#loc79, #loc80])
#loc192 = loc(fused[#loc83, #loc84])
#loc193 = loc(fused[#loc82, #loc84])
#loc194 = loc(fused[#loc81, #loc85])
#loc195 = loc(fused[#loc86, #loc85])
#loc196 = loc(fused[#loc87, #loc88])
#loc197 = loc(fused[#loc89, #loc90])
#loc198 = loc(fused[#loc91, #loc88])
#loc199 = loc(fused[#loc95, #loc96])
#loc200 = loc(fused[#loc98, #loc97])
#loc201 = loc(fused[#loc99, #loc100])
#loc202 = loc(fused[#loc102, #loc96])
#loc203 = loc(fused[#loc104, #loc103])
#loc204 = loc(fused[#loc108, #loc107])
#loc205 = loc(fused[#loc115, #loc116])
#loc206 = loc(fused[#loc117, #loc118])
#loc207 = loc(fused[#loc119, #loc120])
#loc208 = loc(fused[#loc121, #loc122])
#loc209 = loc(fused[#loc123, #loc124])
#loc210 = loc(fused[#loc129, #loc130])
#loc213 = loc(fused[#loc140, #loc141])
#loc214 = loc(fused[#loc144, #loc145])
#loc215 = loc(fused[#loc148, #loc147])
#loc216 = loc(fused[#loc149, #loc150])
#loc217 = loc(fused[#loc151, #loc152])
#loc218 = loc(fused[#loc155, #loc153])
#loc219 = loc(fused[#loc157, #loc156])
