!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc79 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":134:10)
#loc80 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":134:14)
#loc81 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":134:20)
#loc82 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":134:32)
#loc251 = loc(fused[#loc79, #loc80])
#loc252 = loc(fused[#loc81, #loc82])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc219)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc220)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Fixed String\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc7)
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc222)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc223)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"We have a match!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc12)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc224)
  cir.func no_proto @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc226)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc19)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc20)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc227)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc228)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc19)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc229)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc230)
    cir.scope {
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
      %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc232)
      cir.if %21 {
        %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc30)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc31)
        %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc32)
        cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
      } loc(#loc233)
    } loc(#loc231)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc33)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc234)
    %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc37)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc7)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc7)
    %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc37)
    cir.scope {
      %18 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc222)
      %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc41)
      %20 = cir.const #cir.int<5> : !s32i loc(#loc42)
      %21 = cir.cmp(eq, %19, %20) : !s32i, !cir.bool loc(#loc236)
      cir.if %21 {
        cir.scope {
          cir.for : cond {
            %25 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
            %26 = cir.load %25 : !cir.ptr<!s8i>, !s8i loc(#loc47)
            %27 = cir.cast(integral, %26 : !s8i), !s32i loc(#loc47)
            %28 = cir.const #cir.int<0> : !s32i loc(#loc48)
            %29 = cir.cmp(ne, %27, %28) : !s32i, !cir.bool loc(#loc239)
            cir.condition(%29) loc(#loc49)
          } body {
            cir.scope {
              cir.scope {
                %25 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
                %26 = cir.load %25 : !cir.ptr<!s8i>, !s8i loc(#loc54)
                %27 = cir.cast(integral, %26 : !s8i), !s32i loc(#loc54)
                %28 = cir.const #cir.int<83> : !s32i loc(#loc55)
                %29 = cir.cmp(eq, %27, %28) : !s32i, !cir.bool loc(#loc242)
                cir.if %29 {
                  %30 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc12)
                  %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc12)
                  cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc57)
                  cir.break loc(#loc58)
                } loc(#loc243)
              } loc(#loc241)
            } loc(#loc240)
            cir.yield loc(#loc45)
          } step {
            %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
            %26 = cir.const #cir.int<1> : !s32i loc(#loc244)
            %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc244)
            cir.store %27, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc244)
            cir.yield loc(#loc238)
          } loc(#loc238)
        } loc(#loc238)
        %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc61)
        %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
        %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
        cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
      } loc(#loc237)
    } loc(#loc235)
    cir.return loc(#loc16)
  } loc(#loc225)
  cir.func no_proto @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc246)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc247)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc64)
  } loc(#loc245)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc248)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc249)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc76)
  cir.func @main(%arg0: !s32i loc(fused[#loc79, #loc80]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc81, #loc82])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc251)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc252)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc78)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc83)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc84)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc85)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc85)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc86)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc73)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %8 = cir.get_global @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc253)
    cir.call @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07_good() : () -> () loc(#loc88)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc74)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc75)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %13 = cir.get_global @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc254)
    cir.call @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07_bad() : () -> () loc(#loc92)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc76)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc95)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    cir.return %17 : !s32i loc(#loc255)
  } loc(#loc250)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc97)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc256)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc258)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc104)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc105)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc105)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc259)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc260)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc104)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc261)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc262)
    cir.scope {
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc113)
      %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc264)
      cir.if %21 {
        %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc115)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc116)
        %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc117)
        cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc115)
      } loc(#loc265)
    } loc(#loc263)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc118)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc121)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc266)
    %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc122)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc124)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc124)
    %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc122)
    cir.scope {
      %18 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc222)
      %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc127)
      %20 = cir.const #cir.int<5> : !s32i loc(#loc128)
      %21 = cir.cmp(ne, %19, %20) : !s32i, !cir.bool loc(#loc268)
      cir.if %21 {
        %22 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc97)
        %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc97)
        cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc132)
      } else {
        cir.scope {
          %22 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc271)
          cir.scope {
            %26 = cir.const #cir.int<0> : !s32i loc(#loc139)
            %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc139)
            cir.store %27, %22 : !u64i, !cir.ptr<!u64i> loc(#loc273)
            cir.for : cond {
              %28 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc141)
              %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc142)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
              %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc142)
              %32 = cir.cmp(lt, %28, %31) : !u64i, !cir.bool loc(#loc274)
              cir.condition(%32) loc(#loc145)
            } body {
              cir.scope {
                cir.scope {
                  %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
                  %29 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc150)
                  %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !u64i), !cir.ptr<!s8i> loc(#loc151)
                  %31 = cir.load %30 : !cir.ptr<!s8i>, !s8i loc(#loc149)
                  %32 = cir.cast(integral, %31 : !s8i), !s32i loc(#loc149)
                  %33 = cir.const #cir.int<83> : !s32i loc(#loc152)
                  %34 = cir.cmp(eq, %32, %33) : !s32i, !cir.bool loc(#loc277)
                  cir.if %34 {
                    %35 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc154)
                    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc154)
                    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc155)
                    cir.break loc(#loc156)
                  } loc(#loc278)
                } loc(#loc276)
              } loc(#loc275)
              cir.yield loc(#loc138)
            } step {
              %28 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc157)
              %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc158)
              cir.store %29, %22 : !u64i, !cir.ptr<!u64i> loc(#loc279)
              cir.yield loc(#loc272)
            } loc(#loc272)
          } loc(#loc272)
          %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc159)
          %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc160)
          cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc159)
        } loc(#loc270)
      } loc(#loc269)
    } loc(#loc267)
    cir.return loc(#loc101)
  } loc(#loc257)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc281)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc165)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc166)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc166)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc282)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc283)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc165)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc284)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc285)
    cir.scope {
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc174)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc174)
      %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc287)
      cir.if %21 {
        %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc176)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc177)
        %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc178)
        cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc176)
      } loc(#loc288)
    } loc(#loc286)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc179)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc179)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc181)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc182)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc289)
    %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc183)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc184)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc185)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc185)
    %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc183)
    cir.scope {
      %18 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc222)
      %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc188)
      %20 = cir.const #cir.int<5> : !s32i loc(#loc189)
      %21 = cir.cmp(eq, %19, %20) : !s32i, !cir.bool loc(#loc291)
      cir.if %21 {
        cir.scope {
          %22 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc294)
          cir.scope {
            %26 = cir.const #cir.int<0> : !s32i loc(#loc197)
            %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc197)
            cir.store %27, %22 : !u64i, !cir.ptr<!u64i> loc(#loc296)
            cir.for : cond {
              %28 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc199)
              %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc200)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
              %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc200)
              %32 = cir.cmp(lt, %28, %31) : !u64i, !cir.bool loc(#loc297)
              cir.condition(%32) loc(#loc203)
            } body {
              cir.scope {
                cir.scope {
                  %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
                  %29 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc208)
                  %30 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %29 : !u64i), !cir.ptr<!s8i> loc(#loc209)
                  %31 = cir.load %30 : !cir.ptr<!s8i>, !s8i loc(#loc207)
                  %32 = cir.cast(integral, %31 : !s8i), !s32i loc(#loc207)
                  %33 = cir.const #cir.int<83> : !s32i loc(#loc210)
                  %34 = cir.cmp(eq, %32, %33) : !s32i, !cir.bool loc(#loc300)
                  cir.if %34 {
                    %35 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc212)
                    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc212)
                    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc213)
                    cir.break loc(#loc214)
                  } loc(#loc301)
                } loc(#loc299)
              } loc(#loc298)
              cir.yield loc(#loc196)
            } step {
              %28 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc215)
              %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc216)
              cir.store %29, %22 : !u64i, !cir.ptr<!u64i> loc(#loc302)
              cir.yield loc(#loc295)
            } loc(#loc295)
          } loc(#loc295)
          %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc217)
          %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc218)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc218)
          cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc217)
        } loc(#loc293)
      } loc(#loc292)
    } loc(#loc290)
    cir.return loc(#loc162)
  } loc(#loc280)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":39:18)
#loc8 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":28:1)
#loc9 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":28:25)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":48:27)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":32:1)
#loc16 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":54:1)
#loc17 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":34:5)
#loc18 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":34:12)
#loc19 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":35:20)
#loc20 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":35:27)
#loc21 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":35:31)
#loc22 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":35:42)
#loc23 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":35:43)
#loc24 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":35:5)
#loc25 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":36:5)
#loc26 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":36:33)
#loc27 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":36:9)
#loc28 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":36:17)
#loc29 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":36:23)
#loc30 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":36:24)
#loc31 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":36:30)
#loc32 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":36:29)
#loc33 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":37:15)
#loc34 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":37:5)
#loc35 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":37:10)
#loc36 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":37:11)
#loc37 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":39:5)
#loc38 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":39:12)
#loc39 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":40:5)
#loc40 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":53:5)
#loc41 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":40:8)
#loc42 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":40:20)
#loc43 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":41:5)
#loc44 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":44:9)
#loc45 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":51:9)
#loc46 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":44:17)
#loc47 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":44:16)
#loc48 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":44:25)
#loc49 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":44:22)
#loc50 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":45:9)
#loc51 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":46:13)
#loc52 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":50:13)
#loc53 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":46:18)
#loc54 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":46:17)
#loc55 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":46:26)
#loc56 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":47:13)
#loc57 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":48:17)
#loc58 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":49:17)
#loc59 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":44:35)
#loc60 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":44:31)
#loc61 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":52:9)
#loc62 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":52:14)
#loc63 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":119:1)
#loc64 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":123:1)
#loc65 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":121:5)
#loc66 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":121:14)
#loc67 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":122:5)
#loc68 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":122:14)
#loc69 = loc("/usr/include/stdlib.h":575:1)
#loc70 = loc("/usr/include/stdlib.h":575:41)
#loc71 = loc("/usr/include/time.h":76:1)
#loc72 = loc("/usr/include/time.h":76:38)
#loc73 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":139:15)
#loc74 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":141:15)
#loc75 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":144:15)
#loc76 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":146:15)
#loc77 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":134:1)
#loc78 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":149:1)
#loc83 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":135:1)
#loc84 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":137:27)
#loc85 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":137:22)
#loc86 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":137:5)
#loc87 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":139:5)
#loc88 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":140:5)
#loc89 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":140:75)
#loc90 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":141:5)
#loc91 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":144:5)
#loc92 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":145:5)
#loc93 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":145:74)
#loc94 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":146:5)
#loc95 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":148:12)
#loc96 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":148:5)
#loc97 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":72:19)
#loc98 = loc("/usr/include/string.h":407:1)
#loc99 = loc("/usr/include/string.h":408:33)
#loc100 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":61:1)
#loc101 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":90:1)
#loc102 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":63:5)
#loc103 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":63:12)
#loc104 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":64:20)
#loc105 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":64:27)
#loc106 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":64:31)
#loc107 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":64:42)
#loc108 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":64:43)
#loc109 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":64:5)
#loc110 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":65:5)
#loc111 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":65:33)
#loc112 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":65:9)
#loc113 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":65:17)
#loc114 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":65:23)
#loc115 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":65:24)
#loc116 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":65:30)
#loc117 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":65:29)
#loc118 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":66:15)
#loc119 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":66:5)
#loc120 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":66:10)
#loc121 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":66:11)
#loc122 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":68:5)
#loc123 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":68:12)
#loc124 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":68:18)
#loc125 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":69:5)
#loc126 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":89:5)
#loc127 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":69:8)
#loc128 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":69:20)
#loc129 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":70:5)
#loc130 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":73:5)
#loc131 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":75:5)
#loc132 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":72:9)
#loc133 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":76:9)
#loc134 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":88:9)
#loc135 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":77:13)
#loc136 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":77:20)
#loc137 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":79:13)
#loc138 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":86:13)
#loc139 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":79:20)
#loc140 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":79:18)
#loc141 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":79:23)
#loc142 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":79:27)
#loc143 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":79:34)
#loc144 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":79:38)
#loc145 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":79:25)
#loc146 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":80:13)
#loc147 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":81:17)
#loc148 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":85:17)
#loc149 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":81:21)
#loc150 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":81:26)
#loc151 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":81:27)
#loc152 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":81:32)
#loc153 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":82:17)
#loc154 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":83:31)
#loc155 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":83:21)
#loc156 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":84:21)
#loc157 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":79:42)
#loc158 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":79:41)
#loc159 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":87:13)
#loc160 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":87:18)
#loc161 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":93:1)
#loc162 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":117:1)
#loc163 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":95:5)
#loc164 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":95:12)
#loc165 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":96:20)
#loc166 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":96:27)
#loc167 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":96:31)
#loc168 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":96:42)
#loc169 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":96:43)
#loc170 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":96:5)
#loc171 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":97:5)
#loc172 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":97:33)
#loc173 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":97:9)
#loc174 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":97:17)
#loc175 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":97:23)
#loc176 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":97:24)
#loc177 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":97:30)
#loc178 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":97:29)
#loc179 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":98:15)
#loc180 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":98:5)
#loc181 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":98:10)
#loc182 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":98:11)
#loc183 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":100:5)
#loc184 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":100:12)
#loc185 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":100:18)
#loc186 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":101:5)
#loc187 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":116:5)
#loc188 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":101:8)
#loc189 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":101:20)
#loc190 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":102:5)
#loc191 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":103:9)
#loc192 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":115:9)
#loc193 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":104:13)
#loc194 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":104:20)
#loc195 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":106:13)
#loc196 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":113:13)
#loc197 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":106:20)
#loc198 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":106:18)
#loc199 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":106:23)
#loc200 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":106:27)
#loc201 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":106:34)
#loc202 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":106:38)
#loc203 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":106:25)
#loc204 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":107:13)
#loc205 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":108:17)
#loc206 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":112:17)
#loc207 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":108:21)
#loc208 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":108:26)
#loc209 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":108:27)
#loc210 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":108:32)
#loc211 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":109:17)
#loc212 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":110:31)
#loc213 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":110:21)
#loc214 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":111:21)
#loc215 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":106:42)
#loc216 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":106:41)
#loc217 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":114:13)
#loc218 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_07.c":114:18)
#loc219 = loc(fused[#loc1, #loc2])
#loc220 = loc(fused[#loc3, #loc4])
#loc221 = loc(fused[#loc5, #loc6])
#loc222 = loc(fused[#loc8, #loc9])
#loc223 = loc(fused[#loc10, #loc11])
#loc224 = loc(fused[#loc13, #loc14])
#loc225 = loc(fused[#loc15, #loc16])
#loc226 = loc(fused[#loc17, #loc18])
#loc227 = loc(fused[#loc21, #loc22])
#loc228 = loc(fused[#loc20, #loc22])
#loc229 = loc(fused[#loc19, #loc23])
#loc230 = loc(fused[#loc24, #loc23])
#loc231 = loc(fused[#loc25, #loc26])
#loc232 = loc(fused[#loc27, #loc28])
#loc233 = loc(fused[#loc29, #loc26])
#loc234 = loc(fused[#loc34, #loc33])
#loc235 = loc(fused[#loc39, #loc40])
#loc236 = loc(fused[#loc41, #loc42])
#loc237 = loc(fused[#loc43, #loc40])
#loc238 = loc(fused[#loc44, #loc45])
#loc239 = loc(fused[#loc47, #loc48])
#loc240 = loc(fused[#loc50, #loc45])
#loc241 = loc(fused[#loc51, #loc52])
#loc242 = loc(fused[#loc54, #loc55])
#loc243 = loc(fused[#loc56, #loc52])
#loc244 = loc(fused[#loc60, #loc59])
#loc245 = loc(fused[#loc63, #loc64])
#loc246 = loc(fused[#loc65, #loc66])
#loc247 = loc(fused[#loc67, #loc68])
#loc248 = loc(fused[#loc69, #loc70])
#loc249 = loc(fused[#loc71, #loc72])
#loc250 = loc(fused[#loc77, #loc78])
#loc253 = loc(fused[#loc88, #loc89])
#loc254 = loc(fused[#loc92, #loc93])
#loc255 = loc(fused[#loc96, #loc95])
#loc256 = loc(fused[#loc98, #loc99])
#loc257 = loc(fused[#loc100, #loc101])
#loc258 = loc(fused[#loc102, #loc103])
#loc259 = loc(fused[#loc106, #loc107])
#loc260 = loc(fused[#loc105, #loc107])
#loc261 = loc(fused[#loc104, #loc108])
#loc262 = loc(fused[#loc109, #loc108])
#loc263 = loc(fused[#loc110, #loc111])
#loc264 = loc(fused[#loc112, #loc113])
#loc265 = loc(fused[#loc114, #loc111])
#loc266 = loc(fused[#loc119, #loc118])
#loc267 = loc(fused[#loc125, #loc126])
#loc268 = loc(fused[#loc127, #loc128])
#loc269 = loc(fused[#loc129, #loc130, #loc131, #loc126])
#loc270 = loc(fused[#loc133, #loc134])
#loc271 = loc(fused[#loc135, #loc136])
#loc272 = loc(fused[#loc137, #loc138])
#loc273 = loc(fused[#loc140, #loc139])
#loc274 = loc(fused[#loc141, #loc144])
#loc275 = loc(fused[#loc146, #loc138])
#loc276 = loc(fused[#loc147, #loc148])
#loc277 = loc(fused[#loc149, #loc152])
#loc278 = loc(fused[#loc153, #loc148])
#loc279 = loc(fused[#loc158, #loc157])
#loc280 = loc(fused[#loc161, #loc162])
#loc281 = loc(fused[#loc163, #loc164])
#loc282 = loc(fused[#loc167, #loc168])
#loc283 = loc(fused[#loc166, #loc168])
#loc284 = loc(fused[#loc165, #loc169])
#loc285 = loc(fused[#loc170, #loc169])
#loc286 = loc(fused[#loc171, #loc172])
#loc287 = loc(fused[#loc173, #loc174])
#loc288 = loc(fused[#loc175, #loc172])
#loc289 = loc(fused[#loc180, #loc179])
#loc290 = loc(fused[#loc186, #loc187])
#loc291 = loc(fused[#loc188, #loc189])
#loc292 = loc(fused[#loc190, #loc187])
#loc293 = loc(fused[#loc191, #loc192])
#loc294 = loc(fused[#loc193, #loc194])
#loc295 = loc(fused[#loc195, #loc196])
#loc296 = loc(fused[#loc198, #loc197])
#loc297 = loc(fused[#loc199, #loc202])
#loc298 = loc(fused[#loc204, #loc196])
#loc299 = loc(fused[#loc205, #loc206])
#loc300 = loc(fused[#loc207, #loc210])
#loc301 = loc(fused[#loc211, #loc206])
#loc302 = loc(fused[#loc216, #loc215])
