!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc6 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":24:21)
#loc7 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":24:25)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":70:25)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":70:29)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":100:25)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":100:29)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":105:23)
#true = #cir.bool<true> : !cir.bool
#loc161 = loc(fused[#loc6, #loc7])
#loc185 = loc(fused[#loc71, #loc72])
#loc197 = loc(fused[#loc106, #loc107])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc3)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc6, #loc7])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc162)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc161)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc10)
    cir.br ^bb1 loc(#loc163)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc162)
    cir.store %2, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc162)
    cir.br ^bb2 loc(#loc164)
  ^bb2:  // pred: ^bb1
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc16)
    %5 = cir.cmp(ge, %3, %4) : !s32i, !cir.bool loc(#loc165)
    cir.brcond %5 ^bb3, ^bb4 loc(#loc166)
  ^bb3:  // pred: ^bb2
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc21)
    %8 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc21)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc22)
    cir.br ^bb5 loc(#loc18)
  ^bb4:  // pred: ^bb2
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc3)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc23)
    cir.br ^bb5 loc(#loc14)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc14)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc12)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc5)
  } loc(#loc160)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc167)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc168)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc169)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc32)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc172)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc173)
    %2 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc174)
    %3 = cir.get_global @badSink : !cir.ptr<!cir.func<(!s32i)>> loc(#loc40)
    cir.store %3, %2 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc174)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc42)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    cir.br ^bb1 loc(#loc176)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc172)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc172)
    cir.br ^bb2 loc(#loc177)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc48)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc49)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc49)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc49)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc49)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc49)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc49)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc49)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc49)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc168)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc50)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc51)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc52)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc52)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc178)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc179)
  ^bb3:  // pred: ^bb2
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc56)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr1) loc(#loc57)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.br ^bb5 loc(#loc54)
  ^bb4:  // pred: ^bb2
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc32)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    cir.br ^bb5 loc(#loc47)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc47)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc45)
  ^bb7:  // pred: ^bb6
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc61)
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    cir.call %26(%27) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc61)
    cir.return loc(#loc34)
  } loc(#loc171)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc182)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc183)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc67)
    cir.return loc(#loc64)
  } loc(#loc181)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc71, #loc72])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc186)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc185)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc75)
    cir.br ^bb1 loc(#loc187)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc186)
    cir.store %2, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc186)
    cir.br ^bb2 loc(#loc188)
  ^bb2:  // pred: ^bb1
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %5 = cir.cmp(ge, %3, %4) : !s32i, !cir.bool loc(#loc189)
    cir.brcond %5 ^bb3, ^bb4 loc(#loc190)
  ^bb3:  // pred: ^bb2
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc86)
    %8 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc86)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc87)
    cir.br ^bb5 loc(#loc83)
  ^bb4:  // pred: ^bb2
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc88)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    cir.br ^bb5 loc(#loc79)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc79)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc77)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc70)
  } loc(#loc184)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc192)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc193)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!s32i)>> loc(#loc95)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc193)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc97)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc99)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc101)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    cir.call %6(%7) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc101)
    cir.return loc(#loc91)
  } loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc103)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc106, #loc107])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc198)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc197)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    cir.br ^bb1 loc(#loc199)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc198)
    cir.store %2, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc198)
    cir.br ^bb2 loc(#loc200)
  ^bb2:  // pred: ^bb1
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %5 = cir.cmp(ge, %3, %4) : !s32i, !cir.bool loc(#loc201)
    cir.brcond %5 ^bb3, ^bb8 loc(#loc117)
  ^bb3:  // pred: ^bb2
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc119)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc202)
    cir.brcond %8 ^bb4, ^bb5 loc(#loc117)
  ^bb4:  // pred: ^bb3
    %9 = cir.const #true loc(#loc117)
    cir.br ^bb6(%9 : !cir.bool) loc(#loc117)
  ^bb5:  // pred: ^bb3
    %10 = cir.const #false loc(#loc117)
    cir.br ^bb6(%10 : !cir.bool) loc(#loc117)
  ^bb6(%11: !cir.bool loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":105:23)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc117)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%11 : !cir.bool) loc(#loc117)
  ^bb8:  // pred: ^bb2
    %12 = cir.const #false loc(#loc117)
    cir.br ^bb9(%12 : !cir.bool) loc(#loc117)
  ^bb9(%13: !cir.bool loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":105:23)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc117)
  ^bb10:  // pred: ^bb9
    cir.brcond %13 ^bb11, ^bb12 loc(#loc203)
  ^bb11:  // pred: ^bb10
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc125)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc125)
    %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc126)
    cir.br ^bb13 loc(#loc122)
  ^bb12:  // pred: ^bb10
    %18 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc103)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    cir.br ^bb13 loc(#loc114)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc114)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc112)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc105)
  } loc(#loc196)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc205)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc206)
    %2 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc207)
    %3 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<(!s32i)>> loc(#loc135)
    cir.store %3, %2 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc207)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc137)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    cir.br ^bb1 loc(#loc209)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc205)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc205)
    cir.br ^bb2 loc(#loc210)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc143)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc144)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc144)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc144)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc144)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc144)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc144)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc144)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc144)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc168)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc145)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc146)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc147)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc147)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc211)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc212)
  ^bb3:  // pred: ^bb2
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc151)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr1) loc(#loc152)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    cir.br ^bb5 loc(#loc149)
  ^bb4:  // pred: ^bb2
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc155)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    cir.br ^bb5 loc(#loc142)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc142)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc140)
  ^bb7:  // pred: ^bb6
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc157)
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.call %26(%27) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc157)
    cir.return loc(#loc129)
  } loc(#loc204)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":36:23)
#loc4 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":24:1)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":39:1)
#loc8 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":27:9)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":27:30)
#loc10 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":25:1)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":26:5)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":38:5)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":30:9)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":37:9)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":30:13)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":30:21)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":31:9)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":33:9)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":35:9)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":32:33)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":32:26)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":32:13)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":36:13)
#loc24 = loc("/usr/include/stdio.h":654:1)
#loc25 = loc("/usr/include/stdio.h":655:59)
#loc26 = loc("/usr/include/stdio.h":149:1)
#loc27 = loc("/usr/include/stdio.h":149:14)
#loc28 = loc("/usr/include/stdlib.h":105:1)
#loc29 = loc("/usr/include/stdlib.h":106:33)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc31 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":58:23)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":41:1)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":63:1)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":49:9)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":49:45)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":43:5)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":43:9)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":45:5)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":45:29)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":47:13)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":47:12)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":47:5)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":48:5)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":60:5)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":51:9)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":59:9)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":51:19)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":51:32)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":51:49)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":51:13)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":51:59)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":52:9)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":55:9)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":57:9)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":54:25)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":54:20)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":54:13)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":54:36)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":58:13)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":62:5)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":62:13)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":138:1)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":142:1)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":140:5)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":140:13)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":141:5)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":141:13)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":70:1)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":85:1)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":73:9)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":73:30)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":71:1)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":72:5)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":84:5)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":76:9)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":83:9)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":76:13)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":76:21)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":77:9)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":79:9)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":81:9)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":78:33)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":78:26)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":78:13)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":82:23)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":82:13)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":87:1)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":97:1)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":89:5)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":89:9)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":90:5)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":90:29)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":92:13)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":92:12)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":92:5)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":95:12)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":95:5)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":96:5)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":96:13)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":111:23)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":100:1)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":114:1)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":103:9)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":103:30)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":101:1)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":102:5)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":113:5)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":105:9)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":112:9)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":105:13)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":105:21)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":105:26)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":105:34)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":105:36)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":106:9)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":108:9)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":110:9)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":107:33)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":107:26)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":107:13)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":111:13)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":116:1)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":136:1)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":123:9)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":123:45)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":118:5)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":118:9)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":119:5)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":119:29)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":121:13)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":121:12)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":121:5)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":122:5)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":134:5)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":125:9)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":133:9)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":125:19)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":125:32)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":125:49)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":125:13)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":125:59)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":126:9)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":129:9)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":131:9)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":128:25)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":128:20)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":128:13)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":128:36)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":132:23)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":132:13)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":135:5)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_fgets_44.c":135:13)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc4, #loc5])
#loc162 = loc(fused[#loc8, #loc9])
#loc163 = loc(fused[#loc11, #loc12])
#loc164 = loc(fused[#loc13, #loc14])
#loc165 = loc(fused[#loc15, #loc16])
#loc166 = loc(fused[#loc17, #loc18, #loc19, #loc14])
#loc167 = loc(fused[#loc24, #loc25])
#loc168 = loc(fused[#loc26, #loc27])
#loc169 = loc(fused[#loc28, #loc29])
#loc170 = loc(fused[#loc30, #loc31])
#loc171 = loc(fused[#loc33, #loc34])
#loc172 = loc(fused[#loc35, #loc36])
#loc173 = loc(fused[#loc37, #loc38])
#loc174 = loc(fused[#loc39, #loc40])
#loc175 = loc(fused[#loc43, #loc41])
#loc176 = loc(fused[#loc44, #loc45])
#loc177 = loc(fused[#loc46, #loc47])
#loc178 = loc(fused[#loc51, #loc52])
#loc179 = loc(fused[#loc53, #loc54, #loc55, #loc47])
#loc180 = loc(fused[#loc58, #loc59])
#loc181 = loc(fused[#loc63, #loc64])
#loc182 = loc(fused[#loc65, #loc66])
#loc183 = loc(fused[#loc67, #loc68])
#loc184 = loc(fused[#loc69, #loc70])
#loc186 = loc(fused[#loc73, #loc74])
#loc187 = loc(fused[#loc76, #loc77])
#loc188 = loc(fused[#loc78, #loc79])
#loc189 = loc(fused[#loc80, #loc81])
#loc190 = loc(fused[#loc82, #loc83, #loc84, #loc79])
#loc191 = loc(fused[#loc90, #loc91])
#loc192 = loc(fused[#loc92, #loc93])
#loc193 = loc(fused[#loc94, #loc95])
#loc194 = loc(fused[#loc98, #loc96])
#loc195 = loc(fused[#loc100, #loc99])
#loc196 = loc(fused[#loc104, #loc105])
#loc198 = loc(fused[#loc108, #loc109])
#loc199 = loc(fused[#loc111, #loc112])
#loc200 = loc(fused[#loc113, #loc114])
#loc201 = loc(fused[#loc115, #loc116])
#loc202 = loc(fused[#loc118, #loc120])
#loc203 = loc(fused[#loc121, #loc122, #loc123, #loc114])
#loc204 = loc(fused[#loc128, #loc129])
#loc205 = loc(fused[#loc130, #loc131])
#loc206 = loc(fused[#loc132, #loc133])
#loc207 = loc(fused[#loc134, #loc135])
#loc208 = loc(fused[#loc138, #loc136])
#loc209 = loc(fused[#loc139, #loc140])
#loc210 = loc(fused[#loc141, #loc142])
#loc211 = loc(fused[#loc146, #loc147])
#loc212 = loc(fused[#loc148, #loc149, #loc150, #loc142])
#loc213 = loc(fused[#loc153, #loc154])
