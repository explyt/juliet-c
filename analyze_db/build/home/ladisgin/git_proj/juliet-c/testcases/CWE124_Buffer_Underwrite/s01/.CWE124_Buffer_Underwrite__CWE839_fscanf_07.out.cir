!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":232:10)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":232:14)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":232:20)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":232:32)
#true = #cir.bool<true> : !cir.bool
#loc352 = loc(fused[#loc82, #loc83])
#loc353 = loc(fused[#loc84, #loc85])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fscanf_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc318)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc319)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc320)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printIntLine(!s32i) loc(#loc321)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc322)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_fscanf_07_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc324)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc325)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc318)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc22)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc23)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc327)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc25)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc320)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc25)
      } loc(#loc328)
    } loc(#loc326)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc318)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc29)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc30)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc330)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc333)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc334)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc334)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc334)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc40)
            %11 = cir.const #cir.int<10> : !s32i loc(#loc41)
            %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc336)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc45)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
              %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc47)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc47)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc338)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc50)
                cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc340)
                cir.for : cond {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc52)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc53)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc341)
                  cir.condition(%20) loc(#loc54)
                } body {
                  cir.scope {
                    %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc56)
                    %19 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc57)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc57)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc57)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc58)
                  } loc(#loc342)
                  cir.yield loc(#loc49)
                } step {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc59)
                  %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc60)
                  cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc343)
                  cir.yield loc(#loc339)
                } loc(#loc339)
              } loc(#loc339)
            } else {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc12)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc12)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc61)
            } loc(#loc337)
          } loc(#loc335)
        } loc(#loc332)
      } loc(#loc331)
    } loc(#loc329)
    cir.return loc(#loc14)
  } loc(#loc323)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_fscanf_07_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc345)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc346)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc347)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc68)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc348)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    cir.return loc(#loc63)
  } loc(#loc344)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc349)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc350)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc79)
  cir.func @main(%arg0: !s32i loc(fused[#loc82, #loc83]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc84, #loc85])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc352)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc353)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc81)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc86)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc86)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc87)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc88)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc88)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc89)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc76)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_fscanf_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc354)
    cir.call @CWE124_Buffer_Underwrite__CWE839_fscanf_07_good() : () -> () loc(#loc91)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc77)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc78)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_fscanf_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc355)
    cir.call @CWE124_Buffer_Underwrite__CWE839_fscanf_07_bad() : () -> () loc(#loc95)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc79)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc98)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc356)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc356)
    cir.return %17 : !s32i loc(#loc356)
  } loc(#loc351)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc101)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc358)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc107)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc318)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc111)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc112)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc361)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc114)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc320)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc115)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc116)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc116)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc114)
      } loc(#loc362)
    } loc(#loc360)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc318)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc119)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc120)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc364)
      cir.if %6 {
        %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc100)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc100)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc124)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc367)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc368)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc368)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc368)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc133)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc134)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc370)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc137)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc371)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc135)
                cir.yield %18 : !cir.bool loc(#loc135)
              }, false {
                %18 = cir.const #false loc(#loc135)
                cir.yield %18 : !cir.bool loc(#loc135)
              }) : (!cir.bool) -> !cir.bool loc(#loc135)
              cir.yield %17 : !cir.bool loc(#loc135)
            }, false {
              %14 = cir.const #false loc(#loc135)
              cir.yield %14 : !cir.bool loc(#loc135)
            }) : (!cir.bool) -> !cir.bool loc(#loc135)
            cir.if %13 {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc142)
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
              %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc144)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc144)
              cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc373)
              cir.scope {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc147)
                cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc375)
                cir.for : cond {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc149)
                  %20 = cir.const #cir.int<10> : !s32i loc(#loc150)
                  %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc376)
                  cir.condition(%21) loc(#loc151)
                } body {
                  cir.scope {
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc153)
                    %20 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc154)
                    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc154)
                    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc154)
                    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc155)
                  } loc(#loc377)
                  cir.yield loc(#loc146)
                } step {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc156)
                  %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc157)
                  cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc378)
                  cir.yield loc(#loc374)
                } loc(#loc374)
              } loc(#loc374)
            } else {
              %14 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc101)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc101)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc158)
            } loc(#loc372)
          } loc(#loc369)
        } loc(#loc366)
      } loc(#loc365)
    } loc(#loc363)
    cir.return loc(#loc103)
  } loc(#loc357)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc380)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc164)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc381)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc318)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc168)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc169)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc383)
      cir.if %6 {
        %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc171)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc320)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc172)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc173)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc173)
        %12 = cir.call @__isoc99_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc171)
      } loc(#loc384)
    } loc(#loc382)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc318)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc176)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc177)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc386)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc389)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc390)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc390)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc390)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc187)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc188)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc392)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc190)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc191)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc393)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc189)
                cir.yield %18 : !cir.bool loc(#loc189)
              }, false {
                %18 = cir.const #false loc(#loc189)
                cir.yield %18 : !cir.bool loc(#loc189)
              }) : (!cir.bool) -> !cir.bool loc(#loc189)
              cir.yield %17 : !cir.bool loc(#loc189)
            }, false {
              %14 = cir.const #false loc(#loc189)
              cir.yield %14 : !cir.bool loc(#loc189)
            }) : (!cir.bool) -> !cir.bool loc(#loc189)
            cir.if %13 {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc196)
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
              %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc198)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc198)
              cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc395)
              cir.scope {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc201)
                cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc397)
                cir.for : cond {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc203)
                  %20 = cir.const #cir.int<10> : !s32i loc(#loc204)
                  %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc398)
                  cir.condition(%21) loc(#loc205)
                } body {
                  cir.scope {
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc207)
                    %20 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc208)
                    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc208)
                    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc208)
                    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc209)
                  } loc(#loc399)
                  cir.yield loc(#loc200)
                } step {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc210)
                  %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc211)
                  cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc400)
                  cir.yield loc(#loc396)
                } loc(#loc396)
              } loc(#loc396)
            } else {
              %14 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc212)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc212)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc213)
            } loc(#loc394)
          } loc(#loc391)
        } loc(#loc388)
      } loc(#loc387)
    } loc(#loc385)
    cir.return loc(#loc160)
  } loc(#loc379)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc402)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc218)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc219)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc403)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc318)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc223)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc224)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc405)
      cir.if %6 {
        %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc228)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc228)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc229)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc230)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc407)
      } loc(#loc406)
    } loc(#loc404)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc318)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc234)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc235)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc409)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc412)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc413)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc413)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc413)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc245)
            %11 = cir.const #cir.int<10> : !s32i loc(#loc246)
            %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc415)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc250)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc251)
              %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc252)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc252)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc417)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc255)
                cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc419)
                cir.for : cond {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc257)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc258)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc420)
                  cir.condition(%20) loc(#loc259)
                } body {
                  cir.scope {
                    %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc261)
                    %19 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc262)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc262)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc262)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc263)
                  } loc(#loc421)
                  cir.yield loc(#loc254)
                } step {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc264)
                  %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc265)
                  cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc422)
                  cir.yield loc(#loc418)
                } loc(#loc418)
              } loc(#loc418)
            } else {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc266)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc266)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc267)
            } loc(#loc416)
          } loc(#loc414)
        } loc(#loc411)
      } loc(#loc410)
    } loc(#loc408)
    cir.return loc(#loc215)
  } loc(#loc401)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc424)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc272)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc273)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc425)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc318)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc277)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc278)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc427)
      cir.if %6 {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc280)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc429)
      } loc(#loc428)
    } loc(#loc426)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc318)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc284)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc285)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc431)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc434)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc435)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc435)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc435)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc295)
            %11 = cir.const #cir.int<10> : !s32i loc(#loc296)
            %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc437)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc300)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc301)
              %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc302)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc302)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc439)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc305)
                cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc441)
                cir.for : cond {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc307)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc308)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc442)
                  cir.condition(%20) loc(#loc309)
                } body {
                  cir.scope {
                    %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc311)
                    %19 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc312)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc312)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc312)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc313)
                  } loc(#loc443)
                  cir.yield loc(#loc304)
                } step {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc314)
                  %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc315)
                  cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc444)
                  cir.yield loc(#loc440)
                } loc(#loc440)
              } loc(#loc440)
            } else {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc316)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc316)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc317)
            } loc(#loc438)
          } loc(#loc436)
        } loc(#loc433)
      } loc(#loc432)
    } loc(#loc430)
    cir.return loc(#loc269)
  } loc(#loc423)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":0:0)
#loc1 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":23:1)
#loc2 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":23:25)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":35:23)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":55:27)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":27:1)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":59:1)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":29:5)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":29:9)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":31:13)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":31:12)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":31:5)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":32:5)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":36:5)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":32:8)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":32:20)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":33:5)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":35:9)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":35:16)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":37:5)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":58:5)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":37:8)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":37:20)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":38:5)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":39:9)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":57:9)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":40:13)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":40:17)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":41:13)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":41:34)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":44:13)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":56:13)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":44:17)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":44:24)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":45:13)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":52:13)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":54:13)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":46:32)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":46:24)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":46:17)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":48:17)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":51:17)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":48:25)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":48:21)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":48:28)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":48:32)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":48:30)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":49:17)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":50:41)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":50:34)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":50:21)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":48:37)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":48:36)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":55:17)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":215:1)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":221:1)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":217:5)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":217:14)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":218:5)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":218:14)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":219:5)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":219:14)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":220:5)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":220:14)
#loc72 = loc("/usr/include/stdlib.h":575:1)
#loc73 = loc("/usr/include/stdlib.h":575:41)
#loc74 = loc("/usr/include/time.h":76:1)
#loc75 = loc("/usr/include/time.h":76:38)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":237:15)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":239:15)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":242:15)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":244:15)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":232:1)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":247:1)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":233:1)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":235:27)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":235:22)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":235:5)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":237:5)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":238:5)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":238:53)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":239:5)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":242:5)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":243:5)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":243:52)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":244:5)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":246:12)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":246:5)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":79:19)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":98:27)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":66:1)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":102:1)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":68:5)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":68:9)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":70:13)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":70:12)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":70:5)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":71:5)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":75:5)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":71:8)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":71:20)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":72:5)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":74:9)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":74:16)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":74:23)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":76:5)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":101:5)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":76:8)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":76:20)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":77:5)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":80:5)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":82:5)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":79:9)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":83:9)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":100:9)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":84:13)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":84:17)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":85:13)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":85:34)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":87:13)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":99:13)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":87:17)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":87:25)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":87:27)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":87:30)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":87:38)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":87:40)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":88:13)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":95:13)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":97:13)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":89:32)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":89:24)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":89:17)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":91:17)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":94:17)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":91:25)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":91:21)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":91:28)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":91:32)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":91:30)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":92:17)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":93:41)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":93:34)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":93:21)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":91:37)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":91:36)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":98:17)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":105:1)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":136:1)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":107:5)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":107:9)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":109:13)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":109:12)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":109:5)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":110:5)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":114:5)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":110:8)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":110:20)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":111:5)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":113:9)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":113:16)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":113:23)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":115:5)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":135:5)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":115:8)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":115:20)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":116:5)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":117:9)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":134:9)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":118:13)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":118:17)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":119:13)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":119:34)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":121:13)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":133:13)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":121:17)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":121:25)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":121:27)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":121:30)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":121:38)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":121:40)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":122:13)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":129:13)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":131:13)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":123:32)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":123:24)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":123:17)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":125:17)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":128:17)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":125:25)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":125:21)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":125:28)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":125:32)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":125:30)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":126:17)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":127:41)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":127:34)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":127:21)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":125:37)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":125:36)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":132:27)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":132:17)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":139:1)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":177:1)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":141:5)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":141:9)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":143:13)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":143:12)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":143:5)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":144:5)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":154:5)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":144:8)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":144:20)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":145:5)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":148:5)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":150:5)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":147:19)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":147:9)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":153:16)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":153:9)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":155:5)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":176:5)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":155:8)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":155:20)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":156:5)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":157:9)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":175:9)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":158:13)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":158:17)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":159:13)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":159:34)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":162:13)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":174:13)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":162:17)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":162:24)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":163:13)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":170:13)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":172:13)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":164:32)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":164:24)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":164:17)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":166:17)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":169:17)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":166:25)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":166:21)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":166:28)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":166:32)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":166:30)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":167:17)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":168:41)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":168:34)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":168:21)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":166:37)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":166:36)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":173:27)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":173:17)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":180:1)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":213:1)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":182:5)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":182:9)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":184:13)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":184:12)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":184:5)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":185:5)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":190:5)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":185:8)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":185:20)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":186:5)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":189:16)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":189:9)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":191:5)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":212:5)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":191:8)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":191:20)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":192:5)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":193:9)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":211:9)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":194:13)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":194:17)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":195:13)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":195:34)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":198:13)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":210:13)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":198:17)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":198:24)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":199:13)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":206:13)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":208:13)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":200:32)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":200:24)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":200:17)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":202:17)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":205:17)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":202:25)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":202:21)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":202:28)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":202:32)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":202:30)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":203:17)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":204:41)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":204:34)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":204:21)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":202:37)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":202:36)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":209:27)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_07.c":209:17)
#loc318 = loc(fused[#loc1, #loc2])
#loc319 = loc(fused[#loc3, #loc4])
#loc320 = loc(fused[#loc5, #loc6])
#loc321 = loc(fused[#loc8, #loc9])
#loc322 = loc(fused[#loc10, #loc11])
#loc323 = loc(fused[#loc13, #loc14])
#loc324 = loc(fused[#loc15, #loc16])
#loc325 = loc(fused[#loc19, #loc17])
#loc326 = loc(fused[#loc20, #loc21])
#loc327 = loc(fused[#loc22, #loc23])
#loc328 = loc(fused[#loc24, #loc21])
#loc329 = loc(fused[#loc27, #loc28])
#loc330 = loc(fused[#loc29, #loc30])
#loc331 = loc(fused[#loc31, #loc28])
#loc332 = loc(fused[#loc32, #loc33])
#loc333 = loc(fused[#loc34, #loc35])
#loc334 = loc(fused[#loc36, #loc37])
#loc335 = loc(fused[#loc38, #loc39])
#loc336 = loc(fused[#loc40, #loc41])
#loc337 = loc(fused[#loc42, #loc43, #loc44, #loc39])
#loc338 = loc(fused[#loc47, #loc45])
#loc339 = loc(fused[#loc48, #loc49])
#loc340 = loc(fused[#loc51, #loc50])
#loc341 = loc(fused[#loc52, #loc53])
#loc342 = loc(fused[#loc55, #loc49])
#loc343 = loc(fused[#loc60, #loc59])
#loc344 = loc(fused[#loc62, #loc63])
#loc345 = loc(fused[#loc64, #loc65])
#loc346 = loc(fused[#loc66, #loc67])
#loc347 = loc(fused[#loc68, #loc69])
#loc348 = loc(fused[#loc70, #loc71])
#loc349 = loc(fused[#loc72, #loc73])
#loc350 = loc(fused[#loc74, #loc75])
#loc351 = loc(fused[#loc80, #loc81])
#loc354 = loc(fused[#loc91, #loc92])
#loc355 = loc(fused[#loc95, #loc96])
#loc356 = loc(fused[#loc99, #loc98])
#loc357 = loc(fused[#loc102, #loc103])
#loc358 = loc(fused[#loc104, #loc105])
#loc359 = loc(fused[#loc108, #loc106])
#loc360 = loc(fused[#loc109, #loc110])
#loc361 = loc(fused[#loc111, #loc112])
#loc362 = loc(fused[#loc113, #loc110])
#loc363 = loc(fused[#loc117, #loc118])
#loc364 = loc(fused[#loc119, #loc120])
#loc365 = loc(fused[#loc121, #loc122, #loc123, #loc118])
#loc366 = loc(fused[#loc125, #loc126])
#loc367 = loc(fused[#loc127, #loc128])
#loc368 = loc(fused[#loc129, #loc130])
#loc369 = loc(fused[#loc131, #loc132])
#loc370 = loc(fused[#loc133, #loc134])
#loc371 = loc(fused[#loc136, #loc138])
#loc372 = loc(fused[#loc139, #loc140, #loc141, #loc132])
#loc373 = loc(fused[#loc144, #loc142])
#loc374 = loc(fused[#loc145, #loc146])
#loc375 = loc(fused[#loc148, #loc147])
#loc376 = loc(fused[#loc149, #loc150])
#loc377 = loc(fused[#loc152, #loc146])
#loc378 = loc(fused[#loc157, #loc156])
#loc379 = loc(fused[#loc159, #loc160])
#loc380 = loc(fused[#loc161, #loc162])
#loc381 = loc(fused[#loc165, #loc163])
#loc382 = loc(fused[#loc166, #loc167])
#loc383 = loc(fused[#loc168, #loc169])
#loc384 = loc(fused[#loc170, #loc167])
#loc385 = loc(fused[#loc174, #loc175])
#loc386 = loc(fused[#loc176, #loc177])
#loc387 = loc(fused[#loc178, #loc175])
#loc388 = loc(fused[#loc179, #loc180])
#loc389 = loc(fused[#loc181, #loc182])
#loc390 = loc(fused[#loc183, #loc184])
#loc391 = loc(fused[#loc185, #loc186])
#loc392 = loc(fused[#loc187, #loc188])
#loc393 = loc(fused[#loc190, #loc192])
#loc394 = loc(fused[#loc193, #loc194, #loc195, #loc186])
#loc395 = loc(fused[#loc198, #loc196])
#loc396 = loc(fused[#loc199, #loc200])
#loc397 = loc(fused[#loc202, #loc201])
#loc398 = loc(fused[#loc203, #loc204])
#loc399 = loc(fused[#loc206, #loc200])
#loc400 = loc(fused[#loc211, #loc210])
#loc401 = loc(fused[#loc214, #loc215])
#loc402 = loc(fused[#loc216, #loc217])
#loc403 = loc(fused[#loc220, #loc218])
#loc404 = loc(fused[#loc221, #loc222])
#loc405 = loc(fused[#loc223, #loc224])
#loc406 = loc(fused[#loc225, #loc226, #loc227, #loc222])
#loc407 = loc(fused[#loc231, #loc230])
#loc408 = loc(fused[#loc232, #loc233])
#loc409 = loc(fused[#loc234, #loc235])
#loc410 = loc(fused[#loc236, #loc233])
#loc411 = loc(fused[#loc237, #loc238])
#loc412 = loc(fused[#loc239, #loc240])
#loc413 = loc(fused[#loc241, #loc242])
#loc414 = loc(fused[#loc243, #loc244])
#loc415 = loc(fused[#loc245, #loc246])
#loc416 = loc(fused[#loc247, #loc248, #loc249, #loc244])
#loc417 = loc(fused[#loc252, #loc250])
#loc418 = loc(fused[#loc253, #loc254])
#loc419 = loc(fused[#loc256, #loc255])
#loc420 = loc(fused[#loc257, #loc258])
#loc421 = loc(fused[#loc260, #loc254])
#loc422 = loc(fused[#loc265, #loc264])
#loc423 = loc(fused[#loc268, #loc269])
#loc424 = loc(fused[#loc270, #loc271])
#loc425 = loc(fused[#loc274, #loc272])
#loc426 = loc(fused[#loc275, #loc276])
#loc427 = loc(fused[#loc277, #loc278])
#loc428 = loc(fused[#loc279, #loc276])
#loc429 = loc(fused[#loc281, #loc280])
#loc430 = loc(fused[#loc282, #loc283])
#loc431 = loc(fused[#loc284, #loc285])
#loc432 = loc(fused[#loc286, #loc283])
#loc433 = loc(fused[#loc287, #loc288])
#loc434 = loc(fused[#loc289, #loc290])
#loc435 = loc(fused[#loc291, #loc292])
#loc436 = loc(fused[#loc293, #loc294])
#loc437 = loc(fused[#loc295, #loc296])
#loc438 = loc(fused[#loc297, #loc298, #loc299, #loc294])
#loc439 = loc(fused[#loc302, #loc300])
#loc440 = loc(fused[#loc303, #loc304])
#loc441 = loc(fused[#loc306, #loc305])
#loc442 = loc(fused[#loc307, #loc308])
#loc443 = loc(fused[#loc310, #loc304])
#loc444 = loc(fused[#loc315, #loc314])
