!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:7)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:18)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:28)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":27:14)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":27:26)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":52:18)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":52:30)
#loc120 = loc(fused[#loc4, #loc5])
#loc127 = loc(fused[#loc25, #loc26])
#loc146 = loc(fused[#loc73, #loc74])
!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl_data = !cir.record<struct "std::_Vector_base<int, std::allocator<int>>::_Vector_impl_data" {!cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!s32i>} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl = !cir.record<struct "std::_Vector_base<int, std::allocator<int>>::_Vector_impl" {!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl_data} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E = !cir.record<struct "std::_Vector_base<int, std::allocator<int>>" {!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl} #cir.record.decl.ast>
!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E = !cir.record<class "std::vector<int, std::allocator<int>>" {!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func linkonce_odr @_ZNSt6vectorIiSaIiEEixEm(%arg0: !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E> loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:7), %arg1: !u64i loc(fused[#loc4, #loc5])) -> !cir.ptr<!s32i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__n", init] {alignment = 8 : i64} loc(#loc120)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["__retval"] {alignment = 8 : i64} loc(#loc2)
    cir.store %arg0, %0 : !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>> loc(#loc6)
    cir.store %arg1, %1 : !u64i, !cir.ptr<!u64i> loc(#loc6)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>>, !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E> loc(#loc3)
    %4 = cir.base_class_addr(%3 : !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E> loc(#loc7)
    %5 = cir.get_member %4[0] {name = "_M_impl"} : !cir.ptr<!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E> -> !cir.ptr<!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl> loc(#loc8)
    %6 = cir.base_class_addr(%5 : !cir.ptr<!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl_data> loc(#loc7)
    %7 = cir.get_member %6[0] {name = "_M_start"} : !cir.ptr<!ty_std3A3A_Vector_base3Cint2C_std3A3Aallocator3Cint3E3E3A3A_Vector_impl_data> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc9)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc10)
    %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc11)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!s32i>, %9 : !u64i), !cir.ptr<!s32i> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc121)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc121)
    cir.return %11 : !cir.ptr<!s32i> loc(#loc121)
  } loc(#loc119)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc122)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc123)
  cir.func private @printIntLine(!s32i) loc(#loc124)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc125)
  cir.func @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_727badSinkESt6vectorIiSaIiEE(%arg0: !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E loc(fused[#loc25, #loc26])) extra(#fn_attr2) {
    %0 = cir.alloca !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E, !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc128)
    cir.store %arg0, %0 : !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E, !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E> loc(#loc29)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc30)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc30)
    %4 = cir.call @_ZNSt6vectorIiSaIiEEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, !u64i) -> !cir.ptr<!s32i> extra(#fn_attr1) loc(#loc31)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    cir.scope {
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc130)
      %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc131)
      %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc38)
      %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc39)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc39)
      %11 = cir.const #cir.int<4> : !u64i loc(#loc132)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc133)
      %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc38)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc134)
      cir.store %14, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc135)
      cir.scope {
        %22 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc46)
        %23 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc47)
        %24 = cir.cmp(eq, %22, %23) : !cir.ptr<!s32i>, !cir.bool loc(#loc137)
        cir.if %24 {
          %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc49)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc50)
          %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc51)
          cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr1) loc(#loc49)
        } loc(#loc138)
      } loc(#loc136)
      cir.scope {
        %22 = cir.const #cir.int<0> : !s32i loc(#loc54)
        %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc54)
        cir.store %23, %6 : !u64i, !cir.ptr<!u64i> loc(#loc140)
        cir.for : cond {
          %24 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc56)
          %25 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc57)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc57)
          %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc141)
          cir.condition(%27) loc(#loc141)
        } body {
          cir.scope {
            %24 = cir.const #cir.int<0> : !s32i loc(#loc59)
            %25 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc60)
            %26 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc61)
            %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !u64i), !cir.ptr<!s32i> loc(#loc62)
            cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc143)
          } loc(#loc142)
          cir.yield loc(#loc53)
        } step {
          %24 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc63)
          %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc64)
          cir.store %25, %6 : !u64i, !cir.ptr<!u64i> loc(#loc144)
          cir.yield loc(#loc139)
        } loc(#loc139)
      } loc(#loc139)
      %15 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc66)
      %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc67)
      %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc65)
      cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc68)
      %19 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc69)
      %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc70)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc70)
      cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc69)
    } loc(#loc129)
    cir.return loc(#loc24)
  } loc(#loc126)
  cir.func @_ZN59CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_7211goodG2BSinkESt6vectorIiSaIiEE(%arg0: !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E loc(fused[#loc73, #loc74])) extra(#fn_attr2) {
    %0 = cir.alloca !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E, !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc147)
    cir.store %arg0, %0 : !ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E, !cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E> loc(#loc77)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc78)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc78)
    %4 = cir.call @_ZNSt6vectorIiSaIiEEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3Cint2C_std3A3Aallocator3Cint3E3E>, !u64i) -> !cir.ptr<!s32i> extra(#fn_attr1) loc(#loc79)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.scope {
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc149)
      %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc150)
      %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc86)
      %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc87)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc87)
      %11 = cir.const #cir.int<4> : !u64i loc(#loc151)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc152)
      %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc86)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc153)
      cir.store %14, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc154)
      cir.scope {
        %22 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
        %23 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc95)
        %24 = cir.cmp(eq, %22, %23) : !cir.ptr<!s32i>, !cir.bool loc(#loc156)
        cir.if %24 {
          %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc97)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc98)
          %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc99)
          cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr1) loc(#loc97)
        } loc(#loc157)
      } loc(#loc155)
      cir.scope {
        %22 = cir.const #cir.int<0> : !s32i loc(#loc102)
        %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc102)
        cir.store %23, %6 : !u64i, !cir.ptr<!u64i> loc(#loc159)
        cir.for : cond {
          %24 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc104)
          %25 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc105)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc105)
          %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc160)
          cir.condition(%27) loc(#loc160)
        } body {
          cir.scope {
            %24 = cir.const #cir.int<0> : !s32i loc(#loc107)
            %25 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc108)
            %26 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc109)
            %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !u64i), !cir.ptr<!s32i> loc(#loc110)
            cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc162)
          } loc(#loc161)
          cir.yield loc(#loc101)
        } step {
          %24 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc111)
          %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc112)
          cir.store %25, %6 : !u64i, !cir.ptr<!u64i> loc(#loc163)
          cir.yield loc(#loc158)
        } loc(#loc158)
      } loc(#loc158)
      %15 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc113)
      %16 = cir.const #cir.int<0> : !s32i loc(#loc114)
      %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc115)
      %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc113)
      cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc116)
      %19 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc117)
      %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc118)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc118)
      cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc117)
    } loc(#loc148)
    cir.return loc(#loc72)
  } loc(#loc145)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1125:7)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1130:7)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1127:7)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:11)
#loc8 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":374:20)
#loc9 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":94:10)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:25)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:36)
#loc12 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:34)
#loc13 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:2)
#loc14 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:39)
#loc15 = loc("/usr/include/stdlib.h":672:1)
#loc16 = loc("/usr/include/stdlib.h":672:45)
#loc17 = loc("/usr/include/stdlib.h":756:1)
#loc18 = loc("/usr/include/stdlib.h":756:70)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("/usr/include/stdlib.h":687:1)
#loc22 = loc("/usr/include/stdlib.h":687:32)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":27:1)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":45:1)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":30:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":30:28)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":28:1)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":30:27)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":30:16)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":31:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":44:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":32:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":32:16)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":33:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":33:14)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":36:28)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":36:35)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":36:42)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":36:52)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":36:53)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":36:9)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":37:9)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":37:43)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":37:13)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":37:27)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":37:33)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":37:34)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":37:40)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":37:39)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":38:9)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":41:9)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":38:18)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":38:14)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":38:21)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":38:33)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":39:9)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":40:29)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":40:13)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":40:24)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":40:25)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":38:40)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":38:39)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":42:22)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":42:33)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":42:34)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":42:9)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":43:9)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":43:14)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":52:1)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":69:1)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":54:5)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":54:28)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":53:1)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":54:27)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":54:16)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":55:5)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":68:5)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":56:9)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":56:16)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":57:9)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":57:14)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":60:28)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":60:35)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":60:42)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":60:52)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":60:53)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":60:9)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":61:9)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":61:43)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":61:13)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":61:27)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":61:33)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":61:34)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":61:40)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":61:39)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":62:9)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":65:9)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":62:18)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":62:14)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":62:21)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":62:33)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":63:9)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":64:29)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":64:13)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":64:24)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":64:25)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":62:40)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":62:39)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":66:22)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":66:33)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":66:34)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":66:9)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":67:9)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_72b.cpp":67:14)
#loc119 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc13, #loc14])
#loc122 = loc(fused[#loc15, #loc16])
#loc123 = loc(fused[#loc17, #loc18])
#loc124 = loc(fused[#loc19, #loc20])
#loc125 = loc(fused[#loc21, #loc22])
#loc126 = loc(fused[#loc23, #loc24])
#loc128 = loc(fused[#loc27, #loc28])
#loc129 = loc(fused[#loc32, #loc33])
#loc130 = loc(fused[#loc34, #loc35])
#loc131 = loc(fused[#loc36, #loc37])
#loc132 = loc(fused[#loc40, #loc41])
#loc133 = loc(fused[#loc39, #loc41])
#loc134 = loc(fused[#loc38, #loc42])
#loc135 = loc(fused[#loc43, #loc42])
#loc136 = loc(fused[#loc44, #loc45])
#loc137 = loc(fused[#loc46, #loc47])
#loc138 = loc(fused[#loc48, #loc45])
#loc139 = loc(fused[#loc52, #loc53])
#loc140 = loc(fused[#loc55, #loc54])
#loc141 = loc(fused[#loc56, #loc57])
#loc142 = loc(fused[#loc58, #loc53])
#loc143 = loc(fused[#loc60, #loc59])
#loc144 = loc(fused[#loc64, #loc63])
#loc145 = loc(fused[#loc71, #loc72])
#loc147 = loc(fused[#loc75, #loc76])
#loc148 = loc(fused[#loc80, #loc81])
#loc149 = loc(fused[#loc82, #loc83])
#loc150 = loc(fused[#loc84, #loc85])
#loc151 = loc(fused[#loc88, #loc89])
#loc152 = loc(fused[#loc87, #loc89])
#loc153 = loc(fused[#loc86, #loc90])
#loc154 = loc(fused[#loc91, #loc90])
#loc155 = loc(fused[#loc92, #loc93])
#loc156 = loc(fused[#loc94, #loc95])
#loc157 = loc(fused[#loc96, #loc93])
#loc158 = loc(fused[#loc100, #loc101])
#loc159 = loc(fused[#loc103, #loc102])
#loc160 = loc(fused[#loc104, #loc105])
#loc161 = loc(fused[#loc106, #loc101])
#loc162 = loc(fused[#loc108, #loc107])
#loc163 = loc(fused[#loc112, #loc111])
