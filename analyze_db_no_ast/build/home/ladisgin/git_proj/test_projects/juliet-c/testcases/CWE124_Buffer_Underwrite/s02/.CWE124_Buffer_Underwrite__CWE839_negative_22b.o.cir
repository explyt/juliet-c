!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":25:59)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":25:63)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":61:64)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":61:68)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":92:64)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":92:68)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":118:63)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":118:67)
#true = #cir.bool<true> : !cir.bool
#loc195 = loc(fused[#loc10, #loc11])
#loc212 = loc(fused[#loc54, #loc55])
#loc230 = loc(fused[#loc104, #loc105])
#loc248 = loc(fused[#loc152, #loc153])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__CWE839_negative_22b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  external @CWE124_Buffer_Underwrite__CWE839_negative_22_badGlobal : !s32i {alignment = 4 : i64} loc(#loc191)
  cir.func private  @printIntLine(!s32i) loc(#loc192)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc193)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc7)
  cir.func  @CWE124_Buffer_Underwrite__CWE839_negative_22_badSink(%arg0: !s32i loc(fused[#loc10, #loc11])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc195)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc12)
    cir.scope {
      %1 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_negative_22_badGlobal : !cir.ptr<!s32i> loc(#loc191)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc199)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc200)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc200)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc200)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
            %8 = cir.const #cir.int<10> : !s32i loc(#loc26)
            %9 = cir.cmp(lt, %7, %8) : !s32i, !s32i loc(#loc202)
            %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc27)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc31)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
              %13 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc33)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc33)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc204)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc36)
                cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc206)
                cir.for : cond {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc38)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc39)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !s32i loc(#loc207)
                  %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc40)
                  cir.condition(%19) loc(#loc40)
                } body {
                  cir.scope {
                    %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc42)
                    %17 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc43)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc43)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc43)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc44)
                  } loc(#loc208)
                  cir.yield loc(#loc35)
                } step {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc45)
                  %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc46)
                  cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc209)
                  cir.yield loc(#loc205)
                } loc(#loc205)
              } loc(#loc205)
            } else {
              %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc7)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc7)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc47)
            } loc(#loc203)
          } loc(#loc201)
        } loc(#loc198)
      } loc(#loc197)
    } loc(#loc196)
    cir.return loc(#loc9)
  } loc(#loc194)
  cir.global "private"  external @CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G1Global : !s32i {alignment = 4 : i64} loc(#loc210)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc50)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc51)
  cir.func  @CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G1Sink(%arg0: !s32i loc(fused[#loc54, #loc55])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc212)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc56)
    cir.scope {
      %1 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G1Global : !cir.ptr<!s32i> loc(#loc210)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc59)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc59)
      cir.if %3 {
        %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc50)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc50)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc63)
      } else {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc216)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc217)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc217)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc217)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc73)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !s32i loc(#loc219)
            %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc74)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc76)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc77)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !s32i loc(#loc220)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc79)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc75)
                cir.yield %17 : !cir.bool loc(#loc75)
              }, false {
                %17 = cir.const #false loc(#loc75)
                cir.yield %17 : !cir.bool loc(#loc75)
              }) : (!cir.bool) -> !cir.bool loc(#loc75)
              cir.yield %16 : !cir.bool loc(#loc75)
            }, false {
              %12 = cir.const #false loc(#loc75)
              cir.yield %12 : !cir.bool loc(#loc75)
            }) : (!cir.bool) -> !cir.bool loc(#loc75)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc83)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc84)
              %14 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc85)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc85)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc222)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc88)
                cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc224)
                cir.for : cond {
                  %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc90)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc91)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !s32i loc(#loc225)
                  %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc92)
                  cir.condition(%20) loc(#loc92)
                } body {
                  cir.scope {
                    %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                    %18 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc95)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc95)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc95)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc96)
                  } loc(#loc226)
                  cir.yield loc(#loc87)
                } step {
                  %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc98)
                  cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc227)
                  cir.yield loc(#loc223)
                } loc(#loc223)
              } loc(#loc223)
            } else {
              %12 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc51)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc51)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc99)
            } loc(#loc221)
          } loc(#loc218)
        } loc(#loc215)
      } loc(#loc214)
    } loc(#loc213)
    cir.return loc(#loc53)
  } loc(#loc211)
  cir.global "private"  external @CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G2Global : !s32i {alignment = 4 : i64} loc(#loc228)
  cir.func  @CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G2Sink(%arg0: !s32i loc(fused[#loc104, #loc105])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc230)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc106)
    cir.scope {
      %1 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_negative_22_goodB2G2Global : !cir.ptr<!s32i> loc(#loc228)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc109)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc109)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc234)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc235)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc235)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc235)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc120)
            %9 = cir.cmp(ge, %7, %8) : !s32i, !s32i loc(#loc237)
            %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc121)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc124)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !s32i loc(#loc238)
              %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc126)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc122)
                cir.yield %17 : !cir.bool loc(#loc122)
              }, false {
                %17 = cir.const #false loc(#loc122)
                cir.yield %17 : !cir.bool loc(#loc122)
              }) : (!cir.bool) -> !cir.bool loc(#loc122)
              cir.yield %16 : !cir.bool loc(#loc122)
            }, false {
              %12 = cir.const #false loc(#loc122)
              cir.yield %12 : !cir.bool loc(#loc122)
            }) : (!cir.bool) -> !cir.bool loc(#loc122)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc130)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
              %14 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc132)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc132)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc240)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc135)
                cir.store %16, %4 : !s32i, !cir.ptr<!s32i> loc(#loc242)
                cir.for : cond {
                  %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc137)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc138)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !s32i loc(#loc243)
                  %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc139)
                  cir.condition(%20) loc(#loc139)
                } body {
                  cir.scope {
                    %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc141)
                    %18 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc142)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc142)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc142)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc143)
                  } loc(#loc244)
                  cir.yield loc(#loc134)
                } step {
                  %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc144)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc145)
                  cir.store %18, %4 : !s32i, !cir.ptr<!s32i> loc(#loc245)
                  cir.yield loc(#loc241)
                } loc(#loc241)
              } loc(#loc241)
            } else {
              %12 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc146)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc146)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc147)
            } loc(#loc239)
          } loc(#loc236)
        } loc(#loc233)
      } loc(#loc232)
    } loc(#loc231)
    cir.return loc(#loc103)
  } loc(#loc229)
  cir.global "private"  external @CWE124_Buffer_Underwrite__CWE839_negative_22_goodG2BGlobal : !s32i {alignment = 4 : i64} loc(#loc246)
  cir.func  @CWE124_Buffer_Underwrite__CWE839_negative_22_goodG2BSink(%arg0: !s32i loc(fused[#loc152, #loc153])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc248)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    cir.scope {
      %1 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_negative_22_goodG2BGlobal : !cir.ptr<!s32i> loc(#loc246)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc157)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc157)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc252)
          %5 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc253)
          %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc253)
          cir.store %6, %5 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc253)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc167)
            %8 = cir.const #cir.int<10> : !s32i loc(#loc168)
            %9 = cir.cmp(lt, %7, %8) : !s32i, !s32i loc(#loc255)
            %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc169)
            cir.if %10 {
              %11 = cir.const #cir.int<1> : !s32i loc(#loc173)
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc174)
              %13 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc175)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc175)
              cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc257)
              cir.scope {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc178)
                cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc259)
                cir.for : cond {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc180)
                  %17 = cir.const #cir.int<10> : !s32i loc(#loc181)
                  %18 = cir.cmp(lt, %16, %17) : !s32i, !s32i loc(#loc260)
                  %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc182)
                  cir.condition(%19) loc(#loc182)
                } body {
                  cir.scope {
                    %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc184)
                    %17 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc185)
                    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc185)
                    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc185)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc186)
                  } loc(#loc261)
                  cir.yield loc(#loc177)
                } step {
                  %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc187)
                  %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc188)
                  cir.store %17, %4 : !s32i, !cir.ptr<!s32i> loc(#loc262)
                  cir.yield loc(#loc258)
                } loc(#loc258)
              } loc(#loc258)
            } else {
              %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc189)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc189)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc190)
            } loc(#loc256)
          } loc(#loc254)
        } loc(#loc251)
      } loc(#loc250)
    } loc(#loc249)
    cir.return loc(#loc151)
  } loc(#loc247)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__CWE839_negative_22b.c":0:0)
#loc1 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":23:1)
#loc2 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":23:12)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":45:27)
#loc8 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":25:1)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":49:1)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":26:1)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":27:5)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":48:5)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":27:8)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":28:5)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":29:9)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":47:9)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":30:13)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":30:17)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":31:13)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":31:34)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":34:13)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":46:13)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":34:17)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":34:24)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":34:22)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":35:13)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":42:13)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":44:13)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":36:32)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":36:24)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":36:17)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":38:17)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":41:17)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":38:25)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":38:21)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":38:28)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":38:32)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":38:30)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":39:17)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":40:41)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":40:34)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":40:21)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":38:37)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":38:36)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":45:17)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":56:1)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":56:12)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":66:19)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":85:27)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":61:1)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":89:1)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":62:1)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":63:5)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":88:5)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":63:8)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":64:5)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":67:5)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":69:5)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":66:9)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":70:9)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":87:9)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":71:13)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":71:17)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":72:13)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":72:34)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":74:13)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":86:13)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":74:17)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":74:25)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":74:22)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":74:27)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":74:30)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":74:38)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":74:40)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":74:35)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":75:13)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":82:13)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":84:13)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":76:32)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":76:24)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":76:17)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":78:17)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":81:17)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":78:25)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":78:21)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":78:28)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":78:32)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":78:30)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":79:17)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":80:41)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":80:34)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":80:21)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":78:37)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":78:36)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":85:17)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":57:1)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":57:12)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":92:1)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":115:1)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":93:1)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":94:5)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":114:5)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":94:8)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":95:5)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":96:9)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":113:9)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":97:13)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":97:17)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":98:13)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":98:34)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":100:13)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":112:13)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":100:17)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":100:25)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":100:22)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":100:27)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":100:30)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":100:38)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":100:40)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":100:35)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":101:13)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":108:13)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":110:13)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":102:32)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":102:24)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":102:17)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":104:17)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":107:17)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":104:25)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":104:21)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":104:28)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":104:32)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":104:30)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":105:17)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":106:41)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":106:34)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":106:21)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":104:37)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":104:36)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":111:27)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":111:17)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":58:1)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":58:12)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":118:1)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":142:1)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":119:1)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":120:5)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":141:5)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":120:8)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":121:5)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":122:9)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":140:9)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":123:13)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":123:17)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":124:13)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":124:34)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":127:13)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":139:13)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":127:17)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":127:24)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":127:22)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":128:13)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":135:13)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":137:13)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":129:32)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":129:24)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":129:17)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":131:17)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":134:17)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":131:25)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":131:21)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":131:28)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":131:32)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":131:30)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":132:17)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":133:41)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":133:34)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":133:21)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":131:37)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":131:36)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":138:27)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_negative_22b.c":138:17)
#loc191 = loc(fused[#loc1, #loc2])
#loc192 = loc(fused[#loc3, #loc4])
#loc193 = loc(fused[#loc5, #loc6])
#loc194 = loc(fused[#loc8, #loc9])
#loc196 = loc(fused[#loc13, #loc14])
#loc197 = loc(fused[#loc16, #loc14])
#loc198 = loc(fused[#loc17, #loc18])
#loc199 = loc(fused[#loc19, #loc20])
#loc200 = loc(fused[#loc21, #loc22])
#loc201 = loc(fused[#loc23, #loc24])
#loc202 = loc(fused[#loc25, #loc26])
#loc203 = loc(fused[#loc28, #loc29, #loc30, #loc24])
#loc204 = loc(fused[#loc33, #loc31])
#loc205 = loc(fused[#loc34, #loc35])
#loc206 = loc(fused[#loc37, #loc36])
#loc207 = loc(fused[#loc38, #loc39])
#loc208 = loc(fused[#loc41, #loc35])
#loc209 = loc(fused[#loc46, #loc45])
#loc210 = loc(fused[#loc48, #loc49])
#loc211 = loc(fused[#loc52, #loc53])
#loc213 = loc(fused[#loc57, #loc58])
#loc214 = loc(fused[#loc60, #loc61, #loc62, #loc58])
#loc215 = loc(fused[#loc64, #loc65])
#loc216 = loc(fused[#loc66, #loc67])
#loc217 = loc(fused[#loc68, #loc69])
#loc218 = loc(fused[#loc70, #loc71])
#loc219 = loc(fused[#loc72, #loc73])
#loc220 = loc(fused[#loc76, #loc78])
#loc221 = loc(fused[#loc80, #loc81, #loc82, #loc71])
#loc222 = loc(fused[#loc85, #loc83])
#loc223 = loc(fused[#loc86, #loc87])
#loc224 = loc(fused[#loc89, #loc88])
#loc225 = loc(fused[#loc90, #loc91])
#loc226 = loc(fused[#loc93, #loc87])
#loc227 = loc(fused[#loc98, #loc97])
#loc228 = loc(fused[#loc100, #loc101])
#loc229 = loc(fused[#loc102, #loc103])
#loc231 = loc(fused[#loc107, #loc108])
#loc232 = loc(fused[#loc110, #loc108])
#loc233 = loc(fused[#loc111, #loc112])
#loc234 = loc(fused[#loc113, #loc114])
#loc235 = loc(fused[#loc115, #loc116])
#loc236 = loc(fused[#loc117, #loc118])
#loc237 = loc(fused[#loc119, #loc120])
#loc238 = loc(fused[#loc123, #loc125])
#loc239 = loc(fused[#loc127, #loc128, #loc129, #loc118])
#loc240 = loc(fused[#loc132, #loc130])
#loc241 = loc(fused[#loc133, #loc134])
#loc242 = loc(fused[#loc136, #loc135])
#loc243 = loc(fused[#loc137, #loc138])
#loc244 = loc(fused[#loc140, #loc134])
#loc245 = loc(fused[#loc145, #loc144])
#loc246 = loc(fused[#loc148, #loc149])
#loc247 = loc(fused[#loc150, #loc151])
#loc249 = loc(fused[#loc155, #loc156])
#loc250 = loc(fused[#loc158, #loc156])
#loc251 = loc(fused[#loc159, #loc160])
#loc252 = loc(fused[#loc161, #loc162])
#loc253 = loc(fused[#loc163, #loc164])
#loc254 = loc(fused[#loc165, #loc166])
#loc255 = loc(fused[#loc167, #loc168])
#loc256 = loc(fused[#loc170, #loc171, #loc172, #loc166])
#loc257 = loc(fused[#loc175, #loc173])
#loc258 = loc(fused[#loc176, #loc177])
#loc259 = loc(fused[#loc179, #loc178])
#loc260 = loc(fused[#loc180, #loc181])
#loc261 = loc(fused[#loc183, #loc177])
#loc262 = loc(fused[#loc188, #loc187])
