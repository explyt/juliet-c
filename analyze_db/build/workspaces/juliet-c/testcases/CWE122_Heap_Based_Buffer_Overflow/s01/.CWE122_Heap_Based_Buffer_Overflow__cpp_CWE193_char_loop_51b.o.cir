!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":33:14)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":33:21)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":55:18)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":55:25)
#loc80 = loc(fused[#loc11, #loc12])
#loc93 = loc(fused[#loc44, #loc45])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_5111goodG2BSinkEPc.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc75)
  cir.global "private" constant cir_private @__const._ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_517badSinkEPc.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc76)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc77)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc78)
  cir.func @_ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_517badSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc80)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc13)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc76)
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc82)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc83)
      %4 = cir.get_global @__const._ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_517badSinkEPc.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc76)
      cir.copy %4 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc76)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc19)
      %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc20)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc19)
      cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc84)
      cir.scope {
        %10 = cir.const #cir.int<0> : !s32i loc(#loc25)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc25)
        cir.store %11, %2 : !u64i, !cir.ptr<!u64i> loc(#loc86)
        cir.for : cond {
          %12 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc27)
          %13 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc28)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc29)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc29)
          %16 = cir.binop(add, %13, %15) : !u64i loc(#loc87)
          %17 = cir.cmp(lt, %12, %16) : !u64i, !cir.bool loc(#loc88)
          cir.condition(%17) loc(#loc88)
        } body {
          cir.scope {
            %12 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc31)
            %13 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc32)
            %14 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %12 : !u64i), !cir.ptr<!s8i> loc(#loc32)
            %15 = cir.load %14 : !cir.ptr<!s8i>, !s8i loc(#loc32)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
            %17 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc34)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc35)
            cir.store %15, %18 : !s8i, !cir.ptr<!s8i> loc(#loc90)
          } loc(#loc89)
          cir.yield loc(#loc24)
        } step {
          %12 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc37)
          %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc38)
          cir.store %13, %2 : !u64i, !cir.ptr<!u64i> loc(#loc91)
          cir.yield loc(#loc85)
        } loc(#loc85)
      } loc(#loc85)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
      cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc40)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
      cir.delete.array %9 : <!s8i> loc(#loc41)
    } loc(#loc81)
    cir.return loc(#loc10)
  } loc(#loc79)
  cir.func @_ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_5111goodG2BSinkEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc44, #loc45])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc93)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc46)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc75)
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc95)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc96)
      %4 = cir.get_global @__const._ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_5111goodG2BSinkEPc.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc75)
      cir.copy %4 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc75)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc52)
      %6 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc53)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc52)
      cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc97)
      cir.scope {
        %10 = cir.const #cir.int<0> : !s32i loc(#loc58)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc58)
        cir.store %11, %2 : !u64i, !cir.ptr<!u64i> loc(#loc99)
        cir.for : cond {
          %12 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc60)
          %13 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc61)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc62)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc62)
          %16 = cir.binop(add, %13, %15) : !u64i loc(#loc100)
          %17 = cir.cmp(lt, %12, %16) : !u64i, !cir.bool loc(#loc101)
          cir.condition(%17) loc(#loc101)
        } body {
          cir.scope {
            %12 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc64)
            %13 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc65)
            %14 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %12 : !u64i), !cir.ptr<!s8i> loc(#loc65)
            %15 = cir.load %14 : !cir.ptr<!s8i>, !s8i loc(#loc65)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
            %17 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc67)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc68)
            cir.store %15, %18 : !s8i, !cir.ptr<!s8i> loc(#loc103)
          } loc(#loc102)
          cir.yield loc(#loc57)
        } step {
          %12 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc70)
          %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc71)
          cir.store %13, %2 : !u64i, !cir.ptr<!u64i> loc(#loc104)
          cir.yield loc(#loc98)
        } loc(#loc98)
      } loc(#loc98)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
      cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc73)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
      cir.delete.array %9 : <!s8i> loc(#loc74)
    } loc(#loc94)
    cir.return loc(#loc43)
  } loc(#loc92)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":58:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":58:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":36:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":36:29)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":33:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":48:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":34:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":35:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":47:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":37:9)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":37:16)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":37:19)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":38:21)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":38:28)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":38:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":38:34)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":41:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":44:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":41:18)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":41:14)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":41:21)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":41:25)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":41:37)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":42:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":43:30)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":43:23)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":43:13)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":43:18)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":43:19)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":43:31)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":41:41)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":41:40)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":45:19)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":45:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":46:19)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":55:1)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":70:1)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":56:1)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":57:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":69:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":59:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":59:16)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":59:19)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":60:21)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":60:28)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":60:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":60:34)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":63:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":66:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":63:18)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":63:14)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":63:21)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":63:25)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":63:37)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":64:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":65:30)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":65:23)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":65:13)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":65:18)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":65:19)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":65:31)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":63:41)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":63:40)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":67:19)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":67:9)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_51b.cpp":68:19)
#loc75 = loc(fused[#loc1, #loc2])
#loc76 = loc(fused[#loc3, #loc4])
#loc77 = loc(fused[#loc5, #loc6])
#loc78 = loc(fused[#loc7, #loc8])
#loc79 = loc(fused[#loc9, #loc10])
#loc81 = loc(fused[#loc14, #loc15])
#loc82 = loc(fused[#loc16, #loc17])
#loc83 = loc(fused[#loc16, #loc18])
#loc84 = loc(fused[#loc21, #loc22])
#loc85 = loc(fused[#loc23, #loc24])
#loc86 = loc(fused[#loc26, #loc25])
#loc87 = loc(fused[#loc28, #loc29])
#loc88 = loc(fused[#loc27, #loc29])
#loc89 = loc(fused[#loc30, #loc24])
#loc90 = loc(fused[#loc33, #loc36])
#loc91 = loc(fused[#loc38, #loc37])
#loc92 = loc(fused[#loc42, #loc43])
#loc94 = loc(fused[#loc47, #loc48])
#loc95 = loc(fused[#loc49, #loc50])
#loc96 = loc(fused[#loc49, #loc51])
#loc97 = loc(fused[#loc54, #loc55])
#loc98 = loc(fused[#loc56, #loc57])
#loc99 = loc(fused[#loc59, #loc58])
#loc100 = loc(fused[#loc61, #loc62])
#loc101 = loc(fused[#loc60, #loc62])
#loc102 = loc(fused[#loc63, #loc57])
#loc103 = loc(fused[#loc66, #loc69])
#loc104 = loc(fused[#loc71, #loc70])
