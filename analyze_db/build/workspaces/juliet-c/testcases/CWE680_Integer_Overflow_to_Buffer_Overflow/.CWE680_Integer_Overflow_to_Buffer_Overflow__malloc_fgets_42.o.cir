!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":23:22)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":23:26)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":67:26)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":67:30)
#loc164 = loc(fused[#loc12, #loc13])
#loc199 = loc(fused[#loc101, #loc102])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc159)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc160)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc161)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc12, #loc13])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc164)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc11)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc14)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc166)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc166)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc166)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc21)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc22)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc22)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc22)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc22)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc22)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc22)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc22)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc22)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc160)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc24)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc25)
        %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc168)
        cir.if %20 {
          %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc29)
          %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc30)
          cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
        } else {
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc33)
        } loc(#loc169)
      } loc(#loc167)
    } loc(#loc165)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    cir.return %3 : !s32i loc(#loc171)
  } loc(#loc163)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc172)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc173)
  cir.func private @printIntLine(!s32i) loc(#loc174)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc175)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc177)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc49)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %4 = cir.call @badSource(%3) : (!s32i) -> !s32i loc(#loc52)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc181)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc182)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc61)
      %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc62)
      %10 = cir.const #cir.int<4> : !u64i loc(#loc183)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc184)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc61)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc185)
      cir.store %13, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc186)
      cir.scope {
        %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
        %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc70)
        %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc70)
        %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s32i>, !cir.bool loc(#loc188)
        cir.if %24 {
          %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc72)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc73)
          %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc74)
          cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc72)
        } loc(#loc189)
      } loc(#loc187)
      cir.scope {
        %21 = cir.const #cir.int<0> : !s32i loc(#loc77)
        %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc77)
        cir.store %22, %5 : !u64i, !cir.ptr<!u64i> loc(#loc191)
        cir.for : cond {
          %23 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc79)
          %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc80)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc80)
          %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc192)
          cir.condition(%26) loc(#loc81)
        } body {
          cir.scope {
            %23 = cir.const #cir.int<0> : !s32i loc(#loc83)
            %24 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
            %25 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc85)
            %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc86)
            cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc194)
          } loc(#loc193)
          cir.yield loc(#loc76)
        } step {
          %23 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc87)
          %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc88)
          cir.store %24, %5 : !u64i, !cir.ptr<!u64i> loc(#loc195)
          cir.yield loc(#loc190)
        } loc(#loc190)
      } loc(#loc190)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc90)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc91)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc89)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc92)
      %18 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc93)
      %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc94)
      cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc93)
    } loc(#loc180)
    cir.return loc(#loc45)
  } loc(#loc176)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc197)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc97)
    cir.return loc(#loc96)
  } loc(#loc196)
  cir.func internal private @goodG2BSource(%arg0: !s32i loc(fused[#loc101, #loc102])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc199)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc100)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc103)
    %2 = cir.const #cir.int<20> : !s32i loc(#loc104)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc201)
    cir.return %4 : !s32i loc(#loc201)
  } loc(#loc198)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc203)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc113)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %4 = cir.call @goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc116)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc207)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc208)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc125)
      %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc126)
      %10 = cir.const #cir.int<4> : !u64i loc(#loc209)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc210)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc125)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc211)
      cir.store %13, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc212)
      cir.scope {
        %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc133)
        %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc134)
        %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc134)
        %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s32i>, !cir.bool loc(#loc214)
        cir.if %24 {
          %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc136)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc137)
          %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc138)
          cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc136)
        } loc(#loc215)
      } loc(#loc213)
      cir.scope {
        %21 = cir.const #cir.int<0> : !s32i loc(#loc141)
        %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc141)
        cir.store %22, %5 : !u64i, !cir.ptr<!u64i> loc(#loc217)
        cir.for : cond {
          %23 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc143)
          %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc144)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc144)
          %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc218)
          cir.condition(%26) loc(#loc145)
        } body {
          cir.scope {
            %23 = cir.const #cir.int<0> : !s32i loc(#loc147)
            %24 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc148)
            %25 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc149)
            %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc150)
            cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc220)
          } loc(#loc219)
          cir.yield loc(#loc140)
        } step {
          %23 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc151)
          %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc152)
          cir.store %24, %5 : !u64i, !cir.ptr<!u64i> loc(#loc221)
          cir.yield loc(#loc216)
        } loc(#loc216)
      } loc(#loc216)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc153)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc154)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc155)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc153)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc156)
      %18 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc157)
      %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc158)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc158)
      cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc157)
    } loc(#loc206)
    cir.return loc(#loc109)
  } loc(#loc202)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":35:23)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":23:1)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":39:1)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":24:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":25:5)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":37:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":26:9)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":26:45)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":28:9)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":36:9)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":28:19)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":28:32)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":28:49)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":28:13)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":28:59)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":29:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":32:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":34:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":31:25)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":31:20)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":31:13)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":31:36)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":35:13)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":38:12)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":38:5)
#loc36 = loc("/usr/include/stdlib.h":672:1)
#loc37 = loc("/usr/include/stdlib.h":672:45)
#loc38 = loc("/usr/include/stdlib.h":756:1)
#loc39 = loc("/usr/include/stdlib.h":756:70)
#loc40 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc41 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc42 = loc("/usr/include/stdlib.h":687:1)
#loc43 = loc("/usr/include/stdlib.h":687:32)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":41:1)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":61:1)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":43:5)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":43:9)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":45:13)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":45:12)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":45:5)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":46:22)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":46:12)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":46:5)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":46:26)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":47:5)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":60:5)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":48:9)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":48:16)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":49:9)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":49:14)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":52:28)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":52:35)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":52:42)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":52:52)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":52:53)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":52:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":53:9)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":53:43)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":53:13)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":53:27)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":53:33)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":53:34)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":53:40)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":53:39)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":54:9)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":57:9)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":54:18)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":54:14)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":54:21)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":54:33)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":54:23)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":55:9)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":56:29)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":56:13)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":56:24)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":56:25)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":54:40)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":54:39)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":58:22)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":58:33)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":58:34)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":58:9)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":59:9)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":59:14)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":97:1)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":100:1)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":99:5)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":99:13)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":67:1)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":72:1)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":68:1)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":70:12)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":70:5)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":71:12)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":71:5)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":75:1)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":95:1)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":77:5)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":77:9)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":79:13)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":79:12)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":79:5)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":80:26)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":80:12)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":80:5)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":80:30)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":81:5)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":94:5)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":82:9)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":82:16)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":83:9)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":83:14)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":86:28)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":86:35)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":86:42)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":86:52)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":86:53)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":86:9)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":87:9)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":87:43)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":87:13)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":87:27)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":87:33)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":87:34)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":87:40)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":87:39)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":88:9)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":91:9)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":88:18)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":88:14)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":88:21)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":88:33)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":88:23)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":89:9)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":90:29)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":90:13)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":90:24)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":90:25)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":88:40)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":88:39)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":92:22)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":92:33)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":92:34)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":92:9)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":93:9)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_42.c":93:14)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc7, #loc8])
#loc163 = loc(fused[#loc10, #loc11])
#loc165 = loc(fused[#loc15, #loc16])
#loc166 = loc(fused[#loc17, #loc18])
#loc167 = loc(fused[#loc19, #loc20])
#loc168 = loc(fused[#loc24, #loc25])
#loc169 = loc(fused[#loc26, #loc27, #loc28, #loc20])
#loc170 = loc(fused[#loc31, #loc32])
#loc171 = loc(fused[#loc35, #loc34])
#loc172 = loc(fused[#loc36, #loc37])
#loc173 = loc(fused[#loc38, #loc39])
#loc174 = loc(fused[#loc40, #loc41])
#loc175 = loc(fused[#loc42, #loc43])
#loc176 = loc(fused[#loc44, #loc45])
#loc177 = loc(fused[#loc46, #loc47])
#loc178 = loc(fused[#loc50, #loc48])
#loc179 = loc(fused[#loc53, #loc54])
#loc180 = loc(fused[#loc55, #loc56])
#loc181 = loc(fused[#loc57, #loc58])
#loc182 = loc(fused[#loc59, #loc60])
#loc183 = loc(fused[#loc63, #loc64])
#loc184 = loc(fused[#loc62, #loc64])
#loc185 = loc(fused[#loc61, #loc65])
#loc186 = loc(fused[#loc66, #loc65])
#loc187 = loc(fused[#loc67, #loc68])
#loc188 = loc(fused[#loc69, #loc70])
#loc189 = loc(fused[#loc71, #loc68])
#loc190 = loc(fused[#loc75, #loc76])
#loc191 = loc(fused[#loc78, #loc77])
#loc192 = loc(fused[#loc79, #loc80])
#loc193 = loc(fused[#loc82, #loc76])
#loc194 = loc(fused[#loc84, #loc83])
#loc195 = loc(fused[#loc88, #loc87])
#loc196 = loc(fused[#loc95, #loc96])
#loc197 = loc(fused[#loc97, #loc98])
#loc198 = loc(fused[#loc99, #loc100])
#loc200 = loc(fused[#loc105, #loc104])
#loc201 = loc(fused[#loc107, #loc106])
#loc202 = loc(fused[#loc108, #loc109])
#loc203 = loc(fused[#loc110, #loc111])
#loc204 = loc(fused[#loc114, #loc112])
#loc205 = loc(fused[#loc117, #loc118])
#loc206 = loc(fused[#loc119, #loc120])
#loc207 = loc(fused[#loc121, #loc122])
#loc208 = loc(fused[#loc123, #loc124])
#loc209 = loc(fused[#loc127, #loc128])
#loc210 = loc(fused[#loc126, #loc128])
#loc211 = loc(fused[#loc125, #loc129])
#loc212 = loc(fused[#loc130, #loc129])
#loc213 = loc(fused[#loc131, #loc132])
#loc214 = loc(fused[#loc133, #loc134])
#loc215 = loc(fused[#loc135, #loc132])
#loc216 = loc(fused[#loc139, #loc140])
#loc217 = loc(fused[#loc142, #loc141])
#loc218 = loc(fused[#loc143, #loc144])
#loc219 = loc(fused[#loc146, #loc140])
#loc220 = loc(fused[#loc148, #loc147])
#loc221 = loc(fused[#loc152, #loc151])
