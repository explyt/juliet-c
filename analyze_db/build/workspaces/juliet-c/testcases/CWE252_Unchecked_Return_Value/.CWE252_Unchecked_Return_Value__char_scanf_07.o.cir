!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_scanf_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc77)
  cir.func private @__isoc99_scanf(!cir.ptr<!s8i>, ...) -> !s32i loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_scanf_07_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc77)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc10)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc11)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc81)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc84)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc85)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc84)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc84)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc85)
          %8 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc19)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc5)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc5)
          %11 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
          %12 = cir.call @__isoc99_scanf(%10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc19)
        } loc(#loc83)
      } loc(#loc82)
    } loc(#loc80)
    cir.return loc(#loc7)
  } loc(#loc79)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_scanf_07_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc87)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc23)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc88)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc25)
    cir.return loc(#loc22)
  } loc(#loc86)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc29)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"scanf failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc30)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc77)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc36)
      %3 = cir.cmp(ne, %1, %2) : !s32i, !cir.bool loc(#loc92)
      cir.if %3 {
        %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc29)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc29)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc40)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc95)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc96)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc95)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc95)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc96)
          cir.scope {
            %8 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc49)
            %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc50)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc50)
            %11 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
            %12 = cir.call @__isoc99_scanf(%10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc49)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc52)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc52)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc98)
            cir.if %15 {
              %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc30)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc30)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc54)
            } loc(#loc99)
          } loc(#loc97)
        } loc(#loc94)
      } loc(#loc93)
    } loc(#loc91)
    cir.return loc(#loc32)
  } loc(#loc90)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc77)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc60)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc102)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc105)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc106)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc105)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc105)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
          cir.scope {
            %8 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc70)
            %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc71)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc71)
            %11 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
            %12 = cir.call @__isoc99_scanf(%10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc70)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc73)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc73)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc108)
            cir.if %15 {
              %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc75)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc75)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc76)
            } loc(#loc109)
          } loc(#loc107)
        } loc(#loc104)
      } loc(#loc103)
    } loc(#loc101)
    cir.return loc(#loc56)
  } loc(#loc100)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_scanf_07.c":0:0)
#loc1 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":25:1)
#loc2 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":25:25)
#loc3 = loc("/usr/include/stdio.h":466:1)
#loc4 = loc("/usr/include/stdio.h":466:12)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":39:19)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":29:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":42:1)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":31:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":41:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":31:8)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":31:20)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":32:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":33:9)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":40:9)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":36:13)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":36:36)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":37:13)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":37:27)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":39:13)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":39:29)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":91:1)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":95:1)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":93:5)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":93:11)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":94:5)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":94:11)
#loc27 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc28 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":54:19)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":66:27)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":49:1)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":70:1)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":51:5)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":69:5)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":51:8)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":51:20)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":52:5)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":55:5)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":57:5)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":54:9)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":58:9)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":68:9)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":61:13)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":61:36)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":62:13)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":62:27)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":64:13)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":67:13)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":64:17)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":64:23)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":64:33)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":64:42)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":65:13)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":66:17)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":73:1)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":89:1)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":75:5)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":88:5)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":75:8)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":75:20)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":76:5)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":77:9)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":87:9)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":80:13)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":80:36)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":81:13)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":81:27)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":83:13)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":86:13)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":83:17)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":83:23)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":83:33)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":83:42)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":84:13)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":85:27)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_scanf_07.c":85:17)
#loc77 = loc(fused[#loc1, #loc2])
#loc78 = loc(fused[#loc3, #loc4])
#loc79 = loc(fused[#loc6, #loc7])
#loc80 = loc(fused[#loc8, #loc9])
#loc81 = loc(fused[#loc10, #loc11])
#loc82 = loc(fused[#loc12, #loc9])
#loc83 = loc(fused[#loc13, #loc14])
#loc84 = loc(fused[#loc15, #loc16])
#loc85 = loc(fused[#loc17, #loc18])
#loc86 = loc(fused[#loc21, #loc22])
#loc87 = loc(fused[#loc23, #loc24])
#loc88 = loc(fused[#loc25, #loc26])
#loc89 = loc(fused[#loc27, #loc28])
#loc90 = loc(fused[#loc31, #loc32])
#loc91 = loc(fused[#loc33, #loc34])
#loc92 = loc(fused[#loc35, #loc36])
#loc93 = loc(fused[#loc37, #loc38, #loc39, #loc34])
#loc94 = loc(fused[#loc41, #loc42])
#loc95 = loc(fused[#loc43, #loc44])
#loc96 = loc(fused[#loc45, #loc46])
#loc97 = loc(fused[#loc47, #loc48])
#loc98 = loc(fused[#loc49, #loc52])
#loc99 = loc(fused[#loc53, #loc48])
#loc100 = loc(fused[#loc55, #loc56])
#loc101 = loc(fused[#loc57, #loc58])
#loc102 = loc(fused[#loc59, #loc60])
#loc103 = loc(fused[#loc61, #loc58])
#loc104 = loc(fused[#loc62, #loc63])
#loc105 = loc(fused[#loc64, #loc65])
#loc106 = loc(fused[#loc66, #loc67])
#loc107 = loc(fused[#loc68, #loc69])
#loc108 = loc(fused[#loc70, #loc73])
#loc109 = loc(fused[#loc74, #loc69])
