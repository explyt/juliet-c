!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc47 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":86:10)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":86:14)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":86:20)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":86:32)
#loc119 = loc(fused[#loc47, #loc48])
#loc120 = loc(fused[#loc49, #loc50])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_snprintf_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\0A\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_snprintf_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc101)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc11)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc103)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc13)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc14)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc104)
        cir.condition(%4) loc(#loc15)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc107)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc108)
            %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc107)
            cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc107)
            %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc22)
            cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
            %6 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc23)
            %7 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
            %8 = cir.const #cir.int<100> : !s32i loc(#loc25)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc25)
            %10 = cir.const #cir.int<6> : !u64i loc(#loc109)
            %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc110)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc28)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc28)
            %14 = cir.binop(sub, %11, %13) : !u64i loc(#loc111)
            %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc3)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc3)
            %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc4)
            %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc4)
            %19 = cir.call @snprintf(%7, %14, %16, %18) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc23)
          } loc(#loc106)
        } loc(#loc105)
        cir.yield loc(#loc10)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc30)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc112)
        cir.yield loc(#loc102)
      } loc(#loc102)
    } loc(#loc102)
    cir.return loc(#loc6)
  } loc(#loc100)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_snprintf_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc114)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    cir.return loc(#loc32)
  } loc(#loc113)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc115)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc116)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc44)
  cir.func @main(%arg0: !s32i loc(fused[#loc47, #loc48]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc49, #loc50])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc119)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc120)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc46)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc51)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc51)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc52)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc53)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc53)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc54)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc41)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %8 = cir.get_global @CWE252_Unchecked_Return_Value__char_snprintf_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc121)
    cir.call @CWE252_Unchecked_Return_Value__char_snprintf_17_good() : () -> () loc(#loc56)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc42)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc43)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %13 = cir.get_global @CWE252_Unchecked_Return_Value__char_snprintf_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc122)
    cir.call @CWE252_Unchecked_Return_Value__char_snprintf_17_bad() : () -> () loc(#loc60)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc44)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc63)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    cir.return %17 : !s32i loc(#loc123)
  } loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"snprintf failed!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc65)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc125)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc72)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc127)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc74)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc75)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc128)
        cir.condition(%4) loc(#loc76)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc131)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc132)
            %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc131)
            cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc131)
            %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
            cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
            cir.scope {
              %6 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc86)
              %7 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
              %8 = cir.const #cir.int<100> : !s32i loc(#loc88)
              %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc88)
              %10 = cir.const #cir.int<6> : !u64i loc(#loc134)
              %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc135)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc91)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc91)
              %14 = cir.binop(sub, %11, %13) : !u64i loc(#loc136)
              %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc92)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc92)
              %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc93)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc93)
              %19 = cir.call @snprintf(%7, %14, %16, %18) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc86)
              %20 = cir.const #cir.int<0> : !s32i loc(#loc94)
              %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc137)
              cir.if %21 {
                %22 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc65)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc65)
                cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc96)
              } loc(#loc138)
            } loc(#loc133)
          } loc(#loc130)
        } loc(#loc129)
        cir.yield loc(#loc71)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc97)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc98)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc139)
        cir.yield loc(#loc126)
      } loc(#loc126)
    } loc(#loc126)
    cir.return loc(#loc67)
  } loc(#loc124)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_snprintf_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":43:46)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":43:54)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":32:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":46:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":34:5)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":34:9)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":35:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":45:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":35:13)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":35:9)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":35:16)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":35:20)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":35:18)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":36:5)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":37:9)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":44:9)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":40:13)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":40:36)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":41:13)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":41:27)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":43:13)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":43:22)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":43:27)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":43:31)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":43:41)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":43:43)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":35:24)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":35:23)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":72:1)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":75:1)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":74:5)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":74:11)
#loc35 = loc("/usr/include/stdlib.h":575:1)
#loc36 = loc("/usr/include/stdlib.h":575:41)
#loc37 = loc("/usr/include/time.h":76:1)
#loc38 = loc("/usr/include/time.h":76:38)
#loc39 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc40 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":91:15)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":93:15)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":96:15)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":98:15)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":86:1)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":101:1)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":87:1)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":89:27)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":89:22)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":89:5)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":91:5)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":92:5)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":92:58)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":93:5)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":96:5)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":97:5)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":97:57)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":98:5)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":100:12)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":100:5)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":66:27)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":53:1)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":70:1)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":55:5)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":55:9)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":56:5)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":69:5)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":56:13)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":56:9)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":56:16)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":56:20)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":56:18)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":57:5)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":58:9)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":68:9)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":61:13)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":61:36)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":62:13)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":62:27)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":64:13)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":67:13)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":64:17)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":64:26)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":64:31)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":64:35)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":64:45)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":64:47)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":64:50)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":64:58)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":64:65)
#loc95 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":65:13)
#loc96 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":66:17)
#loc97 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":56:24)
#loc98 = loc("CWE252_Unchecked_Return_Value__char_snprintf_17.c":56:23)
#loc99 = loc(fused[#loc1, #loc2])
#loc100 = loc(fused[#loc5, #loc6])
#loc101 = loc(fused[#loc7, #loc8])
#loc102 = loc(fused[#loc9, #loc10])
#loc103 = loc(fused[#loc12, #loc11])
#loc104 = loc(fused[#loc13, #loc14])
#loc105 = loc(fused[#loc16, #loc10])
#loc106 = loc(fused[#loc17, #loc18])
#loc107 = loc(fused[#loc19, #loc20])
#loc108 = loc(fused[#loc21, #loc22])
#loc109 = loc(fused[#loc26, #loc27])
#loc110 = loc(fused[#loc25, #loc27])
#loc111 = loc(fused[#loc25, #loc28])
#loc112 = loc(fused[#loc30, #loc29])
#loc113 = loc(fused[#loc31, #loc32])
#loc114 = loc(fused[#loc33, #loc34])
#loc115 = loc(fused[#loc35, #loc36])
#loc116 = loc(fused[#loc37, #loc38])
#loc117 = loc(fused[#loc39, #loc40])
#loc118 = loc(fused[#loc45, #loc46])
#loc121 = loc(fused[#loc56, #loc57])
#loc122 = loc(fused[#loc60, #loc61])
#loc123 = loc(fused[#loc64, #loc63])
#loc124 = loc(fused[#loc66, #loc67])
#loc125 = loc(fused[#loc68, #loc69])
#loc126 = loc(fused[#loc70, #loc71])
#loc127 = loc(fused[#loc73, #loc72])
#loc128 = loc(fused[#loc74, #loc75])
#loc129 = loc(fused[#loc77, #loc71])
#loc130 = loc(fused[#loc78, #loc79])
#loc131 = loc(fused[#loc80, #loc81])
#loc132 = loc(fused[#loc82, #loc83])
#loc133 = loc(fused[#loc84, #loc85])
#loc134 = loc(fused[#loc89, #loc90])
#loc135 = loc(fused[#loc88, #loc90])
#loc136 = loc(fused[#loc88, #loc91])
#loc137 = loc(fused[#loc86, #loc94])
#loc138 = loc(fused[#loc95, #loc85])
#loc139 = loc(fused[#loc98, #loc97])
