!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE685_Function_Call_With_Incorrect_Number_of_Arguments/CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @sprintf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s %s\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"AAA\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc59)
  cir.func no_proto @CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc61)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc13)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc63)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc16)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc64)
        cir.condition(%4) loc(#loc17)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc67)
            %3 = cir.get_global @sprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc23)
            %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
            %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc3)
            %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc3)
            %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc4)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc4)
            %9 = cir.call @sprintf(%4, %6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc23)
            %10 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
            cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc26)
          } loc(#loc66)
        } loc(#loc65)
        cir.yield loc(#loc12)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc28)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc68)
        cir.yield loc(#loc62)
      } loc(#loc62)
    } loc(#loc62)
    cir.return loc(#loc8)
  } loc(#loc60)
  cir.func no_proto @CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc70)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc31)
    cir.return loc(#loc30)
  } loc(#loc69)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc72)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc39)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc42)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc75)
        cir.condition(%4) loc(#loc43)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc78)
            %3 = cir.get_global @sprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc49)
            %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
            %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc51)
            %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc51)
            %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc52)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc52)
            %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc53)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc53)
            %11 = cir.call @sprintf(%4, %6, %8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc49)
            %12 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc55)
          } loc(#loc77)
        } loc(#loc76)
        cir.yield loc(#loc38)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc57)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc79)
        cir.yield loc(#loc73)
      } loc(#loc73)
    } loc(#loc73)
    cir.return loc(#loc34)
  } loc(#loc71)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE685_Function_Call_With_Incorrect_Number_of_Arguments/CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":365:1)
#loc2 = loc("/usr/include/stdio.h":366:45)
#loc3 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":31:27)
#loc4 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":31:36)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":23:1)
#loc8 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":35:1)
#loc9 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":25:5)
#loc10 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":25:9)
#loc11 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":26:5)
#loc12 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":34:5)
#loc13 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":26:13)
#loc14 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":26:9)
#loc15 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":26:16)
#loc16 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":26:20)
#loc17 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":26:18)
#loc18 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":27:5)
#loc19 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":28:9)
#loc20 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":33:9)
#loc21 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":29:13)
#loc22 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":29:32)
#loc23 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":31:13)
#loc24 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":31:21)
#loc25 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":32:23)
#loc26 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":32:13)
#loc27 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":26:24)
#loc28 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":26:23)
#loc29 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":56:1)
#loc30 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":59:1)
#loc31 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":58:5)
#loc32 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":58:11)
#loc33 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":42:1)
#loc34 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":54:1)
#loc35 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":44:5)
#loc36 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":44:9)
#loc37 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":45:5)
#loc38 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":53:5)
#loc39 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":45:13)
#loc40 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":45:9)
#loc41 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":45:16)
#loc42 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":45:20)
#loc43 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":45:18)
#loc44 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":46:5)
#loc45 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":47:9)
#loc46 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":52:9)
#loc47 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":48:13)
#loc48 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":48:32)
#loc49 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":50:13)
#loc50 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":50:21)
#loc51 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":50:27)
#loc52 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":50:36)
#loc53 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":50:51)
#loc54 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":51:23)
#loc55 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":51:13)
#loc56 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":45:24)
#loc57 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_17.c":45:23)
#loc58 = loc(fused[#loc1, #loc2])
#loc59 = loc(fused[#loc5, #loc6])
#loc60 = loc(fused[#loc7, #loc8])
#loc61 = loc(fused[#loc9, #loc10])
#loc62 = loc(fused[#loc11, #loc12])
#loc63 = loc(fused[#loc14, #loc13])
#loc64 = loc(fused[#loc15, #loc16])
#loc65 = loc(fused[#loc18, #loc12])
#loc66 = loc(fused[#loc19, #loc20])
#loc67 = loc(fused[#loc21, #loc22])
#loc68 = loc(fused[#loc28, #loc27])
#loc69 = loc(fused[#loc29, #loc30])
#loc70 = loc(fused[#loc31, #loc32])
#loc71 = loc(fused[#loc33, #loc34])
#loc72 = loc(fused[#loc35, #loc36])
#loc73 = loc(fused[#loc37, #loc38])
#loc74 = loc(fused[#loc40, #loc39])
#loc75 = loc(fused[#loc41, #loc42])
#loc76 = loc(fused[#loc44, #loc38])
#loc77 = loc(fused[#loc45, #loc46])
#loc78 = loc(fused[#loc47, #loc48])
#loc79 = loc(fused[#loc57, #loc56])
