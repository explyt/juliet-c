!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_malloc_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc64)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Initialize\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc66)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc67)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_malloc_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc69)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc70)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc16)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc17)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc17)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc71)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc72)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc73)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc74)
    cir.br ^bb1 loc(#loc75)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc75)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %10 ^bb3, ^bb4 loc(#loc24)
  ^bb3:  // pred: ^bb2
    %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc25)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc5)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc5)
    %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc25)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc28)
    %17 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc29)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc30)
    cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc29)
    cir.br ^bb4 loc(#loc31)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc23)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc11)
  } loc(#loc68)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_malloc_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc77)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    cir.return loc(#loc33)
  } loc(#loc76)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc79)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc40)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc80)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc42)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc43)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc43)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc81)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc82)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc42)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc83)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
    cir.br ^bb1 loc(#loc85)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc85)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc50)
    cir.brcond %10 ^bb3, ^bb8 loc(#loc50)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc86)
  ^bb4:  // pred: ^bb3
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc54)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc54)
    %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc87)
    cir.brcond %14 ^bb5, ^bb6 loc(#loc88)
  ^bb5:  // pred: ^bb4
    %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc56)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc58)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc58)
    %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc56)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc61)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
    cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
    cir.br ^bb6 loc(#loc52)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc52)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc63)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc49)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc37)
  } loc(#loc78)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_malloc_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":32:22)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":23:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":37:1)
#loc12 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":25:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":25:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":26:12)
#loc15 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":26:5)
#loc16 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":28:20)
#loc17 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":28:27)
#loc18 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":28:30)
#loc19 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":28:41)
#loc20 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":28:42)
#loc21 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":28:5)
#loc22 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":29:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":36:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":29:11)
#loc25 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":32:9)
#loc26 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":32:16)
#loc27 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":33:19)
#loc28 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":33:9)
#loc29 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":34:9)
#loc30 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":34:14)
#loc31 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":35:9)
#loc32 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":63:1)
#loc33 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":66:1)
#loc34 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":65:5)
#loc35 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":65:13)
#loc36 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":44:1)
#loc37 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":61:1)
#loc38 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":46:5)
#loc39 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":46:12)
#loc40 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":47:12)
#loc41 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":47:5)
#loc42 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":49:20)
#loc43 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":49:27)
#loc44 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":49:30)
#loc45 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":49:41)
#loc46 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":49:42)
#loc47 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":49:5)
#loc48 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":50:5)
#loc49 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":60:5)
#loc50 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":50:11)
#loc51 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":53:9)
#loc52 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":58:9)
#loc53 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":53:13)
#loc54 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":53:21)
#loc55 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":54:9)
#loc56 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":55:13)
#loc57 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":55:20)
#loc58 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":55:26)
#loc59 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":56:23)
#loc60 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":56:13)
#loc61 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":57:13)
#loc62 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":57:18)
#loc63 = loc("CWE690_NULL_Deref_From_Return__char_malloc_16.c":59:9)
#loc64 = loc(fused[#loc1, #loc2])
#loc65 = loc(fused[#loc3, #loc4])
#loc66 = loc(fused[#loc6, #loc7])
#loc67 = loc(fused[#loc8, #loc9])
#loc68 = loc(fused[#loc10, #loc11])
#loc69 = loc(fused[#loc12, #loc13])
#loc70 = loc(fused[#loc15, #loc14])
#loc71 = loc(fused[#loc18, #loc19])
#loc72 = loc(fused[#loc17, #loc19])
#loc73 = loc(fused[#loc16, #loc20])
#loc74 = loc(fused[#loc21, #loc20])
#loc75 = loc(fused[#loc22, #loc23])
#loc76 = loc(fused[#loc32, #loc33])
#loc77 = loc(fused[#loc34, #loc35])
#loc78 = loc(fused[#loc36, #loc37])
#loc79 = loc(fused[#loc38, #loc39])
#loc80 = loc(fused[#loc41, #loc40])
#loc81 = loc(fused[#loc44, #loc45])
#loc82 = loc(fused[#loc43, #loc45])
#loc83 = loc(fused[#loc42, #loc46])
#loc84 = loc(fused[#loc47, #loc46])
#loc85 = loc(fused[#loc48, #loc49])
#loc86 = loc(fused[#loc51, #loc52])
#loc87 = loc(fused[#loc53, #loc54])
#loc88 = loc(fused[#loc55, #loc52])
