!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":22:67)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":22:81)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":52:71)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":52:85)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":77:71)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":77:85)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":84:23)
#true = #cir.bool<true> : !cir.bool
#loc132 = loc(fused[#loc8, #loc9])
#loc147 = loc(fused[#loc47, #loc48])
#loc162 = loc(fused[#loc88, #loc89])
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc129)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc5)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b_badSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc133)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc134)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc132)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc135)
    cir.store %arg0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc16)
    %4 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc17)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc18)
    %6 = cir.ptr_stride(%4 : !cir.ptr<!s32i>, %5 : !s32i), !cir.ptr<!s32i> loc(#loc15)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    cir.br ^bb1 loc(#loc136)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc134)
    cir.store %8, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc134)
    cir.br ^bb2 loc(#loc137)
  ^bb2:  // pred: ^bb1
    %9 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc138)
    cir.brcond %11 ^bb3, ^bb12 loc(#loc139)
  ^bb3:  // pred: ^bb2
    %12 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %13 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc30)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc30)
    cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    cir.br ^bb4 loc(#loc141)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<0> : !s32i loc(#loc33)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.br ^bb5 loc(#loc141)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    %18 = cir.const #cir.int<10> : !s32i loc(#loc36)
    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc143)
    cir.brcond %19 ^bb6, ^bb10 loc(#loc37)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc144)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    %21 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc40)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc40)
    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc41)
    cir.br ^bb8 loc(#loc32)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc32)
  ^bb9:  // pred: ^bb8
    %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    %25 = cir.unary(inc, %24) nsw : !s32i, !s32i loc(#loc43)
    cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    cir.br ^bb5 loc(#loc141)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc32)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc26)
  ^bb12:  // pred: ^bb2
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc5)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.br ^bb13 loc(#loc22)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc22)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc20)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc7)
  } loc(#loc131)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b_goodG2BSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc47, #loc48])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc148)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc149)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc147)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc150)
    cir.store %arg0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc55)
    %4 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc57)
    %6 = cir.ptr_stride(%4 : !cir.ptr<!s32i>, %5 : !s32i), !cir.ptr<!s32i> loc(#loc54)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    cir.br ^bb1 loc(#loc151)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc149)
    cir.store %8, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc149)
    cir.br ^bb2 loc(#loc152)
  ^bb2:  // pred: ^bb1
    %9 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc153)
    cir.brcond %11 ^bb3, ^bb12 loc(#loc154)
  ^bb3:  // pred: ^bb2
    %12 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %13 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc69)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc69)
    cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    cir.br ^bb4 loc(#loc156)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<0> : !s32i loc(#loc72)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    cir.br ^bb5 loc(#loc156)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %18 = cir.const #cir.int<10> : !s32i loc(#loc75)
    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc158)
    cir.brcond %19 ^bb6, ^bb10 loc(#loc76)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc159)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    %21 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc79)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc79)
    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc80)
    cir.br ^bb8 loc(#loc71)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc71)
  ^bb9:  // pred: ^bb8
    %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %25 = cir.unary(inc, %24) nsw : !s32i, !s32i loc(#loc82)
    cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    cir.br ^bb5 loc(#loc156)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc71)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc65)
  ^bb12:  // pred: ^bb2
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc83)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    cir.br ^bb13 loc(#loc61)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc61)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc59)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc46)
  } loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc85)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b_goodB2GSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc88, #loc89])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc163)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc164)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc162)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc165)
    cir.store %arg0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc96)
    %4 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc97)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc98)
    %6 = cir.ptr_stride(%4 : !cir.ptr<!s32i>, %5 : !s32i), !cir.ptr<!s32i> loc(#loc95)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    cir.br ^bb1 loc(#loc166)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc164)
    cir.store %8, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc164)
    cir.br ^bb2 loc(#loc167)
  ^bb2:  // pred: ^bb1
    %9 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc168)
    cir.brcond %11 ^bb3, ^bb8 loc(#loc105)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc107)
    %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc169)
    cir.brcond %14 ^bb4, ^bb5 loc(#loc105)
  ^bb4:  // pred: ^bb3
    %15 = cir.const #true loc(#loc105)
    cir.br ^bb6(%15 : !cir.bool) loc(#loc105)
  ^bb5:  // pred: ^bb3
    %16 = cir.const #false loc(#loc105)
    cir.br ^bb6(%16 : !cir.bool) loc(#loc105)
  ^bb6(%17: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":84:23)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc105)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%17 : !cir.bool) loc(#loc105)
  ^bb8:  // pred: ^bb2
    %18 = cir.const #false loc(#loc105)
    cir.br ^bb9(%18 : !cir.bool) loc(#loc105)
  ^bb9(%19: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":84:23)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc105)
  ^bb10:  // pred: ^bb9
    cir.brcond %19 ^bb11, ^bb20 loc(#loc170)
  ^bb11:  // pred: ^bb10
    %20 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc114)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc114)
    cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    cir.br ^bb12 loc(#loc172)
  ^bb12:  // pred: ^bb11
    %24 = cir.const #cir.int<0> : !s32i loc(#loc117)
    cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.br ^bb13 loc(#loc172)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %26 = cir.const #cir.int<10> : !s32i loc(#loc120)
    %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc174)
    cir.brcond %27 ^bb14, ^bb18 loc(#loc121)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc175)
  ^bb15:  // pred: ^bb14
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %29 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc124)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %28 : !s32i), !cir.ptr<!s32i> loc(#loc124)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    cir.call @printIntLine(%31) : (!s32i) -> () loc(#loc125)
    cir.br ^bb16 loc(#loc116)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc116)
  ^bb17:  // pred: ^bb16
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %33 = cir.unary(inc, %32) nsw : !s32i, !s32i loc(#loc127)
    cir.store %33, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    cir.br ^bb13 loc(#loc172)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc116)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21 loc(#loc110)
  ^bb20:  // pred: ^bb10
    %34 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc85)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    cir.br ^bb21 loc(#loc102)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc102)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc100)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc87)
  } loc(#loc161)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":42:23)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":22:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":45:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":27:9)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":27:13)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":28:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":28:30)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":25:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":25:27)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":23:1)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":25:16)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":25:26)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":26:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":44:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":31:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":43:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":31:13)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":31:21)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":32:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":39:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":41:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":33:28)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":33:20)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":33:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":35:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":38:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":35:21)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":35:17)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":35:24)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":35:28)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":35:26)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":36:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":37:37)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":37:30)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":37:17)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":35:33)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":35:32)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":42:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":52:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":74:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":56:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":56:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":57:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":57:30)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":54:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":54:27)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":53:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":54:16)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":54:26)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":55:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":73:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":60:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":72:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":60:13)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":60:21)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":61:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":68:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":70:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":62:28)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":62:20)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":62:13)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":64:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":67:13)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":64:21)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":64:17)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":64:24)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":64:28)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":64:26)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":65:13)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":66:37)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":66:30)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":66:17)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":64:33)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":64:32)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":71:23)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":71:13)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":95:23)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":77:1)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":98:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":81:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":81:13)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":82:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":82:30)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":79:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":79:27)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":78:1)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":79:16)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":79:26)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":80:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":97:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":84:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":96:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":84:13)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":84:21)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":84:26)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":84:34)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":84:36)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":85:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":92:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":94:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":86:28)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":86:20)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":86:13)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":88:13)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":91:13)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":88:21)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":88:17)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":88:24)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":88:28)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":88:26)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":89:13)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":90:37)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":90:30)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":90:17)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":88:33)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":88:32)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_large_66b.c":95:13)
#loc129 = loc(fused[#loc1, #loc2])
#loc130 = loc(fused[#loc3, #loc4])
#loc131 = loc(fused[#loc6, #loc7])
#loc133 = loc(fused[#loc10, #loc11])
#loc134 = loc(fused[#loc12, #loc13])
#loc135 = loc(fused[#loc14, #loc15])
#loc136 = loc(fused[#loc19, #loc20])
#loc137 = loc(fused[#loc21, #loc22])
#loc138 = loc(fused[#loc23, #loc24])
#loc139 = loc(fused[#loc25, #loc26, #loc27, #loc22])
#loc140 = loc(fused[#loc30, #loc28])
#loc141 = loc(fused[#loc31, #loc32])
#loc142 = loc(fused[#loc34, #loc33])
#loc143 = loc(fused[#loc35, #loc36])
#loc144 = loc(fused[#loc38, #loc32])
#loc145 = loc(fused[#loc43, #loc42])
#loc146 = loc(fused[#loc45, #loc46])
#loc148 = loc(fused[#loc49, #loc50])
#loc149 = loc(fused[#loc51, #loc52])
#loc150 = loc(fused[#loc53, #loc54])
#loc151 = loc(fused[#loc58, #loc59])
#loc152 = loc(fused[#loc60, #loc61])
#loc153 = loc(fused[#loc62, #loc63])
#loc154 = loc(fused[#loc64, #loc65, #loc66, #loc61])
#loc155 = loc(fused[#loc69, #loc67])
#loc156 = loc(fused[#loc70, #loc71])
#loc157 = loc(fused[#loc73, #loc72])
#loc158 = loc(fused[#loc74, #loc75])
#loc159 = loc(fused[#loc77, #loc71])
#loc160 = loc(fused[#loc82, #loc81])
#loc161 = loc(fused[#loc86, #loc87])
#loc163 = loc(fused[#loc90, #loc91])
#loc164 = loc(fused[#loc92, #loc93])
#loc165 = loc(fused[#loc94, #loc95])
#loc166 = loc(fused[#loc99, #loc100])
#loc167 = loc(fused[#loc101, #loc102])
#loc168 = loc(fused[#loc103, #loc104])
#loc169 = loc(fused[#loc106, #loc108])
#loc170 = loc(fused[#loc109, #loc110, #loc111, #loc102])
#loc171 = loc(fused[#loc114, #loc112])
#loc172 = loc(fused[#loc115, #loc116])
#loc173 = loc(fused[#loc118, #loc117])
#loc174 = loc(fused[#loc119, #loc120])
#loc175 = loc(fused[#loc122, #loc116])
#loc176 = loc(fused[#loc127, #loc126])
