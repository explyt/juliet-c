!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s05/CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_ZN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_629badSourceERPi(!cir.ptr<!cir.ptr<!s32i>>) loc(#loc78)
  cir.func private @printIntLine(!s32i) loc(#loc79)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc80)
  cir.func @_ZN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc82)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc83)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc84)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc15)
    cir.store %3, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc85)
    cir.call @_ZN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_629badSourceERPi(%2) : (!cir.ptr<!cir.ptr<!s32i>>) -> () loc(#loc17)
    cir.br ^bb1 loc(#loc86)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc82)
    cir.store %4, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc82)
    cir.br ^bb2 loc(#loc87)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc22)
    cir.store %6, %1 : !u64i, !cir.ptr<!u64i> loc(#loc88)
    cir.br ^bb3 loc(#loc87)
  ^bb3:  // 2 preds: ^bb2, ^bb5
    %7 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc24)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc25)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc25)
    %10 = cir.cmp(lt, %7, %9) : !u64i, !cir.bool loc(#loc89)
    cir.brcond %10 ^bb4, ^bb6 loc(#loc89)
  ^bb4:  // pred: ^bb3
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc26)
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc27)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !u64i), !cir.ptr<!s32i> loc(#loc27)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc29)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !u64i), !cir.ptr<!s32i> loc(#loc30)
    cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    cir.br ^bb5 loc(#loc21)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc33)
    cir.store %19, %1 : !u64i, !cir.ptr<!u64i> loc(#loc91)
    cir.br ^bb3 loc(#loc87)
  ^bb6:  // pred: ^bb3
    cir.br ^bb7 loc(#loc21)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc36)
    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc37)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc38)
    cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc39)
    cir.br ^bb8 loc(#loc19)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc8)
  } loc(#loc81)
  cir.func private @_ZN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_6213goodG2BSourceERPi(!cir.ptr<!cir.ptr<!s32i>>) loc(#loc92)
  cir.func internal private @_ZN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc94)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc95)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc96)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc50)
    cir.store %3, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc97)
    cir.call @_ZN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_6213goodG2BSourceERPi(%2) : (!cir.ptr<!cir.ptr<!s32i>>) -> () loc(#loc52)
    cir.br ^bb1 loc(#loc98)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc94)
    cir.store %4, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc94)
    cir.br ^bb2 loc(#loc99)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc57)
    cir.store %6, %1 : !u64i, !cir.ptr<!u64i> loc(#loc100)
    cir.br ^bb3 loc(#loc99)
  ^bb3:  // 2 preds: ^bb2, ^bb5
    %7 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc60)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc60)
    %10 = cir.cmp(lt, %7, %9) : !u64i, !cir.bool loc(#loc101)
    cir.brcond %10 ^bb4, ^bb6 loc(#loc101)
  ^bb4:  // pred: ^bb3
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc62)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !u64i), !cir.ptr<!s32i> loc(#loc62)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !u64i), !cir.ptr<!s32i> loc(#loc65)
    cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc102)
    cir.br ^bb5 loc(#loc56)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc67)
    %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc68)
    cir.store %19, %1 : !u64i, !cir.ptr<!u64i> loc(#loc103)
    cir.br ^bb3 loc(#loc99)
  ^bb6:  // pred: ^bb3
    cir.br ^bb7 loc(#loc56)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc71)
    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc72)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc73)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc73)
    cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc74)
    cir.br ^bb8 loc(#loc54)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc43)
  } loc(#loc93)
  cir.func @_ZN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62L7goodG2BEv() : () -> () loc(#loc77)
    cir.return loc(#loc76)
  } loc(#loc104)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s05/CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":25:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":25:27)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":27:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":43:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":33:9)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":33:28)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":34:9)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":34:16)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":29:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":29:11)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":30:12)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":30:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":31:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":32:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":42:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":36:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":39:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":36:18)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":36:14)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":36:21)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":36:25)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":38:30)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":38:23)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":38:13)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":38:18)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":38:19)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":38:31)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":36:30)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":36:29)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":40:22)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":40:27)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":40:28)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":40:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":41:14)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":41:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":50:1)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":50:31)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":52:1)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":68:1)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":58:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":58:28)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":59:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":59:16)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":54:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":54:11)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":55:12)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":55:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":56:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":57:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":67:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":61:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":64:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":61:18)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":61:14)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":61:21)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":61:25)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":63:30)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":63:23)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":63:13)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":63:18)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":63:19)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":63:31)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":61:30)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":61:29)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":65:22)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":65:27)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":65:28)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":65:9)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":66:14)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":66:9)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":70:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":73:1)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_62a.cpp":72:5)
#loc78 = loc(fused[#loc1, #loc2])
#loc79 = loc(fused[#loc3, #loc4])
#loc80 = loc(fused[#loc5, #loc6])
#loc81 = loc(fused[#loc7, #loc8])
#loc82 = loc(fused[#loc9, #loc10])
#loc83 = loc(fused[#loc11, #loc12])
#loc84 = loc(fused[#loc13, #loc14])
#loc85 = loc(fused[#loc16, #loc15])
#loc86 = loc(fused[#loc18, #loc19])
#loc87 = loc(fused[#loc20, #loc21])
#loc88 = loc(fused[#loc23, #loc22])
#loc89 = loc(fused[#loc24, #loc25])
#loc90 = loc(fused[#loc28, #loc31])
#loc91 = loc(fused[#loc33, #loc32])
#loc92 = loc(fused[#loc40, #loc41])
#loc93 = loc(fused[#loc42, #loc43])
#loc94 = loc(fused[#loc44, #loc45])
#loc95 = loc(fused[#loc46, #loc47])
#loc96 = loc(fused[#loc48, #loc49])
#loc97 = loc(fused[#loc51, #loc50])
#loc98 = loc(fused[#loc53, #loc54])
#loc99 = loc(fused[#loc55, #loc56])
#loc100 = loc(fused[#loc58, #loc57])
#loc101 = loc(fused[#loc59, #loc60])
#loc102 = loc(fused[#loc63, #loc66])
#loc103 = loc(fused[#loc68, #loc67])
#loc104 = loc(fused[#loc75, #loc76])
