!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc143)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc144)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc145)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc146)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printIntLine(!s32i) loc(#loc147)
  cir.func no_proto  @CWE191_Integer_Underflow__int_fgets_multiply_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc149)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc16)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc152)
      %3 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc152)
      cir.store %3, %2 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc152)
      cir.scope {
        %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc24)
        %5 = cir.const #cir.int<3> : !s32i loc(#loc25)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc25)
        %7 = cir.const #cir.int<4> : !u64i loc(#loc25)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc25)
        %9 = cir.const #cir.int<2> : !s32i loc(#loc25)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc25)
        %11 = cir.binop(add, %8, %10) : !u64i loc(#loc25)
        %12 = cir.cast(integral, %11 : !u64i), !s32i loc(#loc25)
        %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc144)
        %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
        %15 = cir.call @fgets(%4, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc27)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
        %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s8i>, !s32i loc(#loc154)
        %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc29)
        cir.if %19 {
          %20 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc33)
          %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc34)
          cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc37)
        } loc(#loc155)
      } loc(#loc153)
    } loc(#loc151)
    cir.scope {
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc158)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc159)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
      cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc158)
      %5 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc43)
      cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc159)
      cir.scope {
        %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc46)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc47)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc161)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc48)
        cir.if %9 {
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc163)
          %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc52)
          %12 = cir.const #cir.int<2> : !s32i loc(#loc51)
          %13 = cir.binop(mul, %11, %12) nsw : !s32i loc(#loc52)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc163)
          %14 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc53)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc54)
        } loc(#loc162)
      } loc(#loc160)
    } loc(#loc157)
    cir.return loc(#loc13)
  } loc(#loc148)
  cir.func no_proto  @CWE191_Integer_Underflow__int_fgets_multiply_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    cir.return loc(#loc56)
  } loc(#loc164)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc168)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc65)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc67)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc68)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc172)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc173)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc73)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc172)
      %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc75)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc173)
      cir.scope {
        %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc78)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc79)
        %10 = cir.cmp(lt, %8, %9) : !s32i, !s32i loc(#loc175)
        %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc80)
        cir.if %11 {
          %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc177)
          %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc84)
          %14 = cir.const #cir.int<2> : !s32i loc(#loc83)
          %15 = cir.binop(mul, %13, %14) nsw : !s32i loc(#loc84)
          cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc177)
          %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc85)
          cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc86)
        } loc(#loc176)
      } loc(#loc174)
    } loc(#loc171)
    cir.return loc(#loc62)
  } loc(#loc167)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc87)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc179)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc92)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc182)
      %3 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc182)
      cir.store %3, %2 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc182)
      cir.scope {
        %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc100)
        %5 = cir.const #cir.int<3> : !s32i loc(#loc101)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc101)
        %7 = cir.const #cir.int<4> : !u64i loc(#loc101)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc101)
        %9 = cir.const #cir.int<2> : !s32i loc(#loc101)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc101)
        %11 = cir.binop(add, %8, %10) : !u64i loc(#loc101)
        %12 = cir.cast(integral, %11 : !u64i), !s32i loc(#loc101)
        %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc144)
        %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc102)
        %15 = cir.call @fgets(%4, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc103)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc104)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc104)
        %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s8i>, !s32i loc(#loc184)
        %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc105)
        cir.if %19 {
          %20 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
          %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc110)
          cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc113)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc113)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc114)
        } loc(#loc185)
      } loc(#loc183)
    } loc(#loc181)
    cir.scope {
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc188)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc189)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
      cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc188)
      %5 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc120)
      cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc189)
      cir.scope {
        %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc123)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc124)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc191)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc125)
        cir.if %9 {
          cir.scope {
            %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc129)
            %11 = cir.const #cir.int<2147483647> : !s32i loc(#loc130)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc130)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc130)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc130)
            %15 = cir.const #cir.int<2> : !s32i loc(#loc131)
            %16 = cir.binop(div, %14, %15) : !s32i loc(#loc194)
            %17 = cir.cmp(gt, %10, %16) : !s32i, !s32i loc(#loc195)
            %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc133)
            cir.if %18 {
              %19 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc197)
              %20 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc139)
              %21 = cir.const #cir.int<2> : !s32i loc(#loc138)
              %22 = cir.binop(mul, %20, %21) nsw : !s32i loc(#loc139)
              cir.store %22, %19 : !s32i, !cir.ptr<!s32i> loc(#loc197)
              %23 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc140)
              cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc141)
            } else {
              %19 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc87)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc87)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc142)
            } loc(#loc196)
          } loc(#loc193)
        } loc(#loc192)
      } loc(#loc190)
    } loc(#loc187)
    cir.return loc(#loc89)
  } loc(#loc178)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_31.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":39:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":24:1)
#loc13 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":52:1)
#loc14 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":26:5)
#loc15 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":26:9)
#loc16 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":28:12)
#loc17 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":28:5)
#loc18 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":29:5)
#loc19 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":41:5)
#loc20 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":30:9)
#loc21 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":30:45)
#loc22 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":32:9)
#loc23 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":40:9)
#loc24 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":32:19)
#loc25 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":32:32)
#loc26 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":32:49)
#loc27 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":32:13)
#loc28 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":32:59)
#loc29 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":32:56)
#loc30 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":33:9)
#loc31 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":36:9)
#loc32 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":38:9)
#loc33 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":35:25)
#loc34 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":35:20)
#loc35 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":35:13)
#loc36 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":35:36)
#loc37 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":39:13)
#loc38 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":42:5)
#loc39 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":51:5)
#loc40 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":43:9)
#loc41 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":43:24)
#loc42 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":44:9)
#loc43 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":44:20)
#loc44 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":45:9)
#loc45 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":50:9)
#loc46 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":45:12)
#loc47 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":45:19)
#loc48 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":45:17)
#loc49 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":46:9)
#loc50 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":48:13)
#loc51 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":48:33)
#loc52 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":48:26)
#loc53 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":49:26)
#loc54 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":49:13)
#loc55 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":116:1)
#loc56 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":120:1)
#loc57 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":118:5)
#loc58 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":118:13)
#loc59 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":119:5)
#loc60 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":119:13)
#loc61 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":59:1)
#loc62 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":76:1)
#loc63 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":61:5)
#loc64 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":61:9)
#loc65 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":63:12)
#loc66 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":63:5)
#loc67 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":65:13)
#loc68 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":65:12)
#loc69 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":65:5)
#loc70 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":66:5)
#loc71 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":75:5)
#loc72 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":67:9)
#loc73 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":67:24)
#loc74 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":68:9)
#loc75 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":68:20)
#loc76 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":69:9)
#loc77 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":74:9)
#loc78 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":69:12)
#loc79 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":69:19)
#loc80 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":69:17)
#loc81 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":70:9)
#loc82 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":72:13)
#loc83 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":72:33)
#loc84 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":72:26)
#loc85 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":73:26)
#loc86 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":73:13)
#loc87 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":110:27)
#loc88 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":79:1)
#loc89 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":114:1)
#loc90 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":81:5)
#loc91 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":81:9)
#loc92 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":83:12)
#loc93 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":83:5)
#loc94 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":84:5)
#loc95 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":96:5)
#loc96 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":85:9)
#loc97 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":85:45)
#loc98 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":87:9)
#loc99 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":95:9)
#loc100 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":87:19)
#loc101 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":87:32)
#loc102 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":87:49)
#loc103 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":87:13)
#loc104 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":87:59)
#loc105 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":87:56)
#loc106 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":88:9)
#loc107 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":91:9)
#loc108 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":93:9)
#loc109 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":90:25)
#loc110 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":90:20)
#loc111 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":90:13)
#loc112 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":90:36)
#loc113 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":94:23)
#loc114 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":94:13)
#loc115 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":97:5)
#loc116 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":113:5)
#loc117 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":98:9)
#loc118 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":98:24)
#loc119 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":99:9)
#loc120 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":99:20)
#loc121 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":100:9)
#loc122 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":112:9)
#loc123 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":100:12)
#loc124 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":100:19)
#loc125 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":100:17)
#loc126 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":101:9)
#loc127 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":103:13)
#loc128 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":111:13)
#loc129 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":103:17)
#loc130 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":103:25)
#loc131 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":103:33)
#loc132 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":103:34)
#loc133 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":103:22)
#loc134 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":104:13)
#loc135 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":107:13)
#loc136 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":109:13)
#loc137 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":105:17)
#loc138 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":105:37)
#loc139 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":105:30)
#loc140 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":106:30)
#loc141 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":106:17)
#loc142 = loc("CWE191_Integer_Underflow__int_fgets_multiply_31.c":110:17)
#loc143 = loc(fused[#loc1, #loc2])
#loc144 = loc(fused[#loc3, #loc4])
#loc145 = loc(fused[#loc5, #loc6])
#loc146 = loc(fused[#loc7, #loc8])
#loc147 = loc(fused[#loc10, #loc11])
#loc148 = loc(fused[#loc12, #loc13])
#loc149 = loc(fused[#loc14, #loc15])
#loc150 = loc(fused[#loc17, #loc16])
#loc151 = loc(fused[#loc18, #loc19])
#loc152 = loc(fused[#loc20, #loc21])
#loc153 = loc(fused[#loc22, #loc23])
#loc154 = loc(fused[#loc27, #loc28])
#loc155 = loc(fused[#loc30, #loc31, #loc32, #loc23])
#loc156 = loc(fused[#loc35, #loc36])
#loc157 = loc(fused[#loc38, #loc39])
#loc158 = loc(fused[#loc40, #loc41])
#loc159 = loc(fused[#loc42, #loc43])
#loc160 = loc(fused[#loc44, #loc45])
#loc161 = loc(fused[#loc46, #loc47])
#loc162 = loc(fused[#loc49, #loc45])
#loc163 = loc(fused[#loc50, #loc51])
#loc164 = loc(fused[#loc55, #loc56])
#loc165 = loc(fused[#loc57, #loc58])
#loc166 = loc(fused[#loc59, #loc60])
#loc167 = loc(fused[#loc61, #loc62])
#loc168 = loc(fused[#loc63, #loc64])
#loc169 = loc(fused[#loc66, #loc65])
#loc170 = loc(fused[#loc69, #loc67])
#loc171 = loc(fused[#loc70, #loc71])
#loc172 = loc(fused[#loc72, #loc73])
#loc173 = loc(fused[#loc74, #loc75])
#loc174 = loc(fused[#loc76, #loc77])
#loc175 = loc(fused[#loc78, #loc79])
#loc176 = loc(fused[#loc81, #loc77])
#loc177 = loc(fused[#loc82, #loc83])
#loc178 = loc(fused[#loc88, #loc89])
#loc179 = loc(fused[#loc90, #loc91])
#loc180 = loc(fused[#loc93, #loc92])
#loc181 = loc(fused[#loc94, #loc95])
#loc182 = loc(fused[#loc96, #loc97])
#loc183 = loc(fused[#loc98, #loc99])
#loc184 = loc(fused[#loc103, #loc104])
#loc185 = loc(fused[#loc106, #loc107, #loc108, #loc99])
#loc186 = loc(fused[#loc111, #loc112])
#loc187 = loc(fused[#loc115, #loc116])
#loc188 = loc(fused[#loc117, #loc118])
#loc189 = loc(fused[#loc119, #loc120])
#loc190 = loc(fused[#loc121, #loc122])
#loc191 = loc(fused[#loc123, #loc124])
#loc192 = loc(fused[#loc126, #loc122])
#loc193 = loc(fused[#loc127, #loc128])
#loc194 = loc(fused[#loc130, #loc131])
#loc195 = loc(fused[#loc129, #loc132])
#loc196 = loc(fused[#loc134, #loc135, #loc136, #loc128])
#loc197 = loc(fused[#loc137, #loc138])
