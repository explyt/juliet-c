!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc185)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc187)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc188)
  cir.func private @printIntLine(!s32i) loc(#loc189)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc190)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc192)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc193)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc194)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc23)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    cir.br ^bb1 loc(#loc196)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc27)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc197)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc29)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc186)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc29)
    cir.br ^bb3 loc(#loc26)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc26)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc198)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc33)
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc34)
    %16 = cir.const #cir.int<4> : !u64i loc(#loc199)
    %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc200)
    %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc33)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc201)
    cir.store %19, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc202)
    cir.br ^bb6 loc(#loc203)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc41)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc42)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc42)
    %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s32i>, !cir.bool loc(#loc204)
    cir.brcond %23 ^bb7, ^bb8 loc(#loc205)
  ^bb7:  // pred: ^bb6
    %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc44)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc46)
    cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc44)
    cir.br ^bb8 loc(#loc40)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc40)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc206)
  ^bb10:  // pred: ^bb9
    %27 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc49)
    cir.store %28, %0 : !u64i, !cir.ptr<!u64i> loc(#loc207)
    cir.br ^bb11 loc(#loc206)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %29 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc52)
    %32 = cir.cmp(lt, %29, %31) : !u64i, !cir.bool loc(#loc208)
    cir.brcond %32 ^bb12, ^bb16 loc(#loc53)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc209)
  ^bb13:  // pred: ^bb12
    %33 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc57)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !u64i), !cir.ptr<!s32i> loc(#loc58)
    cir.store %33, %36 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    cir.br ^bb14 loc(#loc48)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc48)
  ^bb15:  // pred: ^bb14
    %37 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc60)
    cir.store %38, %0 : !u64i, !cir.ptr<!u64i> loc(#loc211)
    cir.br ^bb11 loc(#loc206)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc48)
  ^bb17:  // pred: ^bb16
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s32i>, %40 : !s32i), !cir.ptr<!s32i> loc(#loc63)
    %42 = cir.load %41 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    cir.call @printIntLine(%42) : (!s32i) -> () loc(#loc64)
    %43 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc65)
    cir.call @free(%44) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc66)
    cir.br ^bb18 loc(#loc32)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc15)
  } loc(#loc191)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    cir.return loc(#loc68)
  } loc(#loc212)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc75)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc217)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc218)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc219)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc85)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    cir.br ^bb1 loc(#loc221)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc89)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc222)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc75)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    cir.br ^bb4 loc(#loc91)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<20> : !s32i loc(#loc94)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    cir.br ^bb4 loc(#loc88)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc88)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc224)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc98)
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc99)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc225)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc226)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc98)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc227)
    cir.store %16, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc228)
    cir.br ^bb7 loc(#loc229)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc106)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc107)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc107)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc230)
    cir.brcond %20 ^bb8, ^bb9 loc(#loc231)
  ^bb8:  // pred: ^bb7
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc109)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc111)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc109)
    cir.br ^bb9 loc(#loc105)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc105)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc232)
  ^bb11:  // pred: ^bb10
    %24 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc114)
    cir.store %25, %0 : !u64i, !cir.ptr<!u64i> loc(#loc233)
    cir.br ^bb12 loc(#loc232)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %26 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc116)
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc117)
    %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc234)
    cir.brcond %29 ^bb13, ^bb17 loc(#loc118)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc235)
  ^bb14:  // pred: ^bb13
    %30 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc121)
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc122)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !u64i), !cir.ptr<!s32i> loc(#loc123)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    cir.br ^bb15 loc(#loc113)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc113)
  ^bb16:  // pred: ^bb15
    %34 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc124)
    %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc125)
    cir.store %35, %0 : !u64i, !cir.ptr<!u64i> loc(#loc237)
    cir.br ^bb12 loc(#loc232)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc113)
  ^bb18:  // pred: ^bb17
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc126)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!s32i>, %37 : !s32i), !cir.ptr<!s32i> loc(#loc128)
    %39 = cir.load %38 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    cir.call @printIntLine(%39) : (!s32i) -> () loc(#loc129)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc130)
    %41 = cir.cast(bitcast, %40 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc130)
    cir.call @free(%41) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc131)
    cir.br ^bb19 loc(#loc97)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc77)
  } loc(#loc216)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc239)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc240)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc241)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc141)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    cir.br ^bb1 loc(#loc243)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc145)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc244)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<20> : !s32i loc(#loc147)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    cir.br ^bb3 loc(#loc144)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc144)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc246)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc151)
    %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc152)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc247)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc248)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc151)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc249)
    cir.store %14, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc250)
    cir.br ^bb6 loc(#loc251)
  ^bb6:  // pred: ^bb5
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc159)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc160)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc160)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s32i>, !cir.bool loc(#loc252)
    cir.brcond %18 ^bb7, ^bb8 loc(#loc253)
  ^bb7:  // pred: ^bb6
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc162)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc164)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc162)
    cir.br ^bb8 loc(#loc158)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc158)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc254)
  ^bb10:  // pred: ^bb9
    %22 = cir.const #cir.int<0> : !s32i loc(#loc167)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc167)
    cir.store %23, %0 : !u64i, !cir.ptr<!u64i> loc(#loc255)
    cir.br ^bb11 loc(#loc254)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %24 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc169)
    %25 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc170)
    %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc256)
    cir.brcond %27 ^bb12, ^bb16 loc(#loc171)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc257)
  ^bb13:  // pred: ^bb12
    %28 = cir.const #cir.int<0> : !s32i loc(#loc173)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc174)
    %30 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc175)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !u64i), !cir.ptr<!s32i> loc(#loc176)
    cir.store %28, %31 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    cir.br ^bb14 loc(#loc166)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc166)
  ^bb15:  // pred: ^bb14
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc177)
    %33 = cir.unary(inc, %32) : !u64i, !u64i loc(#loc178)
    cir.store %33, %0 : !u64i, !cir.ptr<!u64i> loc(#loc259)
    cir.br ^bb11 loc(#loc254)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc166)
  ^bb17:  // pred: ^bb16
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc179)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc180)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !s32i), !cir.ptr<!s32i> loc(#loc181)
    %37 = cir.load %36 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    cir.call @printIntLine(%37) : (!s32i) -> () loc(#loc182)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc183)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc183)
    cir.call @free(%39) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc184)
    cir.br ^bb18 loc(#loc150)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc133)
  } loc(#loc238)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":36:23)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":28:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":52:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":39:9)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":39:16)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":40:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":40:14)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":30:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":30:9)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":32:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":32:12)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":32:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":33:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":37:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":33:8)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":34:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":36:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":36:16)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":38:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":51:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":43:28)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":43:35)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":43:42)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":43:52)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":43:53)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":43:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":44:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":44:43)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":44:13)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":44:27)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":44:33)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":44:34)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":44:40)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":44:39)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":45:9)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":48:9)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":45:18)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":45:14)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":45:21)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":45:33)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":45:23)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":46:9)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":47:29)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":47:13)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":47:24)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":47:25)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":45:40)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":45:39)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":49:22)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":49:33)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":49:34)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":49:9)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":50:14)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":50:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":117:1)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":121:1)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":119:5)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":119:14)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":120:5)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":120:14)
#loc73 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc74 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":67:19)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":59:1)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":88:1)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":75:9)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":75:16)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":76:9)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":76:14)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":61:5)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":61:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":63:13)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":63:12)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":63:5)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":64:5)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":73:5)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":64:8)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":65:5)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":68:5)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":70:5)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":67:9)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":72:16)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":72:9)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":74:5)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":87:5)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":79:28)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":79:35)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":79:42)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":79:52)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":79:53)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":79:9)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":80:9)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":80:43)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":80:13)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":80:27)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":80:33)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":80:34)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":80:40)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":80:39)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":81:9)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":84:9)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":81:18)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":81:14)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":81:21)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":81:33)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":81:23)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":82:9)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":83:29)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":83:13)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":83:24)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":83:25)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":81:40)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":81:39)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":85:22)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":85:33)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":85:34)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":85:9)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":86:14)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":86:9)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":91:1)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":115:1)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":102:9)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":102:16)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":103:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":103:14)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":93:5)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":93:9)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":95:13)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":95:12)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":95:5)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":96:5)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":100:5)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":96:8)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":97:5)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":99:16)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":99:9)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":101:5)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":114:5)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":106:28)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":106:35)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":106:42)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":106:52)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":106:53)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":106:9)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":107:9)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":107:43)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":107:13)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":107:27)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":107:33)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":107:34)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":107:40)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":107:39)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":108:9)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":111:9)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":108:18)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":108:14)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":108:21)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":108:33)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":108:23)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":109:9)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":110:29)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":110:13)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":110:24)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":110:25)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":108:40)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":108:39)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":112:22)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":112:33)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":112:34)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":112:9)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":113:14)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_04.c":113:9)
#loc185 = loc(fused[#loc1, #loc2])
#loc186 = loc(fused[#loc3, #loc4])
#loc187 = loc(fused[#loc6, #loc7])
#loc188 = loc(fused[#loc8, #loc9])
#loc189 = loc(fused[#loc10, #loc11])
#loc190 = loc(fused[#loc12, #loc13])
#loc191 = loc(fused[#loc14, #loc15])
#loc192 = loc(fused[#loc16, #loc17])
#loc193 = loc(fused[#loc18, #loc19])
#loc194 = loc(fused[#loc20, #loc21])
#loc195 = loc(fused[#loc24, #loc22])
#loc196 = loc(fused[#loc25, #loc26])
#loc197 = loc(fused[#loc28, #loc26])
#loc198 = loc(fused[#loc31, #loc32])
#loc199 = loc(fused[#loc35, #loc36])
#loc200 = loc(fused[#loc34, #loc36])
#loc201 = loc(fused[#loc33, #loc37])
#loc202 = loc(fused[#loc38, #loc37])
#loc203 = loc(fused[#loc39, #loc40])
#loc204 = loc(fused[#loc41, #loc42])
#loc205 = loc(fused[#loc43, #loc40])
#loc206 = loc(fused[#loc47, #loc48])
#loc207 = loc(fused[#loc50, #loc49])
#loc208 = loc(fused[#loc51, #loc52])
#loc209 = loc(fused[#loc54, #loc48])
#loc210 = loc(fused[#loc56, #loc55])
#loc211 = loc(fused[#loc60, #loc59])
#loc212 = loc(fused[#loc67, #loc68])
#loc213 = loc(fused[#loc69, #loc70])
#loc214 = loc(fused[#loc71, #loc72])
#loc215 = loc(fused[#loc73, #loc74])
#loc216 = loc(fused[#loc76, #loc77])
#loc217 = loc(fused[#loc78, #loc79])
#loc218 = loc(fused[#loc80, #loc81])
#loc219 = loc(fused[#loc82, #loc83])
#loc220 = loc(fused[#loc86, #loc84])
#loc221 = loc(fused[#loc87, #loc88])
#loc222 = loc(fused[#loc90, #loc91, #loc92, #loc88])
#loc223 = loc(fused[#loc95, #loc94])
#loc224 = loc(fused[#loc96, #loc97])
#loc225 = loc(fused[#loc100, #loc101])
#loc226 = loc(fused[#loc99, #loc101])
#loc227 = loc(fused[#loc98, #loc102])
#loc228 = loc(fused[#loc103, #loc102])
#loc229 = loc(fused[#loc104, #loc105])
#loc230 = loc(fused[#loc106, #loc107])
#loc231 = loc(fused[#loc108, #loc105])
#loc232 = loc(fused[#loc112, #loc113])
#loc233 = loc(fused[#loc115, #loc114])
#loc234 = loc(fused[#loc116, #loc117])
#loc235 = loc(fused[#loc119, #loc113])
#loc236 = loc(fused[#loc121, #loc120])
#loc237 = loc(fused[#loc125, #loc124])
#loc238 = loc(fused[#loc132, #loc133])
#loc239 = loc(fused[#loc134, #loc135])
#loc240 = loc(fused[#loc136, #loc137])
#loc241 = loc(fused[#loc138, #loc139])
#loc242 = loc(fused[#loc142, #loc140])
#loc243 = loc(fused[#loc143, #loc144])
#loc244 = loc(fused[#loc146, #loc144])
#loc245 = loc(fused[#loc148, #loc147])
#loc246 = loc(fused[#loc149, #loc150])
#loc247 = loc(fused[#loc153, #loc154])
#loc248 = loc(fused[#loc152, #loc154])
#loc249 = loc(fused[#loc151, #loc155])
#loc250 = loc(fused[#loc156, #loc155])
#loc251 = loc(fused[#loc157, #loc158])
#loc252 = loc(fused[#loc159, #loc160])
#loc253 = loc(fused[#loc161, #loc158])
#loc254 = loc(fused[#loc165, #loc166])
#loc255 = loc(fused[#loc168, #loc167])
#loc256 = loc(fused[#loc169, #loc170])
#loc257 = loc(fused[#loc172, #loc166])
#loc258 = loc(fused[#loc174, #loc173])
#loc259 = loc(fused[#loc178, #loc177])
