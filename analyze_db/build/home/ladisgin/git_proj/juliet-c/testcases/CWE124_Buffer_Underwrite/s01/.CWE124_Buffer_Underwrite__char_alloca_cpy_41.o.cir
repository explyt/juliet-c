!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":23:59)
#loc8 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":23:66)
#loc54 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":50:63)
#loc55 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":50:70)
#loc104 = loc(fused[#loc7, #loc8])
#loc116 = loc(fused[#loc54, #loc55])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_cpy_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc101)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc102)
  cir.func @CWE124_Buffer_Underwrite__char_alloca_cpy_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc105)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc104)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    cir.br ^bb1 loc(#loc106)
  ^bb1:  // pred: ^bb0
    %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc14)
    %4 = cir.const #cir.int<67> : !s32i loc(#loc15)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc16)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc16)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc107)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc20)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc21)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc108)
    %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc24)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    %19 = cir.call @strcpy(%17, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc24)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc28)
    cir.br ^bb2 loc(#loc13)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc6)
  } loc(#loc103)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_cpy_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc111)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc34)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc34)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc34)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc34)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc34)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc36)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc37)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc37)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc37)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc112)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc41)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc43)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc43)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc45)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc113)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %24 = cir.const #cir.int<8> : !s32i loc(#loc47)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc47)
    %26 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc48)
    cir.store %26, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    cir.call @CWE124_Buffer_Underwrite__char_alloca_cpy_41_badSink(%27) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.return loc(#loc30)
  } loc(#loc109)
  cir.func @CWE124_Buffer_Underwrite__char_alloca_cpy_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc54, #loc55])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc117)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc116)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc58)
    cir.br ^bb1 loc(#loc118)
  ^bb1:  // pred: ^bb0
    %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
    %4 = cir.const #cir.int<67> : !s32i loc(#loc62)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc63)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc63)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc63)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc119)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc67)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc68)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc68)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc70)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc120)
    %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc71)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
    %19 = cir.call @strcpy(%17, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc71)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    cir.br ^bb2 loc(#loc60)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc53)
  } loc(#loc115)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_cpy_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc122)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc78)
    cir.return loc(#loc77)
  } loc(#loc121)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc125)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc85)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc85)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc85)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc85)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc85)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc85)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc85)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc87)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc88)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc88)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc88)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc126)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc92)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc94)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc94)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc96)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc127)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    cir.store %23, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    cir.call @CWE124_Buffer_Underwrite__char_alloca_cpy_41_goodG2BSink(%24) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    cir.return loc(#loc81)
  } loc(#loc123)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":23:1)
#loc6 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":33:1)
#loc9 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":26:9)
#loc10 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":26:24)
#loc11 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":24:1)
#loc12 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":25:5)
#loc13 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":32:5)
#loc14 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":27:16)
#loc15 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":27:24)
#loc16 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":27:29)
#loc17 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":27:33)
#loc18 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":27:9)
#loc19 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":27:34)
#loc20 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":28:25)
#loc21 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":28:16)
#loc22 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":28:20)
#loc23 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":28:9)
#loc24 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":30:9)
#loc25 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":30:16)
#loc26 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":30:22)
#loc27 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":31:19)
#loc28 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":31:9)
#loc29 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":35:1)
#loc30 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":44:1)
#loc31 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":37:5)
#loc32 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":37:12)
#loc33 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":38:5)
#loc34 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":38:33)
#loc35 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":39:12)
#loc36 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":39:24)
#loc37 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":39:29)
#loc38 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":39:33)
#loc39 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":39:5)
#loc40 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":39:34)
#loc41 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":40:25)
#loc42 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":40:5)
#loc43 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":40:16)
#loc44 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":40:20)
#loc45 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":40:21)
#loc46 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":42:12)
#loc47 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":42:25)
#loc48 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":42:23)
#loc49 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":42:5)
#loc50 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":43:58)
#loc51 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":43:5)
#loc52 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":50:1)
#loc53 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":60:1)
#loc56 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":53:9)
#loc57 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":53:24)
#loc58 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":51:1)
#loc59 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":52:5)
#loc60 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":59:5)
#loc61 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":54:16)
#loc62 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":54:24)
#loc63 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":54:29)
#loc64 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":54:33)
#loc65 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":54:9)
#loc66 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":54:34)
#loc67 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":55:25)
#loc68 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":55:16)
#loc69 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":55:20)
#loc70 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":55:9)
#loc71 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":57:9)
#loc72 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":57:16)
#loc73 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":57:22)
#loc74 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":58:19)
#loc75 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":58:9)
#loc76 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":74:1)
#loc77 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":77:1)
#loc78 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":76:5)
#loc79 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":76:13)
#loc80 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":63:1)
#loc81 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":72:1)
#loc82 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":65:5)
#loc83 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":65:12)
#loc84 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":66:5)
#loc85 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":66:33)
#loc86 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":67:12)
#loc87 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":67:24)
#loc88 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":67:29)
#loc89 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":67:33)
#loc90 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":67:5)
#loc91 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":67:34)
#loc92 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":68:25)
#loc93 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":68:5)
#loc94 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":68:16)
#loc95 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":68:20)
#loc96 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":68:21)
#loc97 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":70:12)
#loc98 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":70:5)
#loc99 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":71:62)
#loc100 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_41.c":71:5)
#loc101 = loc(fused[#loc1, #loc2])
#loc102 = loc(fused[#loc3, #loc4])
#loc103 = loc(fused[#loc5, #loc6])
#loc105 = loc(fused[#loc9, #loc10])
#loc106 = loc(fused[#loc12, #loc13])
#loc107 = loc(fused[#loc18, #loc19])
#loc108 = loc(fused[#loc23, #loc20])
#loc109 = loc(fused[#loc29, #loc30])
#loc110 = loc(fused[#loc31, #loc32])
#loc111 = loc(fused[#loc33, #loc34])
#loc112 = loc(fused[#loc39, #loc40])
#loc113 = loc(fused[#loc42, #loc41])
#loc114 = loc(fused[#loc49, #loc47])
#loc115 = loc(fused[#loc52, #loc53])
#loc117 = loc(fused[#loc56, #loc57])
#loc118 = loc(fused[#loc59, #loc60])
#loc119 = loc(fused[#loc65, #loc66])
#loc120 = loc(fused[#loc70, #loc67])
#loc121 = loc(fused[#loc76, #loc77])
#loc122 = loc(fused[#loc78, #loc79])
#loc123 = loc(fused[#loc80, #loc81])
#loc124 = loc(fused[#loc82, #loc83])
#loc125 = loc(fused[#loc84, #loc85])
#loc126 = loc(fused[#loc90, #loc91])
#loc127 = loc(fused[#loc93, #loc92])
#loc128 = loc(fused[#loc98, #loc97])
