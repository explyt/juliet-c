!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_large_to_char_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printHexCharLine(!s8i) loc(#loc47)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__int_large_to_char_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc49)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc50)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc10)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc51)
    cir.br ^bb1 loc(#loc52)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc52)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %5 ^bb3, ^bb4 loc(#loc14)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.int<32767> : !s32i loc(#loc15)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc16)
    %8 = cir.binop(add, %6, %7) nsw : !s32i loc(#loc15)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc53)
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc13)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc54)
  ^bb6:  // pred: ^bb5
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc6)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc6)
    cir.store %10, %0 : !s8i, !cir.ptr<!s8i> loc(#loc49)
    %11 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc21)
    cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc22)
    cir.br ^bb7 loc(#loc20)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc4)
  } loc(#loc48)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__int_large_to_char_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc56)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    cir.return loc(#loc24)
  } loc(#loc55)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc58)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc59)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc34)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc60)
    cir.br ^bb1 loc(#loc61)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc61)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc38)
    cir.brcond %5 ^bb3, ^bb4 loc(#loc38)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.int<127> : !s32i loc(#loc39)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc40)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc39)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.br ^bb4 loc(#loc42)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc37)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc63)
  ^bb6:  // pred: ^bb5
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc30)
    cir.store %10, %0 : !s8i, !cir.ptr<!s8i> loc(#loc58)
    %11 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc45)
    cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc46)
    cir.br ^bb7 loc(#loc44)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc28)
  } loc(#loc57)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s01/CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":21:1)
#loc4 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":37:1)
#loc5 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":34:9)
#loc6 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":34:31)
#loc7 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":23:5)
#loc8 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":23:9)
#loc9 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":25:13)
#loc10 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":25:12)
#loc11 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":25:5)
#loc12 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":26:5)
#loc13 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":31:5)
#loc14 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":26:11)
#loc15 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":29:16)
#loc16 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":29:27)
#loc17 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":29:9)
#loc18 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":30:9)
#loc19 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":32:5)
#loc20 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":36:5)
#loc21 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":35:26)
#loc22 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":35:9)
#loc23 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":62:1)
#loc24 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":65:1)
#loc25 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":64:5)
#loc26 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":64:13)
#loc27 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":44:1)
#loc28 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":60:1)
#loc29 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":57:9)
#loc30 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":57:31)
#loc31 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":46:5)
#loc32 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":46:9)
#loc33 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":48:13)
#loc34 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":48:12)
#loc35 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":48:5)
#loc36 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":49:5)
#loc37 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":54:5)
#loc38 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":49:11)
#loc39 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":52:16)
#loc40 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":52:25)
#loc41 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":52:9)
#loc42 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":53:9)
#loc43 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":55:5)
#loc44 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":59:5)
#loc45 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":58:26)
#loc46 = loc("CWE197_Numeric_Truncation_Error__int_large_to_char_16.c":58:9)
#loc47 = loc(fused[#loc1, #loc2])
#loc48 = loc(fused[#loc3, #loc4])
#loc49 = loc(fused[#loc5, #loc6])
#loc50 = loc(fused[#loc7, #loc8])
#loc51 = loc(fused[#loc11, #loc9])
#loc52 = loc(fused[#loc12, #loc13])
#loc53 = loc(fused[#loc17, #loc16])
#loc54 = loc(fused[#loc19, #loc20])
#loc55 = loc(fused[#loc23, #loc24])
#loc56 = loc(fused[#loc25, #loc26])
#loc57 = loc(fused[#loc27, #loc28])
#loc58 = loc(fused[#loc29, #loc30])
#loc59 = loc(fused[#loc31, #loc32])
#loc60 = loc(fused[#loc35, #loc33])
#loc61 = loc(fused[#loc36, #loc37])
#loc62 = loc(fused[#loc41, #loc40])
#loc63 = loc(fused[#loc43, #loc44])
