!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @CWE190_Integer_Overflow__int64_t_fscanf_square_61b_badSource(!s64i) -> !s64i loc(#loc81)
  cir.func private @printLongLongLine(!s64i) loc(#loc82)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_square_61_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc84)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc85)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc11)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc86)
    %3 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc13)
    %4 = cir.call @CWE190_Integer_Overflow__int64_t_fscanf_square_61b_badSource(%3) : (!s64i) -> !s64i loc(#loc14)
    cir.store %4, %1 : !s64i, !cir.ptr<!s64i> loc(#loc87)
    cir.br ^bb1 loc(#loc88)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc19)
    %6 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc8)
    %7 = cir.binop(mul, %5, %6) nsw : !s64i loc(#loc19)
    cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc84)
    %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc20)
    cir.call @printLongLongLine(%8) : (!s64i) -> () loc(#loc21)
    cir.br ^bb2 loc(#loc18)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc6)
  } loc(#loc83)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_square_61_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc90)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc24)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc91)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc26)
    cir.return loc(#loc23)
  } loc(#loc89)
  cir.func private @CWE190_Integer_Overflow__int64_t_fscanf_square_61b_goodG2BSource(!s64i) -> !s64i loc(#loc92)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc94)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc95)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc36)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc96)
    %3 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc38)
    %4 = cir.call @CWE190_Integer_Overflow__int64_t_fscanf_square_61b_goodG2BSource(%3) : (!s64i) -> !s64i loc(#loc39)
    cir.store %4, %1 : !s64i, !cir.ptr<!s64i> loc(#loc97)
    cir.br ^bb1 loc(#loc98)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc44)
    %6 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc33)
    %7 = cir.binop(mul, %5, %6) nsw : !s64i loc(#loc44)
    cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc94)
    %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc45)
    cir.call @printLongLongLine(%8) : (!s64i) -> () loc(#loc46)
    cir.br ^bb2 loc(#loc43)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc31)
  } loc(#loc93)
  cir.func private @CWE190_Integer_Overflow__int64_t_fscanf_square_61b_goodB2GSource(!s64i) -> !s64i loc(#loc99)
  cir.func private @imaxabs(!s64i) -> !s64i extra(#fn_attr1) loc(#loc100)
  cir.func private @sqrtl(!cir.long_double<!cir.f80>) -> !cir.long_double<!cir.f80> extra(#fn_attr1) loc(#loc51)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc54)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc103)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc104)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc61)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc105)
    %3 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc63)
    %4 = cir.call @CWE190_Integer_Overflow__int64_t_fscanf_square_61b_goodB2GSource(%3) : (!s64i) -> !s64i loc(#loc64)
    cir.store %4, %1 : !s64i, !cir.ptr<!s64i> loc(#loc106)
    cir.br ^bb1 loc(#loc107)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc69)
    %6 = cir.call @imaxabs(%5) : (!s64i) -> !s64i side_effect(const) extra(#fn_attr1) loc(#loc70)
    %7 = cir.cast(int_to_float, %6 : !s64i), !cir.long_double<!cir.f80> loc(#loc70)
    %8 = cir.get_global @sqrtl : !cir.ptr<!cir.func<(!cir.long_double<!cir.f80>) -> !cir.long_double<!cir.f80>>> loc(#loc71)
    %9 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc72)
    %10 = cir.cast(int_to_float, %9 : !s64i), !cir.long_double<!cir.f80> loc(#loc72)
    %11 = cir.call @sqrtl(%10) : (!cir.long_double<!cir.f80>) -> !cir.long_double<!cir.f80> extra(#fn_attr1) loc(#loc71)
    %12 = cir.cmp(le, %7, %11) : !cir.long_double<!cir.f80>, !cir.bool loc(#loc108)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc109)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc77)
    %14 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc58)
    %15 = cir.binop(mul, %13, %14) nsw : !s64i loc(#loc77)
    cir.store %15, %0 : !s64i, !cir.ptr<!s64i> loc(#loc103)
    %16 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc78)
    cir.call @printLongLongLine(%16) : (!s64i) -> () loc(#loc79)
    cir.br ^bb4 loc(#loc75)
  ^bb3:  // pred: ^bb1
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc54)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    cir.br ^bb4 loc(#loc68)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc68)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc56)
  } loc(#loc102)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":0:0)
#loc1 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":26:1)
#loc2 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":26:82)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":28:1)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":38:1)
#loc7 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":35:9)
#loc8 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":35:33)
#loc9 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":30:5)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":30:13)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":31:12)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":31:5)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":32:73)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":32:12)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":32:5)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":32:77)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":33:5)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":37:5)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":35:26)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":36:27)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":36:9)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":79:1)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":83:1)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":81:5)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":81:13)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":82:5)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":82:13)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":45:1)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":45:86)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":47:1)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":57:1)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":54:9)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":54:33)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":49:5)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":49:13)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":50:12)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":50:5)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":51:77)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":51:12)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":51:5)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":51:81)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":52:5)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":56:5)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":54:26)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":55:27)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":55:9)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":60:1)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":60:86)
#loc49 = loc("/usr/include/inttypes.h":351:1)
#loc50 = loc("/usr/include/inttypes.h":351:74)
#loc51 = loc("/usr/include/x86_64-linux-gnu/bits/mathcalls.h":143:1)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":75:19)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":62:1)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":77:1)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":70:9)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":70:33)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":64:5)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":64:13)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":65:12)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":65:5)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":66:77)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":66:12)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":66:5)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":66:81)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":68:5)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":76:5)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":68:27)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":68:9)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":68:36)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":68:42)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":68:51)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":69:5)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":72:5)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":74:5)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":70:26)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":71:27)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":71:9)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_61a.c":75:9)
#loc81 = loc(fused[#loc1, #loc2])
#loc82 = loc(fused[#loc3, #loc4])
#loc83 = loc(fused[#loc5, #loc6])
#loc84 = loc(fused[#loc7, #loc8])
#loc85 = loc(fused[#loc9, #loc10])
#loc86 = loc(fused[#loc12, #loc11])
#loc87 = loc(fused[#loc15, #loc16])
#loc88 = loc(fused[#loc17, #loc18])
#loc89 = loc(fused[#loc22, #loc23])
#loc90 = loc(fused[#loc24, #loc25])
#loc91 = loc(fused[#loc26, #loc27])
#loc92 = loc(fused[#loc28, #loc29])
#loc93 = loc(fused[#loc30, #loc31])
#loc94 = loc(fused[#loc32, #loc33])
#loc95 = loc(fused[#loc34, #loc35])
#loc96 = loc(fused[#loc37, #loc36])
#loc97 = loc(fused[#loc40, #loc41])
#loc98 = loc(fused[#loc42, #loc43])
#loc99 = loc(fused[#loc47, #loc48])
#loc100 = loc(fused[#loc49, #loc50])
#loc101 = loc(fused[#loc52, #loc53])
#loc102 = loc(fused[#loc55, #loc56])
#loc103 = loc(fused[#loc57, #loc58])
#loc104 = loc(fused[#loc59, #loc60])
#loc105 = loc(fused[#loc62, #loc61])
#loc106 = loc(fused[#loc65, #loc66])
#loc107 = loc(fused[#loc67, #loc68])
#loc108 = loc(fused[#loc70, #loc73])
#loc109 = loc(fused[#loc74, #loc75, #loc76, #loc68])
