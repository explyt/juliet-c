!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty_CWE369_Divide_by_Zero__int_fscanf_divide_34_unionType = !cir.struct<union "CWE369_Divide_by_Zero__int_fscanf_divide_34_unionType" {!s32i, !s32i}>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fscanf_divide_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc89)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc90)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @printIntLine(!s32i) loc(#loc91)
  cir.func no_proto  @CWE369_Divide_by_Zero__int_fscanf_divide_34_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc93)
    %1 = cir.alloca !ty_CWE369_Divide_by_Zero__int_fscanf_divide_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc94)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc15)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc95)
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc17)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc90)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc18)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc17)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_34_unionType> -> !cir.ptr<!s32i> loc(#loc20)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc96)
    cir.scope {
      %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc98)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_34_unionType> -> !cir.ptr<!s32i> loc(#loc26)
      %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc25)
      cir.store %14, %12 : !s32i, !cir.ptr<!s32i> loc(#loc98)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc27)
      %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc28)
      %17 = cir.binop(div, %15, %16) : !s32i loc(#loc99)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc29)
    } loc(#loc97)
    cir.return loc(#loc9)
  } loc(#loc92)
  cir.func no_proto  @CWE369_Divide_by_Zero__int_fscanf_divide_34_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc101)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc102)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    cir.return loc(#loc31)
  } loc(#loc100)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc104)
    %1 = cir.alloca !ty_CWE369_Divide_by_Zero__int_fscanf_divide_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc105)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc43)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc106)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc45)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_34_unionType> -> !cir.ptr<!s32i> loc(#loc20)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc110)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_34_unionType> -> !cir.ptr<!s32i> loc(#loc26)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc52)
      cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc110)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc53)
      %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc54)
      %12 = cir.binop(div, %10, %11) : !s32i loc(#loc111)
      cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc55)
    } loc(#loc109)
    cir.return loc(#loc37)
  } loc(#loc103)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc112)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc58)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc114)
    %1 = cir.alloca !ty_CWE369_Divide_by_Zero__int_fscanf_divide_34_unionType, !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc115)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc66)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc68)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc90)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc69)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc70)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc70)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc68)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_34_unionType> -> !cir.ptr<!s32i> loc(#loc20)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    cir.scope {
      %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc119)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE369_Divide_by_Zero__int_fscanf_divide_34_unionType> -> !cir.ptr<!s32i> loc(#loc26)
      %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc76)
      cir.store %14, %12 : !s32i, !cir.ptr<!s32i> loc(#loc119)
      cir.scope {
        %15 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc79)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc80)
        %17 = cir.cmp(ne, %15, %16) : !s32i, !s32i loc(#loc121)
        %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc81)
        cir.if %18 {
          %19 = cir.const #cir.int<100> : !s32i loc(#loc85)
          %20 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc86)
          %21 = cir.binop(div, %19, %20) : !s32i loc(#loc123)
          cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc87)
        } else {
          %19 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc58)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc58)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc88)
        } loc(#loc122)
      } loc(#loc120)
    } loc(#loc118)
    cir.return loc(#loc60)
  } loc(#loc113)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fscanf_divide_34.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":35:19)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":28:1)
#loc9 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":42:1)
#loc10 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":30:5)
#loc11 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":30:9)
#loc12 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":31:5)
#loc13 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":31:59)
#loc14 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":33:13)
#loc15 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":33:12)
#loc16 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":33:5)
#loc17 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":35:5)
#loc18 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":35:12)
#loc19 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":36:26)
#loc20 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":22:9)
#loc21 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":36:5)
#loc22 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":37:5)
#loc23 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":41:5)
#loc24 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":38:9)
#loc25 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":38:28)
#loc26 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":23:9)
#loc27 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":40:22)
#loc28 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":40:28)
#loc29 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":40:9)
#loc30 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":89:1)
#loc31 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":93:1)
#loc32 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":91:5)
#loc33 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":91:13)
#loc34 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":92:5)
#loc35 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":92:13)
#loc36 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":49:1)
#loc37 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":63:1)
#loc38 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":51:5)
#loc39 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":51:9)
#loc40 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":52:5)
#loc41 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":52:59)
#loc42 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":54:13)
#loc43 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":54:12)
#loc44 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":54:5)
#loc45 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":56:12)
#loc46 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":56:5)
#loc47 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":57:26)
#loc48 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":57:5)
#loc49 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":58:5)
#loc50 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":62:5)
#loc51 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":59:9)
#loc52 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":59:28)
#loc53 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":61:22)
#loc54 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":61:28)
#loc55 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":61:9)
#loc56 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc57 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc58 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":84:23)
#loc59 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":66:1)
#loc60 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":87:1)
#loc61 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":68:5)
#loc62 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":68:9)
#loc63 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":69:5)
#loc64 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":69:59)
#loc65 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":71:13)
#loc66 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":71:12)
#loc67 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":71:5)
#loc68 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":73:5)
#loc69 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":73:12)
#loc70 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":73:19)
#loc71 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":74:26)
#loc72 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":74:5)
#loc73 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":75:5)
#loc74 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":86:5)
#loc75 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":76:9)
#loc76 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":76:28)
#loc77 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":78:9)
#loc78 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":85:9)
#loc79 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":78:13)
#loc80 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":78:21)
#loc81 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":78:18)
#loc82 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":79:9)
#loc83 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":81:9)
#loc84 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":83:9)
#loc85 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":80:26)
#loc86 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":80:32)
#loc87 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":80:13)
#loc88 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_34.c":84:13)
#loc89 = loc(fused[#loc1, #loc2])
#loc90 = loc(fused[#loc3, #loc4])
#loc91 = loc(fused[#loc6, #loc7])
#loc92 = loc(fused[#loc8, #loc9])
#loc93 = loc(fused[#loc10, #loc11])
#loc94 = loc(fused[#loc12, #loc13])
#loc95 = loc(fused[#loc16, #loc14])
#loc96 = loc(fused[#loc21, #loc19])
#loc97 = loc(fused[#loc22, #loc23])
#loc98 = loc(fused[#loc24, #loc25])
#loc99 = loc(fused[#loc27, #loc28])
#loc100 = loc(fused[#loc30, #loc31])
#loc101 = loc(fused[#loc32, #loc33])
#loc102 = loc(fused[#loc34, #loc35])
#loc103 = loc(fused[#loc36, #loc37])
#loc104 = loc(fused[#loc38, #loc39])
#loc105 = loc(fused[#loc40, #loc41])
#loc106 = loc(fused[#loc44, #loc42])
#loc107 = loc(fused[#loc46, #loc45])
#loc108 = loc(fused[#loc48, #loc47])
#loc109 = loc(fused[#loc49, #loc50])
#loc110 = loc(fused[#loc51, #loc52])
#loc111 = loc(fused[#loc53, #loc54])
#loc112 = loc(fused[#loc56, #loc57])
#loc113 = loc(fused[#loc59, #loc60])
#loc114 = loc(fused[#loc61, #loc62])
#loc115 = loc(fused[#loc63, #loc64])
#loc116 = loc(fused[#loc67, #loc65])
#loc117 = loc(fused[#loc72, #loc71])
#loc118 = loc(fused[#loc73, #loc74])
#loc119 = loc(fused[#loc75, #loc76])
#loc120 = loc(fused[#loc77, #loc78])
#loc121 = loc(fused[#loc79, #loc80])
#loc122 = loc(fused[#loc82, #loc83, #loc84, #loc78])
#loc123 = loc(fused[#loc85, #loc86])
