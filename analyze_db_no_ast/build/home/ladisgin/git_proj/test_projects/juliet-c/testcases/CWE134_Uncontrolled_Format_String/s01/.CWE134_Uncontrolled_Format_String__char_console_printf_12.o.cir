!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE134_Uncontrolled_Format_String/s01/CWE134_Uncontrolled_Format_String__char_console_printf_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func no_proto private  @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc276)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc277)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc278)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc279)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc280)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc281)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"fixedstringtest\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc14)
  cir.func private  @printf(!cir.ptr<!s8i>, ...) -> !s32i loc(#loc282)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"%s\0A\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc17)
  cir.func no_proto  @CWE134_Uncontrolled_Format_String__char_console_printf_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc284)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc285)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc285)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc285)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc286)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc288)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc288)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc28)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc28)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc291)
          %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc37)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
          %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc37)
          cir.store %11, %8 : !u64i, !cir.ptr<!u64i> loc(#loc291)
          cir.scope {
            %12 = cir.const #cir.int<100> : !s32i loc(#loc41)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc41)
            %14 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc42)
            %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc293)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc43)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc43)
            %18 = cir.cmp(gt, %15, %17) : !u64i, !s32i loc(#loc294)
            %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc44)
            cir.if %19 {
              cir.scope {
                %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
                %21 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc49)
                %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc50)
                %23 = cir.const #cir.int<100> : !s32i loc(#loc51)
                %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc51)
                %25 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc52)
                %26 = cir.binop(sub, %24, %25) : !u64i loc(#loc297)
                %27 = cir.cast(integral, %26 : !u64i), !s32i loc(#loc297)
                %28 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc279)
                %29 = cir.load %28 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc53)
                %30 = cir.call @fgets(%22, %27, %29) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc54)
                %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc55)
                %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc55)
                %33 = cir.cmp(ne, %30, %32) : !cir.ptr<!s8i>, !s32i loc(#loc298)
                %34 = cir.cast(int_to_bool, %33 : !s32i), !cir.bool loc(#loc56)
                cir.if %34 {
                  %35 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc60)
                  %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
                  %37 = cir.call @strlen(%36) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc60)
                  cir.store %37, %8 : !u64i, !cir.ptr<!u64i> loc(#loc300)
                  cir.scope {
                    %38 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc66)
                    %39 = cir.const #cir.int<0> : !s32i loc(#loc67)
                    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc67)
                    %41 = cir.cmp(gt, %38, %40) : !u64i, !s32i loc(#loc302)
                    %42 = cir.cast(int_to_bool, %41 : !s32i), !cir.bool loc(#loc68)
                    %43 = cir.ternary(%42, true {
                      %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
                      %45 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc71)
                      %46 = cir.const #cir.int<1> : !s32i loc(#loc72)
                      %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc72)
                      %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc303)
                      %49 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc73)
                      %50 = cir.load %49 : !cir.ptr<!s8i>, !s8i loc(#loc70)
                      %51 = cir.cast(integral, %50 : !s8i), !s32i loc(#loc70)
                      %52 = cir.const #cir.int<10> : !s32i loc(#loc74)
                      %53 = cir.cmp(eq, %51, %52) : !s32i, !s32i loc(#loc304)
                      %54 = cir.cast(int_to_bool, %53 : !s32i), !cir.bool loc(#loc75)
                      %55 = cir.ternary(%54, true {
                        %56 = cir.const #true loc(#loc69)
                        cir.yield %56 : !cir.bool loc(#loc69)
                      }, false {
                        %56 = cir.const #false loc(#loc69)
                        cir.yield %56 : !cir.bool loc(#loc69)
                      }) : (!cir.bool) -> !cir.bool loc(#loc69)
                      cir.yield %55 : !cir.bool loc(#loc69)
                    }, false {
                      %44 = cir.const #false loc(#loc69)
                      cir.yield %44 : !cir.bool loc(#loc69)
                    }) : (!cir.bool) -> !cir.bool loc(#loc69)
                    cir.if %43 {
                      %44 = cir.const #cir.int<0> : !s32i loc(#loc77)
                      %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc77)
                      %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
                      %47 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc79)
                      %48 = cir.const #cir.int<1> : !s32i loc(#loc80)
                      %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc80)
                      %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc306)
                      %51 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc81)
                      cir.store %45, %51 : !s8i, !cir.ptr<!s8i> loc(#loc307)
                    } loc(#loc305)
                  } loc(#loc301)
                } else {
                  %35 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
                  %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
                  cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc82)
                  %37 = cir.const #cir.int<0> : !s32i loc(#loc83)
                  %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc83)
                  %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
                  %40 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc85)
                  %41 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc86)
                  cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc308)
                } loc(#loc299)
              } loc(#loc296)
            } loc(#loc295)
          } loc(#loc292)
        } loc(#loc290)
      } else {
        %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc87)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
        %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc14)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc14)
        %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc87)
      } loc(#loc289)
    } loc(#loc287)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc310)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc310)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc91)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc91)
      cir.if %7 {
        %8 = cir.get_global @printf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, ...)>> loc(#loc96)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
        %10 = cir.call @printf(%9) : (!cir.ptr<!s8i>) -> !s32i loc(#loc96)
      } else {
        %8 = cir.get_global @printf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, ...)>> loc(#loc98)
        %9 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc17)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc17)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
        %12 = cir.call @printf(%10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc98)
      } loc(#loc311)
    } loc(#loc309)
    cir.return loc(#loc19)
  } loc(#loc283)
  cir.func no_proto  @CWE134_Uncontrolled_Format_String__char_console_printf_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc313)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc102)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc314)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc104)
    cir.return loc(#loc101)
  } loc(#loc312)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc316)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc317)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc317)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc317)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc112)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc318)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc320)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc320)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc116)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc116)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc323)
          %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc125)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
          %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc125)
          cir.store %11, %8 : !u64i, !cir.ptr<!u64i> loc(#loc323)
          cir.scope {
            %12 = cir.const #cir.int<100> : !s32i loc(#loc129)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc129)
            %14 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc130)
            %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc325)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc131)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc131)
            %18 = cir.cmp(gt, %15, %17) : !u64i, !s32i loc(#loc326)
            %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc132)
            cir.if %19 {
              cir.scope {
                %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
                %21 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc137)
                %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc138)
                %23 = cir.const #cir.int<100> : !s32i loc(#loc139)
                %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc139)
                %25 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc140)
                %26 = cir.binop(sub, %24, %25) : !u64i loc(#loc329)
                %27 = cir.cast(integral, %26 : !u64i), !s32i loc(#loc329)
                %28 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc279)
                %29 = cir.load %28 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc141)
                %30 = cir.call @fgets(%22, %27, %29) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc142)
                %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc143)
                %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc143)
                %33 = cir.cmp(ne, %30, %32) : !cir.ptr<!s8i>, !s32i loc(#loc330)
                %34 = cir.cast(int_to_bool, %33 : !s32i), !cir.bool loc(#loc144)
                cir.if %34 {
                  %35 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc148)
                  %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
                  %37 = cir.call @strlen(%36) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc148)
                  cir.store %37, %8 : !u64i, !cir.ptr<!u64i> loc(#loc332)
                  cir.scope {
                    %38 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc154)
                    %39 = cir.const #cir.int<0> : !s32i loc(#loc155)
                    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc155)
                    %41 = cir.cmp(gt, %38, %40) : !u64i, !s32i loc(#loc334)
                    %42 = cir.cast(int_to_bool, %41 : !s32i), !cir.bool loc(#loc156)
                    %43 = cir.ternary(%42, true {
                      %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
                      %45 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc159)
                      %46 = cir.const #cir.int<1> : !s32i loc(#loc160)
                      %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc160)
                      %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc335)
                      %49 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc161)
                      %50 = cir.load %49 : !cir.ptr<!s8i>, !s8i loc(#loc158)
                      %51 = cir.cast(integral, %50 : !s8i), !s32i loc(#loc158)
                      %52 = cir.const #cir.int<10> : !s32i loc(#loc162)
                      %53 = cir.cmp(eq, %51, %52) : !s32i, !s32i loc(#loc336)
                      %54 = cir.cast(int_to_bool, %53 : !s32i), !cir.bool loc(#loc163)
                      %55 = cir.ternary(%54, true {
                        %56 = cir.const #true loc(#loc157)
                        cir.yield %56 : !cir.bool loc(#loc157)
                      }, false {
                        %56 = cir.const #false loc(#loc157)
                        cir.yield %56 : !cir.bool loc(#loc157)
                      }) : (!cir.bool) -> !cir.bool loc(#loc157)
                      cir.yield %55 : !cir.bool loc(#loc157)
                    }, false {
                      %44 = cir.const #false loc(#loc157)
                      cir.yield %44 : !cir.bool loc(#loc157)
                    }) : (!cir.bool) -> !cir.bool loc(#loc157)
                    cir.if %43 {
                      %44 = cir.const #cir.int<0> : !s32i loc(#loc165)
                      %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc165)
                      %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
                      %47 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc167)
                      %48 = cir.const #cir.int<1> : !s32i loc(#loc168)
                      %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc168)
                      %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc338)
                      %51 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc169)
                      cir.store %45, %51 : !s8i, !cir.ptr<!s8i> loc(#loc339)
                    } loc(#loc337)
                  } loc(#loc333)
                } else {
                  %35 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc170)
                  %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc170)
                  cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc171)
                  %37 = cir.const #cir.int<0> : !s32i loc(#loc172)
                  %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc172)
                  %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
                  %40 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc174)
                  %41 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc175)
                  cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc340)
                } loc(#loc331)
              } loc(#loc328)
            } loc(#loc327)
          } loc(#loc324)
        } loc(#loc322)
      } else {
        cir.scope {
          %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc342)
          %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc180)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
          %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc180)
          cir.store %11, %8 : !u64i, !cir.ptr<!u64i> loc(#loc342)
          cir.scope {
            %12 = cir.const #cir.int<100> : !s32i loc(#loc184)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc184)
            %14 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc185)
            %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc344)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc186)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc186)
            %18 = cir.cmp(gt, %15, %17) : !u64i, !s32i loc(#loc345)
            %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc187)
            cir.if %19 {
              cir.scope {
                %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
                %21 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc192)
                %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc193)
                %23 = cir.const #cir.int<100> : !s32i loc(#loc194)
                %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc194)
                %25 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc195)
                %26 = cir.binop(sub, %24, %25) : !u64i loc(#loc348)
                %27 = cir.cast(integral, %26 : !u64i), !s32i loc(#loc348)
                %28 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc279)
                %29 = cir.load %28 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc196)
                %30 = cir.call @fgets(%22, %27, %29) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc197)
                %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc198)
                %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc198)
                %33 = cir.cmp(ne, %30, %32) : !cir.ptr<!s8i>, !s32i loc(#loc349)
                %34 = cir.cast(int_to_bool, %33 : !s32i), !cir.bool loc(#loc199)
                cir.if %34 {
                  %35 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc203)
                  %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
                  %37 = cir.call @strlen(%36) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc203)
                  cir.store %37, %8 : !u64i, !cir.ptr<!u64i> loc(#loc351)
                  cir.scope {
                    %38 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc209)
                    %39 = cir.const #cir.int<0> : !s32i loc(#loc210)
                    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc210)
                    %41 = cir.cmp(gt, %38, %40) : !u64i, !s32i loc(#loc353)
                    %42 = cir.cast(int_to_bool, %41 : !s32i), !cir.bool loc(#loc211)
                    %43 = cir.ternary(%42, true {
                      %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc213)
                      %45 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc214)
                      %46 = cir.const #cir.int<1> : !s32i loc(#loc215)
                      %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc215)
                      %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc354)
                      %49 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc216)
                      %50 = cir.load %49 : !cir.ptr<!s8i>, !s8i loc(#loc213)
                      %51 = cir.cast(integral, %50 : !s8i), !s32i loc(#loc213)
                      %52 = cir.const #cir.int<10> : !s32i loc(#loc217)
                      %53 = cir.cmp(eq, %51, %52) : !s32i, !s32i loc(#loc355)
                      %54 = cir.cast(int_to_bool, %53 : !s32i), !cir.bool loc(#loc218)
                      %55 = cir.ternary(%54, true {
                        %56 = cir.const #true loc(#loc212)
                        cir.yield %56 : !cir.bool loc(#loc212)
                      }, false {
                        %56 = cir.const #false loc(#loc212)
                        cir.yield %56 : !cir.bool loc(#loc212)
                      }) : (!cir.bool) -> !cir.bool loc(#loc212)
                      cir.yield %55 : !cir.bool loc(#loc212)
                    }, false {
                      %44 = cir.const #false loc(#loc212)
                      cir.yield %44 : !cir.bool loc(#loc212)
                    }) : (!cir.bool) -> !cir.bool loc(#loc212)
                    cir.if %43 {
                      %44 = cir.const #cir.int<0> : !s32i loc(#loc220)
                      %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc220)
                      %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc221)
                      %47 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc222)
                      %48 = cir.const #cir.int<1> : !s32i loc(#loc223)
                      %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc223)
                      %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc357)
                      %51 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc224)
                      cir.store %45, %51 : !s8i, !cir.ptr<!s8i> loc(#loc358)
                    } loc(#loc356)
                  } loc(#loc352)
                } else {
                  %35 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc225)
                  %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc225)
                  cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc226)
                  %37 = cir.const #cir.int<0> : !s32i loc(#loc227)
                  %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc227)
                  %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc228)
                  %40 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc229)
                  %41 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc230)
                  cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc359)
                } loc(#loc350)
              } loc(#loc347)
            } loc(#loc346)
          } loc(#loc343)
        } loc(#loc341)
      } loc(#loc321)
    } loc(#loc319)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc361)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc361)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc233)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc233)
      cir.if %7 {
        %8 = cir.get_global @printf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, ...)>> loc(#loc238)
        %9 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc239)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc239)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc240)
        %12 = cir.call @printf(%10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc238)
      } else {
        %8 = cir.get_global @printf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, ...)>> loc(#loc241)
        %9 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc242)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc242)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc243)
        %12 = cir.call @printf(%10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc241)
      } loc(#loc362)
    } loc(#loc360)
    cir.return loc(#loc107)
  } loc(#loc315)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc364)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc365)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc365)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc365)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc250)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc366)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc368)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc368)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc254)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc254)
      cir.if %7 {
        %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc259)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc260)
        %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc261)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc261)
        %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc259)
      } else {
        %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc262)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc263)
        %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc264)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc264)
        %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc262)
      } loc(#loc369)
    } loc(#loc367)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc371)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc371)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc267)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc267)
      cir.if %7 {
        %8 = cir.get_global @printf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, ...)>> loc(#loc272)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc273)
        %10 = cir.call @printf(%9) : (!cir.ptr<!s8i>) -> !s32i loc(#loc272)
      } else {
        %8 = cir.get_global @printf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, ...)>> loc(#loc274)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc275)
        %10 = cir.call @printf(%9) : (!cir.ptr<!s8i>) -> !s32i loc(#loc274)
      } loc(#loc372)
    } loc(#loc370)
    cir.return loc(#loc245)
  } loc(#loc363)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE134_Uncontrolled_Format_String/s01/CWE134_Uncontrolled_Format_String__char_console_printf_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/stdio.h":654:1)
#loc6 = loc("/usr/include/stdio.h":655:59)
#loc7 = loc("/usr/include/stdio.h":149:1)
#loc8 = loc("/usr/include/stdio.h":149:14)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":52:31)
#loc12 = loc("/usr/include/string.h":141:1)
#loc13 = loc("/usr/include/string.h":142:14)
#loc14 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":62:22)
#loc15 = loc("/usr/include/stdio.h":363:1)
#loc16 = loc("/usr/include/stdio.h":363:56)
#loc17 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":72:16)
#loc18 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":26:1)
#loc19 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":74:1)
#loc20 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":28:5)
#loc21 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":28:12)
#loc22 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":29:5)
#loc23 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":29:28)
#loc24 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":30:12)
#loc25 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":30:5)
#loc26 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":31:5)
#loc27 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":63:5)
#loc28 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":31:8)
#loc29 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":31:33)
#loc30 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":32:5)
#loc31 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":58:5)
#loc32 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":60:5)
#loc33 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":33:9)
#loc34 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":57:9)
#loc35 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":35:13)
#loc36 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":35:41)
#loc37 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":35:30)
#loc38 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":35:37)
#loc39 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":37:13)
#loc40 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":56:13)
#loc41 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":37:17)
#loc42 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":37:21)
#loc43 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":37:31)
#loc44 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":37:29)
#loc45 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":38:13)
#loc46 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":40:17)
#loc47 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":55:17)
#loc48 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":40:27)
#loc49 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":40:32)
#loc50 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":40:31)
#loc51 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":40:47)
#loc52 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":40:51)
#loc53 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":40:61)
#loc54 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":40:21)
#loc55 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":40:71)
#loc56 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":40:68)
#loc57 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":41:17)
#loc58 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":49:17)
#loc59 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":51:17)
#loc60 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":44:31)
#loc61 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":44:38)
#loc62 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":44:21)
#loc63 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":44:42)
#loc64 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":45:21)
#loc65 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":48:21)
#loc66 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":45:25)
#loc67 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":45:35)
#loc68 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":45:33)
#loc69 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":45:37)
#loc70 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":45:40)
#loc71 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":45:45)
#loc72 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":45:53)
#loc73 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":45:54)
#loc74 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":45:59)
#loc75 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":45:56)
#loc76 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":46:21)
#loc77 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":47:43)
#loc78 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":47:25)
#loc79 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":47:30)
#loc80 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":47:38)
#loc81 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":47:39)
#loc82 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":52:21)
#loc83 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":54:37)
#loc84 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":54:21)
#loc85 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":54:26)
#loc86 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":54:33)
#loc87 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":62:9)
#loc88 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":62:16)
#loc89 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":64:5)
#loc90 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":73:5)
#loc91 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":64:8)
#loc92 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":64:33)
#loc93 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":65:5)
#loc94 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":68:5)
#loc95 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":70:5)
#loc96 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":67:9)
#loc97 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":67:16)
#loc98 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":72:9)
#loc99 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":72:24)
#loc100 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":186:1)
#loc101 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":190:1)
#loc102 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":188:5)
#loc103 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":188:13)
#loc104 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":189:5)
#loc105 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":189:13)
#loc106 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":83:1)
#loc107 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":154:1)
#loc108 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":85:5)
#loc109 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":85:12)
#loc110 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":86:5)
#loc111 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":86:28)
#loc112 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":87:12)
#loc113 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":87:5)
#loc114 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":88:5)
#loc115 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":143:5)
#loc116 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":88:8)
#loc117 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":88:33)
#loc118 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":89:5)
#loc119 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":115:5)
#loc120 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":117:5)
#loc121 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":90:9)
#loc122 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":114:9)
#loc123 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":92:13)
#loc124 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":92:41)
#loc125 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":92:30)
#loc126 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":92:37)
#loc127 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":94:13)
#loc128 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":113:13)
#loc129 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":94:17)
#loc130 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":94:21)
#loc131 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":94:31)
#loc132 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":94:29)
#loc133 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":95:13)
#loc134 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":97:17)
#loc135 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":112:17)
#loc136 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":97:27)
#loc137 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":97:32)
#loc138 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":97:31)
#loc139 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":97:47)
#loc140 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":97:51)
#loc141 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":97:61)
#loc142 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":97:21)
#loc143 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":97:71)
#loc144 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":97:68)
#loc145 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":98:17)
#loc146 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":106:17)
#loc147 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":108:17)
#loc148 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":101:31)
#loc149 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":101:38)
#loc150 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":101:21)
#loc151 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":101:42)
#loc152 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":102:21)
#loc153 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":105:21)
#loc154 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":102:25)
#loc155 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":102:35)
#loc156 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":102:33)
#loc157 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":102:37)
#loc158 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":102:40)
#loc159 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":102:45)
#loc160 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":102:53)
#loc161 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":102:54)
#loc162 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":102:59)
#loc163 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":102:56)
#loc164 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":103:21)
#loc165 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":104:43)
#loc166 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":104:25)
#loc167 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":104:30)
#loc168 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":104:38)
#loc169 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":104:39)
#loc170 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":109:31)
#loc171 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":109:21)
#loc172 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":111:37)
#loc173 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":111:21)
#loc174 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":111:26)
#loc175 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":111:33)
#loc176 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":118:9)
#loc177 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":142:9)
#loc178 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":120:13)
#loc179 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":120:41)
#loc180 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":120:30)
#loc181 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":120:37)
#loc182 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":122:13)
#loc183 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":141:13)
#loc184 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":122:17)
#loc185 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":122:21)
#loc186 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":122:31)
#loc187 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":122:29)
#loc188 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":123:13)
#loc189 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":125:17)
#loc190 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":140:17)
#loc191 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":125:27)
#loc192 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":125:32)
#loc193 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":125:31)
#loc194 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":125:47)
#loc195 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":125:51)
#loc196 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":125:61)
#loc197 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":125:21)
#loc198 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":125:71)
#loc199 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":125:68)
#loc200 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":126:17)
#loc201 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":134:17)
#loc202 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":136:17)
#loc203 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":129:31)
#loc204 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":129:38)
#loc205 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":129:21)
#loc206 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":129:42)
#loc207 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":130:21)
#loc208 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":133:21)
#loc209 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":130:25)
#loc210 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":130:35)
#loc211 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":130:33)
#loc212 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":130:37)
#loc213 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":130:40)
#loc214 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":130:45)
#loc215 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":130:53)
#loc216 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":130:54)
#loc217 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":130:59)
#loc218 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":130:56)
#loc219 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":131:21)
#loc220 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":132:43)
#loc221 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":132:25)
#loc222 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":132:30)
#loc223 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":132:38)
#loc224 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":132:39)
#loc225 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":137:31)
#loc226 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":137:21)
#loc227 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":139:37)
#loc228 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":139:21)
#loc229 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":139:26)
#loc230 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":139:33)
#loc231 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":144:5)
#loc232 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":153:5)
#loc233 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":144:8)
#loc234 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":144:33)
#loc235 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":145:5)
#loc236 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":148:5)
#loc237 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":150:5)
#loc238 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":147:9)
#loc239 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":147:16)
#loc240 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":147:24)
#loc241 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":152:9)
#loc242 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":152:16)
#loc243 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":152:24)
#loc244 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":159:1)
#loc245 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":184:1)
#loc246 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":161:5)
#loc247 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":161:12)
#loc248 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":162:5)
#loc249 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":162:28)
#loc250 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":163:12)
#loc251 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":163:5)
#loc252 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":164:5)
#loc253 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":173:5)
#loc254 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":164:8)
#loc255 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":164:33)
#loc256 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":165:5)
#loc257 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":168:5)
#loc258 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":170:5)
#loc259 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":167:9)
#loc260 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":167:16)
#loc261 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":167:22)
#loc262 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":172:9)
#loc263 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":172:16)
#loc264 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":172:22)
#loc265 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":174:5)
#loc266 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":183:5)
#loc267 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":174:8)
#loc268 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":174:33)
#loc269 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":175:5)
#loc270 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":178:5)
#loc271 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":180:5)
#loc272 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":177:9)
#loc273 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":177:16)
#loc274 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":182:9)
#loc275 = loc("CWE134_Uncontrolled_Format_String__char_console_printf_12.c":182:16)
#loc276 = loc(fused[#loc1, #loc2])
#loc277 = loc(fused[#loc3, #loc4])
#loc278 = loc(fused[#loc5, #loc6])
#loc279 = loc(fused[#loc7, #loc8])
#loc280 = loc(fused[#loc9, #loc10])
#loc281 = loc(fused[#loc12, #loc13])
#loc282 = loc(fused[#loc15, #loc16])
#loc283 = loc(fused[#loc18, #loc19])
#loc284 = loc(fused[#loc20, #loc21])
#loc285 = loc(fused[#loc22, #loc23])
#loc286 = loc(fused[#loc25, #loc24])
#loc287 = loc(fused[#loc26, #loc27])
#loc288 = loc(fused[#loc28, #loc29])
#loc289 = loc(fused[#loc30, #loc31, #loc32, #loc27])
#loc290 = loc(fused[#loc33, #loc34])
#loc291 = loc(fused[#loc35, #loc36])
#loc292 = loc(fused[#loc39, #loc40])
#loc293 = loc(fused[#loc41, #loc42])
#loc294 = loc(fused[#loc41, #loc43])
#loc295 = loc(fused[#loc45, #loc40])
#loc296 = loc(fused[#loc46, #loc47])
#loc297 = loc(fused[#loc51, #loc52])
#loc298 = loc(fused[#loc54, #loc55])
#loc299 = loc(fused[#loc57, #loc58, #loc59, #loc47])
#loc300 = loc(fused[#loc62, #loc63])
#loc301 = loc(fused[#loc64, #loc65])
#loc302 = loc(fused[#loc66, #loc67])
#loc303 = loc(fused[#loc71, #loc72])
#loc304 = loc(fused[#loc70, #loc74])
#loc305 = loc(fused[#loc76, #loc65])
#loc306 = loc(fused[#loc79, #loc80])
#loc307 = loc(fused[#loc78, #loc77])
#loc308 = loc(fused[#loc84, #loc83])
#loc309 = loc(fused[#loc89, #loc90])
#loc310 = loc(fused[#loc91, #loc92])
#loc311 = loc(fused[#loc93, #loc94, #loc95, #loc90])
#loc312 = loc(fused[#loc100, #loc101])
#loc313 = loc(fused[#loc102, #loc103])
#loc314 = loc(fused[#loc104, #loc105])
#loc315 = loc(fused[#loc106, #loc107])
#loc316 = loc(fused[#loc108, #loc109])
#loc317 = loc(fused[#loc110, #loc111])
#loc318 = loc(fused[#loc113, #loc112])
#loc319 = loc(fused[#loc114, #loc115])
#loc320 = loc(fused[#loc116, #loc117])
#loc321 = loc(fused[#loc118, #loc119, #loc120, #loc115])
#loc322 = loc(fused[#loc121, #loc122])
#loc323 = loc(fused[#loc123, #loc124])
#loc324 = loc(fused[#loc127, #loc128])
#loc325 = loc(fused[#loc129, #loc130])
#loc326 = loc(fused[#loc129, #loc131])
#loc327 = loc(fused[#loc133, #loc128])
#loc328 = loc(fused[#loc134, #loc135])
#loc329 = loc(fused[#loc139, #loc140])
#loc330 = loc(fused[#loc142, #loc143])
#loc331 = loc(fused[#loc145, #loc146, #loc147, #loc135])
#loc332 = loc(fused[#loc150, #loc151])
#loc333 = loc(fused[#loc152, #loc153])
#loc334 = loc(fused[#loc154, #loc155])
#loc335 = loc(fused[#loc159, #loc160])
#loc336 = loc(fused[#loc158, #loc162])
#loc337 = loc(fused[#loc164, #loc153])
#loc338 = loc(fused[#loc167, #loc168])
#loc339 = loc(fused[#loc166, #loc165])
#loc340 = loc(fused[#loc173, #loc172])
#loc341 = loc(fused[#loc176, #loc177])
#loc342 = loc(fused[#loc178, #loc179])
#loc343 = loc(fused[#loc182, #loc183])
#loc344 = loc(fused[#loc184, #loc185])
#loc345 = loc(fused[#loc184, #loc186])
#loc346 = loc(fused[#loc188, #loc183])
#loc347 = loc(fused[#loc189, #loc190])
#loc348 = loc(fused[#loc194, #loc195])
#loc349 = loc(fused[#loc197, #loc198])
#loc350 = loc(fused[#loc200, #loc201, #loc202, #loc190])
#loc351 = loc(fused[#loc205, #loc206])
#loc352 = loc(fused[#loc207, #loc208])
#loc353 = loc(fused[#loc209, #loc210])
#loc354 = loc(fused[#loc214, #loc215])
#loc355 = loc(fused[#loc213, #loc217])
#loc356 = loc(fused[#loc219, #loc208])
#loc357 = loc(fused[#loc222, #loc223])
#loc358 = loc(fused[#loc221, #loc220])
#loc359 = loc(fused[#loc228, #loc227])
#loc360 = loc(fused[#loc231, #loc232])
#loc361 = loc(fused[#loc233, #loc234])
#loc362 = loc(fused[#loc235, #loc236, #loc237, #loc232])
#loc363 = loc(fused[#loc244, #loc245])
#loc364 = loc(fused[#loc246, #loc247])
#loc365 = loc(fused[#loc248, #loc249])
#loc366 = loc(fused[#loc251, #loc250])
#loc367 = loc(fused[#loc252, #loc253])
#loc368 = loc(fused[#loc254, #loc255])
#loc369 = loc(fused[#loc256, #loc257, #loc258, #loc253])
#loc370 = loc(fused[#loc265, #loc266])
#loc371 = loc(fused[#loc267, #loc268])
#loc372 = loc(fused[#loc269, #loc270, #loc271, #loc266])
