!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc187)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc5)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc189)
  cir.func @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc191)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc12)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc192)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc16)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.const #cir.int<4> : !u64i loc(#loc194)
          %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc20)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc194)
          cir.store %5, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc195)
          cir.break loc(#loc22)
        } loc(#loc17)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc5)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc5)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc24)
          cir.break loc(#loc25)
        } loc(#loc23)
        cir.yield loc(#loc14)
      } loc(#loc14)
    } loc(#loc193)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc28)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc30)
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc31)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc31)
          cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc30)
          cir.break loc(#loc32)
        } loc(#loc29)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc34)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc34)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc35)
          cir.break loc(#loc36)
        } loc(#loc33)
        cir.yield loc(#loc26)
      } loc(#loc26)
    } loc(#loc196)
    cir.return loc(#loc9)
  } loc(#loc190)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc197)
  cir.func internal private @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_15L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc199)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc43)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc200)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc47)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.const #cir.int<4> : !u64i loc(#loc202)
          %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc51)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc202)
          cir.store %5, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc203)
          cir.break loc(#loc53)
        } loc(#loc48)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc55)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc55)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc56)
          cir.break loc(#loc57)
        } loc(#loc54)
        cir.yield loc(#loc45)
      } loc(#loc45)
    } loc(#loc201)
    cir.scope {
      %2 = cir.const #cir.int<8> : !s32i loc(#loc60)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc62)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc62)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc63)
          cir.break loc(#loc64)
        } loc(#loc61)
        cir.case(default, []) {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc66)
          cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc51)
          cir.break loc(#loc67)
        } loc(#loc65)
        cir.yield loc(#loc58)
      } loc(#loc58)
    } loc(#loc204)
    cir.return loc(#loc40)
  } loc(#loc198)
  cir.func internal private @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_15L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc206)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc72)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc207)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc76)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.const #cir.int<4> : !u64i loc(#loc209)
          %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc80)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc209)
          cir.store %5, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc210)
          cir.break loc(#loc82)
        } loc(#loc77)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc84)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc84)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc85)
          cir.break loc(#loc86)
        } loc(#loc83)
        cir.yield loc(#loc74)
      } loc(#loc74)
    } loc(#loc208)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc89)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc91)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc91)
          cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc80)
          cir.break loc(#loc92)
        } loc(#loc90)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc94)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc94)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc95)
          cir.break loc(#loc96)
        } loc(#loc93)
        cir.yield loc(#loc87)
      } loc(#loc87)
    } loc(#loc211)
    cir.return loc(#loc69)
  } loc(#loc205)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc212)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc213)
  cir.func internal private @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc215)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc105)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc216)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc109)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc111)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc111)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc112)
          cir.break loc(#loc113)
        } loc(#loc110)
        cir.case(default, []) {
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc115)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc116)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc116)
          %6 = cir.const #cir.int<4> : !u64i loc(#loc218)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc219)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc115)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc220)
          cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc221)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc123)
            %11 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc124)
            %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s32i>, !cir.bool loc(#loc223)
            cir.if %12 {
              %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc126)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc127)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc128)
              cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc126)
            } loc(#loc224)
          } loc(#loc222)
          cir.break loc(#loc129)
        } loc(#loc114)
        cir.yield loc(#loc107)
      } loc(#loc107)
    } loc(#loc217)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc132)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc134)
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc135)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc135)
          cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc134)
          cir.break loc(#loc136)
        } loc(#loc133)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc138)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc138)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc139)
          cir.break loc(#loc140)
        } loc(#loc137)
        cir.yield loc(#loc130)
      } loc(#loc130)
    } loc(#loc225)
    cir.return loc(#loc102)
  } loc(#loc214)
  cir.func internal private @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc227)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc145)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc228)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc149)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc151)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc152)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc152)
          %6 = cir.const #cir.int<4> : !u64i loc(#loc230)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc231)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc151)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc232)
          cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc233)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc159)
            %11 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc160)
            %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s32i>, !cir.bool loc(#loc235)
            cir.if %12 {
              %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc162)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc163)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc164)
              cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc162)
            } loc(#loc236)
          } loc(#loc234)
          cir.break loc(#loc165)
        } loc(#loc150)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc167)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc167)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc168)
          cir.break loc(#loc169)
        } loc(#loc166)
        cir.yield loc(#loc147)
      } loc(#loc147)
    } loc(#loc229)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc172)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc174)
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc175)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc175)
          cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc174)
          cir.break loc(#loc176)
        } loc(#loc173)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc178)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc178)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc179)
          cir.break loc(#loc180)
        } loc(#loc177)
        cir.yield loc(#loc170)
      } loc(#loc170)
    } loc(#loc237)
    cir.return loc(#loc142)
  } loc(#loc226)
  cir.func @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_15L8goodB2G1Ev() : () -> () loc(#loc183)
    cir.call @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_15L8goodB2G2Ev() : () -> () loc(#loc184)
    cir.call @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_15L8goodG2B1Ev() : () -> () loc(#loc185)
    cir.call @_ZN61CWE762_Mismatched_Memory_Management_Routines__new_free_int_15L8goodG2B2Ev() : () -> () loc(#loc186)
    cir.return loc(#loc182)
  } loc(#loc238)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":37:19)
#loc6 = loc("/usr/include/stdlib.h":687:1)
#loc7 = loc("/usr/include/stdlib.h":687:32)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":24:1)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":52:1)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":26:5)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":26:11)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":28:12)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":28:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":29:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":39:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":29:12)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":31:5)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":33:16)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":33:20)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":24:6)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":33:9)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":34:9)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":35:5)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":37:9)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":38:9)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":40:5)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":51:5)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":40:12)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":42:5)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":45:9)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":45:14)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":46:9)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":47:5)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":49:19)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":49:9)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":50:9)
#loc37 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc38 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":59:1)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":86:1)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":61:5)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":61:11)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":63:12)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":63:5)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":64:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":74:5)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":64:12)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":66:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":68:16)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":68:20)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":59:13)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":68:9)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":69:9)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":70:5)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":72:19)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":72:9)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":73:9)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":75:5)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":85:5)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":75:12)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":77:5)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":79:19)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":79:9)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":80:9)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":81:5)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":83:16)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":84:9)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":89:1)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":116:1)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":91:5)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":91:11)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":93:12)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":93:5)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":94:5)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":104:5)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":94:12)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":96:5)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":98:16)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":98:20)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":89:13)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":98:9)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":99:9)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":100:5)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":102:19)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":102:9)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":103:9)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":105:5)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":115:5)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":105:12)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":107:5)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":109:16)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":110:9)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":111:5)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":113:19)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":113:9)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":114:9)
#loc97 = loc("/usr/include/stdlib.h":672:1)
#loc98 = loc("/usr/include/stdlib.h":672:45)
#loc99 = loc("/usr/include/stdlib.h":756:1)
#loc100 = loc("/usr/include/stdlib.h":756:70)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":119:1)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":148:1)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":121:5)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":121:11)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":123:12)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":123:5)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":124:5)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":135:5)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":124:12)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":126:5)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":128:19)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":128:9)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":129:9)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":130:5)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":132:23)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":132:30)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":132:34)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":132:44)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":132:45)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":132:9)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":133:9)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":133:37)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":133:13)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":133:21)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":133:27)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":133:28)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":133:34)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":133:33)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":134:9)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":136:5)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":147:5)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":136:12)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":138:5)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":141:9)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":141:14)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":142:9)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":143:5)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":145:19)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":145:9)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":146:9)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":151:1)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":180:1)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":153:5)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":153:11)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":155:12)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":155:5)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":156:5)
#loc148 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":167:5)
#loc149 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":156:12)
#loc150 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":158:5)
#loc151 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":160:23)
#loc152 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":160:30)
#loc153 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":160:34)
#loc154 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":160:44)
#loc155 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":160:45)
#loc156 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":160:9)
#loc157 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":161:9)
#loc158 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":161:37)
#loc159 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":161:13)
#loc160 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":161:21)
#loc161 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":161:27)
#loc162 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":161:28)
#loc163 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":161:34)
#loc164 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":161:33)
#loc165 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":162:9)
#loc166 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":163:5)
#loc167 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":165:19)
#loc168 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":165:9)
#loc169 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":166:9)
#loc170 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":168:5)
#loc171 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":179:5)
#loc172 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":168:12)
#loc173 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":170:5)
#loc174 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":173:9)
#loc175 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":173:14)
#loc176 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":174:9)
#loc177 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":175:5)
#loc178 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":177:19)
#loc179 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":177:9)
#loc180 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":178:9)
#loc181 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":182:1)
#loc182 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":188:1)
#loc183 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":184:5)
#loc184 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":185:5)
#loc185 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":186:5)
#loc186 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_int_15.cpp":187:5)
#loc187 = loc(fused[#loc1, #loc2])
#loc188 = loc(fused[#loc3, #loc4])
#loc189 = loc(fused[#loc6, #loc7])
#loc190 = loc(fused[#loc8, #loc9])
#loc191 = loc(fused[#loc10, #loc11])
#loc192 = loc(fused[#loc13, #loc12])
#loc193 = loc(fused[#loc14, #loc15])
#loc194 = loc(fused[#loc18, #loc19])
#loc195 = loc(fused[#loc21, #loc19])
#loc196 = loc(fused[#loc26, #loc27])
#loc197 = loc(fused[#loc37, #loc38])
#loc198 = loc(fused[#loc39, #loc40])
#loc199 = loc(fused[#loc41, #loc42])
#loc200 = loc(fused[#loc44, #loc43])
#loc201 = loc(fused[#loc45, #loc46])
#loc202 = loc(fused[#loc49, #loc50])
#loc203 = loc(fused[#loc52, #loc50])
#loc204 = loc(fused[#loc58, #loc59])
#loc205 = loc(fused[#loc68, #loc69])
#loc206 = loc(fused[#loc70, #loc71])
#loc207 = loc(fused[#loc73, #loc72])
#loc208 = loc(fused[#loc74, #loc75])
#loc209 = loc(fused[#loc78, #loc79])
#loc210 = loc(fused[#loc81, #loc79])
#loc211 = loc(fused[#loc87, #loc88])
#loc212 = loc(fused[#loc97, #loc98])
#loc213 = loc(fused[#loc99, #loc100])
#loc214 = loc(fused[#loc101, #loc102])
#loc215 = loc(fused[#loc103, #loc104])
#loc216 = loc(fused[#loc106, #loc105])
#loc217 = loc(fused[#loc107, #loc108])
#loc218 = loc(fused[#loc117, #loc118])
#loc219 = loc(fused[#loc116, #loc118])
#loc220 = loc(fused[#loc115, #loc119])
#loc221 = loc(fused[#loc120, #loc119])
#loc222 = loc(fused[#loc121, #loc122])
#loc223 = loc(fused[#loc123, #loc124])
#loc224 = loc(fused[#loc125, #loc122])
#loc225 = loc(fused[#loc130, #loc131])
#loc226 = loc(fused[#loc141, #loc142])
#loc227 = loc(fused[#loc143, #loc144])
#loc228 = loc(fused[#loc146, #loc145])
#loc229 = loc(fused[#loc147, #loc148])
#loc230 = loc(fused[#loc153, #loc154])
#loc231 = loc(fused[#loc152, #loc154])
#loc232 = loc(fused[#loc151, #loc155])
#loc233 = loc(fused[#loc156, #loc155])
#loc234 = loc(fused[#loc157, #loc158])
#loc235 = loc(fused[#loc159, #loc160])
#loc236 = loc(fused[#loc161, #loc158])
#loc237 = loc(fused[#loc170, #loc171])
#loc238 = loc(fused[#loc181, #loc182])
