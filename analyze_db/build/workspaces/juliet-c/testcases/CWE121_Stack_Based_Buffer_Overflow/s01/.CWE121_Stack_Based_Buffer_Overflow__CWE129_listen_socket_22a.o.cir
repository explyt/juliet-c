!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22_badGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc430)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc431)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc432)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc433)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc434)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc435)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc436)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc437)
  cir.func private @close(!s32i) -> !s32i loc(#loc438)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22_badSink(!s32i) loc(#loc439)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc441)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc442)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc444)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc445)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc446)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc447)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc448)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc35)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc446)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc37)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc37)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc447)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc44)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc45)
            %17 = cir.const #cir.int<6> : !s32i loc(#loc46)
            %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc47)
            cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc451)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc52)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc53)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc53)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc453)
              cir.if %63 {
                cir.break loc(#loc55)
              } loc(#loc454)
            } loc(#loc452)
            %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc455)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc58)
            %21 = cir.const #cir.int<16> : !u64i loc(#loc456)
            cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc457)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc63)
            %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc63)
            %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc458)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc66)
            %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc66)
            %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc459)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc70)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc70)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc71)
            %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc460)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc77)
              %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc462)
              %62 = cir.const #cir.int<16> : !u64i loc(#loc463)
              %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc463)
              %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc82)
              %65 = cir.const #cir.int<1> : !s32i loc(#loc83)
              %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc83)
              %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc464)
              cir.if %67 {
                cir.break loc(#loc85)
              } loc(#loc465)
            } loc(#loc461)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc88)
              %61 = cir.const #cir.int<5> : !s32i loc(#loc89)
              %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc90)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc91)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc91)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc467)
              cir.if %65 {
                cir.break loc(#loc93)
              } loc(#loc468)
            } loc(#loc466)
            %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc94)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc95)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc96)
            %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc97)
            cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc469)
            cir.scope {
              %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc102)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc103)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc103)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc471)
              cir.if %63 {
                cir.break loc(#loc105)
              } loc(#loc472)
            } loc(#loc470)
            %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc106)
            %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
            %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
            %40 = cir.const #cir.int<3> : !s32i loc(#loc108)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc108)
            %42 = cir.const #cir.int<4> : !u64i loc(#loc108)
            %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc108)
            %44 = cir.const #cir.int<2> : !s32i loc(#loc108)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc108)
            %46 = cir.binop(add, %43, %45) : !u64i loc(#loc108)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc109)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc109)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc473)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc110)
            %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc111)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc111)
            cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc474)
            cir.scope {
              %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc116)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc117)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc117)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc476)
              %64 = cir.ternary(%63, true {
                %65 = cir.const #true loc(#loc118)
                cir.yield %65 : !cir.bool loc(#loc118)
              }, false {
                %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc119)
                %66 = cir.const #cir.int<0> : !s32i loc(#loc120)
                %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc477)
                %68 = cir.ternary(%67, true {
                  %69 = cir.const #true loc(#loc118)
                  cir.yield %69 : !cir.bool loc(#loc118)
                }, false {
                  %69 = cir.const #false loc(#loc118)
                  cir.yield %69 : !cir.bool loc(#loc118)
                }) : (!cir.bool) -> !cir.bool loc(#loc118)
                cir.yield %68 : !cir.bool loc(#loc118)
              }) : (!cir.bool) -> !cir.bool loc(#loc118)
              cir.if %64 {
                cir.break loc(#loc122)
              } loc(#loc478)
            } loc(#loc475)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc123)
            %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc123)
            %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc124)
            %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc125)
            %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc125)
            cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc479)
            %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc126)
            %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc127)
            cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc480)
          } loc(#loc450)
          cir.yield loc(#loc41)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc130)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc130)
          cir.condition(%16) loc(#loc130)
        } loc(#loc449)
      } loc(#loc449)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc133)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc134)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc134)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc482)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc136)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc137)
        } loc(#loc483)
      } loc(#loc481)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc140)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc141)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc141)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc485)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc143)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc144)
        } loc(#loc486)
      } loc(#loc484)
    } loc(#loc443)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %4 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22_badGlobal : !cir.ptr<!s32i> loc(#loc430)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc487)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22_badSink(%5) : (!s32i) -> () loc(#loc148)
    cir.return loc(#loc22)
  } loc(#loc440)
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22_goodB2G1Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc488)
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22_goodB2G2Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc489)
  cir.global external dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22_goodG2BGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc490)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc492)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc157)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc493)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc159)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc494)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc161)
    cir.return loc(#loc156)
  } loc(#loc491)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22_goodB2G1Sink(!s32i) loc(#loc495)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc497)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc170)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc498)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc500)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc501)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc502)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc503)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc504)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc179)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc179)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc502)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc181)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc181)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc503)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc188)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc189)
            %17 = cir.const #cir.int<6> : !s32i loc(#loc190)
            %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc191)
            cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc507)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc196)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc197)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc197)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc509)
              cir.if %63 {
                cir.break loc(#loc199)
              } loc(#loc510)
            } loc(#loc508)
            %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc511)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc202)
            %21 = cir.const #cir.int<16> : !u64i loc(#loc512)
            cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc513)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc207)
            %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc207)
            %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc514)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc209)
            %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc209)
            %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc515)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc211)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc211)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc212)
            %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc516)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc217)
              %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc518)
              %62 = cir.const #cir.int<16> : !u64i loc(#loc519)
              %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc519)
              %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc222)
              %65 = cir.const #cir.int<1> : !s32i loc(#loc223)
              %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc223)
              %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc520)
              cir.if %67 {
                cir.break loc(#loc225)
              } loc(#loc521)
            } loc(#loc517)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc228)
              %61 = cir.const #cir.int<5> : !s32i loc(#loc229)
              %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc230)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc231)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc231)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc523)
              cir.if %65 {
                cir.break loc(#loc233)
              } loc(#loc524)
            } loc(#loc522)
            %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc234)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc235)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc236)
            %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc237)
            cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc525)
            cir.scope {
              %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc242)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc243)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc243)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc527)
              cir.if %63 {
                cir.break loc(#loc245)
              } loc(#loc528)
            } loc(#loc526)
            %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc246)
            %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc247)
            %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc247)
            %40 = cir.const #cir.int<3> : !s32i loc(#loc248)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc248)
            %42 = cir.const #cir.int<4> : !u64i loc(#loc248)
            %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc248)
            %44 = cir.const #cir.int<2> : !s32i loc(#loc248)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc248)
            %46 = cir.binop(add, %43, %45) : !u64i loc(#loc248)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc249)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc249)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc529)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc250)
            %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc251)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc251)
            cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc530)
            cir.scope {
              %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc256)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc257)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc257)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc532)
              %64 = cir.ternary(%63, true {
                %65 = cir.const #true loc(#loc258)
                cir.yield %65 : !cir.bool loc(#loc258)
              }, false {
                %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc259)
                %66 = cir.const #cir.int<0> : !s32i loc(#loc260)
                %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc533)
                %68 = cir.ternary(%67, true {
                  %69 = cir.const #true loc(#loc258)
                  cir.yield %69 : !cir.bool loc(#loc258)
                }, false {
                  %69 = cir.const #false loc(#loc258)
                  cir.yield %69 : !cir.bool loc(#loc258)
                }) : (!cir.bool) -> !cir.bool loc(#loc258)
                cir.yield %68 : !cir.bool loc(#loc258)
              }) : (!cir.bool) -> !cir.bool loc(#loc258)
              cir.if %64 {
                cir.break loc(#loc262)
              } loc(#loc534)
            } loc(#loc531)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc263)
            %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc263)
            %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc264)
            %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc265)
            %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc265)
            cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc535)
            %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc266)
            %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc267)
            cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc536)
          } loc(#loc506)
          cir.yield loc(#loc185)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc270)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc270)
          cir.condition(%16) loc(#loc270)
        } loc(#loc505)
      } loc(#loc505)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc273)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc274)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc274)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc538)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc276)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc277)
        } loc(#loc539)
      } loc(#loc537)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc280)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc281)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc281)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc541)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc283)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc284)
        } loc(#loc542)
      } loc(#loc540)
    } loc(#loc499)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc285)
    %4 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22_goodB2G1Global : !cir.ptr<!s32i> loc(#loc488)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc543)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc287)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22_goodB2G1Sink(%5) : (!s32i) -> () loc(#loc288)
    cir.return loc(#loc166)
  } loc(#loc496)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22_goodB2G2Sink(!s32i) loc(#loc544)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc546)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc295)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc296)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc547)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc549)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc550)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc551)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc552)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc553)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc305)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc305)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc551)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc307)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc307)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc552)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc314)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc315)
            %17 = cir.const #cir.int<6> : !s32i loc(#loc316)
            %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc317)
            cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc556)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc322)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc323)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc323)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc558)
              cir.if %63 {
                cir.break loc(#loc325)
              } loc(#loc559)
            } loc(#loc557)
            %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc560)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc328)
            %21 = cir.const #cir.int<16> : !u64i loc(#loc561)
            cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc562)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc333)
            %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc333)
            %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc563)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc335)
            %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc335)
            %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc67)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc68)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc564)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc337)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc337)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc338)
            %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc565)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc343)
              %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc567)
              %62 = cir.const #cir.int<16> : !u64i loc(#loc568)
              %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc568)
              %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc348)
              %65 = cir.const #cir.int<1> : !s32i loc(#loc349)
              %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc349)
              %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc569)
              cir.if %67 {
                cir.break loc(#loc351)
              } loc(#loc570)
            } loc(#loc566)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc354)
              %61 = cir.const #cir.int<5> : !s32i loc(#loc355)
              %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc356)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc357)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc357)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc572)
              cir.if %65 {
                cir.break loc(#loc359)
              } loc(#loc573)
            } loc(#loc571)
            %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc360)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc361)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc362)
            %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc363)
            cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc574)
            cir.scope {
              %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc368)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc369)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc369)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc576)
              cir.if %63 {
                cir.break loc(#loc371)
              } loc(#loc577)
            } loc(#loc575)
            %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc372)
            %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc373)
            %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc373)
            %40 = cir.const #cir.int<3> : !s32i loc(#loc374)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc374)
            %42 = cir.const #cir.int<4> : !u64i loc(#loc374)
            %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc374)
            %44 = cir.const #cir.int<2> : !s32i loc(#loc374)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc374)
            %46 = cir.binop(add, %43, %45) : !u64i loc(#loc374)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc375)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc375)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc578)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc376)
            %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc377)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc377)
            cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc579)
            cir.scope {
              %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc382)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc383)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc383)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc581)
              %64 = cir.ternary(%63, true {
                %65 = cir.const #true loc(#loc384)
                cir.yield %65 : !cir.bool loc(#loc384)
              }, false {
                %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc385)
                %66 = cir.const #cir.int<0> : !s32i loc(#loc386)
                %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc582)
                %68 = cir.ternary(%67, true {
                  %69 = cir.const #true loc(#loc384)
                  cir.yield %69 : !cir.bool loc(#loc384)
                }, false {
                  %69 = cir.const #false loc(#loc384)
                  cir.yield %69 : !cir.bool loc(#loc384)
                }) : (!cir.bool) -> !cir.bool loc(#loc384)
                cir.yield %68 : !cir.bool loc(#loc384)
              }) : (!cir.bool) -> !cir.bool loc(#loc384)
              cir.if %64 {
                cir.break loc(#loc388)
              } loc(#loc583)
            } loc(#loc580)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc389)
            %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc389)
            %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc390)
            %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc391)
            %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc391)
            cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc584)
            %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc392)
            %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc393)
            cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc585)
          } loc(#loc555)
          cir.yield loc(#loc311)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc396)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc396)
          cir.condition(%16) loc(#loc396)
        } loc(#loc554)
      } loc(#loc554)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc399)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc400)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc400)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc587)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc402)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc403)
        } loc(#loc588)
      } loc(#loc586)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc406)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc407)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc407)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc590)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc409)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc410)
        } loc(#loc591)
      } loc(#loc589)
    } loc(#loc548)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc411)
    %4 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22_goodB2G2Global : !cir.ptr<!s32i> loc(#loc489)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc592)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc413)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22_goodB2G2Sink(%5) : (!s32i) -> () loc(#loc414)
    cir.return loc(#loc292)
  } loc(#loc545)
  cir.func private @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22_goodG2BSink(!s32i) loc(#loc593)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc595)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc421)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc422)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc596)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc424)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc597)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc426)
    %5 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22_goodG2BGlobal : !cir.ptr<!s32i> loc(#loc490)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc598)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc428)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22_goodG2BSink(%6) : (!s32i) -> () loc(#loc429)
    cir.return loc(#loc418)
  } loc(#loc594)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":45:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":45:77)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":402:1)
#loc6 = loc("/usr/include/netinet/in.h":403:40)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc15 = loc("/usr/include/stdlib.h":105:1)
#loc16 = loc("/usr/include/stdlib.h":106:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":47:1)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":47:82)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":49:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":125:1)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":51:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":51:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":53:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":53:12)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":53:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":54:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":122:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":59:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":59:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":60:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":60:28)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":61:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":61:31)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":62:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":62:31)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":63:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":63:41)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":64:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":107:17)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":65:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":106:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":74:35)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":74:44)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":74:57)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":74:28)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":74:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":74:68)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":75:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":78:13)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":75:17)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":75:33)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":76:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":77:17)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":79:20)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":79:21)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":79:30)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":79:33)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":79:47)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":79:13)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":79:48)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":80:34)
#loc64 = loc("/usr/include/netinet/in.h":249:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":80:13)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":81:39)
#loc67 = loc("/usr/include/netinet/in.h":251:20)
#loc68 = loc("/usr/include/netinet/in.h":33:15)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":81:13)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":82:38)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":82:32)
#loc72 = loc("/usr/include/netinet/in.h":250:15)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":82:13)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":82:46)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":83:13)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":86:13)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":83:22)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":83:54)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":83:55)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":83:64)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":83:78)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":83:17)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":83:84)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":84:13)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":85:17)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":87:13)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":90:13)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":87:24)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":87:38)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":87:17)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":87:57)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":88:13)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":89:17)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":91:35)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":91:49)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":91:55)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":91:28)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":91:13)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":91:59)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":92:13)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":95:13)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":92:17)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":92:33)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":93:13)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":94:17)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":97:31)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":97:45)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":97:58)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":97:76)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":97:79)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":97:26)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":97:13)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":97:80)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":98:13)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":101:13)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":98:17)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":98:31)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":98:44)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":98:47)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":98:61)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":99:13)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":100:17)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":103:39)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":103:25)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":103:13)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":105:25)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":105:20)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":105:13)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":105:36)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":107:16)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":108:9)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":111:9)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":108:13)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":108:29)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":109:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":110:26)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":110:13)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":112:9)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":115:9)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":112:13)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":112:29)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":113:9)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":114:26)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":114:13)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":123:77)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":123:5)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":124:73)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":124:5)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":132:1)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":132:82)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":133:1)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":133:82)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":134:1)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":134:81)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":313:1)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":318:1)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":315:5)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":315:14)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":316:5)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":316:14)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":317:5)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":317:13)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":137:1)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":137:87)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":139:1)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":215:1)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":141:5)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":141:9)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":143:13)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":143:12)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":143:5)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":144:5)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":212:5)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":149:9)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":149:13)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":150:9)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":150:28)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":151:9)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":151:31)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":152:9)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":152:31)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":153:9)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":153:41)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":154:9)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":197:17)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":155:9)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":196:9)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":164:35)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":164:44)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":164:57)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":164:28)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":164:13)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":164:68)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":165:13)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":168:13)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":165:17)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":165:33)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":166:13)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":167:17)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":169:20)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":169:21)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":169:30)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":169:33)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":169:47)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":169:13)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":169:48)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":170:34)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":170:13)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":171:39)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":171:13)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":172:38)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":172:32)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":172:13)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":172:46)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":173:13)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":176:13)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":173:22)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":173:54)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":173:55)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":173:64)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":173:78)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":173:17)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":173:84)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":174:13)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":175:17)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":177:13)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":180:13)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":177:24)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":177:38)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":177:17)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":177:57)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":178:13)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":179:17)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":181:35)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":181:49)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":181:55)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":181:28)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":181:13)
#loc239 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":181:59)
#loc240 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":182:13)
#loc241 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":185:13)
#loc242 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":182:17)
#loc243 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":182:33)
#loc244 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":183:13)
#loc245 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":184:17)
#loc246 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":187:31)
#loc247 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":187:45)
#loc248 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":187:58)
#loc249 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":187:76)
#loc250 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":187:79)
#loc251 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":187:26)
#loc252 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":187:13)
#loc253 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":187:80)
#loc254 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":188:13)
#loc255 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":191:13)
#loc256 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":188:17)
#loc257 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":188:31)
#loc258 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":188:44)
#loc259 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":188:47)
#loc260 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":188:61)
#loc261 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":189:13)
#loc262 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":190:17)
#loc263 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":193:39)
#loc264 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":193:25)
#loc265 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":193:13)
#loc266 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":195:25)
#loc267 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":195:20)
#loc268 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":195:13)
#loc269 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":195:36)
#loc270 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":197:16)
#loc271 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":198:9)
#loc272 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":201:9)
#loc273 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":198:13)
#loc274 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":198:29)
#loc275 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":199:9)
#loc276 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":200:26)
#loc277 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":200:13)
#loc278 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":202:9)
#loc279 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":205:9)
#loc280 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":202:13)
#loc281 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":202:29)
#loc282 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":203:9)
#loc283 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":204:26)
#loc284 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":204:13)
#loc285 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":213:82)
#loc286 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":213:5)
#loc287 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":214:78)
#loc288 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":214:5)
#loc289 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":218:1)
#loc290 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":218:87)
#loc291 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":220:1)
#loc292 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":296:1)
#loc293 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":222:5)
#loc294 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":222:9)
#loc295 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":224:13)
#loc296 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":224:12)
#loc297 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":224:5)
#loc298 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":225:5)
#loc299 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":293:5)
#loc300 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":230:9)
#loc301 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":230:13)
#loc302 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":231:9)
#loc303 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":231:28)
#loc304 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":232:9)
#loc305 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":232:31)
#loc306 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":233:9)
#loc307 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":233:31)
#loc308 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":234:9)
#loc309 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":234:41)
#loc310 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":235:9)
#loc311 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":278:17)
#loc312 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":236:9)
#loc313 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":277:9)
#loc314 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":245:35)
#loc315 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":245:44)
#loc316 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":245:57)
#loc317 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":245:28)
#loc318 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":245:13)
#loc319 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":245:68)
#loc320 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":246:13)
#loc321 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":249:13)
#loc322 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":246:17)
#loc323 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":246:33)
#loc324 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":247:13)
#loc325 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":248:17)
#loc326 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":250:20)
#loc327 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":250:21)
#loc328 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":250:30)
#loc329 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":250:33)
#loc330 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":250:47)
#loc331 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":250:13)
#loc332 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":250:48)
#loc333 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":251:34)
#loc334 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":251:13)
#loc335 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":252:39)
#loc336 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":252:13)
#loc337 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":253:38)
#loc338 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":253:32)
#loc339 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":253:13)
#loc340 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":253:46)
#loc341 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":254:13)
#loc342 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":257:13)
#loc343 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":254:22)
#loc344 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":254:54)
#loc345 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":254:55)
#loc346 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":254:64)
#loc347 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":254:78)
#loc348 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":254:17)
#loc349 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":254:84)
#loc350 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":255:13)
#loc351 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":256:17)
#loc352 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":258:13)
#loc353 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":261:13)
#loc354 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":258:24)
#loc355 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":258:38)
#loc356 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":258:17)
#loc357 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":258:57)
#loc358 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":259:13)
#loc359 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":260:17)
#loc360 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":262:35)
#loc361 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":262:49)
#loc362 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":262:55)
#loc363 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":262:28)
#loc364 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":262:13)
#loc365 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":262:59)
#loc366 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":263:13)
#loc367 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":266:13)
#loc368 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":263:17)
#loc369 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":263:33)
#loc370 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":264:13)
#loc371 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":265:17)
#loc372 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":268:31)
#loc373 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":268:45)
#loc374 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":268:58)
#loc375 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":268:76)
#loc376 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":268:79)
#loc377 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":268:26)
#loc378 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":268:13)
#loc379 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":268:80)
#loc380 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":269:13)
#loc381 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":272:13)
#loc382 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":269:17)
#loc383 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":269:31)
#loc384 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":269:44)
#loc385 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":269:47)
#loc386 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":269:61)
#loc387 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":270:13)
#loc388 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":271:17)
#loc389 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":274:39)
#loc390 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":274:25)
#loc391 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":274:13)
#loc392 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":276:25)
#loc393 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":276:20)
#loc394 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":276:13)
#loc395 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":276:36)
#loc396 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":278:16)
#loc397 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":279:9)
#loc398 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":282:9)
#loc399 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":279:13)
#loc400 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":279:29)
#loc401 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":280:9)
#loc402 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":281:26)
#loc403 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":281:13)
#loc404 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":283:9)
#loc405 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":286:9)
#loc406 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":283:13)
#loc407 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":283:29)
#loc408 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":284:9)
#loc409 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":285:26)
#loc410 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":285:13)
#loc411 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":294:82)
#loc412 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":294:5)
#loc413 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":295:78)
#loc414 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":295:5)
#loc415 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":299:1)
#loc416 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":299:86)
#loc417 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":301:1)
#loc418 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":311:1)
#loc419 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":303:5)
#loc420 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":303:9)
#loc421 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":305:13)
#loc422 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":305:12)
#loc423 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":305:5)
#loc424 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":308:12)
#loc425 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":308:5)
#loc426 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":309:81)
#loc427 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":309:5)
#loc428 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":310:77)
#loc429 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_listen_socket_22a.c":310:5)
#loc430 = loc(fused[#loc1, #loc2])
#loc431 = loc(fused[#loc3, #loc4])
#loc432 = loc(fused[#loc5, #loc6])
#loc433 = loc(fused[#loc7, #loc8])
#loc434 = loc(fused[#loc9, #loc10])
#loc435 = loc(fused[#loc11, #loc12])
#loc436 = loc(fused[#loc13, #loc14])
#loc437 = loc(fused[#loc15, #loc16])
#loc438 = loc(fused[#loc17, #loc18])
#loc439 = loc(fused[#loc19, #loc20])
#loc440 = loc(fused[#loc21, #loc22])
#loc441 = loc(fused[#loc23, #loc24])
#loc442 = loc(fused[#loc27, #loc25])
#loc443 = loc(fused[#loc28, #loc29])
#loc444 = loc(fused[#loc30, #loc31])
#loc445 = loc(fused[#loc32, #loc33])
#loc446 = loc(fused[#loc34, #loc35])
#loc447 = loc(fused[#loc36, #loc37])
#loc448 = loc(fused[#loc38, #loc39])
#loc449 = loc(fused[#loc40, #loc41])
#loc450 = loc(fused[#loc42, #loc43])
#loc451 = loc(fused[#loc48, #loc49])
#loc452 = loc(fused[#loc50, #loc51])
#loc453 = loc(fused[#loc52, #loc53])
#loc454 = loc(fused[#loc54, #loc51])
#loc455 = loc(fused[#loc56, #loc57])
#loc456 = loc(fused[#loc59, #loc60])
#loc457 = loc(fused[#loc61, #loc62])
#loc458 = loc(fused[#loc65, #loc63])
#loc459 = loc(fused[#loc69, #loc66])
#loc460 = loc(fused[#loc73, #loc74])
#loc461 = loc(fused[#loc75, #loc76])
#loc462 = loc(fused[#loc78, #loc79])
#loc463 = loc(fused[#loc80, #loc81])
#loc464 = loc(fused[#loc82, #loc83])
#loc465 = loc(fused[#loc84, #loc76])
#loc466 = loc(fused[#loc86, #loc87])
#loc467 = loc(fused[#loc90, #loc91])
#loc468 = loc(fused[#loc92, #loc87])
#loc469 = loc(fused[#loc98, #loc99])
#loc470 = loc(fused[#loc100, #loc101])
#loc471 = loc(fused[#loc102, #loc103])
#loc472 = loc(fused[#loc104, #loc101])
#loc473 = loc(fused[#loc108, #loc109])
#loc474 = loc(fused[#loc112, #loc113])
#loc475 = loc(fused[#loc114, #loc115])
#loc476 = loc(fused[#loc116, #loc117])
#loc477 = loc(fused[#loc119, #loc120])
#loc478 = loc(fused[#loc121, #loc115])
#loc479 = loc(fused[#loc125, #loc123])
#loc480 = loc(fused[#loc128, #loc129])
#loc481 = loc(fused[#loc131, #loc132])
#loc482 = loc(fused[#loc133, #loc134])
#loc483 = loc(fused[#loc135, #loc132])
#loc484 = loc(fused[#loc138, #loc139])
#loc485 = loc(fused[#loc140, #loc141])
#loc486 = loc(fused[#loc142, #loc139])
#loc487 = loc(fused[#loc146, #loc145])
#loc488 = loc(fused[#loc149, #loc150])
#loc489 = loc(fused[#loc151, #loc152])
#loc490 = loc(fused[#loc153, #loc154])
#loc491 = loc(fused[#loc155, #loc156])
#loc492 = loc(fused[#loc157, #loc158])
#loc493 = loc(fused[#loc159, #loc160])
#loc494 = loc(fused[#loc161, #loc162])
#loc495 = loc(fused[#loc163, #loc164])
#loc496 = loc(fused[#loc165, #loc166])
#loc497 = loc(fused[#loc167, #loc168])
#loc498 = loc(fused[#loc171, #loc169])
#loc499 = loc(fused[#loc172, #loc173])
#loc500 = loc(fused[#loc174, #loc175])
#loc501 = loc(fused[#loc176, #loc177])
#loc502 = loc(fused[#loc178, #loc179])
#loc503 = loc(fused[#loc180, #loc181])
#loc504 = loc(fused[#loc182, #loc183])
#loc505 = loc(fused[#loc184, #loc185])
#loc506 = loc(fused[#loc186, #loc187])
#loc507 = loc(fused[#loc192, #loc193])
#loc508 = loc(fused[#loc194, #loc195])
#loc509 = loc(fused[#loc196, #loc197])
#loc510 = loc(fused[#loc198, #loc195])
#loc511 = loc(fused[#loc200, #loc201])
#loc512 = loc(fused[#loc203, #loc204])
#loc513 = loc(fused[#loc205, #loc206])
#loc514 = loc(fused[#loc208, #loc207])
#loc515 = loc(fused[#loc210, #loc209])
#loc516 = loc(fused[#loc213, #loc214])
#loc517 = loc(fused[#loc215, #loc216])
#loc518 = loc(fused[#loc218, #loc219])
#loc519 = loc(fused[#loc220, #loc221])
#loc520 = loc(fused[#loc222, #loc223])
#loc521 = loc(fused[#loc224, #loc216])
#loc522 = loc(fused[#loc226, #loc227])
#loc523 = loc(fused[#loc230, #loc231])
#loc524 = loc(fused[#loc232, #loc227])
#loc525 = loc(fused[#loc238, #loc239])
#loc526 = loc(fused[#loc240, #loc241])
#loc527 = loc(fused[#loc242, #loc243])
#loc528 = loc(fused[#loc244, #loc241])
#loc529 = loc(fused[#loc248, #loc249])
#loc530 = loc(fused[#loc252, #loc253])
#loc531 = loc(fused[#loc254, #loc255])
#loc532 = loc(fused[#loc256, #loc257])
#loc533 = loc(fused[#loc259, #loc260])
#loc534 = loc(fused[#loc261, #loc255])
#loc535 = loc(fused[#loc265, #loc263])
#loc536 = loc(fused[#loc268, #loc269])
#loc537 = loc(fused[#loc271, #loc272])
#loc538 = loc(fused[#loc273, #loc274])
#loc539 = loc(fused[#loc275, #loc272])
#loc540 = loc(fused[#loc278, #loc279])
#loc541 = loc(fused[#loc280, #loc281])
#loc542 = loc(fused[#loc282, #loc279])
#loc543 = loc(fused[#loc286, #loc285])
#loc544 = loc(fused[#loc289, #loc290])
#loc545 = loc(fused[#loc291, #loc292])
#loc546 = loc(fused[#loc293, #loc294])
#loc547 = loc(fused[#loc297, #loc295])
#loc548 = loc(fused[#loc298, #loc299])
#loc549 = loc(fused[#loc300, #loc301])
#loc550 = loc(fused[#loc302, #loc303])
#loc551 = loc(fused[#loc304, #loc305])
#loc552 = loc(fused[#loc306, #loc307])
#loc553 = loc(fused[#loc308, #loc309])
#loc554 = loc(fused[#loc310, #loc311])
#loc555 = loc(fused[#loc312, #loc313])
#loc556 = loc(fused[#loc318, #loc319])
#loc557 = loc(fused[#loc320, #loc321])
#loc558 = loc(fused[#loc322, #loc323])
#loc559 = loc(fused[#loc324, #loc321])
#loc560 = loc(fused[#loc326, #loc327])
#loc561 = loc(fused[#loc329, #loc330])
#loc562 = loc(fused[#loc331, #loc332])
#loc563 = loc(fused[#loc334, #loc333])
#loc564 = loc(fused[#loc336, #loc335])
#loc565 = loc(fused[#loc339, #loc340])
#loc566 = loc(fused[#loc341, #loc342])
#loc567 = loc(fused[#loc344, #loc345])
#loc568 = loc(fused[#loc346, #loc347])
#loc569 = loc(fused[#loc348, #loc349])
#loc570 = loc(fused[#loc350, #loc342])
#loc571 = loc(fused[#loc352, #loc353])
#loc572 = loc(fused[#loc356, #loc357])
#loc573 = loc(fused[#loc358, #loc353])
#loc574 = loc(fused[#loc364, #loc365])
#loc575 = loc(fused[#loc366, #loc367])
#loc576 = loc(fused[#loc368, #loc369])
#loc577 = loc(fused[#loc370, #loc367])
#loc578 = loc(fused[#loc374, #loc375])
#loc579 = loc(fused[#loc378, #loc379])
#loc580 = loc(fused[#loc380, #loc381])
#loc581 = loc(fused[#loc382, #loc383])
#loc582 = loc(fused[#loc385, #loc386])
#loc583 = loc(fused[#loc387, #loc381])
#loc584 = loc(fused[#loc391, #loc389])
#loc585 = loc(fused[#loc394, #loc395])
#loc586 = loc(fused[#loc397, #loc398])
#loc587 = loc(fused[#loc399, #loc400])
#loc588 = loc(fused[#loc401, #loc398])
#loc589 = loc(fused[#loc404, #loc405])
#loc590 = loc(fused[#loc406, #loc407])
#loc591 = loc(fused[#loc408, #loc405])
#loc592 = loc(fused[#loc412, #loc411])
#loc593 = loc(fused[#loc415, #loc416])
#loc594 = loc(fused[#loc417, #loc418])
#loc595 = loc(fused[#loc419, #loc420])
#loc596 = loc(fused[#loc423, #loc421])
#loc597 = loc(fused[#loc425, #loc424])
#loc598 = loc(fused[#loc427, #loc426])
