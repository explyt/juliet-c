!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc109 = loc("CWE367_TOC_TOU__access_01.c":130:10)
#loc110 = loc("CWE367_TOC_TOU__access_01.c":130:14)
#loc111 = loc("CWE367_TOC_TOU__access_01.c":130:20)
#loc112 = loc("CWE367_TOC_TOU__access_01.c":130:32)
#loc234 = loc(fused[#loc109, #loc110])
#loc235 = loc(fused[#loc111, #loc112])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc193)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc194)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc196)
  cir.func private @access(!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc197)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc198)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc199)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc200)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc201)
  cir.func no_proto @CWE367_TOC_TOU__access_01_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc204)
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc205)
      %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc204)
      cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc204)
      %3 = cir.const #cir.int<1> : !s32i loc(#loc28)
      %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc29)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc205)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
        %9 = cir.const #cir.int<100> : !s32i loc(#loc33)
        %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc194)
        %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
        %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc35)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc36)
        %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc207)
        cir.if %15 {
          %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc38)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc39)
          %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc39)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc40)
          %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
          %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc41)
          cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc209)
        } loc(#loc208)
      } loc(#loc206)
      cir.scope {
        %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc44)
        %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
        %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc44)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc46)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc46)
        %13 = cir.cmp(gt, %10, %12) : !u64i, !cir.bool loc(#loc211)
        cir.if %13 {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc48)
          %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc48)
          %16 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc49)
          %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
          %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc49)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc51)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc51)
          %21 = cir.binop(sub, %18, %20) : !u64i loc(#loc213)
          %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc52)
          %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc52)
          cir.store %15, %23 : !s8i, !cir.ptr<!s8i> loc(#loc214)
        } loc(#loc212)
      } loc(#loc210)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
        %9 = cir.const #cir.int<2> : !s32i loc(#loc56)
        %10 = cir.call @access(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc57)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc58)
        %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc59)
        %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc216)
        cir.if %13 {
          %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc61)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc62)
          cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc61)
        } loc(#loc217)
      } loc(#loc215)
      %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc64)
      %7 = cir.call @open(%5, %6) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc65)
      cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc218)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc70)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc71)
        %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc72)
        %11 = cir.cmp(eq, %8, %10) : !s32i, !cir.bool loc(#loc220)
        cir.if %11 {
          %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc74)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc75)
          cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc74)
        } loc(#loc221)
      } loc(#loc219)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc78)
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
        %12 = cir.const #cir.int<11> : !u64i loc(#loc223)
        %13 = cir.call @write(%8, %11, %12) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc81)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc82)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc83)
        %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc83)
        %17 = cir.cmp(eq, %13, %16) : !s64i, !cir.bool loc(#loc224)
        cir.if %17 {
          %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc85)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc86)
          cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc85)
        } loc(#loc225)
      } loc(#loc222)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc89)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc90)
        %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc91)
        %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc227)
        cir.if %11 {
          %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc93)
          %13 = cir.call @close(%12) : (!s32i) -> !s32i loc(#loc94)
        } loc(#loc228)
      } loc(#loc226)
    } loc(#loc203)
    cir.return loc(#loc22)
  } loc(#loc202)
  cir.func no_proto @CWE367_TOC_TOU__access_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc230)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc97)
    cir.return loc(#loc96)
  } loc(#loc229)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc231)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc232)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc106)
  cir.func @main(%arg0: !s32i loc(fused[#loc109, #loc110]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc111, #loc112])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc234)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc235)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc108)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc113)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc114)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc115)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc115)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc116)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc103)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    %8 = cir.get_global @CWE367_TOC_TOU__access_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc236)
    cir.call @CWE367_TOC_TOU__access_01_good() : () -> () loc(#loc118)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc104)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc105)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    %13 = cir.get_global @CWE367_TOC_TOU__access_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc237)
    cir.call @CWE367_TOC_TOU__access_01_bad() : () -> () loc(#loc122)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc106)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc125)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc238)
    cir.return %17 : !s32i loc(#loc238)
  } loc(#loc233)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc127)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc241)
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc242)
      %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc241)
      cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc241)
      %3 = cir.const #cir.int<1> : !s32i loc(#loc135)
      %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc136)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc242)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc139)
        %9 = cir.const #cir.int<100> : !s32i loc(#loc140)
        %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc194)
        %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc141)
        %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc142)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc143)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc143)
        %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc244)
        cir.if %15 {
          %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc145)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc145)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc146)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc147)
          %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc147)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc148)
          %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc149)
          %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc149)
          cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc246)
        } loc(#loc245)
      } loc(#loc243)
      cir.scope {
        %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc152)
        %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc153)
        %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc152)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc154)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc154)
        %13 = cir.cmp(gt, %10, %12) : !u64i, !cir.bool loc(#loc248)
        cir.if %13 {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc156)
          %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc156)
          %16 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc157)
          %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc158)
          %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc157)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc159)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc159)
          %21 = cir.binop(sub, %18, %20) : !u64i loc(#loc250)
          %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc160)
          %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc160)
          cir.store %15, %23 : !s8i, !cir.ptr<!s8i> loc(#loc251)
        } loc(#loc249)
      } loc(#loc247)
      %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc161)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc162)
      %7 = cir.call @open(%5, %6) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc163)
      cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc252)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc168)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc169)
        %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc170)
        %11 = cir.cmp(eq, %8, %10) : !s32i, !cir.bool loc(#loc254)
        cir.if %11 {
          %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc172)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc173)
          cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc172)
        } loc(#loc255)
      } loc(#loc253)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc176)
        %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc127)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc127)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc127)
        %12 = cir.const #cir.int<12> : !u64i loc(#loc257)
        %13 = cir.call @write(%8, %11, %12) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc179)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc180)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc181)
        %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc181)
        %17 = cir.cmp(eq, %13, %16) : !s64i, !cir.bool loc(#loc258)
        cir.if %17 {
          %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc183)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc184)
          cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc183)
        } loc(#loc259)
      } loc(#loc256)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc187)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc188)
        %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc189)
        %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc261)
        cir.if %11 {
          %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc191)
          %13 = cir.call @close(%12) : (!s32i) -> !s32i loc(#loc192)
        } loc(#loc262)
      } loc(#loc260)
    } loc(#loc240)
    cir.return loc(#loc129)
  } loc(#loc239)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__access_01.c":51:23)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/unistd.h":287:1)
#loc11 = loc("/usr/include/unistd.h":287:60)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__access_01.c":69:29)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__access_01.c":44:1)
#loc22 = loc("CWE367_TOC_TOU__access_01.c":78:1)
#loc23 = loc("CWE367_TOC_TOU__access_01.c":46:5)
#loc24 = loc("CWE367_TOC_TOU__access_01.c":77:5)
#loc25 = loc("CWE367_TOC_TOU__access_01.c":47:9)
#loc26 = loc("CWE367_TOC_TOU__access_01.c":47:30)
#loc27 = loc("CWE367_TOC_TOU__access_01.c":48:9)
#loc28 = loc("CWE367_TOC_TOU__access_01.c":48:25)
#loc29 = loc("CWE367_TOC_TOU__access_01.c":48:24)
#loc30 = loc("CWE367_TOC_TOU__access_01.c":49:9)
#loc31 = loc("CWE367_TOC_TOU__access_01.c":54:9)
#loc32 = loc("CWE367_TOC_TOU__access_01.c":49:19)
#loc33 = loc("CWE367_TOC_TOU__access_01.c":49:29)
#loc34 = loc("CWE367_TOC_TOU__access_01.c":49:34)
#loc35 = loc("CWE367_TOC_TOU__access_01.c":49:13)
#loc36 = loc("CWE367_TOC_TOU__access_01.c":49:44)
#loc37 = loc("CWE367_TOC_TOU__access_01.c":50:9)
#loc38 = loc("CWE367_TOC_TOU__access_01.c":51:13)
#loc39 = loc("CWE367_TOC_TOU__access_01.c":53:27)
#loc40 = loc("CWE367_TOC_TOU__access_01.c":53:22)
#loc41 = loc("CWE367_TOC_TOU__access_01.c":53:13)
#loc42 = loc("CWE367_TOC_TOU__access_01.c":55:9)
#loc43 = loc("CWE367_TOC_TOU__access_01.c":58:9)
#loc44 = loc("CWE367_TOC_TOU__access_01.c":55:13)
#loc45 = loc("CWE367_TOC_TOU__access_01.c":55:20)
#loc46 = loc("CWE367_TOC_TOU__access_01.c":55:32)
#loc47 = loc("CWE367_TOC_TOU__access_01.c":56:9)
#loc48 = loc("CWE367_TOC_TOU__access_01.c":57:44)
#loc49 = loc("CWE367_TOC_TOU__access_01.c":57:22)
#loc50 = loc("CWE367_TOC_TOU__access_01.c":57:29)
#loc51 = loc("CWE367_TOC_TOU__access_01.c":57:39)
#loc52 = loc("CWE367_TOC_TOU__access_01.c":57:13)
#loc53 = loc("CWE367_TOC_TOU__access_01.c":60:9)
#loc54 = loc("CWE367_TOC_TOU__access_01.c":63:9)
#loc55 = loc("CWE367_TOC_TOU__access_01.c":60:20)
#loc56 = loc("CWE367_TOC_TOU__access_01.c":60:30)
#loc57 = loc("CWE367_TOC_TOU__access_01.c":60:13)
#loc58 = loc("CWE367_TOC_TOU__access_01.c":60:40)
#loc59 = loc("CWE367_TOC_TOU__access_01.c":60:39)
#loc60 = loc("CWE367_TOC_TOU__access_01.c":61:9)
#loc61 = loc("CWE367_TOC_TOU__access_01.c":62:13)
#loc62 = loc("CWE367_TOC_TOU__access_01.c":62:18)
#loc63 = loc("CWE367_TOC_TOU__access_01.c":64:26)
#loc64 = loc("CWE367_TOC_TOU__access_01.c":64:36)
#loc65 = loc("CWE367_TOC_TOU__access_01.c":64:21)
#loc66 = loc("CWE367_TOC_TOU__access_01.c":64:9)
#loc67 = loc("CWE367_TOC_TOU__access_01.c":64:42)
#loc68 = loc("CWE367_TOC_TOU__access_01.c":65:9)
#loc69 = loc("CWE367_TOC_TOU__access_01.c":68:9)
#loc70 = loc("CWE367_TOC_TOU__access_01.c":65:13)
#loc71 = loc("CWE367_TOC_TOU__access_01.c":65:26)
#loc72 = loc("CWE367_TOC_TOU__access_01.c":65:25)
#loc73 = loc("CWE367_TOC_TOU__access_01.c":66:9)
#loc74 = loc("CWE367_TOC_TOU__access_01.c":67:13)
#loc75 = loc("CWE367_TOC_TOU__access_01.c":67:18)
#loc76 = loc("CWE367_TOC_TOU__access_01.c":69:9)
#loc77 = loc("CWE367_TOC_TOU__access_01.c":72:9)
#loc78 = loc("CWE367_TOC_TOU__access_01.c":69:19)
#loc79 = loc("CWE367_TOC_TOU__access_01.c":69:46)
#loc80 = loc("CWE367_TOC_TOU__access_01.c":69:68)
#loc81 = loc("CWE367_TOC_TOU__access_01.c":69:13)
#loc82 = loc("CWE367_TOC_TOU__access_01.c":69:75)
#loc83 = loc("CWE367_TOC_TOU__access_01.c":69:74)
#loc84 = loc("CWE367_TOC_TOU__access_01.c":70:9)
#loc85 = loc("CWE367_TOC_TOU__access_01.c":71:13)
#loc86 = loc("CWE367_TOC_TOU__access_01.c":71:18)
#loc87 = loc("CWE367_TOC_TOU__access_01.c":73:9)
#loc88 = loc("CWE367_TOC_TOU__access_01.c":76:9)
#loc89 = loc("CWE367_TOC_TOU__access_01.c":73:13)
#loc90 = loc("CWE367_TOC_TOU__access_01.c":73:26)
#loc91 = loc("CWE367_TOC_TOU__access_01.c":73:25)
#loc92 = loc("CWE367_TOC_TOU__access_01.c":74:9)
#loc93 = loc("CWE367_TOC_TOU__access_01.c":75:19)
#loc94 = loc("CWE367_TOC_TOU__access_01.c":75:13)
#loc95 = loc("CWE367_TOC_TOU__access_01.c":116:1)
#loc96 = loc("CWE367_TOC_TOU__access_01.c":119:1)
#loc97 = loc("CWE367_TOC_TOU__access_01.c":118:5)
#loc98 = loc("CWE367_TOC_TOU__access_01.c":118:11)
#loc99 = loc("/usr/include/stdlib.h":575:1)
#loc100 = loc("/usr/include/stdlib.h":575:41)
#loc101 = loc("/usr/include/time.h":76:1)
#loc102 = loc("/usr/include/time.h":76:38)
#loc103 = loc("CWE367_TOC_TOU__access_01.c":135:15)
#loc104 = loc("CWE367_TOC_TOU__access_01.c":137:15)
#loc105 = loc("CWE367_TOC_TOU__access_01.c":140:15)
#loc106 = loc("CWE367_TOC_TOU__access_01.c":142:15)
#loc107 = loc("CWE367_TOC_TOU__access_01.c":130:1)
#loc108 = loc("CWE367_TOC_TOU__access_01.c":145:1)
#loc113 = loc("CWE367_TOC_TOU__access_01.c":131:1)
#loc114 = loc("CWE367_TOC_TOU__access_01.c":133:27)
#loc115 = loc("CWE367_TOC_TOU__access_01.c":133:22)
#loc116 = loc("CWE367_TOC_TOU__access_01.c":133:5)
#loc117 = loc("CWE367_TOC_TOU__access_01.c":135:5)
#loc118 = loc("CWE367_TOC_TOU__access_01.c":136:5)
#loc119 = loc("CWE367_TOC_TOU__access_01.c":136:36)
#loc120 = loc("CWE367_TOC_TOU__access_01.c":137:5)
#loc121 = loc("CWE367_TOC_TOU__access_01.c":140:5)
#loc122 = loc("CWE367_TOC_TOU__access_01.c":141:5)
#loc123 = loc("CWE367_TOC_TOU__access_01.c":141:35)
#loc124 = loc("CWE367_TOC_TOU__access_01.c":142:5)
#loc125 = loc("CWE367_TOC_TOU__access_01.c":144:12)
#loc126 = loc("CWE367_TOC_TOU__access_01.c":144:5)
#loc127 = loc("CWE367_TOC_TOU__access_01.c":105:29)
#loc128 = loc("CWE367_TOC_TOU__access_01.c":84:1)
#loc129 = loc("CWE367_TOC_TOU__access_01.c":114:1)
#loc130 = loc("CWE367_TOC_TOU__access_01.c":86:5)
#loc131 = loc("CWE367_TOC_TOU__access_01.c":113:5)
#loc132 = loc("CWE367_TOC_TOU__access_01.c":87:9)
#loc133 = loc("CWE367_TOC_TOU__access_01.c":87:30)
#loc134 = loc("CWE367_TOC_TOU__access_01.c":88:9)
#loc135 = loc("CWE367_TOC_TOU__access_01.c":88:25)
#loc136 = loc("CWE367_TOC_TOU__access_01.c":88:24)
#loc137 = loc("CWE367_TOC_TOU__access_01.c":89:9)
#loc138 = loc("CWE367_TOC_TOU__access_01.c":94:9)
#loc139 = loc("CWE367_TOC_TOU__access_01.c":89:19)
#loc140 = loc("CWE367_TOC_TOU__access_01.c":89:29)
#loc141 = loc("CWE367_TOC_TOU__access_01.c":89:34)
#loc142 = loc("CWE367_TOC_TOU__access_01.c":89:13)
#loc143 = loc("CWE367_TOC_TOU__access_01.c":89:44)
#loc144 = loc("CWE367_TOC_TOU__access_01.c":90:9)
#loc145 = loc("CWE367_TOC_TOU__access_01.c":91:23)
#loc146 = loc("CWE367_TOC_TOU__access_01.c":91:13)
#loc147 = loc("CWE367_TOC_TOU__access_01.c":93:27)
#loc148 = loc("CWE367_TOC_TOU__access_01.c":93:22)
#loc149 = loc("CWE367_TOC_TOU__access_01.c":93:13)
#loc150 = loc("CWE367_TOC_TOU__access_01.c":95:9)
#loc151 = loc("CWE367_TOC_TOU__access_01.c":98:9)
#loc152 = loc("CWE367_TOC_TOU__access_01.c":95:13)
#loc153 = loc("CWE367_TOC_TOU__access_01.c":95:20)
#loc154 = loc("CWE367_TOC_TOU__access_01.c":95:32)
#loc155 = loc("CWE367_TOC_TOU__access_01.c":96:9)
#loc156 = loc("CWE367_TOC_TOU__access_01.c":97:44)
#loc157 = loc("CWE367_TOC_TOU__access_01.c":97:22)
#loc158 = loc("CWE367_TOC_TOU__access_01.c":97:29)
#loc159 = loc("CWE367_TOC_TOU__access_01.c":97:39)
#loc160 = loc("CWE367_TOC_TOU__access_01.c":97:13)
#loc161 = loc("CWE367_TOC_TOU__access_01.c":100:26)
#loc162 = loc("CWE367_TOC_TOU__access_01.c":100:36)
#loc163 = loc("CWE367_TOC_TOU__access_01.c":100:21)
#loc164 = loc("CWE367_TOC_TOU__access_01.c":100:9)
#loc165 = loc("CWE367_TOC_TOU__access_01.c":100:42)
#loc166 = loc("CWE367_TOC_TOU__access_01.c":101:9)
#loc167 = loc("CWE367_TOC_TOU__access_01.c":104:9)
#loc168 = loc("CWE367_TOC_TOU__access_01.c":101:13)
#loc169 = loc("CWE367_TOC_TOU__access_01.c":101:26)
#loc170 = loc("CWE367_TOC_TOU__access_01.c":101:25)
#loc171 = loc("CWE367_TOC_TOU__access_01.c":102:9)
#loc172 = loc("CWE367_TOC_TOU__access_01.c":103:13)
#loc173 = loc("CWE367_TOC_TOU__access_01.c":103:18)
#loc174 = loc("CWE367_TOC_TOU__access_01.c":105:9)
#loc175 = loc("CWE367_TOC_TOU__access_01.c":108:9)
#loc176 = loc("CWE367_TOC_TOU__access_01.c":105:19)
#loc177 = loc("CWE367_TOC_TOU__access_01.c":105:47)
#loc178 = loc("CWE367_TOC_TOU__access_01.c":105:70)
#loc179 = loc("CWE367_TOC_TOU__access_01.c":105:13)
#loc180 = loc("CWE367_TOC_TOU__access_01.c":105:77)
#loc181 = loc("CWE367_TOC_TOU__access_01.c":105:76)
#loc182 = loc("CWE367_TOC_TOU__access_01.c":106:9)
#loc183 = loc("CWE367_TOC_TOU__access_01.c":107:13)
#loc184 = loc("CWE367_TOC_TOU__access_01.c":107:18)
#loc185 = loc("CWE367_TOC_TOU__access_01.c":109:9)
#loc186 = loc("CWE367_TOC_TOU__access_01.c":112:9)
#loc187 = loc("CWE367_TOC_TOU__access_01.c":109:13)
#loc188 = loc("CWE367_TOC_TOU__access_01.c":109:26)
#loc189 = loc("CWE367_TOC_TOU__access_01.c":109:25)
#loc190 = loc("CWE367_TOC_TOU__access_01.c":110:9)
#loc191 = loc("CWE367_TOC_TOU__access_01.c":111:19)
#loc192 = loc("CWE367_TOC_TOU__access_01.c":111:13)
#loc193 = loc(fused[#loc1, #loc2])
#loc194 = loc(fused[#loc3, #loc4])
#loc195 = loc(fused[#loc5, #loc6])
#loc196 = loc(fused[#loc8, #loc9])
#loc197 = loc(fused[#loc10, #loc11])
#loc198 = loc(fused[#loc12, #loc13])
#loc199 = loc(fused[#loc14, #loc15])
#loc200 = loc(fused[#loc16, #loc17])
#loc201 = loc(fused[#loc19, #loc20])
#loc202 = loc(fused[#loc21, #loc22])
#loc203 = loc(fused[#loc23, #loc24])
#loc204 = loc(fused[#loc25, #loc26])
#loc205 = loc(fused[#loc27, #loc28])
#loc206 = loc(fused[#loc30, #loc31])
#loc207 = loc(fused[#loc35, #loc36])
#loc208 = loc(fused[#loc37, #loc31])
#loc209 = loc(fused[#loc41, #loc39])
#loc210 = loc(fused[#loc42, #loc43])
#loc211 = loc(fused[#loc44, #loc46])
#loc212 = loc(fused[#loc47, #loc43])
#loc213 = loc(fused[#loc49, #loc51])
#loc214 = loc(fused[#loc52, #loc48])
#loc215 = loc(fused[#loc53, #loc54])
#loc216 = loc(fused[#loc57, #loc58])
#loc217 = loc(fused[#loc60, #loc54])
#loc218 = loc(fused[#loc66, #loc67])
#loc219 = loc(fused[#loc68, #loc69])
#loc220 = loc(fused[#loc70, #loc71])
#loc221 = loc(fused[#loc73, #loc69])
#loc222 = loc(fused[#loc76, #loc77])
#loc223 = loc(fused[#loc79, #loc80])
#loc224 = loc(fused[#loc81, #loc82])
#loc225 = loc(fused[#loc84, #loc77])
#loc226 = loc(fused[#loc87, #loc88])
#loc227 = loc(fused[#loc89, #loc90])
#loc228 = loc(fused[#loc92, #loc88])
#loc229 = loc(fused[#loc95, #loc96])
#loc230 = loc(fused[#loc97, #loc98])
#loc231 = loc(fused[#loc99, #loc100])
#loc232 = loc(fused[#loc101, #loc102])
#loc233 = loc(fused[#loc107, #loc108])
#loc236 = loc(fused[#loc118, #loc119])
#loc237 = loc(fused[#loc122, #loc123])
#loc238 = loc(fused[#loc126, #loc125])
#loc239 = loc(fused[#loc128, #loc129])
#loc240 = loc(fused[#loc130, #loc131])
#loc241 = loc(fused[#loc132, #loc133])
#loc242 = loc(fused[#loc134, #loc135])
#loc243 = loc(fused[#loc137, #loc138])
#loc244 = loc(fused[#loc142, #loc143])
#loc245 = loc(fused[#loc144, #loc138])
#loc246 = loc(fused[#loc149, #loc147])
#loc247 = loc(fused[#loc150, #loc151])
#loc248 = loc(fused[#loc152, #loc154])
#loc249 = loc(fused[#loc155, #loc151])
#loc250 = loc(fused[#loc157, #loc159])
#loc251 = loc(fused[#loc160, #loc156])
#loc252 = loc(fused[#loc164, #loc165])
#loc253 = loc(fused[#loc166, #loc167])
#loc254 = loc(fused[#loc168, #loc169])
#loc255 = loc(fused[#loc171, #loc167])
#loc256 = loc(fused[#loc174, #loc175])
#loc257 = loc(fused[#loc177, #loc178])
#loc258 = loc(fused[#loc179, #loc180])
#loc259 = loc(fused[#loc182, #loc175])
#loc260 = loc(fused[#loc185, #loc186])
#loc261 = loc(fused[#loc187, #loc188])
#loc262 = loc(fused[#loc190, #loc186])
