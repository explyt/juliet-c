!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc57 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":67:48)
#loc83 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":84:48)
#true = #cir.bool<true> : !cir.bool
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"intOne == 5\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc92)
    cir.br ^bb1 loc(#loc93)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc94)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc10)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc10)
    cir.brcond %3 ^bb2, ^bb9 loc(#loc95)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc96)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc7)
    cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc92)
    cir.br ^bb4 loc(#loc97)
  ^bb4:  // pred: ^bb3
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc18)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
    %8 = cir.cmp(ne, %5, %7) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc98)
    %9 = cir.cast(bool_to_int, %8 : !cir.bool), !s32i loc(#loc98)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc19)
    %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %13 = cir.const #cir.int<5> : !s32i loc(#loc22)
    %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc99)
    %15 = cir.cast(bool_to_int, %14 : !cir.bool), !s32i loc(#loc99)
    %16 = cir.binop(and, %9, %15) : !s32i loc(#loc100)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc25)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc101)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc3)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    cir.br ^bb6 loc(#loc16)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc16)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc14)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc9)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc9)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc5)
  } loc(#loc91)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_08_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc103)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc104)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    cir.return loc(#loc29)
  } loc(#loc102)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc35)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc36)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc106)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    cir.return %2 : !s32i loc(#loc106)
  } loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc38)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc108)
    cir.br ^bb1 loc(#loc109)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc110)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc45)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc45)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc111)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc38)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    cir.br ^bb18 loc(#loc48)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc112)
  ^bb4:  // pred: ^bb3
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
    cir.store %6, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc108)
    cir.br ^bb5 loc(#loc113)
  ^bb5:  // pred: ^bb4
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
    %10 = cir.cmp(ne, %7, %9) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc114)
    cir.brcond %10 ^bb6, ^bb11 loc(#loc57)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
    %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    %14 = cir.const #cir.int<5> : !s32i loc(#loc60)
    %15 = cir.cmp(eq, %13, %14) : !s32i, !cir.bool loc(#loc115)
    cir.brcond %15 ^bb7, ^bb8 loc(#loc57)
  ^bb7:  // pred: ^bb6
    %16 = cir.const #true loc(#loc57)
    cir.br ^bb9(%16 : !cir.bool) loc(#loc57)
  ^bb8:  // pred: ^bb6
    %17 = cir.const #false loc(#loc57)
    cir.br ^bb9(%17 : !cir.bool) loc(#loc57)
  ^bb9(%18: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":67:48)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc57)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12(%18 : !cir.bool) loc(#loc57)
  ^bb11:  // pred: ^bb5
    %19 = cir.const #false loc(#loc57)
    cir.br ^bb12(%19 : !cir.bool) loc(#loc57)
  ^bb12(%20: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":67:48)):  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc57)
  ^bb13:  // pred: ^bb12
    cir.brcond %20 ^bb14, ^bb15 loc(#loc116)
  ^bb14:  // pred: ^bb13
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc62)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    cir.br ^bb15 loc(#loc54)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc54)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc52)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc44)
  ^bb18:  // 2 preds: ^bb2, ^bb17
    cir.br ^bb19 loc(#loc44)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc40)
  } loc(#loc107)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc65)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc66)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    cir.return %2 : !s32i loc(#loc118)
  } loc(#loc117)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc120)
    cir.br ^bb1 loc(#loc121)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc122)
    %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc74)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc74)
    cir.brcond %3 ^bb2, ^bb17 loc(#loc123)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc124)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
    cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc120)
    cir.br ^bb4 loc(#loc125)
  ^bb4:  // pred: ^bb3
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc82)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
    %8 = cir.cmp(ne, %5, %7) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc126)
    cir.brcond %8 ^bb5, ^bb10 loc(#loc83)
  ^bb5:  // pred: ^bb4
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
    %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc20)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc86)
    %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc127)
    cir.brcond %13 ^bb6, ^bb7 loc(#loc83)
  ^bb6:  // pred: ^bb5
    %14 = cir.const #true loc(#loc83)
    cir.br ^bb8(%14 : !cir.bool) loc(#loc83)
  ^bb7:  // pred: ^bb5
    %15 = cir.const #false loc(#loc83)
    cir.br ^bb8(%15 : !cir.bool) loc(#loc83)
  ^bb8(%16: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":84:48)):  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc83)
  ^bb9:  // pred: ^bb8
    cir.br ^bb11(%16 : !cir.bool) loc(#loc83)
  ^bb10:  // pred: ^bb4
    %17 = cir.const #false loc(#loc83)
    cir.br ^bb11(%17 : !cir.bool) loc(#loc83)
  ^bb11(%18: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":84:48)):  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc83)
  ^bb12:  // pred: ^bb11
    cir.brcond %18 ^bb13, ^bb14 loc(#loc128)
  ^bb13:  // pred: ^bb12
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc88)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    cir.br ^bb14 loc(#loc80)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc80)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc78)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc73)
  ^bb17:  // 2 preds: ^bb1, ^bb16
    cir.br ^bb18 loc(#loc73)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc69)
  } loc(#loc119)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_08.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":43:27)
#loc4 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":33:1)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":47:1)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":38:13)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":38:51)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":35:5)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":46:5)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":35:8)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":35:26)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":36:5)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":37:9)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":45:9)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":41:13)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":44:13)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":41:18)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":41:42)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":41:51)
#loc20 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":41:73)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":41:83)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":41:17)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":41:84)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":41:48)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":42:13)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":43:17)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":92:1)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":96:1)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":94:5)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":94:11)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":95:5)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":95:11)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":21:1)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":24:1)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":23:12)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":23:5)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":59:19)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":54:1)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":73:1)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":64:13)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":64:51)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":56:5)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":72:5)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":56:8)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":56:27)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":57:5)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":60:5)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":62:5)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":59:9)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":63:9)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":71:9)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":67:13)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":70:13)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":67:18)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":67:42)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":67:52)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":67:74)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":67:84)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":68:13)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":69:27)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":69:17)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":26:1)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":29:1)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":28:12)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":28:5)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":76:1)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":90:1)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":81:13)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":81:51)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":78:5)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":89:5)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":78:8)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":78:26)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":79:5)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":80:9)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":88:9)
#loc79 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":84:13)
#loc80 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":87:13)
#loc81 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":84:18)
#loc82 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":84:42)
#loc84 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":84:52)
#loc85 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":84:74)
#loc86 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":84:84)
#loc87 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":85:13)
#loc88 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":86:27)
#loc89 = loc("CWE476_NULL_Pointer_Dereference__binary_if_08.c":86:17)
#loc90 = loc(fused[#loc1, #loc2])
#loc91 = loc(fused[#loc4, #loc5])
#loc92 = loc(fused[#loc6, #loc7])
#loc93 = loc(fused[#loc8, #loc9])
#loc94 = loc(fused[#loc10, #loc11])
#loc95 = loc(fused[#loc12, #loc9])
#loc96 = loc(fused[#loc13, #loc14])
#loc97 = loc(fused[#loc15, #loc16])
#loc98 = loc(fused[#loc17, #loc18])
#loc99 = loc(fused[#loc19, #loc22])
#loc100 = loc(fused[#loc23, #loc24])
#loc101 = loc(fused[#loc26, #loc16])
#loc102 = loc(fused[#loc28, #loc29])
#loc103 = loc(fused[#loc30, #loc31])
#loc104 = loc(fused[#loc32, #loc33])
#loc105 = loc(fused[#loc34, #loc35])
#loc106 = loc(fused[#loc37, #loc36])
#loc107 = loc(fused[#loc39, #loc40])
#loc108 = loc(fused[#loc41, #loc42])
#loc109 = loc(fused[#loc43, #loc44])
#loc110 = loc(fused[#loc45, #loc46])
#loc111 = loc(fused[#loc47, #loc48, #loc49, #loc44])
#loc112 = loc(fused[#loc51, #loc52])
#loc113 = loc(fused[#loc53, #loc54])
#loc114 = loc(fused[#loc55, #loc56])
#loc115 = loc(fused[#loc58, #loc60])
#loc116 = loc(fused[#loc61, #loc54])
#loc117 = loc(fused[#loc64, #loc65])
#loc118 = loc(fused[#loc67, #loc66])
#loc119 = loc(fused[#loc68, #loc69])
#loc120 = loc(fused[#loc70, #loc71])
#loc121 = loc(fused[#loc72, #loc73])
#loc122 = loc(fused[#loc74, #loc75])
#loc123 = loc(fused[#loc76, #loc73])
#loc124 = loc(fused[#loc77, #loc78])
#loc125 = loc(fused[#loc79, #loc80])
#loc126 = loc(fused[#loc81, #loc82])
#loc127 = loc(fused[#loc84, #loc86])
#loc128 = loc(fused[#loc87, #loc80])
