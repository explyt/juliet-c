!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc157)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc158)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc159)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc160)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc161)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc162)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc164)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc17)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc167)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc167)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc21)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc21)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc26)
        %7 = cir.const #cir.int<50> : !s32i loc(#loc27)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc27)
        %9 = cir.const #cir.int<1> : !u64i loc(#loc169)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc170)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc26)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc171)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
        cir.scope {
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
          %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
          %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc174)
          cir.if %21 {
            %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc37)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc38)
            %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc39)
            cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc37)
          } loc(#loc175)
        } loc(#loc173)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc40)
        %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc40)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc42)
        %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc43)
        cir.store %14, %17 : !s8i, !cir.ptr<!s8i> loc(#loc176)
      } else {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc44)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc45)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc45)
        %9 = cir.const #cir.int<1> : !u64i loc(#loc177)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc178)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc44)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc179)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
        cir.scope {
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
          %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc53)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc53)
          %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc182)
          cir.if %21 {
            %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc55)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc56)
            %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc57)
            cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc55)
          } loc(#loc183)
        } loc(#loc181)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc58)
        %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc58)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc60)
        %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc61)
        cir.store %14, %17 : !s8i, !cir.ptr<!s8i> loc(#loc184)
      } loc(#loc168)
    } loc(#loc166)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc186)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc67)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc68)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc69)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc68)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc68)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc187)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc72)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc72)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc73)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc74)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc73)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc75)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc75)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc188)
      %17 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc76)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc78)
      %20 = cir.call @strcat(%18, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc76)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc80)
      %22 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc81)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
      %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc82)
      cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc81)
    } loc(#loc185)
    cir.return loc(#loc14)
  } loc(#loc163)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc190)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc85)
    cir.return loc(#loc84)
  } loc(#loc189)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc192)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc91)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc193)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc195)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc195)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc95)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc95)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc100)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc101)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc101)
        %9 = cir.const #cir.int<1> : !u64i loc(#loc197)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc198)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc100)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc199)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc200)
        cir.scope {
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
          %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc109)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc109)
          %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc202)
          cir.if %21 {
            %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc111)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc112)
            %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc113)
            cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc111)
          } loc(#loc203)
        } loc(#loc201)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc114)
        %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc114)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc116)
        %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc117)
        cir.store %14, %17 : !s8i, !cir.ptr<!s8i> loc(#loc204)
      } else {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc118)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc119)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc119)
        %9 = cir.const #cir.int<1> : !u64i loc(#loc205)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc206)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc118)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc207)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc208)
        cir.scope {
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
          %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc127)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc127)
          %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc210)
          cir.if %21 {
            %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc129)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc130)
            %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc131)
            cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc129)
          } loc(#loc211)
        } loc(#loc209)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc132)
        %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc132)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc134)
        %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc135)
        cir.store %14, %17 : !s8i, !cir.ptr<!s8i> loc(#loc212)
      } loc(#loc196)
    } loc(#loc194)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc214)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc140)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc140)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc141)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc142)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc143)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc142)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc142)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc215)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc146)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc146)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc147)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc148)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc147)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc149)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc149)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc216)
      %17 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc150)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc152)
      %20 = cir.call @strcat(%18, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc150)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc154)
      %22 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc155)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
      %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc156)
      cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc155)
    } loc(#loc213)
    cir.return loc(#loc88)
  } loc(#loc191)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":149:1)
#loc8 = loc("/usr/include/string.h":150:14)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":23:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":50:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":25:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":25:12)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":26:12)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":26:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":27:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":40:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":27:8)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":27:33)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":28:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":33:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":35:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":30:24)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":30:31)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":30:34)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":30:45)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":30:46)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":30:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":31:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":31:37)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":31:13)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":31:21)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":31:27)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":31:28)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":31:34)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":31:33)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":32:19)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":32:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":32:14)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":32:15)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":37:24)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":37:31)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":37:35)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":37:46)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":37:47)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":37:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":38:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":38:37)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":38:13)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":38:21)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":38:27)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":38:28)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":38:34)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":38:33)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":39:19)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":39:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":39:14)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":39:15)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":41:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":49:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":42:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":42:24)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":43:16)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":43:24)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":43:29)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":43:33)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":43:9)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":43:34)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":44:25)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":44:16)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":44:20)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":44:9)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":46:9)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":46:16)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":46:22)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":47:19)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":47:9)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":48:9)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":48:14)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":87:1)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":90:1)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":89:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":89:13)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":58:1)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":85:1)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":60:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":60:12)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":61:12)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":61:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":62:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":75:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":62:8)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":62:33)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":63:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":68:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":70:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":65:24)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":65:31)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":65:35)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":65:46)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":65:47)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":65:9)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":66:9)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":66:37)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":66:13)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":66:21)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":66:27)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":66:28)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":66:34)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":66:33)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":67:19)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":67:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":67:14)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":67:15)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":72:24)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":72:31)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":72:35)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":72:46)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":72:47)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":72:9)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":73:9)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":73:37)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":73:13)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":73:21)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":73:27)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":73:28)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":73:34)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":73:33)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":74:19)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":74:9)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":74:14)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":74:15)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":76:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":84:5)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":77:9)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":77:24)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":78:16)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":78:24)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":78:29)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":78:33)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":78:9)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":78:34)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":79:25)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":79:16)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":79:20)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":79:9)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":81:9)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":81:16)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":81:22)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":82:19)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":82:9)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":83:9)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cat_12.c":83:14)
#loc157 = loc(fused[#loc1, #loc2])
#loc158 = loc(fused[#loc3, #loc4])
#loc159 = loc(fused[#loc5, #loc6])
#loc160 = loc(fused[#loc7, #loc8])
#loc161 = loc(fused[#loc9, #loc10])
#loc162 = loc(fused[#loc11, #loc12])
#loc163 = loc(fused[#loc13, #loc14])
#loc164 = loc(fused[#loc15, #loc16])
#loc165 = loc(fused[#loc18, #loc17])
#loc166 = loc(fused[#loc19, #loc20])
#loc167 = loc(fused[#loc21, #loc22])
#loc168 = loc(fused[#loc23, #loc24, #loc25, #loc20])
#loc169 = loc(fused[#loc28, #loc29])
#loc170 = loc(fused[#loc27, #loc29])
#loc171 = loc(fused[#loc26, #loc30])
#loc172 = loc(fused[#loc31, #loc30])
#loc173 = loc(fused[#loc32, #loc33])
#loc174 = loc(fused[#loc34, #loc35])
#loc175 = loc(fused[#loc36, #loc33])
#loc176 = loc(fused[#loc41, #loc40])
#loc177 = loc(fused[#loc46, #loc47])
#loc178 = loc(fused[#loc45, #loc47])
#loc179 = loc(fused[#loc44, #loc48])
#loc180 = loc(fused[#loc49, #loc48])
#loc181 = loc(fused[#loc50, #loc51])
#loc182 = loc(fused[#loc52, #loc53])
#loc183 = loc(fused[#loc54, #loc51])
#loc184 = loc(fused[#loc59, #loc58])
#loc185 = loc(fused[#loc62, #loc63])
#loc186 = loc(fused[#loc64, #loc65])
#loc187 = loc(fused[#loc70, #loc71])
#loc188 = loc(fused[#loc75, #loc72])
#loc189 = loc(fused[#loc83, #loc84])
#loc190 = loc(fused[#loc85, #loc86])
#loc191 = loc(fused[#loc87, #loc88])
#loc192 = loc(fused[#loc89, #loc90])
#loc193 = loc(fused[#loc92, #loc91])
#loc194 = loc(fused[#loc93, #loc94])
#loc195 = loc(fused[#loc95, #loc96])
#loc196 = loc(fused[#loc97, #loc98, #loc99, #loc94])
#loc197 = loc(fused[#loc102, #loc103])
#loc198 = loc(fused[#loc101, #loc103])
#loc199 = loc(fused[#loc100, #loc104])
#loc200 = loc(fused[#loc105, #loc104])
#loc201 = loc(fused[#loc106, #loc107])
#loc202 = loc(fused[#loc108, #loc109])
#loc203 = loc(fused[#loc110, #loc107])
#loc204 = loc(fused[#loc115, #loc114])
#loc205 = loc(fused[#loc120, #loc121])
#loc206 = loc(fused[#loc119, #loc121])
#loc207 = loc(fused[#loc118, #loc122])
#loc208 = loc(fused[#loc123, #loc122])
#loc209 = loc(fused[#loc124, #loc125])
#loc210 = loc(fused[#loc126, #loc127])
#loc211 = loc(fused[#loc128, #loc125])
#loc212 = loc(fused[#loc133, #loc132])
#loc213 = loc(fused[#loc136, #loc137])
#loc214 = loc(fused[#loc138, #loc139])
#loc215 = loc(fused[#loc144, #loc145])
#loc216 = loc(fused[#loc149, #loc146])
