!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func no_proto private  @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc164)
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc165)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc166)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc167)
  cir.func private  @printLongLongLine(!s64i) loc(#loc168)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc169)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc13)
  cir.func no_proto  @CWE191_Integer_Underflow__int64_t_fscanf_sub_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc18)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc172)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc174)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc174)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc22)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc22)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc27)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc166)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc167)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc167)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc27)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc29)
        %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc30)
        %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc30)
        cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc176)
      } loc(#loc175)
    } loc(#loc173)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc178)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc178)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc34)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc34)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc181)
          %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc43)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc42)
          %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc42)
          %10 = cir.binop(sub, %7, %9) nsw : !s64i loc(#loc43)
          cir.store %10, %6 : !s64i, !cir.ptr<!s64i> loc(#loc181)
          %11 = cir.load %6 : !cir.ptr<!s64i>, !s64i loc(#loc44)
          cir.call @printLongLongLine(%11) : (!s64i) -> () loc(#loc45)
        } loc(#loc180)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc48)
          %7 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc49)
          %8 = cir.unary(minus, %7) : !s64i, !s64i loc(#loc49)
          %9 = cir.const #cir.int<1> : !s64i loc(#loc49)
          %10 = cir.binop(sub, %8, %9) nsw : !s64i loc(#loc49)
          %11 = cir.cmp(gt, %6, %10) : !s64i, !s32i loc(#loc183)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc50)
          cir.if %12 {
            %13 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc185)
            %14 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc56)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc55)
            %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc55)
            %17 = cir.binop(sub, %14, %16) nsw : !s64i loc(#loc56)
            cir.store %17, %13 : !s64i, !cir.ptr<!s64i> loc(#loc185)
            %18 = cir.load %13 : !cir.ptr<!s64i>, !s64i loc(#loc57)
            cir.call @printLongLongLine(%18) : (!s64i) -> () loc(#loc58)
          } else {
            %13 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc13)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc13)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc59)
          } loc(#loc184)
        } loc(#loc182)
      } loc(#loc179)
    } loc(#loc177)
    cir.return loc(#loc15)
  } loc(#loc170)
  cir.func no_proto  @CWE191_Integer_Underflow__int64_t_fscanf_sub_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc187)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc188)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    cir.return loc(#loc61)
  } loc(#loc186)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc190)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc70)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc191)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc193)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc193)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc74)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc74)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc79)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc166)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc80)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc195)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc195)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc79)
      } else {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc83)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc166)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc84)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc196)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc196)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc83)
      } loc(#loc194)
    } loc(#loc192)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc198)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc198)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc89)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc89)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc96)
          %7 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc97)
          %8 = cir.unary(minus, %7) : !s64i, !s64i loc(#loc97)
          %9 = cir.const #cir.int<1> : !s64i loc(#loc97)
          %10 = cir.binop(sub, %8, %9) nsw : !s64i loc(#loc97)
          %11 = cir.cmp(gt, %6, %10) : !s64i, !s32i loc(#loc201)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc98)
          cir.if %12 {
            %13 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc203)
            %14 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc104)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc103)
            %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc103)
            %17 = cir.binop(sub, %14, %16) nsw : !s64i loc(#loc104)
            cir.store %17, %13 : !s64i, !cir.ptr<!s64i> loc(#loc203)
            %18 = cir.load %13 : !cir.ptr<!s64i>, !s64i loc(#loc105)
            cir.call @printLongLongLine(%18) : (!s64i) -> () loc(#loc106)
          } else {
            %13 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc107)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc107)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc108)
          } loc(#loc202)
        } loc(#loc200)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc111)
          %7 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc112)
          %8 = cir.unary(minus, %7) : !s64i, !s64i loc(#loc112)
          %9 = cir.const #cir.int<1> : !s64i loc(#loc112)
          %10 = cir.binop(sub, %8, %9) nsw : !s64i loc(#loc112)
          %11 = cir.cmp(gt, %6, %10) : !s64i, !s32i loc(#loc205)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc113)
          cir.if %12 {
            %13 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc207)
            %14 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc119)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc118)
            %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc118)
            %17 = cir.binop(sub, %14, %16) nsw : !s64i loc(#loc119)
            cir.store %17, %13 : !s64i, !cir.ptr<!s64i> loc(#loc207)
            %18 = cir.load %13 : !cir.ptr<!s64i>, !s64i loc(#loc120)
            cir.call @printLongLongLine(%18) : (!s64i) -> () loc(#loc121)
          } else {
            %13 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc122)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc122)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc123)
          } loc(#loc206)
        } loc(#loc204)
      } loc(#loc199)
    } loc(#loc197)
    cir.return loc(#loc67)
  } loc(#loc189)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc209)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc128)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc210)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc212)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc212)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc132)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc132)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc137)
        %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc138)
        %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc138)
        cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc214)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc140)
        %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc141)
        %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc141)
        cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc215)
      } loc(#loc213)
    } loc(#loc211)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc217)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc217)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc145)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc145)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc220)
          %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc154)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc153)
          %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc153)
          %10 = cir.binop(sub, %7, %9) nsw : !s64i loc(#loc154)
          cir.store %10, %6 : !s64i, !cir.ptr<!s64i> loc(#loc220)
          %11 = cir.load %6 : !cir.ptr<!s64i>, !s64i loc(#loc155)
          cir.call @printLongLongLine(%11) : (!s64i) -> () loc(#loc156)
        } loc(#loc219)
      } else {
        cir.scope {
          %6 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc222)
          %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc161)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc160)
          %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc160)
          %10 = cir.binop(sub, %7, %9) nsw : !s64i loc(#loc161)
          cir.store %10, %6 : !s64i, !cir.ptr<!s64i> loc(#loc222)
          %11 = cir.load %6 : !cir.ptr<!s64i>, !s64i loc(#loc162)
          cir.call @printLongLongLine(%11) : (!s64i) -> () loc(#loc163)
        } loc(#loc221)
      } loc(#loc218)
    } loc(#loc216)
    cir.return loc(#loc125)
  } loc(#loc208)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":30:24)
#loc8 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":30:28)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":55:23)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":23:1)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":58:1)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":25:5)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":25:13)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":26:12)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":26:5)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":27:5)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":36:5)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":27:8)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":27:33)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":28:5)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":31:5)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":33:5)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":30:9)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":30:17)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":35:17)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":35:16)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":35:9)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":37:5)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":57:5)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":37:8)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":37:33)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":38:5)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":44:5)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":46:5)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":39:9)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":43:9)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":41:13)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":41:37)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":41:30)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":42:31)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":42:13)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":48:9)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":56:9)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":48:13)
#loc49 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":48:20)
#loc50 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":48:18)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":49:9)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":52:9)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":54:9)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":50:13)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":50:37)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":50:30)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":51:31)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":51:13)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":55:13)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":144:1)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":148:1)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":146:5)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":146:13)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":147:5)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":147:13)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":67:1)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":107:1)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":69:5)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":69:13)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":70:12)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":70:5)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":71:5)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":80:5)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":71:8)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":71:33)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":72:5)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":75:5)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":77:5)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":74:9)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":74:17)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":74:24)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":74:28)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":79:9)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":79:17)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":79:24)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":79:28)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":81:5)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":106:5)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":81:8)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":81:33)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":82:5)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":93:5)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":95:5)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":84:9)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":92:9)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":84:13)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":84:20)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":84:18)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":85:9)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":88:9)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":90:9)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":86:13)
#loc103 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":86:37)
#loc104 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":86:30)
#loc105 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":87:31)
#loc106 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":87:13)
#loc107 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":91:23)
#loc108 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":91:13)
#loc109 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":97:9)
#loc110 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":105:9)
#loc111 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":97:13)
#loc112 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":97:20)
#loc113 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":97:18)
#loc114 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":98:9)
#loc115 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":101:9)
#loc116 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":103:9)
#loc117 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":99:13)
#loc118 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":99:37)
#loc119 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":99:30)
#loc120 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":100:31)
#loc121 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":100:13)
#loc122 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":104:23)
#loc123 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":104:13)
#loc124 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":112:1)
#loc125 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":142:1)
#loc126 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":114:5)
#loc127 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":114:13)
#loc128 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":115:12)
#loc129 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":115:5)
#loc130 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":116:5)
#loc131 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":125:5)
#loc132 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":116:8)
#loc133 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":116:33)
#loc134 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":117:5)
#loc135 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":120:5)
#loc136 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":122:5)
#loc137 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":119:17)
#loc138 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":119:16)
#loc139 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":119:9)
#loc140 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":124:17)
#loc141 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":124:16)
#loc142 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":124:9)
#loc143 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":126:5)
#loc144 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":141:5)
#loc145 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":126:8)
#loc146 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":126:33)
#loc147 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":127:5)
#loc148 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":133:5)
#loc149 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":135:5)
#loc150 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":128:9)
#loc151 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":132:9)
#loc152 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":130:13)
#loc153 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":130:37)
#loc154 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":130:30)
#loc155 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":131:31)
#loc156 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":131:13)
#loc157 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":136:9)
#loc158 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":140:9)
#loc159 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":138:13)
#loc160 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":138:37)
#loc161 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":138:30)
#loc162 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":139:31)
#loc163 = loc("CWE191_Integer_Underflow__int64_t_fscanf_sub_12.c":139:13)
#loc164 = loc(fused[#loc1, #loc2])
#loc165 = loc(fused[#loc3, #loc4])
#loc166 = loc(fused[#loc5, #loc6])
#loc167 = loc(fused[#loc7, #loc8])
#loc168 = loc(fused[#loc9, #loc10])
#loc169 = loc(fused[#loc11, #loc12])
#loc170 = loc(fused[#loc14, #loc15])
#loc171 = loc(fused[#loc16, #loc17])
#loc172 = loc(fused[#loc19, #loc18])
#loc173 = loc(fused[#loc20, #loc21])
#loc174 = loc(fused[#loc22, #loc23])
#loc175 = loc(fused[#loc24, #loc25, #loc26, #loc21])
#loc176 = loc(fused[#loc31, #loc29])
#loc177 = loc(fused[#loc32, #loc33])
#loc178 = loc(fused[#loc34, #loc35])
#loc179 = loc(fused[#loc36, #loc37, #loc38, #loc33])
#loc180 = loc(fused[#loc39, #loc40])
#loc181 = loc(fused[#loc41, #loc42])
#loc182 = loc(fused[#loc46, #loc47])
#loc183 = loc(fused[#loc48, #loc49])
#loc184 = loc(fused[#loc51, #loc52, #loc53, #loc47])
#loc185 = loc(fused[#loc54, #loc55])
#loc186 = loc(fused[#loc60, #loc61])
#loc187 = loc(fused[#loc62, #loc63])
#loc188 = loc(fused[#loc64, #loc65])
#loc189 = loc(fused[#loc66, #loc67])
#loc190 = loc(fused[#loc68, #loc69])
#loc191 = loc(fused[#loc71, #loc70])
#loc192 = loc(fused[#loc72, #loc73])
#loc193 = loc(fused[#loc74, #loc75])
#loc194 = loc(fused[#loc76, #loc77, #loc78, #loc73])
#loc195 = loc(fused[#loc81, #loc82])
#loc196 = loc(fused[#loc85, #loc86])
#loc197 = loc(fused[#loc87, #loc88])
#loc198 = loc(fused[#loc89, #loc90])
#loc199 = loc(fused[#loc91, #loc92, #loc93, #loc88])
#loc200 = loc(fused[#loc94, #loc95])
#loc201 = loc(fused[#loc96, #loc97])
#loc202 = loc(fused[#loc99, #loc100, #loc101, #loc95])
#loc203 = loc(fused[#loc102, #loc103])
#loc204 = loc(fused[#loc109, #loc110])
#loc205 = loc(fused[#loc111, #loc112])
#loc206 = loc(fused[#loc114, #loc115, #loc116, #loc110])
#loc207 = loc(fused[#loc117, #loc118])
#loc208 = loc(fused[#loc124, #loc125])
#loc209 = loc(fused[#loc126, #loc127])
#loc210 = loc(fused[#loc129, #loc128])
#loc211 = loc(fused[#loc130, #loc131])
#loc212 = loc(fused[#loc132, #loc133])
#loc213 = loc(fused[#loc134, #loc135, #loc136, #loc131])
#loc214 = loc(fused[#loc139, #loc137])
#loc215 = loc(fused[#loc142, #loc140])
#loc216 = loc(fused[#loc143, #loc144])
#loc217 = loc(fused[#loc145, #loc146])
#loc218 = loc(fused[#loc147, #loc148, #loc149, #loc144])
#loc219 = loc(fused[#loc150, #loc151])
#loc220 = loc(fused[#loc152, #loc153])
#loc221 = loc(fused[#loc157, #loc158])
#loc222 = loc(fused[#loc159, #loc160])
