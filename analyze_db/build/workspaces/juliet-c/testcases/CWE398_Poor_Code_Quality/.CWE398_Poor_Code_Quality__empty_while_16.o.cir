!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE398_Poor_Code_Quality/CWE398_Poor_Code_Quality__empty_while_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Hello from bad()\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE398_Poor_Code_Quality__empty_while_16_bad() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc8)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc8)
        cir.condition(%1) loc(#loc8)
      } do {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i", init] {alignment = 4 : i64} loc(#loc53)
            %3 = cir.const #cir.int<0> : !s32i loc(#loc13)
            cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc53)
            cir.scope {
              cir.while {
                %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc16)
                %5 = cir.unary(inc, %4) nsw : !s32i, !s32i loc(#loc17)
                cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc55)
                %6 = cir.const #cir.int<10> : !s32i loc(#loc18)
                %7 = cir.cmp(lt, %4, %6) : !s32i, !cir.bool loc(#loc56)
                cir.condition(%7) loc(#loc19)
              } do {
                cir.yield loc(#loc15)
              } loc(#loc54)
            } loc(#loc54)
          } loc(#loc52)
          %0 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc3)
          %1 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%1) : (!cir.ptr<!s8i>) -> () loc(#loc20)
          cir.break loc(#loc21)
        } loc(#loc51)
        cir.yield loc(#loc7)
      } loc(#loc50)
    } loc(#loc50)
    cir.return loc(#loc5)
  } loc(#loc49)
  cir.func no_proto @CWE398_Poor_Code_Quality__empty_while_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc58)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc24)
    cir.return loc(#loc23)
  } loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Inside the while statement\00" : !cir.array<!s8i x 27>> : !cir.array<!s8i x 27> {alignment = 1 : i64} loc(#loc26)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Hello from good()\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc27)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc32)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc32)
        cir.condition(%1) loc(#loc32)
      } do {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i", init] {alignment = 4 : i64} loc(#loc63)
            %3 = cir.const #cir.int<0> : !s32i loc(#loc37)
            cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc63)
            cir.scope {
              cir.while {
                %4 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc40)
                %5 = cir.unary(inc, %4) nsw : !s32i, !s32i loc(#loc41)
                cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc65)
                %6 = cir.const #cir.int<10> : !s32i loc(#loc42)
                %7 = cir.cmp(lt, %4, %6) : !s32i, !cir.bool loc(#loc66)
                cir.condition(%7) loc(#loc43)
              } do {
                cir.scope {
                  %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc26)
                  %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc26)
                  cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc45)
                } loc(#loc67)
                cir.yield loc(#loc39)
              } loc(#loc64)
            } loc(#loc64)
          } loc(#loc62)
          %0 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc27)
          %1 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc27)
          cir.call @printLine(%1) : (!cir.ptr<!s8i>) -> () loc(#loc46)
          cir.break loc(#loc47)
        } loc(#loc61)
        cir.yield loc(#loc31)
      } loc(#loc60)
    } loc(#loc60)
    cir.return loc(#loc29)
  } loc(#loc59)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE398_Poor_Code_Quality/CWE398_Poor_Code_Quality__empty_while_16.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":31:19)
#loc4 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":20:1)
#loc5 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":34:1)
#loc6 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":22:5)
#loc7 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":33:5)
#loc8 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":22:11)
#loc9 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":23:5)
#loc10 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":25:9)
#loc11 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":30:9)
#loc12 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":26:13)
#loc13 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":26:21)
#loc14 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":27:13)
#loc15 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":29:13)
#loc16 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":27:20)
#loc17 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":27:19)
#loc18 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":27:25)
#loc19 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":27:23)
#loc20 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":31:9)
#loc21 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":32:9)
#loc22 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":58:1)
#loc23 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":61:1)
#loc24 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":60:5)
#loc25 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":60:11)
#loc26 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":50:27)
#loc27 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":53:19)
#loc28 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":41:1)
#loc29 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":56:1)
#loc30 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":43:5)
#loc31 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":55:5)
#loc32 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":43:11)
#loc33 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":44:5)
#loc34 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":46:9)
#loc35 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":52:9)
#loc36 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":47:13)
#loc37 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":47:21)
#loc38 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":48:13)
#loc39 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":51:13)
#loc40 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":48:20)
#loc41 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":48:19)
#loc42 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":48:25)
#loc43 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":48:23)
#loc44 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":49:13)
#loc45 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":50:17)
#loc46 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":53:9)
#loc47 = loc("CWE398_Poor_Code_Quality__empty_while_16.c":54:9)
#loc48 = loc(fused[#loc1, #loc2])
#loc49 = loc(fused[#loc4, #loc5])
#loc50 = loc(fused[#loc6, #loc7])
#loc51 = loc(fused[#loc9, #loc7])
#loc52 = loc(fused[#loc10, #loc11])
#loc53 = loc(fused[#loc12, #loc13])
#loc54 = loc(fused[#loc14, #loc15])
#loc55 = loc(fused[#loc17, #loc16])
#loc56 = loc(fused[#loc17, #loc18])
#loc57 = loc(fused[#loc22, #loc23])
#loc58 = loc(fused[#loc24, #loc25])
#loc59 = loc(fused[#loc28, #loc29])
#loc60 = loc(fused[#loc30, #loc31])
#loc61 = loc(fused[#loc33, #loc31])
#loc62 = loc(fused[#loc34, #loc35])
#loc63 = loc(fused[#loc36, #loc37])
#loc64 = loc(fused[#loc38, #loc39])
#loc65 = loc(fused[#loc41, #loc40])
#loc66 = loc(fused[#loc41, #loc42])
#loc67 = loc(fused[#loc44, #loc39])
