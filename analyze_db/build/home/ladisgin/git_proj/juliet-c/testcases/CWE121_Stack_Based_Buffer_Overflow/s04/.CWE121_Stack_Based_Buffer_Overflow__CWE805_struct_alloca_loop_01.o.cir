!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc123)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc125)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc126)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc127)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc129)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc14)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc14)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc14)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc14)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %10 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc130)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %12, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc129)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc16)
    %15 = cir.const #cir.int<8> : !u64i loc(#loc16)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc16)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
    cir.store %19, %10 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc130)
    %20 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
    cir.store %20, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc131)
    cir.br ^bb1 loc(#loc132)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc133)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc134)
  ^bb3:  // pred: ^bb2
    %21 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc25)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc135)
    cir.br ^bb4 loc(#loc134)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc27)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc28)
    %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc136)
    cir.brcond %26 ^bb5, ^bb9 loc(#loc29)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc137)
  ^bb6:  // pred: ^bb5
    %27 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %28 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
    %31 = cir.get_member %30[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
    cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc36)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!ty__twoIntsStruct>, %33 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    %36 = cir.get_member %35[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
    cir.store %32, %36 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    cir.br ^bb7 loc(#loc24)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc24)
  ^bb8:  // pred: ^bb7
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc39)
    %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc40)
    cir.store %38, %1 : !u64i, !cir.ptr<!u64i> loc(#loc140)
    cir.br ^bb4 loc(#loc134)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc24)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc22)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc141)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc142)
  ^bb13:  // pred: ^bb12
    %39 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc45)
    cir.store %40, %2 : !u64i, !cir.ptr<!u64i> loc(#loc143)
    cir.br ^bb14 loc(#loc142)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %41 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc48)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc48)
    %44 = cir.cmp(lt, %41, %43) : !u64i, !cir.bool loc(#loc144)
    cir.brcond %44 ^bb15, ^bb19 loc(#loc49)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc145)
  ^bb16:  // pred: ^bb15
    %45 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
    %46 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!ty__twoIntsStruct>, %46 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    %48 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %49 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
    %50 = cir.ptr_stride(%49 : !cir.ptr<!ty__twoIntsStruct>, %48 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
    cir.copy %50 to %47 : !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    cir.br ^bb17 loc(#loc44)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc44)
  ^bb18:  // pred: ^bb17
    %51 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %52 = cir.unary(inc, %51) : !u64i, !u64i loc(#loc57)
    cir.store %52, %2 : !u64i, !cir.ptr<!u64i> loc(#loc146)
    cir.br ^bb14 loc(#loc142)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc44)
  ^bb20:  // pred: ^bb19
    %53 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
    %54 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %55 = cir.ptr_stride(%53 : !cir.ptr<!ty__twoIntsStruct>, %54 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
    cir.call @printStructLine(%55) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc61)
    cir.br ^bb21 loc(#loc42)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc20)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc4)
  } loc(#loc124)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc148)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc64)
    cir.return loc(#loc63)
  } loc(#loc147)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc150)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc151)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc152)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc154)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc77)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc77)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc77)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc77)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc77)
    %10 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc155)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc77)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
    cir.store %12, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc154)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc79)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc79)
    %15 = cir.const #cir.int<8> : !u64i loc(#loc79)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc79)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc79)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc79)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc79)
    cir.store %19, %10 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc155)
    %20 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc80)
    cir.store %20, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc156)
    cir.br ^bb1 loc(#loc157)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc158)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc159)
  ^bb3:  // pred: ^bb2
    %21 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc88)
    cir.store %22, %1 : !u64i, !cir.ptr<!u64i> loc(#loc160)
    cir.br ^bb4 loc(#loc159)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc90)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc91)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc91)
    %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc161)
    cir.brcond %26 ^bb5, ^bb9 loc(#loc92)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc162)
  ^bb6:  // pred: ^bb5
    %27 = cir.const #cir.int<0> : !s32i loc(#loc94)
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc95)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %28 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
    %31 = cir.get_member %30[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
    cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc98)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc99)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!ty__twoIntsStruct>, %33 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc99)
    %36 = cir.get_member %35[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
    cir.store %32, %36 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.br ^bb7 loc(#loc87)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc87)
  ^bb8:  // pred: ^bb7
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc100)
    %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc101)
    cir.store %38, %1 : !u64i, !cir.ptr<!u64i> loc(#loc165)
    cir.br ^bb4 loc(#loc159)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc87)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc85)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc166)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc167)
  ^bb13:  // pred: ^bb12
    %39 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc106)
    cir.store %40, %2 : !u64i, !cir.ptr<!u64i> loc(#loc168)
    cir.br ^bb14 loc(#loc167)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %41 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc108)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc109)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc109)
    %44 = cir.cmp(lt, %41, %43) : !u64i, !cir.bool loc(#loc169)
    cir.brcond %44 ^bb15, ^bb19 loc(#loc110)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc170)
  ^bb16:  // pred: ^bb15
    %45 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc112)
    %46 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc113)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!ty__twoIntsStruct>, %46 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
    %48 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %49 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
    %50 = cir.ptr_stride(%49 : !cir.ptr<!ty__twoIntsStruct>, %48 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
    cir.copy %50 to %47 : !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
    cir.br ^bb17 loc(#loc105)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc105)
  ^bb18:  // pred: ^bb17
    %51 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc117)
    %52 = cir.unary(inc, %51) : !u64i, !u64i loc(#loc118)
    cir.store %52, %2 : !u64i, !cir.ptr<!u64i> loc(#loc171)
    cir.br ^bb14 loc(#loc167)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc105)
  ^bb20:  // pred: ^bb19
    %53 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
    %54 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %55 = cir.ptr_stride(%53 : !cir.ptr<!ty__twoIntsStruct>, %54 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
    cir.call @printStructLine(%55) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc122)
    cir.br ^bb21 loc(#loc103)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc83)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc67)
  } loc(#loc149)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":50:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":30:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":30:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":32:13)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":32:20)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":41:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":41:20)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":23:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":23:21)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":24:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":24:54)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":25:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":25:55)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":28:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":28:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":29:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":49:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":31:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":39:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":34:13)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":38:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":34:22)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":34:18)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":34:25)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":34:29)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":34:27)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":35:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":36:36)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":36:24)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":36:17)
#loc34 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":37:36)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":37:24)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":37:17)
#loc38 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":34:35)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":34:34)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":40:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":48:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":43:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":46:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":43:22)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":43:18)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":43:25)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":43:29)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":43:27)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":44:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":45:17)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":45:22)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":45:23)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":45:34)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":45:27)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":43:35)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":43:34)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":47:30)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":47:35)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":47:36)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":47:13)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":87:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":90:1)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":89:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":89:13)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":57:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":85:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":65:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":65:33)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":67:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":67:20)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":76:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":76:20)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":59:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":59:21)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":60:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":60:54)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":61:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":61:55)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":63:12)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":63:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":64:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":84:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":66:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":74:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":69:13)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":73:13)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":69:22)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":69:18)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":69:25)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":69:29)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":69:27)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":70:13)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":71:36)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":71:24)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":71:17)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":72:36)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":72:24)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":72:17)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":69:35)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":69:34)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":75:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":83:9)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":78:13)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":81:13)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":78:22)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":78:18)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":78:25)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":78:29)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":78:27)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":79:13)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":80:17)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":80:22)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":80:23)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":80:34)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":80:27)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":78:35)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":78:34)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":82:30)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":82:35)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":82:36)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_01.c":82:13)
#loc123 = loc(fused[#loc1, #loc2])
#loc124 = loc(fused[#loc3, #loc4])
#loc125 = loc(fused[#loc5, #loc6])
#loc126 = loc(fused[#loc7, #loc8])
#loc127 = loc(fused[#loc9, #loc10])
#loc128 = loc(fused[#loc11, #loc12])
#loc129 = loc(fused[#loc13, #loc14])
#loc130 = loc(fused[#loc15, #loc16])
#loc131 = loc(fused[#loc18, #loc17])
#loc132 = loc(fused[#loc19, #loc20])
#loc133 = loc(fused[#loc21, #loc22])
#loc134 = loc(fused[#loc23, #loc24])
#loc135 = loc(fused[#loc26, #loc25])
#loc136 = loc(fused[#loc27, #loc28])
#loc137 = loc(fused[#loc30, #loc24])
#loc138 = loc(fused[#loc33, #loc31])
#loc139 = loc(fused[#loc37, #loc35])
#loc140 = loc(fused[#loc40, #loc39])
#loc141 = loc(fused[#loc41, #loc42])
#loc142 = loc(fused[#loc43, #loc44])
#loc143 = loc(fused[#loc46, #loc45])
#loc144 = loc(fused[#loc47, #loc48])
#loc145 = loc(fused[#loc50, #loc44])
#loc146 = loc(fused[#loc57, #loc56])
#loc147 = loc(fused[#loc62, #loc63])
#loc148 = loc(fused[#loc64, #loc65])
#loc149 = loc(fused[#loc66, #loc67])
#loc150 = loc(fused[#loc68, #loc69])
#loc151 = loc(fused[#loc70, #loc71])
#loc152 = loc(fused[#loc72, #loc73])
#loc153 = loc(fused[#loc74, #loc75])
#loc154 = loc(fused[#loc76, #loc77])
#loc155 = loc(fused[#loc78, #loc79])
#loc156 = loc(fused[#loc81, #loc80])
#loc157 = loc(fused[#loc82, #loc83])
#loc158 = loc(fused[#loc84, #loc85])
#loc159 = loc(fused[#loc86, #loc87])
#loc160 = loc(fused[#loc89, #loc88])
#loc161 = loc(fused[#loc90, #loc91])
#loc162 = loc(fused[#loc93, #loc87])
#loc163 = loc(fused[#loc96, #loc94])
#loc164 = loc(fused[#loc99, #loc97])
#loc165 = loc(fused[#loc101, #loc100])
#loc166 = loc(fused[#loc102, #loc103])
#loc167 = loc(fused[#loc104, #loc105])
#loc168 = loc(fused[#loc107, #loc106])
#loc169 = loc(fused[#loc108, #loc109])
#loc170 = loc(fused[#loc111, #loc105])
#loc171 = loc(fused[#loc118, #loc117])
