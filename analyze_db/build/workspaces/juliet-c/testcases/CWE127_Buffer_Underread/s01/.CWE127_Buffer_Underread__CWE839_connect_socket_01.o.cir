!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_connect_socket_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc276)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc277)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc278)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc279)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc280)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc281)
  cir.func private @close(!s32i) -> !s32i loc(#loc282)
  cir.func private @printIntLine(!s32i) loc(#loc283)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc284)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_connect_socket_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc286)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc289)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc290)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc291)
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc292)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc35)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc291)
      cir.scope {
        cir.do {
          cir.scope {
            %9 = cir.const #cir.int<2> : !s32i loc(#loc42)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc43)
            %11 = cir.const #cir.int<6> : !s32i loc(#loc44)
            %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc45)
            cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc295)
            cir.scope {
              %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc50)
              %52 = cir.const #cir.int<1> : !s32i loc(#loc51)
              %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc51)
              %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc297)
              cir.if %54 {
                cir.break loc(#loc53)
              } loc(#loc298)
            } loc(#loc296)
            %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc299)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc56)
            %15 = cir.const #cir.int<16> : !u64i loc(#loc300)
            cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc301)
            %16 = cir.const #cir.int<2> : !s32i loc(#loc61)
            %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc61)
            %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
            cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc302)
            %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc64)
            %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
            %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
            cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc303)
            %24 = cir.const #cir.int<27015> : !s32i loc(#loc69)
            %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc69)
            %26 = cir.call @htons(%25) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc70)
            %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
            cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc304)
            cir.scope {
              %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc76)
              %52 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc306)
              %53 = cir.const #cir.int<16> : !u64i loc(#loc307)
              %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc307)
              %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc81)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc82)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc82)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc308)
              cir.if %58 {
                cir.break loc(#loc84)
              } loc(#loc309)
            } loc(#loc305)
            %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc85)
            %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc86)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
            %31 = cir.const #cir.int<3> : !s32i loc(#loc87)
            %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc87)
            %33 = cir.const #cir.int<4> : !u64i loc(#loc87)
            %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc87)
            %35 = cir.const #cir.int<2> : !s32i loc(#loc87)
            %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc87)
            %37 = cir.binop(add, %34, %36) : !u64i loc(#loc87)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc88)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc88)
            %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc310)
            %41 = cir.const #cir.int<0> : !s32i loc(#loc89)
            %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc90)
            %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc90)
            cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc311)
            cir.scope {
              %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc95)
              %52 = cir.const #cir.int<1> : !s32i loc(#loc96)
              %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc96)
              %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc313)
              %55 = cir.ternary(%54, true {
                %56 = cir.const #true loc(#loc97)
                cir.yield %56 : !cir.bool loc(#loc97)
              }, false {
                %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                %57 = cir.const #cir.int<0> : !s32i loc(#loc99)
                %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc314)
                %59 = cir.ternary(%58, true {
                  %60 = cir.const #true loc(#loc97)
                  cir.yield %60 : !cir.bool loc(#loc97)
                }, false {
                  %60 = cir.const #false loc(#loc97)
                  cir.yield %60 : !cir.bool loc(#loc97)
                }) : (!cir.bool) -> !cir.bool loc(#loc97)
                cir.yield %59 : !cir.bool loc(#loc97)
              }) : (!cir.bool) -> !cir.bool loc(#loc97)
              cir.if %55 {
                cir.break loc(#loc101)
              } loc(#loc315)
            } loc(#loc312)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc102)
            %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc102)
            %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc103)
            %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc104)
            %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc104)
            cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc316)
            %49 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
            %50 = cir.call @atoi(%49) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc106)
            cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc317)
          } loc(#loc294)
          cir.yield loc(#loc39)
        } while {
          %9 = cir.const #cir.int<0> : !s32i loc(#loc109)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc109)
          cir.condition(%10) loc(#loc109)
        } loc(#loc293)
      } loc(#loc293)
      cir.scope {
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc112)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc113)
        %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc113)
        %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc319)
        cir.if %12 {
          %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc115)
          %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc116)
        } loc(#loc320)
      } loc(#loc318)
    } loc(#loc288)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc322)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc322)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc322)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
        %6 = cir.const #cir.int<10> : !s32i loc(#loc124)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc324)
        cir.if %7 {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
          %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc129)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc129)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc129)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc130)
        } else {
          %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc20)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc20)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc131)
        } loc(#loc325)
      } loc(#loc323)
    } loc(#loc321)
    cir.return loc(#loc22)
  } loc(#loc285)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_connect_socket_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc327)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc134)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc328)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc136)
    cir.return loc(#loc133)
  } loc(#loc326)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc330)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc143)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc331)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc145)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc332)
    cir.scope {
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc334)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc334)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc334)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc153)
        %7 = cir.const #cir.int<10> : !s32i loc(#loc154)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc336)
        cir.if %8 {
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc158)
          %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc159)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc159)
          %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc159)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc160)
        } else {
          %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc161)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc161)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc162)
        } loc(#loc337)
      } loc(#loc335)
    } loc(#loc333)
    cir.return loc(#loc139)
  } loc(#loc329)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc163)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc339)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc169)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc340)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc342)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc343)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc344)
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc345)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc178)
      %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc178)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc344)
      cir.scope {
        cir.do {
          cir.scope {
            %9 = cir.const #cir.int<2> : !s32i loc(#loc185)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc186)
            %11 = cir.const #cir.int<6> : !s32i loc(#loc187)
            %12 = cir.call @socket(%9, %10, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc188)
            cir.store %12, %5 : !s32i, !cir.ptr<!s32i> loc(#loc348)
            cir.scope {
              %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc193)
              %52 = cir.const #cir.int<1> : !s32i loc(#loc194)
              %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc194)
              %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc350)
              cir.if %54 {
                cir.break loc(#loc196)
              } loc(#loc351)
            } loc(#loc349)
            %13 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc352)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc199)
            %15 = cir.const #cir.int<16> : !u64i loc(#loc353)
            cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc354)
            %16 = cir.const #cir.int<2> : !s32i loc(#loc204)
            %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc204)
            %18 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
            cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc355)
            %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc206)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc206)
            %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc207)
            %22 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
            %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
            cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc356)
            %24 = cir.const #cir.int<27015> : !s32i loc(#loc210)
            %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc210)
            %26 = cir.call @htons(%25) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc211)
            %27 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
            cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc357)
            cir.scope {
              %51 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc216)
              %52 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc359)
              %53 = cir.const #cir.int<16> : !u64i loc(#loc360)
              %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc360)
              %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc221)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc222)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc222)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc361)
              cir.if %58 {
                cir.break loc(#loc224)
              } loc(#loc362)
            } loc(#loc358)
            %28 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc225)
            %29 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc226)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc226)
            %31 = cir.const #cir.int<3> : !s32i loc(#loc227)
            %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc227)
            %33 = cir.const #cir.int<4> : !u64i loc(#loc227)
            %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc227)
            %35 = cir.const #cir.int<2> : !s32i loc(#loc227)
            %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc227)
            %37 = cir.binop(add, %34, %36) : !u64i loc(#loc227)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc228)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc228)
            %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc363)
            %41 = cir.const #cir.int<0> : !s32i loc(#loc229)
            %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc230)
            %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc230)
            cir.store %43, %3 : !s32i, !cir.ptr<!s32i> loc(#loc364)
            cir.scope {
              %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc235)
              %52 = cir.const #cir.int<1> : !s32i loc(#loc236)
              %53 = cir.unary(minus, %52) nsw : !s32i, !s32i loc(#loc236)
              %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc366)
              %55 = cir.ternary(%54, true {
                %56 = cir.const #true loc(#loc237)
                cir.yield %56 : !cir.bool loc(#loc237)
              }, false {
                %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc238)
                %57 = cir.const #cir.int<0> : !s32i loc(#loc239)
                %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc367)
                %59 = cir.ternary(%58, true {
                  %60 = cir.const #true loc(#loc237)
                  cir.yield %60 : !cir.bool loc(#loc237)
                }, false {
                  %60 = cir.const #false loc(#loc237)
                  cir.yield %60 : !cir.bool loc(#loc237)
                }) : (!cir.bool) -> !cir.bool loc(#loc237)
                cir.yield %59 : !cir.bool loc(#loc237)
              }) : (!cir.bool) -> !cir.bool loc(#loc237)
              cir.if %55 {
                cir.break loc(#loc241)
              } loc(#loc368)
            } loc(#loc365)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc242)
            %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc242)
            %46 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc243)
            %47 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc244)
            %48 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %46 : !s32i), !cir.ptr<!s8i> loc(#loc244)
            cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc369)
            %49 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc245)
            %50 = cir.call @atoi(%49) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc246)
            cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc370)
          } loc(#loc347)
          cir.yield loc(#loc182)
        } while {
          %9 = cir.const #cir.int<0> : !s32i loc(#loc249)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc249)
          cir.condition(%10) loc(#loc249)
        } loc(#loc346)
      } loc(#loc346)
      cir.scope {
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc252)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc253)
        %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc253)
        %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc372)
        cir.if %12 {
          %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc255)
          %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc256)
        } loc(#loc373)
      } loc(#loc371)
    } loc(#loc341)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc375)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc375)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc375)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc263)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc264)
        %7 = cir.cmp(ge, %5, %6) : !s32i, !cir.bool loc(#loc377)
        %8 = cir.ternary(%7, true {
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc266)
          %10 = cir.const #cir.int<10> : !s32i loc(#loc267)
          %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc378)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc265)
            cir.yield %13 : !cir.bool loc(#loc265)
          }, false {
            %13 = cir.const #false loc(#loc265)
            cir.yield %13 : !cir.bool loc(#loc265)
          }) : (!cir.bool) -> !cir.bool loc(#loc265)
          cir.yield %12 : !cir.bool loc(#loc265)
        }, false {
          %9 = cir.const #false loc(#loc265)
          cir.yield %9 : !cir.bool loc(#loc265)
        }) : (!cir.bool) -> !cir.bool loc(#loc265)
        cir.if %8 {
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc272)
          %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc273)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc273)
          %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc273)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc274)
        } else {
          %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc163)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc163)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc275)
        } loc(#loc379)
      } loc(#loc376)
    } loc(#loc374)
    cir.return loc(#loc165)
  } loc(#loc338)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_connect_socket_01.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":75:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":115:23)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":44:1)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":118:1)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":46:5)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":46:9)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":48:13)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":48:12)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":48:5)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":49:5)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":104:5)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":54:9)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":54:13)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":55:9)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":55:28)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":56:9)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":56:32)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":57:9)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":57:41)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":58:9)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":93:17)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":59:9)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":92:9)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":68:36)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":68:45)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":68:58)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":68:29)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":68:13)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":68:69)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":69:13)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":72:13)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":69:17)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":69:34)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":70:13)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":71:17)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":73:20)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":73:21)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":73:30)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":73:33)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":73:47)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":73:13)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":73:48)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":74:34)
#loc62 = loc("/usr/include/netinet/in.h":249:5)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":74:13)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":75:39)
#loc65 = loc("/usr/include/netinet/in.h":251:20)
#loc66 = loc("/usr/include/netinet/in.h":33:15)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":75:13)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":75:59)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":76:38)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":76:32)
#loc71 = loc("/usr/include/netinet/in.h":250:15)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":76:13)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":76:46)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":77:13)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":80:13)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":77:25)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":77:58)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":77:59)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":77:68)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":77:82)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":77:17)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":77:88)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":78:13)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":79:17)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":83:31)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":83:46)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":83:59)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":83:77)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":83:80)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":83:26)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":83:13)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":83:81)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":84:13)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":87:13)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":84:17)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":84:31)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":84:44)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":84:47)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":84:61)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":85:13)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":86:17)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":89:39)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":89:25)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":89:13)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":91:25)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":91:20)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":91:13)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":91:36)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":93:16)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":94:9)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":97:9)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":94:13)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":94:30)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":95:9)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":96:26)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":96:13)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":105:5)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":117:5)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":106:9)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":106:30)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":109:9)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":116:9)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":109:13)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":109:20)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":110:9)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":112:9)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":114:9)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":111:33)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":111:26)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":111:13)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":115:13)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":224:1)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":228:1)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":226:5)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":226:13)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":227:5)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":227:13)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":125:1)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":146:1)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":127:5)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":127:9)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":129:13)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":129:12)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":129:5)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":132:12)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":132:5)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":133:5)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":145:5)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":134:9)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":134:30)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":137:9)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":144:9)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":137:13)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":137:20)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":138:9)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":140:9)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":142:9)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":139:33)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":139:26)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":139:13)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":143:23)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":143:13)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":219:23)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":149:1)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":222:1)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":151:5)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":151:9)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":153:13)
#loc169 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":153:12)
#loc170 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":153:5)
#loc171 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":154:5)
#loc172 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":209:5)
#loc173 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":159:9)
#loc174 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":159:13)
#loc175 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":160:9)
#loc176 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":160:28)
#loc177 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":161:9)
#loc178 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":161:32)
#loc179 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":162:9)
#loc180 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":162:41)
#loc181 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":163:9)
#loc182 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":198:17)
#loc183 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":164:9)
#loc184 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":197:9)
#loc185 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":173:36)
#loc186 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":173:45)
#loc187 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":173:58)
#loc188 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":173:29)
#loc189 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":173:13)
#loc190 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":173:69)
#loc191 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":174:13)
#loc192 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":177:13)
#loc193 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":174:17)
#loc194 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":174:34)
#loc195 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":175:13)
#loc196 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":176:17)
#loc197 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":178:20)
#loc198 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":178:21)
#loc199 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":178:30)
#loc200 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":178:33)
#loc201 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":178:47)
#loc202 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":178:13)
#loc203 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":178:48)
#loc204 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":179:34)
#loc205 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":179:13)
#loc206 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":180:49)
#loc207 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":180:39)
#loc208 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":180:13)
#loc209 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":180:59)
#loc210 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":181:38)
#loc211 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":181:32)
#loc212 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":181:13)
#loc213 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":181:46)
#loc214 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":182:13)
#loc215 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":185:13)
#loc216 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":182:25)
#loc217 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":182:58)
#loc218 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":182:59)
#loc219 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":182:68)
#loc220 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":182:82)
#loc221 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":182:17)
#loc222 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":182:88)
#loc223 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":183:13)
#loc224 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":184:17)
#loc225 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":188:31)
#loc226 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":188:46)
#loc227 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":188:59)
#loc228 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":188:77)
#loc229 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":188:80)
#loc230 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":188:26)
#loc231 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":188:13)
#loc232 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":188:81)
#loc233 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":189:13)
#loc234 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":192:13)
#loc235 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":189:17)
#loc236 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":189:31)
#loc237 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":189:44)
#loc238 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":189:47)
#loc239 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":189:61)
#loc240 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":190:13)
#loc241 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":191:17)
#loc242 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":194:39)
#loc243 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":194:25)
#loc244 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":194:13)
#loc245 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":196:25)
#loc246 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":196:20)
#loc247 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":196:13)
#loc248 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":196:36)
#loc249 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":198:16)
#loc250 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":199:9)
#loc251 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":202:9)
#loc252 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":199:13)
#loc253 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":199:30)
#loc254 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":200:9)
#loc255 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":201:26)
#loc256 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":201:13)
#loc257 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":210:5)
#loc258 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":221:5)
#loc259 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":211:9)
#loc260 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":211:30)
#loc261 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":213:9)
#loc262 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":220:9)
#loc263 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":213:13)
#loc264 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":213:21)
#loc265 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":213:23)
#loc266 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":213:26)
#loc267 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":213:34)
#loc268 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":213:36)
#loc269 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":214:9)
#loc270 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":216:9)
#loc271 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":218:9)
#loc272 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":215:33)
#loc273 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":215:26)
#loc274 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":215:13)
#loc275 = loc("CWE127_Buffer_Underread__CWE839_connect_socket_01.c":219:13)
#loc276 = loc(fused[#loc1, #loc2])
#loc277 = loc(fused[#loc3, #loc4])
#loc278 = loc(fused[#loc6, #loc7])
#loc279 = loc(fused[#loc8, #loc9])
#loc280 = loc(fused[#loc10, #loc11])
#loc281 = loc(fused[#loc12, #loc13])
#loc282 = loc(fused[#loc14, #loc15])
#loc283 = loc(fused[#loc16, #loc17])
#loc284 = loc(fused[#loc18, #loc19])
#loc285 = loc(fused[#loc21, #loc22])
#loc286 = loc(fused[#loc23, #loc24])
#loc287 = loc(fused[#loc27, #loc25])
#loc288 = loc(fused[#loc28, #loc29])
#loc289 = loc(fused[#loc30, #loc31])
#loc290 = loc(fused[#loc32, #loc33])
#loc291 = loc(fused[#loc34, #loc35])
#loc292 = loc(fused[#loc36, #loc37])
#loc293 = loc(fused[#loc38, #loc39])
#loc294 = loc(fused[#loc40, #loc41])
#loc295 = loc(fused[#loc46, #loc47])
#loc296 = loc(fused[#loc48, #loc49])
#loc297 = loc(fused[#loc50, #loc51])
#loc298 = loc(fused[#loc52, #loc49])
#loc299 = loc(fused[#loc54, #loc55])
#loc300 = loc(fused[#loc57, #loc58])
#loc301 = loc(fused[#loc59, #loc60])
#loc302 = loc(fused[#loc63, #loc61])
#loc303 = loc(fused[#loc67, #loc68])
#loc304 = loc(fused[#loc72, #loc73])
#loc305 = loc(fused[#loc74, #loc75])
#loc306 = loc(fused[#loc77, #loc78])
#loc307 = loc(fused[#loc79, #loc80])
#loc308 = loc(fused[#loc81, #loc82])
#loc309 = loc(fused[#loc83, #loc75])
#loc310 = loc(fused[#loc87, #loc88])
#loc311 = loc(fused[#loc91, #loc92])
#loc312 = loc(fused[#loc93, #loc94])
#loc313 = loc(fused[#loc95, #loc96])
#loc314 = loc(fused[#loc98, #loc99])
#loc315 = loc(fused[#loc100, #loc94])
#loc316 = loc(fused[#loc104, #loc102])
#loc317 = loc(fused[#loc107, #loc108])
#loc318 = loc(fused[#loc110, #loc111])
#loc319 = loc(fused[#loc112, #loc113])
#loc320 = loc(fused[#loc114, #loc111])
#loc321 = loc(fused[#loc117, #loc118])
#loc322 = loc(fused[#loc119, #loc120])
#loc323 = loc(fused[#loc121, #loc122])
#loc324 = loc(fused[#loc123, #loc124])
#loc325 = loc(fused[#loc125, #loc126, #loc127, #loc122])
#loc326 = loc(fused[#loc132, #loc133])
#loc327 = loc(fused[#loc134, #loc135])
#loc328 = loc(fused[#loc136, #loc137])
#loc329 = loc(fused[#loc138, #loc139])
#loc330 = loc(fused[#loc140, #loc141])
#loc331 = loc(fused[#loc144, #loc142])
#loc332 = loc(fused[#loc146, #loc145])
#loc333 = loc(fused[#loc147, #loc148])
#loc334 = loc(fused[#loc149, #loc150])
#loc335 = loc(fused[#loc151, #loc152])
#loc336 = loc(fused[#loc153, #loc154])
#loc337 = loc(fused[#loc155, #loc156, #loc157, #loc152])
#loc338 = loc(fused[#loc164, #loc165])
#loc339 = loc(fused[#loc166, #loc167])
#loc340 = loc(fused[#loc170, #loc168])
#loc341 = loc(fused[#loc171, #loc172])
#loc342 = loc(fused[#loc173, #loc174])
#loc343 = loc(fused[#loc175, #loc176])
#loc344 = loc(fused[#loc177, #loc178])
#loc345 = loc(fused[#loc179, #loc180])
#loc346 = loc(fused[#loc181, #loc182])
#loc347 = loc(fused[#loc183, #loc184])
#loc348 = loc(fused[#loc189, #loc190])
#loc349 = loc(fused[#loc191, #loc192])
#loc350 = loc(fused[#loc193, #loc194])
#loc351 = loc(fused[#loc195, #loc192])
#loc352 = loc(fused[#loc197, #loc198])
#loc353 = loc(fused[#loc200, #loc201])
#loc354 = loc(fused[#loc202, #loc203])
#loc355 = loc(fused[#loc205, #loc204])
#loc356 = loc(fused[#loc208, #loc209])
#loc357 = loc(fused[#loc212, #loc213])
#loc358 = loc(fused[#loc214, #loc215])
#loc359 = loc(fused[#loc217, #loc218])
#loc360 = loc(fused[#loc219, #loc220])
#loc361 = loc(fused[#loc221, #loc222])
#loc362 = loc(fused[#loc223, #loc215])
#loc363 = loc(fused[#loc227, #loc228])
#loc364 = loc(fused[#loc231, #loc232])
#loc365 = loc(fused[#loc233, #loc234])
#loc366 = loc(fused[#loc235, #loc236])
#loc367 = loc(fused[#loc238, #loc239])
#loc368 = loc(fused[#loc240, #loc234])
#loc369 = loc(fused[#loc244, #loc242])
#loc370 = loc(fused[#loc247, #loc248])
#loc371 = loc(fused[#loc250, #loc251])
#loc372 = loc(fused[#loc252, #loc253])
#loc373 = loc(fused[#loc254, #loc251])
#loc374 = loc(fused[#loc257, #loc258])
#loc375 = loc(fused[#loc259, #loc260])
#loc376 = loc(fused[#loc261, #loc262])
#loc377 = loc(fused[#loc263, #loc264])
#loc378 = loc(fused[#loc266, #loc268])
#loc379 = loc(fused[#loc269, #loc270, #loc271, #loc262])
