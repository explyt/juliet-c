!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc120)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc121)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc122)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc123)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc124)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc126)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc127)
    cir.scope {
      %6 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc120)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc19)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc19)
      cir.if %8 {
        %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc21)
        %10 = cir.const #cir.int<8> : !u64i loc(#loc130)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
        cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc132)
        cir.scope {
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
          %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
          %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc134)
          cir.if %22 {
            %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc31)
            %24 = cir.const #cir.int<1> : !s32i loc(#loc32)
            %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc33)
            cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
          } loc(#loc135)
        } loc(#loc133)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc34)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
        %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
        cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc136)
        %16 = cir.const #cir.int<2> : !s32i loc(#loc37)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
        %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
        cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc137)
      } loc(#loc129)
    } loc(#loc128)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
    cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc41)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc42)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc43)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc42)
    cir.return loc(#loc12)
  } loc(#loc125)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc139)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc46)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc140)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc48)
    cir.return loc(#loc45)
  } loc(#loc138)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc141)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc54)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc59)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc145)
    cir.scope {
      %6 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc141)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc63)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc63)
      cir.if %8 {
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc54)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc54)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc67)
      } else {
        %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc68)
        %10 = cir.const #cir.int<8> : !u64i loc(#loc148)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc68)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc149)
        cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc150)
        cir.scope {
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
          %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc76)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
          %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc152)
          cir.if %22 {
            %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc78)
            %24 = cir.const #cir.int<1> : !s32i loc(#loc79)
            %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc80)
            cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc78)
          } loc(#loc153)
        } loc(#loc151)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc81)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
        %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
        cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc154)
        %16 = cir.const #cir.int<2> : !s32i loc(#loc83)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
        %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
        cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc155)
      } loc(#loc147)
    } loc(#loc146)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
    cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc86)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc87)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc88)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc87)
    cir.return loc(#loc56)
  } loc(#loc143)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc157)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc158)
    cir.scope {
      %6 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc120)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc97)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc97)
      cir.if %8 {
        %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc99)
        %10 = cir.const #cir.int<8> : !u64i loc(#loc161)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc99)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc162)
        cir.store %12, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc163)
        cir.scope {
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
          %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc107)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
          %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc165)
          cir.if %22 {
            %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc109)
            %24 = cir.const #cir.int<1> : !s32i loc(#loc110)
            %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc111)
            cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc109)
          } loc(#loc166)
        } loc(#loc164)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc112)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
        %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
        cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc167)
        %16 = cir.const #cir.int<2> : !s32i loc(#loc114)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
        %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
        cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc168)
      } loc(#loc160)
    } loc(#loc159)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
    cir.call @printStructLine(%2) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc117)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc118)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc119)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc118)
    cir.return loc(#loc90)
  } loc(#loc156)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":23:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":23:25)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":28:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":45:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":30:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":30:21)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":32:12)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":32:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":33:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":41:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":33:8)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":34:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":37:33)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":37:40)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":37:51)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":37:52)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":37:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":38:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":38:37)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":38:13)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":38:21)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":38:27)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":38:28)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":38:34)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":38:33)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":39:24)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":39:9)
#loc36 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":40:24)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":40:9)
#loc39 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":43:21)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":43:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":44:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":44:10)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":94:1)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":98:1)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":96:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":96:14)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":97:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":97:14)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":24:1)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":24:26)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":60:19)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":52:1)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":73:1)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":54:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":54:21)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":56:12)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":56:5)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":57:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":69:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":57:8)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":58:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":61:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":63:5)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":60:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":65:33)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":65:40)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":65:52)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":65:53)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":65:9)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":66:9)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":66:37)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":66:13)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":66:21)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":66:27)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":66:28)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":66:34)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":66:33)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":67:24)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":67:9)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":68:24)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":68:9)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":71:21)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":71:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":72:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":72:10)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":76:1)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":92:1)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":78:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":78:21)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":80:12)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":80:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":81:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":88:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":81:8)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":82:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":84:33)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":84:40)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":84:52)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":84:53)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":84:9)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":85:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":85:37)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":85:13)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":85:21)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":85:27)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":85:28)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":85:34)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":85:33)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":86:24)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":86:9)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":87:24)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":87:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":90:21)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":90:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":91:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_05.c":91:10)
#loc120 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc3, #loc4])
#loc122 = loc(fused[#loc5, #loc6])
#loc123 = loc(fused[#loc7, #loc8])
#loc124 = loc(fused[#loc9, #loc10])
#loc125 = loc(fused[#loc11, #loc12])
#loc126 = loc(fused[#loc13, #loc14])
#loc127 = loc(fused[#loc16, #loc15])
#loc128 = loc(fused[#loc17, #loc18])
#loc129 = loc(fused[#loc20, #loc18])
#loc130 = loc(fused[#loc22, #loc23])
#loc131 = loc(fused[#loc21, #loc24])
#loc132 = loc(fused[#loc25, #loc24])
#loc133 = loc(fused[#loc26, #loc27])
#loc134 = loc(fused[#loc28, #loc29])
#loc135 = loc(fused[#loc30, #loc27])
#loc136 = loc(fused[#loc35, #loc34])
#loc137 = loc(fused[#loc38, #loc37])
#loc138 = loc(fused[#loc44, #loc45])
#loc139 = loc(fused[#loc46, #loc47])
#loc140 = loc(fused[#loc48, #loc49])
#loc141 = loc(fused[#loc50, #loc51])
#loc142 = loc(fused[#loc52, #loc53])
#loc143 = loc(fused[#loc55, #loc56])
#loc144 = loc(fused[#loc57, #loc58])
#loc145 = loc(fused[#loc60, #loc59])
#loc146 = loc(fused[#loc61, #loc62])
#loc147 = loc(fused[#loc64, #loc65, #loc66, #loc62])
#loc148 = loc(fused[#loc69, #loc70])
#loc149 = loc(fused[#loc68, #loc71])
#loc150 = loc(fused[#loc72, #loc71])
#loc151 = loc(fused[#loc73, #loc74])
#loc152 = loc(fused[#loc75, #loc76])
#loc153 = loc(fused[#loc77, #loc74])
#loc154 = loc(fused[#loc82, #loc81])
#loc155 = loc(fused[#loc84, #loc83])
#loc156 = loc(fused[#loc89, #loc90])
#loc157 = loc(fused[#loc91, #loc92])
#loc158 = loc(fused[#loc94, #loc93])
#loc159 = loc(fused[#loc95, #loc96])
#loc160 = loc(fused[#loc98, #loc96])
#loc161 = loc(fused[#loc100, #loc101])
#loc162 = loc(fused[#loc99, #loc102])
#loc163 = loc(fused[#loc103, #loc102])
#loc164 = loc(fused[#loc104, #loc105])
#loc165 = loc(fused[#loc106, #loc107])
#loc166 = loc(fused[#loc108, #loc105])
#loc167 = loc(fused[#loc113, #loc112])
#loc168 = loc(fused[#loc115, #loc114])
