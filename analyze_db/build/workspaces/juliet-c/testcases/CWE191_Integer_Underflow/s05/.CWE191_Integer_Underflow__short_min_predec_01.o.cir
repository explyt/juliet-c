!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_min_predec_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc67)
  cir.func no_proto @CWE191_Integer_Underflow__short_min_predec_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc69)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc7)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc7)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc70)
    %3 = cir.const #cir.int<32767> : !s32i loc(#loc9)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc9)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc9)
    %7 = cir.cast(integral, %6 : !s32i), !s16i loc(#loc9)
    cir.store %7, %0 : !s16i, !cir.ptr<!s16i> loc(#loc71)
    cir.scope {
      %8 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc73)
      %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc15)
      %10 = cir.unary(dec, %9) : !s16i, !s16i loc(#loc15)
      cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc74)
      %11 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc14)
      cir.store %11, %8 : !s16i, !cir.ptr<!s16i> loc(#loc73)
      %12 = cir.load %8 : !cir.ptr<!s16i>, !s16i loc(#loc17)
      %13 = cir.cast(integral, %12 : !s16i), !s32i loc(#loc17)
      cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc18)
    } loc(#loc72)
    cir.return loc(#loc4)
  } loc(#loc68)
  cir.func no_proto @CWE191_Integer_Underflow__short_min_predec_01_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc76)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc21)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc77)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc23)
    cir.return loc(#loc20)
  } loc(#loc75)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc79)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc29)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc80)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc31)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc32)
    %5 = cir.cast(integral, %4 : !s32i), !s16i loc(#loc32)
    cir.store %5, %0 : !s16i, !cir.ptr<!s16i> loc(#loc81)
    cir.scope {
      %6 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc83)
      %7 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc38)
      %8 = cir.unary(dec, %7) : !s16i, !s16i loc(#loc38)
      cir.store %8, %0 : !s16i, !cir.ptr<!s16i> loc(#loc84)
      %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc37)
      cir.store %9, %6 : !s16i, !cir.ptr<!s16i> loc(#loc83)
      %10 = cir.load %6 : !cir.ptr<!s16i>, !s16i loc(#loc40)
      %11 = cir.cast(integral, %10 : !s16i), !s32i loc(#loc40)
      cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc41)
    } loc(#loc82)
    cir.return loc(#loc26)
  } loc(#loc78)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc44)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc87)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc49)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc88)
    %3 = cir.const #cir.int<32767> : !s32i loc(#loc51)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc51)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %6 = cir.binop(sub, %4, %5) nsw : !s32i loc(#loc51)
    %7 = cir.cast(integral, %6 : !s32i), !s16i loc(#loc51)
    cir.store %7, %0 : !s16i, !cir.ptr<!s16i> loc(#loc89)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc55)
      %9 = cir.cast(integral, %8 : !s16i), !s32i loc(#loc55)
      %10 = cir.const #cir.int<32767> : !s32i loc(#loc56)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc56)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc56)
      %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc56)
      %14 = cir.cmp(gt, %9, %13) : !s32i, !cir.bool loc(#loc91)
      cir.if %14 {
        %15 = cir.alloca !s16i, !cir.ptr<!s16i>, ["result", init] {alignment = 2 : i64} loc(#loc93)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc62)
        %17 = cir.unary(dec, %16) : !s16i, !s16i loc(#loc62)
        cir.store %17, %0 : !s16i, !cir.ptr<!s16i> loc(#loc94)
        %18 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc61)
        cir.store %18, %15 : !s16i, !cir.ptr<!s16i> loc(#loc93)
        %19 = cir.load %15 : !cir.ptr<!s16i>, !s16i loc(#loc64)
        %20 = cir.cast(integral, %19 : !s16i), !s32i loc(#loc64)
        cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc65)
      } else {
        %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc44)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc44)
        cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc66)
      } loc(#loc92)
    } loc(#loc90)
    cir.return loc(#loc46)
  } loc(#loc86)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__short_min_predec_01.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":22:1)
#loc4 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":34:1)
#loc5 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":24:5)
#loc6 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":24:11)
#loc7 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":25:12)
#loc8 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":25:5)
#loc9 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":27:12)
#loc10 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":27:5)
#loc11 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":28:5)
#loc12 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":33:5)
#loc13 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":31:9)
#loc14 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":31:24)
#loc15 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":30:9)
#loc16 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":30:11)
#loc17 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":32:22)
#loc18 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":32:9)
#loc19 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":75:1)
#loc20 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":79:1)
#loc21 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":77:5)
#loc22 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":77:13)
#loc23 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":78:5)
#loc24 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":78:13)
#loc25 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":41:1)
#loc26 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":53:1)
#loc27 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":43:5)
#loc28 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":43:11)
#loc29 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":44:12)
#loc30 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":44:5)
#loc31 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":46:13)
#loc32 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":46:12)
#loc33 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":46:5)
#loc34 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":47:5)
#loc35 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":52:5)
#loc36 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":50:9)
#loc37 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":50:24)
#loc38 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":49:9)
#loc39 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":49:11)
#loc40 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":51:22)
#loc41 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":51:9)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc43 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc44 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":71:19)
#loc45 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":56:1)
#loc46 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":73:1)
#loc47 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":58:5)
#loc48 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":58:11)
#loc49 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":59:12)
#loc50 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":59:5)
#loc51 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":61:12)
#loc52 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":61:5)
#loc53 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":63:5)
#loc54 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":72:5)
#loc55 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":63:9)
#loc56 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":63:16)
#loc57 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":64:5)
#loc58 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":68:5)
#loc59 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":70:5)
#loc60 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":66:9)
#loc61 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":66:24)
#loc62 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":65:9)
#loc63 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":65:11)
#loc64 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":67:22)
#loc65 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":67:9)
#loc66 = loc("CWE191_Integer_Underflow__short_min_predec_01.c":71:9)
#loc67 = loc(fused[#loc1, #loc2])
#loc68 = loc(fused[#loc3, #loc4])
#loc69 = loc(fused[#loc5, #loc6])
#loc70 = loc(fused[#loc8, #loc7])
#loc71 = loc(fused[#loc10, #loc9])
#loc72 = loc(fused[#loc11, #loc12])
#loc73 = loc(fused[#loc13, #loc14])
#loc74 = loc(fused[#loc15, #loc16])
#loc75 = loc(fused[#loc19, #loc20])
#loc76 = loc(fused[#loc21, #loc22])
#loc77 = loc(fused[#loc23, #loc24])
#loc78 = loc(fused[#loc25, #loc26])
#loc79 = loc(fused[#loc27, #loc28])
#loc80 = loc(fused[#loc30, #loc29])
#loc81 = loc(fused[#loc33, #loc31])
#loc82 = loc(fused[#loc34, #loc35])
#loc83 = loc(fused[#loc36, #loc37])
#loc84 = loc(fused[#loc38, #loc39])
#loc85 = loc(fused[#loc42, #loc43])
#loc86 = loc(fused[#loc45, #loc46])
#loc87 = loc(fused[#loc47, #loc48])
#loc88 = loc(fused[#loc50, #loc49])
#loc89 = loc(fused[#loc52, #loc51])
#loc90 = loc(fused[#loc53, #loc54])
#loc91 = loc(fused[#loc55, #loc56])
#loc92 = loc(fused[#loc57, #loc58, #loc59, #loc54])
#loc93 = loc(fused[#loc60, #loc61])
#loc94 = loc(fused[#loc62, #loc63])
