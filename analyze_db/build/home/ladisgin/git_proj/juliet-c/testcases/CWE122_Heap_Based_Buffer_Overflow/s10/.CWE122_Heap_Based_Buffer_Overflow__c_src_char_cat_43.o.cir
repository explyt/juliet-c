!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":26:23)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":26:31)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":53:27)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":53:35)
#loc109 = loc(fused[#loc7, #loc8])
#loc127 = loc(fused[#loc59, #loc60])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc106)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc107)
  cir.func internal private @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43L9badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc109)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc9)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc10)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc10)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc10)
    %4 = cir.const #cir.int<65> : !s8i loc(#loc11)
    %5 = cir.cast(integral, %4 : !s8i), !s32i loc(#loc11)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc12)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc12)
    cir.libc.memset %9 bytes from %3 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc110)
    %10 = cir.const #cir.int<0> : !s8i loc(#loc16)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc17)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc18)
    %16 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc20)
    cir.store %10, %16 : !s8i, !cir.ptr<!s8i> loc(#loc111)
    cir.return loc(#loc6)
  } loc(#loc108)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc112)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc113)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc114)
  cir.func @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc116)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc117)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc33)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc34)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc118)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc119)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc33)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc120)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    cir.br ^bb1 loc(#loc122)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc42)
    %11 = cir.cmp(eq, %9, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc123)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc124)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc44)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc46)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc44)
    cir.br ^bb3 loc(#loc40)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc40)
  ^bb4:  // pred: ^bb3
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43L9badSourceERPc(%1) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc47)
    cir.br ^bb5 loc(#loc125)
  ^bb5:  // pred: ^bb4
    %15 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc116)
    cir.store %15, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc116)
    %16 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc50)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc51)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    %19 = cir.call @strcat(%17, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc50)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc55)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
    cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc55)
    cir.br ^bb6 loc(#loc49)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc28)
  } loc(#loc115)
  cir.func internal private @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43L13goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc59, #loc60])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc127)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc61)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc62)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
    %4 = cir.const #cir.int<65> : !s8i loc(#loc63)
    %5 = cir.cast(integral, %4 : !s8i), !s32i loc(#loc63)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc64)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc64)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc64)
    cir.libc.memset %9 bytes from %3 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc128)
    %10 = cir.const #cir.int<0> : !s8i loc(#loc68)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc69)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    %13 = cir.const #cir.int<50> : !s32i loc(#loc70)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc70)
    %16 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc72)
    cir.store %10, %16 : !s8i, !cir.ptr<!s8i> loc(#loc129)
    cir.return loc(#loc58)
  } loc(#loc126)
  cir.func internal private @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc79)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc80)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc80)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc133)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc134)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc79)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc135)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    cir.br ^bb1 loc(#loc137)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc88)
    %11 = cir.cmp(eq, %9, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc138)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc139)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc90)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc92)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc90)
    cir.br ^bb3 loc(#loc86)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc86)
  ^bb4:  // pred: ^bb3
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43L13goodG2BSourceERPc(%1) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc93)
    cir.br ^bb5 loc(#loc140)
  ^bb5:  // pred: ^bb4
    %15 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc131)
    cir.store %15, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc131)
    %16 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc96)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc97)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %19 = cir.call @strcat(%17, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc96)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc101)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
    cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc101)
    cir.br ^bb6 loc(#loc95)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc74)
  } loc(#loc130)
  cir.func @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43L7goodG2BEv() : () -> () loc(#loc105)
    cir.return loc(#loc104)
  } loc(#loc141)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":26:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":31:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":27:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":29:12)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":29:18)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":29:23)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":29:27)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":29:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":29:28)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":30:19)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":30:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":30:10)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":30:14)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":30:15)
#loc21 = loc("/usr/include/string.h":149:1)
#loc22 = loc("/usr/include/string.h":150:14)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("/usr/include/stdlib.h":687:1)
#loc26 = loc("/usr/include/stdlib.h":687:32)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":33:1)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":46:1)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":40:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":40:25)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":35:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":35:12)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":36:20)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":36:27)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":36:31)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":36:42)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":36:43)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":36:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":37:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":37:33)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":37:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":37:17)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":37:23)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":37:24)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":37:30)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":37:29)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":38:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":39:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":45:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":42:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":42:16)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":42:22)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":43:19)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":43:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":44:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":44:14)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":53:1)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":58:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":54:1)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":56:12)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":56:18)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":56:23)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":56:26)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":56:5)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":56:27)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":57:18)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":57:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":57:10)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":57:13)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":57:14)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":60:1)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":73:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":67:9)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":67:25)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":62:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":62:12)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":63:20)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":63:27)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":63:31)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":63:42)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":63:43)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":63:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":64:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":64:33)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":64:9)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":64:17)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":64:23)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":64:24)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":64:30)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":64:29)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":65:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":66:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":72:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":69:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":69:16)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":69:22)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":70:19)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":70:9)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":71:9)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":71:14)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":75:1)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":78:1)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_src_char_cat_43.cpp":77:5)
#loc106 = loc(fused[#loc1, #loc2])
#loc107 = loc(fused[#loc3, #loc4])
#loc108 = loc(fused[#loc5, #loc6])
#loc110 = loc(fused[#loc14, #loc15])
#loc111 = loc(fused[#loc17, #loc16])
#loc112 = loc(fused[#loc21, #loc22])
#loc113 = loc(fused[#loc23, #loc24])
#loc114 = loc(fused[#loc25, #loc26])
#loc115 = loc(fused[#loc27, #loc28])
#loc116 = loc(fused[#loc29, #loc30])
#loc117 = loc(fused[#loc31, #loc32])
#loc118 = loc(fused[#loc35, #loc36])
#loc119 = loc(fused[#loc34, #loc36])
#loc120 = loc(fused[#loc33, #loc37])
#loc121 = loc(fused[#loc38, #loc37])
#loc122 = loc(fused[#loc39, #loc40])
#loc123 = loc(fused[#loc41, #loc42])
#loc124 = loc(fused[#loc43, #loc40])
#loc125 = loc(fused[#loc48, #loc49])
#loc126 = loc(fused[#loc57, #loc58])
#loc128 = loc(fused[#loc66, #loc67])
#loc129 = loc(fused[#loc69, #loc68])
#loc130 = loc(fused[#loc73, #loc74])
#loc131 = loc(fused[#loc75, #loc76])
#loc132 = loc(fused[#loc77, #loc78])
#loc133 = loc(fused[#loc81, #loc82])
#loc134 = loc(fused[#loc80, #loc82])
#loc135 = loc(fused[#loc79, #loc83])
#loc136 = loc(fused[#loc84, #loc83])
#loc137 = loc(fused[#loc85, #loc86])
#loc138 = loc(fused[#loc87, #loc88])
#loc139 = loc(fused[#loc89, #loc86])
#loc140 = loc(fused[#loc94, #loc95])
#loc141 = loc(fused[#loc103, #loc104])
