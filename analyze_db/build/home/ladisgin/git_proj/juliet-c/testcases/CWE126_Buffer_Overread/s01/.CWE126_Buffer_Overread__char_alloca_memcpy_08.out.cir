!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":142:10)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":142:14)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":142:20)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":142:32)
#loc274 = loc(fused[#loc86, #loc87])
#loc275 = loc(fused[#loc88, #loc89])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memcpy_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc246)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc247)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memcpy_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc249)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc250)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc251)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc12)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc12)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc12)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc252)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc251)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc14)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc14)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc252)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc15)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc16)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc17)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc17)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc17)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc253)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc21)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc23)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc23)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc254)
    %32 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
    %34 = cir.const #cir.int<65> : !s32i loc(#loc27)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc28)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc28)
    cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc255)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc32)
    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc34)
    %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc256)
    cir.br ^bb1 loc(#loc257)
  ^bb1:  // pred: ^bb0
    %46 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc258)
    %47 = cir.call %46() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc39)
    %48 = cir.cast(int_to_bool, %47 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %48 ^bb2, ^bb3 loc(#loc259)
  ^bb2:  // pred: ^bb1
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    cir.store %49, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc260)
    cir.br ^bb3 loc(#loc38)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc38)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc261)
  ^bb5:  // pred: ^bb4
    %50 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc46)
    %52 = cir.const #cir.int<67> : !s32i loc(#loc47)
    %53 = cir.const #cir.int<100> : !s32i loc(#loc48)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %55 = cir.binop(sub, %53, %54) nsw : !s32i loc(#loc48)
    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc48)
    cir.libc.memset %56 bytes from %51 set to %52 : !cir.ptr<!void>, !s32i, !u64i loc(#loc262)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %58 = cir.cast(integral, %57 : !s32i), !s8i loc(#loc52)
    %59 = cir.const #cir.int<100> : !s32i loc(#loc53)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %61 = cir.binop(sub, %59, %60) nsw : !s32i loc(#loc53)
    %62 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
    %63 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %61 : !s32i), !cir.ptr<!s8i> loc(#loc55)
    cir.store %58, %63 : !s8i, !cir.ptr<!s8i> loc(#loc263)
    %64 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc56)
    %65 = cir.cast(bitcast, %64 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
    %66 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %67 = cir.cast(bitcast, %66 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
    %68 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc58)
    %69 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
    %70 = cir.call @strlen(%69) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc58)
    %71 = cir.const #cir.int<1> : !u64i loc(#loc264)
    %72 = cir.binop(mul, %70, %71) : !u64i loc(#loc265)
    cir.libc.memcpy %72 bytes from %67 to %65 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc266)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc64)
    %75 = cir.const #cir.int<100> : !s32i loc(#loc65)
    %76 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %77 = cir.binop(sub, %75, %76) nsw : !s32i loc(#loc65)
    %78 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
    %79 = cir.ptr_stride(%78 : !cir.ptr<!s8i>, %77 : !s32i), !cir.ptr<!s8i> loc(#loc67)
    cir.store %74, %79 : !s8i, !cir.ptr<!s8i> loc(#loc267)
    %80 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%80) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    cir.br ^bb6 loc(#loc45)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc248)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memcpy_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc269)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc72)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc270)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    cir.return loc(#loc71)
  } loc(#loc268)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc271)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc272)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc83)
  cir.func @main(%arg0: !s32i loc(fused[#loc86, #loc87]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc88, #loc89])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc274)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc275)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc85)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc90)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc91)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc92)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc92)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc93)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc80)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %8 = cir.get_global @CWE126_Buffer_Overread__char_alloca_memcpy_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc276)
    cir.call @CWE126_Buffer_Overread__char_alloca_memcpy_08_good() : () -> () loc(#loc95)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc81)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc82)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %13 = cir.get_global @CWE126_Buffer_Overread__char_alloca_memcpy_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc277)
    cir.call @CWE126_Buffer_Overread__char_alloca_memcpy_08_bad() : () -> () loc(#loc99)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc83)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc102)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc278)
    cir.return %17 : !s32i loc(#loc278)
  } loc(#loc273)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc105)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc106)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc280)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc280)
    cir.return %2 : !s32i loc(#loc280)
  } loc(#loc279)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc108)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc282)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc283)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc284)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc116)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc116)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc116)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc116)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc116)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc285)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc116)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc116)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc284)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc118)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc118)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc118)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc118)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc118)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc118)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc118)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc285)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc120)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc121)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc121)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc121)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc286)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc125)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc127)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc127)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc129)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc287)
    %32 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
    %34 = cir.const #cir.int<65> : !s32i loc(#loc131)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc132)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc132)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc132)
    cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc288)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc136)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc136)
    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc138)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc139)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc138)
    %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc140)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc289)
    cir.br ^bb1 loc(#loc290)
  ^bb1:  // pred: ^bb0
    %46 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc291)
    %47 = cir.call %46() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc143)
    %48 = cir.cast(int_to_bool, %47 : !s32i), !cir.bool loc(#loc143)
    cir.brcond %48 ^bb2, ^bb3 loc(#loc292)
  ^bb2:  // pred: ^bb1
    %49 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc108)
    %50 = cir.cast(array_to_ptrdecay, %49 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%50) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    cir.br ^bb4 loc(#loc146)
  ^bb3:  // pred: ^bb1
    %51 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
    cir.store %51, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc293)
    cir.br ^bb4 loc(#loc142)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc142)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc294)
  ^bb6:  // pred: ^bb5
    %52 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc153)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc153)
    %54 = cir.const #cir.int<67> : !s32i loc(#loc154)
    %55 = cir.const #cir.int<100> : !s32i loc(#loc155)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %57 = cir.binop(sub, %55, %56) nsw : !s32i loc(#loc155)
    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc155)
    cir.libc.memset %58 bytes from %53 set to %54 : !cir.ptr<!void>, !s32i, !u64i loc(#loc295)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc159)
    %60 = cir.cast(integral, %59 : !s32i), !s8i loc(#loc159)
    %61 = cir.const #cir.int<100> : !s32i loc(#loc160)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc161)
    %63 = cir.binop(sub, %61, %62) nsw : !s32i loc(#loc160)
    %64 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc162)
    %65 = cir.ptr_stride(%64 : !cir.ptr<!s8i>, %63 : !s32i), !cir.ptr<!s8i> loc(#loc162)
    cir.store %60, %65 : !s8i, !cir.ptr<!s8i> loc(#loc296)
    %66 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc163)
    %67 = cir.cast(bitcast, %66 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc163)
    %68 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
    %69 = cir.cast(bitcast, %68 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc164)
    %70 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc165)
    %71 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
    %72 = cir.call @strlen(%71) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc165)
    %73 = cir.const #cir.int<1> : !u64i loc(#loc297)
    %74 = cir.binop(mul, %72, %73) : !u64i loc(#loc298)
    cir.libc.memcpy %74 bytes from %69 to %67 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc299)
    %75 = cir.const #cir.int<0> : !s32i loc(#loc171)
    %76 = cir.cast(integral, %75 : !s32i), !s8i loc(#loc171)
    %77 = cir.const #cir.int<100> : !s32i loc(#loc172)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc173)
    %79 = cir.binop(sub, %77, %78) nsw : !s32i loc(#loc172)
    %80 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc174)
    %81 = cir.ptr_stride(%80 : !cir.ptr<!s8i>, %79 : !s32i), !cir.ptr<!s8i> loc(#loc174)
    cir.store %76, %81 : !s8i, !cir.ptr<!s8i> loc(#loc300)
    %82 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%82) : (!cir.ptr<!s8i>) -> () loc(#loc176)
    cir.br ^bb7 loc(#loc152)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc110)
  } loc(#loc281)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc178)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc179)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc302)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc302)
    cir.return %2 : !s32i loc(#loc302)
  } loc(#loc301)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc304)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc305)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc306)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc188)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc188)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc188)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc188)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc188)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc307)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc188)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc188)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc306)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc190)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc190)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc190)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc190)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc190)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc190)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc190)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc307)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc191)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc192)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc193)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc194)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc193)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc193)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc308)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc197)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc197)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc199)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc200)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc199)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc201)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc309)
    %32 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc202)
    %34 = cir.const #cir.int<65> : !s32i loc(#loc203)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc204)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc205)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc204)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc204)
    cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc310)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc208)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc208)
    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc210)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc211)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc210)
    %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc212)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc311)
    cir.br ^bb1 loc(#loc312)
  ^bb1:  // pred: ^bb0
    %46 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc313)
    %47 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc215)
    %48 = cir.cast(int_to_bool, %47 : !s32i), !cir.bool loc(#loc215)
    cir.brcond %48 ^bb2, ^bb3 loc(#loc314)
  ^bb2:  // pred: ^bb1
    %49 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc218)
    cir.store %49, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc315)
    cir.br ^bb3 loc(#loc214)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc214)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc316)
  ^bb5:  // pred: ^bb4
    %50 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc222)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc222)
    %52 = cir.const #cir.int<67> : !s32i loc(#loc223)
    %53 = cir.const #cir.int<100> : !s32i loc(#loc224)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc225)
    %55 = cir.binop(sub, %53, %54) nsw : !s32i loc(#loc224)
    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc224)
    cir.libc.memset %56 bytes from %51 set to %52 : !cir.ptr<!void>, !s32i, !u64i loc(#loc317)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc228)
    %58 = cir.cast(integral, %57 : !s32i), !s8i loc(#loc228)
    %59 = cir.const #cir.int<100> : !s32i loc(#loc229)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc230)
    %61 = cir.binop(sub, %59, %60) nsw : !s32i loc(#loc229)
    %62 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc231)
    %63 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %61 : !s32i), !cir.ptr<!s8i> loc(#loc231)
    cir.store %58, %63 : !s8i, !cir.ptr<!s8i> loc(#loc318)
    %64 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc232)
    %65 = cir.cast(bitcast, %64 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc232)
    %66 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc233)
    %67 = cir.cast(bitcast, %66 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc233)
    %68 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc234)
    %69 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc235)
    %70 = cir.call @strlen(%69) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc234)
    %71 = cir.const #cir.int<1> : !u64i loc(#loc319)
    %72 = cir.binop(mul, %70, %71) : !u64i loc(#loc320)
    cir.libc.memcpy %72 bytes from %67 to %65 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc321)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc240)
    %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc240)
    %75 = cir.const #cir.int<100> : !s32i loc(#loc241)
    %76 = cir.const #cir.int<1> : !s32i loc(#loc242)
    %77 = cir.binop(sub, %75, %76) nsw : !s32i loc(#loc241)
    %78 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc243)
    %79 = cir.ptr_stride(%78 : !cir.ptr<!s8i>, %77 : !s32i), !cir.ptr<!s8i> loc(#loc243)
    cir.store %74, %79 : !s8i, !cir.ptr<!s8i> loc(#loc322)
    %80 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc244)
    cir.call @printLine(%80) : (!cir.ptr<!s8i>) -> () loc(#loc245)
    cir.br ^bb6 loc(#loc221)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc182)
  } loc(#loc303)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memcpy_08.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":37:1)
#loc6 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":61:1)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":52:9)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":52:22)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":39:5)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":39:12)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":40:5)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":40:36)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":41:5)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":41:37)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":42:12)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":42:27)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":42:32)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":42:35)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":42:5)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":42:36)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":43:27)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":43:5)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":43:19)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":43:22)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":43:23)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":44:12)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":44:28)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":44:33)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":44:37)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":44:5)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":44:38)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":45:29)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":45:5)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":45:20)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":45:24)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":45:25)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":46:5)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":50:5)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":46:8)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":46:26)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":47:5)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":49:16)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":49:9)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":51:5)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":60:5)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":53:16)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":53:22)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":53:27)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":53:31)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":53:9)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":53:32)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":54:23)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":54:14)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":54:18)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":54:9)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":57:16)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":57:22)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":57:28)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":57:35)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":57:41)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":57:52)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":57:9)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":57:53)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":58:23)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":58:14)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":58:18)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":58:9)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":59:19)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":59:9)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":126:1)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":130:1)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":128:5)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":128:14)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":129:5)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":129:14)
#loc76 = loc("/usr/include/stdlib.h":575:1)
#loc77 = loc("/usr/include/stdlib.h":575:41)
#loc78 = loc("/usr/include/time.h":76:1)
#loc79 = loc("/usr/include/time.h":76:38)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":147:15)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":149:15)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":152:15)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":154:15)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":142:1)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":157:1)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":143:1)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":145:27)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":145:22)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":145:5)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":147:5)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":148:5)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":148:56)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":149:5)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":152:5)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":153:5)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":153:55)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":154:5)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":156:12)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":156:5)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":25:1)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":28:1)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":27:12)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":27:5)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":80:19)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":68:1)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":97:1)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":88:9)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":88:22)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":70:5)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":70:12)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":71:5)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":71:36)
#loc117 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":72:5)
#loc118 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":72:37)
#loc119 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":73:12)
#loc120 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":73:27)
#loc121 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":73:32)
#loc122 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":73:35)
#loc123 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":73:5)
#loc124 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":73:36)
#loc125 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":74:27)
#loc126 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":74:5)
#loc127 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":74:19)
#loc128 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":74:22)
#loc129 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":74:23)
#loc130 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":75:12)
#loc131 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":75:28)
#loc132 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":75:33)
#loc133 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":75:37)
#loc134 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":75:5)
#loc135 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":75:38)
#loc136 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":76:29)
#loc137 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":76:5)
#loc138 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":76:20)
#loc139 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":76:24)
#loc140 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":76:25)
#loc141 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":77:5)
#loc142 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":86:5)
#loc143 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":77:8)
#loc144 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":77:27)
#loc145 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":78:5)
#loc146 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":81:5)
#loc147 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":83:5)
#loc148 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":80:9)
#loc149 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":85:16)
#loc150 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":85:9)
#loc151 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":87:5)
#loc152 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":96:5)
#loc153 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":89:16)
#loc154 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":89:22)
#loc155 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":89:27)
#loc156 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":89:31)
#loc157 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":89:9)
#loc158 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":89:32)
#loc159 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":90:23)
#loc160 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":90:14)
#loc161 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":90:18)
#loc162 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":90:9)
#loc163 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":93:16)
#loc164 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":93:22)
#loc165 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":93:28)
#loc166 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":93:35)
#loc167 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":93:41)
#loc168 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":93:52)
#loc169 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":93:9)
#loc170 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":93:53)
#loc171 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":94:23)
#loc172 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":94:14)
#loc173 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":94:18)
#loc174 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":94:9)
#loc175 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":95:19)
#loc176 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":95:9)
#loc177 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":30:1)
#loc178 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":33:1)
#loc179 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":32:12)
#loc180 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":32:5)
#loc181 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":100:1)
#loc182 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":124:1)
#loc183 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":115:9)
#loc184 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":115:22)
#loc185 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":102:5)
#loc186 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":102:12)
#loc187 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":103:5)
#loc188 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":103:36)
#loc189 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":104:5)
#loc190 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":104:37)
#loc191 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":105:12)
#loc192 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":105:27)
#loc193 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":105:32)
#loc194 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":105:35)
#loc195 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":105:5)
#loc196 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":105:36)
#loc197 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":106:27)
#loc198 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":106:5)
#loc199 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":106:19)
#loc200 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":106:22)
#loc201 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":106:23)
#loc202 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":107:12)
#loc203 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":107:28)
#loc204 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":107:33)
#loc205 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":107:37)
#loc206 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":107:5)
#loc207 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":107:38)
#loc208 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":108:29)
#loc209 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":108:5)
#loc210 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":108:20)
#loc211 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":108:24)
#loc212 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":108:25)
#loc213 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":109:5)
#loc214 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":113:5)
#loc215 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":109:8)
#loc216 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":109:26)
#loc217 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":110:5)
#loc218 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":112:16)
#loc219 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":112:9)
#loc220 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":114:5)
#loc221 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":123:5)
#loc222 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":116:16)
#loc223 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":116:22)
#loc224 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":116:27)
#loc225 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":116:31)
#loc226 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":116:9)
#loc227 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":116:32)
#loc228 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":117:23)
#loc229 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":117:14)
#loc230 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":117:18)
#loc231 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":117:9)
#loc232 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":120:16)
#loc233 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":120:22)
#loc234 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":120:28)
#loc235 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":120:35)
#loc236 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":120:41)
#loc237 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":120:52)
#loc238 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":120:9)
#loc239 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":120:53)
#loc240 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":121:23)
#loc241 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":121:14)
#loc242 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":121:18)
#loc243 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":121:9)
#loc244 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":122:19)
#loc245 = loc("CWE126_Buffer_Overread__char_alloca_memcpy_08.c":122:9)
#loc246 = loc(fused[#loc1, #loc2])
#loc247 = loc(fused[#loc3, #loc4])
#loc248 = loc(fused[#loc5, #loc6])
#loc249 = loc(fused[#loc7, #loc8])
#loc250 = loc(fused[#loc9, #loc10])
#loc251 = loc(fused[#loc11, #loc12])
#loc252 = loc(fused[#loc13, #loc14])
#loc253 = loc(fused[#loc19, #loc20])
#loc254 = loc(fused[#loc22, #loc21])
#loc255 = loc(fused[#loc30, #loc31])
#loc256 = loc(fused[#loc33, #loc32])
#loc257 = loc(fused[#loc37, #loc38])
#loc258 = loc(fused[#loc39, #loc40])
#loc259 = loc(fused[#loc41, #loc38])
#loc260 = loc(fused[#loc43, #loc42])
#loc261 = loc(fused[#loc44, #loc45])
#loc262 = loc(fused[#loc50, #loc51])
#loc263 = loc(fused[#loc55, #loc52])
#loc264 = loc(fused[#loc60, #loc61])
#loc265 = loc(fused[#loc58, #loc61])
#loc266 = loc(fused[#loc62, #loc63])
#loc267 = loc(fused[#loc67, #loc64])
#loc268 = loc(fused[#loc70, #loc71])
#loc269 = loc(fused[#loc72, #loc73])
#loc270 = loc(fused[#loc74, #loc75])
#loc271 = loc(fused[#loc76, #loc77])
#loc272 = loc(fused[#loc78, #loc79])
#loc273 = loc(fused[#loc84, #loc85])
#loc276 = loc(fused[#loc95, #loc96])
#loc277 = loc(fused[#loc99, #loc100])
#loc278 = loc(fused[#loc103, #loc102])
#loc279 = loc(fused[#loc104, #loc105])
#loc280 = loc(fused[#loc107, #loc106])
#loc281 = loc(fused[#loc109, #loc110])
#loc282 = loc(fused[#loc111, #loc112])
#loc283 = loc(fused[#loc113, #loc114])
#loc284 = loc(fused[#loc115, #loc116])
#loc285 = loc(fused[#loc117, #loc118])
#loc286 = loc(fused[#loc123, #loc124])
#loc287 = loc(fused[#loc126, #loc125])
#loc288 = loc(fused[#loc134, #loc135])
#loc289 = loc(fused[#loc137, #loc136])
#loc290 = loc(fused[#loc141, #loc142])
#loc291 = loc(fused[#loc143, #loc144])
#loc292 = loc(fused[#loc145, #loc146, #loc147, #loc142])
#loc293 = loc(fused[#loc150, #loc149])
#loc294 = loc(fused[#loc151, #loc152])
#loc295 = loc(fused[#loc157, #loc158])
#loc296 = loc(fused[#loc162, #loc159])
#loc297 = loc(fused[#loc167, #loc168])
#loc298 = loc(fused[#loc165, #loc168])
#loc299 = loc(fused[#loc169, #loc170])
#loc300 = loc(fused[#loc174, #loc171])
#loc301 = loc(fused[#loc177, #loc178])
#loc302 = loc(fused[#loc180, #loc179])
#loc303 = loc(fused[#loc181, #loc182])
#loc304 = loc(fused[#loc183, #loc184])
#loc305 = loc(fused[#loc185, #loc186])
#loc306 = loc(fused[#loc187, #loc188])
#loc307 = loc(fused[#loc189, #loc190])
#loc308 = loc(fused[#loc195, #loc196])
#loc309 = loc(fused[#loc198, #loc197])
#loc310 = loc(fused[#loc206, #loc207])
#loc311 = loc(fused[#loc209, #loc208])
#loc312 = loc(fused[#loc213, #loc214])
#loc313 = loc(fused[#loc215, #loc216])
#loc314 = loc(fused[#loc217, #loc214])
#loc315 = loc(fused[#loc219, #loc218])
#loc316 = loc(fused[#loc220, #loc221])
#loc317 = loc(fused[#loc226, #loc227])
#loc318 = loc(fused[#loc231, #loc228])
#loc319 = loc(fused[#loc236, #loc237])
#loc320 = loc(fused[#loc234, #loc237])
#loc321 = loc(fused[#loc238, #loc239])
#loc322 = loc(fused[#loc243, #loc240])
