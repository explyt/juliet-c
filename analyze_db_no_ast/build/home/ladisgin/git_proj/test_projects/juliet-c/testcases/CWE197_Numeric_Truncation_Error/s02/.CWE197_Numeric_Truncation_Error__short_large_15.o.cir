!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_large_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc80)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private  @printHexCharLine(!s8i) loc(#loc81)
  cir.func no_proto  @CWE197_Numeric_Truncation_Error__short_large_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc83)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc10)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc11)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc11)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc84)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc15)
      cir.switch (%4 : !s32i) [
      case (equal, 6) {
        %5 = cir.const #cir.int<127> : !s32i loc(#loc16)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc17)
        %7 = cir.binop(add, %5, %6) nsw : !s32i loc(#loc16)
        %8 = cir.cast(integral, %7 : !s32i), !s16i loc(#loc16)
        cir.store %8, %0 : !s16i, !cir.ptr<!s16i> loc(#loc86)
        cir.break loc(#loc19)
      },
      case (default) {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc20)
        cir.break loc(#loc21)
      }
      ] loc(#loc13)
    } loc(#loc85)
    cir.scope {
      %4 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc88)
      %5 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc25)
      %6 = cir.cast(integral, %5 : !s16i), !s8i loc(#loc25)
      cir.store %6, %4 : !s8i, !cir.ptr<!s8i> loc(#loc88)
      %7 = cir.load %4 : !cir.ptr<!s8i>, !s8i loc(#loc26)
      cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc27)
    } loc(#loc87)
    cir.return loc(#loc7)
  } loc(#loc82)
  cir.func no_proto  @CWE197_Numeric_Truncation_Error__short_large_15_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc90)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc91)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    cir.return loc(#loc29)
  } loc(#loc89)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc93)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc39)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc39)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc94)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc43)
      cir.switch (%4 : !s32i) [
      case (equal, 6) {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc44)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc44)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc45)
        cir.break loc(#loc46)
      },
      case (default) {
        %5 = cir.const #cir.int<127> : !s32i loc(#loc47)
        %6 = cir.const #cir.int<5> : !s32i loc(#loc48)
        %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc47)
        %8 = cir.cast(integral, %7 : !s32i), !s16i loc(#loc47)
        cir.store %8, %0 : !s16i, !cir.ptr<!s16i> loc(#loc96)
        cir.break loc(#loc50)
      }
      ] loc(#loc41)
    } loc(#loc95)
    cir.scope {
      %4 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc98)
      %5 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc54)
      %6 = cir.cast(integral, %5 : !s16i), !s8i loc(#loc54)
      cir.store %6, %4 : !s8i, !cir.ptr<!s8i> loc(#loc98)
      %7 = cir.load %4 : !cir.ptr<!s8i>, !s8i loc(#loc55)
      cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc56)
    } loc(#loc97)
    cir.return loc(#loc35)
  } loc(#loc92)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc100)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc62)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc62)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc101)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc66)
      cir.switch (%4 : !s32i) [
      case (equal, 6) {
        %5 = cir.const #cir.int<127> : !s32i loc(#loc67)
        %6 = cir.const #cir.int<5> : !s32i loc(#loc68)
        %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc67)
        %8 = cir.cast(integral, %7 : !s32i), !s16i loc(#loc67)
        cir.store %8, %0 : !s16i, !cir.ptr<!s16i> loc(#loc103)
        cir.break loc(#loc70)
      },
      case (default) {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc71)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc71)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc72)
        cir.break loc(#loc73)
      }
      ] loc(#loc64)
    } loc(#loc102)
    cir.scope {
      %4 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc105)
      %5 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc77)
      %6 = cir.cast(integral, %5 : !s16i), !s8i loc(#loc77)
      cir.store %6, %4 : !s8i, !cir.ptr<!s8i> loc(#loc105)
      %7 = cir.load %4 : !cir.ptr<!s8i>, !s8i loc(#loc78)
      cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc79)
    } loc(#loc104)
    cir.return loc(#loc58)
  } loc(#loc99)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_large_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":34:19)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc6 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":21:1)
#loc7 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":42:1)
#loc8 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":23:5)
#loc9 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":23:11)
#loc10 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":25:13)
#loc11 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":25:12)
#loc12 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":25:5)
#loc13 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":26:5)
#loc14 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":36:5)
#loc15 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":26:12)
#loc16 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":30:16)
#loc17 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":30:27)
#loc18 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":30:9)
#loc19 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":31:9)
#loc20 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":34:9)
#loc21 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":35:9)
#loc22 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":37:5)
#loc23 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":41:5)
#loc24 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":39:9)
#loc25 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":39:31)
#loc26 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":40:26)
#loc27 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":40:9)
#loc28 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":96:1)
#loc29 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":100:1)
#loc30 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":98:5)
#loc31 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":98:14)
#loc32 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":99:5)
#loc33 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":99:14)
#loc34 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":49:1)
#loc35 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":70:1)
#loc36 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":51:5)
#loc37 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":51:11)
#loc38 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":53:13)
#loc39 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":53:12)
#loc40 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":53:5)
#loc41 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":54:5)
#loc42 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":64:5)
#loc43 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":54:12)
#loc44 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":58:19)
#loc45 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":58:9)
#loc46 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":59:9)
#loc47 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":62:16)
#loc48 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":62:25)
#loc49 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":62:9)
#loc50 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":63:9)
#loc51 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":65:5)
#loc52 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":69:5)
#loc53 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":67:9)
#loc54 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":67:31)
#loc55 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":68:26)
#loc56 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":68:9)
#loc57 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":73:1)
#loc58 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":94:1)
#loc59 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":75:5)
#loc60 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":75:11)
#loc61 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":77:13)
#loc62 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":77:12)
#loc63 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":77:5)
#loc64 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":78:5)
#loc65 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":88:5)
#loc66 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":78:12)
#loc67 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":82:16)
#loc68 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":82:25)
#loc69 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":82:9)
#loc70 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":83:9)
#loc71 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":86:19)
#loc72 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":86:9)
#loc73 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":87:9)
#loc74 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":89:5)
#loc75 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":93:5)
#loc76 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":91:9)
#loc77 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":91:31)
#loc78 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":92:26)
#loc79 = loc("CWE197_Numeric_Truncation_Error__short_large_15.c":92:9)
#loc80 = loc(fused[#loc1, #loc2])
#loc81 = loc(fused[#loc4, #loc5])
#loc82 = loc(fused[#loc6, #loc7])
#loc83 = loc(fused[#loc8, #loc9])
#loc84 = loc(fused[#loc12, #loc10])
#loc85 = loc(fused[#loc13, #loc14])
#loc86 = loc(fused[#loc18, #loc17])
#loc87 = loc(fused[#loc22, #loc23])
#loc88 = loc(fused[#loc24, #loc25])
#loc89 = loc(fused[#loc28, #loc29])
#loc90 = loc(fused[#loc30, #loc31])
#loc91 = loc(fused[#loc32, #loc33])
#loc92 = loc(fused[#loc34, #loc35])
#loc93 = loc(fused[#loc36, #loc37])
#loc94 = loc(fused[#loc40, #loc38])
#loc95 = loc(fused[#loc41, #loc42])
#loc96 = loc(fused[#loc49, #loc48])
#loc97 = loc(fused[#loc51, #loc52])
#loc98 = loc(fused[#loc53, #loc54])
#loc99 = loc(fused[#loc57, #loc58])
#loc100 = loc(fused[#loc59, #loc60])
#loc101 = loc(fused[#loc63, #loc61])
#loc102 = loc(fused[#loc64, #loc65])
#loc103 = loc(fused[#loc69, #loc68])
#loc104 = loc(fused[#loc74, #loc75])
#loc105 = loc(fused[#loc76, #loc77])
