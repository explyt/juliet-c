!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc16 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":55:75)
#loc17 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":55:85)
#loc103 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":116:79)
#loc104 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":116:89)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc115 = loc(fused[#loc16, #loc17])
#loc149 = loc(fused[#loc103, #loc104])
!ty__linkedList = !cir.struct<struct "_linkedList" {!cir.ptr<!cir.struct<struct "_linkedList">>, !cir.ptr<!cir.struct<struct "_linkedList">>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty__badStruct = !cir.struct<struct "_badStruct" {!ty__linkedList}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE123_Write_What_Where_Condition/CWE123_Write_What_Where_Condition__connect_socket_61b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc108)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc109)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc110)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc111)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc112)
  cir.func private @close(!s32i) -> !s32i loc(#loc113)
  cir.func @CWE123_Write_What_Where_Condition__connect_socket_61b_badSource(%arg0: !ty__badStruct loc(fused[#loc16, #loc17])) -> !ty__badStruct extra(#fn_attr1) {
    %0 = cir.alloca !ty__badStruct, !cir.ptr<!ty__badStruct>, ["data", init] {alignment = 8 : i64} loc(#loc115)
    %1 = cir.alloca !ty__badStruct, !cir.ptr<!ty__badStruct>, ["__retval"] {alignment = 8 : i64} loc(#loc15)
    cir.store %arg0, %0 : !ty__badStruct, !cir.ptr<!ty__badStruct> loc(#loc18)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc117)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc118)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc119)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc26)
      %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc26)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc119)
      cir.scope {
        cir.do {
          %8 = cir.const #cir.int<2> : !s32i loc(#loc29)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc30)
          %10 = cir.const #cir.int<6> : !s32i loc(#loc31)
          %11 = cir.call @socket(%8, %9, %10) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc32)
          cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc121)
          cir.scope {
            %34 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc37)
            %35 = cir.const #cir.int<1> : !s32i loc(#loc38)
            %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc38)
            %37 = cir.cmp(eq, %34, %36) : !s32i, !cir.bool loc(#loc123)
            cir.if %37 {
              cir.break loc(#loc40)
            } loc(#loc124)
          } loc(#loc122)
          %12 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc125)
          %13 = cir.const #cir.int<0> : !s32i loc(#loc43)
          %14 = cir.const #cir.int<16> : !u64i loc(#loc126)
          cir.libc.memset %14 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc127)
          %15 = cir.const #cir.int<2> : !s32i loc(#loc48)
          %16 = cir.cast(integral, %15 : !s32i), !u16i loc(#loc48)
          %17 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc49)
          cir.store %16, %17 : !u16i, !cir.ptr<!u16i> loc(#loc128)
          %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
          %20 = cir.call @inet_addr(%19) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc51)
          %21 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc52)
          %22 = cir.get_member %21[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc53)
          cir.store %20, %22 : !u32i, !cir.ptr<!u32i> loc(#loc129)
          %23 = cir.const #cir.int<27015> : !s32i loc(#loc56)
          %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc56)
          %25 = cir.call @htons(%24) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc57)
          %26 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc58)
          cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc130)
          cir.scope {
            %34 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc63)
            %35 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc132)
            %36 = cir.const #cir.int<16> : !u64i loc(#loc133)
            %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc133)
            %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc68)
            %39 = cir.const #cir.int<1> : !s32i loc(#loc69)
            %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc69)
            %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc134)
            cir.if %41 {
              cir.break loc(#loc71)
            } loc(#loc135)
          } loc(#loc131)
          %27 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc72)
          %28 = cir.cast(bitcast, %0 : !cir.ptr<!ty__badStruct>), !cir.ptr<!s8i> loc(#loc136)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc137)
          %30 = cir.const #cir.int<16> : !u64i loc(#loc138)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc78)
          %32 = cir.call @recv(%27, %29, %30, %31) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc79)
          %33 = cir.cast(integral, %32 : !s64i), !s32i loc(#loc79)
          cir.store %33, %3 : !s32i, !cir.ptr<!s32i> loc(#loc139)
          cir.scope {
            %34 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc84)
            %35 = cir.const #cir.int<1> : !s32i loc(#loc85)
            %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc85)
            %37 = cir.cmp(eq, %34, %36) : !s32i, !cir.bool loc(#loc141)
            %38 = cir.ternary(%37, true {
              %39 = cir.const #true loc(#loc86)
              cir.yield %39 : !cir.bool loc(#loc86)
            }, false {
              %39 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc87)
              %40 = cir.const #cir.int<0> : !s32i loc(#loc88)
              %41 = cir.cmp(eq, %39, %40) : !s32i, !cir.bool loc(#loc142)
              %42 = cir.ternary(%41, true {
                %43 = cir.const #true loc(#loc86)
                cir.yield %43 : !cir.bool loc(#loc86)
              }, false {
                %43 = cir.const #false loc(#loc86)
                cir.yield %43 : !cir.bool loc(#loc86)
              }) : (!cir.bool) -> !cir.bool loc(#loc86)
              cir.yield %42 : !cir.bool loc(#loc86)
            }) : (!cir.bool) -> !cir.bool loc(#loc86)
            cir.if %38 {
              cir.break loc(#loc90)
            } loc(#loc143)
          } loc(#loc140)
          cir.yield loc(#loc28)
        } while {
          %8 = cir.const #cir.int<0> : !s32i loc(#loc91)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc91)
          cir.condition(%9) loc(#loc91)
        } loc(#loc120)
      } loc(#loc120)
      cir.scope {
        %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc94)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc95)
        %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc95)
        %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc145)
        cir.if %11 {
          %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc97)
          %13 = cir.call @close(%12) : (!s32i) -> !s32i loc(#loc98)
        } loc(#loc146)
      } loc(#loc144)
    } loc(#loc116)
    cir.copy %0 to %1 : !cir.ptr<!ty__badStruct> loc(#loc15)
    %2 = cir.load %1 : !cir.ptr<!ty__badStruct>, !ty__badStruct loc(#loc147)
    cir.return %2 : !ty__badStruct loc(#loc147)
  } loc(#loc114)
  cir.func @CWE123_Write_What_Where_Condition__connect_socket_61b_goodG2BSource(%arg0: !ty__badStruct loc(fused[#loc103, #loc104])) -> !ty__badStruct extra(#fn_attr1) {
    %0 = cir.alloca !ty__badStruct, !cir.ptr<!ty__badStruct>, ["data", init] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.alloca !ty__badStruct, !cir.ptr<!ty__badStruct>, ["__retval"] {alignment = 8 : i64} loc(#loc102)
    cir.store %arg0, %0 : !ty__badStruct, !cir.ptr<!ty__badStruct> loc(#loc105)
    cir.copy %0 to %1 : !cir.ptr<!ty__badStruct> loc(#loc102)
    %2 = cir.load %1 : !cir.ptr<!ty__badStruct>, !ty__badStruct loc(#loc150)
    cir.return %2 : !ty__badStruct loc(#loc150)
  } loc(#loc148)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE123_Write_What_Where_Condition/CWE123_Write_What_Where_Condition__connect_socket_61b.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":81:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/unistd.h":358:1)
#loc13 = loc("/usr/include/unistd.h":358:27)
#loc14 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":55:1)
#loc15 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":109:1)
#loc18 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":56:1)
#loc19 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":57:5)
#loc20 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":107:5)
#loc21 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":62:9)
#loc22 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":62:13)
#loc23 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":63:9)
#loc24 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":63:28)
#loc25 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":64:9)
#loc26 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":64:32)
#loc27 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":65:9)
#loc28 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":96:17)
#loc29 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":74:36)
#loc30 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":74:45)
#loc31 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":74:58)
#loc32 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":74:29)
#loc33 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":74:13)
#loc34 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":74:69)
#loc35 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":75:13)
#loc36 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":78:13)
#loc37 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":75:17)
#loc38 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":75:34)
#loc39 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":76:13)
#loc40 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":77:17)
#loc41 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":79:20)
#loc42 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":79:21)
#loc43 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":79:30)
#loc44 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":79:33)
#loc45 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":79:47)
#loc46 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":79:13)
#loc47 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":79:48)
#loc48 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":80:34)
#loc49 = loc("/usr/include/netinet/in.h":249:5)
#loc50 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":80:13)
#loc51 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":81:39)
#loc52 = loc("/usr/include/netinet/in.h":251:20)
#loc53 = loc("/usr/include/netinet/in.h":33:15)
#loc54 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":81:13)
#loc55 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":81:59)
#loc56 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":82:38)
#loc57 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":82:32)
#loc58 = loc("/usr/include/netinet/in.h":250:15)
#loc59 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":82:13)
#loc60 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":82:46)
#loc61 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":83:13)
#loc62 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":86:13)
#loc63 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":83:25)
#loc64 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":83:58)
#loc65 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":83:59)
#loc66 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":83:68)
#loc67 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":83:82)
#loc68 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":83:17)
#loc69 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":83:88)
#loc70 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":84:13)
#loc71 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":85:17)
#loc72 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":90:31)
#loc73 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":90:53)
#loc74 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":90:54)
#loc75 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":90:46)
#loc76 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":90:60)
#loc77 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":90:71)
#loc78 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":90:74)
#loc79 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":90:26)
#loc80 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":90:13)
#loc81 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":90:75)
#loc82 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":91:13)
#loc83 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":94:13)
#loc84 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":91:17)
#loc85 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":91:31)
#loc86 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":91:44)
#loc87 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":91:47)
#loc88 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":91:61)
#loc89 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":92:13)
#loc90 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":93:17)
#loc91 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":96:16)
#loc92 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":97:9)
#loc93 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":100:9)
#loc94 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":97:13)
#loc95 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":97:30)
#loc96 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":98:9)
#loc97 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":99:26)
#loc98 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":99:13)
#loc99 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":108:5)
#loc100 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":108:12)
#loc101 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":116:1)
#loc102 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":121:1)
#loc105 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":117:1)
#loc106 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":120:5)
#loc107 = loc("CWE123_Write_What_Where_Condition__connect_socket_61b.c":120:12)
#loc108 = loc(fused[#loc1, #loc2])
#loc109 = loc(fused[#loc3, #loc4])
#loc110 = loc(fused[#loc6, #loc7])
#loc111 = loc(fused[#loc8, #loc9])
#loc112 = loc(fused[#loc10, #loc11])
#loc113 = loc(fused[#loc12, #loc13])
#loc114 = loc(fused[#loc14, #loc15])
#loc116 = loc(fused[#loc19, #loc20])
#loc117 = loc(fused[#loc21, #loc22])
#loc118 = loc(fused[#loc23, #loc24])
#loc119 = loc(fused[#loc25, #loc26])
#loc120 = loc(fused[#loc27, #loc28])
#loc121 = loc(fused[#loc33, #loc34])
#loc122 = loc(fused[#loc35, #loc36])
#loc123 = loc(fused[#loc37, #loc38])
#loc124 = loc(fused[#loc39, #loc36])
#loc125 = loc(fused[#loc41, #loc42])
#loc126 = loc(fused[#loc44, #loc45])
#loc127 = loc(fused[#loc46, #loc47])
#loc128 = loc(fused[#loc50, #loc48])
#loc129 = loc(fused[#loc54, #loc55])
#loc130 = loc(fused[#loc59, #loc60])
#loc131 = loc(fused[#loc61, #loc62])
#loc132 = loc(fused[#loc64, #loc65])
#loc133 = loc(fused[#loc66, #loc67])
#loc134 = loc(fused[#loc68, #loc69])
#loc135 = loc(fused[#loc70, #loc62])
#loc136 = loc(fused[#loc73, #loc74])
#loc137 = loc(fused[#loc75, #loc74])
#loc138 = loc(fused[#loc76, #loc77])
#loc139 = loc(fused[#loc80, #loc81])
#loc140 = loc(fused[#loc82, #loc83])
#loc141 = loc(fused[#loc84, #loc85])
#loc142 = loc(fused[#loc87, #loc88])
#loc143 = loc(fused[#loc89, #loc83])
#loc144 = loc(fused[#loc92, #loc93])
#loc145 = loc(fused[#loc94, #loc95])
#loc146 = loc(fused[#loc96, #loc93])
#loc147 = loc(fused[#loc99, #loc100])
#loc148 = loc(fused[#loc101, #loc102])
#loc150 = loc(fused[#loc106, #loc107])
