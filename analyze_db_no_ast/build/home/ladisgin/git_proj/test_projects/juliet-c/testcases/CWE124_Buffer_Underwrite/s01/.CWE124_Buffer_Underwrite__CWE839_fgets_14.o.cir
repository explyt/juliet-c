!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_14.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  external @globalFive : !s32i {alignment = 4 : i64} loc(#loc363)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc364)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc365)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc366)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc367)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @printIntLine(!s32i) loc(#loc368)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto  @CWE124_Buffer_Underwrite__CWE839_fgets_14_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc370)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc20)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc371)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc363)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc24)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc25)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc373)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc26)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc376)
          %9 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc376)
          cir.store %9, %8 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc376)
          cir.scope {
            %10 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc34)
            %11 = cir.const #cir.int<3> : !s32i loc(#loc35)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc35)
            %13 = cir.const #cir.int<4> : !u64i loc(#loc35)
            %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc35)
            %15 = cir.const #cir.int<2> : !s32i loc(#loc35)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc35)
            %17 = cir.binop(add, %14, %16) : !u64i loc(#loc35)
            %18 = cir.cast(integral, %17 : !u64i), !s32i loc(#loc35)
            %19 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc365)
            %20 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc36)
            %21 = cir.call @fgets(%10, %18, %20) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc37)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
            %24 = cir.cmp(ne, %21, %23) : !cir.ptr<!s8i>, !s32i loc(#loc378)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc39)
            cir.if %25 {
              %26 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc43)
              %27 = cir.call @atoi(%26) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc44)
              cir.store %27, %0 : !s32i, !cir.ptr<!s32i> loc(#loc380)
            } else {
              %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
              %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc47)
            } loc(#loc379)
          } loc(#loc377)
        } loc(#loc375)
      } loc(#loc374)
    } loc(#loc372)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc363)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc50)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc51)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc382)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc52)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc385)
          %9 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc386)
          %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc386)
          cir.store %10, %9 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc386)
          cir.scope {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
            %12 = cir.const #cir.int<10> : !s32i loc(#loc63)
            %13 = cir.cmp(lt, %11, %12) : !s32i, !s32i loc(#loc388)
            %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc64)
            cir.if %14 {
              %15 = cir.const #cir.int<1> : !s32i loc(#loc68)
              %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc69)
              %17 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc70)
              %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc70)
              cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc390)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc73)
                cir.store %19, %8 : !s32i, !cir.ptr<!s32i> loc(#loc392)
                cir.for : cond {
                  %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc75)
                  %21 = cir.const #cir.int<10> : !s32i loc(#loc76)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !s32i loc(#loc393)
                  %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc77)
                  cir.condition(%23) loc(#loc77)
                } body {
                  cir.scope {
                    %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc79)
                    %21 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc80)
                    %22 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc80)
                    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc80)
                    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc81)
                  } loc(#loc394)
                  cir.yield loc(#loc72)
                } step {
                  %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc82)
                  %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc83)
                  cir.store %21, %8 : !s32i, !cir.ptr<!s32i> loc(#loc395)
                  cir.yield loc(#loc391)
                } loc(#loc391)
              } loc(#loc391)
            } else {
              %15 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc14)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc14)
              cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc84)
            } loc(#loc389)
          } loc(#loc387)
        } loc(#loc384)
      } loc(#loc383)
    } loc(#loc381)
    cir.return loc(#loc16)
  } loc(#loc369)
  cir.func no_proto  @CWE124_Buffer_Underwrite__CWE839_fgets_14_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc397)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc87)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc398)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc89)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc399)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc91)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc400)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc93)
    cir.return loc(#loc86)
  } loc(#loc396)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc95)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc96)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc402)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc102)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc403)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc363)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc106)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc107)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc405)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc108)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc408)
          %9 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc408)
          cir.store %9, %8 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc408)
          cir.scope {
            %10 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc116)
            %11 = cir.const #cir.int<3> : !s32i loc(#loc117)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc117)
            %13 = cir.const #cir.int<4> : !u64i loc(#loc117)
            %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc117)
            %15 = cir.const #cir.int<2> : !s32i loc(#loc117)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc117)
            %17 = cir.binop(add, %14, %16) : !u64i loc(#loc117)
            %18 = cir.cast(integral, %17 : !u64i), !s32i loc(#loc117)
            %19 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc365)
            %20 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc118)
            %21 = cir.call @fgets(%10, %18, %20) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc119)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc120)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc120)
            %24 = cir.cmp(ne, %21, %23) : !cir.ptr<!s8i>, !s32i loc(#loc410)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc121)
            cir.if %25 {
              %26 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc125)
              %27 = cir.call @atoi(%26) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc126)
              cir.store %27, %0 : !s32i, !cir.ptr<!s32i> loc(#loc412)
            } else {
              %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc129)
              %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc129)
              cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc130)
            } loc(#loc411)
          } loc(#loc409)
        } loc(#loc407)
      } loc(#loc406)
    } loc(#loc404)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc363)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc133)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc134)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !s32i loc(#loc414)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc135)
      cir.if %7 {
        %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc95)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc95)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc139)
      } else {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc417)
          %9 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc418)
          %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc418)
          cir.store %10, %9 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc418)
          cir.scope {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
            %12 = cir.const #cir.int<0> : !s32i loc(#loc149)
            %13 = cir.cmp(ge, %11, %12) : !s32i, !s32i loc(#loc420)
            %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc150)
            %15 = cir.ternary(%14, true {
              %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
              %17 = cir.const #cir.int<10> : !s32i loc(#loc153)
              %18 = cir.cmp(lt, %16, %17) : !s32i, !s32i loc(#loc421)
              %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc155)
              %20 = cir.ternary(%19, true {
                %21 = cir.const #true loc(#loc151)
                cir.yield %21 : !cir.bool loc(#loc151)
              }, false {
                %21 = cir.const #false loc(#loc151)
                cir.yield %21 : !cir.bool loc(#loc151)
              }) : (!cir.bool) -> !cir.bool loc(#loc151)
              cir.yield %20 : !cir.bool loc(#loc151)
            }, false {
              %16 = cir.const #false loc(#loc151)
              cir.yield %16 : !cir.bool loc(#loc151)
            }) : (!cir.bool) -> !cir.bool loc(#loc151)
            cir.if %15 {
              %16 = cir.const #cir.int<1> : !s32i loc(#loc159)
              %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc160)
              %18 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc161)
              %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc161)
              cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc423)
              cir.scope {
                %20 = cir.const #cir.int<0> : !s32i loc(#loc164)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc425)
                cir.for : cond {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc166)
                  %22 = cir.const #cir.int<10> : !s32i loc(#loc167)
                  %23 = cir.cmp(lt, %21, %22) : !s32i, !s32i loc(#loc426)
                  %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc168)
                  cir.condition(%24) loc(#loc168)
                } body {
                  cir.scope {
                    %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc170)
                    %22 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc171)
                    %23 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc171)
                    %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc171)
                    cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc172)
                  } loc(#loc427)
                  cir.yield loc(#loc163)
                } step {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc173)
                  %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc174)
                  cir.store %22, %8 : !s32i, !cir.ptr<!s32i> loc(#loc428)
                  cir.yield loc(#loc424)
                } loc(#loc424)
              } loc(#loc424)
            } else {
              %16 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc96)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc96)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc175)
            } loc(#loc422)
          } loc(#loc419)
        } loc(#loc416)
      } loc(#loc415)
    } loc(#loc413)
    cir.return loc(#loc98)
  } loc(#loc401)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc430)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc181)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc431)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc363)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc185)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc186)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc433)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc187)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc436)
          %9 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc436)
          cir.store %9, %8 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc436)
          cir.scope {
            %10 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc195)
            %11 = cir.const #cir.int<3> : !s32i loc(#loc196)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc196)
            %13 = cir.const #cir.int<4> : !u64i loc(#loc196)
            %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc196)
            %15 = cir.const #cir.int<2> : !s32i loc(#loc196)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc196)
            %17 = cir.binop(add, %14, %16) : !u64i loc(#loc196)
            %18 = cir.cast(integral, %17 : !u64i), !s32i loc(#loc196)
            %19 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc365)
            %20 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc197)
            %21 = cir.call @fgets(%10, %18, %20) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc198)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc199)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc199)
            %24 = cir.cmp(ne, %21, %23) : !cir.ptr<!s8i>, !s32i loc(#loc438)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc200)
            cir.if %25 {
              %26 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc204)
              %27 = cir.call @atoi(%26) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc205)
              cir.store %27, %0 : !s32i, !cir.ptr<!s32i> loc(#loc440)
            } else {
              %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc208)
              %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc208)
              cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc209)
            } loc(#loc439)
          } loc(#loc437)
        } loc(#loc435)
      } loc(#loc434)
    } loc(#loc432)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc363)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc212)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc213)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc442)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc214)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc445)
          %9 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc446)
          %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc446)
          cir.store %10, %9 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc446)
          cir.scope {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc224)
            %12 = cir.const #cir.int<0> : !s32i loc(#loc225)
            %13 = cir.cmp(ge, %11, %12) : !s32i, !s32i loc(#loc448)
            %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc226)
            %15 = cir.ternary(%14, true {
              %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc228)
              %17 = cir.const #cir.int<10> : !s32i loc(#loc229)
              %18 = cir.cmp(lt, %16, %17) : !s32i, !s32i loc(#loc449)
              %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc231)
              %20 = cir.ternary(%19, true {
                %21 = cir.const #true loc(#loc227)
                cir.yield %21 : !cir.bool loc(#loc227)
              }, false {
                %21 = cir.const #false loc(#loc227)
                cir.yield %21 : !cir.bool loc(#loc227)
              }) : (!cir.bool) -> !cir.bool loc(#loc227)
              cir.yield %20 : !cir.bool loc(#loc227)
            }, false {
              %16 = cir.const #false loc(#loc227)
              cir.yield %16 : !cir.bool loc(#loc227)
            }) : (!cir.bool) -> !cir.bool loc(#loc227)
            cir.if %15 {
              %16 = cir.const #cir.int<1> : !s32i loc(#loc235)
              %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc236)
              %18 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc237)
              %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc237)
              cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc451)
              cir.scope {
                %20 = cir.const #cir.int<0> : !s32i loc(#loc240)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc453)
                cir.for : cond {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc242)
                  %22 = cir.const #cir.int<10> : !s32i loc(#loc243)
                  %23 = cir.cmp(lt, %21, %22) : !s32i, !s32i loc(#loc454)
                  %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc244)
                  cir.condition(%24) loc(#loc244)
                } body {
                  cir.scope {
                    %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc246)
                    %22 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc247)
                    %23 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc247)
                    %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc247)
                    cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc248)
                  } loc(#loc455)
                  cir.yield loc(#loc239)
                } step {
                  %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc249)
                  %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc250)
                  cir.store %22, %8 : !s32i, !cir.ptr<!s32i> loc(#loc456)
                  cir.yield loc(#loc452)
                } loc(#loc452)
              } loc(#loc452)
            } else {
              %16 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc251)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc251)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc252)
            } loc(#loc450)
          } loc(#loc447)
        } loc(#loc444)
      } loc(#loc443)
    } loc(#loc441)
    cir.return loc(#loc177)
  } loc(#loc429)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc458)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc257)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc258)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc459)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc363)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc262)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc263)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !s32i loc(#loc461)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc264)
      cir.if %7 {
        %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc268)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc268)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc269)
      } else {
        %8 = cir.const #cir.int<7> : !s32i loc(#loc270)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc463)
      } loc(#loc462)
    } loc(#loc460)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc363)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc274)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc275)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc465)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc276)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc468)
          %9 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc469)
          %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc469)
          cir.store %10, %9 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc469)
          cir.scope {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc286)
            %12 = cir.const #cir.int<10> : !s32i loc(#loc287)
            %13 = cir.cmp(lt, %11, %12) : !s32i, !s32i loc(#loc471)
            %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc288)
            cir.if %14 {
              %15 = cir.const #cir.int<1> : !s32i loc(#loc292)
              %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc293)
              %17 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc294)
              %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc294)
              cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc473)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc297)
                cir.store %19, %8 : !s32i, !cir.ptr<!s32i> loc(#loc475)
                cir.for : cond {
                  %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc299)
                  %21 = cir.const #cir.int<10> : !s32i loc(#loc300)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !s32i loc(#loc476)
                  %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc301)
                  cir.condition(%23) loc(#loc301)
                } body {
                  cir.scope {
                    %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc303)
                    %21 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc304)
                    %22 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc304)
                    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc304)
                    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc305)
                  } loc(#loc477)
                  cir.yield loc(#loc296)
                } step {
                  %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc306)
                  %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc307)
                  cir.store %21, %8 : !s32i, !cir.ptr<!s32i> loc(#loc478)
                  cir.yield loc(#loc474)
                } loc(#loc474)
              } loc(#loc474)
            } else {
              %15 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc308)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc308)
              cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc309)
            } loc(#loc472)
          } loc(#loc470)
        } loc(#loc467)
      } loc(#loc466)
    } loc(#loc464)
    cir.return loc(#loc254)
  } loc(#loc457)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc480)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc314)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc315)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc481)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc363)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc319)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc320)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc483)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc321)
      cir.if %7 {
        %8 = cir.const #cir.int<7> : !s32i loc(#loc323)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc485)
      } loc(#loc484)
    } loc(#loc482)
    cir.scope {
      %3 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc363)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc327)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc328)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !s32i loc(#loc487)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc329)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc490)
          %9 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc491)
          %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc491)
          cir.store %10, %9 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc491)
          cir.scope {
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc339)
            %12 = cir.const #cir.int<10> : !s32i loc(#loc340)
            %13 = cir.cmp(lt, %11, %12) : !s32i, !s32i loc(#loc493)
            %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc341)
            cir.if %14 {
              %15 = cir.const #cir.int<1> : !s32i loc(#loc345)
              %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc346)
              %17 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc347)
              %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc347)
              cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc495)
              cir.scope {
                %19 = cir.const #cir.int<0> : !s32i loc(#loc350)
                cir.store %19, %8 : !s32i, !cir.ptr<!s32i> loc(#loc497)
                cir.for : cond {
                  %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc352)
                  %21 = cir.const #cir.int<10> : !s32i loc(#loc353)
                  %22 = cir.cmp(lt, %20, %21) : !s32i, !s32i loc(#loc498)
                  %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc354)
                  cir.condition(%23) loc(#loc354)
                } body {
                  cir.scope {
                    %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc356)
                    %21 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc357)
                    %22 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc357)
                    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc357)
                    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc358)
                  } loc(#loc499)
                  cir.yield loc(#loc349)
                } step {
                  %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc359)
                  %21 = cir.unary(inc, %20) : !s32i, !s32i loc(#loc360)
                  cir.store %21, %8 : !s32i, !cir.ptr<!s32i> loc(#loc500)
                  cir.yield loc(#loc496)
                } loc(#loc496)
              } loc(#loc496)
            } else {
              %15 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc361)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc361)
              cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc362)
            } loc(#loc494)
          } loc(#loc492)
        } loc(#loc489)
      } loc(#loc488)
    } loc(#loc486)
    cir.return loc(#loc311)
  } loc(#loc479)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_14.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":118:12)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":41:27)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":63:27)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":24:1)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":67:1)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":26:5)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":26:9)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":28:13)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":28:12)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":28:5)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":29:5)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":44:5)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":29:8)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":29:20)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":29:18)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":30:5)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":31:9)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":43:9)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":32:13)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":32:49)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":34:13)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":42:13)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":34:23)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":34:36)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":34:53)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":34:17)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":34:63)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":34:60)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":35:13)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":38:13)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":40:13)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":37:29)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":37:24)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":37:17)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":37:40)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":41:17)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":45:5)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":66:5)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":45:8)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":45:20)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":45:18)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":46:5)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":47:9)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":65:9)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":48:13)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":48:17)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":49:13)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":49:34)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":52:13)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":64:13)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":52:17)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":52:24)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":52:22)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":53:13)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":60:13)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":62:13)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":54:32)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":54:24)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":54:17)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":56:17)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":59:17)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":56:25)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":56:21)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":56:28)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":56:32)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":56:30)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":57:17)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":58:41)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":58:34)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":58:21)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":56:37)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":56:36)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":63:17)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":245:1)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":251:1)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":247:5)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":247:14)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":248:5)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":248:14)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":249:5)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":249:14)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":250:5)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":250:14)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":98:19)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":117:27)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":74:1)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":121:1)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":76:5)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":76:9)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":78:13)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":78:12)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":78:5)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":79:5)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":94:5)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":79:8)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":79:20)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":79:18)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":80:5)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":81:9)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":93:9)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":82:13)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":82:49)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":84:13)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":92:13)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":84:23)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":84:36)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":84:53)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":84:17)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":84:63)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":84:60)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":85:13)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":88:13)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":90:13)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":87:29)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":87:24)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":87:17)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":87:40)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":91:27)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":91:17)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":95:5)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":120:5)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":95:8)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":95:20)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":95:18)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":96:5)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":99:5)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":101:5)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":98:9)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":102:9)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":119:9)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":103:13)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":103:17)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":104:13)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":104:34)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":106:13)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":118:13)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":106:17)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":106:25)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":106:22)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":106:27)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":106:30)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":106:38)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":106:40)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":106:35)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":107:13)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":114:13)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":116:13)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":108:32)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":108:24)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":108:17)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":110:17)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":113:17)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":110:25)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":110:21)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":110:28)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":110:32)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":110:30)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":111:17)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":112:41)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":112:34)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":112:21)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":110:37)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":110:36)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":117:17)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":124:1)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":166:1)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":126:5)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":126:9)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":128:13)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":128:12)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":128:5)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":129:5)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":144:5)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":129:8)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":129:20)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":129:18)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":130:5)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":131:9)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":143:9)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":132:13)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":132:49)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":134:13)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":142:13)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":134:23)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":134:36)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":134:53)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":134:17)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":134:63)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":134:60)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":135:13)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":138:13)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":140:13)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":137:29)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":137:24)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":137:17)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":137:40)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":141:27)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":141:17)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":145:5)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":165:5)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":145:8)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":145:20)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":145:18)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":146:5)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":147:9)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":164:9)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":148:13)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":148:17)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":149:13)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":149:34)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":151:13)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":163:13)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":151:17)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":151:25)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":151:22)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":151:27)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":151:30)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":151:38)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":151:40)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":151:35)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":152:13)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":159:13)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":161:13)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":153:32)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":153:24)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":153:17)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":155:17)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":158:17)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":155:25)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":155:21)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":155:28)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":155:32)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":155:30)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":156:17)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":157:41)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":157:34)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":157:21)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":155:37)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":155:36)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":162:27)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":162:17)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":169:1)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":207:1)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":171:5)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":171:9)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":173:13)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":173:12)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":173:5)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":174:5)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":184:5)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":174:8)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":174:20)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":174:18)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":175:5)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":178:5)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":180:5)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":177:19)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":177:9)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":183:16)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":183:9)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":185:5)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":206:5)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":185:8)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":185:20)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":185:18)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":186:5)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":187:9)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":205:9)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":188:13)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":188:17)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":189:13)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":189:34)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":192:13)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":204:13)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":192:17)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":192:24)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":192:22)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":193:13)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":200:13)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":202:13)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":194:32)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":194:24)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":194:17)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":196:17)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":199:17)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":196:25)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":196:21)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":196:28)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":196:32)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":196:30)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":197:17)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":198:41)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":198:34)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":198:21)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":196:37)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":196:36)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":203:27)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":203:17)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":210:1)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":243:1)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":212:5)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":212:9)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":214:13)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":214:12)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":214:5)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":215:5)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":220:5)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":215:8)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":215:20)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":215:18)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":216:5)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":219:16)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":219:9)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":221:5)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":242:5)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":221:8)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":221:20)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":221:18)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":222:5)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":223:9)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":241:9)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":224:13)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":224:17)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":225:13)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":225:34)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":228:13)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":240:13)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":228:17)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":228:24)
#loc341 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":228:22)
#loc342 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":229:13)
#loc343 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":236:13)
#loc344 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":238:13)
#loc345 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":230:32)
#loc346 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":230:24)
#loc347 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":230:17)
#loc348 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":232:17)
#loc349 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":235:17)
#loc350 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":232:25)
#loc351 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":232:21)
#loc352 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":232:28)
#loc353 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":232:32)
#loc354 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":232:30)
#loc355 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":233:17)
#loc356 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":234:41)
#loc357 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":234:34)
#loc358 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":234:21)
#loc359 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":232:37)
#loc360 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":232:36)
#loc361 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":239:27)
#loc362 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_14.c":239:17)
#loc363 = loc(fused[#loc1, #loc2])
#loc364 = loc(fused[#loc3, #loc4])
#loc365 = loc(fused[#loc5, #loc6])
#loc366 = loc(fused[#loc7, #loc8])
#loc367 = loc(fused[#loc9, #loc10])
#loc368 = loc(fused[#loc12, #loc13])
#loc369 = loc(fused[#loc15, #loc16])
#loc370 = loc(fused[#loc17, #loc18])
#loc371 = loc(fused[#loc21, #loc19])
#loc372 = loc(fused[#loc22, #loc23])
#loc373 = loc(fused[#loc24, #loc25])
#loc374 = loc(fused[#loc27, #loc23])
#loc375 = loc(fused[#loc28, #loc29])
#loc376 = loc(fused[#loc30, #loc31])
#loc377 = loc(fused[#loc32, #loc33])
#loc378 = loc(fused[#loc37, #loc38])
#loc379 = loc(fused[#loc40, #loc41, #loc42, #loc33])
#loc380 = loc(fused[#loc45, #loc46])
#loc381 = loc(fused[#loc48, #loc49])
#loc382 = loc(fused[#loc50, #loc51])
#loc383 = loc(fused[#loc53, #loc49])
#loc384 = loc(fused[#loc54, #loc55])
#loc385 = loc(fused[#loc56, #loc57])
#loc386 = loc(fused[#loc58, #loc59])
#loc387 = loc(fused[#loc60, #loc61])
#loc388 = loc(fused[#loc62, #loc63])
#loc389 = loc(fused[#loc65, #loc66, #loc67, #loc61])
#loc390 = loc(fused[#loc70, #loc68])
#loc391 = loc(fused[#loc71, #loc72])
#loc392 = loc(fused[#loc74, #loc73])
#loc393 = loc(fused[#loc75, #loc76])
#loc394 = loc(fused[#loc78, #loc72])
#loc395 = loc(fused[#loc83, #loc82])
#loc396 = loc(fused[#loc85, #loc86])
#loc397 = loc(fused[#loc87, #loc88])
#loc398 = loc(fused[#loc89, #loc90])
#loc399 = loc(fused[#loc91, #loc92])
#loc400 = loc(fused[#loc93, #loc94])
#loc401 = loc(fused[#loc97, #loc98])
#loc402 = loc(fused[#loc99, #loc100])
#loc403 = loc(fused[#loc103, #loc101])
#loc404 = loc(fused[#loc104, #loc105])
#loc405 = loc(fused[#loc106, #loc107])
#loc406 = loc(fused[#loc109, #loc105])
#loc407 = loc(fused[#loc110, #loc111])
#loc408 = loc(fused[#loc112, #loc113])
#loc409 = loc(fused[#loc114, #loc115])
#loc410 = loc(fused[#loc119, #loc120])
#loc411 = loc(fused[#loc122, #loc123, #loc124, #loc115])
#loc412 = loc(fused[#loc127, #loc128])
#loc413 = loc(fused[#loc131, #loc132])
#loc414 = loc(fused[#loc133, #loc134])
#loc415 = loc(fused[#loc136, #loc137, #loc138, #loc132])
#loc416 = loc(fused[#loc140, #loc141])
#loc417 = loc(fused[#loc142, #loc143])
#loc418 = loc(fused[#loc144, #loc145])
#loc419 = loc(fused[#loc146, #loc147])
#loc420 = loc(fused[#loc148, #loc149])
#loc421 = loc(fused[#loc152, #loc154])
#loc422 = loc(fused[#loc156, #loc157, #loc158, #loc147])
#loc423 = loc(fused[#loc161, #loc159])
#loc424 = loc(fused[#loc162, #loc163])
#loc425 = loc(fused[#loc165, #loc164])
#loc426 = loc(fused[#loc166, #loc167])
#loc427 = loc(fused[#loc169, #loc163])
#loc428 = loc(fused[#loc174, #loc173])
#loc429 = loc(fused[#loc176, #loc177])
#loc430 = loc(fused[#loc178, #loc179])
#loc431 = loc(fused[#loc182, #loc180])
#loc432 = loc(fused[#loc183, #loc184])
#loc433 = loc(fused[#loc185, #loc186])
#loc434 = loc(fused[#loc188, #loc184])
#loc435 = loc(fused[#loc189, #loc190])
#loc436 = loc(fused[#loc191, #loc192])
#loc437 = loc(fused[#loc193, #loc194])
#loc438 = loc(fused[#loc198, #loc199])
#loc439 = loc(fused[#loc201, #loc202, #loc203, #loc194])
#loc440 = loc(fused[#loc206, #loc207])
#loc441 = loc(fused[#loc210, #loc211])
#loc442 = loc(fused[#loc212, #loc213])
#loc443 = loc(fused[#loc215, #loc211])
#loc444 = loc(fused[#loc216, #loc217])
#loc445 = loc(fused[#loc218, #loc219])
#loc446 = loc(fused[#loc220, #loc221])
#loc447 = loc(fused[#loc222, #loc223])
#loc448 = loc(fused[#loc224, #loc225])
#loc449 = loc(fused[#loc228, #loc230])
#loc450 = loc(fused[#loc232, #loc233, #loc234, #loc223])
#loc451 = loc(fused[#loc237, #loc235])
#loc452 = loc(fused[#loc238, #loc239])
#loc453 = loc(fused[#loc241, #loc240])
#loc454 = loc(fused[#loc242, #loc243])
#loc455 = loc(fused[#loc245, #loc239])
#loc456 = loc(fused[#loc250, #loc249])
#loc457 = loc(fused[#loc253, #loc254])
#loc458 = loc(fused[#loc255, #loc256])
#loc459 = loc(fused[#loc259, #loc257])
#loc460 = loc(fused[#loc260, #loc261])
#loc461 = loc(fused[#loc262, #loc263])
#loc462 = loc(fused[#loc265, #loc266, #loc267, #loc261])
#loc463 = loc(fused[#loc271, #loc270])
#loc464 = loc(fused[#loc272, #loc273])
#loc465 = loc(fused[#loc274, #loc275])
#loc466 = loc(fused[#loc277, #loc273])
#loc467 = loc(fused[#loc278, #loc279])
#loc468 = loc(fused[#loc280, #loc281])
#loc469 = loc(fused[#loc282, #loc283])
#loc470 = loc(fused[#loc284, #loc285])
#loc471 = loc(fused[#loc286, #loc287])
#loc472 = loc(fused[#loc289, #loc290, #loc291, #loc285])
#loc473 = loc(fused[#loc294, #loc292])
#loc474 = loc(fused[#loc295, #loc296])
#loc475 = loc(fused[#loc298, #loc297])
#loc476 = loc(fused[#loc299, #loc300])
#loc477 = loc(fused[#loc302, #loc296])
#loc478 = loc(fused[#loc307, #loc306])
#loc479 = loc(fused[#loc310, #loc311])
#loc480 = loc(fused[#loc312, #loc313])
#loc481 = loc(fused[#loc316, #loc314])
#loc482 = loc(fused[#loc317, #loc318])
#loc483 = loc(fused[#loc319, #loc320])
#loc484 = loc(fused[#loc322, #loc318])
#loc485 = loc(fused[#loc324, #loc323])
#loc486 = loc(fused[#loc325, #loc326])
#loc487 = loc(fused[#loc327, #loc328])
#loc488 = loc(fused[#loc330, #loc326])
#loc489 = loc(fused[#loc331, #loc332])
#loc490 = loc(fused[#loc333, #loc334])
#loc491 = loc(fused[#loc335, #loc336])
#loc492 = loc(fused[#loc337, #loc338])
#loc493 = loc(fused[#loc339, #loc340])
#loc494 = loc(fused[#loc342, #loc343, #loc344, #loc338])
#loc495 = loc(fused[#loc347, #loc345])
#loc496 = loc(fused[#loc348, #loc349])
#loc497 = loc(fused[#loc351, #loc350])
#loc498 = loc(fused[#loc352, #loc353])
#loc499 = loc(fused[#loc355, #loc349])
#loc500 = loc(fused[#loc360, #loc359])
