!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":23:59)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":23:116)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":23:122)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":31:59)
#loc54 = loc(fused[#loc8, #loc9])
!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad = !cir.record<class "CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83::CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad" {!cir.ptr<!s32i>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc51)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc52)
  cir.func @_ZN52CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_8356CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_badC2EPi(%arg0: !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad> loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":23:59), %arg1: !cir.ptr<!s32i> loc(fused[#loc8, #loc9])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc7)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc54)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad>> loc(#loc10)
    cir.store %arg1, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc10)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad> loc(#loc7)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc11)
    %4 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc55)
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc14)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc15)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc15)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc14)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc56)
    %10 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
    cir.store %9, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc57)
    cir.scope {
      %11 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc20)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc21)
      %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc59)
      cir.if %14 {
        %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc23)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc25)
        cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc23)
      } loc(#loc60)
    } loc(#loc58)
    cir.return loc(#loc6)
  } loc(#loc53)
  cir.func private @_ZN52CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_8356CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_badC1EPi(!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad>, !cir.ptr<!s32i>) alias(@_ZN52CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_8356CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_badC2EPi) loc(#loc53)
  cir.func private @printIntLine(!s32i) loc(#loc61)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc62)
  cir.func @_ZN52CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_8356CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_badD2Ev(%arg0: !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad> loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":31:59)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc32)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad>> loc(#loc33)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad> loc(#loc32)
    cir.scope {
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc65)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc65)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc65)
      %4 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
      %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc38)
      %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc39)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc39)
      %9 = cir.const #cir.int<10> : !s32i loc(#loc40)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc40)
      %11 = cir.const #cir.int<4> : !u64i loc(#loc66)
      %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc67)
      cir.libc.memmove %12 bytes from %8 to %6 : !cir.ptr<!void>, !u64i loc(#loc68)
      %13 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc45)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc46)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc47)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc45)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc48)
      %18 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc49)
      %19 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
      %20 = cir.load %19 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc50)
      cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc49)
    } loc(#loc64)
    cir.return loc(#loc31)
  } loc(#loc63)
  cir.func private @_ZN52CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_8356CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_badD1Ev(!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_833A3ACWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad>) alias(@_ZN52CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_8356CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_badD2Ev) loc(#loc63)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":23:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":29:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":24:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":25:12)
#loc12 = loc("./CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83.h":31:11)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":25:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":27:19)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":27:26)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":27:28)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":27:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":28:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":28:33)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":28:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":28:17)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":28:23)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":28:24)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":28:30)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":28:29)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc27 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc28 = loc("/usr/include/stdlib.h":687:1)
#loc29 = loc("/usr/include/stdlib.h":687:32)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":31:1)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":40:1)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":32:1)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":33:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":39:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":34:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":34:28)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":36:17)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":36:23)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":36:31)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":36:34)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":36:44)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":36:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":36:45)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":37:22)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":37:27)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":37:28)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":37:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":38:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_memmove_83_bad.cpp":38:14)
#loc51 = loc(fused[#loc1, #loc2])
#loc52 = loc(fused[#loc3, #loc4])
#loc53 = loc(fused[#loc5, #loc6])
#loc55 = loc(fused[#loc13, #loc11])
#loc56 = loc(fused[#loc14, #loc16])
#loc57 = loc(fused[#loc17, #loc16])
#loc58 = loc(fused[#loc18, #loc19])
#loc59 = loc(fused[#loc20, #loc21])
#loc60 = loc(fused[#loc22, #loc19])
#loc61 = loc(fused[#loc26, #loc27])
#loc62 = loc(fused[#loc28, #loc29])
#loc63 = loc(fused[#loc30, #loc31])
#loc64 = loc(fused[#loc34, #loc35])
#loc65 = loc(fused[#loc36, #loc37])
#loc66 = loc(fused[#loc41, #loc42])
#loc67 = loc(fused[#loc40, #loc42])
#loc68 = loc(fused[#loc43, #loc44])
