!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc183)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc184)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc185)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc187)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc189)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc190)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc191)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc190)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc191)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc22)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc194)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc28)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc194)
      cir.scope {
        %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc196)
        %11 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc196)
        cir.store %11, %10 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc196)
        cir.scope {
          %12 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc35)
          %13 = cir.const #cir.int<3> : !s32i loc(#loc36)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc36)
          %15 = cir.const #cir.int<4> : !u64i loc(#loc36)
          %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc36)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc36)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc36)
          %19 = cir.binop(add, %16, %18) : !u64i loc(#loc36)
          %20 = cir.cast(integral, %19 : !u64i), !s32i loc(#loc36)
          %21 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc184)
          %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc37)
          %23 = cir.call @fgets(%12, %20, %22) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc38)
          %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
          %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc198)
          cir.if %26 {
            %27 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc43)
            %28 = cir.call @atoi(%27) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc44)
            cir.store %28, %5 : !s32i, !cir.ptr<!s32i> loc(#loc200)
          } else {
            %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
            %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
            cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc47)
          } loc(#loc199)
        } loc(#loc197)
      } loc(#loc195)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc49)
      cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    } loc(#loc193)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc203)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc55)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc203)
      cir.scope {
        %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc205)
        %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc205)
        cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc205)
        cir.scope {
          %10 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc62)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc63)
          %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc207)
          cir.if %12 {
            %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc67)
            %14 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc68)
            %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc68)
            %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc68)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc69)
          } else {
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc12)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc12)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc70)
          } loc(#loc208)
        } loc(#loc206)
      } loc(#loc204)
    } loc(#loc202)
    cir.return loc(#loc14)
  } loc(#loc188)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc210)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc73)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc211)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc75)
    cir.return loc(#loc72)
  } loc(#loc209)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc213)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc214)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc215)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc214)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc215)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc86)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc218)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc91)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc92)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc218)
      %8 = cir.const #cir.int<7> : !s32i loc(#loc93)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc219)
      %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc95)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc96)
      cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    } loc(#loc217)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc222)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc101)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc102)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc222)
      cir.scope {
        %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc224)
        %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc224)
        cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc224)
        cir.scope {
          %10 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc109)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc110)
          %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc226)
          cir.if %12 {
            %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc114)
            %14 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc115)
            %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc115)
            %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc116)
          } else {
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc117)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc117)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc118)
          } loc(#loc227)
        } loc(#loc225)
      } loc(#loc223)
    } loc(#loc221)
    cir.return loc(#loc78)
  } loc(#loc212)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc119)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc229)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc230)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc231)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc230)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc231)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc129)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc234)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc134)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc135)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc234)
      cir.scope {
        %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc236)
        %11 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc236)
        cir.store %11, %10 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc236)
        cir.scope {
          %12 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc142)
          %13 = cir.const #cir.int<3> : !s32i loc(#loc143)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc143)
          %15 = cir.const #cir.int<4> : !u64i loc(#loc143)
          %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc143)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc143)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc143)
          %19 = cir.binop(add, %16, %18) : !u64i loc(#loc143)
          %20 = cir.cast(integral, %19 : !u64i), !s32i loc(#loc143)
          %21 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc184)
          %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc144)
          %23 = cir.call @fgets(%12, %20, %22) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc145)
          %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc146)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc146)
          %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc238)
          cir.if %26 {
            %27 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc150)
            %28 = cir.call @atoi(%27) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc151)
            cir.store %28, %5 : !s32i, !cir.ptr<!s32i> loc(#loc240)
          } else {
            %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc154)
            %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc154)
            cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc155)
          } loc(#loc239)
        } loc(#loc237)
      } loc(#loc235)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc156)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc157)
      cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    } loc(#loc233)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc243)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc162)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc163)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc243)
      cir.scope {
        %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc245)
        %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc245)
        cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc245)
        cir.scope {
          %10 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc170)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc171)
          %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc247)
          %13 = cir.ternary(%12, true {
            %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc173)
            %15 = cir.const #cir.int<10> : !s32i loc(#loc174)
            %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc248)
            %17 = cir.ternary(%16, true {
              %18 = cir.const #true loc(#loc172)
              cir.yield %18 : !cir.bool loc(#loc172)
            }, false {
              %18 = cir.const #false loc(#loc172)
              cir.yield %18 : !cir.bool loc(#loc172)
            }) : (!cir.bool) -> !cir.bool loc(#loc172)
            cir.yield %17 : !cir.bool loc(#loc172)
          }, false {
            %14 = cir.const #false loc(#loc172)
            cir.yield %14 : !cir.bool loc(#loc172)
          }) : (!cir.bool) -> !cir.bool loc(#loc172)
          cir.if %13 {
            %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc179)
            %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc180)
            %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc180)
            %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc180)
            cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc181)
          } else {
            %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc119)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc119)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc182)
          } loc(#loc249)
        } loc(#loc246)
      } loc(#loc244)
    } loc(#loc242)
    cir.return loc(#loc121)
  } loc(#loc228)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_32.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":43:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":60:27)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":24:1)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":64:1)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":26:5)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":26:9)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":27:5)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":27:22)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":28:5)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":28:22)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":30:13)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":30:12)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":30:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":31:5)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":47:5)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":32:9)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":32:21)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":32:20)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":33:9)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":45:9)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":34:13)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":34:49)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":36:13)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":44:13)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":36:23)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":36:36)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":36:53)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":36:17)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":36:63)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":37:13)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":40:13)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":42:13)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":39:29)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":39:24)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":39:17)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":39:40)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":43:17)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":46:21)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":46:10)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":46:9)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":48:5)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":63:5)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":49:9)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":49:21)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":49:20)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":50:9)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":62:9)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":51:13)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":51:34)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":54:13)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":61:13)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":54:17)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":54:25)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":55:13)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":57:13)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":59:13)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":56:37)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":56:30)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":56:17)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":60:17)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":145:1)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":149:1)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":147:5)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":147:13)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":148:5)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":148:13)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":71:1)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":101:1)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":73:5)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":73:9)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":74:5)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":74:22)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":75:5)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":75:22)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":77:13)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":77:12)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":77:5)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":78:5)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":84:5)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":79:9)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":79:21)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":79:20)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":82:16)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":82:9)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":83:21)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":83:10)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":83:9)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":85:5)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":100:5)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":86:9)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":86:21)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":86:20)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":87:9)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":99:9)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":88:13)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":88:34)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":91:13)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":98:13)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":91:17)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":91:25)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":92:13)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":94:13)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":96:13)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":93:37)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":93:30)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":93:17)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":97:27)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":97:17)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":139:27)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":104:1)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":143:1)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":106:5)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":106:9)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":107:5)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":107:22)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":108:5)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":108:22)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":110:13)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":110:12)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":110:5)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":111:5)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":127:5)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":112:9)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":112:21)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":112:20)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":113:9)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":125:9)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":114:13)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":114:49)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":116:13)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":124:13)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":116:23)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":116:36)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":116:53)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":116:17)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":116:63)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":117:13)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":120:13)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":122:13)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":119:29)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":119:24)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":119:17)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":119:40)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":123:27)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":123:17)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":126:21)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":126:10)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":126:9)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":128:5)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":142:5)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":129:9)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":129:21)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":129:20)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":130:9)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":141:9)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":131:13)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":131:34)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:13)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":140:13)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:17)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:25)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:27)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:30)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:38)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":133:40)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":134:13)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":136:13)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":138:13)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":135:37)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":135:30)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":135:17)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_fgets_32.c":139:17)
#loc183 = loc(fused[#loc1, #loc2])
#loc184 = loc(fused[#loc3, #loc4])
#loc185 = loc(fused[#loc5, #loc6])
#loc186 = loc(fused[#loc7, #loc8])
#loc187 = loc(fused[#loc10, #loc11])
#loc188 = loc(fused[#loc13, #loc14])
#loc189 = loc(fused[#loc15, #loc16])
#loc190 = loc(fused[#loc17, #loc18])
#loc191 = loc(fused[#loc19, #loc20])
#loc192 = loc(fused[#loc23, #loc21])
#loc193 = loc(fused[#loc24, #loc25])
#loc194 = loc(fused[#loc26, #loc27])
#loc195 = loc(fused[#loc29, #loc30])
#loc196 = loc(fused[#loc31, #loc32])
#loc197 = loc(fused[#loc33, #loc34])
#loc198 = loc(fused[#loc38, #loc39])
#loc199 = loc(fused[#loc40, #loc41, #loc42, #loc34])
#loc200 = loc(fused[#loc45, #loc46])
#loc201 = loc(fused[#loc50, #loc48])
#loc202 = loc(fused[#loc51, #loc52])
#loc203 = loc(fused[#loc53, #loc54])
#loc204 = loc(fused[#loc56, #loc57])
#loc205 = loc(fused[#loc58, #loc59])
#loc206 = loc(fused[#loc60, #loc61])
#loc207 = loc(fused[#loc62, #loc63])
#loc208 = loc(fused[#loc64, #loc65, #loc66, #loc61])
#loc209 = loc(fused[#loc71, #loc72])
#loc210 = loc(fused[#loc73, #loc74])
#loc211 = loc(fused[#loc75, #loc76])
#loc212 = loc(fused[#loc77, #loc78])
#loc213 = loc(fused[#loc79, #loc80])
#loc214 = loc(fused[#loc81, #loc82])
#loc215 = loc(fused[#loc83, #loc84])
#loc216 = loc(fused[#loc87, #loc85])
#loc217 = loc(fused[#loc88, #loc89])
#loc218 = loc(fused[#loc90, #loc91])
#loc219 = loc(fused[#loc94, #loc93])
#loc220 = loc(fused[#loc97, #loc95])
#loc221 = loc(fused[#loc98, #loc99])
#loc222 = loc(fused[#loc100, #loc101])
#loc223 = loc(fused[#loc103, #loc104])
#loc224 = loc(fused[#loc105, #loc106])
#loc225 = loc(fused[#loc107, #loc108])
#loc226 = loc(fused[#loc109, #loc110])
#loc227 = loc(fused[#loc111, #loc112, #loc113, #loc108])
#loc228 = loc(fused[#loc120, #loc121])
#loc229 = loc(fused[#loc122, #loc123])
#loc230 = loc(fused[#loc124, #loc125])
#loc231 = loc(fused[#loc126, #loc127])
#loc232 = loc(fused[#loc130, #loc128])
#loc233 = loc(fused[#loc131, #loc132])
#loc234 = loc(fused[#loc133, #loc134])
#loc235 = loc(fused[#loc136, #loc137])
#loc236 = loc(fused[#loc138, #loc139])
#loc237 = loc(fused[#loc140, #loc141])
#loc238 = loc(fused[#loc145, #loc146])
#loc239 = loc(fused[#loc147, #loc148, #loc149, #loc141])
#loc240 = loc(fused[#loc152, #loc153])
#loc241 = loc(fused[#loc158, #loc156])
#loc242 = loc(fused[#loc159, #loc160])
#loc243 = loc(fused[#loc161, #loc162])
#loc244 = loc(fused[#loc164, #loc165])
#loc245 = loc(fused[#loc166, #loc167])
#loc246 = loc(fused[#loc168, #loc169])
#loc247 = loc(fused[#loc170, #loc171])
#loc248 = loc(fused[#loc173, #loc175])
#loc249 = loc(fused[#loc176, #loc177, #loc178, #loc169])
