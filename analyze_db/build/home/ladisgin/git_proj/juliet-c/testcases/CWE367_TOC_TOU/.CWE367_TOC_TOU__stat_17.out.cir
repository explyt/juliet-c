!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc122 = loc("CWE367_TOC_TOU__stat_17.c":133:10)
#loc123 = loc("CWE367_TOC_TOU__stat_17.c":133:14)
#loc124 = loc("CWE367_TOC_TOU__stat_17.c":133:20)
#loc125 = loc("CWE367_TOC_TOU__stat_17.c":133:32)
!ty_timespec = !cir.struct<struct "timespec" {!s64i, !s64i} #cir.record.decl.ast>
#loc266 = loc(fused[#loc122, #loc123])
#loc267 = loc(fused[#loc124, #loc125])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_stat = !cir.struct<struct "stat" {!u64i, !u64i, !u64i, !u32i, !u32i, !u32i, !s32i, !u64i, !s64i, !s64i, !s64i, !ty_timespec, !ty_timespec, !ty_timespec, !cir.array<!s64i x 3>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc218)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc219)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc220)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc221)
  cir.func private @stat(!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc222)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc223)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc224)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc225)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc226)
  cir.func no_proto @CWE367_TOC_TOU__stat_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc228)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc27)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc230)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc231)
        cir.condition(%4) loc(#loc31)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc234)
            %3 = cir.alloca !ty_stat, !cir.ptr<!ty_stat>, ["statBuffer"] {alignment = 8 : i64} loc(#loc235)
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc236)
            %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc234)
            cir.store %5, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc234)
            %6 = cir.const #cir.int<1> : !s32i loc(#loc40)
            %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc41)
            cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc236)
            cir.scope {
              %11 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
              %12 = cir.const #cir.int<100> : !s32i loc(#loc45)
              %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc219)
              %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc46)
              %15 = cir.call @fgets(%11, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc47)
              %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc48)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc48)
              %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc238)
              cir.if %18 {
                %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
                %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
                cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc50)
                %21 = cir.const #cir.int<0> : !s32i loc(#loc51)
                %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc51)
                %23 = cir.const #cir.int<0> : !s32i loc(#loc52)
                %24 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
                %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc53)
                cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc240)
              } loc(#loc239)
            } loc(#loc237)
            cir.scope {
              %11 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc56)
              %12 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
              %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc56)
              %14 = cir.const #cir.int<0> : !s32i loc(#loc58)
              %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc58)
              %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc242)
              cir.if %16 {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc60)
                %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc60)
                %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc61)
                %20 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
                %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc61)
                %22 = cir.const #cir.int<1> : !s32i loc(#loc63)
                %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc63)
                %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc244)
                %25 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
                %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc64)
                cir.store %18, %26 : !s8i, !cir.ptr<!s8i> loc(#loc245)
              } loc(#loc243)
            } loc(#loc241)
            cir.scope {
              %11 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
              %12 = cir.call @stat(%11, %3) : (!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc68)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc69)
              %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc70)
              %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc247)
              cir.if %15 {
                %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc72)
                %17 = cir.const #cir.int<1> : !s32i loc(#loc73)
                cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc72)
              } loc(#loc248)
            } loc(#loc246)
            %8 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc74)
            %9 = cir.const #cir.int<2> : !s32i loc(#loc75)
            %10 = cir.call @open(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc76)
            cir.store %10, %4 : !s32i, !cir.ptr<!s32i> loc(#loc249)
            cir.scope {
              %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc81)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc82)
              %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc83)
              %14 = cir.cmp(eq, %11, %13) : !s32i, !cir.bool loc(#loc251)
              cir.if %14 {
                %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc85)
                %16 = cir.const #cir.int<1> : !s32i loc(#loc86)
                cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc85)
              } loc(#loc252)
            } loc(#loc250)
            cir.scope {
              %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc89)
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
              %15 = cir.const #cir.int<11> : !u64i loc(#loc254)
              %16 = cir.call @write(%11, %14, %15) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc92)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc93)
              %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc94)
              %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc94)
              %20 = cir.cmp(eq, %16, %19) : !s64i, !cir.bool loc(#loc255)
              cir.if %20 {
                %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc96)
                %22 = cir.const #cir.int<1> : !s32i loc(#loc97)
                cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc96)
              } loc(#loc256)
            } loc(#loc253)
            cir.scope {
              %11 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc100)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc101)
              %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc102)
              %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc258)
              cir.if %14 {
                %15 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc105)
              } loc(#loc259)
            } loc(#loc257)
          } loc(#loc233)
        } loc(#loc232)
        cir.yield loc(#loc26)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc107)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc260)
        cir.yield loc(#loc229)
      } loc(#loc229)
    } loc(#loc229)
    cir.return loc(#loc22)
  } loc(#loc227)
  cir.func no_proto @CWE367_TOC_TOU__stat_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc262)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc110)
    cir.return loc(#loc109)
  } loc(#loc261)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc263)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc264)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc116)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc119)
  cir.func @main(%arg0: !s32i loc(fused[#loc122, #loc123]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc124, #loc125])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc266)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc267)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc121)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc126)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc127)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc128)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc128)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc129)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc116)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    %8 = cir.get_global @CWE367_TOC_TOU__stat_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc268)
    cir.call @CWE367_TOC_TOU__stat_17_good() : () -> () loc(#loc131)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc117)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc117)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc133)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc118)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    %13 = cir.get_global @CWE367_TOC_TOU__stat_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc269)
    cir.call @CWE367_TOC_TOU__stat_17_bad() : () -> () loc(#loc135)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc119)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc137)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc138)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    cir.return %17 : !s32i loc(#loc270)
  } loc(#loc265)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc140)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc272)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc147)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc274)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc149)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc150)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc275)
        cir.condition(%4) loc(#loc151)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc278)
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc279)
            %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc278)
            cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc278)
            %5 = cir.const #cir.int<1> : !s32i loc(#loc158)
            %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc159)
            cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc279)
            cir.scope {
              %10 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc162)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc163)
              %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc219)
              %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc164)
              %14 = cir.call @fgets(%10, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc165)
              %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc166)
              %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc166)
              %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc281)
              cir.if %17 {
                %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc168)
                %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc168)
                cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc169)
                %20 = cir.const #cir.int<0> : !s32i loc(#loc170)
                %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc170)
                %22 = cir.const #cir.int<0> : !s32i loc(#loc171)
                %23 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc172)
                %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc172)
                cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc283)
              } loc(#loc282)
            } loc(#loc280)
            cir.scope {
              %10 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc175)
              %11 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc176)
              %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc175)
              %13 = cir.const #cir.int<0> : !s32i loc(#loc177)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc177)
              %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc285)
              cir.if %15 {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc179)
                %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc179)
                %18 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc180)
                %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc181)
                %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc180)
                %21 = cir.const #cir.int<1> : !s32i loc(#loc182)
                %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc182)
                %23 = cir.binop(sub, %20, %22) : !u64i loc(#loc287)
                %24 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc183)
                %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc183)
                cir.store %17, %25 : !s8i, !cir.ptr<!s8i> loc(#loc288)
              } loc(#loc286)
            } loc(#loc284)
            %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc184)
            %8 = cir.const #cir.int<2> : !s32i loc(#loc185)
            %9 = cir.call @open(%7, %8) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc186)
            cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc289)
            cir.scope {
              %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc191)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc192)
              %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc193)
              %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc291)
              cir.if %13 {
                %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc195)
                %15 = cir.const #cir.int<1> : !s32i loc(#loc196)
                cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc195)
              } loc(#loc292)
            } loc(#loc290)
            cir.scope {
              %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc199)
              %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc140)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc140)
              %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc140)
              %14 = cir.const #cir.int<12> : !u64i loc(#loc294)
              %15 = cir.call @write(%10, %13, %14) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc202)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc203)
              %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc204)
              %18 = cir.cast(integral, %17 : !s32i), !s64i loc(#loc204)
              %19 = cir.cmp(eq, %15, %18) : !s64i, !cir.bool loc(#loc295)
              cir.if %19 {
                %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc206)
                %21 = cir.const #cir.int<1> : !s32i loc(#loc207)
                cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc206)
              } loc(#loc296)
            } loc(#loc293)
            cir.scope {
              %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc210)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc211)
              %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc212)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc298)
              cir.if %13 {
                %14 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc214)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc215)
              } loc(#loc299)
            } loc(#loc297)
          } loc(#loc277)
        } loc(#loc276)
        cir.yield loc(#loc146)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc216)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc217)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc300)
        cir.yield loc(#loc273)
      } loc(#loc273)
    } loc(#loc273)
    cir.return loc(#loc142)
  } loc(#loc271)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__stat_17.c":48:27)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/sys/stat.h":205:1)
#loc11 = loc("/usr/include/sys/stat.h":206:43)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__stat_17.c":66:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__stat_17.c":37:1)
#loc22 = loc("CWE367_TOC_TOU__stat_17.c":76:1)
#loc23 = loc("CWE367_TOC_TOU__stat_17.c":39:5)
#loc24 = loc("CWE367_TOC_TOU__stat_17.c":39:9)
#loc25 = loc("CWE367_TOC_TOU__stat_17.c":40:5)
#loc26 = loc("CWE367_TOC_TOU__stat_17.c":75:5)
#loc27 = loc("CWE367_TOC_TOU__stat_17.c":40:13)
#loc28 = loc("CWE367_TOC_TOU__stat_17.c":40:9)
#loc29 = loc("CWE367_TOC_TOU__stat_17.c":40:16)
#loc30 = loc("CWE367_TOC_TOU__stat_17.c":40:20)
#loc31 = loc("CWE367_TOC_TOU__stat_17.c":40:18)
#loc32 = loc("CWE367_TOC_TOU__stat_17.c":41:5)
#loc33 = loc("CWE367_TOC_TOU__stat_17.c":42:9)
#loc34 = loc("CWE367_TOC_TOU__stat_17.c":74:9)
#loc35 = loc("CWE367_TOC_TOU__stat_17.c":43:13)
#loc36 = loc("CWE367_TOC_TOU__stat_17.c":43:34)
#loc37 = loc("CWE367_TOC_TOU__stat_17.c":44:13)
#loc38 = loc("CWE367_TOC_TOU__stat_17.c":44:25)
#loc39 = loc("CWE367_TOC_TOU__stat_17.c":45:13)
#loc40 = loc("CWE367_TOC_TOU__stat_17.c":45:29)
#loc41 = loc("CWE367_TOC_TOU__stat_17.c":45:28)
#loc42 = loc("CWE367_TOC_TOU__stat_17.c":46:13)
#loc43 = loc("CWE367_TOC_TOU__stat_17.c":51:13)
#loc44 = loc("CWE367_TOC_TOU__stat_17.c":46:23)
#loc45 = loc("CWE367_TOC_TOU__stat_17.c":46:33)
#loc46 = loc("CWE367_TOC_TOU__stat_17.c":46:38)
#loc47 = loc("CWE367_TOC_TOU__stat_17.c":46:17)
#loc48 = loc("CWE367_TOC_TOU__stat_17.c":46:48)
#loc49 = loc("CWE367_TOC_TOU__stat_17.c":47:13)
#loc50 = loc("CWE367_TOC_TOU__stat_17.c":48:17)
#loc51 = loc("CWE367_TOC_TOU__stat_17.c":50:31)
#loc52 = loc("CWE367_TOC_TOU__stat_17.c":50:26)
#loc53 = loc("CWE367_TOC_TOU__stat_17.c":50:17)
#loc54 = loc("CWE367_TOC_TOU__stat_17.c":52:13)
#loc55 = loc("CWE367_TOC_TOU__stat_17.c":55:13)
#loc56 = loc("CWE367_TOC_TOU__stat_17.c":52:17)
#loc57 = loc("CWE367_TOC_TOU__stat_17.c":52:24)
#loc58 = loc("CWE367_TOC_TOU__stat_17.c":52:36)
#loc59 = loc("CWE367_TOC_TOU__stat_17.c":53:13)
#loc60 = loc("CWE367_TOC_TOU__stat_17.c":54:48)
#loc61 = loc("CWE367_TOC_TOU__stat_17.c":54:26)
#loc62 = loc("CWE367_TOC_TOU__stat_17.c":54:33)
#loc63 = loc("CWE367_TOC_TOU__stat_17.c":54:43)
#loc64 = loc("CWE367_TOC_TOU__stat_17.c":54:17)
#loc65 = loc("CWE367_TOC_TOU__stat_17.c":57:13)
#loc66 = loc("CWE367_TOC_TOU__stat_17.c":60:13)
#loc67 = loc("CWE367_TOC_TOU__stat_17.c":57:22)
#loc68 = loc("CWE367_TOC_TOU__stat_17.c":57:17)
#loc69 = loc("CWE367_TOC_TOU__stat_17.c":57:49)
#loc70 = loc("CWE367_TOC_TOU__stat_17.c":57:48)
#loc71 = loc("CWE367_TOC_TOU__stat_17.c":58:13)
#loc72 = loc("CWE367_TOC_TOU__stat_17.c":59:17)
#loc73 = loc("CWE367_TOC_TOU__stat_17.c":59:22)
#loc74 = loc("CWE367_TOC_TOU__stat_17.c":61:30)
#loc75 = loc("CWE367_TOC_TOU__stat_17.c":61:40)
#loc76 = loc("CWE367_TOC_TOU__stat_17.c":61:25)
#loc77 = loc("CWE367_TOC_TOU__stat_17.c":61:13)
#loc78 = loc("CWE367_TOC_TOU__stat_17.c":61:46)
#loc79 = loc("CWE367_TOC_TOU__stat_17.c":62:13)
#loc80 = loc("CWE367_TOC_TOU__stat_17.c":65:13)
#loc81 = loc("CWE367_TOC_TOU__stat_17.c":62:17)
#loc82 = loc("CWE367_TOC_TOU__stat_17.c":62:30)
#loc83 = loc("CWE367_TOC_TOU__stat_17.c":62:29)
#loc84 = loc("CWE367_TOC_TOU__stat_17.c":63:13)
#loc85 = loc("CWE367_TOC_TOU__stat_17.c":64:17)
#loc86 = loc("CWE367_TOC_TOU__stat_17.c":64:22)
#loc87 = loc("CWE367_TOC_TOU__stat_17.c":66:13)
#loc88 = loc("CWE367_TOC_TOU__stat_17.c":69:13)
#loc89 = loc("CWE367_TOC_TOU__stat_17.c":66:23)
#loc90 = loc("CWE367_TOC_TOU__stat_17.c":66:50)
#loc91 = loc("CWE367_TOC_TOU__stat_17.c":66:72)
#loc92 = loc("CWE367_TOC_TOU__stat_17.c":66:17)
#loc93 = loc("CWE367_TOC_TOU__stat_17.c":66:79)
#loc94 = loc("CWE367_TOC_TOU__stat_17.c":66:78)
#loc95 = loc("CWE367_TOC_TOU__stat_17.c":67:13)
#loc96 = loc("CWE367_TOC_TOU__stat_17.c":68:17)
#loc97 = loc("CWE367_TOC_TOU__stat_17.c":68:22)
#loc98 = loc("CWE367_TOC_TOU__stat_17.c":70:13)
#loc99 = loc("CWE367_TOC_TOU__stat_17.c":73:13)
#loc100 = loc("CWE367_TOC_TOU__stat_17.c":70:17)
#loc101 = loc("CWE367_TOC_TOU__stat_17.c":70:30)
#loc102 = loc("CWE367_TOC_TOU__stat_17.c":70:29)
#loc103 = loc("CWE367_TOC_TOU__stat_17.c":71:13)
#loc104 = loc("CWE367_TOC_TOU__stat_17.c":72:23)
#loc105 = loc("CWE367_TOC_TOU__stat_17.c":72:17)
#loc106 = loc("CWE367_TOC_TOU__stat_17.c":40:24)
#loc107 = loc("CWE367_TOC_TOU__stat_17.c":40:23)
#loc108 = loc("CWE367_TOC_TOU__stat_17.c":119:1)
#loc109 = loc("CWE367_TOC_TOU__stat_17.c":122:1)
#loc110 = loc("CWE367_TOC_TOU__stat_17.c":121:5)
#loc111 = loc("CWE367_TOC_TOU__stat_17.c":121:11)
#loc112 = loc("/usr/include/stdlib.h":575:1)
#loc113 = loc("/usr/include/stdlib.h":575:41)
#loc114 = loc("/usr/include/time.h":76:1)
#loc115 = loc("/usr/include/time.h":76:38)
#loc116 = loc("CWE367_TOC_TOU__stat_17.c":138:15)
#loc117 = loc("CWE367_TOC_TOU__stat_17.c":140:15)
#loc118 = loc("CWE367_TOC_TOU__stat_17.c":143:15)
#loc119 = loc("CWE367_TOC_TOU__stat_17.c":145:15)
#loc120 = loc("CWE367_TOC_TOU__stat_17.c":133:1)
#loc121 = loc("CWE367_TOC_TOU__stat_17.c":148:1)
#loc126 = loc("CWE367_TOC_TOU__stat_17.c":134:1)
#loc127 = loc("CWE367_TOC_TOU__stat_17.c":136:27)
#loc128 = loc("CWE367_TOC_TOU__stat_17.c":136:22)
#loc129 = loc("CWE367_TOC_TOU__stat_17.c":136:5)
#loc130 = loc("CWE367_TOC_TOU__stat_17.c":138:5)
#loc131 = loc("CWE367_TOC_TOU__stat_17.c":139:5)
#loc132 = loc("CWE367_TOC_TOU__stat_17.c":139:34)
#loc133 = loc("CWE367_TOC_TOU__stat_17.c":140:5)
#loc134 = loc("CWE367_TOC_TOU__stat_17.c":143:5)
#loc135 = loc("CWE367_TOC_TOU__stat_17.c":144:5)
#loc136 = loc("CWE367_TOC_TOU__stat_17.c":144:33)
#loc137 = loc("CWE367_TOC_TOU__stat_17.c":145:5)
#loc138 = loc("CWE367_TOC_TOU__stat_17.c":147:12)
#loc139 = loc("CWE367_TOC_TOU__stat_17.c":147:5)
#loc140 = loc("CWE367_TOC_TOU__stat_17.c":107:33)
#loc141 = loc("CWE367_TOC_TOU__stat_17.c":83:1)
#loc142 = loc("CWE367_TOC_TOU__stat_17.c":117:1)
#loc143 = loc("CWE367_TOC_TOU__stat_17.c":85:5)
#loc144 = loc("CWE367_TOC_TOU__stat_17.c":85:9)
#loc145 = loc("CWE367_TOC_TOU__stat_17.c":86:5)
#loc146 = loc("CWE367_TOC_TOU__stat_17.c":116:5)
#loc147 = loc("CWE367_TOC_TOU__stat_17.c":86:13)
#loc148 = loc("CWE367_TOC_TOU__stat_17.c":86:9)
#loc149 = loc("CWE367_TOC_TOU__stat_17.c":86:16)
#loc150 = loc("CWE367_TOC_TOU__stat_17.c":86:20)
#loc151 = loc("CWE367_TOC_TOU__stat_17.c":86:18)
#loc152 = loc("CWE367_TOC_TOU__stat_17.c":87:5)
#loc153 = loc("CWE367_TOC_TOU__stat_17.c":88:9)
#loc154 = loc("CWE367_TOC_TOU__stat_17.c":115:9)
#loc155 = loc("CWE367_TOC_TOU__stat_17.c":89:13)
#loc156 = loc("CWE367_TOC_TOU__stat_17.c":89:34)
#loc157 = loc("CWE367_TOC_TOU__stat_17.c":90:13)
#loc158 = loc("CWE367_TOC_TOU__stat_17.c":90:29)
#loc159 = loc("CWE367_TOC_TOU__stat_17.c":90:28)
#loc160 = loc("CWE367_TOC_TOU__stat_17.c":91:13)
#loc161 = loc("CWE367_TOC_TOU__stat_17.c":96:13)
#loc162 = loc("CWE367_TOC_TOU__stat_17.c":91:23)
#loc163 = loc("CWE367_TOC_TOU__stat_17.c":91:33)
#loc164 = loc("CWE367_TOC_TOU__stat_17.c":91:38)
#loc165 = loc("CWE367_TOC_TOU__stat_17.c":91:17)
#loc166 = loc("CWE367_TOC_TOU__stat_17.c":91:48)
#loc167 = loc("CWE367_TOC_TOU__stat_17.c":92:13)
#loc168 = loc("CWE367_TOC_TOU__stat_17.c":93:27)
#loc169 = loc("CWE367_TOC_TOU__stat_17.c":93:17)
#loc170 = loc("CWE367_TOC_TOU__stat_17.c":95:31)
#loc171 = loc("CWE367_TOC_TOU__stat_17.c":95:26)
#loc172 = loc("CWE367_TOC_TOU__stat_17.c":95:17)
#loc173 = loc("CWE367_TOC_TOU__stat_17.c":97:13)
#loc174 = loc("CWE367_TOC_TOU__stat_17.c":100:13)
#loc175 = loc("CWE367_TOC_TOU__stat_17.c":97:17)
#loc176 = loc("CWE367_TOC_TOU__stat_17.c":97:24)
#loc177 = loc("CWE367_TOC_TOU__stat_17.c":97:36)
#loc178 = loc("CWE367_TOC_TOU__stat_17.c":98:13)
#loc179 = loc("CWE367_TOC_TOU__stat_17.c":99:48)
#loc180 = loc("CWE367_TOC_TOU__stat_17.c":99:26)
#loc181 = loc("CWE367_TOC_TOU__stat_17.c":99:33)
#loc182 = loc("CWE367_TOC_TOU__stat_17.c":99:43)
#loc183 = loc("CWE367_TOC_TOU__stat_17.c":99:17)
#loc184 = loc("CWE367_TOC_TOU__stat_17.c":102:30)
#loc185 = loc("CWE367_TOC_TOU__stat_17.c":102:40)
#loc186 = loc("CWE367_TOC_TOU__stat_17.c":102:25)
#loc187 = loc("CWE367_TOC_TOU__stat_17.c":102:13)
#loc188 = loc("CWE367_TOC_TOU__stat_17.c":102:46)
#loc189 = loc("CWE367_TOC_TOU__stat_17.c":103:13)
#loc190 = loc("CWE367_TOC_TOU__stat_17.c":106:13)
#loc191 = loc("CWE367_TOC_TOU__stat_17.c":103:17)
#loc192 = loc("CWE367_TOC_TOU__stat_17.c":103:30)
#loc193 = loc("CWE367_TOC_TOU__stat_17.c":103:29)
#loc194 = loc("CWE367_TOC_TOU__stat_17.c":104:13)
#loc195 = loc("CWE367_TOC_TOU__stat_17.c":105:17)
#loc196 = loc("CWE367_TOC_TOU__stat_17.c":105:22)
#loc197 = loc("CWE367_TOC_TOU__stat_17.c":107:13)
#loc198 = loc("CWE367_TOC_TOU__stat_17.c":110:13)
#loc199 = loc("CWE367_TOC_TOU__stat_17.c":107:23)
#loc200 = loc("CWE367_TOC_TOU__stat_17.c":107:51)
#loc201 = loc("CWE367_TOC_TOU__stat_17.c":107:74)
#loc202 = loc("CWE367_TOC_TOU__stat_17.c":107:17)
#loc203 = loc("CWE367_TOC_TOU__stat_17.c":107:81)
#loc204 = loc("CWE367_TOC_TOU__stat_17.c":107:80)
#loc205 = loc("CWE367_TOC_TOU__stat_17.c":108:13)
#loc206 = loc("CWE367_TOC_TOU__stat_17.c":109:17)
#loc207 = loc("CWE367_TOC_TOU__stat_17.c":109:22)
#loc208 = loc("CWE367_TOC_TOU__stat_17.c":111:13)
#loc209 = loc("CWE367_TOC_TOU__stat_17.c":114:13)
#loc210 = loc("CWE367_TOC_TOU__stat_17.c":111:17)
#loc211 = loc("CWE367_TOC_TOU__stat_17.c":111:30)
#loc212 = loc("CWE367_TOC_TOU__stat_17.c":111:29)
#loc213 = loc("CWE367_TOC_TOU__stat_17.c":112:13)
#loc214 = loc("CWE367_TOC_TOU__stat_17.c":113:23)
#loc215 = loc("CWE367_TOC_TOU__stat_17.c":113:17)
#loc216 = loc("CWE367_TOC_TOU__stat_17.c":86:24)
#loc217 = loc("CWE367_TOC_TOU__stat_17.c":86:23)
#loc218 = loc(fused[#loc1, #loc2])
#loc219 = loc(fused[#loc3, #loc4])
#loc220 = loc(fused[#loc5, #loc6])
#loc221 = loc(fused[#loc8, #loc9])
#loc222 = loc(fused[#loc10, #loc11])
#loc223 = loc(fused[#loc12, #loc13])
#loc224 = loc(fused[#loc14, #loc15])
#loc225 = loc(fused[#loc16, #loc17])
#loc226 = loc(fused[#loc19, #loc20])
#loc227 = loc(fused[#loc21, #loc22])
#loc228 = loc(fused[#loc23, #loc24])
#loc229 = loc(fused[#loc25, #loc26])
#loc230 = loc(fused[#loc28, #loc27])
#loc231 = loc(fused[#loc29, #loc30])
#loc232 = loc(fused[#loc32, #loc26])
#loc233 = loc(fused[#loc33, #loc34])
#loc234 = loc(fused[#loc35, #loc36])
#loc235 = loc(fused[#loc37, #loc38])
#loc236 = loc(fused[#loc39, #loc40])
#loc237 = loc(fused[#loc42, #loc43])
#loc238 = loc(fused[#loc47, #loc48])
#loc239 = loc(fused[#loc49, #loc43])
#loc240 = loc(fused[#loc53, #loc51])
#loc241 = loc(fused[#loc54, #loc55])
#loc242 = loc(fused[#loc56, #loc58])
#loc243 = loc(fused[#loc59, #loc55])
#loc244 = loc(fused[#loc61, #loc63])
#loc245 = loc(fused[#loc64, #loc60])
#loc246 = loc(fused[#loc65, #loc66])
#loc247 = loc(fused[#loc68, #loc69])
#loc248 = loc(fused[#loc71, #loc66])
#loc249 = loc(fused[#loc77, #loc78])
#loc250 = loc(fused[#loc79, #loc80])
#loc251 = loc(fused[#loc81, #loc82])
#loc252 = loc(fused[#loc84, #loc80])
#loc253 = loc(fused[#loc87, #loc88])
#loc254 = loc(fused[#loc90, #loc91])
#loc255 = loc(fused[#loc92, #loc93])
#loc256 = loc(fused[#loc95, #loc88])
#loc257 = loc(fused[#loc98, #loc99])
#loc258 = loc(fused[#loc100, #loc101])
#loc259 = loc(fused[#loc103, #loc99])
#loc260 = loc(fused[#loc107, #loc106])
#loc261 = loc(fused[#loc108, #loc109])
#loc262 = loc(fused[#loc110, #loc111])
#loc263 = loc(fused[#loc112, #loc113])
#loc264 = loc(fused[#loc114, #loc115])
#loc265 = loc(fused[#loc120, #loc121])
#loc268 = loc(fused[#loc131, #loc132])
#loc269 = loc(fused[#loc135, #loc136])
#loc270 = loc(fused[#loc139, #loc138])
#loc271 = loc(fused[#loc141, #loc142])
#loc272 = loc(fused[#loc143, #loc144])
#loc273 = loc(fused[#loc145, #loc146])
#loc274 = loc(fused[#loc148, #loc147])
#loc275 = loc(fused[#loc149, #loc150])
#loc276 = loc(fused[#loc152, #loc146])
#loc277 = loc(fused[#loc153, #loc154])
#loc278 = loc(fused[#loc155, #loc156])
#loc279 = loc(fused[#loc157, #loc158])
#loc280 = loc(fused[#loc160, #loc161])
#loc281 = loc(fused[#loc165, #loc166])
#loc282 = loc(fused[#loc167, #loc161])
#loc283 = loc(fused[#loc172, #loc170])
#loc284 = loc(fused[#loc173, #loc174])
#loc285 = loc(fused[#loc175, #loc177])
#loc286 = loc(fused[#loc178, #loc174])
#loc287 = loc(fused[#loc180, #loc182])
#loc288 = loc(fused[#loc183, #loc179])
#loc289 = loc(fused[#loc187, #loc188])
#loc290 = loc(fused[#loc189, #loc190])
#loc291 = loc(fused[#loc191, #loc192])
#loc292 = loc(fused[#loc194, #loc190])
#loc293 = loc(fused[#loc197, #loc198])
#loc294 = loc(fused[#loc200, #loc201])
#loc295 = loc(fused[#loc202, #loc203])
#loc296 = loc(fused[#loc205, #loc198])
#loc297 = loc(fused[#loc208, #loc209])
#loc298 = loc(fused[#loc210, #loc211])
#loc299 = loc(fused[#loc213, #loc209])
#loc300 = loc(fused[#loc217, #loc216])
