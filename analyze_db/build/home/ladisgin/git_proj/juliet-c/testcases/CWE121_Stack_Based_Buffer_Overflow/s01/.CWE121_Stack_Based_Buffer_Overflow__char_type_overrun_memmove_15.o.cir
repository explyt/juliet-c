!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__charVoid = !cir.struct<struct "_charVoid" {!cir.array<!s8i x 16>, !cir.ptr<!void>, !cir.ptr<!void>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"0123456789abcdef0123456789abcde\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc1)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc136)
    cir.br ^bb1 loc(#loc137)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<6> : !s32i loc(#loc11)
    cir.br ^bb2 loc(#loc9)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb7 [
      6: ^bb4
    ] loc(#loc9)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc12)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc138)
  ^bb5:  // pred: ^bb4
    %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc1)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc1)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc1)
    %5 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc15)
    cir.store %4, %5 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc139)
    %6 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc15)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc17)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc19)
    %9 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc141)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc141)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc23)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc23)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
    %15 = cir.const #cir.int<32> : !u64i loc(#loc142)
    cir.libc.memmove %15 bytes from %14 to %11 : !cir.ptr<!void>, !u64i loc(#loc143)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc28)
    %18 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
    %19 = cir.const #cir.int<16> : !u64i loc(#loc144)
    %20 = cir.const #cir.int<1> : !u64i loc(#loc145)
    %21 = cir.binop(div, %19, %20) : !u64i loc(#loc146)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc33)
    %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc147)
    %25 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc35)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %17, %26 : !s8i, !cir.ptr<!s8i> loc(#loc148)
    %27 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc149)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    %29 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc15)
    %30 = cir.load %29 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc40)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc150)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    cir.br ^bb6 loc(#loc14)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc43)
  ^bb7:  // pred: ^bb2
    %32 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc4)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc4)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.br ^bb8 loc(#loc45)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc10)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc6)
  } loc(#loc135)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc152)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc153)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc47)
  } loc(#loc151)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc155)
    cir.br ^bb1 loc(#loc156)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<5> : !s32i loc(#loc58)
    cir.br ^bb2 loc(#loc56)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc56)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc59)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %2 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc60)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    cir.br ^bb8 loc(#loc62)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc157)
  ^bb6:  // pred: ^bb5
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc65)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc65)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
    %7 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc15)
    cir.store %6, %7 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc158)
    %8 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc15)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc67)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc159)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %11 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc160)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc160)
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc72)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc72)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc72)
    %17 = cir.const #cir.int<16> : !u64i loc(#loc161)
    cir.libc.memmove %17 bytes from %16 to %13 : !cir.ptr<!void>, !u64i loc(#loc162)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc77)
    %20 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc163)
    %22 = cir.const #cir.int<1> : !u64i loc(#loc164)
    %23 = cir.binop(div, %21, %22) : !u64i loc(#loc165)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc82)
    %26 = cir.binop(sub, %23, %25) : !u64i loc(#loc166)
    %27 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc84)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc85)
    cir.store %19, %28 : !s8i, !cir.ptr<!s8i> loc(#loc167)
    %29 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc168)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %31 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc15)
    %32 = cir.load %31 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc89)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    cir.br ^bb7 loc(#loc64)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc92)
  ^bb8:  // 2 preds: ^bb4, ^bb7
    cir.br ^bb9 loc(#loc57)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc53)
  } loc(#loc154)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc171)
    cir.br ^bb1 loc(#loc172)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<6> : !s32i loc(#loc99)
    cir.br ^bb2 loc(#loc97)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb7 [
      6: ^bb4
    ] loc(#loc97)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc100)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc173)
  ^bb5:  // pred: ^bb4
    %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc103)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc103)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc103)
    %5 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc15)
    cir.store %4, %5 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc174)
    %6 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc15)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc105)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %9 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc176)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc176)
    %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc110)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc110)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
    %15 = cir.const #cir.int<16> : !u64i loc(#loc177)
    cir.libc.memmove %15 bytes from %14 to %11 : !cir.ptr<!void>, !u64i loc(#loc178)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc115)
    %18 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
    %19 = cir.const #cir.int<16> : !u64i loc(#loc179)
    %20 = cir.const #cir.int<1> : !u64i loc(#loc180)
    %21 = cir.binop(div, %19, %20) : !u64i loc(#loc181)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc120)
    %24 = cir.binop(sub, %21, %23) : !u64i loc(#loc182)
    %25 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc122)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc123)
    cir.store %17, %26 : !s8i, !cir.ptr<!s8i> loc(#loc183)
    %27 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc184)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    %29 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc15)
    %30 = cir.load %29 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc127)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc185)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    cir.br ^bb6 loc(#loc102)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc130)
  ^bb7:  // pred: ^bb2
    %32 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc131)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    cir.br ^bb8 loc(#loc133)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc98)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc94)
  } loc(#loc170)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":41:45)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":53:19)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":34:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":56:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":40:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":40:18)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":36:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":55:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":36:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":38:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":39:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":49:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":28:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":41:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":43:42)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":43:27)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":43:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":27:10)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":45:17)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":45:32)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":45:43)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":45:52)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":45:73)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":45:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":45:74)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":46:87)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":46:35)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":46:66)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":46:68)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":46:79)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":46:82)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":46:34)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":46:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":46:24)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":47:27)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":47:42)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":47:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":48:42)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":48:27)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":48:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":50:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":53:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":54:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":112:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":116:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":114:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":114:11)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":115:5)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":115:11)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":63:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":85:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":73:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":73:18)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":65:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":84:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":65:12)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":67:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":69:19)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":69:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":70:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":72:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":82:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":74:45)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":74:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":76:42)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":76:27)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":76:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":78:17)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":78:32)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":78:43)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":78:52)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":78:83)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":78:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":78:84)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":79:87)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":79:35)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":79:66)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":79:68)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":79:79)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":79:82)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":79:34)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":79:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":79:24)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":80:27)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":80:42)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":80:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":81:42)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":81:27)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":81:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":83:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":88:1)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":110:1)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":94:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":94:18)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":90:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":109:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":90:12)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":92:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":93:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":103:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":95:45)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":95:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":97:42)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":97:27)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":97:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":99:17)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":99:32)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":99:43)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":99:52)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":99:83)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":99:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":99:84)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":100:87)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":100:35)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":100:66)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":100:68)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":100:79)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":100:82)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":100:34)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":100:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":100:24)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":101:27)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":101:42)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":101:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":102:42)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":102:27)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":102:9)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":104:5)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":107:19)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":107:9)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_15.c":108:9)
#loc134 = loc(fused[#loc2, #loc3])
#loc135 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc7, #loc8])
#loc137 = loc(fused[#loc9, #loc10])
#loc138 = loc(fused[#loc13, #loc14])
#loc139 = loc(fused[#loc16, #loc1])
#loc140 = loc(fused[#loc18, #loc17])
#loc141 = loc(fused[#loc21, #loc22])
#loc142 = loc(fused[#loc24, #loc25])
#loc143 = loc(fused[#loc26, #loc27])
#loc144 = loc(fused[#loc29, #loc30])
#loc145 = loc(fused[#loc31, #loc32])
#loc146 = loc(fused[#loc29, #loc32])
#loc147 = loc(fused[#loc34, #loc33])
#loc148 = loc(fused[#loc35, #loc28])
#loc149 = loc(fused[#loc37, #loc38])
#loc150 = loc(fused[#loc41, #loc40])
#loc151 = loc(fused[#loc46, #loc47])
#loc152 = loc(fused[#loc48, #loc49])
#loc153 = loc(fused[#loc50, #loc51])
#loc154 = loc(fused[#loc52, #loc53])
#loc155 = loc(fused[#loc54, #loc55])
#loc156 = loc(fused[#loc56, #loc57])
#loc157 = loc(fused[#loc63, #loc64])
#loc158 = loc(fused[#loc66, #loc65])
#loc159 = loc(fused[#loc68, #loc67])
#loc160 = loc(fused[#loc70, #loc71])
#loc161 = loc(fused[#loc73, #loc74])
#loc162 = loc(fused[#loc75, #loc76])
#loc163 = loc(fused[#loc78, #loc79])
#loc164 = loc(fused[#loc80, #loc81])
#loc165 = loc(fused[#loc78, #loc81])
#loc166 = loc(fused[#loc83, #loc82])
#loc167 = loc(fused[#loc84, #loc77])
#loc168 = loc(fused[#loc86, #loc87])
#loc169 = loc(fused[#loc90, #loc89])
#loc170 = loc(fused[#loc93, #loc94])
#loc171 = loc(fused[#loc95, #loc96])
#loc172 = loc(fused[#loc97, #loc98])
#loc173 = loc(fused[#loc101, #loc102])
#loc174 = loc(fused[#loc104, #loc103])
#loc175 = loc(fused[#loc106, #loc105])
#loc176 = loc(fused[#loc108, #loc109])
#loc177 = loc(fused[#loc111, #loc112])
#loc178 = loc(fused[#loc113, #loc114])
#loc179 = loc(fused[#loc116, #loc117])
#loc180 = loc(fused[#loc118, #loc119])
#loc181 = loc(fused[#loc116, #loc119])
#loc182 = loc(fused[#loc121, #loc120])
#loc183 = loc(fused[#loc122, #loc115])
#loc184 = loc(fused[#loc124, #loc125])
#loc185 = loc(fused[#loc128, #loc127])
