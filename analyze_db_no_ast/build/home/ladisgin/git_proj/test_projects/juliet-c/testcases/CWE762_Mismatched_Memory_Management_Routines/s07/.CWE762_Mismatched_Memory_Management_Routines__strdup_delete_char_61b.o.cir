!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":27:18)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":27:25)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":42:22)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":42:29)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":50:22)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":50:29)
#loc48 = loc(fused[#loc5, #loc6])
#loc55 = loc(fused[#loc22, #loc23])
#loc60 = loc(fused[#loc33, #loc34])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc46)
  cir.func  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_619badSourceEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc5, #loc6])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc48)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc4)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc7)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc50)
      %5 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc50)
      cir.store %5, %4 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc50)
      %6 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc12)
      %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc13)
      %8 = cir.call @strdup(%7) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc12)
      cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc51)
    } loc(#loc49)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc52)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc52)
  } loc(#loc47)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc53)
  cir.func  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_6113goodG2BSourceEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc22, #loc23])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc55)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc21)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc24)
    %2 = cir.const #cir.int<1> : !u64i loc(#loc56)
    %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc27)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc56)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc57)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc58)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    cir.return %6 : !cir.ptr<!s8i> loc(#loc58)
  } loc(#loc54)
  cir.func  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_6113goodB2GSourceEPc(%arg0: !cir.ptr<!s8i> loc(fused[#loc33, #loc34])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc60)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc32)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc35)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc62)
      %5 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc62)
      cir.store %5, %4 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc62)
      %6 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc40)
      %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc41)
      %8 = cir.call @strdup(%7) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc40)
      cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc63)
    } loc(#loc61)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc64)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc64)
  } loc(#loc59)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":0:0)
#loc1 = loc("/usr/include/string.h":187:1)
#loc2 = loc("/usr/include/string.h":188:35)
#loc3 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":27:1)
#loc4 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":35:1)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":28:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":29:5)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":33:5)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":30:9)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":30:27)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":32:16)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":32:23)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":32:9)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":32:31)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":34:12)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":34:5)
#loc18 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc19 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":42:1)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":47:1)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":43:1)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":45:12)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":45:16)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":42:8)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":45:5)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":46:12)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":46:5)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":50:1)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":58:1)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":51:1)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":52:5)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":56:5)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":53:9)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":53:27)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":55:16)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":55:23)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":55:9)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":55:31)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":57:12)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_61b.cpp":57:5)
#loc46 = loc(fused[#loc1, #loc2])
#loc47 = loc(fused[#loc3, #loc4])
#loc49 = loc(fused[#loc8, #loc9])
#loc50 = loc(fused[#loc10, #loc11])
#loc51 = loc(fused[#loc14, #loc15])
#loc52 = loc(fused[#loc17, #loc16])
#loc53 = loc(fused[#loc18, #loc19])
#loc54 = loc(fused[#loc20, #loc21])
#loc56 = loc(fused[#loc25, #loc26])
#loc57 = loc(fused[#loc28, #loc26])
#loc58 = loc(fused[#loc30, #loc29])
#loc59 = loc(fused[#loc31, #loc32])
#loc61 = loc(fused[#loc36, #loc37])
#loc62 = loc(fused[#loc38, #loc39])
#loc63 = loc(fused[#loc42, #loc43])
#loc64 = loc(fused[#loc45, #loc44])
