!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc53 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":129:10)
#loc54 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":129:14)
#loc55 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":129:20)
#loc56 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":129:32)
#loc176 = loc(fused[#loc53, #loc54])
#loc177 = loc(fused[#loc55, #loc56])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @gets(...) -> !s32i loc(#loc)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Error Condition: alter control flow to indicate action taken\00" : !cir.array<!s8i x 61>> : !cir.array<!s8i x 61> {alignment = 1 : i64} loc(#loc3)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc156)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_08_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc159)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc10)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc10)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc162)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc163)
          %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc19)
          %6 = cir.get_global @gets : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc164)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>)>> loc(#loc164)
          %8 = cir.call %7(%5) : (!cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> !s32i loc(#loc20)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc20)
          %10 = cir.cast(int_to_ptr, %9 : !u64i), !cir.ptr<!s8i> loc(#loc20)
          cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
          cir.scope {
            %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc26)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc167)
            cir.if %22 {
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc3)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc3)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc28)
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc29)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc30)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc29)
            } loc(#loc168)
          } loc(#loc166)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc31)
          %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc31)
          %13 = cir.const #cir.int<10> : !s32i loc(#loc32)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc33)
          %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc32)
          %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc34)
          %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc34)
          cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc169)
          %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc35)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc36)
        } loc(#loc161)
      } loc(#loc160)
    } loc(#loc158)
    cir.return loc(#loc7)
  } loc(#loc157)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc172)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc38)
  } loc(#loc170)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc173)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc50)
  cir.func @main(%arg0: !s32i loc(fused[#loc53, #loc54]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc55, #loc56])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc176)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc177)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc52)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc57)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc57)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc58)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc59)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc59)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc60)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc47)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %8 = cir.get_global @CWE242_Use_of_Inherently_Dangerous_Function__basic_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call @CWE242_Use_of_Inherently_Dangerous_Function__basic_08_good() : () -> () loc(#loc62)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc48)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc49)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %13 = cir.get_global @CWE242_Use_of_Inherently_Dangerous_Function__basic_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call @CWE242_Use_of_Inherently_Dangerous_Function__basic_08_bad() : () -> () loc(#loc66)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc50)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc69)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    cir.return %17 : !s32i loc(#loc180)
  } loc(#loc175)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc72)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc73)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    cir.return %2 : !s32i loc(#loc182)
  } loc(#loc181)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc75)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc183)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc184)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc187)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc84)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc84)
      cir.if %2 {
        %3 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc75)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc75)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc89)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc190)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc191)
          %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc96)
          %6 = cir.const #cir.int<10> : !s32i loc(#loc97)
          %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc184)
          %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc98)
          %9 = cir.call @fgets(%5, %6, %8) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc99)
          cir.store %9, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
          cir.scope {
            %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc105)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc105)
            %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc194)
            cir.if %21 {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc107)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc107)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc108)
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc109)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc110)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc109)
            } loc(#loc195)
          } loc(#loc193)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc111)
          %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc111)
          %12 = cir.const #cir.int<10> : !s32i loc(#loc112)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc113)
          %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc112)
          %15 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc114)
          %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc114)
          cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc196)
          %17 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc115)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc116)
        } loc(#loc189)
      } loc(#loc188)
    } loc(#loc186)
    cir.return loc(#loc81)
  } loc(#loc185)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc118)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc119)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    cir.return %2 : !s32i loc(#loc198)
  } loc(#loc197)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc201)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc125)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc125)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc204)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc205)
          %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc134)
          %6 = cir.const #cir.int<10> : !s32i loc(#loc135)
          %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc184)
          %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc136)
          %9 = cir.call @fgets(%5, %6, %8) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc137)
          cir.store %9, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc206)
          cir.scope {
            %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc143)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc143)
            %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc208)
            cir.if %21 {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc145)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc145)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc146)
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc147)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc148)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc147)
            } loc(#loc209)
          } loc(#loc207)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc149)
          %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc149)
          %12 = cir.const #cir.int<10> : !s32i loc(#loc150)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc151)
          %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc150)
          %15 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc152)
          %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc152)
          cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc210)
          %17 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc153)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc154)
        } loc(#loc203)
      } loc(#loc202)
    } loc(#loc200)
    cir.return loc(#loc122)
  } loc(#loc199)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":50:27)
#loc4 = loc("/usr/include/stdlib.h":756:1)
#loc5 = loc("/usr/include/stdlib.h":756:70)
#loc6 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":35:1)
#loc7 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":57:1)
#loc8 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":37:5)
#loc9 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":56:5)
#loc10 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":37:8)
#loc11 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":37:26)
#loc12 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":38:5)
#loc13 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":39:9)
#loc14 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":55:9)
#loc15 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":40:13)
#loc16 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":40:32)
#loc17 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":41:13)
#loc18 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":41:19)
#loc19 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":45:27)
#loc20 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":45:22)
#loc21 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":45:31)
#loc22 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":45:13)
#loc23 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":47:13)
#loc24 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":52:13)
#loc25 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":47:17)
#loc26 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":47:27)
#loc27 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":48:13)
#loc28 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":50:17)
#loc29 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":51:17)
#loc30 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":51:22)
#loc31 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":53:33)
#loc32 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":53:18)
#loc33 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":53:28)
#loc34 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":53:13)
#loc35 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":54:23)
#loc36 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":54:13)
#loc37 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":114:1)
#loc38 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":118:1)
#loc39 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":116:5)
#loc40 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":116:11)
#loc41 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":117:5)
#loc42 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":117:11)
#loc43 = loc("/usr/include/stdlib.h":575:1)
#loc44 = loc("/usr/include/stdlib.h":575:41)
#loc45 = loc("/usr/include/time.h":76:1)
#loc46 = loc("/usr/include/time.h":76:38)
#loc47 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":134:15)
#loc48 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":136:15)
#loc49 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":139:15)
#loc50 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":141:15)
#loc51 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":129:1)
#loc52 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":144:1)
#loc57 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":130:1)
#loc58 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":132:27)
#loc59 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":132:22)
#loc60 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":132:5)
#loc61 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":134:5)
#loc62 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":135:5)
#loc63 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":135:64)
#loc64 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":136:5)
#loc65 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":139:5)
#loc66 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":140:5)
#loc67 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":140:63)
#loc68 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":141:5)
#loc69 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":143:12)
#loc70 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":143:5)
#loc71 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":23:1)
#loc72 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":26:1)
#loc73 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":25:12)
#loc74 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":25:5)
#loc75 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":69:19)
#loc76 = loc("/usr/include/stdio.h":654:1)
#loc77 = loc("/usr/include/stdio.h":655:59)
#loc78 = loc("/usr/include/stdio.h":149:1)
#loc79 = loc("/usr/include/stdio.h":149:14)
#loc80 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":64:1)
#loc81 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":89:1)
#loc82 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":66:5)
#loc83 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":88:5)
#loc84 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":66:8)
#loc85 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":66:27)
#loc86 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":67:5)
#loc87 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":70:5)
#loc88 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":72:5)
#loc89 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":69:9)
#loc90 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":73:9)
#loc91 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":87:9)
#loc92 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":74:13)
#loc93 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":74:32)
#loc94 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":75:13)
#loc95 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":75:19)
#loc96 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":77:28)
#loc97 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":77:34)
#loc98 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":77:45)
#loc99 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":77:22)
#loc100 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":77:13)
#loc101 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":77:50)
#loc102 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":79:13)
#loc103 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":84:13)
#loc104 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":79:17)
#loc105 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":79:27)
#loc106 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":80:13)
#loc107 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":82:27)
#loc108 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":82:17)
#loc109 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":83:17)
#loc110 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":83:22)
#loc111 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":85:33)
#loc112 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":85:18)
#loc113 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":85:28)
#loc114 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":85:13)
#loc115 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":86:23)
#loc116 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":86:13)
#loc117 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":28:1)
#loc118 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":31:1)
#loc119 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":30:12)
#loc120 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":30:5)
#loc121 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":92:1)
#loc122 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":112:1)
#loc123 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":94:5)
#loc124 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":111:5)
#loc125 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":94:8)
#loc126 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":94:26)
#loc127 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":95:5)
#loc128 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":96:9)
#loc129 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":110:9)
#loc130 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":97:13)
#loc131 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":97:32)
#loc132 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":98:13)
#loc133 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":98:19)
#loc134 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":100:28)
#loc135 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":100:34)
#loc136 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":100:45)
#loc137 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":100:22)
#loc138 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":100:13)
#loc139 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":100:50)
#loc140 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":102:13)
#loc141 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":107:13)
#loc142 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":102:17)
#loc143 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":102:27)
#loc144 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":103:13)
#loc145 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":105:27)
#loc146 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":105:17)
#loc147 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":106:17)
#loc148 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":106:22)
#loc149 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":108:33)
#loc150 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":108:18)
#loc151 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":108:28)
#loc152 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":108:13)
#loc153 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":109:23)
#loc154 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_08.c":109:13)
#loc155 = loc(fused[#loc1, #loc2])
#loc156 = loc(fused[#loc4, #loc5])
#loc157 = loc(fused[#loc6, #loc7])
#loc158 = loc(fused[#loc8, #loc9])
#loc159 = loc(fused[#loc10, #loc11])
#loc160 = loc(fused[#loc12, #loc9])
#loc161 = loc(fused[#loc13, #loc14])
#loc162 = loc(fused[#loc15, #loc16])
#loc163 = loc(fused[#loc17, #loc18])
#loc164 = loc(fused[#loc20, #loc21])
#loc165 = loc(fused[#loc22, #loc21])
#loc166 = loc(fused[#loc23, #loc24])
#loc167 = loc(fused[#loc25, #loc26])
#loc168 = loc(fused[#loc27, #loc24])
#loc169 = loc(fused[#loc34, #loc31])
#loc170 = loc(fused[#loc37, #loc38])
#loc171 = loc(fused[#loc39, #loc40])
#loc172 = loc(fused[#loc41, #loc42])
#loc173 = loc(fused[#loc43, #loc44])
#loc174 = loc(fused[#loc45, #loc46])
#loc175 = loc(fused[#loc51, #loc52])
#loc178 = loc(fused[#loc62, #loc63])
#loc179 = loc(fused[#loc66, #loc67])
#loc180 = loc(fused[#loc70, #loc69])
#loc181 = loc(fused[#loc71, #loc72])
#loc182 = loc(fused[#loc74, #loc73])
#loc183 = loc(fused[#loc76, #loc77])
#loc184 = loc(fused[#loc78, #loc79])
#loc185 = loc(fused[#loc80, #loc81])
#loc186 = loc(fused[#loc82, #loc83])
#loc187 = loc(fused[#loc84, #loc85])
#loc188 = loc(fused[#loc86, #loc87, #loc88, #loc83])
#loc189 = loc(fused[#loc90, #loc91])
#loc190 = loc(fused[#loc92, #loc93])
#loc191 = loc(fused[#loc94, #loc95])
#loc192 = loc(fused[#loc100, #loc101])
#loc193 = loc(fused[#loc102, #loc103])
#loc194 = loc(fused[#loc104, #loc105])
#loc195 = loc(fused[#loc106, #loc103])
#loc196 = loc(fused[#loc114, #loc111])
#loc197 = loc(fused[#loc117, #loc118])
#loc198 = loc(fused[#loc120, #loc119])
#loc199 = loc(fused[#loc121, #loc122])
#loc200 = loc(fused[#loc123, #loc124])
#loc201 = loc(fused[#loc125, #loc126])
#loc202 = loc(fused[#loc127, #loc124])
#loc203 = loc(fused[#loc128, #loc129])
#loc204 = loc(fused[#loc130, #loc131])
#loc205 = loc(fused[#loc132, #loc133])
#loc206 = loc(fused[#loc138, #loc139])
#loc207 = loc(fused[#loc140, #loc141])
#loc208 = loc(fused[#loc142, #loc143])
#loc209 = loc(fused[#loc144, #loc141])
#loc210 = loc(fused[#loc152, #loc149])
