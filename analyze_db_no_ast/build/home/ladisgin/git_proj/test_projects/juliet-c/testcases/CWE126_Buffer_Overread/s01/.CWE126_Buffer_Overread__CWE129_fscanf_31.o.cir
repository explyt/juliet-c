!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc118)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc119)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @printIntLine(!s32i) loc(#loc120)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc121)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fscanf_31_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc123)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc16)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc18)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc119)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc19)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc18)
    cir.scope {
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc126)
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc127)
      %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc23)
      cir.store %11, %9 : !s32i, !cir.ptr<!s32i> loc(#loc126)
      %12 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc25)
      cir.store %12, %10 : !s32i, !cir.ptr<!s32i> loc(#loc127)
      cir.scope {
        %13 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc129)
        %14 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc129)
        cir.store %14, %13 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc129)
        cir.scope {
          %15 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc32)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc33)
          %17 = cir.cmp(ge, %15, %16) : !s32i, !s32i loc(#loc131)
          %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc34)
          cir.if %18 {
            %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc38)
            %20 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc39)
            %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc39)
            %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc39)
            cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc40)
          } else {
            %19 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc10)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc10)
            cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc41)
          } loc(#loc132)
        } loc(#loc130)
      } loc(#loc128)
    } loc(#loc125)
    cir.return loc(#loc12)
  } loc(#loc122)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fscanf_31_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc135)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc133)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc137)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc53)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc55)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc141)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc142)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc60)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc141)
      %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc62)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc142)
      cir.scope {
        %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc144)
        %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc144)
        cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc144)
        cir.scope {
          %10 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc69)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc70)
          %12 = cir.cmp(ge, %10, %11) : !s32i, !s32i loc(#loc146)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc71)
          cir.if %13 {
            %14 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc75)
            %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc76)
            %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc76)
            %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc76)
            cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc77)
          } else {
            %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc78)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc78)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc79)
          } loc(#loc147)
        } loc(#loc145)
      } loc(#loc143)
    } loc(#loc140)
    cir.return loc(#loc49)
  } loc(#loc136)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc80)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc149)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc86)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc88)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc119)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc89)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc90)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc90)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc88)
    cir.scope {
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc152)
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc153)
      %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
      cir.store %11, %9 : !s32i, !cir.ptr<!s32i> loc(#loc152)
      %12 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc96)
      cir.store %12, %10 : !s32i, !cir.ptr<!s32i> loc(#loc153)
      cir.scope {
        %13 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc155)
        %14 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc155)
        cir.store %14, %13 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc155)
        cir.scope {
          %15 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc103)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc104)
          %17 = cir.cmp(ge, %15, %16) : !s32i, !s32i loc(#loc157)
          %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc105)
          %19 = cir.ternary(%18, true {
            %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc107)
            %21 = cir.const #cir.int<10> : !s32i loc(#loc108)
            %22 = cir.cmp(lt, %20, %21) : !s32i, !s32i loc(#loc158)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc110)
            %24 = cir.ternary(%23, true {
              %25 = cir.const #true loc(#loc106)
              cir.yield %25 : !cir.bool loc(#loc106)
            }, false {
              %25 = cir.const #false loc(#loc106)
              cir.yield %25 : !cir.bool loc(#loc106)
            }) : (!cir.bool) -> !cir.bool loc(#loc106)
            cir.yield %24 : !cir.bool loc(#loc106)
          }, false {
            %20 = cir.const #false loc(#loc106)
            cir.yield %20 : !cir.bool loc(#loc106)
          }) : (!cir.bool) -> !cir.bool loc(#loc106)
          cir.if %19 {
            %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc114)
            %21 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc115)
            %22 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc115)
            %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc116)
          } else {
            %20 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc80)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc80)
            cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc117)
          } loc(#loc159)
        } loc(#loc156)
      } loc(#loc154)
    } loc(#loc151)
    cir.return loc(#loc82)
  } loc(#loc148)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_31.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":28:19)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":42:27)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":22:1)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":46:1)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":24:5)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":24:9)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":26:13)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":26:12)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":26:5)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":28:5)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":28:12)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":29:5)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":45:5)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":30:9)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":30:24)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":31:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":31:20)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":32:9)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":44:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":33:13)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":33:34)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":36:13)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":43:13)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":36:17)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":36:25)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":36:22)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":37:13)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":39:13)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":41:13)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":38:37)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":38:30)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":38:17)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":42:17)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":106:1)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":110:1)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":108:5)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":108:13)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":109:5)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":109:13)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":53:1)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":78:1)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":55:5)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":55:9)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":57:13)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":57:12)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":57:5)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":60:12)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":60:5)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":61:5)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":77:5)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":62:9)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":62:24)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":63:9)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":63:20)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":64:9)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":76:9)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":65:13)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":65:34)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":68:13)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":75:13)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":68:17)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":68:25)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":68:22)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":69:13)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":71:13)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":73:13)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":70:37)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":70:30)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":70:17)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":74:27)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":74:17)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":100:27)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":81:1)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":104:1)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":83:5)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":83:9)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":85:13)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":85:12)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":85:5)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":87:5)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":87:12)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":87:19)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":88:5)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":103:5)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":89:9)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":89:24)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":90:9)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":90:20)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":91:9)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":102:9)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":92:13)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":92:34)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":94:13)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":101:13)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":94:17)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":94:25)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":94:22)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":94:27)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":94:30)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":94:38)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":94:40)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":94:35)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":95:13)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":97:13)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":99:13)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":96:37)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":96:30)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":96:17)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fscanf_31.c":100:17)
#loc118 = loc(fused[#loc1, #loc2])
#loc119 = loc(fused[#loc3, #loc4])
#loc120 = loc(fused[#loc6, #loc7])
#loc121 = loc(fused[#loc8, #loc9])
#loc122 = loc(fused[#loc11, #loc12])
#loc123 = loc(fused[#loc13, #loc14])
#loc124 = loc(fused[#loc17, #loc15])
#loc125 = loc(fused[#loc20, #loc21])
#loc126 = loc(fused[#loc22, #loc23])
#loc127 = loc(fused[#loc24, #loc25])
#loc128 = loc(fused[#loc26, #loc27])
#loc129 = loc(fused[#loc28, #loc29])
#loc130 = loc(fused[#loc30, #loc31])
#loc131 = loc(fused[#loc32, #loc33])
#loc132 = loc(fused[#loc35, #loc36, #loc37, #loc31])
#loc133 = loc(fused[#loc42, #loc43])
#loc134 = loc(fused[#loc44, #loc45])
#loc135 = loc(fused[#loc46, #loc47])
#loc136 = loc(fused[#loc48, #loc49])
#loc137 = loc(fused[#loc50, #loc51])
#loc138 = loc(fused[#loc54, #loc52])
#loc139 = loc(fused[#loc56, #loc55])
#loc140 = loc(fused[#loc57, #loc58])
#loc141 = loc(fused[#loc59, #loc60])
#loc142 = loc(fused[#loc61, #loc62])
#loc143 = loc(fused[#loc63, #loc64])
#loc144 = loc(fused[#loc65, #loc66])
#loc145 = loc(fused[#loc67, #loc68])
#loc146 = loc(fused[#loc69, #loc70])
#loc147 = loc(fused[#loc72, #loc73, #loc74, #loc68])
#loc148 = loc(fused[#loc81, #loc82])
#loc149 = loc(fused[#loc83, #loc84])
#loc150 = loc(fused[#loc87, #loc85])
#loc151 = loc(fused[#loc91, #loc92])
#loc152 = loc(fused[#loc93, #loc94])
#loc153 = loc(fused[#loc95, #loc96])
#loc154 = loc(fused[#loc97, #loc98])
#loc155 = loc(fused[#loc99, #loc100])
#loc156 = loc(fused[#loc101, #loc102])
#loc157 = loc(fused[#loc103, #loc104])
#loc158 = loc(fused[#loc107, #loc109])
#loc159 = loc(fused[#loc111, #loc112, #loc113, #loc102])
