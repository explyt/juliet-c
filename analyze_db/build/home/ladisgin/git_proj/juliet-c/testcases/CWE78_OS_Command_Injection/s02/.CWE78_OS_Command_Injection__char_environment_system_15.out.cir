!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc83 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":147:10)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":147:14)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":147:20)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":147:32)
#loc189 = loc(fused[#loc83, #loc84])
#loc190 = loc(fused[#loc85, #loc86])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_system_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc159)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc160)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_environment_system_15_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc161)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc162)
  cir.func private @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc11)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc164)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc165)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc16)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc19)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc167)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_system_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc161)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_environment_system_15_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc161)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc161)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc30)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc173)
            %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc174)
            %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc38)
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
            %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc38)
            cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc173)
            %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc11)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc11)
            %12 = cir.call @getenv(%11) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc40)
            cir.store %12, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
            cir.scope {
              %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
              %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
              %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
              %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc176)
              cir.if %16 {
                %17 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc46)
                %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
                %19 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc48)
                %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc49)
                %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
                %22 = cir.const #cir.int<100> : !s32i loc(#loc51)
                %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc51)
                %24 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc52)
                %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc178)
                %26 = cir.const #cir.int<1> : !s32i loc(#loc53)
                %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc53)
                %28 = cir.binop(sub, %25, %27) : !u64i loc(#loc179)
                %29 = cir.call @strncat(%20, %21, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc46)
              } loc(#loc177)
            } loc(#loc175)
          } loc(#loc172)
          cir.break loc(#loc54)
        } loc(#loc31)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc16)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc16)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc56)
          cir.break loc(#loc57)
        } loc(#loc55)
        cir.yield loc(#loc28)
      } loc(#loc28)
    } loc(#loc171)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc61)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc62)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc181)
      cir.if %7 {
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc19)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc19)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc64)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc65)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc66)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc65)
      } loc(#loc182)
    } loc(#loc180)
    cir.return loc(#loc23)
  } loc(#loc168)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_system_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    cir.return loc(#loc68)
  } loc(#loc183)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc186)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc187)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc80)
  cir.func @main(%arg0: !s32i loc(fused[#loc83, #loc84]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc85, #loc86])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc189)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc190)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc82)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc87)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc88)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc89)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc89)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc90)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc77)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_environment_system_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc191)
    cir.call @CWE78_OS_Command_Injection__char_environment_system_15_good() : () -> () loc(#loc92)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc78)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc79)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_environment_system_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call @CWE78_OS_Command_Injection__char_environment_system_15_bad() : () -> () loc(#loc96)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc80)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc99)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    cir.return %17 : !s32i loc(#loc193)
  } loc(#loc188)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc194)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc103)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc196)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc160)
    %2 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc160)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc160)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc108)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc112)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc114)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc114)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc115)
          cir.break loc(#loc116)
        } loc(#loc113)
        cir.case(default, []) {
          %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc118)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
          %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc103)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc103)
          %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc118)
          cir.break loc(#loc120)
        } loc(#loc117)
        cir.yield loc(#loc110)
      } loc(#loc110)
    } loc(#loc198)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc124)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc125)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc200)
      cir.if %7 {
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc127)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc127)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc128)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc129)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc130)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc129)
      } loc(#loc201)
    } loc(#loc199)
    cir.return loc(#loc105)
  } loc(#loc195)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc203)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc159)
    %2 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc159)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc159)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc139)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc141)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
          %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc143)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc143)
          %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc141)
          cir.break loc(#loc144)
        } loc(#loc140)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc146)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc146)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc147)
          cir.break loc(#loc148)
        } loc(#loc145)
        cir.yield loc(#loc137)
      } loc(#loc137)
    } loc(#loc205)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc152)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc153)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc207)
      cir.if %7 {
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc155)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc155)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc156)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc157)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc158)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc157)
      } loc(#loc208)
    } loc(#loc206)
    cir.return loc(#loc132)
  } loc(#loc202)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_system_15.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":110:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":110:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":85:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":85:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":47:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":47:26)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/stdlib.h":773:1)
#loc10 = loc("/usr/include/stdlib.h":773:50)
#loc11 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":55:37)
#loc12 = loc("/usr/include/string.h":152:1)
#loc13 = loc("/usr/include/string.h":153:29)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc16 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":66:19)
#loc17 = loc("/usr/include/stdlib.h":923:1)
#loc18 = loc("/usr/include/stdlib.h":923:41)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":72:19)
#loc20 = loc("/usr/include/stdlib.h":756:1)
#loc21 = loc("/usr/include/stdlib.h":756:70)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":44:1)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":75:1)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":46:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":46:12)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":48:12)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":48:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":49:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":68:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":49:12)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":51:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":52:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":62:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":54:9)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":54:37)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":55:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":55:49)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":54:26)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":54:33)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":55:30)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":57:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":61:9)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":57:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":57:28)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":58:9)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":60:13)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":60:21)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":60:26)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":60:25)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":60:35)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":60:48)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":60:52)
#loc53 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":60:60)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":63:5)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":64:5)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":66:9)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":67:9)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":70:5)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":74:5)
#loc60 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":70:16)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":70:9)
#loc62 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":70:25)
#loc63 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":71:5)
#loc64 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":72:9)
#loc65 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":73:9)
#loc66 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":73:14)
#loc67 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":131:1)
#loc68 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":135:1)
#loc69 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":133:5)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":133:14)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":134:5)
#loc72 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":134:14)
#loc73 = loc("/usr/include/stdlib.h":575:1)
#loc74 = loc("/usr/include/stdlib.h":575:41)
#loc75 = loc("/usr/include/time.h":76:1)
#loc76 = loc("/usr/include/time.h":76:38)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":152:15)
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":154:15)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":157:15)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":159:15)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":147:1)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":162:1)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":148:1)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":150:27)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":150:22)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":150:5)
#loc91 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":152:5)
#loc92 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":153:5)
#loc93 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":153:65)
#loc94 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":154:5)
#loc95 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":157:5)
#loc96 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":158:5)
#loc97 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":158:64)
#loc98 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":159:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":161:12)
#loc100 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":161:5)
#loc101 = loc("/usr/include/string.h":149:1)
#loc102 = loc("/usr/include/string.h":150:14)
#loc103 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":95:22)
#loc104 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":82:1)
#loc105 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":104:1)
#loc106 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":84:5)
#loc107 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":84:12)
#loc108 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":86:12)
#loc109 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":86:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":87:5)
#loc111 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":97:5)
#loc112 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":87:12)
#loc113 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":89:5)
#loc114 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":91:19)
#loc115 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":91:9)
#loc116 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":92:9)
#loc117 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":93:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":95:9)
#loc119 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":95:16)
#loc120 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":96:9)
#loc121 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":99:5)
#loc122 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":103:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":99:16)
#loc124 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":99:9)
#loc125 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":99:25)
#loc126 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":100:5)
#loc127 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":101:19)
#loc128 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":101:9)
#loc129 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":102:9)
#loc130 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":102:14)
#loc131 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":107:1)
#loc132 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":129:1)
#loc133 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":109:5)
#loc134 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":109:12)
#loc135 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":111:12)
#loc136 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":111:5)
#loc137 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":112:5)
#loc138 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":122:5)
#loc139 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":112:12)
#loc140 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":114:5)
#loc141 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":116:9)
#loc142 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":116:16)
#loc143 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":116:22)
#loc144 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":117:9)
#loc145 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":118:5)
#loc146 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":120:19)
#loc147 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":120:9)
#loc148 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":121:9)
#loc149 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":124:5)
#loc150 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":128:5)
#loc151 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":124:16)
#loc152 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":124:9)
#loc153 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":124:25)
#loc154 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":125:5)
#loc155 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":126:19)
#loc156 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":126:9)
#loc157 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":127:9)
#loc158 = loc("CWE78_OS_Command_Injection__char_environment_system_15.c":127:14)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc7, #loc8])
#loc163 = loc(fused[#loc9, #loc10])
#loc164 = loc(fused[#loc12, #loc13])
#loc165 = loc(fused[#loc14, #loc15])
#loc166 = loc(fused[#loc17, #loc18])
#loc167 = loc(fused[#loc20, #loc21])
#loc168 = loc(fused[#loc22, #loc23])
#loc169 = loc(fused[#loc24, #loc25])
#loc170 = loc(fused[#loc27, #loc26])
#loc171 = loc(fused[#loc28, #loc29])
#loc172 = loc(fused[#loc32, #loc33])
#loc173 = loc(fused[#loc34, #loc35])
#loc174 = loc(fused[#loc36, #loc37])
#loc175 = loc(fused[#loc41, #loc42])
#loc176 = loc(fused[#loc43, #loc44])
#loc177 = loc(fused[#loc45, #loc42])
#loc178 = loc(fused[#loc51, #loc52])
#loc179 = loc(fused[#loc51, #loc53])
#loc180 = loc(fused[#loc58, #loc59])
#loc181 = loc(fused[#loc61, #loc62])
#loc182 = loc(fused[#loc63, #loc59])
#loc183 = loc(fused[#loc67, #loc68])
#loc184 = loc(fused[#loc69, #loc70])
#loc185 = loc(fused[#loc71, #loc72])
#loc186 = loc(fused[#loc73, #loc74])
#loc187 = loc(fused[#loc75, #loc76])
#loc188 = loc(fused[#loc81, #loc82])
#loc191 = loc(fused[#loc92, #loc93])
#loc192 = loc(fused[#loc96, #loc97])
#loc193 = loc(fused[#loc100, #loc99])
#loc194 = loc(fused[#loc101, #loc102])
#loc195 = loc(fused[#loc104, #loc105])
#loc196 = loc(fused[#loc106, #loc107])
#loc197 = loc(fused[#loc109, #loc108])
#loc198 = loc(fused[#loc110, #loc111])
#loc199 = loc(fused[#loc121, #loc122])
#loc200 = loc(fused[#loc124, #loc125])
#loc201 = loc(fused[#loc126, #loc122])
#loc202 = loc(fused[#loc131, #loc132])
#loc203 = loc(fused[#loc133, #loc134])
#loc204 = loc(fused[#loc136, #loc135])
#loc205 = loc(fused[#loc137, #loc138])
#loc206 = loc(fused[#loc149, #loc150])
#loc207 = loc(fused[#loc152, #loc153])
#loc208 = loc(fused[#loc154, #loc150])
