!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc42 = loc("../../../testcasesupport/std_testcase.h":68:7)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":206:10)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":206:14)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":206:20)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":206:32)
!ty_OneIntClass = !cir.struct<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc281 = loc(fused[#loc189, #loc190])
#loc282 = loc(fused[#loc191, #loc192])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @_ZL10staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc205)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private @printIntLine(!s32i) loc(#loc206)
  cir.func @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_053badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc209)
    %2 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc210)
    %3 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc211)
    cir.br ^bb1 loc(#loc212)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc205)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc18)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc18)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc213)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc20)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
    cir.br ^bb3 loc(#loc17)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc215)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc205)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %10 ^bb6, ^bb9 loc(#loc216)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc217)
  ^bb7:  // pred: ^bb6
    %11 = cir.const #cir.int<8> : !u64i loc(#loc218)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc29)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc218)
    cir.call @_ZN12TwoIntsClassC2Ev(%14) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc9)
    cir.store %14, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc208)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc30)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc31)
    %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
    cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    %18 = cir.const #cir.int<10> : !s32i loc(#loc33)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc34)
    %20 = cir.get_member %19[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc35)
    cir.store %18, %20 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc36)
    %22 = cir.get_member %21[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc38)
    cir.br ^bb8 loc(#loc27)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc23)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc23)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc7)
  } loc(#loc207)
  cir.global "private" internal dsolocal @_ZL11staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc41)
  cir.func linkonce_odr @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc42)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc42)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc42)
    cir.return loc(#loc42)
  } loc(#loc42)
  cir.func internal private @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc223)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc224)
    %2 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc225)
    %3 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc226)
    cir.br ^bb1 loc(#loc227)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc205)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc55)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc228)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc57)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
    cir.br ^bb3 loc(#loc54)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc54)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc230)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @_ZL11staticFalse : !cir.ptr<!s32i> loc(#loc221)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc61)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc231)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc41)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    cir.br ^bb10 loc(#loc63)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc232)
  ^bb8:  // pred: ^bb7
    %13 = cir.const #cir.int<4> : !u64i loc(#loc233)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc69)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc233)
    cir.call @_ZN11OneIntClassC2Ev(%16) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc46)
    cir.store %16, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc223)
    %17 = cir.const #cir.int<5> : !s32i loc(#loc70)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc71)
    %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc72)
    cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc73)
    %21 = cir.get_member %20[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc72)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc75)
    cir.br ^bb9 loc(#loc67)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc60)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc60)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc44)
  } loc(#loc222)
  cir.func internal private @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc236)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc237)
    %2 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc238)
    %3 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc239)
    cir.br ^bb1 loc(#loc240)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc205)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc88)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc241)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc90)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc242)
    cir.br ^bb3 loc(#loc87)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc87)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc243)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc205)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc94)
    cir.brcond %10 ^bb6, ^bb9 loc(#loc244)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc245)
  ^bb7:  // pred: ^bb6
    %11 = cir.const #cir.int<4> : !u64i loc(#loc246)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc99)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc246)
    cir.call @_ZN11OneIntClassC2Ev(%14) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc79)
    cir.store %14, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc236)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc100)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc101)
    %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc72)
    cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc102)
    %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc72)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc104)
    cir.br ^bb8 loc(#loc97)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc93)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc93)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc77)
  } loc(#loc235)
  cir.func internal private @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc249)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc250)
    %2 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc251)
    %3 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc252)
    cir.br ^bb1 loc(#loc253)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @_ZL11staticFalse : !cir.ptr<!s32i> loc(#loc221)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc117)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc254)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc121)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    cir.br ^bb4 loc(#loc119)
  ^bb3:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc123)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc255)
    cir.br ^bb4 loc(#loc116)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc116)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc256)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc205)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc127)
    cir.brcond %12 ^bb7, ^bb10 loc(#loc257)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc258)
  ^bb8:  // pred: ^bb7
    %13 = cir.const #cir.int<8> : !u64i loc(#loc259)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc259)
    cir.call @_ZN12TwoIntsClassC2Ev(%16) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc108)
    cir.store %16, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc249)
    %17 = cir.const #cir.int<5> : !s32i loc(#loc133)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc134)
    %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
    cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    %20 = cir.const #cir.int<10> : !s32i loc(#loc135)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc136)
    %22 = cir.get_member %21[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc35)
    cir.store %20, %22 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc137)
    %24 = cir.get_member %23[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
    %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc139)
    cir.br ^bb9 loc(#loc130)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc126)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc126)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc106)
  } loc(#loc248)
  cir.func internal private @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc263)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc264)
    %2 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc265)
    %3 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc266)
    cir.br ^bb1 loc(#loc267)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc205)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc152)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc268)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc154)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc269)
    cir.br ^bb3 loc(#loc151)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc151)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc270)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc205)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc158)
    cir.brcond %10 ^bb6, ^bb9 loc(#loc271)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc272)
  ^bb7:  // pred: ^bb6
    %11 = cir.const #cir.int<8> : !u64i loc(#loc273)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc163)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc273)
    cir.call @_ZN12TwoIntsClassC2Ev(%14) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc143)
    cir.store %14, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc263)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc164)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc165)
    %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
    cir.store %15, %17 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    %18 = cir.const #cir.int<10> : !s32i loc(#loc166)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc167)
    %20 = cir.get_member %19[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc35)
    cir.store %18, %20 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc168)
    %22 = cir.get_member %21[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc32)
    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc170)
    cir.br ^bb8 loc(#loc161)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc157)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc157)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc141)
  } loc(#loc262)
  cir.func @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_054goodEv() extra(#fn_attr1) {
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05L8goodB2G1Ev() : () -> () loc(#loc173)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05L8goodB2G2Ev() : () -> () loc(#loc174)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05L8goodG2B1Ev() : () -> () loc(#loc175)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05L8goodG2B2Ev() : () -> () loc(#loc176)
    cir.return loc(#loc172)
  } loc(#loc276)
  cir.func private @srand(!u32i) extra(#fn_attr2) loc(#loc277)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr2) loc(#loc278)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc279)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc183)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc184)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc185)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc186)
  cir.func @main(%arg0: !s32i loc(fused[#loc189, #loc190]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc191, #loc192])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc281)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc282)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc188)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc193)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc194)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr2) loc(#loc195)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc195)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr2) loc(#loc196)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc183)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc183)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc197)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_054goodEv() : () -> () loc(#loc198)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc184)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc184)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc199)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc185)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc185)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc200)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_053badEv() : () -> () loc(#loc201)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc186)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc186)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc202)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc203)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc283)
    cir.return %15 : !s32i loc(#loc283)
  } loc(#loc280)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":23:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":23:25)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":31:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":57:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":49:13)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":49:49)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":33:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":33:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":34:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":34:43)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":35:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":35:45)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":36:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":40:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":36:8)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":37:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":39:16)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":39:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":41:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":56:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":41:8)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":42:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":43:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":55:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":49:39)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":49:43)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":51:32)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":51:13)
#loc32 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":52:32)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":52:13)
#loc35 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":53:26)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":53:36)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":53:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":24:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":24:26)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":77:19)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":64:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":93:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":87:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":87:48)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":66:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":66:12)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":67:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":67:43)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":68:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":68:45)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":69:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":73:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":69:8)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":70:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":72:16)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":72:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":74:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":92:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":74:8)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":75:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":78:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":80:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":77:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":81:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":91:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":87:38)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":87:42)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":89:32)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":89:13)
#loc72 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":90:26)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":90:36)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":90:13)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":96:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":120:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":114:13)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":114:48)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":98:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":98:12)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":99:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":99:43)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":100:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":100:45)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":101:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":105:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":101:8)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":102:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":104:16)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":104:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":106:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":119:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":106:8)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":107:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":108:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":118:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":114:38)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":114:42)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":116:32)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":116:13)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":117:26)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":117:36)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":117:13)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":123:1)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":154:1)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":146:13)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":146:49)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":125:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":125:12)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":126:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":126:43)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":127:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":127:45)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":128:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":137:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":128:8)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":129:5)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":132:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":134:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":131:19)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":131:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":136:16)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":136:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":138:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":153:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":138:8)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":139:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":140:9)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":152:9)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":146:39)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":146:43)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":148:32)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":148:13)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":149:32)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":149:13)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":150:26)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":150:36)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":150:13)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":157:1)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":183:1)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":175:13)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":175:49)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":159:5)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":159:12)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":160:5)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":160:43)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":161:5)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":161:45)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":162:5)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":166:5)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":162:8)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":163:5)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":165:16)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":165:9)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":167:5)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":182:5)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":167:8)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":168:5)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":169:9)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":181:9)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":175:39)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":175:43)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":177:32)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":177:13)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":178:32)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":178:13)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":179:26)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":179:36)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":179:13)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":185:1)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":191:1)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":187:5)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":188:5)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":189:5)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":190:5)
#loc177 = loc("/usr/include/stdlib.h":575:1)
#loc178 = loc("/usr/include/stdlib.h":575:41)
#loc179 = loc("/usr/include/time.h":76:1)
#loc180 = loc("/usr/include/time.h":76:38)
#loc181 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc182 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":211:15)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":213:15)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":216:15)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":218:15)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":206:1)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":221:1)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":207:1)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":209:27)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":209:22)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":209:5)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":211:5)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":212:5)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":213:5)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":216:5)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":217:5)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":218:5)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":220:12)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_05.cpp":220:5)
#loc205 = loc(fused[#loc1, #loc2])
#loc206 = loc(fused[#loc4, #loc5])
#loc207 = loc(fused[#loc6, #loc7])
#loc208 = loc(fused[#loc8, #loc9])
#loc209 = loc(fused[#loc10, #loc11])
#loc210 = loc(fused[#loc12, #loc13])
#loc211 = loc(fused[#loc14, #loc15])
#loc212 = loc(fused[#loc16, #loc17])
#loc213 = loc(fused[#loc19, #loc17])
#loc214 = loc(fused[#loc21, #loc20])
#loc215 = loc(fused[#loc22, #loc23])
#loc216 = loc(fused[#loc25, #loc23])
#loc217 = loc(fused[#loc26, #loc27])
#loc218 = loc(fused[#loc28, #loc9])
#loc219 = loc(fused[#loc31, #loc30])
#loc220 = loc(fused[#loc34, #loc33])
#loc221 = loc(fused[#loc39, #loc40])
#loc222 = loc(fused[#loc43, #loc44])
#loc223 = loc(fused[#loc45, #loc46])
#loc224 = loc(fused[#loc47, #loc48])
#loc225 = loc(fused[#loc49, #loc50])
#loc226 = loc(fused[#loc51, #loc52])
#loc227 = loc(fused[#loc53, #loc54])
#loc228 = loc(fused[#loc56, #loc54])
#loc229 = loc(fused[#loc58, #loc57])
#loc230 = loc(fused[#loc59, #loc60])
#loc231 = loc(fused[#loc62, #loc63, #loc64, #loc60])
#loc232 = loc(fused[#loc66, #loc67])
#loc233 = loc(fused[#loc68, #loc46])
#loc234 = loc(fused[#loc71, #loc70])
#loc235 = loc(fused[#loc76, #loc77])
#loc236 = loc(fused[#loc78, #loc79])
#loc237 = loc(fused[#loc80, #loc81])
#loc238 = loc(fused[#loc82, #loc83])
#loc239 = loc(fused[#loc84, #loc85])
#loc240 = loc(fused[#loc86, #loc87])
#loc241 = loc(fused[#loc89, #loc87])
#loc242 = loc(fused[#loc91, #loc90])
#loc243 = loc(fused[#loc92, #loc93])
#loc244 = loc(fused[#loc95, #loc93])
#loc245 = loc(fused[#loc96, #loc97])
#loc246 = loc(fused[#loc98, #loc79])
#loc247 = loc(fused[#loc101, #loc100])
#loc248 = loc(fused[#loc105, #loc106])
#loc249 = loc(fused[#loc107, #loc108])
#loc250 = loc(fused[#loc109, #loc110])
#loc251 = loc(fused[#loc111, #loc112])
#loc252 = loc(fused[#loc113, #loc114])
#loc253 = loc(fused[#loc115, #loc116])
#loc254 = loc(fused[#loc118, #loc119, #loc120, #loc116])
#loc255 = loc(fused[#loc124, #loc123])
#loc256 = loc(fused[#loc125, #loc126])
#loc257 = loc(fused[#loc128, #loc126])
#loc258 = loc(fused[#loc129, #loc130])
#loc259 = loc(fused[#loc131, #loc108])
#loc260 = loc(fused[#loc134, #loc133])
#loc261 = loc(fused[#loc136, #loc135])
#loc262 = loc(fused[#loc140, #loc141])
#loc263 = loc(fused[#loc142, #loc143])
#loc264 = loc(fused[#loc144, #loc145])
#loc265 = loc(fused[#loc146, #loc147])
#loc266 = loc(fused[#loc148, #loc149])
#loc267 = loc(fused[#loc150, #loc151])
#loc268 = loc(fused[#loc153, #loc151])
#loc269 = loc(fused[#loc155, #loc154])
#loc270 = loc(fused[#loc156, #loc157])
#loc271 = loc(fused[#loc159, #loc157])
#loc272 = loc(fused[#loc160, #loc161])
#loc273 = loc(fused[#loc162, #loc143])
#loc274 = loc(fused[#loc165, #loc164])
#loc275 = loc(fused[#loc167, #loc166])
#loc276 = loc(fused[#loc171, #loc172])
#loc277 = loc(fused[#loc177, #loc178])
#loc278 = loc(fused[#loc179, #loc180])
#loc279 = loc(fused[#loc181, #loc182])
#loc280 = loc(fused[#loc187, #loc188])
#loc283 = loc(fused[#loc204, #loc203])
