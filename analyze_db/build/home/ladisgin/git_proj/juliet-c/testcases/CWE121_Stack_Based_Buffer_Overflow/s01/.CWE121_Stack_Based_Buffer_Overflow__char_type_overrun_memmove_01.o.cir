!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__charVoid = !cir.struct<struct "_charVoid" {!cir.array<!s8i x 16>, !cir.ptr<!void>, !cir.ptr<!void>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"0123456789abcdef0123456789abcde\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc1)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc75)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc77)
    cir.br ^bb1 loc(#loc78)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc1)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc1)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc1)
    %4 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc10)
    cir.store %3, %4 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc79)
    %5 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc10)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc12)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc14)
    %8 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc15)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc81)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc81)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc18)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc18)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
    %14 = cir.const #cir.int<32> : !u64i loc(#loc82)
    cir.libc.memmove %14 bytes from %13 to %10 : !cir.ptr<!void>, !u64i loc(#loc83)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc23)
    %17 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc15)
    %18 = cir.const #cir.int<16> : !u64i loc(#loc84)
    %19 = cir.const #cir.int<1> : !u64i loc(#loc85)
    %20 = cir.binop(div, %18, %19) : !u64i loc(#loc86)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc28)
    %23 = cir.binop(sub, %20, %22) : !u64i loc(#loc87)
    %24 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc30)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc31)
    cir.store %16, %25 : !s8i, !cir.ptr<!s8i> loc(#loc88)
    %26 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc15)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc34)
    %28 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc10)
    %29 = cir.load %28 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc35)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc37)
    cir.br ^bb2 loc(#loc9)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc5)
  } loc(#loc76)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc92)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc39)
  } loc(#loc91)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc94)
    cir.br ^bb1 loc(#loc95)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc48)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc48)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc48)
    %4 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc10)
    cir.store %3, %4 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc96)
    %5 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc10)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc50)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %8 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc15)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc98)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc55)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc55)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
    %14 = cir.const #cir.int<16> : !u64i loc(#loc99)
    cir.libc.memmove %14 bytes from %13 to %10 : !cir.ptr<!void>, !u64i loc(#loc100)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc60)
    %17 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc15)
    %18 = cir.const #cir.int<16> : !u64i loc(#loc101)
    %19 = cir.const #cir.int<1> : !u64i loc(#loc102)
    %20 = cir.binop(div, %18, %19) : !u64i loc(#loc103)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc65)
    %23 = cir.binop(sub, %20, %22) : !u64i loc(#loc104)
    %24 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc67)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc68)
    cir.store %16, %25 : !s8i, !cir.ptr<!s8i> loc(#loc105)
    %26 = cir.get_member %0[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc15)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %28 = cir.get_member %0[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc10)
    %29 = cir.load %28 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc72)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    cir.br ^bb2 loc(#loc47)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc43)
  } loc(#loc93)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":38:45)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":34:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":47:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":37:9)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":37:18)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":36:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":46:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":28:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":38:9)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":40:42)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":40:27)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":40:9)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":27:10)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":42:17)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":42:32)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":42:43)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":42:52)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":42:73)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":42:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":42:74)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":43:87)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":43:35)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":43:66)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":43:68)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":43:79)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":43:82)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":43:34)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":43:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":43:24)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":44:27)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":44:42)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":44:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":45:42)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":45:27)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":45:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":68:1)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":71:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":70:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":70:11)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":53:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":66:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":56:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":56:18)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":55:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":65:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":57:45)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":57:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":59:42)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":59:27)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":59:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":61:17)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":61:32)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":61:43)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":61:52)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":61:83)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":61:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":61:84)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":62:87)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":62:35)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":62:66)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":62:68)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":62:79)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":62:82)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":62:34)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":62:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":62:24)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":63:27)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":63:42)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":63:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":64:42)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":64:27)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_01.c":64:9)
#loc75 = loc(fused[#loc2, #loc3])
#loc76 = loc(fused[#loc4, #loc5])
#loc77 = loc(fused[#loc6, #loc7])
#loc78 = loc(fused[#loc8, #loc9])
#loc79 = loc(fused[#loc11, #loc1])
#loc80 = loc(fused[#loc13, #loc12])
#loc81 = loc(fused[#loc16, #loc17])
#loc82 = loc(fused[#loc19, #loc20])
#loc83 = loc(fused[#loc21, #loc22])
#loc84 = loc(fused[#loc24, #loc25])
#loc85 = loc(fused[#loc26, #loc27])
#loc86 = loc(fused[#loc24, #loc27])
#loc87 = loc(fused[#loc29, #loc28])
#loc88 = loc(fused[#loc30, #loc23])
#loc89 = loc(fused[#loc32, #loc33])
#loc90 = loc(fused[#loc36, #loc35])
#loc91 = loc(fused[#loc38, #loc39])
#loc92 = loc(fused[#loc40, #loc41])
#loc93 = loc(fused[#loc42, #loc43])
#loc94 = loc(fused[#loc44, #loc45])
#loc95 = loc(fused[#loc46, #loc47])
#loc96 = loc(fused[#loc49, #loc48])
#loc97 = loc(fused[#loc51, #loc50])
#loc98 = loc(fused[#loc53, #loc54])
#loc99 = loc(fused[#loc56, #loc57])
#loc100 = loc(fused[#loc58, #loc59])
#loc101 = loc(fused[#loc61, #loc62])
#loc102 = loc(fused[#loc63, #loc64])
#loc103 = loc(fused[#loc61, #loc64])
#loc104 = loc(fused[#loc66, #loc65])
#loc105 = loc(fused[#loc67, #loc60])
#loc106 = loc(fused[#loc69, #loc70])
#loc107 = loc(fused[#loc73, #loc72])
