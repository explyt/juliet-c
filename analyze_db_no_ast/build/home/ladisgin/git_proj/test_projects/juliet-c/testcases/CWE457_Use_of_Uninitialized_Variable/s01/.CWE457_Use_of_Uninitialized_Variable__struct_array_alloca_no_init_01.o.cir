!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc145)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc7)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc7)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc7)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc7)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc7)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc7)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc7)
    cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc148)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc150)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc15)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc152)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc17)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc18)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc153)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc19)
          cir.condition(%13) loc(#loc19)
        } body {
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
            %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc22)
            %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc23)
            %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
            %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc25)
            cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc26)
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
            %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc28)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
            %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
            %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc31)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc32)
          } loc(#loc154)
          cir.yield loc(#loc14)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc33)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc34)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc155)
          cir.yield loc(#loc151)
        } loc(#loc151)
      } loc(#loc151)
    } loc(#loc149)
    cir.return loc(#loc4)
  } loc(#loc146)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    cir.return loc(#loc36)
  } loc(#loc156)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc45)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc45)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc45)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc45)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc45)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc45)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
    cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc161)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc163)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc53)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc165)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc55)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc56)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc166)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc57)
          cir.condition(%13) loc(#loc57)
        } body {
          cir.scope {
            %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc59)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc61)
            %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
            %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
            cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc168)
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc63)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
            %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc65)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc66)
            %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
            cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc169)
          } loc(#loc167)
          cir.yield loc(#loc52)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc67)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc68)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc170)
          cir.yield loc(#loc164)
        } loc(#loc164)
      } loc(#loc164)
    } loc(#loc162)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc172)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc75)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc174)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc77)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc78)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc175)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc79)
          cir.condition(%13) loc(#loc79)
        } body {
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
            %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc82)
            %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
            %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
            %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc84)
            cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc85)
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
            %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc87)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
            %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
            %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc89)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc90)
          } loc(#loc176)
          cir.yield loc(#loc74)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc91)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc92)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc177)
          cir.yield loc(#loc173)
        } loc(#loc173)
      } loc(#loc173)
    } loc(#loc171)
    cir.return loc(#loc42)
  } loc(#loc159)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc179)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc97)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc97)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc97)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc97)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc97)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc97)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc97)
    cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc180)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc182)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc105)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc184)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc107)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc108)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc185)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc109)
          cir.condition(%13) loc(#loc109)
        } body {
          cir.scope {
            %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc111)
            %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc112)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc113)
            %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
            %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
            cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc187)
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc115)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
            %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc117)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
            %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
            cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc188)
          } loc(#loc186)
          cir.yield loc(#loc104)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc119)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc120)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc189)
          cir.yield loc(#loc183)
        } loc(#loc183)
      } loc(#loc183)
    } loc(#loc181)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc191)
      cir.scope {
        %9 = cir.const #cir.int<0> : !s32i loc(#loc127)
        cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc193)
        cir.for : cond {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc129)
          %11 = cir.const #cir.int<10> : !s32i loc(#loc130)
          %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc194)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc131)
          cir.condition(%13) loc(#loc131)
        } body {
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
            %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc134)
            %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
            %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc24)
            %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc136)
            cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc137)
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc138)
            %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc139)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc140)
            %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
            %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc141)
            cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc142)
          } loc(#loc195)
          cir.yield loc(#loc126)
        } step {
          %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc143)
          %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc144)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc196)
          cir.yield loc(#loc192)
        } loc(#loc192)
      } loc(#loc192)
    } loc(#loc190)
    cir.return loc(#loc94)
  } loc(#loc178)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":22:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":37:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":24:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":24:21)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":25:29)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":25:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":29:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":36:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":30:9)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":30:13)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":31:9)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":35:9)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":31:15)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":31:13)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":31:18)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":31:20)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":31:19)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":32:9)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":33:26)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":33:31)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":33:32)
#loc24 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":33:34)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":33:13)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":34:26)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":34:31)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":34:32)
#loc30 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":34:34)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":34:13)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":31:25)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":31:24)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":94:1)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":98:1)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":96:5)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":96:13)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":97:5)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":97:13)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":44:1)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":66:1)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":46:5)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":46:21)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":47:29)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":47:5)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":49:5)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":56:5)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":50:9)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":50:13)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":51:9)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":55:9)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":51:15)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":51:13)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":51:18)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":51:20)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":51:19)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":52:9)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":53:30)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":53:13)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":53:18)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":53:19)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":54:30)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":54:13)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":54:18)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":54:19)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":51:25)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":51:24)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":58:5)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":65:5)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":59:9)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":59:13)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":60:9)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":64:9)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":60:15)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":60:13)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":60:18)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":60:20)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":60:19)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":61:9)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":62:26)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":62:31)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":62:32)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":62:34)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":62:13)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":63:26)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":63:31)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":63:32)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":63:34)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":63:13)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":60:25)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":60:24)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":69:1)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":92:1)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":71:5)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":71:21)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":72:29)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":72:5)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":76:5)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":83:5)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":77:9)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":77:13)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":78:9)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":82:9)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":78:15)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":78:13)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":78:18)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":78:20)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":78:19)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":79:9)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":80:30)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":80:13)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":80:18)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":80:19)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":81:30)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":81:13)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":81:18)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":81:19)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":78:25)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":78:24)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":84:5)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":91:5)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":85:9)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":85:13)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":86:9)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":90:9)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":86:15)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":86:13)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":86:18)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":86:20)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":86:19)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":87:9)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":88:26)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":88:31)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":88:32)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":88:34)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":88:13)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":89:26)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":89:31)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":89:32)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":89:34)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":89:13)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":86:25)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__struct_array_alloca_no_init_01.c":86:24)
#loc145 = loc(fused[#loc1, #loc2])
#loc146 = loc(fused[#loc3, #loc4])
#loc147 = loc(fused[#loc5, #loc6])
#loc148 = loc(fused[#loc8, #loc7])
#loc149 = loc(fused[#loc9, #loc10])
#loc150 = loc(fused[#loc11, #loc12])
#loc151 = loc(fused[#loc13, #loc14])
#loc152 = loc(fused[#loc16, #loc15])
#loc153 = loc(fused[#loc17, #loc18])
#loc154 = loc(fused[#loc20, #loc14])
#loc155 = loc(fused[#loc34, #loc33])
#loc156 = loc(fused[#loc35, #loc36])
#loc157 = loc(fused[#loc37, #loc38])
#loc158 = loc(fused[#loc39, #loc40])
#loc159 = loc(fused[#loc41, #loc42])
#loc160 = loc(fused[#loc43, #loc44])
#loc161 = loc(fused[#loc46, #loc45])
#loc162 = loc(fused[#loc47, #loc48])
#loc163 = loc(fused[#loc49, #loc50])
#loc164 = loc(fused[#loc51, #loc52])
#loc165 = loc(fused[#loc54, #loc53])
#loc166 = loc(fused[#loc55, #loc56])
#loc167 = loc(fused[#loc58, #loc52])
#loc168 = loc(fused[#loc60, #loc59])
#loc169 = loc(fused[#loc64, #loc63])
#loc170 = loc(fused[#loc68, #loc67])
#loc171 = loc(fused[#loc69, #loc70])
#loc172 = loc(fused[#loc71, #loc72])
#loc173 = loc(fused[#loc73, #loc74])
#loc174 = loc(fused[#loc76, #loc75])
#loc175 = loc(fused[#loc77, #loc78])
#loc176 = loc(fused[#loc80, #loc74])
#loc177 = loc(fused[#loc92, #loc91])
#loc178 = loc(fused[#loc93, #loc94])
#loc179 = loc(fused[#loc95, #loc96])
#loc180 = loc(fused[#loc98, #loc97])
#loc181 = loc(fused[#loc99, #loc100])
#loc182 = loc(fused[#loc101, #loc102])
#loc183 = loc(fused[#loc103, #loc104])
#loc184 = loc(fused[#loc106, #loc105])
#loc185 = loc(fused[#loc107, #loc108])
#loc186 = loc(fused[#loc110, #loc104])
#loc187 = loc(fused[#loc112, #loc111])
#loc188 = loc(fused[#loc116, #loc115])
#loc189 = loc(fused[#loc120, #loc119])
#loc190 = loc(fused[#loc121, #loc122])
#loc191 = loc(fused[#loc123, #loc124])
#loc192 = loc(fused[#loc125, #loc126])
#loc193 = loc(fused[#loc128, #loc127])
#loc194 = loc(fused[#loc129, #loc130])
#loc195 = loc(fused[#loc132, #loc126])
#loc196 = loc(fused[#loc144, #loc143])
