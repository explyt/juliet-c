!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc71 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":143:10)
#loc72 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":143:14)
#loc73 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":143:20)
#loc74 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":143:32)
#loc197 = loc(fused[#loc71, #loc72])
#loc198 = loc(fused[#loc73, #loc74])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc171)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc172)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc173)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc175)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc177)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc178)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc179)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc20)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.br ^bb1 loc(#loc181)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc181)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %5 ^bb3, ^bb11 loc(#loc24)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc182)
  ^bb4:  // pred: ^bb3
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc177)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc177)
    cir.br ^bb5 loc(#loc183)
  ^bb5:  // pred: ^bb4
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc29)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc30)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc30)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc30)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc30)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc30)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc30)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc30)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc30)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc172)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc31)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc32)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc184)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc185)
  ^bb6:  // pred: ^bb5
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc37)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc38)
    cir.store %23, %2 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    cir.br ^bb8 loc(#loc35)
  ^bb7:  // pred: ^bb5
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    cir.br ^bb8 loc(#loc28)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc28)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc26)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc42)
  ^bb11:  // 2 preds: ^bb2, ^bb10
    cir.br ^bb12 loc(#loc23)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc187)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc187)
  ^bb14:  // pred: ^bb13
    %26 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc45)
    cir.brcond %27 ^bb15, ^bb20 loc(#loc45)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc188)
  ^bb16:  // pred: ^bb15
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %30 = cir.cmp(lt, %28, %29) : !s32i, !cir.bool loc(#loc189)
    cir.brcond %30 ^bb17, ^bb18 loc(#loc190)
  ^bb17:  // pred: ^bb16
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %32 = cir.const #cir.int<2> : !s32i loc(#loc17)
    %33 = cir.binop(mul, %31, %32) nsw : !s32i loc(#loc51)
    cir.store %33, %1 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    %34 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    cir.call @printIntLine(%34) : (!s32i) -> () loc(#loc53)
    cir.br ^bb18 loc(#loc47)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc47)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc54)
  ^bb20:  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc44)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc13)
  } loc(#loc176)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_multiply_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    cir.return loc(#loc56)
  } loc(#loc191)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc194)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc68)
  cir.func @main(%arg0: !s32i loc(fused[#loc71, #loc72]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc73, #loc74])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc197)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc198)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc70)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc75)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc75)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc76)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc77)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc77)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc78)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc65)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_fgets_multiply_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call @CWE191_Integer_Underflow__int_fgets_multiply_16_good() : () -> () loc(#loc80)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc66)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc67)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_fgets_multiply_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc200)
    cir.call @CWE191_Integer_Underflow__int_fgets_multiply_16_bad() : () -> () loc(#loc84)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc68)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc87)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc201)
    cir.return %17 : !s32i loc(#loc201)
  } loc(#loc196)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc89)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc203)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc204)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc205)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc98)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    cir.br ^bb1 loc(#loc207)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc207)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc102)
    cir.brcond %5 ^bb3, ^bb11 loc(#loc102)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc208)
  ^bb4:  // pred: ^bb3
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc203)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc203)
    cir.br ^bb5 loc(#loc209)
  ^bb5:  // pred: ^bb4
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc108)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc108)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc108)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc108)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc108)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc108)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc108)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc108)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc172)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc109)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc110)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc111)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc111)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc210)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc211)
  ^bb6:  // pred: ^bb5
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc115)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc116)
    cir.store %23, %2 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    cir.br ^bb8 loc(#loc113)
  ^bb7:  // pred: ^bb5
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc119)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.br ^bb8 loc(#loc106)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc106)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc104)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc121)
  ^bb11:  // 2 preds: ^bb2, ^bb10
    cir.br ^bb12 loc(#loc101)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc213)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc213)
  ^bb14:  // pred: ^bb13
    %26 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc124)
    cir.brcond %27 ^bb15, ^bb25 loc(#loc124)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc214)
  ^bb16:  // pred: ^bb15
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %30 = cir.cmp(lt, %28, %29) : !s32i, !cir.bool loc(#loc215)
    cir.brcond %30 ^bb17, ^bb23 loc(#loc216)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc217)
  ^bb18:  // pred: ^bb17
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %32 = cir.const #cir.int<2147483647> : !s32i loc(#loc133)
    %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc133)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc133)
    %36 = cir.const #cir.int<2> : !s32i loc(#loc134)
    %37 = cir.binop(div, %35, %36) : !s32i loc(#loc218)
    %38 = cir.cmp(gt, %31, %37) : !s32i, !cir.bool loc(#loc219)
    cir.brcond %38 ^bb19, ^bb20 loc(#loc220)
  ^bb19:  // pred: ^bb18
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %40 = cir.const #cir.int<2> : !s32i loc(#loc95)
    %41 = cir.binop(mul, %39, %40) nsw : !s32i loc(#loc139)
    cir.store %41, %1 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    %42 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    cir.call @printIntLine(%42) : (!s32i) -> () loc(#loc141)
    cir.br ^bb21 loc(#loc137)
  ^bb20:  // pred: ^bb18
    %43 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc89)
    %44 = cir.cast(array_to_ptrdecay, %43 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    cir.br ^bb21 loc(#loc131)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc131)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc126)
  ^bb23:  // 2 preds: ^bb16, ^bb22
    cir.br ^bb24 loc(#loc126)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc143)
  ^bb25:  // 2 preds: ^bb14, ^bb24
    cir.br ^bb26 loc(#loc123)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc91)
  } loc(#loc202)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc222)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc223)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc150)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    cir.br ^bb1 loc(#loc225)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc225)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc154)
    cir.brcond %4 ^bb3, ^bb4 loc(#loc154)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<2> : !s32i loc(#loc155)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc156)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.br ^bb4 loc(#loc158)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc153)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc227)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc227)
  ^bb7:  // pred: ^bb6
    %7 = cir.const #cir.int<1> : !s32i loc(#loc161)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc161)
    cir.brcond %8 ^bb8, ^bb13 loc(#loc161)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc228)
  ^bb9:  // pred: ^bb8
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc164)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc165)
    %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc229)
    cir.brcond %11 ^bb10, ^bb11 loc(#loc230)
  ^bb10:  // pred: ^bb9
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc147)
    %14 = cir.binop(mul, %12, %13) nsw : !s32i loc(#loc167)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc169)
    cir.br ^bb11 loc(#loc163)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc163)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc170)
  ^bb13:  // 2 preds: ^bb7, ^bb12
    cir.br ^bb14 loc(#loc160)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc145)
  } loc(#loc221)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_multiply_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":41:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":24:1)
#loc13 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":56:1)
#loc14 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":32:13)
#loc15 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":32:49)
#loc16 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":51:13)
#loc17 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":51:33)
#loc18 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":26:5)
#loc19 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":26:9)
#loc20 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":28:12)
#loc21 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":28:5)
#loc22 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":29:5)
#loc23 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":45:5)
#loc24 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":29:11)
#loc25 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":31:9)
#loc26 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":43:9)
#loc27 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":34:13)
#loc28 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":42:13)
#loc29 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":34:23)
#loc30 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":34:36)
#loc31 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":34:53)
#loc32 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":34:17)
#loc33 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":34:63)
#loc34 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":35:13)
#loc35 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":38:13)
#loc36 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":40:13)
#loc37 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":37:29)
#loc38 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":37:24)
#loc39 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":37:17)
#loc40 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":37:40)
#loc41 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":41:17)
#loc42 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":44:9)
#loc43 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":46:5)
#loc44 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":55:5)
#loc45 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":46:11)
#loc46 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":48:9)
#loc47 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":53:9)
#loc48 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":48:12)
#loc49 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":48:19)
#loc50 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":49:9)
#loc51 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":51:26)
#loc52 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":52:26)
#loc53 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":52:13)
#loc54 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":54:9)
#loc55 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":128:1)
#loc56 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":132:1)
#loc57 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":130:5)
#loc58 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":130:13)
#loc59 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":131:5)
#loc60 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":131:13)
#loc61 = loc("/usr/include/stdlib.h":575:1)
#loc62 = loc("/usr/include/stdlib.h":575:41)
#loc63 = loc("/usr/include/time.h":76:1)
#loc64 = loc("/usr/include/time.h":76:38)
#loc65 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":148:15)
#loc66 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":150:15)
#loc67 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":153:15)
#loc68 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":155:15)
#loc69 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":143:1)
#loc70 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":158:1)
#loc75 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":144:1)
#loc76 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":146:27)
#loc77 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":146:22)
#loc78 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":146:5)
#loc79 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":148:5)
#loc80 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":149:5)
#loc81 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":149:58)
#loc82 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":150:5)
#loc83 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":153:5)
#loc84 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":154:5)
#loc85 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":154:57)
#loc86 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":155:5)
#loc87 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":157:12)
#loc88 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":157:5)
#loc89 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":97:27)
#loc90 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":63:1)
#loc91 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":102:1)
#loc92 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":71:13)
#loc93 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":71:49)
#loc94 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":92:17)
#loc95 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":92:37)
#loc96 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":65:5)
#loc97 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":65:9)
#loc98 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":67:12)
#loc99 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":67:5)
#loc100 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":68:5)
#loc101 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":84:5)
#loc102 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":68:11)
#loc103 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":70:9)
#loc104 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":82:9)
#loc105 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":73:13)
#loc106 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":81:13)
#loc107 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":73:23)
#loc108 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":73:36)
#loc109 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":73:53)
#loc110 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":73:17)
#loc111 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":73:63)
#loc112 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":74:13)
#loc113 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":77:13)
#loc114 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":79:13)
#loc115 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":76:29)
#loc116 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":76:24)
#loc117 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":76:17)
#loc118 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":76:40)
#loc119 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":80:27)
#loc120 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":80:17)
#loc121 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":83:9)
#loc122 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":85:5)
#loc123 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":101:5)
#loc124 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":85:11)
#loc125 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":87:9)
#loc126 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":99:9)
#loc127 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":87:12)
#loc128 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":87:19)
#loc129 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":88:9)
#loc130 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":90:13)
#loc131 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":98:13)
#loc132 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":90:17)
#loc133 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":90:25)
#loc134 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":90:33)
#loc135 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":90:34)
#loc136 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":91:13)
#loc137 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":94:13)
#loc138 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":96:13)
#loc139 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":92:30)
#loc140 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":93:30)
#loc141 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":93:17)
#loc142 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":97:17)
#loc143 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":100:9)
#loc144 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":105:1)
#loc145 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":126:1)
#loc146 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":121:13)
#loc147 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":121:33)
#loc148 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":107:5)
#loc149 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":107:9)
#loc150 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":109:12)
#loc151 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":109:5)
#loc152 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":110:5)
#loc153 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":115:5)
#loc154 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":110:11)
#loc155 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":113:17)
#loc156 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":113:16)
#loc157 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":113:9)
#loc158 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":114:9)
#loc159 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":116:5)
#loc160 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":125:5)
#loc161 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":116:11)
#loc162 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":118:9)
#loc163 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":123:9)
#loc164 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":118:12)
#loc165 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":118:19)
#loc166 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":119:9)
#loc167 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":121:26)
#loc168 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":122:26)
#loc169 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":122:13)
#loc170 = loc("CWE191_Integer_Underflow__int_fgets_multiply_16.c":124:9)
#loc171 = loc(fused[#loc1, #loc2])
#loc172 = loc(fused[#loc3, #loc4])
#loc173 = loc(fused[#loc5, #loc6])
#loc174 = loc(fused[#loc7, #loc8])
#loc175 = loc(fused[#loc10, #loc11])
#loc176 = loc(fused[#loc12, #loc13])
#loc177 = loc(fused[#loc14, #loc15])
#loc178 = loc(fused[#loc16, #loc17])
#loc179 = loc(fused[#loc18, #loc19])
#loc180 = loc(fused[#loc21, #loc20])
#loc181 = loc(fused[#loc22, #loc23])
#loc182 = loc(fused[#loc25, #loc26])
#loc183 = loc(fused[#loc27, #loc28])
#loc184 = loc(fused[#loc32, #loc33])
#loc185 = loc(fused[#loc34, #loc35, #loc36, #loc28])
#loc186 = loc(fused[#loc39, #loc40])
#loc187 = loc(fused[#loc43, #loc44])
#loc188 = loc(fused[#loc46, #loc47])
#loc189 = loc(fused[#loc48, #loc49])
#loc190 = loc(fused[#loc50, #loc47])
#loc191 = loc(fused[#loc55, #loc56])
#loc192 = loc(fused[#loc57, #loc58])
#loc193 = loc(fused[#loc59, #loc60])
#loc194 = loc(fused[#loc61, #loc62])
#loc195 = loc(fused[#loc63, #loc64])
#loc196 = loc(fused[#loc69, #loc70])
#loc199 = loc(fused[#loc80, #loc81])
#loc200 = loc(fused[#loc84, #loc85])
#loc201 = loc(fused[#loc88, #loc87])
#loc202 = loc(fused[#loc90, #loc91])
#loc203 = loc(fused[#loc92, #loc93])
#loc204 = loc(fused[#loc94, #loc95])
#loc205 = loc(fused[#loc96, #loc97])
#loc206 = loc(fused[#loc99, #loc98])
#loc207 = loc(fused[#loc100, #loc101])
#loc208 = loc(fused[#loc103, #loc104])
#loc209 = loc(fused[#loc105, #loc106])
#loc210 = loc(fused[#loc110, #loc111])
#loc211 = loc(fused[#loc112, #loc113, #loc114, #loc106])
#loc212 = loc(fused[#loc117, #loc118])
#loc213 = loc(fused[#loc122, #loc123])
#loc214 = loc(fused[#loc125, #loc126])
#loc215 = loc(fused[#loc127, #loc128])
#loc216 = loc(fused[#loc129, #loc126])
#loc217 = loc(fused[#loc130, #loc131])
#loc218 = loc(fused[#loc133, #loc134])
#loc219 = loc(fused[#loc132, #loc135])
#loc220 = loc(fused[#loc136, #loc137, #loc138, #loc131])
#loc221 = loc(fused[#loc144, #loc145])
#loc222 = loc(fused[#loc146, #loc147])
#loc223 = loc(fused[#loc148, #loc149])
#loc224 = loc(fused[#loc151, #loc150])
#loc225 = loc(fused[#loc152, #loc153])
#loc226 = loc(fused[#loc157, #loc155])
#loc227 = loc(fused[#loc159, #loc160])
#loc228 = loc(fused[#loc162, #loc163])
#loc229 = loc(fused[#loc164, #loc165])
#loc230 = loc(fused[#loc166, #loc163])
