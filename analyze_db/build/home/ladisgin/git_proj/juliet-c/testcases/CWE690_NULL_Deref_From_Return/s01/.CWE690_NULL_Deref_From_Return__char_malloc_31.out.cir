!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc48 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":76:10)
#loc49 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":76:14)
#loc50 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":76:20)
#loc51 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":76:32)
#loc115 = loc(fused[#loc48, #loc49])
#loc116 = loc(fused[#loc50, #loc51])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_malloc_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc96)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Initialize\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc98)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc99)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_malloc_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc101)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc102)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc16)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc17)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc17)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc103)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc104)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc105)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc108)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc109)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      cir.store %11, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
      %12 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
      %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc28)
      %14 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc5)
      %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc5)
      %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc28)
      %18 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
      cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc31)
      %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc32)
      %20 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
      cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc32)
    } loc(#loc107)
    cir.return loc(#loc11)
  } loc(#loc100)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_malloc_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc111)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc35)
  } loc(#loc110)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc112)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc45)
  cir.func @main(%arg0: !s32i loc(fused[#loc48, #loc49]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc50, #loc51])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc115)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc116)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc47)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc52)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc52)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc53)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc54)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc54)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc55)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc42)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %8 = cir.get_global @CWE690_NULL_Deref_From_Return__char_malloc_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc117)
    cir.call @CWE690_NULL_Deref_From_Return__char_malloc_31_good() : () -> () loc(#loc57)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc43)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc44)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %13 = cir.get_global @CWE690_NULL_Deref_From_Return__char_malloc_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc118)
    cir.call @CWE690_NULL_Deref_From_Return__char_malloc_31_bad() : () -> () loc(#loc61)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc45)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc64)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    cir.return %17 : !s32i loc(#loc119)
  } loc(#loc114)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc121)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc70)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc72)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc73)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc73)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc123)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc124)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc72)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc125)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc128)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc129)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
      cir.store %11, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
      %12 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
      cir.scope {
        %13 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
        %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc87)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc87)
        %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc131)
        cir.if %16 {
          %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc89)
          %18 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc91)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc91)
          %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc89)
          %22 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
          cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc93)
          %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc94)
          %24 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
          cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc94)
        } loc(#loc132)
      } loc(#loc130)
    } loc(#loc127)
    cir.return loc(#loc67)
  } loc(#loc120)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_malloc_31.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":33:22)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":23:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":37:1)
#loc12 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":25:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":25:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":26:12)
#loc15 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":26:5)
#loc16 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":28:20)
#loc17 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":28:27)
#loc18 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":28:30)
#loc19 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":28:41)
#loc20 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":28:42)
#loc21 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":28:5)
#loc22 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":29:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":36:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":30:9)
#loc25 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":30:27)
#loc26 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":31:9)
#loc27 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":31:23)
#loc28 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":33:9)
#loc29 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":33:16)
#loc30 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":34:19)
#loc31 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":34:9)
#loc32 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":35:9)
#loc33 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":35:14)
#loc34 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":63:1)
#loc35 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":66:1)
#loc36 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":65:5)
#loc37 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":65:13)
#loc38 = loc("/usr/include/stdlib.h":575:1)
#loc39 = loc("/usr/include/stdlib.h":575:41)
#loc40 = loc("/usr/include/time.h":76:1)
#loc41 = loc("/usr/include/time.h":76:38)
#loc42 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":81:15)
#loc43 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":83:15)
#loc44 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":86:15)
#loc45 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":88:15)
#loc46 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":76:1)
#loc47 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":91:1)
#loc52 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":77:1)
#loc53 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":79:27)
#loc54 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":79:22)
#loc55 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":79:5)
#loc56 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":81:5)
#loc57 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":82:5)
#loc58 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":82:56)
#loc59 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":83:5)
#loc60 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":86:5)
#loc61 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":87:5)
#loc62 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":87:55)
#loc63 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":88:5)
#loc64 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":90:12)
#loc65 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":90:5)
#loc66 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":44:1)
#loc67 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":61:1)
#loc68 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":46:5)
#loc69 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":46:12)
#loc70 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":47:12)
#loc71 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":47:5)
#loc72 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":49:20)
#loc73 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":49:27)
#loc74 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":49:30)
#loc75 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":49:41)
#loc76 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":49:42)
#loc77 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":49:5)
#loc78 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":50:5)
#loc79 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":60:5)
#loc80 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":51:9)
#loc81 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":51:27)
#loc82 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":52:9)
#loc83 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":52:23)
#loc84 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":54:9)
#loc85 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":59:9)
#loc86 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":54:13)
#loc87 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":54:21)
#loc88 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":55:9)
#loc89 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":56:13)
#loc90 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":56:20)
#loc91 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":56:26)
#loc92 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":57:23)
#loc93 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":57:13)
#loc94 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":58:13)
#loc95 = loc("CWE690_NULL_Deref_From_Return__char_malloc_31.c":58:18)
#loc96 = loc(fused[#loc1, #loc2])
#loc97 = loc(fused[#loc3, #loc4])
#loc98 = loc(fused[#loc6, #loc7])
#loc99 = loc(fused[#loc8, #loc9])
#loc100 = loc(fused[#loc10, #loc11])
#loc101 = loc(fused[#loc12, #loc13])
#loc102 = loc(fused[#loc15, #loc14])
#loc103 = loc(fused[#loc18, #loc19])
#loc104 = loc(fused[#loc17, #loc19])
#loc105 = loc(fused[#loc16, #loc20])
#loc106 = loc(fused[#loc21, #loc20])
#loc107 = loc(fused[#loc22, #loc23])
#loc108 = loc(fused[#loc24, #loc25])
#loc109 = loc(fused[#loc26, #loc27])
#loc110 = loc(fused[#loc34, #loc35])
#loc111 = loc(fused[#loc36, #loc37])
#loc112 = loc(fused[#loc38, #loc39])
#loc113 = loc(fused[#loc40, #loc41])
#loc114 = loc(fused[#loc46, #loc47])
#loc117 = loc(fused[#loc57, #loc58])
#loc118 = loc(fused[#loc61, #loc62])
#loc119 = loc(fused[#loc65, #loc64])
#loc120 = loc(fused[#loc66, #loc67])
#loc121 = loc(fused[#loc68, #loc69])
#loc122 = loc(fused[#loc71, #loc70])
#loc123 = loc(fused[#loc74, #loc75])
#loc124 = loc(fused[#loc73, #loc75])
#loc125 = loc(fused[#loc72, #loc76])
#loc126 = loc(fused[#loc77, #loc76])
#loc127 = loc(fused[#loc78, #loc79])
#loc128 = loc(fused[#loc80, #loc81])
#loc129 = loc(fused[#loc82, #loc83])
#loc130 = loc(fused[#loc84, #loc85])
#loc131 = loc(fused[#loc86, #loc87])
#loc132 = loc(fused[#loc88, #loc85])
