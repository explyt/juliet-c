!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc51 = loc("CWE843_Type_Confusion__short_12.c":92:10)
#loc52 = loc("CWE843_Type_Confusion__short_12.c":92:14)
#loc53 = loc("CWE843_Type_Confusion__short_12.c":92:20)
#loc54 = loc("CWE843_Type_Confusion__short_12.c":92:32)
#loc121 = loc(fused[#loc51, #loc52])
#loc122 = loc(fused[#loc53, #loc54])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__short_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc99)
  cir.func private @printIntLine(!s32i) loc(#loc100)
  cir.func no_proto @CWE843_Type_Confusion__short_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc102)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc103)
    cir.scope {
      %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc105)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc105)
      %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc13)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc13)
      cir.if %8 {
        cir.scope {
          %9 = cir.alloca !s16i, !cir.ptr<!s16i>, ["shortBuffer", init] {alignment = 2 : i64} loc(#loc108)
          %10 = cir.const #cir.int<8> : !s32i loc(#loc21)
          %11 = cir.cast(integral, %10 : !s32i), !s16i loc(#loc21)
          cir.store %11, %9 : !s16i, !cir.ptr<!s16i> loc(#loc108)
          %12 = cir.cast(bitcast, %9 : !cir.ptr<!s16i>), !cir.ptr<!void> loc(#loc109)
          cir.store %12, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc110)
        } loc(#loc107)
      } else {
        cir.scope {
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBuffer", init] {alignment = 4 : i64} loc(#loc112)
          %10 = cir.const #cir.int<8> : !s32i loc(#loc28)
          cir.store %10, %9 : !s32i, !cir.ptr<!s32i> loc(#loc112)
          %11 = cir.cast(bitcast, %9 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc113)
          cir.store %11, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc114)
        } loc(#loc111)
      } loc(#loc106)
    } loc(#loc104)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc32)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc32)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc34)
    cir.return loc(#loc6)
  } loc(#loc101)
  cir.func no_proto @CWE843_Type_Confusion__short_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc116)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    cir.return loc(#loc36)
  } loc(#loc115)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc117)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc118)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc48)
  cir.func @main(%arg0: !s32i loc(fused[#loc51, #loc52]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc53, #loc54])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc122)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc50)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc55)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc55)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc56)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc57)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc57)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc58)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc45)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %8 = cir.get_global @CWE843_Type_Confusion__short_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc123)
    cir.call @CWE843_Type_Confusion__short_12_good() : () -> () loc(#loc60)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc46)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc47)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %13 = cir.get_global @CWE843_Type_Confusion__short_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc124)
    cir.call @CWE843_Type_Confusion__short_12_bad() : () -> () loc(#loc64)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc48)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc67)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    cir.return %17 : !s32i loc(#loc125)
  } loc(#loc120)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc73)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc128)
    cir.scope {
      %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc130)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc130)
      %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc77)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc77)
      cir.if %8 {
        cir.scope {
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBuffer", init] {alignment = 4 : i64} loc(#loc133)
          %10 = cir.const #cir.int<8> : !s32i loc(#loc85)
          cir.store %10, %9 : !s32i, !cir.ptr<!s32i> loc(#loc133)
          %11 = cir.cast(bitcast, %9 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc134)
          cir.store %11, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc135)
        } loc(#loc132)
      } else {
        cir.scope {
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBuffer", init] {alignment = 4 : i64} loc(#loc137)
          %10 = cir.const #cir.int<8> : !s32i loc(#loc92)
          cir.store %10, %9 : !s32i, !cir.ptr<!s32i> loc(#loc137)
          %11 = cir.cast(bitcast, %9 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc138)
          cir.store %11, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc139)
        } loc(#loc136)
      } loc(#loc131)
    } loc(#loc129)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc96)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc96)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc98)
    cir.return loc(#loc70)
  } loc(#loc126)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__short_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE843_Type_Confusion__short_12.c":21:1)
#loc6 = loc("CWE843_Type_Confusion__short_12.c":44:1)
#loc7 = loc("CWE843_Type_Confusion__short_12.c":23:5)
#loc8 = loc("CWE843_Type_Confusion__short_12.c":23:12)
#loc9 = loc("CWE843_Type_Confusion__short_12.c":25:12)
#loc10 = loc("CWE843_Type_Confusion__short_12.c":25:5)
#loc11 = loc("CWE843_Type_Confusion__short_12.c":26:5)
#loc12 = loc("CWE843_Type_Confusion__short_12.c":41:5)
#loc13 = loc("CWE843_Type_Confusion__short_12.c":26:8)
#loc14 = loc("CWE843_Type_Confusion__short_12.c":26:33)
#loc15 = loc("CWE843_Type_Confusion__short_12.c":27:5)
#loc16 = loc("CWE843_Type_Confusion__short_12.c":33:5)
#loc17 = loc("CWE843_Type_Confusion__short_12.c":35:5)
#loc18 = loc("CWE843_Type_Confusion__short_12.c":28:9)
#loc19 = loc("CWE843_Type_Confusion__short_12.c":32:9)
#loc20 = loc("CWE843_Type_Confusion__short_12.c":30:13)
#loc21 = loc("CWE843_Type_Confusion__short_12.c":30:33)
#loc22 = loc("CWE843_Type_Confusion__short_12.c":31:20)
#loc23 = loc("CWE843_Type_Confusion__short_12.c":31:21)
#loc24 = loc("CWE843_Type_Confusion__short_12.c":31:13)
#loc25 = loc("CWE843_Type_Confusion__short_12.c":36:9)
#loc26 = loc("CWE843_Type_Confusion__short_12.c":40:9)
#loc27 = loc("CWE843_Type_Confusion__short_12.c":38:13)
#loc28 = loc("CWE843_Type_Confusion__short_12.c":38:29)
#loc29 = loc("CWE843_Type_Confusion__short_12.c":39:20)
#loc30 = loc("CWE843_Type_Confusion__short_12.c":39:21)
#loc31 = loc("CWE843_Type_Confusion__short_12.c":39:13)
#loc32 = loc("CWE843_Type_Confusion__short_12.c":43:26)
#loc33 = loc("CWE843_Type_Confusion__short_12.c":43:18)
#loc34 = loc("CWE843_Type_Confusion__short_12.c":43:5)
#loc35 = loc("CWE843_Type_Confusion__short_12.c":77:1)
#loc36 = loc("CWE843_Type_Confusion__short_12.c":80:1)
#loc37 = loc("CWE843_Type_Confusion__short_12.c":79:5)
#loc38 = loc("CWE843_Type_Confusion__short_12.c":79:13)
#loc39 = loc("/usr/include/stdlib.h":575:1)
#loc40 = loc("/usr/include/stdlib.h":575:41)
#loc41 = loc("/usr/include/time.h":76:1)
#loc42 = loc("/usr/include/time.h":76:38)
#loc43 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc44 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc45 = loc("CWE843_Type_Confusion__short_12.c":97:15)
#loc46 = loc("CWE843_Type_Confusion__short_12.c":99:15)
#loc47 = loc("CWE843_Type_Confusion__short_12.c":102:15)
#loc48 = loc("CWE843_Type_Confusion__short_12.c":104:15)
#loc49 = loc("CWE843_Type_Confusion__short_12.c":92:1)
#loc50 = loc("CWE843_Type_Confusion__short_12.c":107:1)
#loc55 = loc("CWE843_Type_Confusion__short_12.c":93:1)
#loc56 = loc("CWE843_Type_Confusion__short_12.c":95:27)
#loc57 = loc("CWE843_Type_Confusion__short_12.c":95:22)
#loc58 = loc("CWE843_Type_Confusion__short_12.c":95:5)
#loc59 = loc("CWE843_Type_Confusion__short_12.c":97:5)
#loc60 = loc("CWE843_Type_Confusion__short_12.c":98:5)
#loc61 = loc("CWE843_Type_Confusion__short_12.c":98:42)
#loc62 = loc("CWE843_Type_Confusion__short_12.c":99:5)
#loc63 = loc("CWE843_Type_Confusion__short_12.c":102:5)
#loc64 = loc("CWE843_Type_Confusion__short_12.c":103:5)
#loc65 = loc("CWE843_Type_Confusion__short_12.c":103:41)
#loc66 = loc("CWE843_Type_Confusion__short_12.c":104:5)
#loc67 = loc("CWE843_Type_Confusion__short_12.c":106:12)
#loc68 = loc("CWE843_Type_Confusion__short_12.c":106:5)
#loc69 = loc("CWE843_Type_Confusion__short_12.c":52:1)
#loc70 = loc("CWE843_Type_Confusion__short_12.c":75:1)
#loc71 = loc("CWE843_Type_Confusion__short_12.c":54:5)
#loc72 = loc("CWE843_Type_Confusion__short_12.c":54:12)
#loc73 = loc("CWE843_Type_Confusion__short_12.c":56:12)
#loc74 = loc("CWE843_Type_Confusion__short_12.c":56:5)
#loc75 = loc("CWE843_Type_Confusion__short_12.c":57:5)
#loc76 = loc("CWE843_Type_Confusion__short_12.c":72:5)
#loc77 = loc("CWE843_Type_Confusion__short_12.c":57:8)
#loc78 = loc("CWE843_Type_Confusion__short_12.c":57:33)
#loc79 = loc("CWE843_Type_Confusion__short_12.c":58:5)
#loc80 = loc("CWE843_Type_Confusion__short_12.c":64:5)
#loc81 = loc("CWE843_Type_Confusion__short_12.c":66:5)
#loc82 = loc("CWE843_Type_Confusion__short_12.c":59:9)
#loc83 = loc("CWE843_Type_Confusion__short_12.c":63:9)
#loc84 = loc("CWE843_Type_Confusion__short_12.c":61:13)
#loc85 = loc("CWE843_Type_Confusion__short_12.c":61:29)
#loc86 = loc("CWE843_Type_Confusion__short_12.c":62:20)
#loc87 = loc("CWE843_Type_Confusion__short_12.c":62:21)
#loc88 = loc("CWE843_Type_Confusion__short_12.c":62:13)
#loc89 = loc("CWE843_Type_Confusion__short_12.c":67:9)
#loc90 = loc("CWE843_Type_Confusion__short_12.c":71:9)
#loc91 = loc("CWE843_Type_Confusion__short_12.c":69:13)
#loc92 = loc("CWE843_Type_Confusion__short_12.c":69:29)
#loc93 = loc("CWE843_Type_Confusion__short_12.c":70:20)
#loc94 = loc("CWE843_Type_Confusion__short_12.c":70:21)
#loc95 = loc("CWE843_Type_Confusion__short_12.c":70:13)
#loc96 = loc("CWE843_Type_Confusion__short_12.c":74:26)
#loc97 = loc("CWE843_Type_Confusion__short_12.c":74:18)
#loc98 = loc("CWE843_Type_Confusion__short_12.c":74:5)
#loc99 = loc(fused[#loc1, #loc2])
#loc100 = loc(fused[#loc3, #loc4])
#loc101 = loc(fused[#loc5, #loc6])
#loc102 = loc(fused[#loc7, #loc8])
#loc103 = loc(fused[#loc10, #loc9])
#loc104 = loc(fused[#loc11, #loc12])
#loc105 = loc(fused[#loc13, #loc14])
#loc106 = loc(fused[#loc15, #loc16, #loc17, #loc12])
#loc107 = loc(fused[#loc18, #loc19])
#loc108 = loc(fused[#loc20, #loc21])
#loc109 = loc(fused[#loc22, #loc23])
#loc110 = loc(fused[#loc24, #loc23])
#loc111 = loc(fused[#loc25, #loc26])
#loc112 = loc(fused[#loc27, #loc28])
#loc113 = loc(fused[#loc29, #loc30])
#loc114 = loc(fused[#loc31, #loc30])
#loc115 = loc(fused[#loc35, #loc36])
#loc116 = loc(fused[#loc37, #loc38])
#loc117 = loc(fused[#loc39, #loc40])
#loc118 = loc(fused[#loc41, #loc42])
#loc119 = loc(fused[#loc43, #loc44])
#loc120 = loc(fused[#loc49, #loc50])
#loc123 = loc(fused[#loc60, #loc61])
#loc124 = loc(fused[#loc64, #loc65])
#loc125 = loc(fused[#loc68, #loc67])
#loc126 = loc(fused[#loc69, #loc70])
#loc127 = loc(fused[#loc71, #loc72])
#loc128 = loc(fused[#loc74, #loc73])
#loc129 = loc(fused[#loc75, #loc76])
#loc130 = loc(fused[#loc77, #loc78])
#loc131 = loc(fused[#loc79, #loc80, #loc81, #loc76])
#loc132 = loc(fused[#loc82, #loc83])
#loc133 = loc(fused[#loc84, #loc85])
#loc134 = loc(fused[#loc86, #loc87])
#loc135 = loc(fused[#loc88, #loc87])
#loc136 = loc(fused[#loc89, #loc90])
#loc137 = loc(fused[#loc91, #loc92])
#loc138 = loc(fused[#loc93, #loc94])
#loc139 = loc(fused[#loc95, #loc94])
