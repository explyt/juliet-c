!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc92 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":282:10)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":282:14)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":282:20)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":282:32)
#true = #cir.bool<true> : !cir.bool
#loc355 = loc(fused[#loc92, #loc93])
#loc356 = loc(fused[#loc94, #loc95])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_fgets_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc326)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc327)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc328)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc329)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc10)
  cir.func private @printIntLine(!s32i) loc(#loc330)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc13)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_fgets_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc332)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc19)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc333)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc23)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc336)
            %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc336)
            cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc336)
            cir.scope {
              %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc31)
              %7 = cir.const #cir.int<3> : !s32i loc(#loc32)
              %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc32)
              %9 = cir.const #cir.int<4> : !u64i loc(#loc32)
              %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc32)
              %11 = cir.const #cir.int<2> : !s32i loc(#loc32)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc32)
              %13 = cir.binop(add, %10, %12) : !u64i loc(#loc32)
              %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc32)
              %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc327)
              %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
              %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc34)
              %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
              %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
              %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc338)
              cir.if %20 {
                %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
                %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc40)
                cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc340)
              } else {
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
                cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc43)
              } loc(#loc339)
            } loc(#loc337)
          } loc(#loc335)
          cir.break loc(#loc44)
        } loc(#loc24)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc10)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc10)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc46)
          cir.break loc(#loc47)
        } loc(#loc45)
        cir.yield loc(#loc21)
      } loc(#loc21)
    } loc(#loc334)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc50)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc343)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc343)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc343)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
              %7 = cir.const #cir.int<10> : !s32i loc(#loc59)
              %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc345)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc63)
                %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc64)
                %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc64)
                %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc64)
                cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc65)
              } else {
                %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc13)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc13)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc66)
              } loc(#loc346)
            } loc(#loc344)
          } loc(#loc342)
          cir.break loc(#loc67)
        } loc(#loc51)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc69)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc69)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc70)
          cir.break loc(#loc71)
        } loc(#loc68)
        cir.yield loc(#loc48)
      } loc(#loc48)
    } loc(#loc341)
    cir.return loc(#loc15)
  } loc(#loc331)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_fgets_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc348)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc349)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc76)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc350)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc78)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc351)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc80)
    cir.return loc(#loc73)
  } loc(#loc347)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc352)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc353)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc88)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc89)
  cir.func @main(%arg0: !s32i loc(fused[#loc92, #loc93]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc94, #loc95])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc355)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc356)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc91)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc96)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc96)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc97)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc98)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc98)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc99)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc86)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %8 = cir.get_global @CWE127_Buffer_Underread__CWE839_fgets_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc357)
    cir.call @CWE127_Buffer_Underread__CWE839_fgets_15_good() : () -> () loc(#loc101)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc87)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc88)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    %13 = cir.get_global @CWE127_Buffer_Underread__CWE839_fgets_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc358)
    cir.call @CWE127_Buffer_Underread__CWE839_fgets_15_bad() : () -> () loc(#loc105)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc89)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc108)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc359)
    cir.return %17 : !s32i loc(#loc359)
  } loc(#loc354)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc110)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc361)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc116)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc120)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc365)
            %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc365)
            cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc365)
            cir.scope {
              %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc128)
              %7 = cir.const #cir.int<3> : !s32i loc(#loc129)
              %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc129)
              %9 = cir.const #cir.int<4> : !u64i loc(#loc129)
              %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc129)
              %11 = cir.const #cir.int<2> : !s32i loc(#loc129)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc129)
              %13 = cir.binop(add, %10, %12) : !u64i loc(#loc129)
              %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc129)
              %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc327)
              %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc130)
              %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc131)
              %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc132)
              %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc132)
              %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc367)
              cir.if %20 {
                %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc136)
                %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc137)
                cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc369)
              } else {
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc140)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc140)
                cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc141)
              } loc(#loc368)
            } loc(#loc366)
          } loc(#loc364)
          cir.break loc(#loc142)
        } loc(#loc121)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc144)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc144)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc145)
          cir.break loc(#loc146)
        } loc(#loc143)
        cir.yield loc(#loc118)
      } loc(#loc118)
    } loc(#loc363)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc149)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc151)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc151)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc152)
          cir.break loc(#loc153)
        } loc(#loc150)
        cir.case(default, []) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc372)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc372)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc372)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
              %7 = cir.const #cir.int<0> : !s32i loc(#loc162)
              %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc374)
              %9 = cir.ternary(%8, true {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc164)
                %11 = cir.const #cir.int<10> : !s32i loc(#loc165)
                %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc375)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc163)
                  cir.yield %14 : !cir.bool loc(#loc163)
                }, false {
                  %14 = cir.const #false loc(#loc163)
                  cir.yield %14 : !cir.bool loc(#loc163)
                }) : (!cir.bool) -> !cir.bool loc(#loc163)
                cir.yield %13 : !cir.bool loc(#loc163)
              }, false {
                %10 = cir.const #false loc(#loc163)
                cir.yield %10 : !cir.bool loc(#loc163)
              }) : (!cir.bool) -> !cir.bool loc(#loc163)
              cir.if %9 {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc170)
                %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc171)
                %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc171)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc171)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc172)
              } else {
                %10 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc110)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc110)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc173)
              } loc(#loc376)
            } loc(#loc373)
          } loc(#loc371)
          cir.break loc(#loc174)
        } loc(#loc154)
        cir.yield loc(#loc147)
      } loc(#loc147)
    } loc(#loc370)
    cir.return loc(#loc112)
  } loc(#loc360)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc378)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc180)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc379)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc184)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc382)
            %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc382)
            cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc382)
            cir.scope {
              %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc192)
              %7 = cir.const #cir.int<3> : !s32i loc(#loc193)
              %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc193)
              %9 = cir.const #cir.int<4> : !u64i loc(#loc193)
              %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc193)
              %11 = cir.const #cir.int<2> : !s32i loc(#loc193)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc193)
              %13 = cir.binop(add, %10, %12) : !u64i loc(#loc193)
              %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc193)
              %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc327)
              %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc194)
              %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc195)
              %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc196)
              %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc196)
              %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc384)
              cir.if %20 {
                %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc200)
                %22 = cir.call @atoi(%21) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc201)
                cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc386)
              } else {
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc204)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc204)
                cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc205)
              } loc(#loc385)
            } loc(#loc383)
          } loc(#loc381)
          cir.break loc(#loc206)
        } loc(#loc185)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc208)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc208)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc209)
          cir.break loc(#loc210)
        } loc(#loc207)
        cir.yield loc(#loc182)
      } loc(#loc182)
    } loc(#loc380)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc213)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc389)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc389)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc389)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc221)
              %7 = cir.const #cir.int<0> : !s32i loc(#loc222)
              %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc391)
              %9 = cir.ternary(%8, true {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc224)
                %11 = cir.const #cir.int<10> : !s32i loc(#loc225)
                %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc392)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc223)
                  cir.yield %14 : !cir.bool loc(#loc223)
                }, false {
                  %14 = cir.const #false loc(#loc223)
                  cir.yield %14 : !cir.bool loc(#loc223)
                }) : (!cir.bool) -> !cir.bool loc(#loc223)
                cir.yield %13 : !cir.bool loc(#loc223)
              }, false {
                %10 = cir.const #false loc(#loc223)
                cir.yield %10 : !cir.bool loc(#loc223)
              }) : (!cir.bool) -> !cir.bool loc(#loc223)
              cir.if %9 {
                %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc230)
                %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc231)
                %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc231)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc231)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc232)
              } else {
                %10 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc233)
                %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc233)
                cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc234)
              } loc(#loc393)
            } loc(#loc390)
          } loc(#loc388)
          cir.break loc(#loc235)
        } loc(#loc214)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc237)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc237)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc238)
          cir.break loc(#loc239)
        } loc(#loc236)
        cir.yield loc(#loc211)
      } loc(#loc211)
    } loc(#loc387)
    cir.return loc(#loc176)
  } loc(#loc377)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc395)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc244)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc245)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc396)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc249)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc251)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc251)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc252)
          cir.break loc(#loc253)
        } loc(#loc250)
        cir.case(default, []) {
          %4 = cir.const #cir.int<7> : !s32i loc(#loc255)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc398)
          cir.break loc(#loc257)
        } loc(#loc254)
        cir.yield loc(#loc247)
      } loc(#loc247)
    } loc(#loc397)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc260)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc401)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc401)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc401)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc268)
              %7 = cir.const #cir.int<10> : !s32i loc(#loc269)
              %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc403)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc273)
                %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc274)
                %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc274)
                %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc274)
                cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc275)
              } else {
                %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc276)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc276)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc277)
              } loc(#loc404)
            } loc(#loc402)
          } loc(#loc400)
          cir.break loc(#loc278)
        } loc(#loc261)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc280)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc280)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc281)
          cir.break loc(#loc282)
        } loc(#loc279)
        cir.yield loc(#loc258)
      } loc(#loc258)
    } loc(#loc399)
    cir.return loc(#loc241)
  } loc(#loc394)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc406)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc287)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc288)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc407)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc292)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<7> : !s32i loc(#loc294)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc409)
          cir.break loc(#loc296)
        } loc(#loc293)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc298)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc298)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc299)
          cir.break loc(#loc300)
        } loc(#loc297)
        cir.yield loc(#loc290)
      } loc(#loc290)
    } loc(#loc408)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc303)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc412)
            %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc412)
            cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc412)
            cir.scope {
              %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc311)
              %7 = cir.const #cir.int<10> : !s32i loc(#loc312)
              %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc414)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc316)
                %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc317)
                %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc317)
                %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc317)
                cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc318)
              } else {
                %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc319)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc319)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc320)
              } loc(#loc415)
            } loc(#loc413)
          } loc(#loc411)
          cir.break loc(#loc321)
        } loc(#loc304)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc323)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc323)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc324)
          cir.break loc(#loc325)
        } loc(#loc322)
        cir.yield loc(#loc301)
      } loc(#loc301)
    } loc(#loc410)
    cir.return loc(#loc284)
  } loc(#loc405)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_fgets_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":42:23)
#loc10 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":48:19)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":64:23)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":24:1)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":73:1)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":26:5)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":26:9)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":28:13)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":28:12)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":28:5)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":29:5)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":50:5)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":29:12)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":31:5)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":32:5)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":44:5)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":33:9)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":33:45)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":35:9)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":43:9)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":35:19)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":35:32)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":35:49)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":35:13)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":35:59)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":36:9)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":39:9)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":41:9)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":38:25)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":38:20)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":38:13)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":38:36)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":42:13)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":45:5)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":46:5)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":48:9)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":49:9)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":51:5)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":72:5)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":51:12)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":53:5)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":54:5)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":66:5)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":55:9)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":55:30)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":58:9)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":65:9)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":58:13)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":58:20)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":59:9)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":61:9)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":63:9)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":60:33)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":60:26)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":60:13)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":64:13)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":67:5)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":68:5)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":70:19)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":70:9)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":71:9)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":265:1)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":271:1)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":267:5)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":267:14)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":268:5)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":268:14)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":269:5)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":269:14)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":270:5)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":270:14)
#loc82 = loc("/usr/include/stdlib.h":575:1)
#loc83 = loc("/usr/include/stdlib.h":575:41)
#loc84 = loc("/usr/include/time.h":76:1)
#loc85 = loc("/usr/include/time.h":76:38)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":287:15)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":289:15)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":292:15)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":294:15)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":282:1)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":297:1)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":283:1)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":285:27)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":285:22)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":285:5)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":287:5)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":288:5)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":288:51)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":289:5)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":292:5)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":293:5)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":293:50)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":294:5)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":296:12)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":296:5)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":123:23)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":80:1)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":128:1)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":82:5)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":82:9)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":84:13)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":84:12)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":84:5)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":85:5)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":106:5)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":85:12)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":87:5)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":88:5)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":100:5)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":89:9)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":89:45)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":91:9)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":99:9)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":91:19)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":91:32)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":91:49)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":91:13)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":91:59)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":92:9)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":95:9)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":97:9)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":94:25)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":94:20)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":94:13)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":94:36)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":98:23)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":98:13)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":101:5)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":102:5)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":104:19)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":104:9)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":105:9)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":107:5)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":127:5)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":107:12)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":109:5)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":111:19)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":111:9)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":112:9)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":113:5)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":114:5)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":125:5)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":115:9)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":115:30)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":117:9)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":124:9)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":117:13)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":117:21)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":117:23)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":117:26)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":117:34)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":117:36)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":118:9)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":120:9)
#loc169 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":122:9)
#loc170 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":119:33)
#loc171 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":119:26)
#loc172 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":119:13)
#loc173 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":123:13)
#loc174 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":126:5)
#loc175 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":131:1)
#loc176 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":179:1)
#loc177 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":133:5)
#loc178 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":133:9)
#loc179 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":135:13)
#loc180 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":135:12)
#loc181 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":135:5)
#loc182 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":136:5)
#loc183 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":157:5)
#loc184 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":136:12)
#loc185 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":138:5)
#loc186 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":139:5)
#loc187 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":151:5)
#loc188 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":140:9)
#loc189 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":140:45)
#loc190 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":142:9)
#loc191 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":150:9)
#loc192 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":142:19)
#loc193 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":142:32)
#loc194 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":142:49)
#loc195 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":142:13)
#loc196 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":142:59)
#loc197 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":143:9)
#loc198 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":146:9)
#loc199 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":148:9)
#loc200 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":145:25)
#loc201 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":145:20)
#loc202 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":145:13)
#loc203 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":145:36)
#loc204 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":149:23)
#loc205 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":149:13)
#loc206 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":152:5)
#loc207 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":153:5)
#loc208 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":155:19)
#loc209 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":155:9)
#loc210 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":156:9)
#loc211 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":158:5)
#loc212 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":178:5)
#loc213 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":158:12)
#loc214 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":160:5)
#loc215 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":161:5)
#loc216 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":172:5)
#loc217 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":162:9)
#loc218 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":162:30)
#loc219 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":164:9)
#loc220 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":171:9)
#loc221 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":164:13)
#loc222 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":164:21)
#loc223 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":164:23)
#loc224 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":164:26)
#loc225 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":164:34)
#loc226 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":164:36)
#loc227 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":165:9)
#loc228 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":167:9)
#loc229 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":169:9)
#loc230 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":166:33)
#loc231 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":166:26)
#loc232 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":166:13)
#loc233 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":170:23)
#loc234 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":170:13)
#loc235 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":173:5)
#loc236 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":174:5)
#loc237 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":176:19)
#loc238 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":176:9)
#loc239 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":177:9)
#loc240 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":182:1)
#loc241 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":221:1)
#loc242 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":184:5)
#loc243 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":184:9)
#loc244 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":186:13)
#loc245 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":186:12)
#loc246 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":186:5)
#loc247 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":187:5)
#loc248 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":198:5)
#loc249 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":187:12)
#loc250 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":189:5)
#loc251 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":191:19)
#loc252 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":191:9)
#loc253 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":192:9)
#loc254 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":193:5)
#loc255 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":196:16)
#loc256 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":196:9)
#loc257 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":197:9)
#loc258 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":199:5)
#loc259 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":220:5)
#loc260 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":199:12)
#loc261 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":201:5)
#loc262 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":202:5)
#loc263 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":214:5)
#loc264 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":203:9)
#loc265 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":203:30)
#loc266 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":206:9)
#loc267 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":213:9)
#loc268 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":206:13)
#loc269 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":206:20)
#loc270 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":207:9)
#loc271 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":209:9)
#loc272 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":211:9)
#loc273 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":208:33)
#loc274 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":208:26)
#loc275 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":208:13)
#loc276 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":212:23)
#loc277 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":212:13)
#loc278 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":215:5)
#loc279 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":216:5)
#loc280 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":218:19)
#loc281 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":218:9)
#loc282 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":219:9)
#loc283 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":224:1)
#loc284 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":263:1)
#loc285 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":226:5)
#loc286 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":226:9)
#loc287 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":228:13)
#loc288 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":228:12)
#loc289 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":228:5)
#loc290 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":229:5)
#loc291 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":240:5)
#loc292 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":229:12)
#loc293 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":231:5)
#loc294 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":234:16)
#loc295 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":234:9)
#loc296 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":235:9)
#loc297 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":236:5)
#loc298 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":238:19)
#loc299 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":238:9)
#loc300 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":239:9)
#loc301 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":241:5)
#loc302 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":262:5)
#loc303 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":241:12)
#loc304 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":243:5)
#loc305 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":244:5)
#loc306 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":256:5)
#loc307 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":245:9)
#loc308 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":245:30)
#loc309 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":248:9)
#loc310 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":255:9)
#loc311 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":248:13)
#loc312 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":248:20)
#loc313 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":249:9)
#loc314 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":251:9)
#loc315 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":253:9)
#loc316 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":250:33)
#loc317 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":250:26)
#loc318 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":250:13)
#loc319 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":254:23)
#loc320 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":254:13)
#loc321 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":257:5)
#loc322 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":258:5)
#loc323 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":260:19)
#loc324 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":260:9)
#loc325 = loc("CWE127_Buffer_Underread__CWE839_fgets_15.c":261:9)
#loc326 = loc(fused[#loc1, #loc2])
#loc327 = loc(fused[#loc3, #loc4])
#loc328 = loc(fused[#loc5, #loc6])
#loc329 = loc(fused[#loc7, #loc8])
#loc330 = loc(fused[#loc11, #loc12])
#loc331 = loc(fused[#loc14, #loc15])
#loc332 = loc(fused[#loc16, #loc17])
#loc333 = loc(fused[#loc20, #loc18])
#loc334 = loc(fused[#loc21, #loc22])
#loc335 = loc(fused[#loc25, #loc26])
#loc336 = loc(fused[#loc27, #loc28])
#loc337 = loc(fused[#loc29, #loc30])
#loc338 = loc(fused[#loc34, #loc35])
#loc339 = loc(fused[#loc36, #loc37, #loc38, #loc30])
#loc340 = loc(fused[#loc41, #loc42])
#loc341 = loc(fused[#loc48, #loc49])
#loc342 = loc(fused[#loc52, #loc53])
#loc343 = loc(fused[#loc54, #loc55])
#loc344 = loc(fused[#loc56, #loc57])
#loc345 = loc(fused[#loc58, #loc59])
#loc346 = loc(fused[#loc60, #loc61, #loc62, #loc57])
#loc347 = loc(fused[#loc72, #loc73])
#loc348 = loc(fused[#loc74, #loc75])
#loc349 = loc(fused[#loc76, #loc77])
#loc350 = loc(fused[#loc78, #loc79])
#loc351 = loc(fused[#loc80, #loc81])
#loc352 = loc(fused[#loc82, #loc83])
#loc353 = loc(fused[#loc84, #loc85])
#loc354 = loc(fused[#loc90, #loc91])
#loc357 = loc(fused[#loc101, #loc102])
#loc358 = loc(fused[#loc105, #loc106])
#loc359 = loc(fused[#loc109, #loc108])
#loc360 = loc(fused[#loc111, #loc112])
#loc361 = loc(fused[#loc113, #loc114])
#loc362 = loc(fused[#loc117, #loc115])
#loc363 = loc(fused[#loc118, #loc119])
#loc364 = loc(fused[#loc122, #loc123])
#loc365 = loc(fused[#loc124, #loc125])
#loc366 = loc(fused[#loc126, #loc127])
#loc367 = loc(fused[#loc131, #loc132])
#loc368 = loc(fused[#loc133, #loc134, #loc135, #loc127])
#loc369 = loc(fused[#loc138, #loc139])
#loc370 = loc(fused[#loc147, #loc148])
#loc371 = loc(fused[#loc155, #loc156])
#loc372 = loc(fused[#loc157, #loc158])
#loc373 = loc(fused[#loc159, #loc160])
#loc374 = loc(fused[#loc161, #loc162])
#loc375 = loc(fused[#loc164, #loc166])
#loc376 = loc(fused[#loc167, #loc168, #loc169, #loc160])
#loc377 = loc(fused[#loc175, #loc176])
#loc378 = loc(fused[#loc177, #loc178])
#loc379 = loc(fused[#loc181, #loc179])
#loc380 = loc(fused[#loc182, #loc183])
#loc381 = loc(fused[#loc186, #loc187])
#loc382 = loc(fused[#loc188, #loc189])
#loc383 = loc(fused[#loc190, #loc191])
#loc384 = loc(fused[#loc195, #loc196])
#loc385 = loc(fused[#loc197, #loc198, #loc199, #loc191])
#loc386 = loc(fused[#loc202, #loc203])
#loc387 = loc(fused[#loc211, #loc212])
#loc388 = loc(fused[#loc215, #loc216])
#loc389 = loc(fused[#loc217, #loc218])
#loc390 = loc(fused[#loc219, #loc220])
#loc391 = loc(fused[#loc221, #loc222])
#loc392 = loc(fused[#loc224, #loc226])
#loc393 = loc(fused[#loc227, #loc228, #loc229, #loc220])
#loc394 = loc(fused[#loc240, #loc241])
#loc395 = loc(fused[#loc242, #loc243])
#loc396 = loc(fused[#loc246, #loc244])
#loc397 = loc(fused[#loc247, #loc248])
#loc398 = loc(fused[#loc256, #loc255])
#loc399 = loc(fused[#loc258, #loc259])
#loc400 = loc(fused[#loc262, #loc263])
#loc401 = loc(fused[#loc264, #loc265])
#loc402 = loc(fused[#loc266, #loc267])
#loc403 = loc(fused[#loc268, #loc269])
#loc404 = loc(fused[#loc270, #loc271, #loc272, #loc267])
#loc405 = loc(fused[#loc283, #loc284])
#loc406 = loc(fused[#loc285, #loc286])
#loc407 = loc(fused[#loc289, #loc287])
#loc408 = loc(fused[#loc290, #loc291])
#loc409 = loc(fused[#loc295, #loc294])
#loc410 = loc(fused[#loc301, #loc302])
#loc411 = loc(fused[#loc305, #loc306])
#loc412 = loc(fused[#loc307, #loc308])
#loc413 = loc(fused[#loc309, #loc310])
#loc414 = loc(fused[#loc311, #loc312])
#loc415 = loc(fused[#loc313, #loc314, #loc315, #loc310])
