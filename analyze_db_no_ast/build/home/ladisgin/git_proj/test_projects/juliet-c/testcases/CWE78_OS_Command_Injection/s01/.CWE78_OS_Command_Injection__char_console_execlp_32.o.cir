!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_console_execlp_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc137)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc138)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc139)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc140)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc141)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc12)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc13)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_console_execlp_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc145)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc146)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc144)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc145)
    %4 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc146)
    cir.store %4, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc146)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc149)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc29)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
      cir.scope {
        %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc151)
        %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc35)
        %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
        %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc35)
        cir.store %14, %11 : !u64i, !cir.ptr<!u64i> loc(#loc151)
        cir.scope {
          %15 = cir.const #cir.int<100> : !s32i loc(#loc39)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc39)
          %17 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc40)
          %18 = cir.binop(sub, %16, %17) : !u64i loc(#loc153)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc41)
          %21 = cir.cmp(gt, %18, %20) : !u64i, !s32i loc(#loc154)
          %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc42)
          cir.if %22 {
            cir.scope {
              %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
              %24 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc47)
              %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !u64i), !cir.ptr<!s8i> loc(#loc48)
              %26 = cir.const #cir.int<100> : !s32i loc(#loc49)
              %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc49)
              %28 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc50)
              %29 = cir.binop(sub, %27, %28) : !u64i loc(#loc157)
              %30 = cir.cast(integral, %29 : !u64i), !s32i loc(#loc157)
              %31 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc139)
              %32 = cir.load %31 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc51)
              %33 = cir.call @fgets(%25, %30, %32) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc52)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc53)
              %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc53)
              %36 = cir.cmp(ne, %33, %35) : !cir.ptr<!s8i>, !s32i loc(#loc158)
              %37 = cir.cast(int_to_bool, %36 : !s32i), !cir.bool loc(#loc54)
              cir.if %37 {
                %38 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc58)
                %39 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
                %40 = cir.call @strlen(%39) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc58)
                cir.store %40, %11 : !u64i, !cir.ptr<!u64i> loc(#loc160)
                cir.scope {
                  %41 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc64)
                  %42 = cir.const #cir.int<0> : !s32i loc(#loc65)
                  %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc65)
                  %44 = cir.cmp(gt, %41, %43) : !u64i, !s32i loc(#loc162)
                  %45 = cir.cast(int_to_bool, %44 : !s32i), !cir.bool loc(#loc66)
                  %46 = cir.ternary(%45, true {
                    %47 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
                    %48 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc69)
                    %49 = cir.const #cir.int<1> : !s32i loc(#loc70)
                    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc70)
                    %51 = cir.binop(sub, %48, %50) : !u64i loc(#loc163)
                    %52 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %51 : !u64i), !cir.ptr<!s8i> loc(#loc71)
                    %53 = cir.load %52 : !cir.ptr<!s8i>, !s8i loc(#loc68)
                    %54 = cir.cast(integral, %53 : !s8i), !s32i loc(#loc68)
                    %55 = cir.const #cir.int<10> : !s32i loc(#loc72)
                    %56 = cir.cmp(eq, %54, %55) : !s32i, !s32i loc(#loc164)
                    %57 = cir.cast(int_to_bool, %56 : !s32i), !cir.bool loc(#loc73)
                    %58 = cir.ternary(%57, true {
                      %59 = cir.const #true loc(#loc67)
                      cir.yield %59 : !cir.bool loc(#loc67)
                    }, false {
                      %59 = cir.const #false loc(#loc67)
                      cir.yield %59 : !cir.bool loc(#loc67)
                    }) : (!cir.bool) -> !cir.bool loc(#loc67)
                    cir.yield %58 : !cir.bool loc(#loc67)
                  }, false {
                    %47 = cir.const #false loc(#loc67)
                    cir.yield %47 : !cir.bool loc(#loc67)
                  }) : (!cir.bool) -> !cir.bool loc(#loc67)
                  cir.if %46 {
                    %47 = cir.const #cir.int<0> : !s32i loc(#loc75)
                    %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc75)
                    %49 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
                    %50 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc77)
                    %51 = cir.const #cir.int<1> : !s32i loc(#loc78)
                    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc78)
                    %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc166)
                    %54 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %53 : !u64i), !cir.ptr<!s8i> loc(#loc79)
                    cir.store %48, %54 : !s8i, !cir.ptr<!s8i> loc(#loc167)
                  } loc(#loc165)
                } loc(#loc161)
              } else {
                %38 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
                %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
                cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc80)
                %40 = cir.const #cir.int<0> : !s32i loc(#loc81)
                %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc81)
                %42 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
                %43 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc83)
                %44 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc84)
                cir.store %41, %44 : !s8i, !cir.ptr<!s8i> loc(#loc168)
              } loc(#loc159)
            } loc(#loc156)
          } loc(#loc155)
        } loc(#loc152)
      } loc(#loc150)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc86)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
    } loc(#loc148)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc171)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
      %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc12)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc12)
      %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc93)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc93)
      %13 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc13)
      %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc13)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc95)
      %17 = cir.call @execlp(%10, %12, %14, %15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc96)
    } loc(#loc170)
    cir.return loc(#loc15)
  } loc(#loc142)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_console_execlp_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc99)
    cir.return loc(#loc98)
  } loc(#loc172)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc174)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc103)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc176)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc177)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc178)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc179)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc177)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc178)
    %4 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc179)
    cir.store %4, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc179)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc114)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc182)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
      %9 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc121)
      %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
      %11 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc103)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc103)
      %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc121)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc183)
    } loc(#loc181)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc185)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
      %9 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc131)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc131)
      %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc132)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc132)
      %13 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc133)
      %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc133)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc135)
      %17 = cir.call @execlp(%10, %12, %14, %15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc136)
    } loc(#loc184)
    cir.return loc(#loc105)
  } loc(#loc175)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_console_execlp_32.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":73:31)
#loc10 = loc("/usr/include/unistd.h":605:1)
#loc11 = loc("/usr/include/unistd.h":606:14)
#loc12 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":86:16)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":86:42)
#loc14 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":45:1)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":88:1)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":47:5)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":47:12)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":48:5)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":48:25)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":49:5)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":49:25)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":50:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":50:28)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":51:12)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":51:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":52:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":80:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":53:9)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":53:24)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":53:23)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":54:9)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":78:9)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":56:13)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":56:41)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":56:30)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":56:37)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":58:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":77:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":58:17)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":58:21)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":58:31)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":58:29)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":59:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":61:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":76:17)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":61:27)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":61:32)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":61:31)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":61:47)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":61:51)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":61:61)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":61:21)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":61:71)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":61:68)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":62:17)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":70:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":72:17)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":65:31)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":65:38)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":65:21)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":65:42)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":66:21)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":69:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":66:25)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":66:35)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":66:33)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":66:37)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":66:40)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":66:45)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":66:53)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":66:54)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":66:59)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":66:56)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":67:21)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":68:43)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":68:25)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":68:30)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":68:38)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":68:39)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":73:21)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":75:37)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":75:21)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":75:26)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":75:33)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":79:21)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":79:10)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":79:9)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":81:5)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":87:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":82:9)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":82:24)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":82:23)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":86:29)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":86:56)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":86:70)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":86:9)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":117:1)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":120:1)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":119:5)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":119:13)
#loc101 = loc("/usr/include/string.h":149:1)
#loc102 = loc("/usr/include/string.h":150:14)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":105:22)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":95:1)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":115:1)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":97:5)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":97:12)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":98:5)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":98:25)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":99:5)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":99:25)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":100:5)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":100:28)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":101:12)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":101:5)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":102:5)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":107:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":103:9)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":103:24)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":103:23)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":105:9)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":105:16)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":106:21)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":106:10)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":106:9)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":108:5)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":114:5)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":109:9)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":109:24)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":109:23)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":113:16)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":113:29)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":113:42)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":113:56)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":113:70)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_execlp_32.c":113:9)
#loc137 = loc(fused[#loc1, #loc2])
#loc138 = loc(fused[#loc3, #loc4])
#loc139 = loc(fused[#loc5, #loc6])
#loc140 = loc(fused[#loc7, #loc8])
#loc141 = loc(fused[#loc10, #loc11])
#loc142 = loc(fused[#loc14, #loc15])
#loc143 = loc(fused[#loc16, #loc17])
#loc144 = loc(fused[#loc18, #loc19])
#loc145 = loc(fused[#loc20, #loc21])
#loc146 = loc(fused[#loc22, #loc23])
#loc147 = loc(fused[#loc25, #loc24])
#loc148 = loc(fused[#loc26, #loc27])
#loc149 = loc(fused[#loc28, #loc29])
#loc150 = loc(fused[#loc31, #loc32])
#loc151 = loc(fused[#loc33, #loc34])
#loc152 = loc(fused[#loc37, #loc38])
#loc153 = loc(fused[#loc39, #loc40])
#loc154 = loc(fused[#loc39, #loc41])
#loc155 = loc(fused[#loc43, #loc38])
#loc156 = loc(fused[#loc44, #loc45])
#loc157 = loc(fused[#loc49, #loc50])
#loc158 = loc(fused[#loc52, #loc53])
#loc159 = loc(fused[#loc55, #loc56, #loc57, #loc45])
#loc160 = loc(fused[#loc60, #loc61])
#loc161 = loc(fused[#loc62, #loc63])
#loc162 = loc(fused[#loc64, #loc65])
#loc163 = loc(fused[#loc69, #loc70])
#loc164 = loc(fused[#loc68, #loc72])
#loc165 = loc(fused[#loc74, #loc63])
#loc166 = loc(fused[#loc77, #loc78])
#loc167 = loc(fused[#loc76, #loc75])
#loc168 = loc(fused[#loc82, #loc81])
#loc169 = loc(fused[#loc87, #loc85])
#loc170 = loc(fused[#loc88, #loc89])
#loc171 = loc(fused[#loc90, #loc91])
#loc172 = loc(fused[#loc97, #loc98])
#loc173 = loc(fused[#loc99, #loc100])
#loc174 = loc(fused[#loc101, #loc102])
#loc175 = loc(fused[#loc104, #loc105])
#loc176 = loc(fused[#loc106, #loc107])
#loc177 = loc(fused[#loc108, #loc109])
#loc178 = loc(fused[#loc110, #loc111])
#loc179 = loc(fused[#loc112, #loc113])
#loc180 = loc(fused[#loc115, #loc114])
#loc181 = loc(fused[#loc116, #loc117])
#loc182 = loc(fused[#loc118, #loc119])
#loc183 = loc(fused[#loc125, #loc123])
#loc184 = loc(fused[#loc126, #loc127])
#loc185 = loc(fused[#loc128, #loc129])
