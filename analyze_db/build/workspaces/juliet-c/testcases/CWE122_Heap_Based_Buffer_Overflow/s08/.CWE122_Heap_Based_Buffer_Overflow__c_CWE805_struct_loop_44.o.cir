!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":21:21)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":21:37)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":65:25)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":65:41)
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc174 = loc(fused[#loc7, #loc8])
#loc209 = loc(fused[#loc95, #loc96])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc171)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc172)
  cir.func internal private @badSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc175)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc176)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc177)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc174)
    cir.store %arg0, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc15)
    cir.br ^bb1 loc(#loc178)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc179)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc180)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc22)
    cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc181)
    cir.br ^bb4 loc(#loc180)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc24)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc25)
    %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc182)
    cir.brcond %9 ^bb5, ^bb9 loc(#loc26)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc183)
  ^bb6:  // pred: ^bb5
    %10 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc29)
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %11 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
    cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc33)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %16 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
    %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
    cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    cir.br ^bb7 loc(#loc21)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc21)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc36)
    %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc37)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc186)
    cir.br ^bb4 loc(#loc180)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc21)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc19)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc187)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc188)
  ^bb13:  // pred: ^bb12
    %22 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc42)
    cir.store %23, %2 : !u64i, !cir.ptr<!u64i> loc(#loc189)
    cir.br ^bb14 loc(#loc188)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %24 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc45)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc45)
    %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc190)
    cir.brcond %27 ^bb15, ^bb19 loc(#loc46)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc191)
  ^bb16:  // pred: ^bb15
    %28 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
    %29 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    %31 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!ty__twoIntsStruct>, %31 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
    cir.copy %33 to %30 : !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    cir.br ^bb17 loc(#loc41)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc41)
  ^bb18:  // pred: ^bb17
    %34 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc54)
    cir.store %35, %2 : !u64i, !cir.ptr<!u64i> loc(#loc192)
    cir.br ^bb14 loc(#loc188)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc41)
  ^bb20:  // pred: ^bb19
    %36 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!ty__twoIntsStruct>, %37 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    cir.call @printStructLine(%38) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc58)
    %39 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc59)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc59)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc60)
    cir.br ^bb21 loc(#loc39)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc17)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc6)
  } loc(#loc173)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc193)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc194)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc196)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!ty__twoIntsStruct>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty__twoIntsStruct>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc197)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<(!cir.ptr<!ty__twoIntsStruct>)>> loc(#loc70)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!ty__twoIntsStruct>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty__twoIntsStruct>)>>> loc(#loc197)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc198)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc73)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc74)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc74)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc199)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc200)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc73)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc201)
    cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc202)
    cir.br ^bb1 loc(#loc203)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc82)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc204)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc205)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc84)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc86)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc84)
    cir.br ^bb3 loc(#loc80)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc80)
  ^bb4:  // pred: ^bb3
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty__twoIntsStruct>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!ty__twoIntsStruct>)>> loc(#loc87)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
    cir.call %18(%19) : (!cir.ptr<!cir.func<(!cir.ptr<!ty__twoIntsStruct>)>>, !cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc87)
    cir.return loc(#loc66)
  } loc(#loc195)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc207)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc91)
    cir.return loc(#loc90)
  } loc(#loc206)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc95, #loc96])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc210)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc211)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc212)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc209)
    cir.store %arg0, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc103)
    cir.br ^bb1 loc(#loc213)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc214)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc215)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc110)
    cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc216)
    cir.br ^bb4 loc(#loc215)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc112)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc113)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc113)
    %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc217)
    cir.brcond %9 ^bb5, ^bb9 loc(#loc114)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc218)
  ^bb6:  // pred: ^bb5
    %10 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc117)
    %12 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %11 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
    %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
    cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc120)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %16 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
    %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
    cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    cir.br ^bb7 loc(#loc109)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc109)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc122)
    %21 = cir.unary(inc, %20) : !u64i, !u64i loc(#loc123)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc221)
    cir.br ^bb4 loc(#loc215)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc109)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc107)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc222)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc223)
  ^bb13:  // pred: ^bb12
    %22 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc128)
    cir.store %23, %2 : !u64i, !cir.ptr<!u64i> loc(#loc224)
    cir.br ^bb14 loc(#loc223)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %24 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc130)
    %25 = cir.const #cir.int<100> : !s32i loc(#loc131)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc131)
    %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc225)
    cir.brcond %27 ^bb15, ^bb19 loc(#loc132)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc226)
  ^bb16:  // pred: ^bb15
    %28 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
    %29 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc135)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
    %31 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc137)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc138)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!ty__twoIntsStruct>, %31 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc138)
    cir.copy %33 to %30 : !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
    cir.br ^bb17 loc(#loc127)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc127)
  ^bb18:  // pred: ^bb17
    %34 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc139)
    %35 = cir.unary(inc, %34) : !u64i, !u64i loc(#loc140)
    cir.store %35, %2 : !u64i, !cir.ptr<!u64i> loc(#loc227)
    cir.br ^bb14 loc(#loc223)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc127)
  ^bb20:  // pred: ^bb19
    %36 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc142)
    %38 = cir.ptr_stride(%36 : !cir.ptr<!ty__twoIntsStruct>, %37 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
    cir.call @printStructLine(%38) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc144)
    %39 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc145)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc145)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc146)
    cir.br ^bb21 loc(#loc125)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc105)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc94)
  } loc(#loc208)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc229)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!ty__twoIntsStruct>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty__twoIntsStruct>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc230)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!cir.ptr<!ty__twoIntsStruct>)>> loc(#loc152)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!cir.ptr<!ty__twoIntsStruct>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty__twoIntsStruct>)>>> loc(#loc230)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc153)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc231)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc155)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc156)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc156)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc232)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc233)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc155)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc234)
    cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc235)
    cir.br ^bb1 loc(#loc236)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc163)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc164)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc164)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc237)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc238)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc166)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc168)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc166)
    cir.br ^bb3 loc(#loc162)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc162)
  ^bb4:  // pred: ^bb3
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty__twoIntsStruct>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!ty__twoIntsStruct>)>> loc(#loc169)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc170)
    cir.call %18(%19) : (!cir.ptr<!cir.func<(!cir.ptr<!ty__twoIntsStruct>)>>, !cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc169)
    cir.return loc(#loc148)
  } loc(#loc228)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":21:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":45:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":24:9)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":24:33)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":26:13)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":26:20)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":35:13)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":35:20)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":22:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":23:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":44:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":25:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":33:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":28:13)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":32:13)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":28:22)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":28:18)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":28:25)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":28:29)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":28:27)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":29:13)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":30:36)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":30:24)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":30:17)
#loc31 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":31:36)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":31:24)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":31:17)
#loc35 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":28:35)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":28:34)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":34:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":43:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":37:13)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":40:13)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":37:22)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":37:18)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":37:25)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":37:29)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":37:27)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":38:13)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":39:17)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":39:22)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":39:23)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":39:34)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":39:27)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":37:35)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":37:34)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":41:30)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":41:35)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":41:36)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":41:13)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":42:18)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":42:13)
#loc61 = loc("/usr/include/stdlib.h":672:1)
#loc62 = loc("/usr/include/stdlib.h":672:45)
#loc63 = loc("/usr/include/stdlib.h":756:1)
#loc64 = loc("/usr/include/stdlib.h":756:70)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":47:1)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":58:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":49:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":49:21)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":51:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":51:41)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":52:12)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":52:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":54:29)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":54:36)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":54:39)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":54:59)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":54:60)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":54:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":55:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":55:33)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":55:9)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":55:17)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":55:23)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":55:24)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":55:30)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":55:29)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":57:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":57:13)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":102:1)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":105:1)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":104:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":104:13)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":65:1)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":89:1)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":68:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":68:33)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":70:13)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":70:20)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":79:13)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":79:20)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":66:1)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":67:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":88:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":69:9)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":77:9)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":72:13)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":76:13)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":72:22)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":72:18)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":72:25)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":72:29)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":72:27)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":73:13)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":74:36)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":74:24)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":74:17)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":75:36)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":75:24)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":75:17)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":72:35)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":72:34)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":78:9)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":87:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":81:13)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":84:13)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":81:22)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":81:18)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":81:25)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":81:29)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":81:27)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":82:13)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":83:17)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":83:22)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":83:23)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":83:34)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":83:27)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":81:35)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":81:34)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":85:30)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":85:35)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":85:36)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":85:13)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":86:18)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":86:13)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":91:1)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":100:1)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":93:5)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":93:21)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":94:5)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":94:41)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":95:12)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":95:5)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":97:29)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":97:36)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":97:40)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":97:60)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":97:61)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":97:5)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":98:5)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":98:33)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":98:9)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":98:17)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":98:23)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":98:24)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":98:30)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":98:29)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":99:5)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_loop_44.c":99:13)
#loc171 = loc(fused[#loc1, #loc2])
#loc172 = loc(fused[#loc3, #loc4])
#loc173 = loc(fused[#loc5, #loc6])
#loc175 = loc(fused[#loc9, #loc10])
#loc176 = loc(fused[#loc11, #loc12])
#loc177 = loc(fused[#loc13, #loc14])
#loc178 = loc(fused[#loc16, #loc17])
#loc179 = loc(fused[#loc18, #loc19])
#loc180 = loc(fused[#loc20, #loc21])
#loc181 = loc(fused[#loc23, #loc22])
#loc182 = loc(fused[#loc24, #loc25])
#loc183 = loc(fused[#loc27, #loc21])
#loc184 = loc(fused[#loc30, #loc28])
#loc185 = loc(fused[#loc34, #loc32])
#loc186 = loc(fused[#loc37, #loc36])
#loc187 = loc(fused[#loc38, #loc39])
#loc188 = loc(fused[#loc40, #loc41])
#loc189 = loc(fused[#loc43, #loc42])
#loc190 = loc(fused[#loc44, #loc45])
#loc191 = loc(fused[#loc47, #loc41])
#loc192 = loc(fused[#loc54, #loc53])
#loc193 = loc(fused[#loc61, #loc62])
#loc194 = loc(fused[#loc63, #loc64])
#loc195 = loc(fused[#loc65, #loc66])
#loc196 = loc(fused[#loc67, #loc68])
#loc197 = loc(fused[#loc69, #loc70])
#loc198 = loc(fused[#loc72, #loc71])
#loc199 = loc(fused[#loc75, #loc76])
#loc200 = loc(fused[#loc74, #loc76])
#loc201 = loc(fused[#loc73, #loc77])
#loc202 = loc(fused[#loc78, #loc77])
#loc203 = loc(fused[#loc79, #loc80])
#loc204 = loc(fused[#loc81, #loc82])
#loc205 = loc(fused[#loc83, #loc80])
#loc206 = loc(fused[#loc89, #loc90])
#loc207 = loc(fused[#loc91, #loc92])
#loc208 = loc(fused[#loc93, #loc94])
#loc210 = loc(fused[#loc97, #loc98])
#loc211 = loc(fused[#loc99, #loc100])
#loc212 = loc(fused[#loc101, #loc102])
#loc213 = loc(fused[#loc104, #loc105])
#loc214 = loc(fused[#loc106, #loc107])
#loc215 = loc(fused[#loc108, #loc109])
#loc216 = loc(fused[#loc111, #loc110])
#loc217 = loc(fused[#loc112, #loc113])
#loc218 = loc(fused[#loc115, #loc109])
#loc219 = loc(fused[#loc118, #loc116])
#loc220 = loc(fused[#loc121, #loc119])
#loc221 = loc(fused[#loc123, #loc122])
#loc222 = loc(fused[#loc124, #loc125])
#loc223 = loc(fused[#loc126, #loc127])
#loc224 = loc(fused[#loc129, #loc128])
#loc225 = loc(fused[#loc130, #loc131])
#loc226 = loc(fused[#loc133, #loc127])
#loc227 = loc(fused[#loc140, #loc139])
#loc228 = loc(fused[#loc147, #loc148])
#loc229 = loc(fused[#loc149, #loc150])
#loc230 = loc(fused[#loc151, #loc152])
#loc231 = loc(fused[#loc154, #loc153])
#loc232 = loc(fused[#loc157, #loc158])
#loc233 = loc(fused[#loc156, #loc158])
#loc234 = loc(fused[#loc155, #loc159])
#loc235 = loc(fused[#loc160, #loc159])
#loc236 = loc(fused[#loc161, #loc162])
#loc237 = loc(fused[#loc163, #loc164])
#loc238 = loc(fused[#loc165, #loc162])
