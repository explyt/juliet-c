!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":130:10)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":130:14)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":130:20)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":130:32)
#loc258 = loc(fused[#loc87, #loc88])
#loc259 = loc(fused[#loc89, #loc90])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc221)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc222)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc223)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc224)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc225)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc226)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc227)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc228)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc223)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc230)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc231)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc232)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc24)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc233)
    cir.br ^bb1 loc(#loc234)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc28)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc235)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc30)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc31)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc31)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc236)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc237)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc30)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc238)
    cir.store %13, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc239)
    cir.br ^bb3 loc(#loc240)
  ^bb3:  // pred: ^bb2
    %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc241)
    cir.brcond %17 ^bb4, ^bb5 loc(#loc242)
  ^bb4:  // pred: ^bb3
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc41)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc43)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc41)
    cir.br ^bb5 loc(#loc37)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc37)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc27)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc243)
  ^bb9:  // pred: ^bb8
    %21 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc223)
    cir.copy %21 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc223)
    %22 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc46)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc47)
    %24 = cir.call @strlen(%23) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc46)
    cir.store %24, %2 : !u64i, !cir.ptr<!u64i> loc(#loc244)
    cir.br ^bb10 loc(#loc245)
  ^bb10:  // pred: ^bb9
    %25 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc52)
    cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc246)
    cir.br ^bb11 loc(#loc245)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %28 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc55)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc56)
    %31 = cir.binop(add, %28, %30) : !u64i loc(#loc247)
    %32 = cir.cmp(lt, %27, %31) : !u64i, !cir.bool loc(#loc248)
    cir.brcond %32 ^bb12, ^bb16 loc(#loc57)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc249)
  ^bb13:  // pred: ^bb12
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc60)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !u64i), !cir.ptr<!s8i> loc(#loc60)
    %36 = cir.load %35 : !cir.ptr<!s8i>, !s8i loc(#loc60)
    %37 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc62)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc63)
    cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc250)
    cir.br ^bb14 loc(#loc51)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc51)
  ^bb15:  // pred: ^bb14
    %40 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    %41 = cir.unary(inc, %40) : !u64i, !u64i loc(#loc66)
    cir.store %41, %1 : !u64i, !cir.ptr<!u64i> loc(#loc251)
    cir.br ^bb11 loc(#loc245)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc51)
  ^bb17:  // pred: ^bb16
    %42 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %43 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc69)
    cir.call @free(%44) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc70)
    cir.br ^bb18 loc(#loc45)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc18)
  } loc(#loc229)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc253)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc254)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc75)
    cir.return loc(#loc72)
  } loc(#loc252)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc255)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc256)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc84)
  cir.func @main(%arg0: !s32i loc(fused[#loc87, #loc88]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc89, #loc90])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc258)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc259)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc86)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc91)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc92)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc93)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc93)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc94)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc81)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02_good : !cir.ptr<!cir.func<!void ()>> loc(#loc260)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02_good() : () -> () loc(#loc96)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc82)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc83)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc261)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02_bad() : () -> () loc(#loc100)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc84)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc103)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc262)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc262)
    cir.return %17 : !s32i loc(#loc262)
  } loc(#loc257)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc105)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc222)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc264)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc265)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc266)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc113)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc267)
    cir.br ^bb1 loc(#loc268)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc117)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc269)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc105)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    cir.br ^bb8 loc(#loc119)
  ^bb3:  // pred: ^bb1
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc122)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc123)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc123)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc123)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc270)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc271)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc122)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc272)
    cir.store %17, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc273)
    cir.br ^bb4 loc(#loc274)
  ^bb4:  // pred: ^bb3
    %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc133)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc133)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc275)
    cir.brcond %21 ^bb5, ^bb6 loc(#loc276)
  ^bb5:  // pred: ^bb4
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc135)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc137)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc135)
    cir.br ^bb6 loc(#loc131)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc131)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc116)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc116)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc277)
  ^bb10:  // pred: ^bb9
    %25 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc222)
    cir.copy %25 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc222)
    %26 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc140)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc141)
    %28 = cir.call @strlen(%27) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc140)
    cir.store %28, %2 : !u64i, !cir.ptr<!u64i> loc(#loc278)
    cir.br ^bb11 loc(#loc279)
  ^bb11:  // pred: ^bb10
    %29 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc146)
    cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc280)
    cir.br ^bb12 loc(#loc279)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc148)
    %32 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc149)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc150)
    %35 = cir.binop(add, %32, %34) : !u64i loc(#loc281)
    %36 = cir.cmp(lt, %31, %35) : !u64i, !cir.bool loc(#loc282)
    cir.brcond %36 ^bb13, ^bb17 loc(#loc151)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc283)
  ^bb14:  // pred: ^bb13
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc153)
    %38 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc154)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc154)
    %40 = cir.load %39 : !cir.ptr<!s8i>, !s8i loc(#loc154)
    %41 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
    %42 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc156)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc157)
    cir.store %40, %43 : !s8i, !cir.ptr<!s8i> loc(#loc284)
    cir.br ^bb15 loc(#loc145)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc145)
  ^bb16:  // pred: ^bb15
    %44 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc159)
    %45 = cir.unary(inc, %44) : !u64i, !u64i loc(#loc160)
    cir.store %45, %1 : !u64i, !cir.ptr<!u64i> loc(#loc285)
    cir.br ^bb12 loc(#loc279)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc145)
  ^bb18:  // pred: ^bb17
    %46 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc162)
    %47 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc163)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc164)
    cir.br ^bb19 loc(#loc139)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc107)
  } loc(#loc263)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc221)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc287)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc288)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc289)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc172)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc290)
    cir.br ^bb1 loc(#loc291)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc176)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc176)
    cir.brcond %6 ^bb2, ^bb7 loc(#loc292)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc178)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc179)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %10 = cir.binop(add, %8, %9) nsw : !s32i loc(#loc179)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc179)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc293)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc294)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc178)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc295)
    cir.store %15, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc296)
    cir.br ^bb3 loc(#loc297)
  ^bb3:  // pred: ^bb2
    %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc189)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc189)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc298)
    cir.brcond %19 ^bb4, ^bb5 loc(#loc299)
  ^bb4:  // pred: ^bb3
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc191)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc192)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc193)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc191)
    cir.br ^bb5 loc(#loc187)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc187)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc175)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc175)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc300)
  ^bb9:  // pred: ^bb8
    %23 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc221)
    cir.copy %23 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc221)
    %24 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc196)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc197)
    %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc196)
    cir.store %26, %2 : !u64i, !cir.ptr<!u64i> loc(#loc301)
    cir.br ^bb10 loc(#loc302)
  ^bb10:  // pred: ^bb9
    %27 = cir.const #cir.int<0> : !s32i loc(#loc202)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc202)
    cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc303)
    cir.br ^bb11 loc(#loc302)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc204)
    %30 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc205)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc206)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc206)
    %33 = cir.binop(add, %30, %32) : !u64i loc(#loc304)
    %34 = cir.cmp(lt, %29, %33) : !u64i, !cir.bool loc(#loc305)
    cir.brcond %34 ^bb12, ^bb16 loc(#loc207)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc306)
  ^bb13:  // pred: ^bb12
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc209)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc210)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc210)
    %38 = cir.load %37 : !cir.ptr<!s8i>, !s8i loc(#loc210)
    %39 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc211)
    %40 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc212)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc213)
    cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc307)
    cir.br ^bb14 loc(#loc201)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc201)
  ^bb15:  // pred: ^bb14
    %42 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc215)
    %43 = cir.unary(inc, %42) : !u64i, !u64i loc(#loc216)
    cir.store %43, %1 : !u64i, !cir.ptr<!u64i> loc(#loc308)
    cir.br ^bb11 loc(#loc302)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc201)
  ^bb17:  // pred: ^bb16
    %44 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc217)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc218)
    %45 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc219)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc219)
    cir.call @free(%46) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc220)
    cir.br ^bb18 loc(#loc195)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc166)
  } loc(#loc286)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":100:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":100:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":74:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":74:29)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":39:9)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":39:29)
#loc7 = loc("/usr/include/stdlib.h":672:1)
#loc8 = loc("/usr/include/stdlib.h":672:45)
#loc9 = loc("/usr/include/stdlib.h":756:1)
#loc10 = loc("/usr/include/stdlib.h":756:70)
#loc11 = loc("/usr/include/string.h":407:1)
#loc12 = loc("/usr/include/string.h":408:33)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":28:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":51:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":40:9)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":40:16)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":40:19)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":30:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":30:12)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":31:12)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":31:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":32:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":37:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":32:8)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":33:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":35:24)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":35:31)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":35:34)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":35:45)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":35:46)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":35:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":36:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":36:37)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":36:13)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":36:21)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":36:27)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":36:28)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":36:34)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":36:33)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":38:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":50:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":41:21)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":41:28)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":41:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":41:34)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":44:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":47:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":44:18)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":44:14)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":44:21)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":44:25)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":44:37)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":44:23)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":45:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":46:30)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":46:23)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":46:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":46:18)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":46:19)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":46:31)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":44:41)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":44:40)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":48:19)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":48:9)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":49:14)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":49:9)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":114:1)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":118:1)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":116:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":116:14)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":117:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":117:14)
#loc77 = loc("/usr/include/stdlib.h":575:1)
#loc78 = loc("/usr/include/stdlib.h":575:41)
#loc79 = loc("/usr/include/time.h":76:1)
#loc80 = loc("/usr/include/time.h":76:38)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":135:15)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":137:15)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":140:15)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":142:15)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":130:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":145:1)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":131:1)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":133:27)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":133:22)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":133:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":135:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":136:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":136:67)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":137:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":140:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":141:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":141:66)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":142:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":144:12)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":144:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":65:19)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":58:1)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":86:1)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":75:9)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":75:16)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":75:19)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":60:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":60:12)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":61:12)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":61:5)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":62:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":72:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":62:8)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":63:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":66:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":68:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":65:9)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":70:24)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":70:32)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":70:35)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":70:38)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":70:49)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":70:31)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":70:50)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":70:9)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":71:9)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":71:37)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":71:13)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":71:21)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":71:27)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":71:28)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":71:34)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":71:33)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":73:5)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":85:5)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":76:21)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":76:28)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":76:9)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":76:34)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":79:9)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":82:9)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":79:18)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":79:14)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":79:21)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":79:25)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":79:37)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":79:23)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":80:9)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":81:30)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":81:23)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":81:13)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":81:18)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":81:19)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":81:31)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":79:41)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":79:40)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":83:19)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":83:9)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":84:14)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":84:9)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":89:1)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":112:1)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":101:9)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":101:16)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":101:19)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":91:5)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":91:12)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":92:12)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":92:5)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":93:5)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":98:5)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":93:8)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":94:5)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":96:24)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":96:32)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":96:35)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":96:38)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":96:49)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":96:31)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":96:50)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":96:9)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":97:9)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":97:37)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":97:13)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":97:21)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":97:27)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":97:28)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":97:34)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":97:33)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":99:5)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":111:5)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":102:21)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":102:28)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":102:9)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":102:34)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":105:9)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":108:9)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":105:18)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":105:14)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":105:21)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":105:25)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":105:37)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":105:23)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":106:9)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":107:30)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":107:23)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":107:13)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":107:18)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":107:19)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":107:31)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":105:41)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":105:40)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":109:19)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":109:9)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":110:14)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_02.c":110:9)
#loc221 = loc(fused[#loc1, #loc2])
#loc222 = loc(fused[#loc3, #loc4])
#loc223 = loc(fused[#loc5, #loc6])
#loc224 = loc(fused[#loc7, #loc8])
#loc225 = loc(fused[#loc9, #loc10])
#loc226 = loc(fused[#loc11, #loc12])
#loc227 = loc(fused[#loc13, #loc14])
#loc228 = loc(fused[#loc15, #loc16])
#loc229 = loc(fused[#loc17, #loc18])
#loc230 = loc(fused[#loc19, #loc20])
#loc231 = loc(fused[#loc19, #loc21])
#loc232 = loc(fused[#loc22, #loc23])
#loc233 = loc(fused[#loc25, #loc24])
#loc234 = loc(fused[#loc26, #loc27])
#loc235 = loc(fused[#loc29, #loc27])
#loc236 = loc(fused[#loc32, #loc33])
#loc237 = loc(fused[#loc31, #loc33])
#loc238 = loc(fused[#loc30, #loc34])
#loc239 = loc(fused[#loc35, #loc34])
#loc240 = loc(fused[#loc36, #loc37])
#loc241 = loc(fused[#loc38, #loc39])
#loc242 = loc(fused[#loc40, #loc37])
#loc243 = loc(fused[#loc44, #loc45])
#loc244 = loc(fused[#loc48, #loc49])
#loc245 = loc(fused[#loc50, #loc51])
#loc246 = loc(fused[#loc53, #loc52])
#loc247 = loc(fused[#loc55, #loc56])
#loc248 = loc(fused[#loc54, #loc56])
#loc249 = loc(fused[#loc58, #loc51])
#loc250 = loc(fused[#loc61, #loc64])
#loc251 = loc(fused[#loc66, #loc65])
#loc252 = loc(fused[#loc71, #loc72])
#loc253 = loc(fused[#loc73, #loc74])
#loc254 = loc(fused[#loc75, #loc76])
#loc255 = loc(fused[#loc77, #loc78])
#loc256 = loc(fused[#loc79, #loc80])
#loc257 = loc(fused[#loc85, #loc86])
#loc260 = loc(fused[#loc96, #loc97])
#loc261 = loc(fused[#loc100, #loc101])
#loc262 = loc(fused[#loc104, #loc103])
#loc263 = loc(fused[#loc106, #loc107])
#loc264 = loc(fused[#loc108, #loc109])
#loc265 = loc(fused[#loc108, #loc110])
#loc266 = loc(fused[#loc111, #loc112])
#loc267 = loc(fused[#loc114, #loc113])
#loc268 = loc(fused[#loc115, #loc116])
#loc269 = loc(fused[#loc118, #loc119, #loc120, #loc116])
#loc270 = loc(fused[#loc125, #loc126])
#loc271 = loc(fused[#loc127, #loc126])
#loc272 = loc(fused[#loc122, #loc128])
#loc273 = loc(fused[#loc129, #loc128])
#loc274 = loc(fused[#loc130, #loc131])
#loc275 = loc(fused[#loc132, #loc133])
#loc276 = loc(fused[#loc134, #loc131])
#loc277 = loc(fused[#loc138, #loc139])
#loc278 = loc(fused[#loc142, #loc143])
#loc279 = loc(fused[#loc144, #loc145])
#loc280 = loc(fused[#loc147, #loc146])
#loc281 = loc(fused[#loc149, #loc150])
#loc282 = loc(fused[#loc148, #loc150])
#loc283 = loc(fused[#loc152, #loc145])
#loc284 = loc(fused[#loc155, #loc158])
#loc285 = loc(fused[#loc160, #loc159])
#loc286 = loc(fused[#loc165, #loc166])
#loc287 = loc(fused[#loc167, #loc168])
#loc288 = loc(fused[#loc167, #loc169])
#loc289 = loc(fused[#loc170, #loc171])
#loc290 = loc(fused[#loc173, #loc172])
#loc291 = loc(fused[#loc174, #loc175])
#loc292 = loc(fused[#loc177, #loc175])
#loc293 = loc(fused[#loc181, #loc182])
#loc294 = loc(fused[#loc183, #loc182])
#loc295 = loc(fused[#loc178, #loc184])
#loc296 = loc(fused[#loc185, #loc184])
#loc297 = loc(fused[#loc186, #loc187])
#loc298 = loc(fused[#loc188, #loc189])
#loc299 = loc(fused[#loc190, #loc187])
#loc300 = loc(fused[#loc194, #loc195])
#loc301 = loc(fused[#loc198, #loc199])
#loc302 = loc(fused[#loc200, #loc201])
#loc303 = loc(fused[#loc203, #loc202])
#loc304 = loc(fused[#loc205, #loc206])
#loc305 = loc(fused[#loc204, #loc206])
#loc306 = loc(fused[#loc208, #loc201])
#loc307 = loc(fused[#loc211, #loc214])
#loc308 = loc(fused[#loc216, #loc215])
