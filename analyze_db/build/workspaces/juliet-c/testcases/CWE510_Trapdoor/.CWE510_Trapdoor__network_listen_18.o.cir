!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__network_listen_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc105)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc106)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc107)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc108)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc109)
  cir.func private @close(!s32i) -> !s32i loc(#loc110)
  cir.func no_proto @CWE510_Trapdoor__network_listen_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc112)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc113)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc114)
    cir.goto "sink" loc(#loc115)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc23)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc18)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc20)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    cir.scope {
      cir.do {
        cir.scope {
          %7 = cir.const #cir.int<2> : !s32i loc(#loc28)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc29)
          %9 = cir.const #cir.int<6> : !s32i loc(#loc30)
          %10 = cir.call @socket(%7, %8, %9) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc31)
          cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc118)
          cir.scope {
            %29 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc36)
            %30 = cir.const #cir.int<1> : !s32i loc(#loc37)
            %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc37)
            %32 = cir.cmp(eq, %29, %31) : !s32i, !cir.bool loc(#loc120)
            cir.if %32 {
              cir.break loc(#loc39)
            } loc(#loc121)
          } loc(#loc119)
          %11 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc122)
          %12 = cir.const #cir.int<0> : !s32i loc(#loc42)
          %13 = cir.const #cir.int<16> : !u64i loc(#loc123)
          cir.libc.memset %13 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc124)
          %14 = cir.const #cir.int<2> : !s32i loc(#loc47)
          %15 = cir.cast(integral, %14 : !s32i), !u16i loc(#loc47)
          %16 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc48)
          cir.store %15, %16 : !u16i, !cir.ptr<!u16i> loc(#loc125)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc50)
          %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc50)
          %19 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc51)
          %20 = cir.get_member %19[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc52)
          cir.store %18, %20 : !u32i, !cir.ptr<!u32i> loc(#loc126)
          %21 = cir.const #cir.int<30000> : !s32i loc(#loc54)
          %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc54)
          %23 = cir.call @htons(%22) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc55)
          %24 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc56)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc127)
          cir.scope {
            %29 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc61)
            %30 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc129)
            %31 = cir.const #cir.int<16> : !u64i loc(#loc130)
            %32 = cir.cast(integral, %31 : !u64i), !u32i loc(#loc130)
            %33 = cir.call @bind(%29, %30, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc66)
            %34 = cir.const #cir.int<1> : !s32i loc(#loc67)
            %35 = cir.unary(minus, %34) nsw : !s32i, !s32i loc(#loc67)
            %36 = cir.cmp(eq, %33, %35) : !s32i, !cir.bool loc(#loc131)
            cir.if %36 {
              cir.break loc(#loc69)
            } loc(#loc132)
          } loc(#loc128)
          cir.scope {
            %29 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc72)
            %30 = cir.const #cir.int<5> : !s32i loc(#loc73)
            %31 = cir.call @listen(%29, %30) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc74)
            %32 = cir.const #cir.int<1> : !s32i loc(#loc75)
            %33 = cir.unary(minus, %32) nsw : !s32i, !s32i loc(#loc75)
            %34 = cir.cmp(eq, %31, %33) : !s32i, !cir.bool loc(#loc134)
            cir.if %34 {
              cir.break loc(#loc77)
            } loc(#loc135)
          } loc(#loc133)
          %25 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc78)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc79)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc80)
          %28 = cir.call @accept(%25, %26, %27) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc81)
          cir.store %28, %2 : !s32i, !cir.ptr<!s32i> loc(#loc136)
          cir.scope {
            %29 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc86)
            %30 = cir.const #cir.int<1> : !s32i loc(#loc87)
            %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc87)
            %32 = cir.cmp(eq, %29, %31) : !s32i, !cir.bool loc(#loc138)
            cir.if %32 {
              cir.break loc(#loc89)
            } loc(#loc139)
          } loc(#loc137)
        } loc(#loc117)
        cir.yield loc(#loc25)
      } while {
        %7 = cir.const #cir.int<0> : !s32i loc(#loc90)
        %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc90)
        cir.condition(%8) loc(#loc90)
      } loc(#loc116)
    } loc(#loc116)
    cir.scope {
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc93)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc94)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc94)
      %10 = cir.cmp(ne, %7, %9) : !s32i, !cir.bool loc(#loc141)
      cir.if %10 {
        %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc96)
        %12 = cir.call @close(%11) : (!s32i) -> !s32i loc(#loc97)
      } loc(#loc142)
    } loc(#loc140)
    cir.scope {
      %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc100)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc101)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc101)
      %10 = cir.cmp(ne, %7, %9) : !s32i, !cir.bool loc(#loc144)
      cir.if %10 {
        %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc103)
        %12 = cir.call @close(%11) : (!s32i) -> !s32i loc(#loc104)
      } loc(#loc145)
    } loc(#loc143)
    cir.return loc(#loc14)
  } loc(#loc111)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__network_listen_18.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/unistd.h":358:1)
#loc12 = loc("/usr/include/unistd.h":358:27)
#loc13 = loc("CWE510_Trapdoor__network_listen_18.c":39:1)
#loc14 = loc("CWE510_Trapdoor__network_listen_18.c":101:1)
#loc15 = loc("CWE510_Trapdoor__network_listen_18.c":48:9)
#loc16 = loc("CWE510_Trapdoor__network_listen_18.c":48:28)
#loc17 = loc("CWE510_Trapdoor__network_listen_18.c":49:9)
#loc18 = loc("CWE510_Trapdoor__network_listen_18.c":49:31)
#loc19 = loc("CWE510_Trapdoor__network_listen_18.c":50:9)
#loc20 = loc("CWE510_Trapdoor__network_listen_18.c":50:31)
#loc21 = loc("CWE510_Trapdoor__network_listen_18.c":41:5)
#loc22 = loc("CWE510_Trapdoor__network_listen_18.c":41:10)
#loc23 = loc("CWE510_Trapdoor__network_listen_18.c":42:1)
#loc24 = loc("CWE510_Trapdoor__network_listen_18.c":51:9)
#loc25 = loc("CWE510_Trapdoor__network_listen_18.c":85:17)
#loc26 = loc("CWE510_Trapdoor__network_listen_18.c":52:9)
#loc27 = loc("CWE510_Trapdoor__network_listen_18.c":84:9)
#loc28 = loc("CWE510_Trapdoor__network_listen_18.c":60:35)
#loc29 = loc("CWE510_Trapdoor__network_listen_18.c":60:44)
#loc30 = loc("CWE510_Trapdoor__network_listen_18.c":60:57)
#loc31 = loc("CWE510_Trapdoor__network_listen_18.c":60:28)
#loc32 = loc("CWE510_Trapdoor__network_listen_18.c":60:13)
#loc33 = loc("CWE510_Trapdoor__network_listen_18.c":60:68)
#loc34 = loc("CWE510_Trapdoor__network_listen_18.c":61:13)
#loc35 = loc("CWE510_Trapdoor__network_listen_18.c":64:13)
#loc36 = loc("CWE510_Trapdoor__network_listen_18.c":61:17)
#loc37 = loc("CWE510_Trapdoor__network_listen_18.c":61:33)
#loc38 = loc("CWE510_Trapdoor__network_listen_18.c":62:13)
#loc39 = loc("CWE510_Trapdoor__network_listen_18.c":63:17)
#loc40 = loc("CWE510_Trapdoor__network_listen_18.c":65:20)
#loc41 = loc("CWE510_Trapdoor__network_listen_18.c":65:21)
#loc42 = loc("CWE510_Trapdoor__network_listen_18.c":65:30)
#loc43 = loc("CWE510_Trapdoor__network_listen_18.c":65:33)
#loc44 = loc("CWE510_Trapdoor__network_listen_18.c":65:47)
#loc45 = loc("CWE510_Trapdoor__network_listen_18.c":65:13)
#loc46 = loc("CWE510_Trapdoor__network_listen_18.c":65:48)
#loc47 = loc("CWE510_Trapdoor__network_listen_18.c":66:34)
#loc48 = loc("/usr/include/netinet/in.h":249:5)
#loc49 = loc("CWE510_Trapdoor__network_listen_18.c":66:13)
#loc50 = loc("CWE510_Trapdoor__network_listen_18.c":67:39)
#loc51 = loc("/usr/include/netinet/in.h":251:20)
#loc52 = loc("/usr/include/netinet/in.h":33:15)
#loc53 = loc("CWE510_Trapdoor__network_listen_18.c":67:13)
#loc54 = loc("CWE510_Trapdoor__network_listen_18.c":68:38)
#loc55 = loc("CWE510_Trapdoor__network_listen_18.c":68:32)
#loc56 = loc("/usr/include/netinet/in.h":250:15)
#loc57 = loc("CWE510_Trapdoor__network_listen_18.c":68:13)
#loc58 = loc("CWE510_Trapdoor__network_listen_18.c":68:43)
#loc59 = loc("CWE510_Trapdoor__network_listen_18.c":69:13)
#loc60 = loc("CWE510_Trapdoor__network_listen_18.c":72:13)
#loc61 = loc("CWE510_Trapdoor__network_listen_18.c":69:22)
#loc62 = loc("CWE510_Trapdoor__network_listen_18.c":69:54)
#loc63 = loc("CWE510_Trapdoor__network_listen_18.c":69:55)
#loc64 = loc("CWE510_Trapdoor__network_listen_18.c":69:64)
#loc65 = loc("CWE510_Trapdoor__network_listen_18.c":69:78)
#loc66 = loc("CWE510_Trapdoor__network_listen_18.c":69:17)
#loc67 = loc("CWE510_Trapdoor__network_listen_18.c":69:84)
#loc68 = loc("CWE510_Trapdoor__network_listen_18.c":70:13)
#loc69 = loc("CWE510_Trapdoor__network_listen_18.c":71:17)
#loc70 = loc("CWE510_Trapdoor__network_listen_18.c":73:13)
#loc71 = loc("CWE510_Trapdoor__network_listen_18.c":76:13)
#loc72 = loc("CWE510_Trapdoor__network_listen_18.c":73:24)
#loc73 = loc("CWE510_Trapdoor__network_listen_18.c":73:38)
#loc74 = loc("CWE510_Trapdoor__network_listen_18.c":73:17)
#loc75 = loc("CWE510_Trapdoor__network_listen_18.c":73:44)
#loc76 = loc("CWE510_Trapdoor__network_listen_18.c":74:13)
#loc77 = loc("CWE510_Trapdoor__network_listen_18.c":75:17)
#loc78 = loc("CWE510_Trapdoor__network_listen_18.c":78:35)
#loc79 = loc("CWE510_Trapdoor__network_listen_18.c":78:49)
#loc80 = loc("CWE510_Trapdoor__network_listen_18.c":78:55)
#loc81 = loc("CWE510_Trapdoor__network_listen_18.c":78:28)
#loc82 = loc("CWE510_Trapdoor__network_listen_18.c":78:13)
#loc83 = loc("CWE510_Trapdoor__network_listen_18.c":78:59)
#loc84 = loc("CWE510_Trapdoor__network_listen_18.c":79:13)
#loc85 = loc("CWE510_Trapdoor__network_listen_18.c":82:13)
#loc86 = loc("CWE510_Trapdoor__network_listen_18.c":79:17)
#loc87 = loc("CWE510_Trapdoor__network_listen_18.c":79:33)
#loc88 = loc("CWE510_Trapdoor__network_listen_18.c":80:13)
#loc89 = loc("CWE510_Trapdoor__network_listen_18.c":81:17)
#loc90 = loc("CWE510_Trapdoor__network_listen_18.c":85:16)
#loc91 = loc("CWE510_Trapdoor__network_listen_18.c":86:9)
#loc92 = loc("CWE510_Trapdoor__network_listen_18.c":89:9)
#loc93 = loc("CWE510_Trapdoor__network_listen_18.c":86:13)
#loc94 = loc("CWE510_Trapdoor__network_listen_18.c":86:29)
#loc95 = loc("CWE510_Trapdoor__network_listen_18.c":87:9)
#loc96 = loc("CWE510_Trapdoor__network_listen_18.c":88:26)
#loc97 = loc("CWE510_Trapdoor__network_listen_18.c":88:13)
#loc98 = loc("CWE510_Trapdoor__network_listen_18.c":90:9)
#loc99 = loc("CWE510_Trapdoor__network_listen_18.c":93:9)
#loc100 = loc("CWE510_Trapdoor__network_listen_18.c":90:13)
#loc101 = loc("CWE510_Trapdoor__network_listen_18.c":90:29)
#loc102 = loc("CWE510_Trapdoor__network_listen_18.c":91:9)
#loc103 = loc("CWE510_Trapdoor__network_listen_18.c":92:26)
#loc104 = loc("CWE510_Trapdoor__network_listen_18.c":92:13)
#loc105 = loc(fused[#loc1, #loc2])
#loc106 = loc(fused[#loc3, #loc4])
#loc107 = loc(fused[#loc5, #loc6])
#loc108 = loc(fused[#loc7, #loc8])
#loc109 = loc(fused[#loc9, #loc10])
#loc110 = loc(fused[#loc11, #loc12])
#loc111 = loc(fused[#loc13, #loc14])
#loc112 = loc(fused[#loc15, #loc16])
#loc113 = loc(fused[#loc17, #loc18])
#loc114 = loc(fused[#loc19, #loc20])
#loc115 = loc(fused[#loc21, #loc22])
#loc116 = loc(fused[#loc24, #loc25])
#loc117 = loc(fused[#loc26, #loc27])
#loc118 = loc(fused[#loc32, #loc33])
#loc119 = loc(fused[#loc34, #loc35])
#loc120 = loc(fused[#loc36, #loc37])
#loc121 = loc(fused[#loc38, #loc35])
#loc122 = loc(fused[#loc40, #loc41])
#loc123 = loc(fused[#loc43, #loc44])
#loc124 = loc(fused[#loc45, #loc46])
#loc125 = loc(fused[#loc49, #loc47])
#loc126 = loc(fused[#loc53, #loc50])
#loc127 = loc(fused[#loc57, #loc58])
#loc128 = loc(fused[#loc59, #loc60])
#loc129 = loc(fused[#loc62, #loc63])
#loc130 = loc(fused[#loc64, #loc65])
#loc131 = loc(fused[#loc66, #loc67])
#loc132 = loc(fused[#loc68, #loc60])
#loc133 = loc(fused[#loc70, #loc71])
#loc134 = loc(fused[#loc74, #loc75])
#loc135 = loc(fused[#loc76, #loc71])
#loc136 = loc(fused[#loc82, #loc83])
#loc137 = loc(fused[#loc84, #loc85])
#loc138 = loc(fused[#loc86, #loc87])
#loc139 = loc(fused[#loc88, #loc85])
#loc140 = loc(fused[#loc91, #loc92])
#loc141 = loc(fused[#loc93, #loc94])
#loc142 = loc(fused[#loc95, #loc92])
#loc143 = loc(fused[#loc98, #loc99])
#loc144 = loc(fused[#loc100, #loc101])
#loc145 = loc(fused[#loc102, #loc99])
