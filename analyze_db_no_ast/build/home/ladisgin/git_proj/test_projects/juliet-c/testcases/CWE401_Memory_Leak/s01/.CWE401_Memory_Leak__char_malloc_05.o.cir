!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc181)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc182)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc183)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc184)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc185)
  cir.func no_proto  @CWE401_Memory_Leak__char_malloc_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc187)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc16)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc181)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc20)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc20)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc22)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc23)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc23)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc191)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc192)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc22)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc193)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
        cir.scope {
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
          %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
          %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !s32i loc(#loc196)
          %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc32)
          cir.if %22 {
            %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc34)
            %24 = cir.const #cir.int<1> : !s32i loc(#loc35)
            %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc36)
            cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
          } loc(#loc197)
        } loc(#loc195)
        %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc37)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
        %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc9)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc9)
        %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc37)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc40)
      } loc(#loc190)
    } loc(#loc189)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc181)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc43)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc43)
      cir.if %4 {
      } loc(#loc199)
    } loc(#loc198)
    cir.return loc(#loc13)
  } loc(#loc186)
  cir.func no_proto  @CWE401_Memory_Leak__char_malloc_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc202)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    cir.return loc(#loc46)
  } loc(#loc200)
  cir.global "private"  internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc205)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc57)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc206)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc64)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc181)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc68)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc68)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc70)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc71)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc71)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc212)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc213)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc70)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc214)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
        cir.scope {
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
          %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc79)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc79)
          %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !s32i loc(#loc217)
          %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc80)
          cir.if %22 {
            %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc82)
            %24 = cir.const #cir.int<1> : !s32i loc(#loc83)
            %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc84)
            cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc82)
          } loc(#loc218)
        } loc(#loc216)
        %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc85)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
        %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc87)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc87)
        %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc85)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc89)
      } loc(#loc211)
    } loc(#loc210)
    cir.scope {
      %2 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc205)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc92)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc92)
      cir.if %4 {
        %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc57)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc57)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc96)
      } else {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc97)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc97)
      } loc(#loc220)
    } loc(#loc219)
    cir.return loc(#loc61)
  } loc(#loc207)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc222)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc103)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc181)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc107)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc107)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc109)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc110)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc110)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc226)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc227)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc109)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc228)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
        cir.scope {
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
          %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc118)
          %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !s32i loc(#loc231)
          %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc119)
          cir.if %22 {
            %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc121)
            %24 = cir.const #cir.int<1> : !s32i loc(#loc122)
            %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc123)
            cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc121)
          } loc(#loc232)
        } loc(#loc230)
        %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc124)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
        %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc126)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc126)
        %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc124)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc128)
      } loc(#loc225)
    } loc(#loc224)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc181)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc131)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc131)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc133)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc134)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc133)
      } loc(#loc234)
    } loc(#loc233)
    cir.return loc(#loc100)
  } loc(#loc221)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc236)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc139)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc237)
    cir.scope {
      %2 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc205)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc143)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc143)
      cir.if %4 {
        %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc147)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc147)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc148)
      } else {
        %5 = cir.const #cir.int<100> : !s32i loc(#loc149)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc149)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc149)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc149)
        %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc149)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc149)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc240)
        %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc151)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
        %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc153)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc153)
        %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc151)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc155)
      } loc(#loc239)
    } loc(#loc238)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc181)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc158)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc158)
      cir.if %4 {
      } loc(#loc242)
    } loc(#loc241)
    cir.return loc(#loc136)
  } loc(#loc235)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc244)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc164)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc245)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc181)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc168)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc168)
      cir.if %4 {
        %5 = cir.const #cir.int<100> : !s32i loc(#loc170)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc170)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc170)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc170)
        %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc170)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc170)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc170)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc248)
        %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc172)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
        %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc174)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc174)
        %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc172)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc176)
      } loc(#loc247)
    } loc(#loc246)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc181)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc179)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc179)
      cir.if %4 {
      } loc(#loc250)
    } loc(#loc249)
    cir.return loc(#loc161)
  } loc(#loc243)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_malloc_05.c":0:0)
#loc1 = loc("CWE401_Memory_Leak__char_malloc_05.c":25:1)
#loc2 = loc("CWE401_Memory_Leak__char_malloc_05.c":25:25)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE401_Memory_Leak__char_malloc_05.c":40:22)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE401_Memory_Leak__char_malloc_05.c":30:1)
#loc13 = loc("CWE401_Memory_Leak__char_malloc_05.c":48:1)
#loc14 = loc("CWE401_Memory_Leak__char_malloc_05.c":32:5)
#loc15 = loc("CWE401_Memory_Leak__char_malloc_05.c":32:12)
#loc16 = loc("CWE401_Memory_Leak__char_malloc_05.c":33:12)
#loc17 = loc("CWE401_Memory_Leak__char_malloc_05.c":33:5)
#loc18 = loc("CWE401_Memory_Leak__char_malloc_05.c":34:5)
#loc19 = loc("CWE401_Memory_Leak__char_malloc_05.c":42:5)
#loc20 = loc("CWE401_Memory_Leak__char_malloc_05.c":34:8)
#loc21 = loc("CWE401_Memory_Leak__char_malloc_05.c":35:5)
#loc22 = loc("CWE401_Memory_Leak__char_malloc_05.c":37:24)
#loc23 = loc("CWE401_Memory_Leak__char_malloc_05.c":37:31)
#loc24 = loc("CWE401_Memory_Leak__char_malloc_05.c":37:35)
#loc25 = loc("CWE401_Memory_Leak__char_malloc_05.c":37:46)
#loc26 = loc("CWE401_Memory_Leak__char_malloc_05.c":37:47)
#loc27 = loc("CWE401_Memory_Leak__char_malloc_05.c":37:9)
#loc28 = loc("CWE401_Memory_Leak__char_malloc_05.c":38:9)
#loc29 = loc("CWE401_Memory_Leak__char_malloc_05.c":38:37)
#loc30 = loc("CWE401_Memory_Leak__char_malloc_05.c":38:13)
#loc31 = loc("CWE401_Memory_Leak__char_malloc_05.c":38:21)
#loc32 = loc("CWE401_Memory_Leak__char_malloc_05.c":38:18)
#loc33 = loc("CWE401_Memory_Leak__char_malloc_05.c":38:27)
#loc34 = loc("CWE401_Memory_Leak__char_malloc_05.c":38:28)
#loc35 = loc("CWE401_Memory_Leak__char_malloc_05.c":38:34)
#loc36 = loc("CWE401_Memory_Leak__char_malloc_05.c":38:33)
#loc37 = loc("CWE401_Memory_Leak__char_malloc_05.c":40:9)
#loc38 = loc("CWE401_Memory_Leak__char_malloc_05.c":40:16)
#loc39 = loc("CWE401_Memory_Leak__char_malloc_05.c":41:19)
#loc40 = loc("CWE401_Memory_Leak__char_malloc_05.c":41:9)
#loc41 = loc("CWE401_Memory_Leak__char_malloc_05.c":43:5)
#loc42 = loc("CWE401_Memory_Leak__char_malloc_05.c":47:5)
#loc43 = loc("CWE401_Memory_Leak__char_malloc_05.c":43:8)
#loc44 = loc("CWE401_Memory_Leak__char_malloc_05.c":44:5)
#loc45 = loc("CWE401_Memory_Leak__char_malloc_05.c":146:1)
#loc46 = loc("CWE401_Memory_Leak__char_malloc_05.c":152:1)
#loc47 = loc("CWE401_Memory_Leak__char_malloc_05.c":148:5)
#loc48 = loc("CWE401_Memory_Leak__char_malloc_05.c":148:14)
#loc49 = loc("CWE401_Memory_Leak__char_malloc_05.c":149:5)
#loc50 = loc("CWE401_Memory_Leak__char_malloc_05.c":149:14)
#loc51 = loc("CWE401_Memory_Leak__char_malloc_05.c":150:5)
#loc52 = loc("CWE401_Memory_Leak__char_malloc_05.c":150:14)
#loc53 = loc("CWE401_Memory_Leak__char_malloc_05.c":151:5)
#loc54 = loc("CWE401_Memory_Leak__char_malloc_05.c":151:14)
#loc55 = loc("CWE401_Memory_Leak__char_malloc_05.c":26:1)
#loc56 = loc("CWE401_Memory_Leak__char_malloc_05.c":26:26)
#loc57 = loc("CWE401_Memory_Leak__char_malloc_05.c":71:19)
#loc58 = loc("/usr/include/stdlib.h":687:1)
#loc59 = loc("/usr/include/stdlib.h":687:32)
#loc60 = loc("CWE401_Memory_Leak__char_malloc_05.c":55:1)
#loc61 = loc("CWE401_Memory_Leak__char_malloc_05.c":78:1)
#loc62 = loc("CWE401_Memory_Leak__char_malloc_05.c":57:5)
#loc63 = loc("CWE401_Memory_Leak__char_malloc_05.c":57:12)
#loc64 = loc("CWE401_Memory_Leak__char_malloc_05.c":58:12)
#loc65 = loc("CWE401_Memory_Leak__char_malloc_05.c":58:5)
#loc66 = loc("CWE401_Memory_Leak__char_malloc_05.c":59:5)
#loc67 = loc("CWE401_Memory_Leak__char_malloc_05.c":67:5)
#loc68 = loc("CWE401_Memory_Leak__char_malloc_05.c":59:8)
#loc69 = loc("CWE401_Memory_Leak__char_malloc_05.c":60:5)
#loc70 = loc("CWE401_Memory_Leak__char_malloc_05.c":62:24)
#loc71 = loc("CWE401_Memory_Leak__char_malloc_05.c":62:31)
#loc72 = loc("CWE401_Memory_Leak__char_malloc_05.c":62:35)
#loc73 = loc("CWE401_Memory_Leak__char_malloc_05.c":62:46)
#loc74 = loc("CWE401_Memory_Leak__char_malloc_05.c":62:47)
#loc75 = loc("CWE401_Memory_Leak__char_malloc_05.c":62:9)
#loc76 = loc("CWE401_Memory_Leak__char_malloc_05.c":63:9)
#loc77 = loc("CWE401_Memory_Leak__char_malloc_05.c":63:37)
#loc78 = loc("CWE401_Memory_Leak__char_malloc_05.c":63:13)
#loc79 = loc("CWE401_Memory_Leak__char_malloc_05.c":63:21)
#loc80 = loc("CWE401_Memory_Leak__char_malloc_05.c":63:18)
#loc81 = loc("CWE401_Memory_Leak__char_malloc_05.c":63:27)
#loc82 = loc("CWE401_Memory_Leak__char_malloc_05.c":63:28)
#loc83 = loc("CWE401_Memory_Leak__char_malloc_05.c":63:34)
#loc84 = loc("CWE401_Memory_Leak__char_malloc_05.c":63:33)
#loc85 = loc("CWE401_Memory_Leak__char_malloc_05.c":65:9)
#loc86 = loc("CWE401_Memory_Leak__char_malloc_05.c":65:16)
#loc87 = loc("CWE401_Memory_Leak__char_malloc_05.c":65:22)
#loc88 = loc("CWE401_Memory_Leak__char_malloc_05.c":66:19)
#loc89 = loc("CWE401_Memory_Leak__char_malloc_05.c":66:9)
#loc90 = loc("CWE401_Memory_Leak__char_malloc_05.c":68:5)
#loc91 = loc("CWE401_Memory_Leak__char_malloc_05.c":77:5)
#loc92 = loc("CWE401_Memory_Leak__char_malloc_05.c":68:8)
#loc93 = loc("CWE401_Memory_Leak__char_malloc_05.c":69:5)
#loc94 = loc("CWE401_Memory_Leak__char_malloc_05.c":72:5)
#loc95 = loc("CWE401_Memory_Leak__char_malloc_05.c":74:5)
#loc96 = loc("CWE401_Memory_Leak__char_malloc_05.c":71:9)
#loc97 = loc("CWE401_Memory_Leak__char_malloc_05.c":76:9)
#loc98 = loc("CWE401_Memory_Leak__char_malloc_05.c":76:14)
#loc99 = loc("CWE401_Memory_Leak__char_malloc_05.c":81:1)
#loc100 = loc("CWE401_Memory_Leak__char_malloc_05.c":99:1)
#loc101 = loc("CWE401_Memory_Leak__char_malloc_05.c":83:5)
#loc102 = loc("CWE401_Memory_Leak__char_malloc_05.c":83:12)
#loc103 = loc("CWE401_Memory_Leak__char_malloc_05.c":84:12)
#loc104 = loc("CWE401_Memory_Leak__char_malloc_05.c":84:5)
#loc105 = loc("CWE401_Memory_Leak__char_malloc_05.c":85:5)
#loc106 = loc("CWE401_Memory_Leak__char_malloc_05.c":93:5)
#loc107 = loc("CWE401_Memory_Leak__char_malloc_05.c":85:8)
#loc108 = loc("CWE401_Memory_Leak__char_malloc_05.c":86:5)
#loc109 = loc("CWE401_Memory_Leak__char_malloc_05.c":88:24)
#loc110 = loc("CWE401_Memory_Leak__char_malloc_05.c":88:31)
#loc111 = loc("CWE401_Memory_Leak__char_malloc_05.c":88:35)
#loc112 = loc("CWE401_Memory_Leak__char_malloc_05.c":88:46)
#loc113 = loc("CWE401_Memory_Leak__char_malloc_05.c":88:47)
#loc114 = loc("CWE401_Memory_Leak__char_malloc_05.c":88:9)
#loc115 = loc("CWE401_Memory_Leak__char_malloc_05.c":89:9)
#loc116 = loc("CWE401_Memory_Leak__char_malloc_05.c":89:37)
#loc117 = loc("CWE401_Memory_Leak__char_malloc_05.c":89:13)
#loc118 = loc("CWE401_Memory_Leak__char_malloc_05.c":89:21)
#loc119 = loc("CWE401_Memory_Leak__char_malloc_05.c":89:18)
#loc120 = loc("CWE401_Memory_Leak__char_malloc_05.c":89:27)
#loc121 = loc("CWE401_Memory_Leak__char_malloc_05.c":89:28)
#loc122 = loc("CWE401_Memory_Leak__char_malloc_05.c":89:34)
#loc123 = loc("CWE401_Memory_Leak__char_malloc_05.c":89:33)
#loc124 = loc("CWE401_Memory_Leak__char_malloc_05.c":91:9)
#loc125 = loc("CWE401_Memory_Leak__char_malloc_05.c":91:16)
#loc126 = loc("CWE401_Memory_Leak__char_malloc_05.c":91:22)
#loc127 = loc("CWE401_Memory_Leak__char_malloc_05.c":92:19)
#loc128 = loc("CWE401_Memory_Leak__char_malloc_05.c":92:9)
#loc129 = loc("CWE401_Memory_Leak__char_malloc_05.c":94:5)
#loc130 = loc("CWE401_Memory_Leak__char_malloc_05.c":98:5)
#loc131 = loc("CWE401_Memory_Leak__char_malloc_05.c":94:8)
#loc132 = loc("CWE401_Memory_Leak__char_malloc_05.c":95:5)
#loc133 = loc("CWE401_Memory_Leak__char_malloc_05.c":97:9)
#loc134 = loc("CWE401_Memory_Leak__char_malloc_05.c":97:14)
#loc135 = loc("CWE401_Memory_Leak__char_malloc_05.c":102:1)
#loc136 = loc("CWE401_Memory_Leak__char_malloc_05.c":124:1)
#loc137 = loc("CWE401_Memory_Leak__char_malloc_05.c":104:5)
#loc138 = loc("CWE401_Memory_Leak__char_malloc_05.c":104:12)
#loc139 = loc("CWE401_Memory_Leak__char_malloc_05.c":105:12)
#loc140 = loc("CWE401_Memory_Leak__char_malloc_05.c":105:5)
#loc141 = loc("CWE401_Memory_Leak__char_malloc_05.c":106:5)
#loc142 = loc("CWE401_Memory_Leak__char_malloc_05.c":118:5)
#loc143 = loc("CWE401_Memory_Leak__char_malloc_05.c":106:8)
#loc144 = loc("CWE401_Memory_Leak__char_malloc_05.c":107:5)
#loc145 = loc("CWE401_Memory_Leak__char_malloc_05.c":110:5)
#loc146 = loc("CWE401_Memory_Leak__char_malloc_05.c":112:5)
#loc147 = loc("CWE401_Memory_Leak__char_malloc_05.c":109:19)
#loc148 = loc("CWE401_Memory_Leak__char_malloc_05.c":109:9)
#loc149 = loc("CWE401_Memory_Leak__char_malloc_05.c":114:24)
#loc150 = loc("CWE401_Memory_Leak__char_malloc_05.c":114:9)
#loc151 = loc("CWE401_Memory_Leak__char_malloc_05.c":116:9)
#loc152 = loc("CWE401_Memory_Leak__char_malloc_05.c":116:16)
#loc153 = loc("CWE401_Memory_Leak__char_malloc_05.c":116:22)
#loc154 = loc("CWE401_Memory_Leak__char_malloc_05.c":117:19)
#loc155 = loc("CWE401_Memory_Leak__char_malloc_05.c":117:9)
#loc156 = loc("CWE401_Memory_Leak__char_malloc_05.c":119:5)
#loc157 = loc("CWE401_Memory_Leak__char_malloc_05.c":123:5)
#loc158 = loc("CWE401_Memory_Leak__char_malloc_05.c":119:8)
#loc159 = loc("CWE401_Memory_Leak__char_malloc_05.c":120:5)
#loc160 = loc("CWE401_Memory_Leak__char_malloc_05.c":127:1)
#loc161 = loc("CWE401_Memory_Leak__char_malloc_05.c":144:1)
#loc162 = loc("CWE401_Memory_Leak__char_malloc_05.c":129:5)
#loc163 = loc("CWE401_Memory_Leak__char_malloc_05.c":129:12)
#loc164 = loc("CWE401_Memory_Leak__char_malloc_05.c":130:12)
#loc165 = loc("CWE401_Memory_Leak__char_malloc_05.c":130:5)
#loc166 = loc("CWE401_Memory_Leak__char_malloc_05.c":131:5)
#loc167 = loc("CWE401_Memory_Leak__char_malloc_05.c":138:5)
#loc168 = loc("CWE401_Memory_Leak__char_malloc_05.c":131:8)
#loc169 = loc("CWE401_Memory_Leak__char_malloc_05.c":132:5)
#loc170 = loc("CWE401_Memory_Leak__char_malloc_05.c":134:24)
#loc171 = loc("CWE401_Memory_Leak__char_malloc_05.c":134:9)
#loc172 = loc("CWE401_Memory_Leak__char_malloc_05.c":136:9)
#loc173 = loc("CWE401_Memory_Leak__char_malloc_05.c":136:16)
#loc174 = loc("CWE401_Memory_Leak__char_malloc_05.c":136:22)
#loc175 = loc("CWE401_Memory_Leak__char_malloc_05.c":137:19)
#loc176 = loc("CWE401_Memory_Leak__char_malloc_05.c":137:9)
#loc177 = loc("CWE401_Memory_Leak__char_malloc_05.c":139:5)
#loc178 = loc("CWE401_Memory_Leak__char_malloc_05.c":143:5)
#loc179 = loc("CWE401_Memory_Leak__char_malloc_05.c":139:8)
#loc180 = loc("CWE401_Memory_Leak__char_malloc_05.c":140:5)
#loc181 = loc(fused[#loc1, #loc2])
#loc182 = loc(fused[#loc3, #loc4])
#loc183 = loc(fused[#loc5, #loc6])
#loc184 = loc(fused[#loc7, #loc8])
#loc185 = loc(fused[#loc10, #loc11])
#loc186 = loc(fused[#loc12, #loc13])
#loc187 = loc(fused[#loc14, #loc15])
#loc188 = loc(fused[#loc17, #loc16])
#loc189 = loc(fused[#loc18, #loc19])
#loc190 = loc(fused[#loc21, #loc19])
#loc191 = loc(fused[#loc24, #loc25])
#loc192 = loc(fused[#loc23, #loc25])
#loc193 = loc(fused[#loc22, #loc26])
#loc194 = loc(fused[#loc27, #loc26])
#loc195 = loc(fused[#loc28, #loc29])
#loc196 = loc(fused[#loc30, #loc31])
#loc197 = loc(fused[#loc33, #loc29])
#loc198 = loc(fused[#loc41, #loc42])
#loc199 = loc(fused[#loc44, #loc42])
#loc200 = loc(fused[#loc45, #loc46])
#loc201 = loc(fused[#loc47, #loc48])
#loc202 = loc(fused[#loc49, #loc50])
#loc203 = loc(fused[#loc51, #loc52])
#loc204 = loc(fused[#loc53, #loc54])
#loc205 = loc(fused[#loc55, #loc56])
#loc206 = loc(fused[#loc58, #loc59])
#loc207 = loc(fused[#loc60, #loc61])
#loc208 = loc(fused[#loc62, #loc63])
#loc209 = loc(fused[#loc65, #loc64])
#loc210 = loc(fused[#loc66, #loc67])
#loc211 = loc(fused[#loc69, #loc67])
#loc212 = loc(fused[#loc72, #loc73])
#loc213 = loc(fused[#loc71, #loc73])
#loc214 = loc(fused[#loc70, #loc74])
#loc215 = loc(fused[#loc75, #loc74])
#loc216 = loc(fused[#loc76, #loc77])
#loc217 = loc(fused[#loc78, #loc79])
#loc218 = loc(fused[#loc81, #loc77])
#loc219 = loc(fused[#loc90, #loc91])
#loc220 = loc(fused[#loc93, #loc94, #loc95, #loc91])
#loc221 = loc(fused[#loc99, #loc100])
#loc222 = loc(fused[#loc101, #loc102])
#loc223 = loc(fused[#loc104, #loc103])
#loc224 = loc(fused[#loc105, #loc106])
#loc225 = loc(fused[#loc108, #loc106])
#loc226 = loc(fused[#loc111, #loc112])
#loc227 = loc(fused[#loc110, #loc112])
#loc228 = loc(fused[#loc109, #loc113])
#loc229 = loc(fused[#loc114, #loc113])
#loc230 = loc(fused[#loc115, #loc116])
#loc231 = loc(fused[#loc117, #loc118])
#loc232 = loc(fused[#loc120, #loc116])
#loc233 = loc(fused[#loc129, #loc130])
#loc234 = loc(fused[#loc132, #loc130])
#loc235 = loc(fused[#loc135, #loc136])
#loc236 = loc(fused[#loc137, #loc138])
#loc237 = loc(fused[#loc140, #loc139])
#loc238 = loc(fused[#loc141, #loc142])
#loc239 = loc(fused[#loc144, #loc145, #loc146, #loc142])
#loc240 = loc(fused[#loc150, #loc149])
#loc241 = loc(fused[#loc156, #loc157])
#loc242 = loc(fused[#loc159, #loc157])
#loc243 = loc(fused[#loc160, #loc161])
#loc244 = loc(fused[#loc162, #loc163])
#loc245 = loc(fused[#loc165, #loc164])
#loc246 = loc(fused[#loc166, #loc167])
#loc247 = loc(fused[#loc169, #loc167])
#loc248 = loc(fused[#loc171, #loc170])
#loc249 = loc(fused[#loc177, #loc178])
#loc250 = loc(fused[#loc180, #loc178])
