!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":22:21)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":22:28)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":59:25)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":59:32)
#loc56 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":43:25)
#loc57 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":43:32)
#loc76 = loc(fused[#loc9, #loc10])
#loc85 = loc(fused[#loc35, #loc36])
#loc91 = loc(fused[#loc56, #loc57])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__fopen_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_fopen.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc74)
  cir.func internal private @badSink(%arg0: !cir.ptr<!ty__IO_FILE> loc(fused[#loc9, #loc10])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data", init] {alignment = 8 : i64} loc(#loc76)
    cir.store %arg0, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc11)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc12)
    %2 = cir.call @fclose(%1) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc13)
    cir.return loc(#loc8)
  } loc(#loc75)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__fopen_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc78)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc18)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc79)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc20)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc3)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc3)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc20)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc80)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
    %9 = cir.call @fclose(%8) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc24)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
    cir.call @badSink(%10) : (!cir.ptr<!ty__IO_FILE>) -> () loc(#loc26)
    cir.return loc(#loc15)
  } loc(#loc77)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__fopen_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc82)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc83)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    cir.return loc(#loc28)
  } loc(#loc81)
  cir.func internal private @goodB2GSink(%arg0: !cir.ptr<!ty__IO_FILE> loc(fused[#loc35, #loc36])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data", init] {alignment = 8 : i64} loc(#loc85)
    cir.store %arg0, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc37)
    cir.return loc(#loc34)
  } loc(#loc84)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc87)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc42)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc88)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc44)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc45)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc45)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc46)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc46)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc44)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc89)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc49)
    %9 = cir.call @fclose(%8) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc50)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc51)
    cir.call @goodB2GSink(%10) : (!cir.ptr<!ty__IO_FILE>) -> () loc(#loc52)
    cir.return loc(#loc39)
  } loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"GoodSource_fopen.txt\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc53)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!ty__IO_FILE> loc(fused[#loc56, #loc57])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data", init] {alignment = 8 : i64} loc(#loc91)
    cir.store %arg0, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc58)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc59)
    %2 = cir.call @fclose(%1) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc60)
    cir.return loc(#loc55)
  } loc(#loc90)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc65)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc94)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc67)
    %3 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc53)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc53)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc68)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc68)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc67)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc95)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc71)
    cir.call @goodG2BSink(%8) : (!cir.ptr<!ty__IO_FILE>) -> () loc(#loc72)
    cir.return loc(#loc62)
  } loc(#loc92)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__fopen_41.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":32:18)
#loc4 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":32:41)
#loc5 = loc("/usr/include/stdio.h":184:1)
#loc6 = loc("/usr/include/stdio.h":184:36)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":22:1)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":26:1)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":23:1)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":25:12)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":25:5)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":28:1)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":36:1)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":30:5)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":30:12)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":31:12)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":31:5)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":32:12)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":32:5)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":32:45)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":34:12)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":34:5)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":35:13)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":35:5)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":76:1)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":80:1)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":78:5)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":78:13)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":79:5)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":79:13)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":59:1)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":64:1)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":60:1)
#loc38 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":66:1)
#loc39 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":74:1)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":68:5)
#loc41 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":68:12)
#loc42 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":69:12)
#loc43 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":69:5)
#loc44 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":70:12)
#loc45 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":70:18)
#loc46 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":70:41)
#loc47 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":70:5)
#loc48 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":70:45)
#loc49 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":72:12)
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":72:5)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":73:17)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":73:5)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":54:18)
#loc54 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":43:1)
#loc55 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":47:1)
#loc58 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":44:1)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":46:12)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":46:5)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":49:1)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":56:1)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":51:5)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":51:12)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":52:12)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":52:5)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":54:12)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":54:42)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":54:5)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":54:46)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":55:17)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_41.c":55:5)
#loc73 = loc(fused[#loc1, #loc2])
#loc74 = loc(fused[#loc5, #loc6])
#loc75 = loc(fused[#loc7, #loc8])
#loc77 = loc(fused[#loc14, #loc15])
#loc78 = loc(fused[#loc16, #loc17])
#loc79 = loc(fused[#loc19, #loc18])
#loc80 = loc(fused[#loc21, #loc22])
#loc81 = loc(fused[#loc27, #loc28])
#loc82 = loc(fused[#loc29, #loc30])
#loc83 = loc(fused[#loc31, #loc32])
#loc84 = loc(fused[#loc33, #loc34])
#loc86 = loc(fused[#loc38, #loc39])
#loc87 = loc(fused[#loc40, #loc41])
#loc88 = loc(fused[#loc43, #loc42])
#loc89 = loc(fused[#loc47, #loc48])
#loc90 = loc(fused[#loc54, #loc55])
#loc92 = loc(fused[#loc61, #loc62])
#loc93 = loc(fused[#loc63, #loc64])
#loc94 = loc(fused[#loc66, #loc65])
#loc95 = loc(fused[#loc69, #loc70])
