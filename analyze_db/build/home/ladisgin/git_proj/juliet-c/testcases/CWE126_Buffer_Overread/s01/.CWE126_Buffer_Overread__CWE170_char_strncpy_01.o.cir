!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE170_char_strncpy_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc54)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc55)
  cir.func no_proto @CWE126_Buffer_Overread__CWE170_char_strncpy_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 150>, !cir.ptr<!cir.array<!s8i x 150>>, ["data"] {alignment = 16 : i64} loc(#loc57)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc58)
    cir.br ^bb1 loc(#loc59)
  ^bb1:  // pred: ^bb0
    %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc12)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc12)
    %4 = cir.const #cir.int<65> : !s32i loc(#loc13)
    %5 = cir.const #cir.int<149> : !s32i loc(#loc14)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc14)
    cir.libc.memset %6 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc60)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc17)
    %9 = cir.const #cir.int<149> : !s32i loc(#loc18)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc19)
    %11 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc19)
    cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc61)
    %12 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc20)
    %13 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc22)
    %15 = cir.const #cir.int<99> : !s32i loc(#loc23)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc23)
    %17 = cir.call @strncpy(%13, %14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc20)
    %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc25)
    cir.br ^bb2 loc(#loc11)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc6)
  } loc(#loc56)
  cir.func no_proto @CWE126_Buffer_Overread__CWE170_char_strncpy_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc63)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    cir.return loc(#loc27)
  } loc(#loc62)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 150>, !cir.ptr<!cir.array<!s8i x 150>>, ["data"] {alignment = 16 : i64} loc(#loc65)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc66)
    cir.br ^bb1 loc(#loc67)
  ^bb1:  // pred: ^bb0
    %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc37)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
    %4 = cir.const #cir.int<65> : !s32i loc(#loc38)
    %5 = cir.const #cir.int<149> : !s32i loc(#loc39)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc39)
    cir.libc.memset %6 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc68)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc42)
    %9 = cir.const #cir.int<149> : !s32i loc(#loc43)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc44)
    %11 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc44)
    cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc69)
    %12 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc45)
    %13 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc47)
    %15 = cir.const #cir.int<99> : !s32i loc(#loc48)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc48)
    %17 = cir.call @strncpy(%13, %14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc45)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc49)
    %20 = cir.const #cir.int<99> : !s32i loc(#loc50)
    %21 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc51)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc70)
    %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    cir.br ^bb2 loc(#loc36)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc31)
  } loc(#loc64)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":0:0)
#loc1 = loc("/usr/include/string.h":144:1)
#loc2 = loc("/usr/include/string.h":146:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":22:1)
#loc6 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":35:1)
#loc7 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":25:9)
#loc8 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":25:22)
#loc9 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":25:33)
#loc10 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":24:5)
#loc11 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":34:5)
#loc12 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":27:16)
#loc13 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":27:22)
#loc14 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":27:27)
#loc15 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":27:9)
#loc16 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":27:30)
#loc17 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":28:21)
#loc18 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":28:14)
#loc19 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":28:9)
#loc20 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":31:9)
#loc21 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":31:17)
#loc22 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":31:23)
#loc23 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":31:29)
#loc24 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":33:19)
#loc25 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":33:9)
#loc26 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":56:1)
#loc27 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":59:1)
#loc28 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":58:5)
#loc29 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":58:11)
#loc30 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":41:1)
#loc31 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":54:1)
#loc32 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":44:9)
#loc33 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":44:22)
#loc34 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":44:33)
#loc35 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":43:5)
#loc36 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":53:5)
#loc37 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":46:16)
#loc38 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":46:22)
#loc39 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":46:27)
#loc40 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":46:9)
#loc41 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":46:30)
#loc42 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":47:21)
#loc43 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":47:14)
#loc44 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":47:9)
#loc45 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":50:9)
#loc46 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":50:17)
#loc47 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":50:23)
#loc48 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":50:29)
#loc49 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":51:20)
#loc50 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":51:14)
#loc51 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":51:9)
#loc52 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":52:19)
#loc53 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_01.c":52:9)
#loc54 = loc(fused[#loc1, #loc2])
#loc55 = loc(fused[#loc3, #loc4])
#loc56 = loc(fused[#loc5, #loc6])
#loc57 = loc(fused[#loc7, #loc8])
#loc58 = loc(fused[#loc7, #loc9])
#loc59 = loc(fused[#loc10, #loc11])
#loc60 = loc(fused[#loc15, #loc16])
#loc61 = loc(fused[#loc19, #loc17])
#loc62 = loc(fused[#loc26, #loc27])
#loc63 = loc(fused[#loc28, #loc29])
#loc64 = loc(fused[#loc30, #loc31])
#loc65 = loc(fused[#loc32, #loc33])
#loc66 = loc(fused[#loc32, #loc34])
#loc67 = loc(fused[#loc35, #loc36])
#loc68 = loc(fused[#loc40, #loc41])
#loc69 = loc(fused[#loc44, #loc42])
#loc70 = loc(fused[#loc51, #loc49])
