!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @_ZL10staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc249)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc250)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc251)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc252)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc253)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc12)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_073badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc255)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc17)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc256)
    cir.scope {
      %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc249)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc22)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc258)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc24)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc24)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc260)
      } loc(#loc259)
    } loc(#loc257)
    cir.scope {
      %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc249)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc29)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc30)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc262)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc265)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc38)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc267)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc268)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc44)
              %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc45)
              %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc270)
              cir.store %13, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc271)
              %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc49)
              %15 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
              %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc9)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc9)
              %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc49)
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc52)
              %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
              cir.delete.array %20 : <!s8i> loc(#loc53)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc12)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc12)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc54)
            } loc(#loc269)
          } loc(#loc266)
        } loc(#loc264)
      } loc(#loc263)
    } loc(#loc261)
    cir.return loc(#loc14)
  } loc(#loc254)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc56)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc273)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc61)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc274)
    cir.scope {
      %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc249)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc65)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc66)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc276)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc68)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc68)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc278)
      } loc(#loc277)
    } loc(#loc275)
    cir.scope {
      %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc249)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc73)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc74)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc280)
      cir.if %6 {
        %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc55)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc55)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc78)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc283)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc85)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc285)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc286)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc89)
              %13 = cir.const #cir.int<100> : !s32i loc(#loc90)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc90)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc287)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc88)
                cir.yield %17 : !cir.bool loc(#loc88)
              }, false {
                %17 = cir.const #false loc(#loc88)
                cir.yield %17 : !cir.bool loc(#loc88)
              }) : (!cir.bool) -> !cir.bool loc(#loc88)
              cir.yield %16 : !cir.bool loc(#loc88)
            }, false {
              %12 = cir.const #false loc(#loc88)
              cir.yield %12 : !cir.bool loc(#loc88)
            }) : (!cir.bool) -> !cir.bool loc(#loc88)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc94)
              %13 = cir.call @_Znam(%12) : (!u64i) -> !cir.ptr<!void> loc(#loc95)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc289)
              cir.store %14, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc290)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc99)
              %16 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
              %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc101)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc101)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc99)
              %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc103)
              %21 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
              cir.delete.array %21 : <!s8i> loc(#loc104)
            } else {
              %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc56)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc56)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc105)
            } loc(#loc288)
          } loc(#loc284)
        } loc(#loc282)
      } loc(#loc281)
    } loc(#loc279)
    cir.return loc(#loc58)
  } loc(#loc272)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc292)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc110)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc293)
    cir.scope {
      %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc249)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc114)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc115)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc295)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc117)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc117)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc297)
      } loc(#loc296)
    } loc(#loc294)
    cir.scope {
      %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc249)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc122)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc123)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc299)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc302)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc131)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc304)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc305)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc135)
              %13 = cir.const #cir.int<100> : !s32i loc(#loc136)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc136)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc306)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc134)
                cir.yield %17 : !cir.bool loc(#loc134)
              }, false {
                %17 = cir.const #false loc(#loc134)
                cir.yield %17 : !cir.bool loc(#loc134)
              }) : (!cir.bool) -> !cir.bool loc(#loc134)
              cir.yield %16 : !cir.bool loc(#loc134)
            }, false {
              %12 = cir.const #false loc(#loc134)
              cir.yield %12 : !cir.bool loc(#loc134)
            }) : (!cir.bool) -> !cir.bool loc(#loc134)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc140)
              %13 = cir.call @_Znam(%12) : (!u64i) -> !cir.ptr<!void> loc(#loc141)
              %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc308)
              cir.store %14, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc309)
              %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc145)
              %16 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
              %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc147)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc147)
              %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc145)
              %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
              cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc149)
              %21 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
              cir.delete.array %21 : <!s8i> loc(#loc150)
            } else {
              %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc151)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc151)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc152)
            } loc(#loc307)
          } loc(#loc303)
        } loc(#loc301)
      } loc(#loc300)
    } loc(#loc298)
    cir.return loc(#loc107)
  } loc(#loc291)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc311)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc157)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc157)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc312)
    cir.scope {
      %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc249)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc161)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc162)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc314)
      cir.if %6 {
        %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc166)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc166)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc167)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc168)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc168)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc316)
      } loc(#loc315)
    } loc(#loc313)
    cir.scope {
      %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc249)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc172)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc173)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc318)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc321)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc181)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc323)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc324)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc187)
              %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc188)
              %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc326)
              cir.store %13, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc327)
              %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc192)
              %15 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc193)
              %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc194)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc194)
              %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc192)
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc196)
              %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc197)
              cir.delete.array %20 : <!s8i> loc(#loc197)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc198)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc198)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc199)
            } loc(#loc325)
          } loc(#loc322)
        } loc(#loc320)
      } loc(#loc319)
    } loc(#loc317)
    cir.return loc(#loc154)
  } loc(#loc310)
  cir.func internal private @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc329)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc204)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc204)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc330)
    cir.scope {
      %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc249)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc208)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc209)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc332)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc211)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc211)
        cir.store %8, %0 : !u64i, !cir.ptr<!u64i> loc(#loc334)
      } loc(#loc333)
    } loc(#loc331)
    cir.scope {
      %3 = cir.get_global @_ZL10staticFive : !cir.ptr<!s32i> loc(#loc249)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc215)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc216)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc336)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc339)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc224)
            %9 = cir.const #cir.int<5> : !u64i loc(#loc341)
            %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc342)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc230)
              %12 = cir.call @_Znam(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc231)
              %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc344)
              cir.store %13, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc345)
              %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc235)
              %15 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc236)
              %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc237)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc237)
              %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc235)
              %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc238)
              cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc239)
              %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc240)
              cir.delete.array %20 : <!s8i> loc(#loc240)
            } else {
              %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc241)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc241)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc242)
            } loc(#loc343)
          } loc(#loc340)
        } loc(#loc338)
      } loc(#loc337)
    } loc(#loc335)
    cir.return loc(#loc201)
  } loc(#loc328)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_074goodEv() extra(#fn_attr1) {
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07L8goodB2G1Ev() : () -> () loc(#loc245)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07L8goodB2G2Ev() : () -> () loc(#loc246)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07L8goodG2B1Ev() : () -> () loc(#loc247)
    cir.call @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07L8goodG2B2Ev() : () -> () loc(#loc248)
    cir.return loc(#loc244)
  } loc(#loc346)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":0:0)
#loc1 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":29:1)
#loc2 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":29:25)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":57:34)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":63:27)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":36:1)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":67:1)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":38:5)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":38:12)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":40:12)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":40:5)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":41:5)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":45:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":41:8)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":41:20)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":42:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":44:16)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":44:9)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":44:21)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":46:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":66:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":46:8)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":46:20)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":47:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":48:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":65:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":49:13)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":49:20)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":53:13)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":64:13)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":53:17)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":53:24)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":53:43)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":54:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":60:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":62:13)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":55:37)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":36:6)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":55:28)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":55:41)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":55:17)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":57:17)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":57:24)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":58:27)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":58:17)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":59:27)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":63:17)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":87:19)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":106:27)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":74:1)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":110:1)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":76:5)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":76:12)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":78:12)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":78:5)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":79:5)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":83:5)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":79:8)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":79:20)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":80:5)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":82:16)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":82:9)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":82:21)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":84:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":109:5)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":84:8)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":84:20)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":85:5)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":88:5)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":90:5)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":87:9)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":91:9)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":108:9)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":92:13)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":92:20)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":96:13)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":107:13)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":96:17)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":96:24)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":96:43)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":96:45)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":96:48)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":96:55)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":97:13)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":103:13)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":105:13)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":98:37)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":74:13)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":98:28)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":98:41)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":98:17)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":100:17)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":100:24)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":100:34)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":101:27)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":101:17)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":102:27)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":106:17)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":113:1)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":144:1)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":115:5)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":115:12)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":117:12)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":117:5)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":118:5)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":122:5)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":118:8)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":118:20)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":119:5)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":121:16)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":121:9)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":121:21)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":123:5)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":143:5)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":123:8)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":123:20)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":124:5)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":125:9)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":142:9)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":126:13)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":126:20)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":130:13)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":141:13)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":130:17)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":130:24)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":130:43)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":130:45)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":130:48)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":130:55)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":131:13)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":137:13)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":139:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":132:37)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":113:13)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":132:28)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":132:41)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":132:17)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":134:17)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":134:24)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":134:34)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":135:27)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":135:17)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":136:27)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":140:27)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":140:17)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":147:1)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":183:1)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":149:5)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":149:12)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":151:12)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":151:5)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":152:5)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":161:5)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":152:8)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":152:20)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":153:5)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":156:5)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":158:5)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":155:19)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":155:9)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":160:16)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":160:9)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":162:5)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":182:5)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":162:8)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":162:20)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":163:5)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":164:9)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":181:9)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":165:13)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":165:20)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":169:13)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":180:13)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":169:17)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":169:24)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":169:43)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":170:13)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":176:13)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":178:13)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":171:37)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":147:13)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":171:28)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":171:41)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":171:17)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":173:17)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":173:24)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":173:34)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":174:27)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":174:17)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":175:27)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":179:27)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":179:17)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":186:1)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":217:1)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":188:5)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":188:12)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":190:12)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":190:5)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":191:5)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":195:5)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":191:8)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":191:20)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":192:5)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":194:16)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":194:9)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":196:5)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":216:5)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":196:8)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":196:20)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":197:5)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":198:9)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":215:9)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":199:13)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":199:20)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":203:13)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":214:13)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":203:17)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":203:24)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":203:43)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":204:13)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":210:13)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":212:13)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":205:37)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":186:13)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":205:28)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":205:41)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":205:17)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":207:17)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":207:24)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":207:34)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":208:27)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":208:17)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":209:27)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":213:27)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":213:17)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":219:1)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":225:1)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":221:5)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":222:5)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":223:5)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_07.cpp":224:5)
#loc249 = loc(fused[#loc1, #loc2])
#loc250 = loc(fused[#loc3, #loc4])
#loc251 = loc(fused[#loc5, #loc6])
#loc252 = loc(fused[#loc7, #loc8])
#loc253 = loc(fused[#loc10, #loc11])
#loc254 = loc(fused[#loc13, #loc14])
#loc255 = loc(fused[#loc15, #loc16])
#loc256 = loc(fused[#loc18, #loc17])
#loc257 = loc(fused[#loc19, #loc20])
#loc258 = loc(fused[#loc21, #loc22])
#loc259 = loc(fused[#loc23, #loc20])
#loc260 = loc(fused[#loc25, #loc26])
#loc261 = loc(fused[#loc27, #loc28])
#loc262 = loc(fused[#loc29, #loc30])
#loc263 = loc(fused[#loc31, #loc28])
#loc264 = loc(fused[#loc32, #loc33])
#loc265 = loc(fused[#loc34, #loc35])
#loc266 = loc(fused[#loc36, #loc37])
#loc267 = loc(fused[#loc39, #loc40])
#loc268 = loc(fused[#loc38, #loc40])
#loc269 = loc(fused[#loc41, #loc42, #loc43, #loc37])
#loc270 = loc(fused[#loc46, #loc47])
#loc271 = loc(fused[#loc48, #loc47])
#loc272 = loc(fused[#loc57, #loc58])
#loc273 = loc(fused[#loc59, #loc60])
#loc274 = loc(fused[#loc62, #loc61])
#loc275 = loc(fused[#loc63, #loc64])
#loc276 = loc(fused[#loc65, #loc66])
#loc277 = loc(fused[#loc67, #loc64])
#loc278 = loc(fused[#loc69, #loc70])
#loc279 = loc(fused[#loc71, #loc72])
#loc280 = loc(fused[#loc73, #loc74])
#loc281 = loc(fused[#loc75, #loc76, #loc77, #loc72])
#loc282 = loc(fused[#loc79, #loc80])
#loc283 = loc(fused[#loc81, #loc82])
#loc284 = loc(fused[#loc83, #loc84])
#loc285 = loc(fused[#loc86, #loc87])
#loc286 = loc(fused[#loc85, #loc87])
#loc287 = loc(fused[#loc89, #loc90])
#loc288 = loc(fused[#loc91, #loc92, #loc93, #loc84])
#loc289 = loc(fused[#loc96, #loc97])
#loc290 = loc(fused[#loc98, #loc97])
#loc291 = loc(fused[#loc106, #loc107])
#loc292 = loc(fused[#loc108, #loc109])
#loc293 = loc(fused[#loc111, #loc110])
#loc294 = loc(fused[#loc112, #loc113])
#loc295 = loc(fused[#loc114, #loc115])
#loc296 = loc(fused[#loc116, #loc113])
#loc297 = loc(fused[#loc118, #loc119])
#loc298 = loc(fused[#loc120, #loc121])
#loc299 = loc(fused[#loc122, #loc123])
#loc300 = loc(fused[#loc124, #loc121])
#loc301 = loc(fused[#loc125, #loc126])
#loc302 = loc(fused[#loc127, #loc128])
#loc303 = loc(fused[#loc129, #loc130])
#loc304 = loc(fused[#loc132, #loc133])
#loc305 = loc(fused[#loc131, #loc133])
#loc306 = loc(fused[#loc135, #loc136])
#loc307 = loc(fused[#loc137, #loc138, #loc139, #loc130])
#loc308 = loc(fused[#loc142, #loc143])
#loc309 = loc(fused[#loc144, #loc143])
#loc310 = loc(fused[#loc153, #loc154])
#loc311 = loc(fused[#loc155, #loc156])
#loc312 = loc(fused[#loc158, #loc157])
#loc313 = loc(fused[#loc159, #loc160])
#loc314 = loc(fused[#loc161, #loc162])
#loc315 = loc(fused[#loc163, #loc164, #loc165, #loc160])
#loc316 = loc(fused[#loc169, #loc168])
#loc317 = loc(fused[#loc170, #loc171])
#loc318 = loc(fused[#loc172, #loc173])
#loc319 = loc(fused[#loc174, #loc171])
#loc320 = loc(fused[#loc175, #loc176])
#loc321 = loc(fused[#loc177, #loc178])
#loc322 = loc(fused[#loc179, #loc180])
#loc323 = loc(fused[#loc182, #loc183])
#loc324 = loc(fused[#loc181, #loc183])
#loc325 = loc(fused[#loc184, #loc185, #loc186, #loc180])
#loc326 = loc(fused[#loc189, #loc190])
#loc327 = loc(fused[#loc191, #loc190])
#loc328 = loc(fused[#loc200, #loc201])
#loc329 = loc(fused[#loc202, #loc203])
#loc330 = loc(fused[#loc205, #loc204])
#loc331 = loc(fused[#loc206, #loc207])
#loc332 = loc(fused[#loc208, #loc209])
#loc333 = loc(fused[#loc210, #loc207])
#loc334 = loc(fused[#loc212, #loc211])
#loc335 = loc(fused[#loc213, #loc214])
#loc336 = loc(fused[#loc215, #loc216])
#loc337 = loc(fused[#loc217, #loc214])
#loc338 = loc(fused[#loc218, #loc219])
#loc339 = loc(fused[#loc220, #loc221])
#loc340 = loc(fused[#loc222, #loc223])
#loc341 = loc(fused[#loc225, #loc226])
#loc342 = loc(fused[#loc224, #loc226])
#loc343 = loc(fused[#loc227, #loc228, #loc229, #loc223])
#loc344 = loc(fused[#loc232, #loc233])
#loc345 = loc(fused[#loc234, #loc233])
#loc346 = loc(fused[#loc243, #loc244])
