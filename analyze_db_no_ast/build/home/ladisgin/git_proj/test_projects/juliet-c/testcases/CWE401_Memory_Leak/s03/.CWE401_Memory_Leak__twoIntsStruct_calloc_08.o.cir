!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc232)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc233)
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc234)
  cir.func no_proto  @CWE401_Memory_Leak__twoIntsStruct_calloc_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc236)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc237)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc239)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc15)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc15)
      cir.if %4 {
        %5 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc18)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc19)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc19)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc241)
        %9 = cir.call @calloc(%7, %8) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc18)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc242)
        cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc243)
        cir.scope {
          %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
          %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc27)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
          %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc245)
          %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc28)
          cir.if %28 {
            %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc30)
            %30 = cir.const #cir.int<1> : !s32i loc(#loc31)
            %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc32)
            cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
          } loc(#loc246)
        } loc(#loc244)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc33)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc35)
        %14 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %13 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
        %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
        cir.store %11, %15 : !s32i, !cir.ptr<!s32i> loc(#loc247)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc38)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc40)
        %19 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %18 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
        %20 = cir.get_member %19[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
        cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc248)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
        %22 = cir.const #cir.int<0> : !s32i loc(#loc44)
        %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
        cir.call @printStructLine(%23) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc46)
      } loc(#loc240)
    } loc(#loc238)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc250)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc49)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc49)
      cir.if %4 {
      } loc(#loc251)
    } loc(#loc249)
    cir.return loc(#loc8)
  } loc(#loc235)
  cir.func no_proto  @CWE401_Memory_Leak__twoIntsStruct_calloc_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc253)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc254)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc255)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc256)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc53)
  } loc(#loc252)
  cir.func no_proto internal private  @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc63)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc64)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    cir.return %2 : !s32i loc(#loc258)
  } loc(#loc257)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc259)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc68)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc260)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc262)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc263)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc265)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc79)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc79)
      cir.if %4 {
        %5 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc82)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc83)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc83)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc267)
        %9 = cir.call @calloc(%7, %8) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc82)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc268)
        cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc269)
        cir.scope {
          %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc90)
          %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc91)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
          %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc271)
          %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc92)
          cir.if %28 {
            %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc94)
            %30 = cir.const #cir.int<1> : !s32i loc(#loc95)
            %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc96)
            cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc94)
          } loc(#loc272)
        } loc(#loc270)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc97)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc99)
        %14 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %13 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
        %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
        cir.store %11, %15 : !s32i, !cir.ptr<!s32i> loc(#loc273)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc101)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc103)
        %19 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %18 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
        %20 = cir.get_member %19[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
        cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc274)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
        %22 = cir.const #cir.int<0> : !s32i loc(#loc106)
        %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
        cir.call @printStructLine(%23) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc108)
      } loc(#loc266)
    } loc(#loc264)
    cir.scope {
      %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc276)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc111)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc111)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc68)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc68)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc116)
      } else {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc117)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc118)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc117)
      } loc(#loc277)
    } loc(#loc275)
    cir.return loc(#loc72)
  } loc(#loc261)
  cir.func no_proto internal private  @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc120)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc121)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc279)
    cir.return %2 : !s32i loc(#loc279)
  } loc(#loc278)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc281)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc127)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc282)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc284)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc131)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc131)
      cir.if %4 {
        %5 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc134)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc135)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc135)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc286)
        %9 = cir.call @calloc(%7, %8) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc134)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc287)
        cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc288)
        cir.scope {
          %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc142)
          %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc143)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
          %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc290)
          %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc144)
          cir.if %28 {
            %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc146)
            %30 = cir.const #cir.int<1> : !s32i loc(#loc147)
            %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc148)
            cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc146)
          } loc(#loc291)
        } loc(#loc289)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc149)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc150)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc151)
        %14 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %13 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc152)
        %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
        cir.store %11, %15 : !s32i, !cir.ptr<!s32i> loc(#loc292)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc153)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc154)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc155)
        %19 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %18 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc156)
        %20 = cir.get_member %19[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
        cir.store %16, %20 : !s32i, !cir.ptr<!s32i> loc(#loc293)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc157)
        %22 = cir.const #cir.int<0> : !s32i loc(#loc158)
        %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc159)
        cir.call @printStructLine(%23) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc160)
      } loc(#loc285)
    } loc(#loc283)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc295)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc163)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc163)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc166)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc167)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc167)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc166)
      } loc(#loc296)
    } loc(#loc294)
    cir.return loc(#loc124)
  } loc(#loc280)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc298)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc172)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc299)
    cir.scope {
      %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc301)
      %3 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc176)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc176)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc181)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc181)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc182)
      } else {
        %5 = cir.const #cir.int<100> : !s32i loc(#loc183)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc183)
        %7 = cir.const #cir.int<8> : !u64i loc(#loc183)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc183)
        %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc183)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc183)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc183)
        cir.store %11, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc303)
        %12 = cir.const #cir.int<0> : !s32i loc(#loc185)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc186)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc187)
        %15 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %14 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc188)
        %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
        cir.store %12, %16 : !s32i, !cir.ptr<!s32i> loc(#loc304)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc189)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc190)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc191)
        %20 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %19 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc192)
        %21 = cir.get_member %20[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
        cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc305)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc193)
        %23 = cir.const #cir.int<0> : !s32i loc(#loc194)
        %24 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %23 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc195)
        cir.call @printStructLine(%24) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc196)
      } loc(#loc302)
    } loc(#loc300)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc307)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc199)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc199)
      cir.if %4 {
      } loc(#loc308)
    } loc(#loc306)
    cir.return loc(#loc169)
  } loc(#loc297)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc310)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc206)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc311)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc313)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc210)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc210)
      cir.if %4 {
        %5 = cir.const #cir.int<100> : !s32i loc(#loc213)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc213)
        %7 = cir.const #cir.int<8> : !u64i loc(#loc213)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc213)
        %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc213)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc213)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc213)
        cir.store %11, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc315)
        %12 = cir.const #cir.int<0> : !s32i loc(#loc215)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc216)
        %14 = cir.const #cir.int<0> : !s32i loc(#loc217)
        %15 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %14 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc218)
        %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
        cir.store %12, %16 : !s32i, !cir.ptr<!s32i> loc(#loc316)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc219)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc220)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc221)
        %20 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %19 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc222)
        %21 = cir.get_member %20[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
        cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc317)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc223)
        %23 = cir.const #cir.int<0> : !s32i loc(#loc224)
        %24 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %23 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc225)
        cir.call @printStructLine(%24) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc226)
      } loc(#loc314)
    } loc(#loc312)
    cir.scope {
      %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc319)
      %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc229)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc229)
      cir.if %4 {
      } loc(#loc320)
    } loc(#loc318)
    cir.return loc(#loc203)
  } loc(#loc309)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":37:1)
#loc8 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":56:1)
#loc9 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":39:5)
#loc10 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":39:21)
#loc11 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":40:12)
#loc12 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":40:5)
#loc13 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":41:5)
#loc14 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":50:5)
#loc15 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":41:8)
#loc16 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":41:26)
#loc17 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":42:5)
#loc18 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":44:33)
#loc19 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":44:40)
#loc20 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":44:45)
#loc21 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":44:65)
#loc22 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":44:66)
#loc23 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":44:9)
#loc24 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":45:9)
#loc25 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":45:37)
#loc26 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":45:13)
#loc27 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":45:21)
#loc28 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":45:18)
#loc29 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":45:27)
#loc30 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":45:28)
#loc31 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":45:34)
#loc32 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":45:33)
#loc33 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":47:26)
#loc34 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":47:9)
#loc35 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":47:14)
#loc36 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":47:15)
#loc37 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc38 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":48:26)
#loc39 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":48:9)
#loc40 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":48:14)
#loc41 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":48:15)
#loc42 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc43 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":49:26)
#loc44 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":49:31)
#loc45 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":49:32)
#loc46 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":49:9)
#loc47 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":51:5)
#loc48 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":55:5)
#loc49 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":51:8)
#loc50 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":51:26)
#loc51 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":52:5)
#loc52 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":158:1)
#loc53 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":164:1)
#loc54 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":160:5)
#loc55 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":160:14)
#loc56 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":161:5)
#loc57 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":161:14)
#loc58 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":162:5)
#loc59 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":162:14)
#loc60 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":163:5)
#loc61 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":163:14)
#loc62 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":25:1)
#loc63 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":28:1)
#loc64 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":27:12)
#loc65 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":27:5)
#loc66 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc67 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc68 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":80:19)
#loc69 = loc("/usr/include/stdlib.h":687:1)
#loc70 = loc("/usr/include/stdlib.h":687:32)
#loc71 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":63:1)
#loc72 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":87:1)
#loc73 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":65:5)
#loc74 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":65:21)
#loc75 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":66:12)
#loc76 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":66:5)
#loc77 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":67:5)
#loc78 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":76:5)
#loc79 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":67:8)
#loc80 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":67:26)
#loc81 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":68:5)
#loc82 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":70:33)
#loc83 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":70:40)
#loc84 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":70:45)
#loc85 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":70:65)
#loc86 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":70:66)
#loc87 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":70:9)
#loc88 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":71:9)
#loc89 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":71:37)
#loc90 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":71:13)
#loc91 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":71:21)
#loc92 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":71:18)
#loc93 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":71:27)
#loc94 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":71:28)
#loc95 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":71:34)
#loc96 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":71:33)
#loc97 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":73:26)
#loc98 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":73:9)
#loc99 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":73:14)
#loc100 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":73:15)
#loc101 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":74:26)
#loc102 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":74:9)
#loc103 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":74:14)
#loc104 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":74:15)
#loc105 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":75:26)
#loc106 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":75:31)
#loc107 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":75:32)
#loc108 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":75:9)
#loc109 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":77:5)
#loc110 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":86:5)
#loc111 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":77:8)
#loc112 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":77:27)
#loc113 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":78:5)
#loc114 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":81:5)
#loc115 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":83:5)
#loc116 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":80:9)
#loc117 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":85:9)
#loc118 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":85:14)
#loc119 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":30:1)
#loc120 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":33:1)
#loc121 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":32:12)
#loc122 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":32:5)
#loc123 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":90:1)
#loc124 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":109:1)
#loc125 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":92:5)
#loc126 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":92:21)
#loc127 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":93:12)
#loc128 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":93:5)
#loc129 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":94:5)
#loc130 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":103:5)
#loc131 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":94:8)
#loc132 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":94:26)
#loc133 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":95:5)
#loc134 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":97:33)
#loc135 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":97:40)
#loc136 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":97:45)
#loc137 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":97:65)
#loc138 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":97:66)
#loc139 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":97:9)
#loc140 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":98:9)
#loc141 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":98:37)
#loc142 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":98:13)
#loc143 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":98:21)
#loc144 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":98:18)
#loc145 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":98:27)
#loc146 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":98:28)
#loc147 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":98:34)
#loc148 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":98:33)
#loc149 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":100:26)
#loc150 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":100:9)
#loc151 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":100:14)
#loc152 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":100:15)
#loc153 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":101:26)
#loc154 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":101:9)
#loc155 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":101:14)
#loc156 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":101:15)
#loc157 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":102:26)
#loc158 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":102:31)
#loc159 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":102:32)
#loc160 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":102:9)
#loc161 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":104:5)
#loc162 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":108:5)
#loc163 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":104:8)
#loc164 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":104:26)
#loc165 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":105:5)
#loc166 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":107:9)
#loc167 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":107:14)
#loc168 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":112:1)
#loc169 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":135:1)
#loc170 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":114:5)
#loc171 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":114:21)
#loc172 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":115:12)
#loc173 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":115:5)
#loc174 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":116:5)
#loc175 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":129:5)
#loc176 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":116:8)
#loc177 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":116:27)
#loc178 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":117:5)
#loc179 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":120:5)
#loc180 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":122:5)
#loc181 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":119:19)
#loc182 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":119:9)
#loc183 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":124:33)
#loc184 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":124:9)
#loc185 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":126:26)
#loc186 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":126:9)
#loc187 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":126:14)
#loc188 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":126:15)
#loc189 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":127:26)
#loc190 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":127:9)
#loc191 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":127:14)
#loc192 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":127:15)
#loc193 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":128:26)
#loc194 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":128:31)
#loc195 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":128:32)
#loc196 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":128:9)
#loc197 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":130:5)
#loc198 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":134:5)
#loc199 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":130:8)
#loc200 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":130:26)
#loc201 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":131:5)
#loc202 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":138:1)
#loc203 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":156:1)
#loc204 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":140:5)
#loc205 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":140:21)
#loc206 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":141:12)
#loc207 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":141:5)
#loc208 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":142:5)
#loc209 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":150:5)
#loc210 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":142:8)
#loc211 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":142:26)
#loc212 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":143:5)
#loc213 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":145:33)
#loc214 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":145:9)
#loc215 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":147:26)
#loc216 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":147:9)
#loc217 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":147:14)
#loc218 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":147:15)
#loc219 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":148:26)
#loc220 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":148:9)
#loc221 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":148:14)
#loc222 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":148:15)
#loc223 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":149:26)
#loc224 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":149:31)
#loc225 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":149:32)
#loc226 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":149:9)
#loc227 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":151:5)
#loc228 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":155:5)
#loc229 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":151:8)
#loc230 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":151:26)
#loc231 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_08.c":152:5)
#loc232 = loc(fused[#loc1, #loc2])
#loc233 = loc(fused[#loc3, #loc4])
#loc234 = loc(fused[#loc5, #loc6])
#loc235 = loc(fused[#loc7, #loc8])
#loc236 = loc(fused[#loc9, #loc10])
#loc237 = loc(fused[#loc12, #loc11])
#loc238 = loc(fused[#loc13, #loc14])
#loc239 = loc(fused[#loc15, #loc16])
#loc240 = loc(fused[#loc17, #loc14])
#loc241 = loc(fused[#loc20, #loc21])
#loc242 = loc(fused[#loc18, #loc22])
#loc243 = loc(fused[#loc23, #loc22])
#loc244 = loc(fused[#loc24, #loc25])
#loc245 = loc(fused[#loc26, #loc27])
#loc246 = loc(fused[#loc29, #loc25])
#loc247 = loc(fused[#loc34, #loc33])
#loc248 = loc(fused[#loc39, #loc38])
#loc249 = loc(fused[#loc47, #loc48])
#loc250 = loc(fused[#loc49, #loc50])
#loc251 = loc(fused[#loc51, #loc48])
#loc252 = loc(fused[#loc52, #loc53])
#loc253 = loc(fused[#loc54, #loc55])
#loc254 = loc(fused[#loc56, #loc57])
#loc255 = loc(fused[#loc58, #loc59])
#loc256 = loc(fused[#loc60, #loc61])
#loc257 = loc(fused[#loc62, #loc63])
#loc258 = loc(fused[#loc65, #loc64])
#loc259 = loc(fused[#loc66, #loc67])
#loc260 = loc(fused[#loc69, #loc70])
#loc261 = loc(fused[#loc71, #loc72])
#loc262 = loc(fused[#loc73, #loc74])
#loc263 = loc(fused[#loc76, #loc75])
#loc264 = loc(fused[#loc77, #loc78])
#loc265 = loc(fused[#loc79, #loc80])
#loc266 = loc(fused[#loc81, #loc78])
#loc267 = loc(fused[#loc84, #loc85])
#loc268 = loc(fused[#loc82, #loc86])
#loc269 = loc(fused[#loc87, #loc86])
#loc270 = loc(fused[#loc88, #loc89])
#loc271 = loc(fused[#loc90, #loc91])
#loc272 = loc(fused[#loc93, #loc89])
#loc273 = loc(fused[#loc98, #loc97])
#loc274 = loc(fused[#loc102, #loc101])
#loc275 = loc(fused[#loc109, #loc110])
#loc276 = loc(fused[#loc111, #loc112])
#loc277 = loc(fused[#loc113, #loc114, #loc115, #loc110])
#loc278 = loc(fused[#loc119, #loc120])
#loc279 = loc(fused[#loc122, #loc121])
#loc280 = loc(fused[#loc123, #loc124])
#loc281 = loc(fused[#loc125, #loc126])
#loc282 = loc(fused[#loc128, #loc127])
#loc283 = loc(fused[#loc129, #loc130])
#loc284 = loc(fused[#loc131, #loc132])
#loc285 = loc(fused[#loc133, #loc130])
#loc286 = loc(fused[#loc136, #loc137])
#loc287 = loc(fused[#loc134, #loc138])
#loc288 = loc(fused[#loc139, #loc138])
#loc289 = loc(fused[#loc140, #loc141])
#loc290 = loc(fused[#loc142, #loc143])
#loc291 = loc(fused[#loc145, #loc141])
#loc292 = loc(fused[#loc150, #loc149])
#loc293 = loc(fused[#loc154, #loc153])
#loc294 = loc(fused[#loc161, #loc162])
#loc295 = loc(fused[#loc163, #loc164])
#loc296 = loc(fused[#loc165, #loc162])
#loc297 = loc(fused[#loc168, #loc169])
#loc298 = loc(fused[#loc170, #loc171])
#loc299 = loc(fused[#loc173, #loc172])
#loc300 = loc(fused[#loc174, #loc175])
#loc301 = loc(fused[#loc176, #loc177])
#loc302 = loc(fused[#loc178, #loc179, #loc180, #loc175])
#loc303 = loc(fused[#loc184, #loc183])
#loc304 = loc(fused[#loc186, #loc185])
#loc305 = loc(fused[#loc190, #loc189])
#loc306 = loc(fused[#loc197, #loc198])
#loc307 = loc(fused[#loc199, #loc200])
#loc308 = loc(fused[#loc201, #loc198])
#loc309 = loc(fused[#loc202, #loc203])
#loc310 = loc(fused[#loc204, #loc205])
#loc311 = loc(fused[#loc207, #loc206])
#loc312 = loc(fused[#loc208, #loc209])
#loc313 = loc(fused[#loc210, #loc211])
#loc314 = loc(fused[#loc212, #loc209])
#loc315 = loc(fused[#loc214, #loc213])
#loc316 = loc(fused[#loc216, #loc215])
#loc317 = loc(fused[#loc220, #loc219])
#loc318 = loc(fused[#loc227, #loc228])
#loc319 = loc(fused[#loc229, #loc230])
#loc320 = loc(fused[#loc231, #loc228])
