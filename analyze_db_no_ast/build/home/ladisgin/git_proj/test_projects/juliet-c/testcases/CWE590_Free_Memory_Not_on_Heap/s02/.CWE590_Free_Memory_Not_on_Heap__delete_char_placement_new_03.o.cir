!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printHexCharLine(!s8i) loc(#loc98)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr) loc(#loc99)
  cir.func  @_ZN60CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_033badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc101)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc102)
    cir.scope {
      %7 = cir.const #cir.int<5> : !s32i loc(#loc13)
      %8 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %9 = cir.cmp(eq, %7, %8) : !s32i, !cir.bool loc(#loc104)
      cir.if %9 {
        cir.scope {
          %10 = cir.alloca !cir.array<!s8i x 1>, !cir.ptr<!cir.array<!s8i x 1>>, ["buffer"] {alignment = 1 : i64} loc(#loc107)
          %11 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc108)
          %12 = cir.const #cir.int<1> : !u64i loc(#loc109)
          %13 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 1>>), !cir.ptr<!s8i> loc(#loc23)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc109)
          cir.store %15, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
          %16 = cir.const #cir.int<65> : !s8i loc(#loc24)
          %17 = cir.load deref %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
          cir.store %16, %17 : !s8i, !cir.ptr<!s8i> loc(#loc110)
          %18 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
          cir.store %18, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
        } loc(#loc106)
      } loc(#loc105)
    } loc(#loc103)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %3 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc30)
    cir.call @printHexCharLine(%3) : (!s8i) -> () loc(#loc31)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc33)
    cir.call @_ZdlPvm(%5, %6) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc33)
    cir.return loc(#loc6)
  } loc(#loc100)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc112)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc36)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc113)
  cir.func internal private  @_ZN60CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc115)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc43)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    cir.scope {
      %7 = cir.const #cir.int<5> : !s32i loc(#loc47)
      %8 = cir.const #cir.int<5> : !s32i loc(#loc48)
      %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc118)
      cir.if %9 {
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc36)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc36)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc52)
      } else {
        cir.scope {
          %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc121)
          %11 = cir.const #cir.int<1> : !u64i loc(#loc122)
          %12 = cir.call @_Znwm(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc121)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc122)
          cir.store %13, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
          %14 = cir.const #cir.int<65> : !s8i loc(#loc58)
          %15 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
          cir.store %14, %15 : !s8i, !cir.ptr<!s8i> loc(#loc123)
          %16 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
          cir.store %16, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
        } loc(#loc120)
      } loc(#loc119)
    } loc(#loc117)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %3 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc64)
    cir.call @printHexCharLine(%3) : (!s8i) -> () loc(#loc65)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc67)
    cir.call @_ZdlPvm(%5, %6) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc67)
    cir.return loc(#loc40)
  } loc(#loc114)
  cir.func internal private  @_ZN60CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc126)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc72)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    cir.scope {
      %7 = cir.const #cir.int<5> : !s32i loc(#loc76)
      %8 = cir.const #cir.int<5> : !s32i loc(#loc77)
      %9 = cir.cmp(eq, %7, %8) : !s32i, !cir.bool loc(#loc129)
      cir.if %9 {
        cir.scope {
          %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc132)
          %11 = cir.const #cir.int<1> : !u64i loc(#loc133)
          %12 = cir.call @_Znwm(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc132)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc133)
          cir.store %13, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
          %14 = cir.const #cir.int<65> : !s8i loc(#loc84)
          %15 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
          cir.store %14, %15 : !s8i, !cir.ptr<!s8i> loc(#loc134)
          %16 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
          cir.store %16, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
        } loc(#loc131)
      } loc(#loc130)
    } loc(#loc128)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
    %3 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc90)
    cir.call @printHexCharLine(%3) : (!s8i) -> () loc(#loc91)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc93)
    cir.call @_ZdlPvm(%5, %6) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc93)
    cir.return loc(#loc69)
  } loc(#loc125)
  cir.func  @_ZN60CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_034goodEv() extra(#fn_attr1) {
    cir.call @_ZN60CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03L8goodG2B1Ev() : () -> () loc(#loc96)
    cir.call @_ZN60CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03L8goodG2B2Ev() : () -> () loc(#loc97)
    cir.return loc(#loc95)
  } loc(#loc136)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s02/CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":26:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":43:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":28:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":28:12)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":29:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":29:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":30:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":39:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":30:8)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":30:11)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":31:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":32:9)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":38:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":34:13)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":34:37)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":35:13)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":35:45)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":35:33)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":35:37)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":36:27)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":36:14)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":36:13)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":37:20)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":37:13)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":40:23)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":40:22)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":40:5)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":42:12)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":26:6)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":57:19)
#loc37 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc38 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":50:1)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":71:1)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":52:5)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":52:12)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":53:12)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":53:5)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":54:5)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":67:5)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":54:8)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":54:11)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":55:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":58:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":60:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":57:9)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":61:9)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":66:9)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":63:13)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":63:37)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":63:33)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":64:27)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":64:14)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":64:13)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":65:20)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":65:13)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":68:23)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":68:22)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":68:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":70:12)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":50:13)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":74:1)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":90:1)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":76:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":76:12)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":77:12)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":77:5)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":78:5)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":86:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":78:8)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":78:11)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":79:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":80:9)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":85:9)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":82:13)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":82:37)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":82:33)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":83:27)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":83:14)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":83:13)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":84:20)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":84:13)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":87:23)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":87:22)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":87:5)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":89:12)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":74:13)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":92:1)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":96:1)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":94:5)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_char_placement_new_03.cpp":95:5)
#loc98 = loc(fused[#loc1, #loc2])
#loc99 = loc(fused[#loc3, #loc4])
#loc100 = loc(fused[#loc5, #loc6])
#loc101 = loc(fused[#loc7, #loc8])
#loc102 = loc(fused[#loc10, #loc9])
#loc103 = loc(fused[#loc11, #loc12])
#loc104 = loc(fused[#loc13, #loc14])
#loc105 = loc(fused[#loc15, #loc12])
#loc106 = loc(fused[#loc16, #loc17])
#loc107 = loc(fused[#loc18, #loc19])
#loc108 = loc(fused[#loc20, #loc21])
#loc109 = loc(fused[#loc22, #loc21])
#loc110 = loc(fused[#loc26, #loc24])
#loc111 = loc(fused[#loc28, #loc27])
#loc112 = loc(fused[#loc34, #loc35])
#loc113 = loc(fused[#loc37, #loc38])
#loc114 = loc(fused[#loc39, #loc40])
#loc115 = loc(fused[#loc41, #loc42])
#loc116 = loc(fused[#loc44, #loc43])
#loc117 = loc(fused[#loc45, #loc46])
#loc118 = loc(fused[#loc47, #loc48])
#loc119 = loc(fused[#loc49, #loc50, #loc51, #loc46])
#loc120 = loc(fused[#loc53, #loc54])
#loc121 = loc(fused[#loc55, #loc56])
#loc122 = loc(fused[#loc57, #loc56])
#loc123 = loc(fused[#loc60, #loc58])
#loc124 = loc(fused[#loc62, #loc61])
#loc125 = loc(fused[#loc68, #loc69])
#loc126 = loc(fused[#loc70, #loc71])
#loc127 = loc(fused[#loc73, #loc72])
#loc128 = loc(fused[#loc74, #loc75])
#loc129 = loc(fused[#loc76, #loc77])
#loc130 = loc(fused[#loc78, #loc75])
#loc131 = loc(fused[#loc79, #loc80])
#loc132 = loc(fused[#loc81, #loc82])
#loc133 = loc(fused[#loc83, #loc82])
#loc134 = loc(fused[#loc86, #loc84])
#loc135 = loc(fused[#loc88, #loc87])
#loc136 = loc(fused[#loc94, #loc95])
