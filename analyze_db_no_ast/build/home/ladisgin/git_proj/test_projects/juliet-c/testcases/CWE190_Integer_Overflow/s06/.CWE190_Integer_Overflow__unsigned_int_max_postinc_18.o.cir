!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printUnsignedLine(!u32i) loc(#loc81)
  cir.func no_proto  @CWE190_Integer_Overflow__unsigned_int_max_postinc_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc83)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc84)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc9)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc9)
    cir.store %3, %0 : !u32i, !cir.ptr<!u32i> loc(#loc85)
    cir.goto "source" loc(#loc86)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc13)
    %4 = cir.const #cir.int<2147483647> : !s32i loc(#loc14)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc14)
    %6 = cir.const #cir.int<2> : !u32i loc(#loc14)
    %7 = cir.binop(mul, %5, %6) : !u32i loc(#loc14)
    %8 = cir.const #cir.int<1> : !u32i loc(#loc14)
    %9 = cir.binop(add, %7, %8) : !u32i loc(#loc14)
    cir.store %9, %0 : !u32i, !cir.ptr<!u32i> loc(#loc87)
    cir.goto "sink" loc(#loc88)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc18)
    %10 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc19)
    %11 = cir.unary(inc, %10) : !u32i, !u32i loc(#loc20)
    cir.store %11, %0 : !u32i, !cir.ptr<!u32i> loc(#loc89)
    %12 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc8)
    cir.store %12, %1 : !u32i, !cir.ptr<!u32i> loc(#loc84)
    %13 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc21)
    cir.call @printUnsignedLine(%13) : (!u32i) -> () loc(#loc22)
    cir.return loc(#loc4)
  } loc(#loc82)
  cir.func no_proto  @CWE190_Integer_Overflow__unsigned_int_max_postinc_18_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc91)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc92)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    cir.return loc(#loc24)
  } loc(#loc90)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc93)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc31)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc95)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %2 = cir.cast(integral, %1 : !s32i), !u32i loc(#loc36)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc96)
    cir.goto "source" loc(#loc97)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc40)
    %3 = cir.const #cir.int<2147483647> : !s32i loc(#loc41)
    %4 = cir.cast(integral, %3 : !s32i), !u32i loc(#loc41)
    %5 = cir.const #cir.int<2> : !u32i loc(#loc41)
    %6 = cir.binop(mul, %4, %5) : !u32i loc(#loc41)
    %7 = cir.const #cir.int<1> : !u32i loc(#loc41)
    %8 = cir.binop(add, %6, %7) : !u32i loc(#loc41)
    cir.store %8, %0 : !u32i, !cir.ptr<!u32i> loc(#loc98)
    cir.goto "sink" loc(#loc99)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc45)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc48)
      %10 = cir.const #cir.int<2147483647> : !s32i loc(#loc49)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc49)
      %12 = cir.const #cir.int<2> : !u32i loc(#loc49)
      %13 = cir.binop(mul, %11, %12) : !u32i loc(#loc49)
      %14 = cir.const #cir.int<1> : !u32i loc(#loc49)
      %15 = cir.binop(add, %13, %14) : !u32i loc(#loc49)
      %16 = cir.cmp(lt, %9, %15) : !u32i, !s32i loc(#loc101)
      %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc50)
      cir.if %17 {
        %18 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc103)
        %19 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc56)
        %20 = cir.unary(inc, %19) : !u32i, !u32i loc(#loc57)
        cir.store %20, %0 : !u32i, !cir.ptr<!u32i> loc(#loc104)
        %21 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc55)
        cir.store %21, %18 : !u32i, !cir.ptr<!u32i> loc(#loc103)
        %22 = cir.load %18 : !cir.ptr<!u32i>, !u32i loc(#loc58)
        cir.call @printUnsignedLine(%22) : (!u32i) -> () loc(#loc59)
      } else {
        %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc31)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc31)
        cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc60)
      } loc(#loc102)
    } loc(#loc100)
    cir.return loc(#loc33)
  } loc(#loc94)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data"] {alignment = 4 : i64} loc(#loc106)
    %1 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc107)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %3 = cir.cast(integral, %2 : !s32i), !u32i loc(#loc67)
    cir.store %3, %0 : !u32i, !cir.ptr<!u32i> loc(#loc108)
    cir.goto "source" loc(#loc109)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc71)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc72)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc72)
    cir.store %5, %0 : !u32i, !cir.ptr<!u32i> loc(#loc110)
    cir.goto "sink" loc(#loc111)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc76)
    %6 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc77)
    %7 = cir.unary(inc, %6) : !u32i, !u32i loc(#loc78)
    cir.store %7, %0 : !u32i, !cir.ptr<!u32i> loc(#loc112)
    %8 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc66)
    cir.store %8, %1 : !u32i, !cir.ptr<!u32i> loc(#loc107)
    %9 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc79)
    cir.call @printUnsignedLine(%9) : (!u32i) -> () loc(#loc80)
    cir.return loc(#loc62)
  } loc(#loc105)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc3 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":22:1)
#loc4 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":38:1)
#loc5 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":24:5)
#loc6 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":24:18)
#loc7 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":35:9)
#loc8 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":35:31)
#loc9 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":25:12)
#loc10 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":25:5)
#loc11 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":26:5)
#loc12 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":26:10)
#loc13 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":27:1)
#loc14 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":29:12)
#loc15 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":29:5)
#loc16 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":30:5)
#loc17 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":30:10)
#loc18 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":31:1)
#loc19 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":34:13)
#loc20 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":34:9)
#loc21 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":36:27)
#loc22 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":36:9)
#loc23 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":87:1)
#loc24 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":91:1)
#loc25 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":89:5)
#loc26 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":89:13)
#loc27 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":90:5)
#loc28 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":90:13)
#loc29 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc31 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":64:19)
#loc32 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":45:1)
#loc33 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":66:1)
#loc34 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":47:5)
#loc35 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":47:18)
#loc36 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":48:12)
#loc37 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":48:5)
#loc38 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":49:5)
#loc39 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":49:10)
#loc40 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":50:1)
#loc41 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":52:12)
#loc42 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":52:5)
#loc43 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":53:5)
#loc44 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":53:10)
#loc45 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":54:1)
#loc46 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":56:5)
#loc47 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":65:5)
#loc48 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":56:9)
#loc49 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":56:16)
#loc50 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":56:14)
#loc51 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":57:5)
#loc52 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":61:5)
#loc53 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":63:5)
#loc54 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":59:9)
#loc55 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":59:31)
#loc56 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":58:13)
#loc57 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":58:9)
#loc58 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":60:27)
#loc59 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":60:9)
#loc60 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":64:9)
#loc61 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":69:1)
#loc62 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":85:1)
#loc63 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":71:5)
#loc64 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":71:18)
#loc65 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":82:9)
#loc66 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":82:31)
#loc67 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":72:12)
#loc68 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":72:5)
#loc69 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":73:5)
#loc70 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":73:10)
#loc71 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":74:1)
#loc72 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":76:12)
#loc73 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":76:5)
#loc74 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":77:5)
#loc75 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":77:10)
#loc76 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":78:1)
#loc77 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":81:13)
#loc78 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":81:9)
#loc79 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":83:27)
#loc80 = loc("CWE190_Integer_Overflow__unsigned_int_max_postinc_18.c":83:9)
#loc81 = loc(fused[#loc1, #loc2])
#loc82 = loc(fused[#loc3, #loc4])
#loc83 = loc(fused[#loc5, #loc6])
#loc84 = loc(fused[#loc7, #loc8])
#loc85 = loc(fused[#loc10, #loc9])
#loc86 = loc(fused[#loc11, #loc12])
#loc87 = loc(fused[#loc15, #loc14])
#loc88 = loc(fused[#loc16, #loc17])
#loc89 = loc(fused[#loc20, #loc19])
#loc90 = loc(fused[#loc23, #loc24])
#loc91 = loc(fused[#loc25, #loc26])
#loc92 = loc(fused[#loc27, #loc28])
#loc93 = loc(fused[#loc29, #loc30])
#loc94 = loc(fused[#loc32, #loc33])
#loc95 = loc(fused[#loc34, #loc35])
#loc96 = loc(fused[#loc37, #loc36])
#loc97 = loc(fused[#loc38, #loc39])
#loc98 = loc(fused[#loc42, #loc41])
#loc99 = loc(fused[#loc43, #loc44])
#loc100 = loc(fused[#loc46, #loc47])
#loc101 = loc(fused[#loc48, #loc49])
#loc102 = loc(fused[#loc51, #loc52, #loc53, #loc47])
#loc103 = loc(fused[#loc54, #loc55])
#loc104 = loc(fused[#loc57, #loc56])
#loc105 = loc(fused[#loc61, #loc62])
#loc106 = loc(fused[#loc63, #loc64])
#loc107 = loc(fused[#loc65, #loc66])
#loc108 = loc(fused[#loc68, #loc67])
#loc109 = loc(fused[#loc69, #loc70])
#loc110 = loc(fused[#loc73, #loc72])
#loc111 = loc(fused[#loc74, #loc75])
#loc112 = loc(fused[#loc78, #loc77])
