!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc143)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_popen_12_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc144)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc145)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc146)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc147)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc148)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc149)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc15)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc18)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc151)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc21)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc152)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc154)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc144)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_popen_12_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc144)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc144)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc157)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc157)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc32)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc32)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc160)
          %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc41)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
          %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc41)
          cir.store %11, %8 : !u64i, !cir.ptr<!u64i> loc(#loc160)
          cir.scope {
            %12 = cir.const #cir.int<100> : !s32i loc(#loc45)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc45)
            %14 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc46)
            %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc162)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc47)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc47)
            %18 = cir.cmp(gt, %15, %17) : !u64i, !cir.bool loc(#loc163)
            cir.if %18 {
              cir.scope {
                %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
                %20 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc52)
                %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc53)
                %22 = cir.const #cir.int<100> : !s32i loc(#loc54)
                %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc54)
                %24 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc55)
                %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc166)
                %26 = cir.cast(integral, %25 : !u64i), !s32i loc(#loc166)
                %27 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc148)
                %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc56)
                %29 = cir.call @fgets(%21, %26, %28) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc57)
                %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
                %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc58)
                %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc167)
                cir.if %32 {
                  %33 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc62)
                  %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
                  %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc62)
                  cir.store %35, %8 : !u64i, !cir.ptr<!u64i> loc(#loc169)
                  cir.scope {
                    %36 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc68)
                    %37 = cir.const #cir.int<0> : !s32i loc(#loc69)
                    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc69)
                    %39 = cir.cmp(gt, %36, %38) : !u64i, !cir.bool loc(#loc171)
                    %40 = cir.ternary(%39, true {
                      %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
                      %42 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc72)
                      %43 = cir.const #cir.int<1> : !s32i loc(#loc73)
                      %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc73)
                      %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc172)
                      %46 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc74)
                      %47 = cir.load %46 : !cir.ptr<!s8i>, !s8i loc(#loc71)
                      %48 = cir.cast(integral, %47 : !s8i), !s32i loc(#loc71)
                      %49 = cir.const #cir.int<10> : !s32i loc(#loc75)
                      %50 = cir.cmp(eq, %48, %49) : !s32i, !cir.bool loc(#loc173)
                      %51 = cir.ternary(%50, true {
                        %52 = cir.const #true loc(#loc70)
                        cir.yield %52 : !cir.bool loc(#loc70)
                      }, false {
                        %52 = cir.const #false loc(#loc70)
                        cir.yield %52 : !cir.bool loc(#loc70)
                      }) : (!cir.bool) -> !cir.bool loc(#loc70)
                      cir.yield %51 : !cir.bool loc(#loc70)
                    }, false {
                      %41 = cir.const #false loc(#loc70)
                      cir.yield %41 : !cir.bool loc(#loc70)
                    }) : (!cir.bool) -> !cir.bool loc(#loc70)
                    cir.if %40 {
                      %41 = cir.const #cir.int<0> : !s32i loc(#loc77)
                      %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc77)
                      %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
                      %44 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc79)
                      %45 = cir.const #cir.int<1> : !s32i loc(#loc80)
                      %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc80)
                      %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc175)
                      %48 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc81)
                      cir.store %42, %48 : !s8i, !cir.ptr<!s8i> loc(#loc176)
                    } loc(#loc174)
                  } loc(#loc170)
                } else {
                  %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc15)
                  %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc15)
                  cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc82)
                  %35 = cir.const #cir.int<0> : !s32i loc(#loc83)
                  %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc83)
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
                  %38 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc85)
                  %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc86)
                  cir.store %36, %39 : !s8i, !cir.ptr<!s8i> loc(#loc177)
                } loc(#loc168)
              } loc(#loc165)
            } loc(#loc164)
          } loc(#loc161)
        } loc(#loc159)
      } else {
        %8 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc87)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc18)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc18)
        %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc87)
      } loc(#loc158)
    } loc(#loc156)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc179)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
      %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc21)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc21)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc94)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc180)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc99)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc100)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc100)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc182)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc102)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc103)
        } loc(#loc183)
      } loc(#loc181)
    } loc(#loc178)
    cir.return loc(#loc25)
  } loc(#loc153)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc185)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc106)
    cir.return loc(#loc105)
  } loc(#loc184)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc187)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc143)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc143)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc143)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc112)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc190)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc190)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc116)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc116)
      cir.if %7 {
        %8 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc121)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc123)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc123)
        %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc121)
      } else {
        %8 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc124)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
        %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc126)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc126)
        %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc124)
      } loc(#loc191)
    } loc(#loc189)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc193)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
      %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc132)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc132)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc133)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc194)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc138)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc139)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc139)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc196)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc141)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc142)
        } loc(#loc197)
      } loc(#loc195)
    } loc(#loc192)
    cir.return loc(#loc109)
  } loc(#loc186)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_12.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":97:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":97:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":42:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":42:26)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/stdio.h":654:1)
#loc10 = loc("/usr/include/stdio.h":655:59)
#loc11 = loc("/usr/include/stdio.h":149:1)
#loc12 = loc("/usr/include/stdio.h":149:14)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":65:31)
#loc16 = loc("/usr/include/string.h":149:1)
#loc17 = loc("/usr/include/string.h":150:14)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":75:22)
#loc19 = loc("/usr/include/stdio.h":903:1)
#loc20 = loc("/usr/include/stdio.h":904:3)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":80:28)
#loc22 = loc("/usr/include/stdio.h":897:1)
#loc23 = loc("/usr/include/stdio.h":897:36)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":39:1)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":86:1)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":41:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":41:12)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":43:12)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":43:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":44:5)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":76:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":44:8)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":44:33)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":45:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":71:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":73:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":46:9)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":70:9)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":48:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":48:41)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":48:30)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":48:37)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":50:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":69:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":50:17)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":50:21)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":50:31)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":51:13)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":53:17)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":68:17)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":53:27)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":53:32)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":53:31)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":53:47)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":53:51)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":53:61)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":53:21)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":53:71)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":54:17)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":62:17)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":64:17)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":57:31)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":57:38)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":57:21)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":57:42)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":58:21)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":61:21)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":58:25)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":58:35)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":58:37)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":58:40)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":58:45)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":58:53)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":58:54)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":58:59)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":59:21)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":60:43)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":60:25)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":60:30)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":60:38)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":60:39)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":65:21)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":67:37)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":67:21)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":67:26)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":67:33)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":75:9)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":75:16)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":77:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":85:5)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":78:9)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":78:15)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":80:22)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":80:16)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":80:9)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":80:31)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":81:9)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":84:9)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":81:13)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":81:21)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":82:9)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":83:20)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":83:13)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":120:1)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":123:1)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":122:5)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":122:13)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":94:1)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":118:1)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":96:5)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":96:12)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":98:12)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":98:5)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":99:5)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":108:5)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":99:8)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":99:33)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":100:5)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":103:5)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":105:5)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":102:9)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":102:16)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":102:22)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":107:9)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":107:16)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":107:22)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":109:5)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":117:5)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":110:9)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":110:15)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":112:22)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":112:28)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":112:16)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":112:9)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":112:31)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":113:9)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":116:9)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":113:13)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":113:21)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":114:9)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":115:20)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_popen_12.c":115:13)
#loc143 = loc(fused[#loc1, #loc2])
#loc144 = loc(fused[#loc3, #loc4])
#loc145 = loc(fused[#loc5, #loc6])
#loc146 = loc(fused[#loc7, #loc8])
#loc147 = loc(fused[#loc9, #loc10])
#loc148 = loc(fused[#loc11, #loc12])
#loc149 = loc(fused[#loc13, #loc14])
#loc150 = loc(fused[#loc16, #loc17])
#loc151 = loc(fused[#loc19, #loc20])
#loc152 = loc(fused[#loc22, #loc23])
#loc153 = loc(fused[#loc24, #loc25])
#loc154 = loc(fused[#loc26, #loc27])
#loc155 = loc(fused[#loc29, #loc28])
#loc156 = loc(fused[#loc30, #loc31])
#loc157 = loc(fused[#loc32, #loc33])
#loc158 = loc(fused[#loc34, #loc35, #loc36, #loc31])
#loc159 = loc(fused[#loc37, #loc38])
#loc160 = loc(fused[#loc39, #loc40])
#loc161 = loc(fused[#loc43, #loc44])
#loc162 = loc(fused[#loc45, #loc46])
#loc163 = loc(fused[#loc45, #loc47])
#loc164 = loc(fused[#loc48, #loc44])
#loc165 = loc(fused[#loc49, #loc50])
#loc166 = loc(fused[#loc54, #loc55])
#loc167 = loc(fused[#loc57, #loc58])
#loc168 = loc(fused[#loc59, #loc60, #loc61, #loc50])
#loc169 = loc(fused[#loc64, #loc65])
#loc170 = loc(fused[#loc66, #loc67])
#loc171 = loc(fused[#loc68, #loc69])
#loc172 = loc(fused[#loc72, #loc73])
#loc173 = loc(fused[#loc71, #loc75])
#loc174 = loc(fused[#loc76, #loc67])
#loc175 = loc(fused[#loc79, #loc80])
#loc176 = loc(fused[#loc78, #loc77])
#loc177 = loc(fused[#loc84, #loc83])
#loc178 = loc(fused[#loc89, #loc90])
#loc179 = loc(fused[#loc91, #loc92])
#loc180 = loc(fused[#loc95, #loc96])
#loc181 = loc(fused[#loc97, #loc98])
#loc182 = loc(fused[#loc99, #loc100])
#loc183 = loc(fused[#loc101, #loc98])
#loc184 = loc(fused[#loc104, #loc105])
#loc185 = loc(fused[#loc106, #loc107])
#loc186 = loc(fused[#loc108, #loc109])
#loc187 = loc(fused[#loc110, #loc111])
#loc188 = loc(fused[#loc113, #loc112])
#loc189 = loc(fused[#loc114, #loc115])
#loc190 = loc(fused[#loc116, #loc117])
#loc191 = loc(fused[#loc118, #loc119, #loc120, #loc115])
#loc192 = loc(fused[#loc127, #loc128])
#loc193 = loc(fused[#loc129, #loc130])
#loc194 = loc(fused[#loc134, #loc135])
#loc195 = loc(fused[#loc136, #loc137])
#loc196 = loc(fused[#loc138, #loc139])
#loc197 = loc(fused[#loc140, #loc137])
