!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc67 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":83:10)
#loc68 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":83:14)
#loc69 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":83:20)
#loc70 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":83:32)
#loc154 = loc(fused[#loc67, #loc68])
#loc155 = loc(fused[#loc69, #loc70])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc129)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc130)
  cir.func private @CWE124_Buffer_Underwrite__malloc_char_ncpy_66b_badSink(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc131)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_ncpy_66_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc133)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc134)
    %2 = cir.alloca !cir.array<!cir.ptr<!s8i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc135)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    cir.br ^bb1 loc(#loc137)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc19)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc20)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc138)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc139)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc19)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc140)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    cir.br ^bb2 loc(#loc141)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc26)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc142)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc143)
  ^bb3:  // pred: ^bb2
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc30)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
    cir.br ^bb4 loc(#loc24)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc24)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc32)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc33)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc33)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc144)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc37)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc39)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc39)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc41)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc145)
    %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %33 = cir.const #cir.int<8> : !s32i loc(#loc43)
    %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc43)
    %35 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc44)
    cir.store %35, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    cir.br ^bb6 loc(#loc18)
  ^bb6:  // pred: ^bb5
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %37 = cir.const #cir.int<2> : !s32i loc(#loc47)
    %38 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc48)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!cir.ptr<!s8i>>, %37 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc48)
    cir.store %36, %39 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    %40 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc49)
    cir.call @CWE124_Buffer_Underwrite__malloc_char_ncpy_66b_badSink(%40) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc50)
    cir.return loc(#loc8)
  } loc(#loc132)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_ncpy_66_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    cir.return loc(#loc52)
  } loc(#loc148)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc150)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc151)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc64)
  cir.func @main(%arg0: !s32i loc(fused[#loc67, #loc68]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc69, #loc70])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc154)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc155)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc66)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc71)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc71)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc72)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc73)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc73)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc74)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc61)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__malloc_char_ncpy_66_good : !cir.ptr<!cir.func<!void ()>> loc(#loc156)
    cir.call @CWE124_Buffer_Underwrite__malloc_char_ncpy_66_good() : () -> () loc(#loc76)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc62)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc63)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__malloc_char_ncpy_66_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call @CWE124_Buffer_Underwrite__malloc_char_ncpy_66_bad() : () -> () loc(#loc80)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc64)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc83)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.return %17 : !s32i loc(#loc158)
  } loc(#loc153)
  cir.func private @CWE124_Buffer_Underwrite__malloc_char_ncpy_66b_goodG2BSink(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc159)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %2 = cir.alloca !cir.array<!cir.ptr<!s8i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc163)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc95)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    cir.br ^bb1 loc(#loc165)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc99)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc100)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc100)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc166)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc167)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc99)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc168)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    cir.br ^bb2 loc(#loc169)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc106)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc106)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc170)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc171)
  ^bb3:  // pred: ^bb2
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc108)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc110)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc108)
    cir.br ^bb4 loc(#loc104)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc104)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc112)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc113)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc113)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc113)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc172)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc117)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc119)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc119)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc121)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc173)
    %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
    cir.store %32, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
    cir.br ^bb6 loc(#loc98)
  ^bb6:  // pred: ^bb5
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
    %34 = cir.const #cir.int<2> : !s32i loc(#loc125)
    %35 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!cir.ptr<!s8i>>, %34 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
    cir.store %33, %36 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    %37 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    cir.call @CWE124_Buffer_Underwrite__malloc_char_ncpy_66b_goodG2BSink(%37) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc128)
    cir.return loc(#loc88)
  } loc(#loc160)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":24:1)
#loc6 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":24:79)
#loc7 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":26:1)
#loc8 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":42:1)
#loc9 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":32:9)
#loc10 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":32:60)
#loc11 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":28:5)
#loc12 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":28:12)
#loc13 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":29:5)
#loc14 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":29:23)
#loc15 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":30:12)
#loc16 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":30:5)
#loc17 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":31:5)
#loc18 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":38:5)
#loc19 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":32:37)
#loc20 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":32:44)
#loc21 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":32:48)
#loc22 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":32:59)
#loc23 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":33:9)
#loc24 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":33:43)
#loc25 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":33:13)
#loc26 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":33:27)
#loc27 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":33:33)
#loc28 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":33:34)
#loc29 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":33:40)
#loc30 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":33:39)
#loc31 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":34:16)
#loc32 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":34:28)
#loc33 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":34:33)
#loc34 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":34:37)
#loc35 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":34:9)
#loc36 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":34:38)
#loc37 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":35:29)
#loc38 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":35:9)
#loc39 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":35:20)
#loc40 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":35:24)
#loc41 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":35:25)
#loc42 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":37:16)
#loc43 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":37:29)
#loc44 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":37:27)
#loc45 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":37:9)
#loc46 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":40:20)
#loc47 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":40:15)
#loc48 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":40:5)
#loc49 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":41:60)
#loc50 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":41:5)
#loc51 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":68:1)
#loc52 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":71:1)
#loc53 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":70:5)
#loc54 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":70:13)
#loc55 = loc("/usr/include/stdlib.h":575:1)
#loc56 = loc("/usr/include/stdlib.h":575:41)
#loc57 = loc("/usr/include/time.h":76:1)
#loc58 = loc("/usr/include/time.h":76:38)
#loc59 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc60 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc61 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":88:15)
#loc62 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":90:15)
#loc63 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":93:15)
#loc64 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":95:15)
#loc65 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":83:1)
#loc66 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":98:1)
#loc71 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":84:1)
#loc72 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":86:27)
#loc73 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":86:22)
#loc74 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":86:5)
#loc75 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":88:5)
#loc76 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":89:5)
#loc77 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":89:56)
#loc78 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":90:5)
#loc79 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":93:5)
#loc80 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":94:5)
#loc81 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":94:55)
#loc82 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":95:5)
#loc83 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":97:12)
#loc84 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":97:5)
#loc85 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":49:1)
#loc86 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":49:83)
#loc87 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":51:1)
#loc88 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":66:1)
#loc89 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":57:9)
#loc90 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":57:60)
#loc91 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":53:5)
#loc92 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":53:12)
#loc93 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":54:5)
#loc94 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":54:23)
#loc95 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":55:12)
#loc96 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":55:5)
#loc97 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":56:5)
#loc98 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":63:5)
#loc99 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":57:37)
#loc100 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":57:44)
#loc101 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":57:48)
#loc102 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":57:59)
#loc103 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":58:9)
#loc104 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":58:43)
#loc105 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":58:13)
#loc106 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":58:27)
#loc107 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":58:33)
#loc108 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":58:34)
#loc109 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":58:40)
#loc110 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":58:39)
#loc111 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":59:16)
#loc112 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":59:28)
#loc113 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":59:33)
#loc114 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":59:37)
#loc115 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":59:9)
#loc116 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":59:38)
#loc117 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":60:29)
#loc118 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":60:9)
#loc119 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":60:20)
#loc120 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":60:24)
#loc121 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":60:25)
#loc122 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":62:16)
#loc123 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":62:9)
#loc124 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":64:20)
#loc125 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":64:15)
#loc126 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":64:5)
#loc127 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":65:64)
#loc128 = loc("CWE124_Buffer_Underwrite__malloc_char_ncpy_66a.c":65:5)
#loc129 = loc(fused[#loc1, #loc2])
#loc130 = loc(fused[#loc3, #loc4])
#loc131 = loc(fused[#loc5, #loc6])
#loc132 = loc(fused[#loc7, #loc8])
#loc133 = loc(fused[#loc9, #loc10])
#loc134 = loc(fused[#loc11, #loc12])
#loc135 = loc(fused[#loc13, #loc14])
#loc136 = loc(fused[#loc16, #loc15])
#loc137 = loc(fused[#loc17, #loc18])
#loc138 = loc(fused[#loc21, #loc22])
#loc139 = loc(fused[#loc20, #loc22])
#loc140 = loc(fused[#loc19, #loc10])
#loc141 = loc(fused[#loc23, #loc24])
#loc142 = loc(fused[#loc25, #loc26])
#loc143 = loc(fused[#loc27, #loc24])
#loc144 = loc(fused[#loc35, #loc36])
#loc145 = loc(fused[#loc38, #loc37])
#loc146 = loc(fused[#loc45, #loc43])
#loc147 = loc(fused[#loc48, #loc46])
#loc148 = loc(fused[#loc51, #loc52])
#loc149 = loc(fused[#loc53, #loc54])
#loc150 = loc(fused[#loc55, #loc56])
#loc151 = loc(fused[#loc57, #loc58])
#loc152 = loc(fused[#loc59, #loc60])
#loc153 = loc(fused[#loc65, #loc66])
#loc156 = loc(fused[#loc76, #loc77])
#loc157 = loc(fused[#loc80, #loc81])
#loc158 = loc(fused[#loc84, #loc83])
#loc159 = loc(fused[#loc85, #loc86])
#loc160 = loc(fused[#loc87, #loc88])
#loc161 = loc(fused[#loc89, #loc90])
#loc162 = loc(fused[#loc91, #loc92])
#loc163 = loc(fused[#loc93, #loc94])
#loc164 = loc(fused[#loc96, #loc95])
#loc165 = loc(fused[#loc97, #loc98])
#loc166 = loc(fused[#loc101, #loc102])
#loc167 = loc(fused[#loc100, #loc102])
#loc168 = loc(fused[#loc99, #loc90])
#loc169 = loc(fused[#loc103, #loc104])
#loc170 = loc(fused[#loc105, #loc106])
#loc171 = loc(fused[#loc107, #loc104])
#loc172 = loc(fused[#loc115, #loc116])
#loc173 = loc(fused[#loc118, #loc117])
#loc174 = loc(fused[#loc123, #loc122])
#loc175 = loc(fused[#loc126, #loc124])
