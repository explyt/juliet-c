!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc10 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":27:25)
#loc11 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":27:32)
#loc73 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":58:29)
#loc74 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":58:36)
#loc141 = loc(fused[#loc10, #loc11])
#loc166 = loc(fused[#loc73, #loc74])
module @"/workspaces/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc137)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc138)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Fixed String\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc7)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc10, #loc11])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc9)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    %2 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc13)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc7)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc7)
    %6 = cir.call @strcpy(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc13)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    cir.return %8 : !cir.ptr<!s8i> loc(#loc142)
  } loc(#loc140)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"We have a match!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc19)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc144)
  cir.func no_proto @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc26)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc27)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc147)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc148)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc26)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    cir.scope {
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
      %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc152)
      cir.if %21 {
        %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc37)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc38)
        %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc39)
        cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc37)
      } loc(#loc153)
    } loc(#loc151)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc40)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc43)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc154)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %14 = cir.call @badSource(%13) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc45)
    cir.store %14, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc155)
    cir.scope {
      cir.for : cond {
        %18 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
        %19 = cir.load %18 : !cir.ptr<!s8i>, !s8i loc(#loc51)
        %20 = cir.cast(integral, %19 : !s8i), !s32i loc(#loc51)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc52)
        %22 = cir.cmp(ne, %20, %21) : !s32i, !cir.bool loc(#loc157)
        cir.condition(%22) loc(#loc53)
      } body {
        cir.scope {
          cir.scope {
            %18 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
            %19 = cir.load %18 : !cir.ptr<!s8i>, !s8i loc(#loc58)
            %20 = cir.cast(integral, %19 : !s8i), !s32i loc(#loc58)
            %21 = cir.const #cir.int<83> : !s32i loc(#loc59)
            %22 = cir.cmp(eq, %20, %21) : !s32i, !cir.bool loc(#loc160)
            cir.if %22 {
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc19)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc19)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc61)
              cir.break loc(#loc62)
            } loc(#loc161)
          } loc(#loc159)
        } loc(#loc158)
        cir.yield loc(#loc49)
      } step {
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc162)
        %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc162)
        cir.store %20, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
        cir.yield loc(#loc156)
      } loc(#loc156)
    } loc(#loc156)
    %15 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc65)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
    cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc65)
    cir.return loc(#loc23)
  } loc(#loc145)
  cir.func no_proto @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc164)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc69)
    cir.return loc(#loc68)
  } loc(#loc163)
  cir.func internal private @goodB2GSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc73, #loc74])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc166)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc72)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc75)
    %2 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc76)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc78)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc78)
    %6 = cir.call @strcpy(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc76)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
    cir.return %8 : !cir.ptr<!s8i> loc(#loc167)
  } loc(#loc165)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc168)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc87)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc88)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc88)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc171)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc172)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc87)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc173)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc96)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc96)
      %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc176)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc98)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc99)
        %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc100)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc98)
      } loc(#loc177)
    } loc(#loc175)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc101)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc104)
    cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc178)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    %14 = cir.call @goodB2GSource(%13) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc106)
    cir.store %14, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    cir.scope {
      %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc181)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc115)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc115)
        cir.store %20, %15 : !u64i, !cir.ptr<!u64i> loc(#loc183)
        cir.for : cond {
          %21 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc117)
          %22 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc118)
          %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
          %24 = cir.call @strlen(%23) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc118)
          %25 = cir.cmp(lt, %21, %24) : !u64i, !cir.bool loc(#loc184)
          cir.condition(%25) loc(#loc121)
        } body {
          cir.scope {
            cir.scope {
              %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
              %22 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc126)
              %23 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %22 : !u64i), !cir.ptr<!s8i> loc(#loc127)
              %24 = cir.load %23 : !cir.ptr<!s8i>, !s8i loc(#loc125)
              %25 = cir.cast(integral, %24 : !s8i), !s32i loc(#loc125)
              %26 = cir.const #cir.int<83> : !s32i loc(#loc128)
              %27 = cir.cmp(eq, %25, %26) : !s32i, !cir.bool loc(#loc187)
              cir.if %27 {
                %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc130)
                %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc130)
                cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc131)
                cir.break loc(#loc132)
              } loc(#loc188)
            } loc(#loc186)
          } loc(#loc185)
          cir.yield loc(#loc114)
        } step {
          %21 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc133)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc134)
          cir.store %22, %15 : !u64i, !cir.ptr<!u64i> loc(#loc189)
          cir.yield loc(#loc182)
        } loc(#loc182)
      } loc(#loc182)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc135)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc136)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc135)
    } loc(#loc180)
    cir.return loc(#loc84)
  } loc(#loc169)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":30:18)
#loc8 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":27:1)
#loc9 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":32:1)
#loc12 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":28:1)
#loc13 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":30:5)
#loc14 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":30:12)
#loc15 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":31:12)
#loc16 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":31:5)
#loc17 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":47:23)
#loc20 = loc("/usr/include/stdlib.h":687:1)
#loc21 = loc("/usr/include/stdlib.h":687:32)
#loc22 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":34:1)
#loc23 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":52:1)
#loc24 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":36:5)
#loc25 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":36:12)
#loc26 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":37:20)
#loc27 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":37:27)
#loc28 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":37:31)
#loc29 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":37:42)
#loc30 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":37:43)
#loc31 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":37:5)
#loc32 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":38:5)
#loc33 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":38:33)
#loc34 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":38:9)
#loc35 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":38:17)
#loc36 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":38:23)
#loc37 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":38:24)
#loc38 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":38:30)
#loc39 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":38:29)
#loc40 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":39:15)
#loc41 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":39:5)
#loc42 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":39:10)
#loc43 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":39:11)
#loc44 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":40:22)
#loc45 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":40:12)
#loc46 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":40:5)
#loc47 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":40:26)
#loc48 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":43:5)
#loc49 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":50:5)
#loc50 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":43:13)
#loc51 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":43:12)
#loc52 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":43:21)
#loc53 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":43:18)
#loc54 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":44:5)
#loc55 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":45:9)
#loc56 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":49:9)
#loc57 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":45:14)
#loc58 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":45:13)
#loc59 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":45:22)
#loc60 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":46:9)
#loc61 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":47:13)
#loc62 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":48:13)
#loc63 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":43:31)
#loc64 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":43:27)
#loc65 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":51:5)
#loc66 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":51:10)
#loc67 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":88:1)
#loc68 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":91:1)
#loc69 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":90:5)
#loc70 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":90:13)
#loc71 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":58:1)
#loc72 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":63:1)
#loc75 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":59:1)
#loc76 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":61:5)
#loc77 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":61:12)
#loc78 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":61:18)
#loc79 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":62:12)
#loc80 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":62:5)
#loc81 = loc("/usr/include/string.h":407:1)
#loc82 = loc("/usr/include/string.h":408:33)
#loc83 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":66:1)
#loc84 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":86:1)
#loc85 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":68:5)
#loc86 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":68:12)
#loc87 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":69:20)
#loc88 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":69:27)
#loc89 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":69:31)
#loc90 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":69:42)
#loc91 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":69:43)
#loc92 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":69:5)
#loc93 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":70:5)
#loc94 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":70:33)
#loc95 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":70:9)
#loc96 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":70:17)
#loc97 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":70:23)
#loc98 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":70:24)
#loc99 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":70:30)
#loc100 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":70:29)
#loc101 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":71:15)
#loc102 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":71:5)
#loc103 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":71:10)
#loc104 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":71:11)
#loc105 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":72:26)
#loc106 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":72:12)
#loc107 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":72:5)
#loc108 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":72:30)
#loc109 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":73:5)
#loc110 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":85:5)
#loc111 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":74:9)
#loc112 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":74:16)
#loc113 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":76:9)
#loc114 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":83:9)
#loc115 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":76:16)
#loc116 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":76:14)
#loc117 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":76:19)
#loc118 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":76:23)
#loc119 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":76:30)
#loc120 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":76:34)
#loc121 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":76:21)
#loc122 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":77:9)
#loc123 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":78:13)
#loc124 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":82:13)
#loc125 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":78:17)
#loc126 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":78:22)
#loc127 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":78:23)
#loc128 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":78:28)
#loc129 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":79:13)
#loc130 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":80:27)
#loc131 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":80:17)
#loc132 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":81:17)
#loc133 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":76:38)
#loc134 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":76:37)
#loc135 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":84:9)
#loc136 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_fixed_string_42.c":84:14)
#loc137 = loc(fused[#loc1, #loc2])
#loc138 = loc(fused[#loc3, #loc4])
#loc139 = loc(fused[#loc5, #loc6])
#loc140 = loc(fused[#loc8, #loc9])
#loc142 = loc(fused[#loc16, #loc15])
#loc143 = loc(fused[#loc17, #loc18])
#loc144 = loc(fused[#loc20, #loc21])
#loc145 = loc(fused[#loc22, #loc23])
#loc146 = loc(fused[#loc24, #loc25])
#loc147 = loc(fused[#loc28, #loc29])
#loc148 = loc(fused[#loc27, #loc29])
#loc149 = loc(fused[#loc26, #loc30])
#loc150 = loc(fused[#loc31, #loc30])
#loc151 = loc(fused[#loc32, #loc33])
#loc152 = loc(fused[#loc34, #loc35])
#loc153 = loc(fused[#loc36, #loc33])
#loc154 = loc(fused[#loc41, #loc40])
#loc155 = loc(fused[#loc46, #loc47])
#loc156 = loc(fused[#loc48, #loc49])
#loc157 = loc(fused[#loc51, #loc52])
#loc158 = loc(fused[#loc54, #loc49])
#loc159 = loc(fused[#loc55, #loc56])
#loc160 = loc(fused[#loc58, #loc59])
#loc161 = loc(fused[#loc60, #loc56])
#loc162 = loc(fused[#loc64, #loc63])
#loc163 = loc(fused[#loc67, #loc68])
#loc164 = loc(fused[#loc69, #loc70])
#loc165 = loc(fused[#loc71, #loc72])
#loc167 = loc(fused[#loc80, #loc79])
#loc168 = loc(fused[#loc81, #loc82])
#loc169 = loc(fused[#loc83, #loc84])
#loc170 = loc(fused[#loc85, #loc86])
#loc171 = loc(fused[#loc89, #loc90])
#loc172 = loc(fused[#loc88, #loc90])
#loc173 = loc(fused[#loc87, #loc91])
#loc174 = loc(fused[#loc92, #loc91])
#loc175 = loc(fused[#loc93, #loc94])
#loc176 = loc(fused[#loc95, #loc96])
#loc177 = loc(fused[#loc97, #loc94])
#loc178 = loc(fused[#loc102, #loc101])
#loc179 = loc(fused[#loc107, #loc108])
#loc180 = loc(fused[#loc109, #loc110])
#loc181 = loc(fused[#loc111, #loc112])
#loc182 = loc(fused[#loc113, #loc114])
#loc183 = loc(fused[#loc116, #loc115])
#loc184 = loc(fused[#loc117, #loc120])
#loc185 = loc(fused[#loc122, #loc114])
#loc186 = loc(fused[#loc123, #loc124])
#loc187 = loc(fused[#loc125, #loc128])
#loc188 = loc(fused[#loc129, #loc124])
#loc189 = loc(fused[#loc134, #loc133])
