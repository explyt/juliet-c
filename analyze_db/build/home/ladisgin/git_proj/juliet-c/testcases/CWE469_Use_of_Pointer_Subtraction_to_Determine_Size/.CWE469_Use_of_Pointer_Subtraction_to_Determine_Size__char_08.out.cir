!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc64 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":127:10)
#loc65 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":127:14)
#loc66 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":127:20)
#loc67 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":127:32)
#loc183 = loc(fused[#loc64, #loc65])
#loc184 = loc(fused[#loc66, #loc67])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE469_Use_of_Pointer_Subtraction_to_Determine_Size/CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.good2.string1 = #cir.const_array<"abc/opqrstu\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> loc(#loc156)
  cir.global "private" constant cir_private @__const.good1.string1 = #cir.const_array<"abc/opqrstu\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> loc(#loc157)
  cir.global "private" constant cir_private @__const.CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08_bad.string2 = #cir.const_array<"abc/opqrstu\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> loc(#loc158)
  cir.global "private" constant cir_private @__const.CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08_bad.string1 = #cir.const_array<"abc/opqrstu\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> loc(#loc159)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc160)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc161)
  cir.func private @printUnsignedLine(!u32i) loc(#loc162)
  cir.func no_proto @CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc165)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc19)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc19)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 12>, !cir.ptr<!cir.array<!s8i x 12>>, ["string1"] {alignment = 1 : i64} loc(#loc159)
          %4 = cir.alloca !cir.array<!s8i x 12>, !cir.ptr<!cir.array<!s8i x 12>>, ["string2"] {alignment = 1 : i64} loc(#loc158)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["slashInString1"] {alignment = 8 : i64} loc(#loc168)
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["indexOfSlashInString1"] {alignment = 8 : i64} loc(#loc169)
          %7 = cir.get_global @__const.CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08_bad.string1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc159)
          cir.copy %7 to %3 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc159)
          %8 = cir.get_global @__const.CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08_bad.string2 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc158)
          cir.copy %8 to %4 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc158)
          %9 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc28)
          %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc29)
          %11 = cir.const #cir.int<47> : !s32i loc(#loc30)
          %12 = cir.call @strchr(%10, %11) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc28)
          cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
          cir.scope {
            %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc36)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc172)
            cir.if %22 {
              %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc38)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc39)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc38)
            } loc(#loc173)
          } loc(#loc171)
          %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
          %14 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc41)
          %15 = cir.ptr_diff(%13, %14) : !cir.ptr<!s8i> -> !s64i loc(#loc174)
          %16 = cir.cast(integral, %15 : !s64i), !u64i loc(#loc174)
          cir.store %16, %6 : !u64i, !cir.ptr<!u64i> loc(#loc175)
          %17 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc44)
          %18 = cir.cast(integral, %17 : !u64i), !u32i loc(#loc44)
          cir.call @printUnsignedLine(%18) : (!u32i) -> () loc(#loc45)
        } loc(#loc167)
      } loc(#loc166)
    } loc(#loc164)
    cir.return loc(#loc16)
  } loc(#loc163)
  cir.func no_proto @CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc47)
  } loc(#loc176)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc179)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc180)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc181)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc61)
  cir.func @main(%arg0: !s32i loc(fused[#loc64, #loc65]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc66, #loc67])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc183)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc184)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc63)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc68)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc68)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc69)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc70)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc70)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc71)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc58)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %8 = cir.get_global @CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call @CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08_good() : () -> () loc(#loc73)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc59)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc60)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %13 = cir.get_global @CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call @CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08_bad() : () -> () loc(#loc77)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc61)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc80)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    cir.return %17 : !s32i loc(#loc187)
  } loc(#loc182)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc83)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc84)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc189)
    cir.return %2 : !s32i loc(#loc189)
  } loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc86)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc192)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc91)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc91)
      cir.if %2 {
        %3 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc86)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc86)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc96)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 12>, !cir.ptr<!cir.array<!s8i x 12>>, ["string1"] {alignment = 1 : i64} loc(#loc157)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["slashInString1"] {alignment = 8 : i64} loc(#loc195)
          %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["indexOfSlashInString1"] {alignment = 8 : i64} loc(#loc196)
          %6 = cir.get_global @__const.good1.string1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc157)
          cir.copy %6 to %3 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc157)
          %7 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc103)
          %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc104)
          %9 = cir.const #cir.int<47> : !s32i loc(#loc105)
          %10 = cir.call @strchr(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc103)
          cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc197)
          cir.scope {
            %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc111)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc111)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc199)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc113)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc114)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc113)
            } loc(#loc200)
          } loc(#loc198)
          %11 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
          %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc116)
          %13 = cir.ptr_diff(%11, %12) : !cir.ptr<!s8i> -> !s64i loc(#loc201)
          %14 = cir.cast(integral, %13 : !s64i), !u64i loc(#loc201)
          cir.store %14, %5 : !u64i, !cir.ptr<!u64i> loc(#loc202)
          %15 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc119)
          %16 = cir.cast(integral, %15 : !u64i), !u32i loc(#loc119)
          cir.call @printUnsignedLine(%16) : (!u32i) -> () loc(#loc120)
        } loc(#loc194)
      } loc(#loc193)
    } loc(#loc191)
    cir.return loc(#loc88)
  } loc(#loc190)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc122)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc123)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    cir.return %2 : !s32i loc(#loc204)
  } loc(#loc203)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc207)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc129)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc129)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 12>, !cir.ptr<!cir.array<!s8i x 12>>, ["string1"] {alignment = 1 : i64} loc(#loc156)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["slashInString1"] {alignment = 8 : i64} loc(#loc210)
          %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["indexOfSlashInString1"] {alignment = 8 : i64} loc(#loc211)
          %6 = cir.get_global @__const.good2.string1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc156)
          cir.copy %6 to %3 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc156)
          %7 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc138)
          %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc139)
          %9 = cir.const #cir.int<47> : !s32i loc(#loc140)
          %10 = cir.call @strchr(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc138)
          cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc212)
          cir.scope {
            %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc146)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc146)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc214)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc148)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc149)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc148)
            } loc(#loc215)
          } loc(#loc213)
          %11 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
          %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc151)
          %13 = cir.ptr_diff(%11, %12) : !cir.ptr<!s8i> -> !s64i loc(#loc216)
          %14 = cir.cast(integral, %13 : !s64i), !u64i loc(#loc216)
          cir.store %14, %5 : !u64i, !cir.ptr<!u64i> loc(#loc217)
          %15 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc154)
          %16 = cir.cast(integral, %15 : !u64i), !u32i loc(#loc154)
          cir.call @printUnsignedLine(%16) : (!u32i) -> () loc(#loc155)
        } loc(#loc209)
      } loc(#loc208)
    } loc(#loc206)
    cir.return loc(#loc126)
  } loc(#loc205)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE469_Use_of_Pointer_Subtraction_to_Determine_Size/CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":0:0)
#loc1 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":96:13)
#loc2 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":96:30)
#loc3 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":74:13)
#loc4 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":74:30)
#loc5 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":43:13)
#loc6 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":43:30)
#loc7 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":42:13)
#loc8 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":42:30)
#loc9 = loc("/usr/include/string.h":246:1)
#loc10 = loc("/usr/include/string.h":247:33)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":34:1)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":34:47)
#loc15 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":37:1)
#loc16 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":57:1)
#loc17 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":39:5)
#loc18 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":56:5)
#loc19 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":39:8)
#loc20 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":39:26)
#loc21 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":40:5)
#loc22 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":41:9)
#loc23 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":55:9)
#loc24 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":44:13)
#loc25 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":44:20)
#loc26 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":45:13)
#loc27 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":45:20)
#loc28 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":46:30)
#loc29 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":46:37)
#loc30 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":46:46)
#loc31 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":46:13)
#loc32 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":46:49)
#loc33 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":47:13)
#loc34 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":50:13)
#loc35 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":47:17)
#loc36 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":47:35)
#loc37 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":48:13)
#loc38 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":49:17)
#loc39 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":49:22)
#loc40 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":52:46)
#loc41 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":52:63)
#loc42 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":52:13)
#loc43 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":52:70)
#loc44 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":54:31)
#loc45 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":54:13)
#loc46 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":112:1)
#loc47 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":116:1)
#loc48 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":114:5)
#loc49 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":114:11)
#loc50 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":115:5)
#loc51 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":115:11)
#loc52 = loc("/usr/include/stdlib.h":575:1)
#loc53 = loc("/usr/include/stdlib.h":575:41)
#loc54 = loc("/usr/include/time.h":76:1)
#loc55 = loc("/usr/include/time.h":76:38)
#loc56 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc57 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc58 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":132:15)
#loc59 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":134:15)
#loc60 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":137:15)
#loc61 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":139:15)
#loc62 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":127:1)
#loc63 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":142:1)
#loc68 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":128:1)
#loc69 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":130:27)
#loc70 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":130:22)
#loc71 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":130:5)
#loc72 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":132:5)
#loc73 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":133:5)
#loc74 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":133:71)
#loc75 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":134:5)
#loc76 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":137:5)
#loc77 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":138:5)
#loc78 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":138:70)
#loc79 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":139:5)
#loc80 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":141:12)
#loc81 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":141:5)
#loc82 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":25:1)
#loc83 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":28:1)
#loc84 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":27:12)
#loc85 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":27:5)
#loc86 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":69:19)
#loc87 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":64:1)
#loc88 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":88:1)
#loc89 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":66:5)
#loc90 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":87:5)
#loc91 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":66:8)
#loc92 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":66:27)
#loc93 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":67:5)
#loc94 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":70:5)
#loc95 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":72:5)
#loc96 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":69:9)
#loc97 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":73:9)
#loc98 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":86:9)
#loc99 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":75:13)
#loc100 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":75:20)
#loc101 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":76:13)
#loc102 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":76:20)
#loc103 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":77:30)
#loc104 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":77:37)
#loc105 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":77:46)
#loc106 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":77:13)
#loc107 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":77:49)
#loc108 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":78:13)
#loc109 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":81:13)
#loc110 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":78:17)
#loc111 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":78:35)
#loc112 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":79:13)
#loc113 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":80:17)
#loc114 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":80:22)
#loc115 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":83:46)
#loc116 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":83:63)
#loc117 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":83:13)
#loc118 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":83:70)
#loc119 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":85:31)
#loc120 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":85:13)
#loc121 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":30:1)
#loc122 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":33:1)
#loc123 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":32:12)
#loc124 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":32:5)
#loc125 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":91:1)
#loc126 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":110:1)
#loc127 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":93:5)
#loc128 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":109:5)
#loc129 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":93:8)
#loc130 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":93:26)
#loc131 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":94:5)
#loc132 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":95:9)
#loc133 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":108:9)
#loc134 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":97:13)
#loc135 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":97:20)
#loc136 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":98:13)
#loc137 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":98:20)
#loc138 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":99:30)
#loc139 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":99:37)
#loc140 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":99:46)
#loc141 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":99:13)
#loc142 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":99:49)
#loc143 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":100:13)
#loc144 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":103:13)
#loc145 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":100:17)
#loc146 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":100:35)
#loc147 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":101:13)
#loc148 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":102:17)
#loc149 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":102:22)
#loc150 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":105:46)
#loc151 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":105:63)
#loc152 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":105:13)
#loc153 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":105:70)
#loc154 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":107:31)
#loc155 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":107:13)
#loc156 = loc(fused[#loc1, #loc2])
#loc157 = loc(fused[#loc3, #loc4])
#loc158 = loc(fused[#loc5, #loc6])
#loc159 = loc(fused[#loc7, #loc8])
#loc160 = loc(fused[#loc9, #loc10])
#loc161 = loc(fused[#loc11, #loc12])
#loc162 = loc(fused[#loc13, #loc14])
#loc163 = loc(fused[#loc15, #loc16])
#loc164 = loc(fused[#loc17, #loc18])
#loc165 = loc(fused[#loc19, #loc20])
#loc166 = loc(fused[#loc21, #loc18])
#loc167 = loc(fused[#loc22, #loc23])
#loc168 = loc(fused[#loc24, #loc25])
#loc169 = loc(fused[#loc26, #loc27])
#loc170 = loc(fused[#loc31, #loc32])
#loc171 = loc(fused[#loc33, #loc34])
#loc172 = loc(fused[#loc35, #loc36])
#loc173 = loc(fused[#loc37, #loc34])
#loc174 = loc(fused[#loc40, #loc41])
#loc175 = loc(fused[#loc42, #loc43])
#loc176 = loc(fused[#loc46, #loc47])
#loc177 = loc(fused[#loc48, #loc49])
#loc178 = loc(fused[#loc50, #loc51])
#loc179 = loc(fused[#loc52, #loc53])
#loc180 = loc(fused[#loc54, #loc55])
#loc181 = loc(fused[#loc56, #loc57])
#loc182 = loc(fused[#loc62, #loc63])
#loc185 = loc(fused[#loc73, #loc74])
#loc186 = loc(fused[#loc77, #loc78])
#loc187 = loc(fused[#loc81, #loc80])
#loc188 = loc(fused[#loc82, #loc83])
#loc189 = loc(fused[#loc85, #loc84])
#loc190 = loc(fused[#loc87, #loc88])
#loc191 = loc(fused[#loc89, #loc90])
#loc192 = loc(fused[#loc91, #loc92])
#loc193 = loc(fused[#loc93, #loc94, #loc95, #loc90])
#loc194 = loc(fused[#loc97, #loc98])
#loc195 = loc(fused[#loc99, #loc100])
#loc196 = loc(fused[#loc101, #loc102])
#loc197 = loc(fused[#loc106, #loc107])
#loc198 = loc(fused[#loc108, #loc109])
#loc199 = loc(fused[#loc110, #loc111])
#loc200 = loc(fused[#loc112, #loc109])
#loc201 = loc(fused[#loc115, #loc116])
#loc202 = loc(fused[#loc117, #loc118])
#loc203 = loc(fused[#loc121, #loc122])
#loc204 = loc(fused[#loc124, #loc123])
#loc205 = loc(fused[#loc125, #loc126])
#loc206 = loc(fused[#loc127, #loc128])
#loc207 = loc(fused[#loc129, #loc130])
#loc208 = loc(fused[#loc131, #loc128])
#loc209 = loc(fused[#loc132, #loc133])
#loc210 = loc(fused[#loc134, #loc135])
#loc211 = loc(fused[#loc136, #loc137])
#loc212 = loc(fused[#loc141, #loc142])
#loc213 = loc(fused[#loc143, #loc144])
#loc214 = loc(fused[#loc145, #loc146])
#loc215 = loc(fused[#loc147, #loc144])
#loc216 = loc(fused[#loc150, #loc151])
#loc217 = loc(fused[#loc152, #loc153])
