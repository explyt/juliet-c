!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__int_min_predec_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc136)
  cir.func no_proto @CWE191_Integer_Underflow__int_min_predec_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc138)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc139)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc140)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc141)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc12)
    cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.br ^bb1 loc(#loc143)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc16)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    cir.br ^bb2 loc(#loc143)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc18)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc145)
    cir.brcond %8 ^bb3, ^bb7 loc(#loc20)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc146)
  ^bb4:  // pred: ^bb3
    %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc22)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc22)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc22)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.br ^bb5 loc(#loc15)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc15)
  ^bb6:  // pred: ^bb5
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc25)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    cir.br ^bb2 loc(#loc143)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc15)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc149)
  ^bb9:  // pred: ^bb8
    %15 = cir.const #cir.int<0> : !s32i loc(#loc28)
    cir.store %15, %2 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    cir.br ^bb10 loc(#loc149)
  ^bb10:  // 2 preds: ^bb9, ^bb16
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc151)
    cir.brcond %18 ^bb11, ^bb17 loc(#loc32)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc152)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc153)
  ^bb13:  // pred: ^bb12
    %19 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    %20 = cir.unary(dec, %19) nsw : !s32i, !s32i loc(#loc36)
    cir.store %20, %3 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc6)
    cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc39)
    cir.br ^bb14 loc(#loc35)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc27)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc27)
  ^bb16:  // pred: ^bb15
    %23 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    %24 = cir.unary(inc, %23) nsw : !s32i, !s32i loc(#loc41)
    cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc155)
    cir.br ^bb10 loc(#loc149)
  ^bb17:  // pred: ^bb10
    cir.br ^bb18 loc(#loc27)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc4)
  } loc(#loc137)
  cir.func no_proto @CWE191_Integer_Underflow__int_min_predec_17_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc157)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc44)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc158)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc46)
    cir.return loc(#loc43)
  } loc(#loc156)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc50)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc161)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc162)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc163)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc164)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc60)
    cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc165)
    cir.br ^bb1 loc(#loc166)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc64)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    cir.br ^bb2 loc(#loc166)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc168)
    cir.brcond %8 ^bb3, ^bb7 loc(#loc68)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc169)
  ^bb4:  // pred: ^bb3
    %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc70)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc70)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc70)
    cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    cir.br ^bb5 loc(#loc63)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc63)
  ^bb6:  // pred: ^bb5
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc73)
    cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    cir.br ^bb2 loc(#loc166)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc63)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc172)
  ^bb9:  // pred: ^bb8
    %15 = cir.const #cir.int<0> : !s32i loc(#loc76)
    cir.store %15, %2 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.br ^bb10 loc(#loc172)
  ^bb10:  // 2 preds: ^bb9, ^bb19
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc174)
    cir.brcond %18 ^bb11, ^bb20 loc(#loc80)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc175)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc176)
  ^bb13:  // pred: ^bb12
    %19 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %20 = cir.const #cir.int<2147483647> : !s32i loc(#loc85)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc85)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc85)
    %24 = cir.cmp(gt, %19, %23) : !s32i, !cir.bool loc(#loc177)
    cir.brcond %24 ^bb14, ^bb15 loc(#loc178)
  ^bb14:  // pred: ^bb13
    %25 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %26 = cir.unary(dec, %25) nsw : !s32i, !s32i loc(#loc89)
    cir.store %26, %3 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    %27 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    cir.store %27, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc92)
    cir.br ^bb16 loc(#loc87)
  ^bb15:  // pred: ^bb13
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc50)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    cir.br ^bb16 loc(#loc83)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc83)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc75)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc75)
  ^bb19:  // pred: ^bb18
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %32 = cir.unary(inc, %31) nsw : !s32i, !s32i loc(#loc95)
    cir.store %32, %2 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.br ^bb10 loc(#loc172)
  ^bb20:  // pred: ^bb10
    cir.br ^bb21 loc(#loc75)
  ^bb21:  // pred: ^bb20
    cir.return loc(#loc52)
  } loc(#loc160)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc182)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc183)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc184)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc185)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc105)
    cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    cir.br ^bb1 loc(#loc187)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc109)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    cir.br ^bb2 loc(#loc187)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc189)
    cir.brcond %8 ^bb3, ^bb7 loc(#loc113)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc190)
  ^bb4:  // pred: ^bb3
    %9 = cir.const #cir.int<2> : !s32i loc(#loc115)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc116)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    cir.br ^bb5 loc(#loc108)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc108)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %12 = cir.unary(inc, %11) nsw : !s32i, !s32i loc(#loc119)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    cir.br ^bb2 loc(#loc187)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc108)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc193)
  ^bb9:  // pred: ^bb8
    %13 = cir.const #cir.int<0> : !s32i loc(#loc122)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    cir.br ^bb10 loc(#loc193)
  ^bb10:  // 2 preds: ^bb9, ^bb16
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc195)
    cir.brcond %16 ^bb11, ^bb17 loc(#loc126)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc196)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc197)
  ^bb13:  // pred: ^bb12
    %17 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %18 = cir.unary(dec, %17) nsw : !s32i, !s32i loc(#loc130)
    cir.store %18, %3 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    %19 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    cir.store %19, %0 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc133)
    cir.br ^bb14 loc(#loc129)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc121)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc121)
  ^bb16:  // pred: ^bb15
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc135)
    cir.store %22, %2 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    cir.br ^bb10 loc(#loc193)
  ^bb17:  // pred: ^bb10
    cir.br ^bb18 loc(#loc121)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc97)
  } loc(#loc181)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__int_min_predec_17.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":22:1)
#loc4 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":42:1)
#loc5 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":38:13)
#loc6 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":38:26)
#loc7 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":24:5)
#loc8 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":24:9)
#loc9 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":24:11)
#loc10 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":25:5)
#loc11 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":25:9)
#loc12 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":27:12)
#loc13 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":27:5)
#loc14 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":28:5)
#loc15 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":32:5)
#loc16 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":28:13)
#loc17 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":28:9)
#loc18 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":28:16)
#loc19 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":28:20)
#loc20 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":28:18)
#loc21 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":29:5)
#loc22 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":31:16)
#loc23 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":31:9)
#loc24 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":28:24)
#loc25 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":28:23)
#loc26 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":33:5)
#loc27 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":41:5)
#loc28 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":33:13)
#loc29 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":33:9)
#loc30 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":33:16)
#loc31 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":33:20)
#loc32 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":33:18)
#loc33 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":34:5)
#loc34 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":35:9)
#loc35 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":40:9)
#loc36 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":37:13)
#loc37 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":37:15)
#loc38 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":39:26)
#loc39 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":39:13)
#loc40 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":33:24)
#loc41 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":33:23)
#loc42 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":99:1)
#loc43 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":103:1)
#loc44 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":101:5)
#loc45 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":101:13)
#loc46 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":102:5)
#loc47 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":102:13)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc50 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":71:23)
#loc51 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":49:1)
#loc52 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":74:1)
#loc53 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":66:13)
#loc54 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":66:26)
#loc55 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":51:5)
#loc56 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":51:9)
#loc57 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":51:11)
#loc58 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":52:5)
#loc59 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":52:9)
#loc60 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":54:12)
#loc61 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":54:5)
#loc62 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":55:5)
#loc63 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":59:5)
#loc64 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":55:13)
#loc65 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":55:9)
#loc66 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":55:16)
#loc67 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":55:20)
#loc68 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":55:18)
#loc69 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":56:5)
#loc70 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":58:16)
#loc71 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":58:9)
#loc72 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":55:24)
#loc73 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":55:23)
#loc74 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":60:5)
#loc75 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":73:5)
#loc76 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":60:13)
#loc77 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":60:9)
#loc78 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":60:16)
#loc79 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":60:20)
#loc80 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":60:18)
#loc81 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":61:5)
#loc82 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":63:9)
#loc83 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":72:9)
#loc84 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":63:13)
#loc85 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":63:20)
#loc86 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":64:9)
#loc87 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":68:9)
#loc88 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":70:9)
#loc89 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":65:13)
#loc90 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":65:15)
#loc91 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":67:26)
#loc92 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":67:13)
#loc93 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":71:13)
#loc94 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":60:24)
#loc95 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":60:23)
#loc96 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":77:1)
#loc97 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":97:1)
#loc98 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":93:13)
#loc99 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":93:26)
#loc100 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":79:5)
#loc101 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":79:9)
#loc102 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":79:11)
#loc103 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":80:5)
#loc104 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":80:9)
#loc105 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":82:12)
#loc106 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":82:5)
#loc107 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":83:5)
#loc108 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":87:5)
#loc109 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":83:13)
#loc110 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":83:9)
#loc111 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":83:16)
#loc112 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":83:20)
#loc113 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":83:18)
#loc114 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":84:5)
#loc115 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":86:17)
#loc116 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":86:16)
#loc117 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":86:9)
#loc118 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":83:24)
#loc119 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":83:23)
#loc120 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":88:5)
#loc121 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":96:5)
#loc122 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":88:13)
#loc123 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":88:9)
#loc124 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":88:16)
#loc125 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":88:20)
#loc126 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":88:18)
#loc127 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":89:5)
#loc128 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":90:9)
#loc129 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":95:9)
#loc130 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":92:13)
#loc131 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":92:15)
#loc132 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":94:26)
#loc133 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":94:13)
#loc134 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":88:24)
#loc135 = loc("CWE191_Integer_Underflow__int_min_predec_17.c":88:23)
#loc136 = loc(fused[#loc1, #loc2])
#loc137 = loc(fused[#loc3, #loc4])
#loc138 = loc(fused[#loc5, #loc6])
#loc139 = loc(fused[#loc7, #loc8])
#loc140 = loc(fused[#loc7, #loc9])
#loc141 = loc(fused[#loc10, #loc11])
#loc142 = loc(fused[#loc13, #loc12])
#loc143 = loc(fused[#loc14, #loc15])
#loc144 = loc(fused[#loc17, #loc16])
#loc145 = loc(fused[#loc18, #loc19])
#loc146 = loc(fused[#loc21, #loc15])
#loc147 = loc(fused[#loc23, #loc22])
#loc148 = loc(fused[#loc25, #loc24])
#loc149 = loc(fused[#loc26, #loc27])
#loc150 = loc(fused[#loc29, #loc28])
#loc151 = loc(fused[#loc30, #loc31])
#loc152 = loc(fused[#loc33, #loc27])
#loc153 = loc(fused[#loc34, #loc35])
#loc154 = loc(fused[#loc36, #loc37])
#loc155 = loc(fused[#loc41, #loc40])
#loc156 = loc(fused[#loc42, #loc43])
#loc157 = loc(fused[#loc44, #loc45])
#loc158 = loc(fused[#loc46, #loc47])
#loc159 = loc(fused[#loc48, #loc49])
#loc160 = loc(fused[#loc51, #loc52])
#loc161 = loc(fused[#loc53, #loc54])
#loc162 = loc(fused[#loc55, #loc56])
#loc163 = loc(fused[#loc55, #loc57])
#loc164 = loc(fused[#loc58, #loc59])
#loc165 = loc(fused[#loc61, #loc60])
#loc166 = loc(fused[#loc62, #loc63])
#loc167 = loc(fused[#loc65, #loc64])
#loc168 = loc(fused[#loc66, #loc67])
#loc169 = loc(fused[#loc69, #loc63])
#loc170 = loc(fused[#loc71, #loc70])
#loc171 = loc(fused[#loc73, #loc72])
#loc172 = loc(fused[#loc74, #loc75])
#loc173 = loc(fused[#loc77, #loc76])
#loc174 = loc(fused[#loc78, #loc79])
#loc175 = loc(fused[#loc81, #loc75])
#loc176 = loc(fused[#loc82, #loc83])
#loc177 = loc(fused[#loc84, #loc85])
#loc178 = loc(fused[#loc86, #loc87, #loc88, #loc83])
#loc179 = loc(fused[#loc89, #loc90])
#loc180 = loc(fused[#loc95, #loc94])
#loc181 = loc(fused[#loc96, #loc97])
#loc182 = loc(fused[#loc98, #loc99])
#loc183 = loc(fused[#loc100, #loc101])
#loc184 = loc(fused[#loc100, #loc102])
#loc185 = loc(fused[#loc103, #loc104])
#loc186 = loc(fused[#loc106, #loc105])
#loc187 = loc(fused[#loc107, #loc108])
#loc188 = loc(fused[#loc110, #loc109])
#loc189 = loc(fused[#loc111, #loc112])
#loc190 = loc(fused[#loc114, #loc108])
#loc191 = loc(fused[#loc117, #loc115])
#loc192 = loc(fused[#loc119, #loc118])
#loc193 = loc(fused[#loc120, #loc121])
#loc194 = loc(fused[#loc123, #loc122])
#loc195 = loc(fused[#loc124, #loc125])
#loc196 = loc(fused[#loc127, #loc121])
#loc197 = loc(fused[#loc128, #loc129])
#loc198 = loc(fused[#loc130, #loc131])
#loc199 = loc(fused[#loc135, #loc134])
