!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc57 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":117:10)
#loc58 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":117:14)
#loc59 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":117:20)
#loc60 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":117:32)
#loc216 = loc(fused[#loc57, #loc58])
#loc217 = loc(fused[#loc59, #loc60])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc193)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc194)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc195)
  cir.func private @printIntLine(!s32i) loc(#loc196)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_malloc_use_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc198)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc199)
    cir.br ^bb1 loc(#loc200)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc201)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc17)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %4 ^bb2, ^bb9 loc(#loc202)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc203)
  ^bb3:  // pred: ^bb2
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc22)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc204)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc22)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc205)
    cir.store %8, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc198)
    cir.br ^bb4 loc(#loc206)
  ^bb4:  // pred: ^bb3
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc27)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc28)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc207)
    cir.brcond %12 ^bb5, ^bb6 loc(#loc208)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc30)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc32)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
    cir.br ^bb6 loc(#loc26)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc26)
  ^bb7:  // pred: ^bb6
    %16 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc14)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
    cir.store %17, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc199)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc34)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc34)
    cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc35)
    %20 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc36)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc38)
    cir.br ^bb8 loc(#loc21)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc16)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc16)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc10)
  } loc(#loc197)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_malloc_use_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc210)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc211)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    cir.return loc(#loc40)
  } loc(#loc209)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc212)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc213)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc214)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc54)
  cir.func @main(%arg0: !s32i loc(fused[#loc57, #loc58]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc59, #loc60])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc216)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc217)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc56)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc61)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc61)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc62)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc63)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc63)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc64)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc51)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %8 = cir.get_global @CWE758_Undefined_Behavior__int_pointer_malloc_use_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc218)
    cir.call @CWE758_Undefined_Behavior__int_pointer_malloc_use_08_good() : () -> () loc(#loc66)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc52)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc53)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %13 = cir.get_global @CWE758_Undefined_Behavior__int_pointer_malloc_use_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc219)
    cir.call @CWE758_Undefined_Behavior__int_pointer_malloc_use_08_bad() : () -> () loc(#loc70)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc54)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc73)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc220)
    cir.return %17 : !s32i loc(#loc220)
  } loc(#loc215)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc76)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc77)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc222)
    cir.return %2 : !s32i loc(#loc222)
  } loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc79)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc224)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc225)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc226)
    cir.br ^bb1 loc(#loc227)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc228)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc90)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc90)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc229)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc79)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.br ^bb16 loc(#loc93)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc230)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc98)
    %9 = cir.const #cir.int<8> : !u64i loc(#loc231)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc98)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc232)
    cir.store %11, %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc225)
    cir.br ^bb5 loc(#loc233)
  ^bb5:  // pred: ^bb4
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc103)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc104)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc104)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc234)
    cir.brcond %15 ^bb6, ^bb7 loc(#loc235)
  ^bb6:  // pred: ^bb5
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc106)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc108)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc106)
    cir.br ^bb7 loc(#loc102)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc102)
  ^bb8:  // pred: ^bb7
    %19 = cir.const #cir.int<4> : !u64i loc(#loc236)
    %20 = cir.call @malloc(%19) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc111)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc237)
    cir.store %21, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc238)
    cir.br ^bb9 loc(#loc239)
  ^bb9:  // pred: ^bb8
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc116)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc117)
    %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!s32i>, !cir.bool loc(#loc240)
    cir.brcond %25 ^bb10, ^bb11 loc(#loc241)
  ^bb10:  // pred: ^bb9
    %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc119)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc121)
    cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc119)
    cir.br ^bb11 loc(#loc115)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc115)
  ^bb12:  // pred: ^bb11
    %29 = cir.const #cir.int<5> : !s32i loc(#loc122)
    %30 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc123)
    cir.store %29, %30 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc125)
    %32 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc126)
    cir.store %31, %32 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc243)
    cir.br ^bb13 loc(#loc244)
  ^bb13:  // pred: ^bb12
    %33 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc87)
    %34 = cir.load %33 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc130)
    cir.store %34, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc226)
    %35 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc131)
    %36 = cir.load %35 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    cir.call @printIntLine(%36) : (!s32i) -> () loc(#loc133)
    cir.br ^bb14 loc(#loc129)
  ^bb14:  // pred: ^bb13
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc134)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc134)
    cir.call @free(%38) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc135)
    cir.br ^bb15 loc(#loc97)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc89)
  ^bb16:  // 2 preds: ^bb2, ^bb15
    cir.br ^bb17 loc(#loc89)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc81)
  } loc(#loc223)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc137)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc138)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    cir.return %2 : !s32i loc(#loc246)
  } loc(#loc245)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc248)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc249)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc250)
    cir.br ^bb1 loc(#loc251)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc252)
    %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc150)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc150)
    cir.brcond %5 ^bb2, ^bb15 loc(#loc253)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc254)
  ^bb3:  // pred: ^bb2
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc155)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc255)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc155)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc256)
    cir.store %9, %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc249)
    cir.br ^bb4 loc(#loc257)
  ^bb4:  // pred: ^bb3
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc160)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc161)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc161)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc258)
    cir.brcond %13 ^bb5, ^bb6 loc(#loc259)
  ^bb5:  // pred: ^bb4
    %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc163)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc164)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc165)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc163)
    cir.br ^bb6 loc(#loc159)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc159)
  ^bb7:  // pred: ^bb6
    %17 = cir.const #cir.int<4> : !u64i loc(#loc260)
    %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc168)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc261)
    cir.store %19, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc262)
    cir.br ^bb8 loc(#loc263)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc173)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc174)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc174)
    %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s32i>, !cir.bool loc(#loc264)
    cir.brcond %23 ^bb9, ^bb10 loc(#loc265)
  ^bb9:  // pred: ^bb8
    %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc176)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc178)
    cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc176)
    cir.br ^bb10 loc(#loc172)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc172)
  ^bb11:  // pred: ^bb10
    %27 = cir.const #cir.int<5> : !s32i loc(#loc179)
    %28 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc180)
    cir.store %27, %28 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc182)
    %30 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc183)
    cir.store %29, %30 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc267)
    cir.br ^bb12 loc(#loc268)
  ^bb12:  // pred: ^bb11
    %31 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc147)
    %32 = cir.load %31 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc187)
    cir.store %32, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc250)
    %33 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc188)
    %34 = cir.load %33 : !cir.ptr<!s32i>, !s32i loc(#loc189)
    cir.call @printIntLine(%34) : (!s32i) -> () loc(#loc190)
    cir.br ^bb13 loc(#loc186)
  ^bb13:  // pred: ^bb12
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc191)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc191)
    cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc192)
    cir.br ^bb14 loc(#loc154)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc149)
  ^bb15:  // 2 preds: ^bb1, ^bb14
    cir.br ^bb16 loc(#loc149)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc141)
  } loc(#loc247)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":33:1)
#loc10 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":45:1)
#loc11 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":38:13)
#loc12 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":38:60)
#loc13 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":40:13)
#loc14 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":40:27)
#loc15 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":35:5)
#loc16 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":44:5)
#loc17 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":35:8)
#loc18 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":35:26)
#loc19 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":36:5)
#loc20 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":37:9)
#loc21 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":43:9)
#loc22 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":38:40)
#loc23 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":38:47)
#loc24 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":38:59)
#loc25 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":39:13)
#loc26 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":39:44)
#loc27 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":39:17)
#loc28 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":39:28)
#loc29 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":39:34)
#loc30 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":39:35)
#loc31 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":39:41)
#loc32 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":39:40)
#loc33 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":40:26)
#loc34 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":41:18)
#loc35 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":41:13)
#loc36 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":42:27)
#loc37 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":42:26)
#loc38 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":42:13)
#loc39 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":102:1)
#loc40 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":106:1)
#loc41 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":104:5)
#loc42 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":104:11)
#loc43 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":105:5)
#loc44 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":105:11)
#loc45 = loc("/usr/include/stdlib.h":575:1)
#loc46 = loc("/usr/include/stdlib.h":575:41)
#loc47 = loc("/usr/include/time.h":76:1)
#loc48 = loc("/usr/include/time.h":76:38)
#loc49 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc50 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc51 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":122:15)
#loc52 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":124:15)
#loc53 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":127:15)
#loc54 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":129:15)
#loc55 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":117:1)
#loc56 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":132:1)
#loc61 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":118:1)
#loc62 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":120:27)
#loc63 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":120:22)
#loc64 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":120:5)
#loc65 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":122:5)
#loc66 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":123:5)
#loc67 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":123:63)
#loc68 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":124:5)
#loc69 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":127:5)
#loc70 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":128:5)
#loc71 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":128:62)
#loc72 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":129:5)
#loc73 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":131:12)
#loc74 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":131:5)
#loc75 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":21:1)
#loc76 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":24:1)
#loc77 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":23:12)
#loc78 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":23:5)
#loc79 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":57:19)
#loc80 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":52:1)
#loc81 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":77:1)
#loc82 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":62:13)
#loc83 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":62:19)
#loc84 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":63:13)
#loc85 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":63:60)
#loc86 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":71:17)
#loc87 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":71:31)
#loc88 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":54:5)
#loc89 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":76:5)
#loc90 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":54:8)
#loc91 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":54:27)
#loc92 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":55:5)
#loc93 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":58:5)
#loc94 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":60:5)
#loc95 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":57:9)
#loc96 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":61:9)
#loc97 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":75:9)
#loc98 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":63:40)
#loc99 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":63:47)
#loc100 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":63:59)
#loc101 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":64:13)
#loc102 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":64:44)
#loc103 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":64:17)
#loc104 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":64:28)
#loc105 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":64:34)
#loc106 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":64:35)
#loc107 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":64:41)
#loc108 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":64:40)
#loc109 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":66:34)
#loc110 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":66:44)
#loc111 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":66:27)
#loc112 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":66:45)
#loc113 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":66:13)
#loc114 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":67:13)
#loc115 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":67:41)
#loc116 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":67:17)
#loc117 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":67:25)
#loc118 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":67:31)
#loc119 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":67:32)
#loc120 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":67:38)
#loc121 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":67:37)
#loc122 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":68:21)
#loc123 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":68:14)
#loc124 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":68:13)
#loc125 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":69:24)
#loc126 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":69:14)
#loc127 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":69:13)
#loc128 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":70:13)
#loc129 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":73:13)
#loc130 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":71:30)
#loc131 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":72:31)
#loc132 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":72:30)
#loc133 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":72:17)
#loc134 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":74:18)
#loc135 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":74:13)
#loc136 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":26:1)
#loc137 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":29:1)
#loc138 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":28:12)
#loc139 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":28:5)
#loc140 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":80:1)
#loc141 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":100:1)
#loc142 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":85:13)
#loc143 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":85:19)
#loc144 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":86:13)
#loc145 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":86:60)
#loc146 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":94:17)
#loc147 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":94:31)
#loc148 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":82:5)
#loc149 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":99:5)
#loc150 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":82:8)
#loc151 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":82:26)
#loc152 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":83:5)
#loc153 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":84:9)
#loc154 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":98:9)
#loc155 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":86:40)
#loc156 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":86:47)
#loc157 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":86:59)
#loc158 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":87:13)
#loc159 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":87:44)
#loc160 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":87:17)
#loc161 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":87:28)
#loc162 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":87:34)
#loc163 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":87:35)
#loc164 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":87:41)
#loc165 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":87:40)
#loc166 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":89:34)
#loc167 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":89:44)
#loc168 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":89:27)
#loc169 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":89:45)
#loc170 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":89:13)
#loc171 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":90:13)
#loc172 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":90:41)
#loc173 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":90:17)
#loc174 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":90:25)
#loc175 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":90:31)
#loc176 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":90:32)
#loc177 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":90:38)
#loc178 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":90:37)
#loc179 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":91:21)
#loc180 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":91:14)
#loc181 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":91:13)
#loc182 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":92:24)
#loc183 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":92:14)
#loc184 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":92:13)
#loc185 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":93:13)
#loc186 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":96:13)
#loc187 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":94:30)
#loc188 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":95:31)
#loc189 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":95:30)
#loc190 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":95:17)
#loc191 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":97:18)
#loc192 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_08.c":97:13)
#loc193 = loc(fused[#loc1, #loc2])
#loc194 = loc(fused[#loc3, #loc4])
#loc195 = loc(fused[#loc5, #loc6])
#loc196 = loc(fused[#loc7, #loc8])
#loc197 = loc(fused[#loc9, #loc10])
#loc198 = loc(fused[#loc11, #loc12])
#loc199 = loc(fused[#loc13, #loc14])
#loc200 = loc(fused[#loc15, #loc16])
#loc201 = loc(fused[#loc17, #loc18])
#loc202 = loc(fused[#loc19, #loc16])
#loc203 = loc(fused[#loc20, #loc21])
#loc204 = loc(fused[#loc23, #loc24])
#loc205 = loc(fused[#loc22, #loc12])
#loc206 = loc(fused[#loc25, #loc26])
#loc207 = loc(fused[#loc27, #loc28])
#loc208 = loc(fused[#loc29, #loc26])
#loc209 = loc(fused[#loc39, #loc40])
#loc210 = loc(fused[#loc41, #loc42])
#loc211 = loc(fused[#loc43, #loc44])
#loc212 = loc(fused[#loc45, #loc46])
#loc213 = loc(fused[#loc47, #loc48])
#loc214 = loc(fused[#loc49, #loc50])
#loc215 = loc(fused[#loc55, #loc56])
#loc218 = loc(fused[#loc66, #loc67])
#loc219 = loc(fused[#loc70, #loc71])
#loc220 = loc(fused[#loc74, #loc73])
#loc221 = loc(fused[#loc75, #loc76])
#loc222 = loc(fused[#loc78, #loc77])
#loc223 = loc(fused[#loc80, #loc81])
#loc224 = loc(fused[#loc82, #loc83])
#loc225 = loc(fused[#loc84, #loc85])
#loc226 = loc(fused[#loc86, #loc87])
#loc227 = loc(fused[#loc88, #loc89])
#loc228 = loc(fused[#loc90, #loc91])
#loc229 = loc(fused[#loc92, #loc93, #loc94, #loc89])
#loc230 = loc(fused[#loc96, #loc97])
#loc231 = loc(fused[#loc99, #loc100])
#loc232 = loc(fused[#loc98, #loc85])
#loc233 = loc(fused[#loc101, #loc102])
#loc234 = loc(fused[#loc103, #loc104])
#loc235 = loc(fused[#loc105, #loc102])
#loc236 = loc(fused[#loc109, #loc110])
#loc237 = loc(fused[#loc111, #loc112])
#loc238 = loc(fused[#loc113, #loc112])
#loc239 = loc(fused[#loc114, #loc115])
#loc240 = loc(fused[#loc116, #loc117])
#loc241 = loc(fused[#loc118, #loc115])
#loc242 = loc(fused[#loc124, #loc122])
#loc243 = loc(fused[#loc127, #loc125])
#loc244 = loc(fused[#loc128, #loc129])
#loc245 = loc(fused[#loc136, #loc137])
#loc246 = loc(fused[#loc139, #loc138])
#loc247 = loc(fused[#loc140, #loc141])
#loc248 = loc(fused[#loc142, #loc143])
#loc249 = loc(fused[#loc144, #loc145])
#loc250 = loc(fused[#loc146, #loc147])
#loc251 = loc(fused[#loc148, #loc149])
#loc252 = loc(fused[#loc150, #loc151])
#loc253 = loc(fused[#loc152, #loc149])
#loc254 = loc(fused[#loc153, #loc154])
#loc255 = loc(fused[#loc156, #loc157])
#loc256 = loc(fused[#loc155, #loc145])
#loc257 = loc(fused[#loc158, #loc159])
#loc258 = loc(fused[#loc160, #loc161])
#loc259 = loc(fused[#loc162, #loc159])
#loc260 = loc(fused[#loc166, #loc167])
#loc261 = loc(fused[#loc168, #loc169])
#loc262 = loc(fused[#loc170, #loc169])
#loc263 = loc(fused[#loc171, #loc172])
#loc264 = loc(fused[#loc173, #loc174])
#loc265 = loc(fused[#loc175, #loc172])
#loc266 = loc(fused[#loc181, #loc179])
#loc267 = loc(fused[#loc184, #loc182])
#loc268 = loc(fused[#loc185, #loc186])
