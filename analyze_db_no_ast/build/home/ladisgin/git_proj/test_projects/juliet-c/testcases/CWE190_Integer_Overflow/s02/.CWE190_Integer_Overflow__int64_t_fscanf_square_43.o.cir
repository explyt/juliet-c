!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc9 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":28:23)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":28:32)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":51:27)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":51:36)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":70:27)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":70:36)
#loc99 = loc(fused[#loc9, #loc10])
#loc107 = loc(fused[#loc33, #loc34])
#loc115 = loc(fused[#loc54, #loc55])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc95)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc96)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc97)
  cir.func internal private  @_ZN49CWE190_Integer_Overflow__int64_t_fscanf_square_43L9badSourceERl(%arg0: !cir.ptr<!s64i> loc(fused[#loc9, #loc10])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc99)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc11)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc12)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc96)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc13)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc97)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc97)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc14)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc12)
    cir.return loc(#loc8)
  } loc(#loc98)
  cir.func private  @printLongLongLine(!s64i) loc(#loc100)
  cir.func  @_ZN49CWE190_Integer_Overflow__int64_t_fscanf_square_433badEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc102)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc21)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc103)
    cir.call @_ZN49CWE190_Integer_Overflow__int64_t_fscanf_square_43L9badSourceERl(%0) : (!cir.ptr<!s64i>) -> () loc(#loc23)
    cir.scope {
      %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc105)
      %3 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc28)
      %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc27)
      %5 = cir.binop(mul, %3, %4) nsw : !s64i loc(#loc28)
      cir.store %5, %2 : !s64i, !cir.ptr<!s64i> loc(#loc105)
      %6 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc29)
      cir.call @printLongLongLine(%6) : (!s64i) -> () loc(#loc30)
    } loc(#loc104)
    cir.return loc(#loc18)
  } loc(#loc101)
  cir.func internal private  @_ZN49CWE190_Integer_Overflow__int64_t_fscanf_square_43L13goodG2BSourceERl(%arg0: !cir.ptr<!s64i> loc(fused[#loc33, #loc34])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc107)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc35)
    %1 = cir.const #cir.int<2> : !s32i loc(#loc36)
    %2 = cir.cast(integral, %1 : !s32i), !s64i loc(#loc36)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc37)
    cir.store %2, %3 : !s64i, !cir.ptr<!s64i> loc(#loc108)
    cir.return loc(#loc32)
  } loc(#loc106)
  cir.func internal private  @_ZN49CWE190_Integer_Overflow__int64_t_fscanf_square_43L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc42)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc111)
    cir.call @_ZN49CWE190_Integer_Overflow__int64_t_fscanf_square_43L13goodG2BSourceERl(%0) : (!cir.ptr<!s64i>) -> () loc(#loc44)
    cir.scope {
      %2 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc113)
      %3 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc49)
      %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc48)
      %5 = cir.binop(mul, %3, %4) nsw : !s64i loc(#loc49)
      cir.store %5, %2 : !s64i, !cir.ptr<!s64i> loc(#loc113)
      %6 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc50)
      cir.call @printLongLongLine(%6) : (!s64i) -> () loc(#loc51)
    } loc(#loc112)
    cir.return loc(#loc39)
  } loc(#loc109)
  cir.func internal private  @_ZN49CWE190_Integer_Overflow__int64_t_fscanf_square_43L13goodB2GSourceERl(%arg0: !cir.ptr<!s64i> loc(fused[#loc54, #loc55])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc115)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc56)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc57)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc96)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc58)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc116)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc116)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc61)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc57)
    cir.return loc(#loc53)
  } loc(#loc114)
  cir.func private  @imaxabs(!s64i) -> !s64i extra(#fn_attr1) loc(#loc117)
  cir.func private  @sqrtl(!cir.long_double<!cir.f80>) -> !cir.long_double<!cir.f80> extra(#fn_attr1) loc(#loc64)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc118)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc67)
  cir.func internal private  @_ZN49CWE190_Integer_Overflow__int64_t_fscanf_square_43L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc120)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc72)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc121)
    cir.call @_ZN49CWE190_Integer_Overflow__int64_t_fscanf_square_43L13goodB2GSourceERl(%0) : (!cir.ptr<!s64i>) -> () loc(#loc74)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc77)
      %3 = cir.call @imaxabs(%2) : (!s64i) -> !s64i extra(#fn_attr1) loc(#loc78)
      %4 = cir.cast(int_to_float, %3 : !s64i), !cir.long_double<!cir.f80> loc(#loc78)
      %5 = cir.get_global @sqrtl : !cir.ptr<!cir.func<!cir.long_double<!cir.f80> (!cir.long_double<!cir.f80>)>> loc(#loc79)
      %6 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc80)
      %7 = cir.cast(int_to_float, %6 : !s64i), !cir.long_double<!cir.f80> loc(#loc80)
      %8 = cir.call @sqrtl(%7) : (!cir.long_double<!cir.f80>) -> !cir.long_double<!cir.f80> extra(#fn_attr1) loc(#loc79)
      %9 = cir.cmp(le, %4, %8) : !cir.long_double<!cir.f80>, !cir.bool loc(#loc123)
      cir.if %9 {
        %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc125)
        %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc87)
        %12 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc86)
        %13 = cir.binop(mul, %11, %12) nsw : !s64i loc(#loc87)
        cir.store %13, %10 : !s64i, !cir.ptr<!s64i> loc(#loc125)
        %14 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc88)
        cir.call @printLongLongLine(%14) : (!s64i) -> () loc(#loc89)
      } else {
        %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc67)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc67)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc90)
      } loc(#loc124)
    } loc(#loc122)
    cir.return loc(#loc69)
  } loc(#loc119)
  cir.func  @_ZN49CWE190_Integer_Overflow__int64_t_fscanf_square_434goodEv() extra(#fn_attr) {
    cir.call @_ZN49CWE190_Integer_Overflow__int64_t_fscanf_square_43L7goodG2BEv() : () -> () loc(#loc93)
    cir.call @_ZN49CWE190_Integer_Overflow__int64_t_fscanf_square_43L7goodB2GEv() : () -> () loc(#loc94)
    cir.return loc(#loc92)
  } loc(#loc126)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":31:20)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":31:24)
#loc7 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":28:1)
#loc8 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":32:1)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":29:1)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":31:5)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":31:13)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":31:33)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":34:1)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":44:1)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":36:5)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":36:13)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":37:12)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":37:5)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":38:5)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":39:5)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":43:5)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":41:9)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":41:33)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":41:26)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":42:27)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":42:9)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":51:1)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":55:1)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":52:1)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":54:12)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":54:5)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":57:1)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":67:1)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":59:5)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":59:13)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":60:12)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":60:5)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":61:5)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":62:5)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":66:5)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":64:9)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":64:33)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":64:26)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":65:27)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":65:9)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":70:1)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":74:1)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":71:1)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":73:5)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":73:13)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":73:20)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":73:24)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":73:33)
#loc62 = loc("/usr/include/inttypes.h":351:1)
#loc63 = loc("/usr/include/inttypes.h":351:74)
#loc64 = loc("/usr/include/bits/mathcalls.h":143:1)
#loc65 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc66 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":89:19)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":76:1)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":91:1)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":78:5)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":78:13)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":79:12)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":79:5)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":80:5)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":82:5)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":90:5)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":82:27)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":82:9)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":82:36)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":82:42)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":82:51)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":83:5)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":86:5)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":88:5)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":84:9)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":84:33)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":84:26)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":85:27)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":85:9)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":89:9)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":93:1)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":97:1)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":95:5)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_fscanf_square_43.cpp":96:5)
#loc95 = loc(fused[#loc1, #loc2])
#loc96 = loc(fused[#loc3, #loc4])
#loc97 = loc(fused[#loc5, #loc6])
#loc98 = loc(fused[#loc7, #loc8])
#loc100 = loc(fused[#loc15, #loc16])
#loc101 = loc(fused[#loc17, #loc18])
#loc102 = loc(fused[#loc19, #loc20])
#loc103 = loc(fused[#loc22, #loc21])
#loc104 = loc(fused[#loc24, #loc25])
#loc105 = loc(fused[#loc26, #loc27])
#loc106 = loc(fused[#loc31, #loc32])
#loc108 = loc(fused[#loc37, #loc36])
#loc109 = loc(fused[#loc38, #loc39])
#loc110 = loc(fused[#loc40, #loc41])
#loc111 = loc(fused[#loc43, #loc42])
#loc112 = loc(fused[#loc45, #loc46])
#loc113 = loc(fused[#loc47, #loc48])
#loc114 = loc(fused[#loc52, #loc53])
#loc116 = loc(fused[#loc59, #loc60])
#loc117 = loc(fused[#loc62, #loc63])
#loc118 = loc(fused[#loc65, #loc66])
#loc119 = loc(fused[#loc68, #loc69])
#loc120 = loc(fused[#loc70, #loc71])
#loc121 = loc(fused[#loc73, #loc72])
#loc122 = loc(fused[#loc75, #loc76])
#loc123 = loc(fused[#loc78, #loc81])
#loc124 = loc(fused[#loc82, #loc83, #loc84, #loc76])
#loc125 = loc(fused[#loc85, #loc86])
#loc126 = loc(fused[#loc91, #loc92])
