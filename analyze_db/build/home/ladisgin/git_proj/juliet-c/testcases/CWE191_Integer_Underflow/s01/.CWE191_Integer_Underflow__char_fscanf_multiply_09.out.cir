!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc58 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":171:10)
#loc59 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":171:14)
#loc60 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":171:20)
#loc61 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":171:32)
#loc240 = loc(fused[#loc58, #loc59])
#loc241 = loc(fused[#loc60, #loc61])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_09.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc216)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc217)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc218)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printHexCharLine(!s8i) loc(#loc219)
  cir.func no_proto @CWE191_Integer_Underflow__char_fscanf_multiply_09_bad() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc221)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc222)
    %2 = cir.const #cir.int<32> : !s32i loc(#loc16)
    %3 = cir.cast(integral, %2 : !s32i), !s8i loc(#loc16)
    cir.store %3, %1 : !s8i, !cir.ptr<!s8i> loc(#loc223)
    cir.br ^bb1 loc(#loc224)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc216)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc20)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc225)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc22)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc218)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc22)
    cir.br ^bb3 loc(#loc19)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc226)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc216)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %15 ^bb6, ^bb11 loc(#loc227)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc228)
  ^bb7:  // pred: ^bb6
    %16 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc30)
    %17 = cir.cast(integral, %16 : !s8i), !s32i loc(#loc30)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc229)
    cir.brcond %19 ^bb8, ^bb9 loc(#loc230)
  ^bb8:  // pred: ^bb7
    %20 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc33)
    %21 = cir.cast(integral, %20 : !s8i), !s32i loc(#loc33)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc13)
    %23 = cir.binop(mul, %21, %22) nsw : !s32i loc(#loc33)
    %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc33)
    cir.store %24, %0 : !s8i, !cir.ptr<!s8i> loc(#loc221)
    %25 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc34)
    cir.call @printHexCharLine(%25) : (!s8i) -> () loc(#loc35)
    cir.br ^bb9 loc(#loc29)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc29)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc25)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc25)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc11)
  } loc(#loc220)
  cir.func no_proto @CWE191_Integer_Underflow__char_fscanf_multiply_09_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc232)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc233)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc234)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc235)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc44)
    cir.return loc(#loc37)
  } loc(#loc231)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc236)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc237)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc238)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc55)
  cir.func @main(%arg0: !s32i loc(fused[#loc58, #loc59]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc60, #loc61])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc240)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc241)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc57)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc62)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc64)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc64)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc65)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %8 = cir.get_global @CWE191_Integer_Underflow__char_fscanf_multiply_09_good : !cir.ptr<!cir.func<!void ()>> loc(#loc242)
    cir.call @CWE191_Integer_Underflow__char_fscanf_multiply_09_good() : () -> () loc(#loc67)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc53)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc54)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %13 = cir.get_global @CWE191_Integer_Underflow__char_fscanf_multiply_09_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc243)
    cir.call @CWE191_Integer_Underflow__char_fscanf_multiply_09_bad() : () -> () loc(#loc71)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc55)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc244)
    cir.return %17 : !s32i loc(#loc244)
  } loc(#loc239)
  cir.global "private" constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc245)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc79)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc247)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc248)
    %2 = cir.const #cir.int<32> : !s32i loc(#loc86)
    %3 = cir.cast(integral, %2 : !s32i), !s8i loc(#loc86)
    cir.store %3, %1 : !s8i, !cir.ptr<!s8i> loc(#loc249)
    cir.br ^bb1 loc(#loc250)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc216)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc90)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc251)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc92)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc218)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc93)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc94)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc94)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc92)
    cir.br ^bb3 loc(#loc89)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc89)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc252)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc245)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc97)
    cir.brcond %15 ^bb6, ^bb7 loc(#loc253)
  ^bb6:  // pred: ^bb5
    %16 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc78)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    cir.br ^bb17 loc(#loc99)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc254)
  ^bb8:  // pred: ^bb7
    %18 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc104)
    %19 = cir.cast(integral, %18 : !s8i), !s32i loc(#loc104)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc255)
    cir.brcond %21 ^bb9, ^bb15 loc(#loc256)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc257)
  ^bb10:  // pred: ^bb9
    %22 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc109)
    %23 = cir.cast(integral, %22 : !s8i), !s32i loc(#loc109)
    %24 = cir.const #cir.int<127> : !s32i loc(#loc110)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc110)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc110)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc111)
    %29 = cir.binop(div, %27, %28) : !s32i loc(#loc258)
    %30 = cir.cmp(gt, %23, %29) : !s32i, !cir.bool loc(#loc259)
    cir.brcond %30 ^bb11, ^bb12 loc(#loc260)
  ^bb11:  // pred: ^bb10
    %31 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc116)
    %32 = cir.cast(integral, %31 : !s8i), !s32i loc(#loc116)
    %33 = cir.const #cir.int<2> : !s32i loc(#loc83)
    %34 = cir.binop(mul, %32, %33) nsw : !s32i loc(#loc116)
    %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc116)
    cir.store %35, %0 : !s8i, !cir.ptr<!s8i> loc(#loc247)
    %36 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc117)
    cir.call @printHexCharLine(%36) : (!s8i) -> () loc(#loc118)
    cir.br ^bb13 loc(#loc114)
  ^bb12:  // pred: ^bb10
    %37 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc79)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    cir.br ^bb13 loc(#loc108)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc108)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc103)
  ^bb15:  // 2 preds: ^bb8, ^bb14
    cir.br ^bb16 loc(#loc103)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc96)
  ^bb17:  // 2 preds: ^bb6, ^bb16
    cir.br ^bb18 loc(#loc96)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc81)
  } loc(#loc246)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc262)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc263)
    %2 = cir.const #cir.int<32> : !s32i loc(#loc126)
    %3 = cir.cast(integral, %2 : !s32i), !s8i loc(#loc126)
    cir.store %3, %1 : !s8i, !cir.ptr<!s8i> loc(#loc264)
    cir.br ^bb1 loc(#loc265)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc216)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc130)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc266)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc132)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc218)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc133)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc134)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc134)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc132)
    cir.br ^bb3 loc(#loc129)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc129)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc267)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc216)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc137)
    cir.brcond %15 ^bb6, ^bb16 loc(#loc268)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc269)
  ^bb7:  // pred: ^bb6
    %16 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc141)
    %17 = cir.cast(integral, %16 : !s8i), !s32i loc(#loc141)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc142)
    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc270)
    cir.brcond %19 ^bb8, ^bb14 loc(#loc271)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc272)
  ^bb9:  // pred: ^bb8
    %20 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc146)
    %21 = cir.cast(integral, %20 : !s8i), !s32i loc(#loc146)
    %22 = cir.const #cir.int<127> : !s32i loc(#loc147)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc147)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc147)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc147)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc148)
    %27 = cir.binop(div, %25, %26) : !s32i loc(#loc273)
    %28 = cir.cmp(gt, %21, %27) : !s32i, !cir.bool loc(#loc274)
    cir.brcond %28 ^bb10, ^bb11 loc(#loc275)
  ^bb10:  // pred: ^bb9
    %29 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc153)
    %30 = cir.cast(integral, %29 : !s8i), !s32i loc(#loc153)
    %31 = cir.const #cir.int<2> : !s32i loc(#loc123)
    %32 = cir.binop(mul, %30, %31) nsw : !s32i loc(#loc153)
    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc153)
    cir.store %33, %0 : !s8i, !cir.ptr<!s8i> loc(#loc262)
    %34 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc154)
    cir.call @printHexCharLine(%34) : (!s8i) -> () loc(#loc155)
    cir.br ^bb12 loc(#loc151)
  ^bb11:  // pred: ^bb9
    %35 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc156)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc156)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc157)
    cir.br ^bb12 loc(#loc145)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc145)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc140)
  ^bb14:  // 2 preds: ^bb7, ^bb13
    cir.br ^bb15 loc(#loc140)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc136)
  ^bb16:  // 2 preds: ^bb5, ^bb15
    cir.br ^bb17 loc(#loc136)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc121)
  } loc(#loc261)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc277)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc278)
    %2 = cir.const #cir.int<32> : !s32i loc(#loc164)
    %3 = cir.cast(integral, %2 : !s32i), !s8i loc(#loc164)
    cir.store %3, %1 : !s8i, !cir.ptr<!s8i> loc(#loc279)
    cir.br ^bb1 loc(#loc280)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc245)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc168)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc281)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc172)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc173)
    cir.br ^bb4 loc(#loc170)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<2> : !s32i loc(#loc174)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc175)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc175)
    cir.store %11, %1 : !s8i, !cir.ptr<!s8i> loc(#loc282)
    cir.br ^bb4 loc(#loc167)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc167)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc283)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc216)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc179)
    cir.brcond %14 ^bb7, ^bb12 loc(#loc284)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc285)
  ^bb8:  // pred: ^bb7
    %15 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc183)
    %16 = cir.cast(integral, %15 : !s8i), !s32i loc(#loc183)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc184)
    %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc286)
    cir.brcond %18 ^bb9, ^bb10 loc(#loc287)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc186)
    %20 = cir.cast(integral, %19 : !s8i), !s32i loc(#loc186)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc161)
    %22 = cir.binop(mul, %20, %21) nsw : !s32i loc(#loc186)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc186)
    cir.store %23, %0 : !s8i, !cir.ptr<!s8i> loc(#loc277)
    %24 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc187)
    cir.call @printHexCharLine(%24) : (!s8i) -> () loc(#loc188)
    cir.br ^bb10 loc(#loc182)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc182)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc178)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc178)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc159)
  } loc(#loc276)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc289)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc290)
    %2 = cir.const #cir.int<32> : !s32i loc(#loc195)
    %3 = cir.cast(integral, %2 : !s32i), !s8i loc(#loc195)
    cir.store %3, %1 : !s8i, !cir.ptr<!s8i> loc(#loc291)
    cir.br ^bb1 loc(#loc292)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc216)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc199)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc199)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc293)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<2> : !s32i loc(#loc201)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc202)
    %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc202)
    cir.store %9, %1 : !s8i, !cir.ptr<!s8i> loc(#loc294)
    cir.br ^bb3 loc(#loc198)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc198)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc295)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc216)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc206)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc206)
    cir.brcond %12 ^bb6, ^bb11 loc(#loc296)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc297)
  ^bb7:  // pred: ^bb6
    %13 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc210)
    %14 = cir.cast(integral, %13 : !s8i), !s32i loc(#loc210)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc211)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc298)
    cir.brcond %16 ^bb8, ^bb9 loc(#loc299)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc213)
    %18 = cir.cast(integral, %17 : !s8i), !s32i loc(#loc213)
    %19 = cir.const #cir.int<2> : !s32i loc(#loc192)
    %20 = cir.binop(mul, %18, %19) nsw : !s32i loc(#loc213)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc213)
    cir.store %21, %0 : !s8i, !cir.ptr<!s8i> loc(#loc289)
    %22 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc214)
    cir.call @printHexCharLine(%22) : (!s8i) -> () loc(#loc215)
    cir.br ^bb9 loc(#loc209)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc209)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc205)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc205)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc190)
  } loc(#loc288)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_09.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":109:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":109:18)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":29:24)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc10 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":22:1)
#loc11 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":40:1)
#loc12 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":36:13)
#loc13 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":36:34)
#loc14 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":24:5)
#loc15 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":24:10)
#loc16 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":25:12)
#loc17 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":25:5)
#loc18 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":26:5)
#loc19 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":30:5)
#loc20 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":26:8)
#loc21 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":27:5)
#loc22 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":29:9)
#loc23 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":29:17)
#loc24 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":31:5)
#loc25 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":39:5)
#loc26 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":31:8)
#loc27 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":32:5)
#loc28 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":33:9)
#loc29 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":38:9)
#loc30 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":33:12)
#loc31 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":33:19)
#loc32 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":34:9)
#loc33 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":36:27)
#loc34 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":37:30)
#loc35 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":37:13)
#loc36 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":154:1)
#loc37 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":160:1)
#loc38 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":156:5)
#loc39 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":156:14)
#loc40 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":157:5)
#loc41 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":157:14)
#loc42 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":158:5)
#loc43 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":158:14)
#loc44 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":159:5)
#loc45 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":159:14)
#loc46 = loc("/usr/include/stdlib.h":575:1)
#loc47 = loc("/usr/include/stdlib.h":575:41)
#loc48 = loc("/usr/include/time.h":76:1)
#loc49 = loc("/usr/include/time.h":76:38)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc52 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":176:15)
#loc53 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":178:15)
#loc54 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":181:15)
#loc55 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":183:15)
#loc56 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":171:1)
#loc57 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":186:1)
#loc62 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":172:1)
#loc63 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":174:27)
#loc64 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":174:22)
#loc65 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":174:5)
#loc66 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":176:5)
#loc67 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":177:5)
#loc68 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":177:60)
#loc69 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":178:5)
#loc70 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":181:5)
#loc71 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":182:5)
#loc72 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":182:59)
#loc73 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":183:5)
#loc74 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":185:12)
#loc75 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":185:5)
#loc76 = loc("../../../testcasesupport/std_testcase.h":110:1)
#loc77 = loc("../../../testcasesupport/std_testcase.h":110:18)
#loc78 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":59:19)
#loc79 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":73:27)
#loc80 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":47:1)
#loc81 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":77:1)
#loc82 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":68:17)
#loc83 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":68:38)
#loc84 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":49:5)
#loc85 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":49:10)
#loc86 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":50:12)
#loc87 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":50:5)
#loc88 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":51:5)
#loc89 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":55:5)
#loc90 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":51:8)
#loc91 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":52:5)
#loc92 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":54:9)
#loc93 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":54:17)
#loc94 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":54:24)
#loc95 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":56:5)
#loc96 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":76:5)
#loc97 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":56:8)
#loc98 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":57:5)
#loc99 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":60:5)
#loc100 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":62:5)
#loc101 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":59:9)
#loc102 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":63:9)
#loc103 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":75:9)
#loc104 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":63:12)
#loc105 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":63:19)
#loc106 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":64:9)
#loc107 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":66:13)
#loc108 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":74:13)
#loc109 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":66:17)
#loc110 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":66:25)
#loc111 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":66:34)
#loc112 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":66:35)
#loc113 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":67:13)
#loc114 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":70:13)
#loc115 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":72:13)
#loc116 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":68:31)
#loc117 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":69:34)
#loc118 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":69:17)
#loc119 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":73:17)
#loc120 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":80:1)
#loc121 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":105:1)
#loc122 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":96:17)
#loc123 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":96:38)
#loc124 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":82:5)
#loc125 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":82:10)
#loc126 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":83:12)
#loc127 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":83:5)
#loc128 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":84:5)
#loc129 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":88:5)
#loc130 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":84:8)
#loc131 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":85:5)
#loc132 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":87:9)
#loc133 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":87:17)
#loc134 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":87:24)
#loc135 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":89:5)
#loc136 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":104:5)
#loc137 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":89:8)
#loc138 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":90:5)
#loc139 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":91:9)
#loc140 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":103:9)
#loc141 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":91:12)
#loc142 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":91:19)
#loc143 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":92:9)
#loc144 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":94:13)
#loc145 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":102:13)
#loc146 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":94:17)
#loc147 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":94:25)
#loc148 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":94:34)
#loc149 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":94:35)
#loc150 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":95:13)
#loc151 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":98:13)
#loc152 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":100:13)
#loc153 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":96:31)
#loc154 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":97:34)
#loc155 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":97:17)
#loc156 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":101:27)
#loc157 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":101:17)
#loc158 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":108:1)
#loc159 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":131:1)
#loc160 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":127:13)
#loc161 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":127:34)
#loc162 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":110:5)
#loc163 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":110:10)
#loc164 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":111:12)
#loc165 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":111:5)
#loc166 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":112:5)
#loc167 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":121:5)
#loc168 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":112:8)
#loc169 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":113:5)
#loc170 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":116:5)
#loc171 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":118:5)
#loc172 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":115:19)
#loc173 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":115:9)
#loc174 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":120:17)
#loc175 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":120:16)
#loc176 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":120:9)
#loc177 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":122:5)
#loc178 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":130:5)
#loc179 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":122:8)
#loc180 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":123:5)
#loc181 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":124:9)
#loc182 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":129:9)
#loc183 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":124:12)
#loc184 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":124:19)
#loc185 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":125:9)
#loc186 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":127:27)
#loc187 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":128:30)
#loc188 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":128:13)
#loc189 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":134:1)
#loc190 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":152:1)
#loc191 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":148:13)
#loc192 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":148:34)
#loc193 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":136:5)
#loc194 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":136:10)
#loc195 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":137:12)
#loc196 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":137:5)
#loc197 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":138:5)
#loc198 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":142:5)
#loc199 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":138:8)
#loc200 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":139:5)
#loc201 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":141:17)
#loc202 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":141:16)
#loc203 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":141:9)
#loc204 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":143:5)
#loc205 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":151:5)
#loc206 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":143:8)
#loc207 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":144:5)
#loc208 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":145:9)
#loc209 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":150:9)
#loc210 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":145:12)
#loc211 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":145:19)
#loc212 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":146:9)
#loc213 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":148:27)
#loc214 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":149:30)
#loc215 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_09.c":149:13)
#loc216 = loc(fused[#loc1, #loc2])
#loc217 = loc(fused[#loc3, #loc4])
#loc218 = loc(fused[#loc5, #loc6])
#loc219 = loc(fused[#loc8, #loc9])
#loc220 = loc(fused[#loc10, #loc11])
#loc221 = loc(fused[#loc12, #loc13])
#loc222 = loc(fused[#loc14, #loc15])
#loc223 = loc(fused[#loc17, #loc16])
#loc224 = loc(fused[#loc18, #loc19])
#loc225 = loc(fused[#loc21, #loc19])
#loc226 = loc(fused[#loc24, #loc25])
#loc227 = loc(fused[#loc27, #loc25])
#loc228 = loc(fused[#loc28, #loc29])
#loc229 = loc(fused[#loc30, #loc31])
#loc230 = loc(fused[#loc32, #loc29])
#loc231 = loc(fused[#loc36, #loc37])
#loc232 = loc(fused[#loc38, #loc39])
#loc233 = loc(fused[#loc40, #loc41])
#loc234 = loc(fused[#loc42, #loc43])
#loc235 = loc(fused[#loc44, #loc45])
#loc236 = loc(fused[#loc46, #loc47])
#loc237 = loc(fused[#loc48, #loc49])
#loc238 = loc(fused[#loc50, #loc51])
#loc239 = loc(fused[#loc56, #loc57])
#loc242 = loc(fused[#loc67, #loc68])
#loc243 = loc(fused[#loc71, #loc72])
#loc244 = loc(fused[#loc75, #loc74])
#loc245 = loc(fused[#loc76, #loc77])
#loc246 = loc(fused[#loc80, #loc81])
#loc247 = loc(fused[#loc82, #loc83])
#loc248 = loc(fused[#loc84, #loc85])
#loc249 = loc(fused[#loc87, #loc86])
#loc250 = loc(fused[#loc88, #loc89])
#loc251 = loc(fused[#loc91, #loc89])
#loc252 = loc(fused[#loc95, #loc96])
#loc253 = loc(fused[#loc98, #loc99, #loc100, #loc96])
#loc254 = loc(fused[#loc102, #loc103])
#loc255 = loc(fused[#loc104, #loc105])
#loc256 = loc(fused[#loc106, #loc103])
#loc257 = loc(fused[#loc107, #loc108])
#loc258 = loc(fused[#loc110, #loc111])
#loc259 = loc(fused[#loc109, #loc112])
#loc260 = loc(fused[#loc113, #loc114, #loc115, #loc108])
#loc261 = loc(fused[#loc120, #loc121])
#loc262 = loc(fused[#loc122, #loc123])
#loc263 = loc(fused[#loc124, #loc125])
#loc264 = loc(fused[#loc127, #loc126])
#loc265 = loc(fused[#loc128, #loc129])
#loc266 = loc(fused[#loc131, #loc129])
#loc267 = loc(fused[#loc135, #loc136])
#loc268 = loc(fused[#loc138, #loc136])
#loc269 = loc(fused[#loc139, #loc140])
#loc270 = loc(fused[#loc141, #loc142])
#loc271 = loc(fused[#loc143, #loc140])
#loc272 = loc(fused[#loc144, #loc145])
#loc273 = loc(fused[#loc147, #loc148])
#loc274 = loc(fused[#loc146, #loc149])
#loc275 = loc(fused[#loc150, #loc151, #loc152, #loc145])
#loc276 = loc(fused[#loc158, #loc159])
#loc277 = loc(fused[#loc160, #loc161])
#loc278 = loc(fused[#loc162, #loc163])
#loc279 = loc(fused[#loc165, #loc164])
#loc280 = loc(fused[#loc166, #loc167])
#loc281 = loc(fused[#loc169, #loc170, #loc171, #loc167])
#loc282 = loc(fused[#loc176, #loc174])
#loc283 = loc(fused[#loc177, #loc178])
#loc284 = loc(fused[#loc180, #loc178])
#loc285 = loc(fused[#loc181, #loc182])
#loc286 = loc(fused[#loc183, #loc184])
#loc287 = loc(fused[#loc185, #loc182])
#loc288 = loc(fused[#loc189, #loc190])
#loc289 = loc(fused[#loc191, #loc192])
#loc290 = loc(fused[#loc193, #loc194])
#loc291 = loc(fused[#loc196, #loc195])
#loc292 = loc(fused[#loc197, #loc198])
#loc293 = loc(fused[#loc200, #loc198])
#loc294 = loc(fused[#loc203, #loc201])
#loc295 = loc(fused[#loc204, #loc205])
#loc296 = loc(fused[#loc207, #loc205])
#loc297 = loc(fused[#loc208, #loc209])
#loc298 = loc(fused[#loc210, #loc211])
#loc299 = loc(fused[#loc212, #loc209])
