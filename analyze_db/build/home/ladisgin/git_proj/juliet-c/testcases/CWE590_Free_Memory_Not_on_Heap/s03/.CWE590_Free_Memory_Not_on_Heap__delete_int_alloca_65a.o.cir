!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_657badSinkEPi(!cir.ptr<!s32i>) loc(#loc49)
  cir.func @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_653badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc51)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc52)
    %2 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc53)
    %3 = cir.get_global @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_657badSinkEPi : !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>> loc(#loc10)
    cir.store %3, %2 : !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>> loc(#loc53)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc11)
    cir.store %4, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc54)
    cir.br ^bb1 loc(#loc55)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<4> : !u64i loc(#loc6)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc6)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc6)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc6)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc51)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc15)
    %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc16)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc56)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc18)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc57)
    cir.br ^bb2 loc(#loc14)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>> loc(#loc20)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc21)
    cir.call %12(%13) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!s32i>) -> () loc(#loc20)
    cir.return loc(#loc4)
  } loc(#loc50)
  cir.func private @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_6511goodG2BSinkEPi(!cir.ptr<!s32i>) loc(#loc58)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc59)
  cir.func internal private @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc61)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc62)
    %2 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc63)
    %3 = cir.get_global @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_6511goodG2BSinkEPi : !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>> loc(#loc33)
    cir.store %3, %2 : !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>> loc(#loc63)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc34)
    cir.store %4, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc64)
    cir.br ^bb1 loc(#loc65)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<4> : !u64i loc(#loc66)
    %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc61)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc66)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc61)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc39)
    %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc40)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc67)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
    cir.store %10, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc68)
    cir.br ^bb2 loc(#loc37)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>> loc(#loc44)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc45)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!cir.ptr<!s32i>)>>, !cir.ptr<!s32i>) -> () loc(#loc44)
    cir.return loc(#loc27)
  } loc(#loc60)
  cir.func @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_654goodEv() extra(#fn_attr) {
    cir.call @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65L7goodG2BEv() : () -> () loc(#loc48)
    cir.return loc(#loc47)
  } loc(#loc69)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":27:1)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":27:24)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":29:1)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":43:1)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":37:9)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":37:35)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":31:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":31:11)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":33:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":33:31)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":34:12)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":34:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":35:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":40:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":38:23)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":38:10)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":38:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":39:16)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":39:9)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":42:5)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":42:13)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":50:1)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":50:28)
#loc24 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc25 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":52:1)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":64:1)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":59:9)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":59:32)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":54:5)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":54:11)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":55:5)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":55:31)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":56:12)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":56:5)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":57:5)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":62:5)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":59:28)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":60:23)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":60:10)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":60:9)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":61:16)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":61:9)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":63:5)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":63:13)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":66:1)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":69:1)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_65a.cpp":68:5)
#loc49 = loc(fused[#loc1, #loc2])
#loc50 = loc(fused[#loc3, #loc4])
#loc51 = loc(fused[#loc5, #loc6])
#loc52 = loc(fused[#loc7, #loc8])
#loc53 = loc(fused[#loc9, #loc10])
#loc54 = loc(fused[#loc12, #loc11])
#loc55 = loc(fused[#loc13, #loc14])
#loc56 = loc(fused[#loc17, #loc15])
#loc57 = loc(fused[#loc19, #loc18])
#loc58 = loc(fused[#loc22, #loc23])
#loc59 = loc(fused[#loc24, #loc25])
#loc60 = loc(fused[#loc26, #loc27])
#loc61 = loc(fused[#loc28, #loc29])
#loc62 = loc(fused[#loc30, #loc31])
#loc63 = loc(fused[#loc32, #loc33])
#loc64 = loc(fused[#loc35, #loc34])
#loc65 = loc(fused[#loc36, #loc37])
#loc66 = loc(fused[#loc38, #loc29])
#loc67 = loc(fused[#loc41, #loc39])
#loc68 = loc(fused[#loc43, #loc42])
#loc69 = loc(fused[#loc46, #loc47])
