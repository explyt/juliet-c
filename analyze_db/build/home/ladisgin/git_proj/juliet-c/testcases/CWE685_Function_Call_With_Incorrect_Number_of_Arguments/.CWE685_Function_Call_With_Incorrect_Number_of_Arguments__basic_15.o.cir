!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE685_Function_Call_With_Incorrect_Number_of_Arguments/CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @sprintf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s %s\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"AAA\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc76)
    cir.br ^bb1 loc(#loc77)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<6> : !s32i loc(#loc14)
    cir.br ^bb2 loc(#loc12)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb7 [
      6: ^bb4
    ] loc(#loc12)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc15)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc78)
  ^bb5:  // pred: ^bb4
    %2 = cir.get_global @sprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc18)
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc19)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc3)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc3)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc4)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc4)
    %8 = cir.call @sprintf(%3, %5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc18)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc21)
    cir.br ^bb6 loc(#loc17)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc22)
  ^bb7:  // pred: ^bb2
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc7)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc23)
    cir.br ^bb8 loc(#loc24)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc13)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc9)
  } loc(#loc75)
  cir.func no_proto @CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc80)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc81)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    cir.return loc(#loc26)
  } loc(#loc79)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc83)
    cir.br ^bb1 loc(#loc84)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<5> : !s32i loc(#loc37)
    cir.br ^bb2 loc(#loc35)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc35)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc38)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %2 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc39)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc40)
    cir.br ^bb8 loc(#loc41)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc85)
  ^bb6:  // pred: ^bb5
    %4 = cir.get_global @sprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc44)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc46)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc46)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc47)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc47)
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc48)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc48)
    %12 = cir.call @sprintf(%5, %7, %9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc44)
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    cir.br ^bb7 loc(#loc43)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc51)
  ^bb8:  // 2 preds: ^bb4, ^bb7
    cir.br ^bb9 loc(#loc36)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc32)
  } loc(#loc82)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc87)
    cir.br ^bb1 loc(#loc88)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<6> : !s32i loc(#loc58)
    cir.br ^bb2 loc(#loc56)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %1 : !s32i, ^bb7 [
      6: ^bb4
    ] loc(#loc56)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc59)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc89)
  ^bb5:  // pred: ^bb4
    %2 = cir.get_global @sprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc62)
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc64)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc64)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc65)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc65)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc66)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc66)
    %10 = cir.call @sprintf(%3, %5, %7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc62)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    cir.br ^bb6 loc(#loc61)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc69)
  ^bb7:  // pred: ^bb2
    %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc70)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    cir.br ^bb8 loc(#loc72)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc57)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc53)
  } loc(#loc86)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE685_Function_Call_With_Incorrect_Number_of_Arguments/CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":365:1)
#loc2 = loc("/usr/include/stdio.h":366:45)
#loc3 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":31:23)
#loc4 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":31:32)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":37:19)
#loc8 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":23:1)
#loc9 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":40:1)
#loc10 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":29:9)
#loc11 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":29:28)
#loc12 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":25:5)
#loc13 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":39:5)
#loc14 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":25:12)
#loc15 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":27:5)
#loc16 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":28:5)
#loc17 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":33:5)
#loc18 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":31:9)
#loc19 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":31:17)
#loc20 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":32:19)
#loc21 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":32:9)
#loc22 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":34:5)
#loc23 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":37:9)
#loc24 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":38:9)
#loc25 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":86:1)
#loc26 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":90:1)
#loc27 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":88:5)
#loc28 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":88:11)
#loc29 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":89:5)
#loc30 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":89:11)
#loc31 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":47:1)
#loc32 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":64:1)
#loc33 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":57:9)
#loc34 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":57:28)
#loc35 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":49:5)
#loc36 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":63:5)
#loc37 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":49:12)
#loc38 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":51:5)
#loc39 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":53:19)
#loc40 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":53:9)
#loc41 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":54:9)
#loc42 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":56:5)
#loc43 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":61:5)
#loc44 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":59:9)
#loc45 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":59:17)
#loc46 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":59:23)
#loc47 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":59:32)
#loc48 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":59:47)
#loc49 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":60:19)
#loc50 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":60:9)
#loc51 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":62:5)
#loc52 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":67:1)
#loc53 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":84:1)
#loc54 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":73:9)
#loc55 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":73:28)
#loc56 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":69:5)
#loc57 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":83:5)
#loc58 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":69:12)
#loc59 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":71:5)
#loc60 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":72:5)
#loc61 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":77:5)
#loc62 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":75:9)
#loc63 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":75:17)
#loc64 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":75:23)
#loc65 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":75:32)
#loc66 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":75:47)
#loc67 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":76:19)
#loc68 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":76:9)
#loc69 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":78:5)
#loc70 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":81:19)
#loc71 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":81:9)
#loc72 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":82:9)
#loc73 = loc(fused[#loc1, #loc2])
#loc74 = loc(fused[#loc5, #loc6])
#loc75 = loc(fused[#loc8, #loc9])
#loc76 = loc(fused[#loc10, #loc11])
#loc77 = loc(fused[#loc12, #loc13])
#loc78 = loc(fused[#loc16, #loc17])
#loc79 = loc(fused[#loc25, #loc26])
#loc80 = loc(fused[#loc27, #loc28])
#loc81 = loc(fused[#loc29, #loc30])
#loc82 = loc(fused[#loc31, #loc32])
#loc83 = loc(fused[#loc33, #loc34])
#loc84 = loc(fused[#loc35, #loc36])
#loc85 = loc(fused[#loc42, #loc43])
#loc86 = loc(fused[#loc52, #loc53])
#loc87 = loc(fused[#loc54, #loc55])
#loc88 = loc(fused[#loc56, #loc57])
#loc89 = loc(fused[#loc60, #loc61])
