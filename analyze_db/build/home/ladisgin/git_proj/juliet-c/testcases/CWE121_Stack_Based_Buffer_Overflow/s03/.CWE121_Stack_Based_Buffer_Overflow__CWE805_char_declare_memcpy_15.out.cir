!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":130:10)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":130:14)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":130:20)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":130:32)
#loc212 = loc(fused[#loc70, #loc71])
#loc213 = loc(fused[#loc72, #loc73])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc190)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc192)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc193)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc194)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc14)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc16)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc18)
          %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc18)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc20)
          %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc21)
          cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc197)
          cir.break loc(#loc22)
        } loc(#loc15)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc24)
          cir.break loc(#loc25)
        } loc(#loc23)
        cir.yield loc(#loc12)
      } loc(#loc12)
    } loc(#loc195)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc199)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc30)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc31)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc32)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc33)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc32)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc32)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc200)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc36)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc36)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc37)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc38)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc37)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc39)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc201)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc41)
      %22 = cir.const #cir.int<100> : !s32i loc(#loc42)
      %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc42)
      %24 = cir.const #cir.int<1> : !u64i loc(#loc202)
      %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc203)
      cir.libc.memcpy %25 bytes from %21 to %19 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc204)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc47)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc47)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
      %29 = cir.const #cir.int<100> : !s32i loc(#loc49)
      %30 = cir.const #cir.int<1> : !s32i loc(#loc50)
      %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc49)
      %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc51)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc205)
      %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    } loc(#loc198)
    cir.return loc(#loc5)
  } loc(#loc191)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc207)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc208)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    cir.return loc(#loc55)
  } loc(#loc206)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc209)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc67)
  cir.func @main(%arg0: !s32i loc(fused[#loc70, #loc71]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc72, #loc73])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc212)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc213)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc69)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc74)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc75)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc76)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc76)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc77)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc64)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15_good() : () -> () loc(#loc79)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc65)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc66)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc215)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15_bad() : () -> () loc(#loc83)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc67)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc86)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc216)
    cir.return %17 : !s32i loc(#loc216)
  } loc(#loc211)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc218)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc219)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc220)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc98)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc100)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc100)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc101)
          cir.break loc(#loc102)
        } loc(#loc99)
        cir.case(default, []) {
          %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc104)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc222)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc106)
          %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc106)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc108)
          %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc109)
          cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc223)
          cir.break loc(#loc110)
        } loc(#loc103)
        cir.yield loc(#loc96)
      } loc(#loc96)
    } loc(#loc221)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc225)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc115)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc116)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc117)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc118)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc117)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc117)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc226)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc121)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc121)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc122)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc123)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc122)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc124)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc227)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc126)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
      %22 = cir.const #cir.int<100> : !s32i loc(#loc127)
      %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc127)
      %24 = cir.const #cir.int<1> : !u64i loc(#loc228)
      %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc229)
      cir.libc.memcpy %25 bytes from %21 to %19 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc230)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc132)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc132)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
      %29 = cir.const #cir.int<100> : !s32i loc(#loc134)
      %30 = cir.const #cir.int<1> : !s32i loc(#loc135)
      %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc134)
      %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc136)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc231)
      %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    } loc(#loc224)
    cir.return loc(#loc89)
  } loc(#loc217)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc233)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc234)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc235)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc149)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
          cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc237)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc153)
          %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc153)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc155)
          %9 = cir.ptr_stride(%7 : !cir.ptr<!s8i>, %8 : !s32i), !cir.ptr<!s8i> loc(#loc156)
          cir.store %6, %9 : !s8i, !cir.ptr<!s8i> loc(#loc238)
          cir.break loc(#loc157)
        } loc(#loc150)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc159)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc159)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc160)
          cir.break loc(#loc161)
        } loc(#loc158)
        cir.yield loc(#loc147)
      } loc(#loc147)
    } loc(#loc236)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc240)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc166)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc166)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc167)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc168)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc169)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc168)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc168)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc241)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc172)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc172)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc173)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc174)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc173)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc175)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc175)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc242)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc176)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc177)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc177)
      %22 = cir.const #cir.int<100> : !s32i loc(#loc178)
      %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc178)
      %24 = cir.const #cir.int<1> : !u64i loc(#loc243)
      %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc244)
      cir.libc.memcpy %25 bytes from %21 to %19 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc245)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc183)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc183)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc184)
      %29 = cir.const #cir.int<100> : !s32i loc(#loc185)
      %30 = cir.const #cir.int<1> : !s32i loc(#loc186)
      %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc185)
      %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc187)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc246)
      %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc189)
    } loc(#loc239)
    cir.return loc(#loc140)
  } loc(#loc232)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":38:19)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":23:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":50:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":25:5)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":25:12)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":26:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":26:26)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":27:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":27:28)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":28:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":40:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":28:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":30:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":33:16)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":33:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":34:19)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":34:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":34:14)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":34:15)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":35:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":36:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":38:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":39:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":41:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":49:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":42:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":42:24)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":43:16)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":43:24)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":43:29)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":43:33)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":43:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":43:34)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":44:25)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":44:16)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":44:20)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":44:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":46:16)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":46:22)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":46:30)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":46:34)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":46:45)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":46:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":46:46)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":47:23)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":47:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":47:14)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":47:18)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":47:19)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":48:19)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":48:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":114:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":118:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":116:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":116:14)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":117:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":117:14)
#loc60 = loc("/usr/include/stdlib.h":575:1)
#loc61 = loc("/usr/include/stdlib.h":575:41)
#loc62 = loc("/usr/include/time.h":76:1)
#loc63 = loc("/usr/include/time.h":76:38)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":135:15)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":137:15)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":140:15)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":142:15)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":130:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":145:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":131:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":133:27)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":133:22)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":133:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":135:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":136:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":136:76)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":137:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":140:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":141:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":141:75)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":142:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":144:12)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":144:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":57:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":83:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":59:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":59:12)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":60:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":60:26)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":61:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":61:28)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":62:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":73:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":62:12)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":64:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":66:19)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":66:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":67:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":68:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":70:16)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":70:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":71:19)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":71:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":71:14)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":71:15)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":72:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":74:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":82:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":75:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":75:24)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":76:16)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":76:24)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":76:29)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":76:33)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":76:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":76:34)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":77:25)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":77:16)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":77:20)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":77:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":79:16)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":79:22)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":79:30)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":79:34)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":79:45)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":79:9)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":79:46)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":80:23)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":80:9)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":80:14)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":80:18)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":80:19)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":81:19)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":81:9)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":86:1)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":112:1)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":88:5)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":88:12)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":89:5)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":89:26)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":90:5)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":90:28)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":91:5)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":102:5)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":91:12)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":93:5)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":95:16)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":95:9)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":96:19)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":96:9)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":96:14)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":96:15)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":97:9)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":98:5)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":100:19)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":100:9)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":101:9)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":103:5)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":111:5)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":104:9)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":104:24)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":105:16)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":105:24)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":105:29)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":105:33)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":105:9)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":105:34)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":106:25)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":106:16)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":106:20)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":106:9)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":108:16)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":108:22)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":108:30)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":108:34)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":108:45)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":108:9)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":108:46)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":109:23)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":109:9)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":109:14)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":109:18)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":109:19)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":110:19)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memcpy_15.c":110:9)
#loc190 = loc(fused[#loc1, #loc2])
#loc191 = loc(fused[#loc4, #loc5])
#loc192 = loc(fused[#loc6, #loc7])
#loc193 = loc(fused[#loc8, #loc9])
#loc194 = loc(fused[#loc10, #loc11])
#loc195 = loc(fused[#loc12, #loc13])
#loc196 = loc(fused[#loc17, #loc16])
#loc197 = loc(fused[#loc19, #loc18])
#loc198 = loc(fused[#loc26, #loc27])
#loc199 = loc(fused[#loc28, #loc29])
#loc200 = loc(fused[#loc34, #loc35])
#loc201 = loc(fused[#loc39, #loc36])
#loc202 = loc(fused[#loc43, #loc44])
#loc203 = loc(fused[#loc42, #loc44])
#loc204 = loc(fused[#loc45, #loc46])
#loc205 = loc(fused[#loc48, #loc47])
#loc206 = loc(fused[#loc54, #loc55])
#loc207 = loc(fused[#loc56, #loc57])
#loc208 = loc(fused[#loc58, #loc59])
#loc209 = loc(fused[#loc60, #loc61])
#loc210 = loc(fused[#loc62, #loc63])
#loc211 = loc(fused[#loc68, #loc69])
#loc214 = loc(fused[#loc79, #loc80])
#loc215 = loc(fused[#loc83, #loc84])
#loc216 = loc(fused[#loc87, #loc86])
#loc217 = loc(fused[#loc88, #loc89])
#loc218 = loc(fused[#loc90, #loc91])
#loc219 = loc(fused[#loc92, #loc93])
#loc220 = loc(fused[#loc94, #loc95])
#loc221 = loc(fused[#loc96, #loc97])
#loc222 = loc(fused[#loc105, #loc104])
#loc223 = loc(fused[#loc107, #loc106])
#loc224 = loc(fused[#loc111, #loc112])
#loc225 = loc(fused[#loc113, #loc114])
#loc226 = loc(fused[#loc119, #loc120])
#loc227 = loc(fused[#loc124, #loc121])
#loc228 = loc(fused[#loc128, #loc129])
#loc229 = loc(fused[#loc127, #loc129])
#loc230 = loc(fused[#loc130, #loc131])
#loc231 = loc(fused[#loc133, #loc132])
#loc232 = loc(fused[#loc139, #loc140])
#loc233 = loc(fused[#loc141, #loc142])
#loc234 = loc(fused[#loc143, #loc144])
#loc235 = loc(fused[#loc145, #loc146])
#loc236 = loc(fused[#loc147, #loc148])
#loc237 = loc(fused[#loc152, #loc151])
#loc238 = loc(fused[#loc154, #loc153])
#loc239 = loc(fused[#loc162, #loc163])
#loc240 = loc(fused[#loc164, #loc165])
#loc241 = loc(fused[#loc170, #loc171])
#loc242 = loc(fused[#loc175, #loc172])
#loc243 = loc(fused[#loc179, #loc180])
#loc244 = loc(fused[#loc178, #loc180])
#loc245 = loc(fused[#loc181, #loc182])
#loc246 = loc(fused[#loc184, #loc183])
