!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc83)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc13)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc13)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc90)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc91)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc90)
          cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc90)
          %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
          cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
          cir.scope {
            %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc23)
            %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc84)
            %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc24)
            %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc5)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc5)
            %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
            %12 = cir.call @__isoc99_fscanf(%8, %10, %11) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc23)
            %13 = cir.const #cir.int<0> : !s32i loc(#loc26)
            %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc93)
            cir.if %14 {
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc8)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc8)
              cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc28)
            } loc(#loc94)
          } loc(#loc92)
        } loc(#loc89)
      } loc(#loc88)
    } loc(#loc87)
    cir.return loc(#loc10)
  } loc(#loc86)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc96)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc31)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc97)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc33)
    cir.return loc(#loc30)
  } loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc35)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc40)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc40)
      cir.if %1 {
        %2 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc35)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc35)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc44)
      } else {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc102)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc103)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc102)
          cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc102)
          %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
          cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
          cir.scope {
            %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc53)
            %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc84)
            %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc54)
            %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc55)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc55)
            %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
            %12 = cir.call @__isoc99_fscanf(%8, %10, %11) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc53)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc57)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc57)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc105)
            cir.if %15 {
              %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc59)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc59)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc60)
            } loc(#loc106)
          } loc(#loc104)
        } loc(#loc101)
      } loc(#loc100)
    } loc(#loc99)
    cir.return loc(#loc37)
  } loc(#loc98)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc65)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc65)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc111)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc112)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc111)
          cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc111)
          %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
          cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
          cir.scope {
            %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc75)
            %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc84)
            %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc76)
            %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc77)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc77)
            %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
            %12 = cir.call @__isoc99_fscanf(%8, %10, %11) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc75)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc79)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc79)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc114)
            cir.if %15 {
              %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc81)
              %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc81)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc82)
            } loc(#loc115)
          } loc(#loc113)
        } loc(#loc110)
      } loc(#loc109)
    } loc(#loc108)
    cir.return loc(#loc62)
  } loc(#loc107)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":41:31)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":43:27)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":30:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":47:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":32:5)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":46:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":32:8)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":33:5)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":34:9)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":45:9)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":37:13)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":37:36)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":38:13)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":38:27)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":41:13)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":44:13)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":41:17)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":41:24)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":41:41)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":41:50)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":42:13)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":43:17)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":96:1)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":100:1)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":98:5)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":98:11)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":99:5)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":99:11)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":59:19)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":54:1)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":75:1)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":56:5)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":74:5)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":56:8)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":57:5)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":60:5)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":62:5)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":59:9)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":63:9)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":73:9)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":66:13)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":66:36)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":67:13)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":67:27)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":69:13)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":72:13)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":69:17)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":69:24)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":69:31)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":69:41)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":69:50)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":70:13)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":71:27)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":71:17)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":78:1)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":94:1)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":80:5)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":93:5)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":80:8)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":81:5)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":82:9)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":92:9)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":85:13)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":85:36)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":86:13)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":86:27)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":88:13)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":91:13)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":88:17)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":88:24)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":88:31)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":88:41)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":88:50)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":89:13)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":90:27)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fscanf_04.c":90:17)
#loc83 = loc(fused[#loc1, #loc2])
#loc84 = loc(fused[#loc3, #loc4])
#loc85 = loc(fused[#loc6, #loc7])
#loc86 = loc(fused[#loc9, #loc10])
#loc87 = loc(fused[#loc11, #loc12])
#loc88 = loc(fused[#loc14, #loc12])
#loc89 = loc(fused[#loc15, #loc16])
#loc90 = loc(fused[#loc17, #loc18])
#loc91 = loc(fused[#loc19, #loc20])
#loc92 = loc(fused[#loc21, #loc22])
#loc93 = loc(fused[#loc23, #loc26])
#loc94 = loc(fused[#loc27, #loc22])
#loc95 = loc(fused[#loc29, #loc30])
#loc96 = loc(fused[#loc31, #loc32])
#loc97 = loc(fused[#loc33, #loc34])
#loc98 = loc(fused[#loc36, #loc37])
#loc99 = loc(fused[#loc38, #loc39])
#loc100 = loc(fused[#loc41, #loc42, #loc43, #loc39])
#loc101 = loc(fused[#loc45, #loc46])
#loc102 = loc(fused[#loc47, #loc48])
#loc103 = loc(fused[#loc49, #loc50])
#loc104 = loc(fused[#loc51, #loc52])
#loc105 = loc(fused[#loc53, #loc57])
#loc106 = loc(fused[#loc58, #loc52])
#loc107 = loc(fused[#loc61, #loc62])
#loc108 = loc(fused[#loc63, #loc64])
#loc109 = loc(fused[#loc66, #loc64])
#loc110 = loc(fused[#loc67, #loc68])
#loc111 = loc(fused[#loc69, #loc70])
#loc112 = loc(fused[#loc71, #loc72])
#loc113 = loc(fused[#loc73, #loc74])
#loc114 = loc(fused[#loc75, #loc79])
#loc115 = loc(fused[#loc80, #loc74])
