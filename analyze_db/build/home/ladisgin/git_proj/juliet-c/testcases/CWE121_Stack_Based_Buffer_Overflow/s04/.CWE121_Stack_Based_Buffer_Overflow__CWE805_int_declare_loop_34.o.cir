!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34_unionType = !cir.struct<union "CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34_unionType" {!cir.ptr<!s32i>, !cir.ptr<!s32i>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc101)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc103)
    %1 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc104)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc105)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc106)
    %4 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc107)
    %5 = cir.alloca !cir.array<!s32i x 50>, !cir.ptr<!cir.array<!s32i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc108)
    %6 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc109)
    %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s32i x 50>>), !cir.ptr<!s32i> loc(#loc19)
    cir.store %7, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc110)
    %8 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc21)
    %9 = cir.get_member %4[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34_unionType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc22)
    cir.store %8, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc111)
    cir.br ^bb1 loc(#loc112)
  ^bb1:  // pred: ^bb0
    %10 = cir.get_member %4[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34_unionType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc26)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc6)
    cir.store %11, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc103)
    cir.br ^bb2 loc(#loc113)
  ^bb2:  // pred: ^bb1
    %12 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc104)
    cir.store %12, %1 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc104)
    cir.br ^bb3 loc(#loc114)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc115)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc33)
    cir.store %14, %2 : !u64i, !cir.ptr<!u64i> loc(#loc116)
    cir.br ^bb5 loc(#loc115)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %15 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc35)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc36)
    %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc117)
    cir.brcond %18 ^bb6, ^bb10 loc(#loc37)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc118)
  ^bb7:  // pred: ^bb6
    %19 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc39)
    %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc40)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !u64i), !cir.ptr<!s32i> loc(#loc40)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc41)
    %24 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc42)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc43)
    cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc119)
    cir.br ^bb8 loc(#loc32)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc32)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc46)
    cir.store %27, %2 : !u64i, !cir.ptr<!u64i> loc(#loc120)
    cir.br ^bb5 loc(#loc115)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc32)
  ^bb11:  // pred: ^bb10
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc47)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !s32i), !cir.ptr<!s32i> loc(#loc49)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    cir.call @printIntLine(%31) : (!s32i) -> () loc(#loc50)
    cir.br ^bb12 loc(#loc30)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc28)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc25)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc4)
  } loc(#loc102)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc122)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    cir.return loc(#loc52)
  } loc(#loc121)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc125)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc126)
    %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc127)
    %4 = cir.alloca !ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34_unionType, !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc128)
    %5 = cir.alloca !cir.array<!s32i x 50>, !cir.ptr<!cir.array<!s32i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc129)
    %6 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc130)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc71)
    cir.store %7, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc131)
    %8 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc73)
    %9 = cir.get_member %4[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34_unionType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc22)
    cir.store %8, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc132)
    cir.br ^bb1 loc(#loc133)
  ^bb1:  // pred: ^bb0
    %10 = cir.get_member %4[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34_unionType> -> !cir.ptr<!cir.ptr<!s32i>> loc(#loc26)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc58)
    cir.store %11, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc124)
    cir.br ^bb2 loc(#loc134)
  ^bb2:  // pred: ^bb1
    %12 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc125)
    cir.store %12, %1 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc125)
    cir.br ^bb3 loc(#loc135)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc136)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc83)
    cir.store %14, %2 : !u64i, !cir.ptr<!u64i> loc(#loc137)
    cir.br ^bb5 loc(#loc136)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %15 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc85)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc86)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc86)
    %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc138)
    cir.brcond %18 ^bb6, ^bb10 loc(#loc87)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc139)
  ^bb7:  // pred: ^bb6
    %19 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc89)
    %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc90)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !u64i), !cir.ptr<!s32i> loc(#loc90)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc91)
    %24 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc92)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc93)
    cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc140)
    cir.br ^bb8 loc(#loc82)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc82)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc95)
    %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc96)
    cir.store %27, %2 : !u64i, !cir.ptr<!u64i> loc(#loc141)
    cir.br ^bb5 loc(#loc136)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc82)
  ^bb11:  // pred: ^bb10
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc97)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !s32i), !cir.ptr<!s32i> loc(#loc99)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    cir.call @printIntLine(%31) : (!s32i) -> () loc(#loc100)
    cir.br ^bb12 loc(#loc80)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc78)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc76)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc56)
  } loc(#loc123)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":27:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":52:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":38:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":38:30)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":40:13)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":40:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":42:17)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":42:24)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":29:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":29:11)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":30:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":30:78)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":31:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":31:25)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":32:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":32:27)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":35:12)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":35:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":36:26)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":21:11)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":36:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":37:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":51:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":22:11)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":39:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":50:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":41:13)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":49:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":44:17)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":47:17)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":44:26)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":44:22)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":44:29)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":44:33)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":44:31)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":45:17)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":46:38)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":46:31)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":46:21)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":46:26)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":46:27)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":46:39)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":44:39)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":44:38)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":48:30)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":48:35)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":48:36)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":48:17)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":85:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":88:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":87:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":87:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":59:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":83:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":69:9)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":69:30)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":71:13)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":71:33)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":73:17)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":73:24)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":61:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":61:11)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":62:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":62:78)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":63:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":63:25)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":64:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":64:27)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":66:12)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":66:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":67:26)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":67:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":68:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":82:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":70:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":81:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":72:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":80:13)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":75:17)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":78:17)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":75:26)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":75:22)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":75:29)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":75:33)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":75:31)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":76:17)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":77:38)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":77:31)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":77:21)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":77:26)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":77:27)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":77:39)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":75:39)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":75:38)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":79:30)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":79:35)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":79:36)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_loop_34.c":79:17)
#loc101 = loc(fused[#loc1, #loc2])
#loc102 = loc(fused[#loc3, #loc4])
#loc103 = loc(fused[#loc5, #loc6])
#loc104 = loc(fused[#loc7, #loc8])
#loc105 = loc(fused[#loc9, #loc10])
#loc106 = loc(fused[#loc11, #loc12])
#loc107 = loc(fused[#loc13, #loc14])
#loc108 = loc(fused[#loc15, #loc16])
#loc109 = loc(fused[#loc17, #loc18])
#loc110 = loc(fused[#loc20, #loc19])
#loc111 = loc(fused[#loc23, #loc21])
#loc112 = loc(fused[#loc24, #loc25])
#loc113 = loc(fused[#loc27, #loc28])
#loc114 = loc(fused[#loc29, #loc30])
#loc115 = loc(fused[#loc31, #loc32])
#loc116 = loc(fused[#loc34, #loc33])
#loc117 = loc(fused[#loc35, #loc36])
#loc118 = loc(fused[#loc38, #loc32])
#loc119 = loc(fused[#loc41, #loc44])
#loc120 = loc(fused[#loc46, #loc45])
#loc121 = loc(fused[#loc51, #loc52])
#loc122 = loc(fused[#loc53, #loc54])
#loc123 = loc(fused[#loc55, #loc56])
#loc124 = loc(fused[#loc57, #loc58])
#loc125 = loc(fused[#loc59, #loc60])
#loc126 = loc(fused[#loc61, #loc62])
#loc127 = loc(fused[#loc63, #loc64])
#loc128 = loc(fused[#loc65, #loc66])
#loc129 = loc(fused[#loc67, #loc68])
#loc130 = loc(fused[#loc69, #loc70])
#loc131 = loc(fused[#loc72, #loc71])
#loc132 = loc(fused[#loc74, #loc73])
#loc133 = loc(fused[#loc75, #loc76])
#loc134 = loc(fused[#loc77, #loc78])
#loc135 = loc(fused[#loc79, #loc80])
#loc136 = loc(fused[#loc81, #loc82])
#loc137 = loc(fused[#loc84, #loc83])
#loc138 = loc(fused[#loc85, #loc86])
#loc139 = loc(fused[#loc88, #loc82])
#loc140 = loc(fused[#loc91, #loc94])
#loc141 = loc(fused[#loc96, #loc95])
