!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc22 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":47:21)
#loc23 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":47:25)
#loc113 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":100:44)
#loc152 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":135:26)
#loc153 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":135:30)
#loc253 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":200:44)
#loc280 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":226:26)
#loc281 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":226:30)
#loc379 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":286:44)
#loc406 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":312:25)
#loc407 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":312:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc445 = loc(fused[#loc22, #loc23])
#loc495 = loc(fused[#loc152, #loc153])
#loc544 = loc(fused[#loc280, #loc281])
#loc593 = loc(fused[#loc406, #loc407])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc435)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc436)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc437)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc438)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc439)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc440)
  cir.func private @close(!s32i) -> !s32i loc(#loc441)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc442)
  cir.func private @printIntLine(!s32i) loc(#loc443)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc22, #loc23])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc446)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc445)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc26)
    cir.br ^bb1 loc(#loc447)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc442)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc29)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc448)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc449)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %7 = cir.cmp(gt, %5, %6) : !s32i, !cir.bool loc(#loc450)
    cir.brcond %7 ^bb4, ^bb5 loc(#loc451)
  ^bb4:  // pred: ^bb3
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc25)
    %10 = cir.binop(mul, %8, %9) nsw : !s32i loc(#loc36)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc446)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc38)
    cir.br ^bb5 loc(#loc32)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc32)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc28)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc28)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc21)
  } loc(#loc444)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_multiply_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc453)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc454)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc455)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc456)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc457)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc51)
    cir.store %5, %4 : !s32i, !cir.ptr<!s32i> loc(#loc458)
    cir.br ^bb1 loc(#loc459)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc46)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc455)
    cir.br ^bb2 loc(#loc460)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc460)
  ^bb3:  // pred: ^bb24
    %8 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc57)
    cir.brcond %9 ^bb4, ^bb25 loc(#loc57)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %10 = cir.const #cir.int<2> : !s32i loc(#loc58)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %12 = cir.const #cir.int<6> : !s32i loc(#loc60)
    %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc61)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc461)
    cir.br ^bb5 loc(#loc462)
  ^bb5:  // pred: ^bb4
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc67)
    %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc463)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc464)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc69)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc65)
  ^bb8:  // pred: ^bb7
    %18 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc465)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %20 = cir.const #cir.int<16> : !u64i loc(#loc466)
    cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc467)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc77)
    %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc77)
    %23 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
    cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc468)
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc80)
    %27 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc81)
    %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc82)
    cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc469)
    %29 = cir.const #cir.int<27015> : !s32i loc(#loc85)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc85)
    %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc86)
    %32 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc470)
    cir.br ^bb9 loc(#loc471)
  ^bb9:  // pred: ^bb8
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %34 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc472)
    %35 = cir.const #cir.int<16> : !u64i loc(#loc473)
    %36 = cir.cast(integral, %35 : !u64i), !u32i loc(#loc473)
    %37 = cir.call @connect(%33, %34, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc97)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc98)
    %40 = cir.cmp(eq, %37, %39) : !s32i, !cir.bool loc(#loc474)
    cir.brcond %40 ^bb10, ^bb11 loc(#loc475)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc100)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc91)
  ^bb12:  // pred: ^bb11
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %42 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
    %44 = cir.const #cir.int<3> : !s32i loc(#loc103)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc103)
    %46 = cir.const #cir.int<4> : !u64i loc(#loc103)
    %47 = cir.binop(mul, %45, %46) : !u64i loc(#loc103)
    %48 = cir.const #cir.int<2> : !s32i loc(#loc103)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc103)
    %50 = cir.binop(add, %47, %49) : !u64i loc(#loc103)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc104)
    %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc476)
    %54 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %55 = cir.call @recv(%41, %43, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc106)
    %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc106)
    cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc477)
    cir.br ^bb13 loc(#loc478)
  ^bb13:  // pred: ^bb12
    %57 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc112)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc479)
    cir.brcond %60 ^bb14, ^bb15 loc(#loc113)
  ^bb14:  // pred: ^bb13
    %61 = cir.const #true loc(#loc113)
    cir.br ^bb20(%61 : !cir.bool) loc(#loc113)
  ^bb15:  // pred: ^bb13
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc480)
    cir.brcond %64 ^bb16, ^bb17 loc(#loc113)
  ^bb16:  // pred: ^bb15
    %65 = cir.const #true loc(#loc113)
    cir.br ^bb18(%65 : !cir.bool) loc(#loc113)
  ^bb17:  // pred: ^bb15
    %66 = cir.const #false loc(#loc113)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc113)
  ^bb18(%67: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":100:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc113)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%67 : !cir.bool) loc(#loc113)
  ^bb20(%68: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":100:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc113)
  ^bb21:  // pred: ^bb20
    cir.brcond %68 ^bb22, ^bb23 loc(#loc481)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc117)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc110)
  ^bb24:  // pred: ^bb23
    %69 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %70 = cir.cast(integral, %69 : !s32i), !s8i loc(#loc118)
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %72 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc120)
    %73 = cir.ptr_stride(%72 : !cir.ptr<!s8i>, %71 : !s32i), !cir.ptr<!s8i> loc(#loc120)
    cir.store %70, %73 : !s8i, !cir.ptr<!s8i> loc(#loc482)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc121)
    %75 = cir.call @atoi(%74) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc122)
    cir.store %75, %4 : !s32i, !cir.ptr<!s32i> loc(#loc483)
    cir.br ^bb3 loc(#loc56)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc56)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc484)
  ^bb27:  // pred: ^bb26
    %76 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc128)
    %79 = cir.cmp(ne, %76, %78) : !s32i, !cir.bool loc(#loc485)
    cir.brcond %79 ^bb28, ^bb29 loc(#loc486)
  ^bb28:  // pred: ^bb27
    %80 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %81 = cir.call @close(%80) : (!s32i) -> !s32i loc(#loc131)
    cir.br ^bb29 loc(#loc126)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc126)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc54)
  ^bb31:  // pred: ^bb30
    %82 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %83 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc442)
    cir.store %82, %83 : !s32i, !cir.ptr<!s32i> loc(#loc487)
    %84 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    cir.call @badSink(%84) : (!s32i) -> () loc(#loc135)
    cir.return loc(#loc40)
  } loc(#loc452)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_multiply_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc489)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc138)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc490)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc140)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc491)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc142)
    cir.return loc(#loc137)
  } loc(#loc488)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc492)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc493)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc149)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc152, #loc153])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc496)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc495)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    cir.br ^bb1 loc(#loc497)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc492)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc159)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc498)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc148)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc148)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc163)
    cir.br ^bb13 loc(#loc161)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc499)
  ^bb4:  // pred: ^bb3
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc167)
    %9 = cir.cmp(gt, %7, %8) : !s32i, !cir.bool loc(#loc500)
    cir.brcond %9 ^bb5, ^bb11 loc(#loc501)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc502)
  ^bb6:  // pred: ^bb5
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    %11 = cir.const #cir.int<2147483647> : !s32i loc(#loc172)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc173)
    %13 = cir.binop(div, %11, %12) : !s32i loc(#loc503)
    %14 = cir.cmp(lt, %10, %13) : !s32i, !cir.bool loc(#loc504)
    cir.brcond %14 ^bb7, ^bb8 loc(#loc505)
  ^bb7:  // pred: ^bb6
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc155)
    %17 = cir.binop(mul, %15, %16) nsw : !s32i loc(#loc178)
    cir.store %17, %0 : !s32i, !cir.ptr<!s32i> loc(#loc496)
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc180)
    cir.br ^bb9 loc(#loc176)
  ^bb8:  // pred: ^bb6
    %19 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc149)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc149)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc181)
    cir.br ^bb9 loc(#loc170)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc170)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc165)
  ^bb11:  // 2 preds: ^bb4, ^bb10
    cir.br ^bb12 loc(#loc165)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc158)
  ^bb13:  // 2 preds: ^bb2, ^bb12
    cir.br ^bb14 loc(#loc158)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc151)
  } loc(#loc494)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc507)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc508)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc509)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc510)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc511)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc194)
    cir.store %5, %4 : !s32i, !cir.ptr<!s32i> loc(#loc512)
    cir.br ^bb1 loc(#loc513)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc189)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc189)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc509)
    cir.br ^bb2 loc(#loc514)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc514)
  ^bb3:  // pred: ^bb24
    %8 = cir.const #cir.int<0> : !s32i loc(#loc200)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc200)
    cir.brcond %9 ^bb4, ^bb25 loc(#loc200)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %10 = cir.const #cir.int<2> : !s32i loc(#loc201)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc202)
    %12 = cir.const #cir.int<6> : !s32i loc(#loc203)
    %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc204)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc515)
    cir.br ^bb5 loc(#loc516)
  ^bb5:  // pred: ^bb4
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc210)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc210)
    %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc517)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc518)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc212)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc208)
  ^bb8:  // pred: ^bb7
    %18 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc519)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc215)
    %20 = cir.const #cir.int<16> : !u64i loc(#loc520)
    cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc521)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc220)
    %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc220)
    %23 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
    cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc522)
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc222)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc222)
    %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc223)
    %27 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc81)
    %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc82)
    cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc523)
    %29 = cir.const #cir.int<27015> : !s32i loc(#loc226)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc226)
    %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc227)
    %32 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc524)
    cir.br ^bb9 loc(#loc525)
  ^bb9:  // pred: ^bb8
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc232)
    %34 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc526)
    %35 = cir.const #cir.int<16> : !u64i loc(#loc527)
    %36 = cir.cast(integral, %35 : !u64i), !u32i loc(#loc527)
    %37 = cir.call @connect(%33, %34, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc237)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc238)
    %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc238)
    %40 = cir.cmp(eq, %37, %39) : !s32i, !cir.bool loc(#loc528)
    cir.brcond %40 ^bb10, ^bb11 loc(#loc529)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc240)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc231)
  ^bb12:  // pred: ^bb11
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    %42 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc242)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc242)
    %44 = cir.const #cir.int<3> : !s32i loc(#loc243)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc243)
    %46 = cir.const #cir.int<4> : !u64i loc(#loc243)
    %47 = cir.binop(mul, %45, %46) : !u64i loc(#loc243)
    %48 = cir.const #cir.int<2> : !s32i loc(#loc243)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc243)
    %50 = cir.binop(add, %47, %49) : !u64i loc(#loc243)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc244)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc244)
    %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc530)
    %54 = cir.const #cir.int<0> : !s32i loc(#loc245)
    %55 = cir.call @recv(%41, %43, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc246)
    %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc246)
    cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc531)
    cir.br ^bb13 loc(#loc532)
  ^bb13:  // pred: ^bb12
    %57 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc251)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc252)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc252)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc533)
    cir.brcond %60 ^bb14, ^bb15 loc(#loc253)
  ^bb14:  // pred: ^bb13
    %61 = cir.const #true loc(#loc253)
    cir.br ^bb20(%61 : !cir.bool) loc(#loc253)
  ^bb15:  // pred: ^bb13
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc254)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc255)
    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc534)
    cir.brcond %64 ^bb16, ^bb17 loc(#loc253)
  ^bb16:  // pred: ^bb15
    %65 = cir.const #true loc(#loc253)
    cir.br ^bb18(%65 : !cir.bool) loc(#loc253)
  ^bb17:  // pred: ^bb15
    %66 = cir.const #false loc(#loc253)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc253)
  ^bb18(%67: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":200:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc253)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%67 : !cir.bool) loc(#loc253)
  ^bb20(%68: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":200:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc253)
  ^bb21:  // pred: ^bb20
    cir.brcond %68 ^bb22, ^bb23 loc(#loc535)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc257)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc250)
  ^bb24:  // pred: ^bb23
    %69 = cir.const #cir.int<0> : !s32i loc(#loc258)
    %70 = cir.cast(integral, %69 : !s32i), !s8i loc(#loc258)
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc259)
    %72 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc260)
    %73 = cir.ptr_stride(%72 : !cir.ptr<!s8i>, %71 : !s32i), !cir.ptr<!s8i> loc(#loc260)
    cir.store %70, %73 : !s8i, !cir.ptr<!s8i> loc(#loc536)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc261)
    %75 = cir.call @atoi(%74) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc262)
    cir.store %75, %4 : !s32i, !cir.ptr<!s32i> loc(#loc537)
    cir.br ^bb3 loc(#loc199)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc199)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc538)
  ^bb27:  // pred: ^bb26
    %76 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc267)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc268)
    %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc268)
    %79 = cir.cmp(ne, %76, %78) : !s32i, !cir.bool loc(#loc539)
    cir.brcond %79 ^bb28, ^bb29 loc(#loc540)
  ^bb28:  // pred: ^bb27
    %80 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    %81 = cir.call @close(%80) : (!s32i) -> !s32i loc(#loc271)
    cir.br ^bb29 loc(#loc266)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc266)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc197)
  ^bb31:  // pred: ^bb30
    %82 = cir.const #cir.int<0> : !s32i loc(#loc272)
    %83 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc492)
    cir.store %82, %83 : !s32i, !cir.ptr<!s32i> loc(#loc541)
    %84 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc274)
    cir.call @goodB2G1Sink(%84) : (!s32i) -> () loc(#loc275)
    cir.return loc(#loc183)
  } loc(#loc506)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc542)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc280, #loc281])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc545)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc544)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc284)
    cir.br ^bb1 loc(#loc546)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc542)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc287)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc287)
    cir.brcond %4 ^bb2, ^bb12 loc(#loc547)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc548)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc291)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc292)
    %7 = cir.cmp(gt, %5, %6) : !s32i, !cir.bool loc(#loc549)
    cir.brcond %7 ^bb4, ^bb10 loc(#loc550)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc551)
  ^bb5:  // pred: ^bb4
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc296)
    %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc297)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc298)
    %11 = cir.binop(div, %9, %10) : !s32i loc(#loc552)
    %12 = cir.cmp(lt, %8, %11) : !s32i, !cir.bool loc(#loc553)
    cir.brcond %12 ^bb6, ^bb7 loc(#loc554)
  ^bb6:  // pred: ^bb5
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc303)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc283)
    %15 = cir.binop(mul, %13, %14) nsw : !s32i loc(#loc303)
    cir.store %15, %0 : !s32i, !cir.ptr<!s32i> loc(#loc545)
    %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc304)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc305)
    cir.br ^bb8 loc(#loc301)
  ^bb7:  // pred: ^bb5
    %17 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc306)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc306)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc307)
    cir.br ^bb8 loc(#loc295)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc295)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc290)
  ^bb10:  // 2 preds: ^bb3, ^bb9
    cir.br ^bb11 loc(#loc290)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc286)
  ^bb12:  // 2 preds: ^bb1, ^bb11
    cir.br ^bb13 loc(#loc286)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc279)
  } loc(#loc543)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc556)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc557)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc558)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc559)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc560)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc320)
    cir.store %5, %4 : !s32i, !cir.ptr<!s32i> loc(#loc561)
    cir.br ^bb1 loc(#loc562)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc315)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc315)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc558)
    cir.br ^bb2 loc(#loc563)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc563)
  ^bb3:  // pred: ^bb24
    %8 = cir.const #cir.int<0> : !s32i loc(#loc326)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc326)
    cir.brcond %9 ^bb4, ^bb25 loc(#loc326)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %10 = cir.const #cir.int<2> : !s32i loc(#loc327)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc328)
    %12 = cir.const #cir.int<6> : !s32i loc(#loc329)
    %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc330)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc564)
    cir.br ^bb5 loc(#loc565)
  ^bb5:  // pred: ^bb4
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc335)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc336)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc336)
    %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc566)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc567)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc338)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc334)
  ^bb8:  // pred: ^bb7
    %18 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc568)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc341)
    %20 = cir.const #cir.int<16> : !u64i loc(#loc569)
    cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc570)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc346)
    %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc346)
    %23 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
    cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc571)
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc348)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc348)
    %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc349)
    %27 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc81)
    %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc82)
    cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc572)
    %29 = cir.const #cir.int<27015> : !s32i loc(#loc352)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc352)
    %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc353)
    %32 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc573)
    cir.br ^bb9 loc(#loc574)
  ^bb9:  // pred: ^bb8
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc358)
    %34 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc575)
    %35 = cir.const #cir.int<16> : !u64i loc(#loc576)
    %36 = cir.cast(integral, %35 : !u64i), !u32i loc(#loc576)
    %37 = cir.call @connect(%33, %34, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc363)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc364)
    %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc364)
    %40 = cir.cmp(eq, %37, %39) : !s32i, !cir.bool loc(#loc577)
    cir.brcond %40 ^bb10, ^bb11 loc(#loc578)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc366)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc357)
  ^bb12:  // pred: ^bb11
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc367)
    %42 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc368)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc368)
    %44 = cir.const #cir.int<3> : !s32i loc(#loc369)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc369)
    %46 = cir.const #cir.int<4> : !u64i loc(#loc369)
    %47 = cir.binop(mul, %45, %46) : !u64i loc(#loc369)
    %48 = cir.const #cir.int<2> : !s32i loc(#loc369)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc369)
    %50 = cir.binop(add, %47, %49) : !u64i loc(#loc369)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc370)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc370)
    %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc579)
    %54 = cir.const #cir.int<0> : !s32i loc(#loc371)
    %55 = cir.call @recv(%41, %43, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc372)
    %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc372)
    cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc580)
    cir.br ^bb13 loc(#loc581)
  ^bb13:  // pred: ^bb12
    %57 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc377)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc378)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc378)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc582)
    cir.brcond %60 ^bb14, ^bb15 loc(#loc379)
  ^bb14:  // pred: ^bb13
    %61 = cir.const #true loc(#loc379)
    cir.br ^bb20(%61 : !cir.bool) loc(#loc379)
  ^bb15:  // pred: ^bb13
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc380)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc381)
    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc583)
    cir.brcond %64 ^bb16, ^bb17 loc(#loc379)
  ^bb16:  // pred: ^bb15
    %65 = cir.const #true loc(#loc379)
    cir.br ^bb18(%65 : !cir.bool) loc(#loc379)
  ^bb17:  // pred: ^bb15
    %66 = cir.const #false loc(#loc379)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc379)
  ^bb18(%67: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":286:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc379)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%67 : !cir.bool) loc(#loc379)
  ^bb20(%68: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":286:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc379)
  ^bb21:  // pred: ^bb20
    cir.brcond %68 ^bb22, ^bb23 loc(#loc584)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc383)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc376)
  ^bb24:  // pred: ^bb23
    %69 = cir.const #cir.int<0> : !s32i loc(#loc384)
    %70 = cir.cast(integral, %69 : !s32i), !s8i loc(#loc384)
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc385)
    %72 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc386)
    %73 = cir.ptr_stride(%72 : !cir.ptr<!s8i>, %71 : !s32i), !cir.ptr<!s8i> loc(#loc386)
    cir.store %70, %73 : !s8i, !cir.ptr<!s8i> loc(#loc585)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc387)
    %75 = cir.call @atoi(%74) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc388)
    cir.store %75, %4 : !s32i, !cir.ptr<!s32i> loc(#loc586)
    cir.br ^bb3 loc(#loc325)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc325)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc587)
  ^bb27:  // pred: ^bb26
    %76 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc393)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc394)
    %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc394)
    %79 = cir.cmp(ne, %76, %78) : !s32i, !cir.bool loc(#loc588)
    cir.brcond %79 ^bb28, ^bb29 loc(#loc589)
  ^bb28:  // pred: ^bb27
    %80 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc396)
    %81 = cir.call @close(%80) : (!s32i) -> !s32i loc(#loc397)
    cir.br ^bb29 loc(#loc392)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc392)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc323)
  ^bb31:  // pred: ^bb30
    %82 = cir.const #cir.int<1> : !s32i loc(#loc398)
    %83 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc542)
    cir.store %82, %83 : !s32i, !cir.ptr<!s32i> loc(#loc590)
    %84 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc400)
    cir.call @goodB2G2Sink(%84) : (!s32i) -> () loc(#loc401)
    cir.return loc(#loc309)
  } loc(#loc555)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc591)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc406, #loc407])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc594)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc593)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc410)
    cir.br ^bb1 loc(#loc595)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc591)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc413)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc413)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc596)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc597)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc417)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc418)
    %7 = cir.cmp(gt, %5, %6) : !s32i, !cir.bool loc(#loc598)
    cir.brcond %7 ^bb4, ^bb5 loc(#loc599)
  ^bb4:  // pred: ^bb3
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc420)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc409)
    %10 = cir.binop(mul, %8, %9) nsw : !s32i loc(#loc420)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc594)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc421)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc422)
    cir.br ^bb5 loc(#loc416)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc416)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc412)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc412)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc405)
  } loc(#loc592)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc601)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc427)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc602)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc429)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc603)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc431)
    %4 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc591)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc604)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc433)
    cir.call @goodG2BSink(%5) : (!s32i) -> () loc(#loc434)
    cir.return loc(#loc424)
  } loc(#loc600)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":91:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":45:1)
#loc17 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":45:24)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":47:1)
#loc21 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":58:1)
#loc24 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":54:13)
#loc25 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":54:33)
#loc26 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":48:1)
#loc27 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":49:5)
#loc28 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":57:5)
#loc29 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":49:8)
#loc30 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":50:5)
#loc31 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":51:9)
#loc32 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":56:9)
#loc33 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":51:12)
#loc34 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":51:19)
#loc35 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":52:9)
#loc36 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":54:26)
#loc37 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":55:26)
#loc38 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":55:13)
#loc39 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":60:1)
#loc40 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":123:1)
#loc41 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":70:9)
#loc42 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":70:13)
#loc43 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":71:9)
#loc44 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":71:28)
#loc45 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":72:9)
#loc46 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":72:32)
#loc47 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":73:9)
#loc48 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":73:41)
#loc49 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":62:5)
#loc50 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":62:9)
#loc51 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":64:12)
#loc52 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":64:5)
#loc53 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":65:5)
#loc54 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":120:5)
#loc55 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":74:9)
#loc56 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":109:17)
#loc57 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":109:16)
#loc58 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":84:36)
#loc59 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":84:45)
#loc60 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":84:58)
#loc61 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":84:29)
#loc62 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":84:13)
#loc63 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":84:69)
#loc64 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":85:13)
#loc65 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":88:13)
#loc66 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":85:17)
#loc67 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":85:34)
#loc68 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":86:13)
#loc69 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":87:17)
#loc70 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":89:20)
#loc71 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":89:21)
#loc72 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":89:30)
#loc73 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":89:33)
#loc74 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":89:47)
#loc75 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":89:13)
#loc76 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":89:48)
#loc77 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":90:34)
#loc78 = loc("/usr/include/netinet/in.h":249:5)
#loc79 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":90:13)
#loc80 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":91:39)
#loc81 = loc("/usr/include/netinet/in.h":251:20)
#loc82 = loc("/usr/include/netinet/in.h":33:15)
#loc83 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":91:13)
#loc84 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":91:59)
#loc85 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":92:38)
#loc86 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":92:32)
#loc87 = loc("/usr/include/netinet/in.h":250:15)
#loc88 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":92:13)
#loc89 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":92:46)
#loc90 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":93:13)
#loc91 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":96:13)
#loc92 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":93:25)
#loc93 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":93:58)
#loc94 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":93:59)
#loc95 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":93:68)
#loc96 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":93:82)
#loc97 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":93:17)
#loc98 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":93:88)
#loc99 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":94:13)
#loc100 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":95:17)
#loc101 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":99:31)
#loc102 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":99:46)
#loc103 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":99:59)
#loc104 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":99:77)
#loc105 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":99:80)
#loc106 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":99:26)
#loc107 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":99:13)
#loc108 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":99:81)
#loc109 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":100:13)
#loc110 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":103:13)
#loc111 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":100:17)
#loc112 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":100:31)
#loc114 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":100:47)
#loc115 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":100:61)
#loc116 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":101:13)
#loc117 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":102:17)
#loc118 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":105:39)
#loc119 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":105:25)
#loc120 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":105:13)
#loc121 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":107:25)
#loc122 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":107:20)
#loc123 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":107:13)
#loc124 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":107:36)
#loc125 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":110:9)
#loc126 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":113:9)
#loc127 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":110:13)
#loc128 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":110:30)
#loc129 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":111:9)
#loc130 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":112:26)
#loc131 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":112:13)
#loc132 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":121:17)
#loc133 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":121:5)
#loc134 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":122:13)
#loc135 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":122:5)
#loc136 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":336:1)
#loc137 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":341:1)
#loc138 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":338:5)
#loc139 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":338:14)
#loc140 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":339:5)
#loc141 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":339:14)
#loc142 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":340:5)
#loc143 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":340:13)
#loc144 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":130:1)
#loc145 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":130:29)
#loc146 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc147 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc148 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":140:19)
#loc149 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":154:27)
#loc150 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":135:1)
#loc151 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":158:1)
#loc154 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":149:17)
#loc155 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":149:37)
#loc156 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":136:1)
#loc157 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":137:5)
#loc158 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":157:5)
#loc159 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":137:8)
#loc160 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":138:5)
#loc161 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":141:5)
#loc162 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":143:5)
#loc163 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":140:9)
#loc164 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":144:9)
#loc165 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":156:9)
#loc166 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":144:12)
#loc167 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":144:19)
#loc168 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":145:9)
#loc169 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":147:13)
#loc170 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":155:13)
#loc171 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":147:17)
#loc172 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":147:25)
#loc173 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":147:33)
#loc174 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":147:34)
#loc175 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":148:13)
#loc176 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":151:13)
#loc177 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":153:13)
#loc178 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":149:30)
#loc179 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":150:30)
#loc180 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":150:17)
#loc181 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":154:17)
#loc182 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":160:1)
#loc183 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":223:1)
#loc184 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":170:9)
#loc185 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":170:13)
#loc186 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":171:9)
#loc187 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":171:28)
#loc188 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":172:9)
#loc189 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":172:32)
#loc190 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":173:9)
#loc191 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":173:41)
#loc192 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":162:5)
#loc193 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":162:9)
#loc194 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":164:12)
#loc195 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":164:5)
#loc196 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":165:5)
#loc197 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":220:5)
#loc198 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":174:9)
#loc199 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":209:17)
#loc200 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":209:16)
#loc201 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":184:36)
#loc202 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":184:45)
#loc203 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":184:58)
#loc204 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":184:29)
#loc205 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":184:13)
#loc206 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":184:69)
#loc207 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":185:13)
#loc208 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":188:13)
#loc209 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":185:17)
#loc210 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":185:34)
#loc211 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":186:13)
#loc212 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":187:17)
#loc213 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":189:20)
#loc214 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":189:21)
#loc215 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":189:30)
#loc216 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":189:33)
#loc217 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":189:47)
#loc218 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":189:13)
#loc219 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":189:48)
#loc220 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":190:34)
#loc221 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":190:13)
#loc222 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":191:49)
#loc223 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":191:39)
#loc224 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":191:13)
#loc225 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":191:59)
#loc226 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":192:38)
#loc227 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":192:32)
#loc228 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":192:13)
#loc229 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":192:46)
#loc230 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":193:13)
#loc231 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":196:13)
#loc232 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":193:25)
#loc233 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":193:58)
#loc234 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":193:59)
#loc235 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":193:68)
#loc236 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":193:82)
#loc237 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":193:17)
#loc238 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":193:88)
#loc239 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":194:13)
#loc240 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":195:17)
#loc241 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":199:31)
#loc242 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":199:46)
#loc243 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":199:59)
#loc244 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":199:77)
#loc245 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":199:80)
#loc246 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":199:26)
#loc247 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":199:13)
#loc248 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":199:81)
#loc249 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":200:13)
#loc250 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":203:13)
#loc251 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":200:17)
#loc252 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":200:31)
#loc254 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":200:47)
#loc255 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":200:61)
#loc256 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":201:13)
#loc257 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":202:17)
#loc258 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":205:39)
#loc259 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":205:25)
#loc260 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":205:13)
#loc261 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":207:25)
#loc262 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":207:20)
#loc263 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":207:13)
#loc264 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":207:36)
#loc265 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":210:9)
#loc266 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":213:9)
#loc267 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":210:13)
#loc268 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":210:30)
#loc269 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":211:9)
#loc270 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":212:26)
#loc271 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":212:13)
#loc272 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":221:22)
#loc273 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":221:5)
#loc274 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":222:18)
#loc275 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":222:5)
#loc276 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":131:1)
#loc277 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":131:29)
#loc278 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":226:1)
#loc279 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":244:1)
#loc282 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":235:17)
#loc283 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":235:37)
#loc284 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":227:1)
#loc285 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":228:5)
#loc286 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":243:5)
#loc287 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":228:8)
#loc288 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":229:5)
#loc289 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":230:9)
#loc290 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":242:9)
#loc291 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":230:12)
#loc292 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":230:19)
#loc293 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":231:9)
#loc294 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":233:13)
#loc295 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":241:13)
#loc296 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":233:17)
#loc297 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":233:25)
#loc298 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":233:33)
#loc299 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":233:34)
#loc300 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":234:13)
#loc301 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":237:13)
#loc302 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":239:13)
#loc303 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":235:30)
#loc304 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":236:30)
#loc305 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":236:17)
#loc306 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":240:27)
#loc307 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":240:17)
#loc308 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":246:1)
#loc309 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":309:1)
#loc310 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":256:9)
#loc311 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":256:13)
#loc312 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":257:9)
#loc313 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":257:28)
#loc314 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":258:9)
#loc315 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":258:32)
#loc316 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":259:9)
#loc317 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":259:41)
#loc318 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":248:5)
#loc319 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":248:9)
#loc320 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":250:12)
#loc321 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":250:5)
#loc322 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":251:5)
#loc323 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":306:5)
#loc324 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":260:9)
#loc325 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":295:17)
#loc326 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":295:16)
#loc327 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":270:36)
#loc328 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":270:45)
#loc329 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":270:58)
#loc330 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":270:29)
#loc331 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":270:13)
#loc332 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":270:69)
#loc333 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":271:13)
#loc334 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":274:13)
#loc335 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":271:17)
#loc336 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":271:34)
#loc337 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":272:13)
#loc338 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":273:17)
#loc339 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":275:20)
#loc340 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":275:21)
#loc341 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":275:30)
#loc342 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":275:33)
#loc343 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":275:47)
#loc344 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":275:13)
#loc345 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":275:48)
#loc346 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":276:34)
#loc347 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":276:13)
#loc348 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":277:49)
#loc349 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":277:39)
#loc350 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":277:13)
#loc351 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":277:59)
#loc352 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":278:38)
#loc353 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":278:32)
#loc354 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":278:13)
#loc355 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":278:46)
#loc356 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":279:13)
#loc357 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":282:13)
#loc358 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":279:25)
#loc359 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":279:58)
#loc360 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":279:59)
#loc361 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":279:68)
#loc362 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":279:82)
#loc363 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":279:17)
#loc364 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":279:88)
#loc365 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":280:13)
#loc366 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":281:17)
#loc367 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":285:31)
#loc368 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":285:46)
#loc369 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":285:59)
#loc370 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":285:77)
#loc371 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":285:80)
#loc372 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":285:26)
#loc373 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":285:13)
#loc374 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":285:81)
#loc375 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":286:13)
#loc376 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":289:13)
#loc377 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":286:17)
#loc378 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":286:31)
#loc380 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":286:47)
#loc381 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":286:61)
#loc382 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":287:13)
#loc383 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":288:17)
#loc384 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":291:39)
#loc385 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":291:25)
#loc386 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":291:13)
#loc387 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":293:25)
#loc388 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":293:20)
#loc389 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":293:13)
#loc390 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":293:36)
#loc391 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":296:9)
#loc392 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":299:9)
#loc393 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":296:13)
#loc394 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":296:30)
#loc395 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":297:9)
#loc396 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":298:26)
#loc397 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":298:13)
#loc398 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":307:22)
#loc399 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":307:5)
#loc400 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":308:18)
#loc401 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":308:5)
#loc402 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":132:1)
#loc403 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":132:28)
#loc404 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":312:1)
#loc405 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":323:1)
#loc408 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":319:13)
#loc409 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":319:33)
#loc410 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":313:1)
#loc411 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":314:5)
#loc412 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":322:5)
#loc413 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":314:8)
#loc414 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":315:5)
#loc415 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":316:9)
#loc416 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":321:9)
#loc417 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":316:12)
#loc418 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":316:19)
#loc419 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":317:9)
#loc420 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":319:26)
#loc421 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":320:26)
#loc422 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":320:13)
#loc423 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":325:1)
#loc424 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":334:1)
#loc425 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":327:5)
#loc426 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":327:9)
#loc427 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":329:12)
#loc428 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":329:5)
#loc429 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":331:12)
#loc430 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":331:5)
#loc431 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":332:21)
#loc432 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":332:5)
#loc433 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":333:17)
#loc434 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_21.c":333:5)
#loc435 = loc(fused[#loc1, #loc2])
#loc436 = loc(fused[#loc3, #loc4])
#loc437 = loc(fused[#loc6, #loc7])
#loc438 = loc(fused[#loc8, #loc9])
#loc439 = loc(fused[#loc10, #loc11])
#loc440 = loc(fused[#loc12, #loc13])
#loc441 = loc(fused[#loc14, #loc15])
#loc442 = loc(fused[#loc16, #loc17])
#loc443 = loc(fused[#loc18, #loc19])
#loc444 = loc(fused[#loc20, #loc21])
#loc446 = loc(fused[#loc24, #loc25])
#loc447 = loc(fused[#loc27, #loc28])
#loc448 = loc(fused[#loc30, #loc28])
#loc449 = loc(fused[#loc31, #loc32])
#loc450 = loc(fused[#loc33, #loc34])
#loc451 = loc(fused[#loc35, #loc32])
#loc452 = loc(fused[#loc39, #loc40])
#loc453 = loc(fused[#loc41, #loc42])
#loc454 = loc(fused[#loc43, #loc44])
#loc455 = loc(fused[#loc45, #loc46])
#loc456 = loc(fused[#loc47, #loc48])
#loc457 = loc(fused[#loc49, #loc50])
#loc458 = loc(fused[#loc52, #loc51])
#loc459 = loc(fused[#loc53, #loc54])
#loc460 = loc(fused[#loc55, #loc56])
#loc461 = loc(fused[#loc62, #loc63])
#loc462 = loc(fused[#loc64, #loc65])
#loc463 = loc(fused[#loc66, #loc67])
#loc464 = loc(fused[#loc68, #loc65])
#loc465 = loc(fused[#loc70, #loc71])
#loc466 = loc(fused[#loc73, #loc74])
#loc467 = loc(fused[#loc75, #loc76])
#loc468 = loc(fused[#loc79, #loc77])
#loc469 = loc(fused[#loc83, #loc84])
#loc470 = loc(fused[#loc88, #loc89])
#loc471 = loc(fused[#loc90, #loc91])
#loc472 = loc(fused[#loc93, #loc94])
#loc473 = loc(fused[#loc95, #loc96])
#loc474 = loc(fused[#loc97, #loc98])
#loc475 = loc(fused[#loc99, #loc91])
#loc476 = loc(fused[#loc103, #loc104])
#loc477 = loc(fused[#loc107, #loc108])
#loc478 = loc(fused[#loc109, #loc110])
#loc479 = loc(fused[#loc111, #loc112])
#loc480 = loc(fused[#loc114, #loc115])
#loc481 = loc(fused[#loc116, #loc110])
#loc482 = loc(fused[#loc120, #loc118])
#loc483 = loc(fused[#loc123, #loc124])
#loc484 = loc(fused[#loc125, #loc126])
#loc485 = loc(fused[#loc127, #loc128])
#loc486 = loc(fused[#loc129, #loc126])
#loc487 = loc(fused[#loc133, #loc132])
#loc488 = loc(fused[#loc136, #loc137])
#loc489 = loc(fused[#loc138, #loc139])
#loc490 = loc(fused[#loc140, #loc141])
#loc491 = loc(fused[#loc142, #loc143])
#loc492 = loc(fused[#loc144, #loc145])
#loc493 = loc(fused[#loc146, #loc147])
#loc494 = loc(fused[#loc150, #loc151])
#loc496 = loc(fused[#loc154, #loc155])
#loc497 = loc(fused[#loc157, #loc158])
#loc498 = loc(fused[#loc160, #loc161, #loc162, #loc158])
#loc499 = loc(fused[#loc164, #loc165])
#loc500 = loc(fused[#loc166, #loc167])
#loc501 = loc(fused[#loc168, #loc165])
#loc502 = loc(fused[#loc169, #loc170])
#loc503 = loc(fused[#loc172, #loc173])
#loc504 = loc(fused[#loc171, #loc174])
#loc505 = loc(fused[#loc175, #loc176, #loc177, #loc170])
#loc506 = loc(fused[#loc182, #loc183])
#loc507 = loc(fused[#loc184, #loc185])
#loc508 = loc(fused[#loc186, #loc187])
#loc509 = loc(fused[#loc188, #loc189])
#loc510 = loc(fused[#loc190, #loc191])
#loc511 = loc(fused[#loc192, #loc193])
#loc512 = loc(fused[#loc195, #loc194])
#loc513 = loc(fused[#loc196, #loc197])
#loc514 = loc(fused[#loc198, #loc199])
#loc515 = loc(fused[#loc205, #loc206])
#loc516 = loc(fused[#loc207, #loc208])
#loc517 = loc(fused[#loc209, #loc210])
#loc518 = loc(fused[#loc211, #loc208])
#loc519 = loc(fused[#loc213, #loc214])
#loc520 = loc(fused[#loc216, #loc217])
#loc521 = loc(fused[#loc218, #loc219])
#loc522 = loc(fused[#loc221, #loc220])
#loc523 = loc(fused[#loc224, #loc225])
#loc524 = loc(fused[#loc228, #loc229])
#loc525 = loc(fused[#loc230, #loc231])
#loc526 = loc(fused[#loc233, #loc234])
#loc527 = loc(fused[#loc235, #loc236])
#loc528 = loc(fused[#loc237, #loc238])
#loc529 = loc(fused[#loc239, #loc231])
#loc530 = loc(fused[#loc243, #loc244])
#loc531 = loc(fused[#loc247, #loc248])
#loc532 = loc(fused[#loc249, #loc250])
#loc533 = loc(fused[#loc251, #loc252])
#loc534 = loc(fused[#loc254, #loc255])
#loc535 = loc(fused[#loc256, #loc250])
#loc536 = loc(fused[#loc260, #loc258])
#loc537 = loc(fused[#loc263, #loc264])
#loc538 = loc(fused[#loc265, #loc266])
#loc539 = loc(fused[#loc267, #loc268])
#loc540 = loc(fused[#loc269, #loc266])
#loc541 = loc(fused[#loc273, #loc272])
#loc542 = loc(fused[#loc276, #loc277])
#loc543 = loc(fused[#loc278, #loc279])
#loc545 = loc(fused[#loc282, #loc283])
#loc546 = loc(fused[#loc285, #loc286])
#loc547 = loc(fused[#loc288, #loc286])
#loc548 = loc(fused[#loc289, #loc290])
#loc549 = loc(fused[#loc291, #loc292])
#loc550 = loc(fused[#loc293, #loc290])
#loc551 = loc(fused[#loc294, #loc295])
#loc552 = loc(fused[#loc297, #loc298])
#loc553 = loc(fused[#loc296, #loc299])
#loc554 = loc(fused[#loc300, #loc301, #loc302, #loc295])
#loc555 = loc(fused[#loc308, #loc309])
#loc556 = loc(fused[#loc310, #loc311])
#loc557 = loc(fused[#loc312, #loc313])
#loc558 = loc(fused[#loc314, #loc315])
#loc559 = loc(fused[#loc316, #loc317])
#loc560 = loc(fused[#loc318, #loc319])
#loc561 = loc(fused[#loc321, #loc320])
#loc562 = loc(fused[#loc322, #loc323])
#loc563 = loc(fused[#loc324, #loc325])
#loc564 = loc(fused[#loc331, #loc332])
#loc565 = loc(fused[#loc333, #loc334])
#loc566 = loc(fused[#loc335, #loc336])
#loc567 = loc(fused[#loc337, #loc334])
#loc568 = loc(fused[#loc339, #loc340])
#loc569 = loc(fused[#loc342, #loc343])
#loc570 = loc(fused[#loc344, #loc345])
#loc571 = loc(fused[#loc347, #loc346])
#loc572 = loc(fused[#loc350, #loc351])
#loc573 = loc(fused[#loc354, #loc355])
#loc574 = loc(fused[#loc356, #loc357])
#loc575 = loc(fused[#loc359, #loc360])
#loc576 = loc(fused[#loc361, #loc362])
#loc577 = loc(fused[#loc363, #loc364])
#loc578 = loc(fused[#loc365, #loc357])
#loc579 = loc(fused[#loc369, #loc370])
#loc580 = loc(fused[#loc373, #loc374])
#loc581 = loc(fused[#loc375, #loc376])
#loc582 = loc(fused[#loc377, #loc378])
#loc583 = loc(fused[#loc380, #loc381])
#loc584 = loc(fused[#loc382, #loc376])
#loc585 = loc(fused[#loc386, #loc384])
#loc586 = loc(fused[#loc389, #loc390])
#loc587 = loc(fused[#loc391, #loc392])
#loc588 = loc(fused[#loc393, #loc394])
#loc589 = loc(fused[#loc395, #loc392])
#loc590 = loc(fused[#loc399, #loc398])
#loc591 = loc(fused[#loc402, #loc403])
#loc592 = loc(fused[#loc404, #loc405])
#loc594 = loc(fused[#loc408, #loc409])
#loc595 = loc(fused[#loc411, #loc412])
#loc596 = loc(fused[#loc414, #loc412])
#loc597 = loc(fused[#loc415, #loc416])
#loc598 = loc(fused[#loc417, #loc418])
#loc599 = loc(fused[#loc419, #loc416])
#loc600 = loc(fused[#loc423, #loc424])
#loc601 = loc(fused[#loc425, #loc426])
#loc602 = loc(fused[#loc428, #loc427])
#loc603 = loc(fused[#loc430, #loc429])
#loc604 = loc(fused[#loc432, #loc431])
