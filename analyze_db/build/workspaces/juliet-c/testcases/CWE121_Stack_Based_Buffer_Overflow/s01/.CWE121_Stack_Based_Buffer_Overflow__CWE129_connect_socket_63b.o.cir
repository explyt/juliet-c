!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":44:76)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":44:82)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":73:80)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":73:86)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":98:80)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":98:86)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":105:23)
#true = #cir.bool<true> : !cir.bool
#loc129 = loc(fused[#loc8, #loc9])
#loc144 = loc(fused[#loc46, #loc47])
#loc159 = loc(fused[#loc86, #loc87])
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc126)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc5)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b_badSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc130)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc131)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc129)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc132)
    cir.store %arg0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc16)
    %4 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc15)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    cir.br ^bb1 loc(#loc133)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc131)
    cir.store %6, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc131)
    cir.br ^bb2 loc(#loc134)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc135)
    cir.brcond %9 ^bb3, ^bb12 loc(#loc136)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    %12 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc29)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc29)
    cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    cir.br ^bb4 loc(#loc138)
  ^bb4:  // pred: ^bb3
    %14 = cir.const #cir.int<0> : !s32i loc(#loc32)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    cir.br ^bb5 loc(#loc138)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %16 = cir.const #cir.int<10> : !s32i loc(#loc35)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc140)
    cir.brcond %17 ^bb6, ^bb10 loc(#loc36)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc141)
  ^bb7:  // pred: ^bb6
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %19 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc39)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc39)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc40)
    cir.br ^bb8 loc(#loc31)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc31)
  ^bb9:  // pred: ^bb8
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    %23 = cir.unary(inc, %22) nsw : !s32i, !s32i loc(#loc42)
    cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.br ^bb5 loc(#loc138)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc31)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc25)
  ^bb12:  // pred: ^bb2
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc5)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb13 loc(#loc21)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc21)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc19)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc7)
  } loc(#loc128)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b_goodG2BSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc46, #loc47])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc145)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc146)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc144)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc147)
    cir.store %arg0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc54)
    %4 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc146)
    cir.store %6, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc146)
    cir.br ^bb2 loc(#loc149)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc60)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc150)
    cir.brcond %9 ^bb3, ^bb12 loc(#loc151)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %12 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc67)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc67)
    cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    cir.br ^bb4 loc(#loc153)
  ^bb4:  // pred: ^bb3
    %14 = cir.const #cir.int<0> : !s32i loc(#loc70)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    cir.br ^bb5 loc(#loc153)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %16 = cir.const #cir.int<10> : !s32i loc(#loc73)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc155)
    cir.brcond %17 ^bb6, ^bb10 loc(#loc74)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc156)
  ^bb7:  // pred: ^bb6
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    %19 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc77)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc77)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc78)
    cir.br ^bb8 loc(#loc69)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc69)
  ^bb9:  // pred: ^bb8
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %23 = cir.unary(inc, %22) nsw : !s32i, !s32i loc(#loc80)
    cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    cir.br ^bb5 loc(#loc153)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc69)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc63)
  ^bb12:  // pred: ^bb2
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc81)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    cir.br ^bb13 loc(#loc59)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc59)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc57)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc45)
  } loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc83)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b_goodB2GSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc86, #loc87])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc160)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc161)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc159)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc162)
    cir.store %arg0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc94)
    %4 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    cir.br ^bb1 loc(#loc163)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc161)
    cir.store %6, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc161)
    cir.br ^bb2 loc(#loc164)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %9 = cir.cmp(ge, %7, %8) : !s32i, !cir.bool loc(#loc165)
    cir.brcond %9 ^bb3, ^bb8 loc(#loc102)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc104)
    %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc166)
    cir.brcond %12 ^bb4, ^bb5 loc(#loc102)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #true loc(#loc102)
    cir.br ^bb6(%13 : !cir.bool) loc(#loc102)
  ^bb5:  // pred: ^bb3
    %14 = cir.const #false loc(#loc102)
    cir.br ^bb6(%14 : !cir.bool) loc(#loc102)
  ^bb6(%15: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":105:23)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc102)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%15 : !cir.bool) loc(#loc102)
  ^bb8:  // pred: ^bb2
    %16 = cir.const #false loc(#loc102)
    cir.br ^bb9(%16 : !cir.bool) loc(#loc102)
  ^bb9(%17: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":105:23)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc102)
  ^bb10:  // pred: ^bb9
    cir.brcond %17 ^bb11, ^bb20 loc(#loc167)
  ^bb11:  // pred: ^bb10
    %18 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %19 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc111)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc111)
    cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    cir.br ^bb12 loc(#loc169)
  ^bb12:  // pred: ^bb11
    %22 = cir.const #cir.int<0> : !s32i loc(#loc114)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    cir.br ^bb13 loc(#loc169)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %24 = cir.const #cir.int<10> : !s32i loc(#loc117)
    %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc171)
    cir.brcond %25 ^bb14, ^bb18 loc(#loc118)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc172)
  ^bb15:  // pred: ^bb14
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %27 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc121)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc121)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc122)
    cir.br ^bb16 loc(#loc113)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc113)
  ^bb17:  // pred: ^bb16
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %31 = cir.unary(inc, %30) nsw : !s32i, !s32i loc(#loc124)
    cir.store %31, %0 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.br ^bb13 loc(#loc169)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc113)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21 loc(#loc107)
  ^bb20:  // pred: ^bb10
    %32 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc83)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    cir.br ^bb21 loc(#loc99)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc99)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc97)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc85)
  } loc(#loc158)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":63:23)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":44:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":66:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":48:9)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":48:13)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":49:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":49:30)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":46:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":46:17)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":45:1)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":46:16)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":47:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":65:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":52:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":64:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":52:13)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":52:21)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":53:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":60:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":62:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":54:28)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":54:20)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":54:13)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":56:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":59:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":56:21)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":56:17)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":56:24)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":56:28)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":56:26)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":57:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":58:37)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":58:30)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":58:17)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":56:33)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":56:32)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":63:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":73:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":95:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":77:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":77:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":78:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":78:30)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":75:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":75:17)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":74:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":75:16)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":76:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":94:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":81:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":93:9)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":81:13)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":81:21)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":82:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":89:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":91:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":83:28)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":83:20)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":83:13)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":85:13)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":88:13)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":85:21)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":85:17)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":85:24)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":85:28)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":85:26)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":86:13)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":87:37)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":87:30)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":87:17)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":85:33)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":85:32)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":92:23)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":92:13)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":116:23)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":98:1)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":119:1)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":102:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":102:13)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":103:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":103:30)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":100:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":100:17)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":99:1)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":100:16)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":101:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":118:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":105:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":117:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":105:13)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":105:21)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":105:26)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":105:34)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":105:36)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":106:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":113:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":115:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":107:28)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":107:20)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":107:13)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":109:13)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":112:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":109:21)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":109:17)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":109:24)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":109:28)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":109:26)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":110:13)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":111:37)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":111:30)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":111:17)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":109:33)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":109:32)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_63b.c":116:13)
#loc126 = loc(fused[#loc1, #loc2])
#loc127 = loc(fused[#loc3, #loc4])
#loc128 = loc(fused[#loc6, #loc7])
#loc130 = loc(fused[#loc10, #loc11])
#loc131 = loc(fused[#loc12, #loc13])
#loc132 = loc(fused[#loc14, #loc15])
#loc133 = loc(fused[#loc18, #loc19])
#loc134 = loc(fused[#loc20, #loc21])
#loc135 = loc(fused[#loc22, #loc23])
#loc136 = loc(fused[#loc24, #loc25, #loc26, #loc21])
#loc137 = loc(fused[#loc29, #loc27])
#loc138 = loc(fused[#loc30, #loc31])
#loc139 = loc(fused[#loc33, #loc32])
#loc140 = loc(fused[#loc34, #loc35])
#loc141 = loc(fused[#loc37, #loc31])
#loc142 = loc(fused[#loc42, #loc41])
#loc143 = loc(fused[#loc44, #loc45])
#loc145 = loc(fused[#loc48, #loc49])
#loc146 = loc(fused[#loc50, #loc51])
#loc147 = loc(fused[#loc52, #loc53])
#loc148 = loc(fused[#loc56, #loc57])
#loc149 = loc(fused[#loc58, #loc59])
#loc150 = loc(fused[#loc60, #loc61])
#loc151 = loc(fused[#loc62, #loc63, #loc64, #loc59])
#loc152 = loc(fused[#loc67, #loc65])
#loc153 = loc(fused[#loc68, #loc69])
#loc154 = loc(fused[#loc71, #loc70])
#loc155 = loc(fused[#loc72, #loc73])
#loc156 = loc(fused[#loc75, #loc69])
#loc157 = loc(fused[#loc80, #loc79])
#loc158 = loc(fused[#loc84, #loc85])
#loc160 = loc(fused[#loc88, #loc89])
#loc161 = loc(fused[#loc90, #loc91])
#loc162 = loc(fused[#loc92, #loc93])
#loc163 = loc(fused[#loc96, #loc97])
#loc164 = loc(fused[#loc98, #loc99])
#loc165 = loc(fused[#loc100, #loc101])
#loc166 = loc(fused[#loc103, #loc105])
#loc167 = loc(fused[#loc106, #loc107, #loc108, #loc99])
#loc168 = loc(fused[#loc111, #loc109])
#loc169 = loc(fused[#loc112, #loc113])
#loc170 = loc(fused[#loc115, #loc114])
#loc171 = loc(fused[#loc116, #loc117])
#loc172 = loc(fused[#loc119, #loc113])
#loc173 = loc(fused[#loc124, #loc123])
