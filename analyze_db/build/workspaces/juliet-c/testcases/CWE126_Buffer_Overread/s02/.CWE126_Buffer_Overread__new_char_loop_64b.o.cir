!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":26:14)
#loc8 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":26:21)
#loc60 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":55:18)
#loc61 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":55:25)
#loc114 = loc(fused[#loc7, #loc8])
#loc132 = loc(fused[#loc60, #loc61])
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__new_char_loop_64b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc111)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc112)
  cir.func @_ZN40CWE126_Buffer_Overread__new_char_loop_647badSinkEPv(%arg0: !cir.ptr<!void> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc115)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc116)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc13)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc10)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc10)
    cir.store %4, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc115)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc118)
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc119)
      %9 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc120)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
      %12 = cir.const #cir.int<67> : !s8i loc(#loc24)
      %13 = cir.cast(integral, %12 : !s8i), !s32i loc(#loc24)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc25)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc26)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc25)
      %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc25)
      cir.libc.memset %17 bytes from %11 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc121)
      %18 = cir.const #cir.int<0> : !s8i loc(#loc29)
      %19 = cir.const #cir.int<100> : !s32i loc(#loc30)
      %20 = cir.const #cir.int<1> : !s32i loc(#loc31)
      %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc30)
      %22 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
      %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc32)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc122)
      %24 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc33)
      %25 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
      %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc33)
      cir.store %26, %8 : !u64i, !cir.ptr<!u64i> loc(#loc123)
      cir.scope {
        %35 = cir.const #cir.int<0> : !s32i loc(#loc39)
        %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc39)
        cir.store %36, %7 : !u64i, !cir.ptr<!u64i> loc(#loc125)
        cir.for : cond {
          %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc41)
          %38 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc42)
          %39 = cir.cmp(lt, %37, %38) : !u64i, !cir.bool loc(#loc126)
          cir.condition(%39) loc(#loc126)
        } body {
          cir.scope {
            %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
            %38 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc45)
            %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc46)
            %40 = cir.load %39 : !cir.ptr<!s8i>, !s8i loc(#loc44)
            %41 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc47)
            %42 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
            %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc48)
            cir.store %40, %43 : !s8i, !cir.ptr<!s8i> loc(#loc128)
          } loc(#loc127)
          cir.yield loc(#loc38)
        } step {
          %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc49)
          %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc50)
          cir.store %38, %7 : !u64i, !cir.ptr<!u64i> loc(#loc129)
          cir.yield loc(#loc124)
        } loc(#loc124)
      } loc(#loc124)
      %27 = cir.const #cir.int<0> : !s8i loc(#loc51)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc52)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc53)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc52)
      %31 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
      %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc54)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc130)
      %33 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc56)
      %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
      cir.delete.array %34 : <!s8i> loc(#loc57)
    } loc(#loc117)
    cir.return loc(#loc6)
  } loc(#loc113)
  cir.func @_ZN40CWE126_Buffer_Overread__new_char_loop_6411goodG2BSinkEPv(%arg0: !cir.ptr<!void> loc(fused[#loc60, #loc61])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc133)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc134)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc66)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc63)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc63)
    cir.store %4, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc133)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc67)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc136)
      %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc137)
      %9 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc138)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc76)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc76)
      %12 = cir.const #cir.int<67> : !s8i loc(#loc77)
      %13 = cir.cast(integral, %12 : !s8i), !s32i loc(#loc77)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc78)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc79)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc78)
      %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc78)
      cir.libc.memset %17 bytes from %11 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc139)
      %18 = cir.const #cir.int<0> : !s8i loc(#loc82)
      %19 = cir.const #cir.int<100> : !s32i loc(#loc83)
      %20 = cir.const #cir.int<1> : !s32i loc(#loc84)
      %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc83)
      %22 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc85)
      %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc85)
      cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc140)
      %24 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc86)
      %25 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc87)
      %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc86)
      cir.store %26, %8 : !u64i, !cir.ptr<!u64i> loc(#loc141)
      cir.scope {
        %35 = cir.const #cir.int<0> : !s32i loc(#loc92)
        %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc92)
        cir.store %36, %7 : !u64i, !cir.ptr<!u64i> loc(#loc143)
        cir.for : cond {
          %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc94)
          %38 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc95)
          %39 = cir.cmp(lt, %37, %38) : !u64i, !cir.bool loc(#loc144)
          cir.condition(%39) loc(#loc144)
        } body {
          cir.scope {
            %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
            %38 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc98)
            %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc99)
            %40 = cir.load %39 : !cir.ptr<!s8i>, !s8i loc(#loc97)
            %41 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc100)
            %42 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc101)
            %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc101)
            cir.store %40, %43 : !s8i, !cir.ptr<!s8i> loc(#loc146)
          } loc(#loc145)
          cir.yield loc(#loc91)
        } step {
          %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc102)
          %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc103)
          cir.store %38, %7 : !u64i, !cir.ptr<!u64i> loc(#loc147)
          cir.yield loc(#loc142)
        } loc(#loc142)
      } loc(#loc142)
      %27 = cir.const #cir.int<0> : !s8i loc(#loc104)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc105)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc106)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc105)
      %31 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc107)
      %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc107)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc148)
      %33 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc108)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc109)
      %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
      cir.delete.array %34 : <!s8i> loc(#loc110)
    } loc(#loc135)
    cir.return loc(#loc59)
  } loc(#loc131)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__new_char_loop_64b.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":26:1)
#loc6 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":48:1)
#loc9 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":29:5)
#loc10 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":29:34)
#loc11 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":31:5)
#loc12 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":31:28)
#loc13 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":27:1)
#loc14 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":31:21)
#loc15 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":31:20)
#loc16 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":32:5)
#loc17 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":47:5)
#loc18 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":33:9)
#loc19 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":33:16)
#loc20 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":33:19)
#loc21 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":34:9)
#loc22 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":34:22)
#loc23 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":35:16)
#loc24 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":35:22)
#loc25 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":35:27)
#loc26 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":35:31)
#loc27 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":35:9)
#loc28 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":35:32)
#loc29 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":36:23)
#loc30 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":36:14)
#loc31 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":36:18)
#loc32 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":36:9)
#loc33 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":37:19)
#loc34 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":37:26)
#loc35 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":37:9)
#loc36 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":37:30)
#loc37 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":40:9)
#loc38 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":43:9)
#loc39 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":40:18)
#loc40 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":40:14)
#loc41 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":40:21)
#loc42 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":40:25)
#loc43 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":41:9)
#loc44 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":42:23)
#loc45 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":42:28)
#loc46 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":42:29)
#loc47 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":42:18)
#loc48 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":42:13)
#loc49 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":40:35)
#loc50 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":40:34)
#loc51 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":44:23)
#loc52 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":44:14)
#loc53 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":44:18)
#loc54 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":44:9)
#loc55 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":45:19)
#loc56 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":45:9)
#loc57 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":46:19)
#loc58 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":55:1)
#loc59 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":77:1)
#loc62 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":58:5)
#loc63 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":58:34)
#loc64 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":60:5)
#loc65 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":60:28)
#loc66 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":56:1)
#loc67 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":60:21)
#loc68 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":60:20)
#loc69 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":61:5)
#loc70 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":76:5)
#loc71 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":62:9)
#loc72 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":62:16)
#loc73 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":62:19)
#loc74 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":63:9)
#loc75 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":63:22)
#loc76 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":64:16)
#loc77 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":64:22)
#loc78 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":64:27)
#loc79 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":64:31)
#loc80 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":64:9)
#loc81 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":64:32)
#loc82 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":65:23)
#loc83 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":65:14)
#loc84 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":65:18)
#loc85 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":65:9)
#loc86 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":66:19)
#loc87 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":66:26)
#loc88 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":66:9)
#loc89 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":66:30)
#loc90 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":69:9)
#loc91 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":72:9)
#loc92 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":69:18)
#loc93 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":69:14)
#loc94 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":69:21)
#loc95 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":69:25)
#loc96 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":70:9)
#loc97 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":71:23)
#loc98 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":71:28)
#loc99 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":71:29)
#loc100 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":71:18)
#loc101 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":71:13)
#loc102 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":69:35)
#loc103 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":69:34)
#loc104 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":73:23)
#loc105 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":73:14)
#loc106 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":73:18)
#loc107 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":73:9)
#loc108 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":74:19)
#loc109 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":74:9)
#loc110 = loc("CWE126_Buffer_Overread__new_char_loop_64b.cpp":75:19)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc3, #loc4])
#loc113 = loc(fused[#loc5, #loc6])
#loc115 = loc(fused[#loc9, #loc10])
#loc116 = loc(fused[#loc11, #loc12])
#loc117 = loc(fused[#loc16, #loc17])
#loc118 = loc(fused[#loc18, #loc19])
#loc119 = loc(fused[#loc18, #loc20])
#loc120 = loc(fused[#loc21, #loc22])
#loc121 = loc(fused[#loc27, #loc28])
#loc122 = loc(fused[#loc32, #loc29])
#loc123 = loc(fused[#loc35, #loc36])
#loc124 = loc(fused[#loc37, #loc38])
#loc125 = loc(fused[#loc40, #loc39])
#loc126 = loc(fused[#loc41, #loc42])
#loc127 = loc(fused[#loc43, #loc38])
#loc128 = loc(fused[#loc48, #loc46])
#loc129 = loc(fused[#loc50, #loc49])
#loc130 = loc(fused[#loc54, #loc51])
#loc131 = loc(fused[#loc58, #loc59])
#loc133 = loc(fused[#loc62, #loc63])
#loc134 = loc(fused[#loc64, #loc65])
#loc135 = loc(fused[#loc69, #loc70])
#loc136 = loc(fused[#loc71, #loc72])
#loc137 = loc(fused[#loc71, #loc73])
#loc138 = loc(fused[#loc74, #loc75])
#loc139 = loc(fused[#loc80, #loc81])
#loc140 = loc(fused[#loc85, #loc82])
#loc141 = loc(fused[#loc88, #loc89])
#loc142 = loc(fused[#loc90, #loc91])
#loc143 = loc(fused[#loc93, #loc92])
#loc144 = loc(fused[#loc94, #loc95])
#loc145 = loc(fused[#loc96, #loc91])
#loc146 = loc(fused[#loc101, #loc99])
#loc147 = loc(fused[#loc103, #loc102])
#loc148 = loc(fused[#loc107, #loc104])
