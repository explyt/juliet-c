!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc157)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc158)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc159)
  cir.func @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_133badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
    cir.br ^bb1 loc(#loc163)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc157)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc16)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc164)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc165)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<1> : !u64i loc(#loc166)
    %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc20)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc166)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    cir.br ^bb3 loc(#loc14)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc14)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc168)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc157)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc24)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc25)
    %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc169)
    cir.brcond %12 ^bb6, ^bb7 loc(#loc170)
  ^bb6:  // pred: ^bb5
    %13 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc27)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
    cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc27)
    cir.br ^bb7 loc(#loc23)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc23)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc8)
  } loc(#loc160)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc31)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc172)
  cir.func internal private @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_13L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc174)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc38)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    cir.br ^bb1 loc(#loc176)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc157)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc43)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc177)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc178)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<1> : !u64i loc(#loc179)
    %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc47)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc179)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
    cir.br ^bb3 loc(#loc41)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc41)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc181)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc157)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc52)
    %12 = cir.cmp(ne, %10, %11) : !s32i, !cir.bool loc(#loc182)
    cir.brcond %12 ^bb6, ^bb7 loc(#loc183)
  ^bb6:  // pred: ^bb5
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc31)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    cir.br ^bb8 loc(#loc54)
  ^bb7:  // pred: ^bb5
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
    cir.call @_ZdlPv(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc47)
    cir.br ^bb8 loc(#loc50)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc50)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc35)
  } loc(#loc173)
  cir.func internal private @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_13L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc62)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    cir.br ^bb1 loc(#loc187)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc157)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc67)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc188)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc189)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<1> : !u64i loc(#loc190)
    %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc71)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc190)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    cir.br ^bb3 loc(#loc65)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc65)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc192)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc157)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc76)
    %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc193)
    cir.brcond %12 ^bb6, ^bb7 loc(#loc194)
  ^bb6:  // pred: ^bb5
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
    cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc71)
    cir.br ^bb7 loc(#loc74)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc74)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc59)
  } loc(#loc184)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc195)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc196)
  cir.func internal private @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_13L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc198)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc87)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
    cir.br ^bb1 loc(#loc200)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc157)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc92)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc201)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc202)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc96)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    cir.br ^bb8 loc(#loc94)
  ^bb3:  // pred: ^bb1
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc98)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc99)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc99)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc203)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc204)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc98)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc205)
    cir.store %14, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc206)
    cir.br ^bb4 loc(#loc207)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc107)
    %17 = cir.cmp(eq, %15, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc208)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc209)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc109)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc111)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc109)
    cir.br ^bb6 loc(#loc105)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc105)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc90)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc90)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc210)
  ^bb10:  // pred: ^bb9
    %21 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc157)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %23 = cir.const #cir.int<5> : !s32i loc(#loc115)
    %24 = cir.cmp(eq, %22, %23) : !s32i, !cir.bool loc(#loc211)
    cir.brcond %24 ^bb11, ^bb12 loc(#loc212)
  ^bb11:  // pred: ^bb10
    %25 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc117)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
    cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc117)
    cir.br ^bb12 loc(#loc113)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc113)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc84)
  } loc(#loc197)
  cir.func internal private @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_13L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc214)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc123)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
    cir.br ^bb1 loc(#loc216)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc157)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc128)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc217)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc218)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc130)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc131)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc131)
    %9 = cir.const #cir.int<1> : !u64i loc(#loc219)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc220)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc130)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc221)
    cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc222)
    cir.br ^bb3 loc(#loc223)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc139)
    %15 = cir.cmp(eq, %13, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc224)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc225)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc141)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc143)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc141)
    cir.br ^bb5 loc(#loc137)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc137)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc126)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc126)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc226)
  ^bb9:  // pred: ^bb8
    %19 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc157)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %21 = cir.const #cir.int<5> : !s32i loc(#loc147)
    %22 = cir.cmp(eq, %20, %21) : !s32i, !cir.bool loc(#loc227)
    cir.brcond %22 ^bb10, ^bb11 loc(#loc228)
  ^bb10:  // pred: ^bb9
    %23 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc149)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc150)
    cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc149)
    cir.br ^bb11 loc(#loc145)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc145)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc120)
  } loc(#loc213)
  cir.func @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_134goodEv() extra(#fn_attr1) {
    cir.call @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_13L8goodB2G1Ev() : () -> () loc(#loc153)
    cir.call @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_13L8goodB2G2Ev() : () -> () loc(#loc154)
    cir.call @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_13L8goodG2B1Ev() : () -> () loc(#loc155)
    cir.call @_ZN62CWE762_Mismatched_Memory_Management_Routines__new_free_char_13L8goodG2B2Ev() : () -> () loc(#loc156)
    cir.return loc(#loc152)
  } loc(#loc229)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":24:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":40:1)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":26:5)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":26:12)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":28:12)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":28:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":29:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":33:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":29:8)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":29:27)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":30:5)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":32:16)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":32:20)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":24:6)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":32:9)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":34:5)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":39:5)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":34:8)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":34:27)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":35:5)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":38:9)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":38:14)
#loc29 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":60:19)
#loc32 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc33 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":47:1)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":67:1)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":49:5)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":49:12)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":51:12)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":51:5)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":52:5)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":56:5)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":52:8)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":52:27)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":53:5)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":55:16)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":55:20)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":47:13)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":55:9)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":57:5)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":66:5)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":57:8)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":57:27)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":58:5)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":61:5)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":63:5)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":60:9)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":65:16)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":70:1)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":85:1)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":72:5)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":72:12)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":74:12)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":74:5)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":75:5)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":79:5)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":75:8)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":75:27)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":76:5)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":78:16)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":78:20)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":70:13)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":78:9)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":80:5)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":84:5)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":80:8)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":80:27)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":81:5)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":83:16)
#loc79 = loc("/usr/include/stdlib.h":672:1)
#loc80 = loc("/usr/include/stdlib.h":672:45)
#loc81 = loc("/usr/include/stdlib.h":756:1)
#loc82 = loc("/usr/include/stdlib.h":756:70)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":88:1)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":110:1)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":90:5)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":90:12)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":92:12)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":92:5)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":93:5)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":103:5)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":93:8)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":93:27)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":94:5)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":97:5)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":99:5)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":96:19)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":96:9)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":101:24)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":101:31)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":101:35)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":101:46)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":101:47)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":101:9)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":102:9)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":102:37)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":102:13)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":102:21)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":102:27)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":102:28)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":102:34)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":102:33)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":104:5)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":109:5)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":104:8)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":104:27)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":105:5)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":108:9)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":108:14)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":113:1)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":130:1)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":115:5)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":115:12)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":117:12)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":117:5)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":118:5)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":123:5)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":118:8)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":118:27)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":119:5)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":121:24)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":121:31)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":121:35)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":121:46)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":121:47)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":121:9)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":122:9)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":122:37)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":122:13)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":122:21)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":122:27)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":122:28)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":122:34)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":122:33)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":124:5)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":129:5)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":124:8)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":124:27)
#loc148 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":125:5)
#loc149 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":128:9)
#loc150 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":128:14)
#loc151 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":132:1)
#loc152 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":138:1)
#loc153 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":134:5)
#loc154 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":135:5)
#loc155 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":136:5)
#loc156 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_char_13.cpp":137:5)
#loc157 = loc(fused[#loc1, #loc2])
#loc158 = loc(fused[#loc3, #loc4])
#loc159 = loc(fused[#loc5, #loc6])
#loc160 = loc(fused[#loc7, #loc8])
#loc161 = loc(fused[#loc9, #loc10])
#loc162 = loc(fused[#loc12, #loc11])
#loc163 = loc(fused[#loc13, #loc14])
#loc164 = loc(fused[#loc15, #loc16])
#loc165 = loc(fused[#loc17, #loc14])
#loc166 = loc(fused[#loc18, #loc19])
#loc167 = loc(fused[#loc21, #loc19])
#loc168 = loc(fused[#loc22, #loc23])
#loc169 = loc(fused[#loc24, #loc25])
#loc170 = loc(fused[#loc26, #loc23])
#loc171 = loc(fused[#loc29, #loc30])
#loc172 = loc(fused[#loc32, #loc33])
#loc173 = loc(fused[#loc34, #loc35])
#loc174 = loc(fused[#loc36, #loc37])
#loc175 = loc(fused[#loc39, #loc38])
#loc176 = loc(fused[#loc40, #loc41])
#loc177 = loc(fused[#loc42, #loc43])
#loc178 = loc(fused[#loc44, #loc41])
#loc179 = loc(fused[#loc45, #loc46])
#loc180 = loc(fused[#loc48, #loc46])
#loc181 = loc(fused[#loc49, #loc50])
#loc182 = loc(fused[#loc51, #loc52])
#loc183 = loc(fused[#loc53, #loc54, #loc55, #loc50])
#loc184 = loc(fused[#loc58, #loc59])
#loc185 = loc(fused[#loc60, #loc61])
#loc186 = loc(fused[#loc63, #loc62])
#loc187 = loc(fused[#loc64, #loc65])
#loc188 = loc(fused[#loc66, #loc67])
#loc189 = loc(fused[#loc68, #loc65])
#loc190 = loc(fused[#loc69, #loc70])
#loc191 = loc(fused[#loc72, #loc70])
#loc192 = loc(fused[#loc73, #loc74])
#loc193 = loc(fused[#loc75, #loc76])
#loc194 = loc(fused[#loc77, #loc74])
#loc195 = loc(fused[#loc79, #loc80])
#loc196 = loc(fused[#loc81, #loc82])
#loc197 = loc(fused[#loc83, #loc84])
#loc198 = loc(fused[#loc85, #loc86])
#loc199 = loc(fused[#loc88, #loc87])
#loc200 = loc(fused[#loc89, #loc90])
#loc201 = loc(fused[#loc91, #loc92])
#loc202 = loc(fused[#loc93, #loc94, #loc95, #loc90])
#loc203 = loc(fused[#loc100, #loc101])
#loc204 = loc(fused[#loc99, #loc101])
#loc205 = loc(fused[#loc98, #loc102])
#loc206 = loc(fused[#loc103, #loc102])
#loc207 = loc(fused[#loc104, #loc105])
#loc208 = loc(fused[#loc106, #loc107])
#loc209 = loc(fused[#loc108, #loc105])
#loc210 = loc(fused[#loc112, #loc113])
#loc211 = loc(fused[#loc114, #loc115])
#loc212 = loc(fused[#loc116, #loc113])
#loc213 = loc(fused[#loc119, #loc120])
#loc214 = loc(fused[#loc121, #loc122])
#loc215 = loc(fused[#loc124, #loc123])
#loc216 = loc(fused[#loc125, #loc126])
#loc217 = loc(fused[#loc127, #loc128])
#loc218 = loc(fused[#loc129, #loc126])
#loc219 = loc(fused[#loc132, #loc133])
#loc220 = loc(fused[#loc131, #loc133])
#loc221 = loc(fused[#loc130, #loc134])
#loc222 = loc(fused[#loc135, #loc134])
#loc223 = loc(fused[#loc136, #loc137])
#loc224 = loc(fused[#loc138, #loc139])
#loc225 = loc(fused[#loc140, #loc137])
#loc226 = loc(fused[#loc144, #loc145])
#loc227 = loc(fused[#loc146, #loc147])
#loc228 = loc(fused[#loc148, #loc145])
#loc229 = loc(fused[#loc151, #loc152])
