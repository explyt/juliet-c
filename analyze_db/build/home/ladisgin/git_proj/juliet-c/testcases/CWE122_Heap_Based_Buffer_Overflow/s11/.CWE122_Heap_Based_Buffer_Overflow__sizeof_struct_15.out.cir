!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":116:10)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":116:14)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":116:20)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":116:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc175 = loc(fused[#loc64, #loc65])
#loc176 = loc(fused[#loc66, #loc67])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc152)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc153)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc155)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc156)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc158)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc159)
    cir.br ^bb1 loc(#loc160)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc20)
    cir.br ^bb2 loc(#loc18)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb9 [
      6: ^bb4
    ] loc(#loc18)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc22)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc161)
    %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc22)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc162)
    cir.store %6, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc163)
    cir.br ^bb5 loc(#loc164)
  ^bb5:  // pred: ^bb4
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    %10 = cir.cmp(eq, %7, %9) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc165)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc166)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc34)
    cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
    cir.br ^bb7 loc(#loc28)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc28)
  ^bb8:  // pred: ^bb7
    %14 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
    %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
    cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    %17 = cir.const #cir.int<2> : !s32i loc(#loc38)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
    cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    cir.br ^bb10 loc(#loc41)
  ^bb9:  // pred: ^bb2
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc7)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    cir.br ^bb10 loc(#loc43)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc19)
  ^bb11:  // pred: ^bb10
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
    cir.call @printStructLine(%22) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc45)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc46)
    cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc47)
    cir.return loc(#loc13)
  } loc(#loc157)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc170)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    cir.return loc(#loc49)
  } loc(#loc169)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc172)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc61)
  cir.func @main(%arg0: !s32i loc(fused[#loc64, #loc65]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc66, #loc67])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc175)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc176)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc63)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc68)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc68)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc69)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc70)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc70)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc71)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc58)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15_good() : () -> () loc(#loc73)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc59)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc60)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15_bad() : () -> () loc(#loc77)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc61)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc80)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    cir.return %17 : !s32i loc(#loc179)
  } loc(#loc174)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc181)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc182)
    cir.br ^bb1 loc(#loc183)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc90)
    cir.br ^bb2 loc(#loc88)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc88)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc91)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc92)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    cir.br ^bb10 loc(#loc94)
  ^bb5:  // pred: ^bb2
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc95)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc184)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc95)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc185)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc186)
    cir.br ^bb6 loc(#loc187)
  ^bb6:  // pred: ^bb5
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc188)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc189)
  ^bb7:  // pred: ^bb6
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc105)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc107)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc105)
    cir.br ^bb8 loc(#loc101)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc101)
  ^bb9:  // pred: ^bb8
    %16 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
    %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
    cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    %19 = cir.const #cir.int<2> : !s32i loc(#loc110)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
    %21 = cir.get_member %20[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
    cir.store %19, %21 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    cir.br ^bb10 loc(#loc112)
  ^bb10:  // 2 preds: ^bb4, ^bb9
    cir.br ^bb11 loc(#loc89)
  ^bb11:  // pred: ^bb10
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
    cir.call @printStructLine(%22) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc114)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc115)
    cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc116)
    cir.return loc(#loc83)
  } loc(#loc180)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc193)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc194)
    cir.br ^bb1 loc(#loc195)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc125)
    cir.br ^bb2 loc(#loc123)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb9 [
      6: ^bb4
    ] loc(#loc123)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc126)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc127)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc196)
    %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc127)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc197)
    cir.store %6, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc198)
    cir.br ^bb5 loc(#loc199)
  ^bb5:  // pred: ^bb4
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc135)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
    %10 = cir.cmp(eq, %7, %9) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc200)
    cir.brcond %10 ^bb6, ^bb7 loc(#loc201)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc137)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc139)
    cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc137)
    cir.br ^bb7 loc(#loc133)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc133)
  ^bb8:  // pred: ^bb7
    %14 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
    %16 = cir.get_member %15[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc37)
    cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    %17 = cir.const #cir.int<2> : !s32i loc(#loc142)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
    %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
    cir.store %17, %19 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    cir.br ^bb10 loc(#loc144)
  ^bb9:  // pred: ^bb2
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc145)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc145)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    cir.br ^bb10 loc(#loc147)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc124)
  ^bb11:  // pred: ^bb10
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc148)
    cir.call @printStructLine(%22) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc149)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc150)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc150)
    cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc151)
    cir.return loc(#loc118)
  } loc(#loc192)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":38:19)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc10 = loc("/usr/include/stdlib.h":687:1)
#loc11 = loc("/usr/include/stdlib.h":687:32)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":21:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":44:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":23:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":23:21)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":25:12)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":25:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":26:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":40:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":26:12)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":28:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":31:33)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":31:40)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":31:51)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":31:52)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":31:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":32:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":32:37)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":32:13)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":32:21)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":32:27)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":32:28)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":32:34)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":32:33)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":33:24)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":33:9)
#loc37 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":34:24)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":34:9)
#loc40 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":35:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":38:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":39:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":42:21)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":42:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":43:10)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":43:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":100:1)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":104:1)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":102:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":102:14)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":103:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":103:14)
#loc54 = loc("/usr/include/stdlib.h":575:1)
#loc55 = loc("/usr/include/stdlib.h":575:41)
#loc56 = loc("/usr/include/time.h":76:1)
#loc57 = loc("/usr/include/time.h":76:38)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":121:15)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":123:15)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":126:15)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":128:15)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":116:1)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":131:1)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":117:1)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":119:27)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":119:22)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":119:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":121:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":122:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":122:62)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":123:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":126:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":127:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":127:61)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":128:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":130:12)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":130:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":51:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":73:1)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":53:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":53:21)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":55:12)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":55:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":56:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":69:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":56:12)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":58:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":60:19)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":60:9)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":61:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":64:33)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":64:40)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":64:52)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":64:53)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":64:9)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":65:9)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":65:37)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":65:13)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":65:21)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":65:27)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":65:28)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":65:34)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":65:33)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":66:24)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":66:9)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":67:24)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":67:9)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":68:9)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":71:21)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":71:5)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":72:10)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":72:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":76:1)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":98:1)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":78:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":78:21)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":80:12)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":80:5)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":81:5)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":94:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":81:12)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":83:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":85:33)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":85:40)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":85:52)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":85:53)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":85:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":86:9)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":86:37)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":86:13)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":86:21)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":86:27)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":86:28)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":86:34)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":86:33)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":87:24)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":87:9)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":88:24)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":88:9)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":89:9)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":92:19)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":92:9)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":93:9)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":96:21)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":96:5)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":97:10)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_15.c":97:5)
#loc152 = loc(fused[#loc1, #loc2])
#loc153 = loc(fused[#loc3, #loc4])
#loc154 = loc(fused[#loc5, #loc6])
#loc155 = loc(fused[#loc8, #loc9])
#loc156 = loc(fused[#loc10, #loc11])
#loc157 = loc(fused[#loc12, #loc13])
#loc158 = loc(fused[#loc14, #loc15])
#loc159 = loc(fused[#loc17, #loc16])
#loc160 = loc(fused[#loc18, #loc19])
#loc161 = loc(fused[#loc23, #loc24])
#loc162 = loc(fused[#loc22, #loc25])
#loc163 = loc(fused[#loc26, #loc25])
#loc164 = loc(fused[#loc27, #loc28])
#loc165 = loc(fused[#loc29, #loc30])
#loc166 = loc(fused[#loc31, #loc28])
#loc167 = loc(fused[#loc36, #loc35])
#loc168 = loc(fused[#loc39, #loc38])
#loc169 = loc(fused[#loc48, #loc49])
#loc170 = loc(fused[#loc50, #loc51])
#loc171 = loc(fused[#loc52, #loc53])
#loc172 = loc(fused[#loc54, #loc55])
#loc173 = loc(fused[#loc56, #loc57])
#loc174 = loc(fused[#loc62, #loc63])
#loc177 = loc(fused[#loc73, #loc74])
#loc178 = loc(fused[#loc77, #loc78])
#loc179 = loc(fused[#loc81, #loc80])
#loc180 = loc(fused[#loc82, #loc83])
#loc181 = loc(fused[#loc84, #loc85])
#loc182 = loc(fused[#loc87, #loc86])
#loc183 = loc(fused[#loc88, #loc89])
#loc184 = loc(fused[#loc96, #loc97])
#loc185 = loc(fused[#loc95, #loc98])
#loc186 = loc(fused[#loc99, #loc98])
#loc187 = loc(fused[#loc100, #loc101])
#loc188 = loc(fused[#loc102, #loc103])
#loc189 = loc(fused[#loc104, #loc101])
#loc190 = loc(fused[#loc109, #loc108])
#loc191 = loc(fused[#loc111, #loc110])
#loc192 = loc(fused[#loc117, #loc118])
#loc193 = loc(fused[#loc119, #loc120])
#loc194 = loc(fused[#loc122, #loc121])
#loc195 = loc(fused[#loc123, #loc124])
#loc196 = loc(fused[#loc128, #loc129])
#loc197 = loc(fused[#loc127, #loc130])
#loc198 = loc(fused[#loc131, #loc130])
#loc199 = loc(fused[#loc132, #loc133])
#loc200 = loc(fused[#loc134, #loc135])
#loc201 = loc(fused[#loc136, #loc133])
#loc202 = loc(fused[#loc141, #loc140])
#loc203 = loc(fused[#loc143, #loc142])
