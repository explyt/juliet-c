!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fread(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc99)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc100)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_fread_06_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc9)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc10)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !s32i loc(#loc103)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc11)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc106)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc107)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc106)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc106)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc107)
          %8 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc19)
          %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
          %11 = cir.const #cir.int<1> : !u64i loc(#loc109)
          %12 = cir.const #cir.int<100> : !s32i loc(#loc24)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc25)
          %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc24)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc24)
          %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc100)
          %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
          %18 = cir.call @fread(%10, %11, %15, %17) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc19)
        } loc(#loc105)
      } loc(#loc104)
    } loc(#loc102)
    cir.return loc(#loc6)
  } loc(#loc101)
  cir.func no_proto  @CWE252_Unchecked_Return_Value__char_fread_06_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc111)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc112)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    cir.return loc(#loc28)
  } loc(#loc110)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc113)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc35)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"fread failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc36)
  cir.func no_proto internal private  @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc41)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc42)
      %2 = cir.cmp(ne, %0, %1) : !s32i, !s32i loc(#loc116)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc43)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc35)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc35)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc47)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc119)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc120)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc119)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc119)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
          cir.scope {
            %8 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc56)
            %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc122)
            %11 = cir.const #cir.int<1> : !u64i loc(#loc123)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc61)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc62)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc61)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc61)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc100)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc63)
            %18 = cir.call @fread(%10, %11, %15, %17) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc56)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc64)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc65)
            %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc64)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc64)
            %23 = cir.cmp(ne, %18, %22) : !u64i, !s32i loc(#loc124)
            %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc66)
            cir.if %24 {
              %25 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc36)
              %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc36)
              cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc68)
            } loc(#loc125)
          } loc(#loc121)
        } loc(#loc118)
      } loc(#loc117)
    } loc(#loc115)
    cir.return loc(#loc38)
  } loc(#loc114)
  cir.func no_proto internal private  @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc73)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc74)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !s32i loc(#loc128)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc75)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc131)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc132)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc131)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc131)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc82)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
          cir.scope {
            %8 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc85)
            %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc134)
            %11 = cir.const #cir.int<1> : !u64i loc(#loc135)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc90)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc91)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc90)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc90)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc100)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc92)
            %18 = cir.call @fread(%10, %11, %15, %17) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc85)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc93)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc94)
            %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc93)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc93)
            %23 = cir.cmp(ne, %18, %22) : !u64i, !s32i loc(#loc136)
            %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc95)
            cir.if %24 {
              %25 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc97)
              %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc97)
              cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc98)
            } loc(#loc137)
          } loc(#loc133)
        } loc(#loc130)
      } loc(#loc129)
    } loc(#loc127)
    cir.return loc(#loc70)
  } loc(#loc126)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_06.c":0:0)
#loc1 = loc("/usr/include/stdio.h":738:1)
#loc2 = loc("/usr/include/stdio.h":740:3)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":29:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":42:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":31:5)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":41:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":31:8)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":31:27)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":31:25)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":32:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":33:9)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":40:9)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":36:13)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":36:36)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":37:13)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":37:27)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":39:13)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":39:27)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":39:19)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":39:33)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":39:44)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":39:56)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":39:60)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":39:64)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":91:1)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":95:1)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":93:5)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":93:11)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":94:5)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":94:11)
#loc33 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":54:19)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":66:27)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":49:1)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":70:1)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":51:5)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":69:5)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":51:8)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":51:27)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":51:25)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":52:5)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":55:5)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":57:5)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":54:9)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":58:9)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":68:9)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":61:13)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":61:36)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":62:13)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":62:27)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":64:13)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":67:13)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":64:17)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":64:31)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":64:23)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":64:37)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":64:48)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":64:60)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":64:64)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":64:68)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":64:78)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":64:82)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":64:75)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":65:13)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":66:17)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":73:1)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":89:1)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":75:5)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":88:5)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":75:8)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":75:27)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":75:25)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":76:5)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":77:9)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":87:9)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":80:13)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":80:36)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":81:13)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":81:27)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":83:13)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":86:13)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":83:17)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":83:31)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":83:23)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":83:37)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":83:48)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":83:60)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":83:64)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":83:68)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":83:78)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":83:82)
#loc95 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":83:75)
#loc96 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":84:13)
#loc97 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":85:27)
#loc98 = loc("CWE252_Unchecked_Return_Value__char_fread_06.c":85:17)
#loc99 = loc(fused[#loc1, #loc2])
#loc100 = loc(fused[#loc3, #loc4])
#loc101 = loc(fused[#loc5, #loc6])
#loc102 = loc(fused[#loc7, #loc8])
#loc103 = loc(fused[#loc9, #loc10])
#loc104 = loc(fused[#loc12, #loc8])
#loc105 = loc(fused[#loc13, #loc14])
#loc106 = loc(fused[#loc15, #loc16])
#loc107 = loc(fused[#loc17, #loc18])
#loc108 = loc(fused[#loc21, #loc20])
#loc109 = loc(fused[#loc22, #loc23])
#loc110 = loc(fused[#loc27, #loc28])
#loc111 = loc(fused[#loc29, #loc30])
#loc112 = loc(fused[#loc31, #loc32])
#loc113 = loc(fused[#loc33, #loc34])
#loc114 = loc(fused[#loc37, #loc38])
#loc115 = loc(fused[#loc39, #loc40])
#loc116 = loc(fused[#loc41, #loc42])
#loc117 = loc(fused[#loc44, #loc45, #loc46, #loc40])
#loc118 = loc(fused[#loc48, #loc49])
#loc119 = loc(fused[#loc50, #loc51])
#loc120 = loc(fused[#loc52, #loc53])
#loc121 = loc(fused[#loc54, #loc55])
#loc122 = loc(fused[#loc58, #loc57])
#loc123 = loc(fused[#loc59, #loc60])
#loc124 = loc(fused[#loc56, #loc65])
#loc125 = loc(fused[#loc67, #loc55])
#loc126 = loc(fused[#loc69, #loc70])
#loc127 = loc(fused[#loc71, #loc72])
#loc128 = loc(fused[#loc73, #loc74])
#loc129 = loc(fused[#loc76, #loc72])
#loc130 = loc(fused[#loc77, #loc78])
#loc131 = loc(fused[#loc79, #loc80])
#loc132 = loc(fused[#loc81, #loc82])
#loc133 = loc(fused[#loc83, #loc84])
#loc134 = loc(fused[#loc87, #loc86])
#loc135 = loc(fused[#loc88, #loc89])
#loc136 = loc(fused[#loc85, #loc94])
#loc137 = loc(fused[#loc96, #loc84])
