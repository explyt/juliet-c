!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc147)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc151)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc10)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc10)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc10)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc10)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %8 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc152)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    cir.store %10, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc151)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc12)
    %13 = cir.const #cir.int<8> : !u64i loc(#loc12)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc12)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc12)
    cir.store %17, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc152)
    cir.scope {
      %18 = cir.const #cir.int<0> : !s32i loc(#loc15)
      cir.store %18, %0 : !s32i, !cir.ptr<!s32i> loc(#loc154)
      cir.for : cond {
        %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc18)
        %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc155)
        cir.condition(%21) loc(#loc19)
      } body {
        cir.scope {
          %19 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
          cir.store %19, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc157)
        } loc(#loc156)
        cir.yield loc(#loc14)
      } step {
        %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc23)
        %20 = cir.unary(inc, %19) nsw : !s32i, !s32i loc(#loc24)
        cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc158)
        cir.yield loc(#loc153)
      } loc(#loc153)
    } loc(#loc153)
    cir.scope {
      %18 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc160)
      cir.scope {
        %19 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc162)
        cir.scope {
          %20 = cir.const #cir.int<0> : !s32i loc(#loc35)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc35)
          cir.store %21, %19 : !u64i, !cir.ptr<!u64i> loc(#loc164)
          cir.for : cond {
            %22 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc37)
            %23 = cir.const #cir.int<100> : !s32i loc(#loc38)
            %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc38)
            %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc165)
            cir.condition(%25) loc(#loc39)
          } body {
            cir.scope {
              %22 = cir.const #cir.int<0> : !s32i loc(#loc41)
              %23 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc42)
              %24 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %23 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
              %26 = cir.get_member %25[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc44)
              cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc167)
              %27 = cir.const #cir.int<0> : !s32i loc(#loc45)
              %28 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc46)
              %29 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
              %30 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %28 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
              %31 = cir.get_member %30[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc48)
              cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc168)
            } loc(#loc166)
            cir.yield loc(#loc34)
          } step {
            %22 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc49)
            %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc50)
            cir.store %23, %19 : !u64i, !cir.ptr<!u64i> loc(#loc169)
            cir.yield loc(#loc163)
          } loc(#loc163)
        } loc(#loc163)
      } loc(#loc161)
      cir.scope {
        %19 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc171)
        cir.scope {
          %23 = cir.const #cir.int<0> : !s32i loc(#loc57)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc57)
          cir.store %24, %19 : !u64i, !cir.ptr<!u64i> loc(#loc173)
          cir.for : cond {
            %25 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc59)
            %26 = cir.const #cir.int<100> : !s32i loc(#loc60)
            %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc60)
            %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc174)
            cir.condition(%28) loc(#loc61)
          } body {
            cir.scope {
              %25 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc63)
              %26 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc64)
              %27 = cir.ptr_stride(%25 : !cir.ptr<!ty__twoIntsStruct>, %26 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
              %28 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc66)
              %29 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
              %30 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %28 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
              cir.copy %30 to %27 : !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
            } loc(#loc175)
            cir.yield loc(#loc56)
          } step {
            %25 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc68)
            %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc69)
            cir.store %26, %19 : !u64i, !cir.ptr<!u64i> loc(#loc176)
            cir.yield loc(#loc172)
          } loc(#loc172)
        } loc(#loc172)
        %20 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc71)
        %22 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %21 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
        cir.call @printStructLine(%22) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc73)
      } loc(#loc170)
    } loc(#loc159)
    cir.return loc(#loc4)
  } loc(#loc148)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc178)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc76)
    cir.return loc(#loc75)
  } loc(#loc177)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc180)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc181)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc182)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc85)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc85)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc85)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc85)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc85)
    %8 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc183)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc85)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
    cir.store %10, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc182)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc87)
    %13 = cir.const #cir.int<8> : !u64i loc(#loc87)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc87)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc87)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc87)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
    cir.store %17, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc183)
    cir.scope {
      %18 = cir.const #cir.int<0> : !s32i loc(#loc90)
      cir.store %18, %0 : !s32i, !cir.ptr<!s32i> loc(#loc185)
      cir.for : cond {
        %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc92)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc93)
        %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc186)
        cir.condition(%21) loc(#loc94)
      } body {
        cir.scope {
          %19 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
          cir.store %19, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc188)
        } loc(#loc187)
        cir.yield loc(#loc89)
      } step {
        %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc98)
        %20 = cir.unary(inc, %19) nsw : !s32i, !s32i loc(#loc99)
        cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
        cir.yield loc(#loc184)
      } loc(#loc184)
    } loc(#loc184)
    cir.scope {
      %18 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc191)
      cir.scope {
        %19 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc193)
        cir.scope {
          %20 = cir.const #cir.int<0> : !s32i loc(#loc110)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc110)
          cir.store %21, %19 : !u64i, !cir.ptr<!u64i> loc(#loc195)
          cir.for : cond {
            %22 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc112)
            %23 = cir.const #cir.int<100> : !s32i loc(#loc113)
            %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc113)
            %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc196)
            cir.condition(%25) loc(#loc114)
          } body {
            cir.scope {
              %22 = cir.const #cir.int<0> : !s32i loc(#loc116)
              %23 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc117)
              %24 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
              %25 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %23 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
              %26 = cir.get_member %25[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc44)
              cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc198)
              %27 = cir.const #cir.int<0> : !s32i loc(#loc119)
              %28 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc120)
              %29 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
              %30 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %28 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
              %31 = cir.get_member %30[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc48)
              cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc199)
            } loc(#loc197)
            cir.yield loc(#loc109)
          } step {
            %22 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc122)
            %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc123)
            cir.store %23, %19 : !u64i, !cir.ptr<!u64i> loc(#loc200)
            cir.yield loc(#loc194)
          } loc(#loc194)
        } loc(#loc194)
      } loc(#loc192)
      cir.scope {
        %19 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc202)
        cir.scope {
          %23 = cir.const #cir.int<0> : !s32i loc(#loc130)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc130)
          cir.store %24, %19 : !u64i, !cir.ptr<!u64i> loc(#loc204)
          cir.for : cond {
            %25 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc132)
            %26 = cir.const #cir.int<100> : !s32i loc(#loc133)
            %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc133)
            %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc205)
            cir.condition(%28) loc(#loc134)
          } body {
            cir.scope {
              %25 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
              %26 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc137)
              %27 = cir.ptr_stride(%25 : !cir.ptr<!ty__twoIntsStruct>, %26 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc138)
              %28 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc139)
              %29 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc140)
              %30 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %28 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc140)
              cir.copy %30 to %27 : !cir.ptr<!ty__twoIntsStruct> loc(#loc138)
            } loc(#loc206)
            cir.yield loc(#loc129)
          } step {
            %25 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc141)
            %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc142)
            cir.store %26, %19 : !u64i, !cir.ptr<!u64i> loc(#loc207)
            cir.yield loc(#loc203)
          } loc(#loc203)
        } loc(#loc203)
        %20 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc144)
        %22 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %21 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc145)
        cir.call @printStructLine(%22) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc146)
      } loc(#loc201)
    } loc(#loc190)
    cir.return loc(#loc79)
  } loc(#loc179)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":54:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":23:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":23:9)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":24:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":24:21)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":25:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":25:54)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":26:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":26:55)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":27:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":32:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":27:13)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":27:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":27:16)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":27:20)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":27:18)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":28:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":31:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":31:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":27:24)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":27:23)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":33:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":53:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":34:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":34:33)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":35:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":43:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":36:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":36:20)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":38:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":42:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":38:22)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":38:18)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":38:25)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":38:29)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":38:27)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":39:13)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":40:36)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":40:24)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":40:17)
#loc44 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":41:36)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":41:24)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":41:17)
#loc48 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":38:35)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":38:34)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":44:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":52:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":45:13)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":45:20)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":47:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":50:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":47:22)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":47:18)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":47:25)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":47:29)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":47:27)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":48:13)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":49:17)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":49:22)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":49:23)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":49:34)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":49:27)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":47:35)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":47:34)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":51:30)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":51:35)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":51:36)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":51:13)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":95:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":98:1)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":97:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":97:13)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":61:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":93:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":63:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":63:9)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":64:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":64:21)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":65:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":65:54)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":66:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":66:55)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":67:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":71:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":67:13)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":67:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":67:16)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":67:20)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":67:18)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":68:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":70:16)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":70:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":67:24)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":67:23)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":72:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":92:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":73:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":73:33)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":74:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":82:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":75:13)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":75:20)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":77:13)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":81:13)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":77:22)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":77:18)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":77:25)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":77:29)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":77:27)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":78:13)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":79:36)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":79:24)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":79:17)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":80:36)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":80:24)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":80:17)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":77:35)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":77:34)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":83:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":91:9)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":84:13)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":84:20)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":86:13)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":89:13)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":86:22)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":86:18)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":86:25)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":86:29)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":86:27)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":87:13)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":88:17)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":88:22)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":88:23)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":88:34)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":88:27)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":86:35)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":86:34)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":90:30)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":90:35)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":90:36)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_17.c":90:13)
#loc147 = loc(fused[#loc1, #loc2])
#loc148 = loc(fused[#loc3, #loc4])
#loc149 = loc(fused[#loc5, #loc6])
#loc150 = loc(fused[#loc7, #loc8])
#loc151 = loc(fused[#loc9, #loc10])
#loc152 = loc(fused[#loc11, #loc12])
#loc153 = loc(fused[#loc13, #loc14])
#loc154 = loc(fused[#loc16, #loc15])
#loc155 = loc(fused[#loc17, #loc18])
#loc156 = loc(fused[#loc20, #loc14])
#loc157 = loc(fused[#loc22, #loc21])
#loc158 = loc(fused[#loc24, #loc23])
#loc159 = loc(fused[#loc25, #loc26])
#loc160 = loc(fused[#loc27, #loc28])
#loc161 = loc(fused[#loc29, #loc30])
#loc162 = loc(fused[#loc31, #loc32])
#loc163 = loc(fused[#loc33, #loc34])
#loc164 = loc(fused[#loc36, #loc35])
#loc165 = loc(fused[#loc37, #loc38])
#loc166 = loc(fused[#loc40, #loc34])
#loc167 = loc(fused[#loc43, #loc41])
#loc168 = loc(fused[#loc47, #loc45])
#loc169 = loc(fused[#loc50, #loc49])
#loc170 = loc(fused[#loc51, #loc52])
#loc171 = loc(fused[#loc53, #loc54])
#loc172 = loc(fused[#loc55, #loc56])
#loc173 = loc(fused[#loc58, #loc57])
#loc174 = loc(fused[#loc59, #loc60])
#loc175 = loc(fused[#loc62, #loc56])
#loc176 = loc(fused[#loc69, #loc68])
#loc177 = loc(fused[#loc74, #loc75])
#loc178 = loc(fused[#loc76, #loc77])
#loc179 = loc(fused[#loc78, #loc79])
#loc180 = loc(fused[#loc80, #loc81])
#loc181 = loc(fused[#loc82, #loc83])
#loc182 = loc(fused[#loc84, #loc85])
#loc183 = loc(fused[#loc86, #loc87])
#loc184 = loc(fused[#loc88, #loc89])
#loc185 = loc(fused[#loc91, #loc90])
#loc186 = loc(fused[#loc92, #loc93])
#loc187 = loc(fused[#loc95, #loc89])
#loc188 = loc(fused[#loc97, #loc96])
#loc189 = loc(fused[#loc99, #loc98])
#loc190 = loc(fused[#loc100, #loc101])
#loc191 = loc(fused[#loc102, #loc103])
#loc192 = loc(fused[#loc104, #loc105])
#loc193 = loc(fused[#loc106, #loc107])
#loc194 = loc(fused[#loc108, #loc109])
#loc195 = loc(fused[#loc111, #loc110])
#loc196 = loc(fused[#loc112, #loc113])
#loc197 = loc(fused[#loc115, #loc109])
#loc198 = loc(fused[#loc118, #loc116])
#loc199 = loc(fused[#loc121, #loc119])
#loc200 = loc(fused[#loc123, #loc122])
#loc201 = loc(fused[#loc124, #loc125])
#loc202 = loc(fused[#loc126, #loc127])
#loc203 = loc(fused[#loc128, #loc129])
#loc204 = loc(fused[#loc131, #loc130])
#loc205 = loc(fused[#loc132, #loc133])
#loc206 = loc(fused[#loc135, #loc129])
#loc207 = loc(fused[#loc142, #loc141])
