!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_loop_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc261)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc262)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc263)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc264)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc265)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_loop_03_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc267)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc268)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc19)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc20)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc270)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc22)
        %6 = cir.const #cir.int<50> : !s32i loc(#loc23)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc23)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc272)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc273)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc22)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc274)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc275)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc277)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc33)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc34)
            %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc35)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc33)
          } loc(#loc278)
        } loc(#loc276)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc37)
        %15 = cir.const #cir.int<50> : !s32i loc(#loc38)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc39)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc38)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc38)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc279)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc42)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc42)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
        %22 = cir.const #cir.int<50> : !s32i loc(#loc44)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc45)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc44)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc46)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc280)
      } loc(#loc271)
    } loc(#loc269)
    cir.scope {
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc282)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc283)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc284)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc54)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc55)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc56)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc57)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc56)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc56)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc285)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc60)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc60)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc61)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc62)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc61)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc63)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc286)
      %19 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc64)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
      %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc64)
      cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc287)
      cir.scope {
        %33 = cir.const #cir.int<0> : !s32i loc(#loc70)
        %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc70)
        cir.store %34, %2 : !u64i, !cir.ptr<!u64i> loc(#loc289)
        cir.for : cond {
          %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc72)
          %36 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc73)
          %37 = cir.cmp(lt, %35, %36) : !u64i, !cir.bool loc(#loc290)
          cir.condition(%37) loc(#loc74)
        } body {
          cir.scope {
            %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
            %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc77)
            %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc78)
            %38 = cir.load %37 : !cir.ptr<!s8i>, !s8i loc(#loc76)
            %39 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc79)
            %40 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
            %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc80)
            cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc292)
          } loc(#loc291)
          cir.yield loc(#loc69)
        } step {
          %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc81)
          %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc82)
          cir.store %36, %2 : !u64i, !cir.ptr<!u64i> loc(#loc293)
          cir.yield loc(#loc288)
        } loc(#loc288)
      } loc(#loc288)
      %22 = cir.const #cir.int<0> : !s32i loc(#loc83)
      %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc83)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc84)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc85)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc84)
      %27 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc86)
      %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc86)
      cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc294)
      %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc87)
      cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc88)
      %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc89)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
      %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
      cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc89)
    } loc(#loc281)
    cir.return loc(#loc12)
  } loc(#loc266)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_loop_03_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc296)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc93)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc297)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc95)
    cir.return loc(#loc92)
  } loc(#loc295)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc97)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc299)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc102)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc300)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc106)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc107)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc302)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc97)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc97)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc111)
      } else {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc112)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc113)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc113)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc304)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc305)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc112)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc306)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc307)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc121)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc121)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc309)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc123)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc124)
            %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc125)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc123)
          } loc(#loc310)
        } loc(#loc308)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc127)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc128)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc129)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc128)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc128)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc311)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc132)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc132)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc134)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc135)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc134)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc136)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc312)
      } loc(#loc303)
    } loc(#loc301)
    cir.scope {
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc314)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc315)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc316)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc144)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc144)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc145)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc146)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc147)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc146)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc146)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc317)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc150)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc150)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc151)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc152)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc151)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc153)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc153)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc318)
      %19 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc154)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc155)
      %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc154)
      cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc319)
      cir.scope {
        %33 = cir.const #cir.int<0> : !s32i loc(#loc160)
        %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc160)
        cir.store %34, %2 : !u64i, !cir.ptr<!u64i> loc(#loc321)
        cir.for : cond {
          %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc162)
          %36 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc163)
          %37 = cir.cmp(lt, %35, %36) : !u64i, !cir.bool loc(#loc322)
          cir.condition(%37) loc(#loc164)
        } body {
          cir.scope {
            %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
            %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc167)
            %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc168)
            %38 = cir.load %37 : !cir.ptr<!s8i>, !s8i loc(#loc166)
            %39 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc169)
            %40 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc170)
            %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc170)
            cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc324)
          } loc(#loc323)
          cir.yield loc(#loc159)
        } step {
          %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc171)
          %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc172)
          cir.store %36, %2 : !u64i, !cir.ptr<!u64i> loc(#loc325)
          cir.yield loc(#loc320)
        } loc(#loc320)
      } loc(#loc320)
      %22 = cir.const #cir.int<0> : !s32i loc(#loc173)
      %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc173)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc174)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc175)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc174)
      %27 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc176)
      %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc176)
      cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc326)
      %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc177)
      cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc178)
      %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc179)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
      %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc180)
      cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc179)
    } loc(#loc313)
    cir.return loc(#loc99)
  } loc(#loc298)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc328)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc185)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc329)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc189)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc190)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc331)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc192)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc193)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc193)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc333)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc334)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc192)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc335)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc336)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc200)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc201)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc201)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc338)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc203)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc204)
            %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc205)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc203)
          } loc(#loc339)
        } loc(#loc337)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc206)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc206)
        %14 = cir.const #cir.int<65> : !s32i loc(#loc207)
        %15 = cir.const #cir.int<100> : !s32i loc(#loc208)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc209)
        %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc208)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc208)
        cir.libc.memset %18 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc340)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc212)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc212)
        %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc213)
        %22 = cir.const #cir.int<100> : !s32i loc(#loc214)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc215)
        %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc214)
        %25 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc216)
        cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc341)
      } loc(#loc332)
    } loc(#loc330)
    cir.scope {
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc343)
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc344)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc345)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc224)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc224)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc225)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc226)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc227)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc226)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc226)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc346)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc230)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc230)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc231)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc232)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc231)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc233)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc233)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc347)
      %19 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc234)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc235)
      %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc234)
      cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc348)
      cir.scope {
        %33 = cir.const #cir.int<0> : !s32i loc(#loc240)
        %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc240)
        cir.store %34, %2 : !u64i, !cir.ptr<!u64i> loc(#loc350)
        cir.for : cond {
          %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc242)
          %36 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc243)
          %37 = cir.cmp(lt, %35, %36) : !u64i, !cir.bool loc(#loc351)
          cir.condition(%37) loc(#loc244)
        } body {
          cir.scope {
            %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc246)
            %36 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc247)
            %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc248)
            %38 = cir.load %37 : !cir.ptr<!s8i>, !s8i loc(#loc246)
            %39 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc249)
            %40 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc250)
            %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc250)
            cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc353)
          } loc(#loc352)
          cir.yield loc(#loc239)
        } step {
          %35 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc251)
          %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc252)
          cir.store %36, %2 : !u64i, !cir.ptr<!u64i> loc(#loc354)
          cir.yield loc(#loc349)
        } loc(#loc349)
      } loc(#loc349)
      %22 = cir.const #cir.int<0> : !s32i loc(#loc253)
      %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc253)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc254)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc255)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc254)
      %27 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc256)
      %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc256)
      cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc355)
      %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc257)
      cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc258)
      %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc259)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc260)
      %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc260)
      cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc259)
    } loc(#loc342)
    cir.return loc(#loc182)
  } loc(#loc327)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_loop_03.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":23:1)
#loc12 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":51:1)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":25:5)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":25:12)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":26:12)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":26:5)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":27:5)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":34:5)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":27:8)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":27:11)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":28:5)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":30:24)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":30:31)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":30:34)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":30:45)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":30:46)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":30:9)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":31:9)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":31:37)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":31:13)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":31:21)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":31:27)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":31:28)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":31:34)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":31:33)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":32:16)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":32:22)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":32:27)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":32:30)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":32:9)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":32:31)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":33:22)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":33:9)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":33:14)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":33:17)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":33:18)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":35:5)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":50:5)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":36:9)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":36:16)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":36:19)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":37:9)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":37:22)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":38:16)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":38:22)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":38:27)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":38:31)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":38:9)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":38:32)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":39:23)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":39:14)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":39:18)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":39:9)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":40:19)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":40:26)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":40:9)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":40:30)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":43:9)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":46:9)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":43:18)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":43:14)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":43:21)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":43:25)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":43:23)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":44:9)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":45:23)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":45:28)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":45:29)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":45:18)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":45:13)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":43:35)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":43:34)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":47:23)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":47:14)
#loc85 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":47:18)
#loc86 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":47:9)
#loc87 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":48:19)
#loc88 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":48:9)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":49:9)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":49:14)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":124:1)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":128:1)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":126:5)
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":126:14)
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":127:5)
#loc96 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":127:14)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":65:19)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":58:1)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":91:1)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":60:5)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":60:12)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":61:12)
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":61:5)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":62:5)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":74:5)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":62:8)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":62:11)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":63:5)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":66:5)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":68:5)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":65:9)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":70:24)
#loc113 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":70:31)
#loc114 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":70:35)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":70:46)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":70:47)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":70:9)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":71:9)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":71:37)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":71:13)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":71:21)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":71:27)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":71:28)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":71:34)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":71:33)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":72:16)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":72:22)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":72:27)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":72:31)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":72:9)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":72:32)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":73:23)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":73:9)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":73:14)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":73:18)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":73:19)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":75:5)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":90:5)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":76:9)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":76:16)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":76:19)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":77:9)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":77:22)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":78:16)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":78:22)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":78:27)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":78:31)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":78:9)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":78:32)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":79:23)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":79:14)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":79:18)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":79:9)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":80:19)
#loc155 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":80:26)
#loc156 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":80:9)
#loc157 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":80:30)
#loc158 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":83:9)
#loc159 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":86:9)
#loc160 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":83:18)
#loc161 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":83:14)
#loc162 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":83:21)
#loc163 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":83:25)
#loc164 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":83:23)
#loc165 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":84:9)
#loc166 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":85:23)
#loc167 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":85:28)
#loc168 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":85:29)
#loc169 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":85:18)
#loc170 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":85:13)
#loc171 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":83:35)
#loc172 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":83:34)
#loc173 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":87:23)
#loc174 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":87:14)
#loc175 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":87:18)
#loc176 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":87:9)
#loc177 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":88:19)
#loc178 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":88:9)
#loc179 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":89:9)
#loc180 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":89:14)
#loc181 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":94:1)
#loc182 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":122:1)
#loc183 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":96:5)
#loc184 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":96:12)
#loc185 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":97:12)
#loc186 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":97:5)
#loc187 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":98:5)
#loc188 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":105:5)
#loc189 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":98:8)
#loc190 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":98:11)
#loc191 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":99:5)
#loc192 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":101:24)
#loc193 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":101:31)
#loc194 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":101:35)
#loc195 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":101:46)
#loc196 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":101:47)
#loc197 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":101:9)
#loc198 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":102:9)
#loc199 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":102:37)
#loc200 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":102:13)
#loc201 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":102:21)
#loc202 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":102:27)
#loc203 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":102:28)
#loc204 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":102:34)
#loc205 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":102:33)
#loc206 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":103:16)
#loc207 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":103:22)
#loc208 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":103:27)
#loc209 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":103:31)
#loc210 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":103:9)
#loc211 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":103:32)
#loc212 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":104:23)
#loc213 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":104:9)
#loc214 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":104:14)
#loc215 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":104:18)
#loc216 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":104:19)
#loc217 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":106:5)
#loc218 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":121:5)
#loc219 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":107:9)
#loc220 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":107:16)
#loc221 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":107:19)
#loc222 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":108:9)
#loc223 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":108:22)
#loc224 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":109:16)
#loc225 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":109:22)
#loc226 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":109:27)
#loc227 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":109:31)
#loc228 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":109:9)
#loc229 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":109:32)
#loc230 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":110:23)
#loc231 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":110:14)
#loc232 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":110:18)
#loc233 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":110:9)
#loc234 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":111:19)
#loc235 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":111:26)
#loc236 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":111:9)
#loc237 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":111:30)
#loc238 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":114:9)
#loc239 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":117:9)
#loc240 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":114:18)
#loc241 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":114:14)
#loc242 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":114:21)
#loc243 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":114:25)
#loc244 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":114:23)
#loc245 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":115:9)
#loc246 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":116:23)
#loc247 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":116:28)
#loc248 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":116:29)
#loc249 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":116:18)
#loc250 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":116:13)
#loc251 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":114:35)
#loc252 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":114:34)
#loc253 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":118:23)
#loc254 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":118:14)
#loc255 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":118:18)
#loc256 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":118:9)
#loc257 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":119:19)
#loc258 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":119:9)
#loc259 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":120:9)
#loc260 = loc("CWE126_Buffer_Overread__malloc_char_loop_03.c":120:14)
#loc261 = loc(fused[#loc1, #loc2])
#loc262 = loc(fused[#loc3, #loc4])
#loc263 = loc(fused[#loc5, #loc6])
#loc264 = loc(fused[#loc7, #loc8])
#loc265 = loc(fused[#loc9, #loc10])
#loc266 = loc(fused[#loc11, #loc12])
#loc267 = loc(fused[#loc13, #loc14])
#loc268 = loc(fused[#loc16, #loc15])
#loc269 = loc(fused[#loc17, #loc18])
#loc270 = loc(fused[#loc19, #loc20])
#loc271 = loc(fused[#loc21, #loc18])
#loc272 = loc(fused[#loc24, #loc25])
#loc273 = loc(fused[#loc23, #loc25])
#loc274 = loc(fused[#loc22, #loc26])
#loc275 = loc(fused[#loc27, #loc26])
#loc276 = loc(fused[#loc28, #loc29])
#loc277 = loc(fused[#loc30, #loc31])
#loc278 = loc(fused[#loc32, #loc29])
#loc279 = loc(fused[#loc40, #loc41])
#loc280 = loc(fused[#loc43, #loc42])
#loc281 = loc(fused[#loc47, #loc48])
#loc282 = loc(fused[#loc49, #loc50])
#loc283 = loc(fused[#loc49, #loc51])
#loc284 = loc(fused[#loc52, #loc53])
#loc285 = loc(fused[#loc58, #loc59])
#loc286 = loc(fused[#loc63, #loc60])
#loc287 = loc(fused[#loc66, #loc67])
#loc288 = loc(fused[#loc68, #loc69])
#loc289 = loc(fused[#loc71, #loc70])
#loc290 = loc(fused[#loc72, #loc73])
#loc291 = loc(fused[#loc75, #loc69])
#loc292 = loc(fused[#loc80, #loc78])
#loc293 = loc(fused[#loc82, #loc81])
#loc294 = loc(fused[#loc86, #loc83])
#loc295 = loc(fused[#loc91, #loc92])
#loc296 = loc(fused[#loc93, #loc94])
#loc297 = loc(fused[#loc95, #loc96])
#loc298 = loc(fused[#loc98, #loc99])
#loc299 = loc(fused[#loc100, #loc101])
#loc300 = loc(fused[#loc103, #loc102])
#loc301 = loc(fused[#loc104, #loc105])
#loc302 = loc(fused[#loc106, #loc107])
#loc303 = loc(fused[#loc108, #loc109, #loc110, #loc105])
#loc304 = loc(fused[#loc114, #loc115])
#loc305 = loc(fused[#loc113, #loc115])
#loc306 = loc(fused[#loc112, #loc116])
#loc307 = loc(fused[#loc117, #loc116])
#loc308 = loc(fused[#loc118, #loc119])
#loc309 = loc(fused[#loc120, #loc121])
#loc310 = loc(fused[#loc122, #loc119])
#loc311 = loc(fused[#loc130, #loc131])
#loc312 = loc(fused[#loc133, #loc132])
#loc313 = loc(fused[#loc137, #loc138])
#loc314 = loc(fused[#loc139, #loc140])
#loc315 = loc(fused[#loc139, #loc141])
#loc316 = loc(fused[#loc142, #loc143])
#loc317 = loc(fused[#loc148, #loc149])
#loc318 = loc(fused[#loc153, #loc150])
#loc319 = loc(fused[#loc156, #loc157])
#loc320 = loc(fused[#loc158, #loc159])
#loc321 = loc(fused[#loc161, #loc160])
#loc322 = loc(fused[#loc162, #loc163])
#loc323 = loc(fused[#loc165, #loc159])
#loc324 = loc(fused[#loc170, #loc168])
#loc325 = loc(fused[#loc172, #loc171])
#loc326 = loc(fused[#loc176, #loc173])
#loc327 = loc(fused[#loc181, #loc182])
#loc328 = loc(fused[#loc183, #loc184])
#loc329 = loc(fused[#loc186, #loc185])
#loc330 = loc(fused[#loc187, #loc188])
#loc331 = loc(fused[#loc189, #loc190])
#loc332 = loc(fused[#loc191, #loc188])
#loc333 = loc(fused[#loc194, #loc195])
#loc334 = loc(fused[#loc193, #loc195])
#loc335 = loc(fused[#loc192, #loc196])
#loc336 = loc(fused[#loc197, #loc196])
#loc337 = loc(fused[#loc198, #loc199])
#loc338 = loc(fused[#loc200, #loc201])
#loc339 = loc(fused[#loc202, #loc199])
#loc340 = loc(fused[#loc210, #loc211])
#loc341 = loc(fused[#loc213, #loc212])
#loc342 = loc(fused[#loc217, #loc218])
#loc343 = loc(fused[#loc219, #loc220])
#loc344 = loc(fused[#loc219, #loc221])
#loc345 = loc(fused[#loc222, #loc223])
#loc346 = loc(fused[#loc228, #loc229])
#loc347 = loc(fused[#loc233, #loc230])
#loc348 = loc(fused[#loc236, #loc237])
#loc349 = loc(fused[#loc238, #loc239])
#loc350 = loc(fused[#loc241, #loc240])
#loc351 = loc(fused[#loc242, #loc243])
#loc352 = loc(fused[#loc245, #loc239])
#loc353 = loc(fused[#loc250, #loc248])
#loc354 = loc(fused[#loc252, #loc251])
#loc355 = loc(fused[#loc256, #loc253])
