!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printDoubleLine(!cir.double) loc(#loc184)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc187)
    %2 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc10)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc10)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc10)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc10)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc10)
    cir.store %9, %2 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc189)
    cir.scope {
      %10 = cir.const #cir.int<0> : !s32i loc(#loc14)
      cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc191)
      cir.for : cond {
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc16)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc17)
        %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc192)
        cir.condition(%13) loc(#loc18)
      } body {
        cir.yield loc(#loc13)
      } step {
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc19)
        %12 = cir.unary(inc, %11) nsw : !s32i, !s32i loc(#loc20)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
        cir.yield loc(#loc190)
      } loc(#loc190)
    } loc(#loc190)
    cir.scope {
      %10 = cir.const #cir.int<0> : !s32i loc(#loc23)
      cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc195)
      cir.for : cond {
        %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc25)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc196)
        cir.condition(%13) loc(#loc27)
      } body {
        cir.scope {
          cir.scope {
            %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc199)
            cir.scope {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc35)
              cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc201)
              cir.for : cond {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc37)
                %14 = cir.const #cir.int<10> : !s32i loc(#loc38)
                %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc202)
                cir.condition(%15) loc(#loc39)
              } body {
                cir.scope {
                  %13 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc41)
                  %14 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc42)
                  %15 = cir.ptr_stride(%13 : !cir.ptr<!cir.double>, %14 : !s32i), !cir.ptr<!cir.double> loc(#loc43)
                  %16 = cir.load %15 : !cir.ptr<!cir.double>, !cir.double loc(#loc41)
                  cir.call @printDoubleLine(%16) : (!cir.double) -> () loc(#loc44)
                } loc(#loc203)
                cir.yield loc(#loc34)
              } step {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc45)
                %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc46)
                cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc204)
                cir.yield loc(#loc200)
              } loc(#loc200)
            } loc(#loc200)
          } loc(#loc198)
        } loc(#loc197)
        cir.yield loc(#loc22)
      } step {
        %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc47)
        %12 = cir.unary(inc, %11) nsw : !s32i, !s32i loc(#loc48)
        cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc205)
        cir.yield loc(#loc194)
      } loc(#loc194)
    } loc(#loc194)
    cir.return loc(#loc4)
  } loc(#loc185)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc207)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc208)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc53)
    cir.return loc(#loc50)
  } loc(#loc206)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc210)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc211)
    %2 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc212)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc62)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc62)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc62)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc62)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc62)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc62)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc62)
    cir.store %9, %2 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc213)
    cir.scope {
      %10 = cir.const #cir.int<0> : !s32i loc(#loc66)
      cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc215)
      cir.for : cond {
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc68)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc69)
        %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc216)
        cir.condition(%13) loc(#loc70)
      } body {
        cir.yield loc(#loc65)
      } step {
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc71)
        %12 = cir.unary(inc, %11) nsw : !s32i, !s32i loc(#loc72)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc217)
        cir.yield loc(#loc214)
      } loc(#loc214)
    } loc(#loc214)
    cir.scope {
      %10 = cir.const #cir.int<0> : !s32i loc(#loc75)
      cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc219)
      cir.for : cond {
        %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc77)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc78)
        %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc220)
        cir.condition(%13) loc(#loc79)
      } body {
        cir.scope {
          cir.scope {
            %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc223)
            cir.scope {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc87)
              cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc225)
              cir.for : cond {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc89)
                %14 = cir.const #cir.int<10> : !s32i loc(#loc90)
                %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc226)
                cir.condition(%15) loc(#loc91)
              } body {
                cir.scope {
                  %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc93)
                  %14 = cir.cast(int_to_float, %13 : !s32i), !cir.double loc(#loc93)
                  %15 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc94)
                  %16 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc95)
                  %17 = cir.ptr_stride(%15 : !cir.ptr<!cir.double>, %16 : !s32i), !cir.ptr<!cir.double> loc(#loc96)
                  cir.store %14, %17 : !cir.double, !cir.ptr<!cir.double> loc(#loc228)
                } loc(#loc227)
                cir.yield loc(#loc86)
              } step {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc98)
                cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc229)
                cir.yield loc(#loc224)
              } loc(#loc224)
            } loc(#loc224)
          } loc(#loc222)
          cir.scope {
            %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc231)
            cir.scope {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc105)
              cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc233)
              cir.for : cond {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                %14 = cir.const #cir.int<10> : !s32i loc(#loc108)
                %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc234)
                cir.condition(%15) loc(#loc109)
              } body {
                cir.scope {
                  %13 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc111)
                  %14 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                  %15 = cir.ptr_stride(%13 : !cir.ptr<!cir.double>, %14 : !s32i), !cir.ptr<!cir.double> loc(#loc113)
                  %16 = cir.load %15 : !cir.ptr<!cir.double>, !cir.double loc(#loc111)
                  cir.call @printDoubleLine(%16) : (!cir.double) -> () loc(#loc114)
                } loc(#loc235)
                cir.yield loc(#loc104)
              } step {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc115)
                %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc116)
                cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc236)
                cir.yield loc(#loc232)
              } loc(#loc232)
            } loc(#loc232)
          } loc(#loc230)
        } loc(#loc221)
        cir.yield loc(#loc74)
      } step {
        %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc117)
        %12 = cir.unary(inc, %11) nsw : !s32i, !s32i loc(#loc118)
        cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc237)
        cir.yield loc(#loc218)
      } loc(#loc218)
    } loc(#loc218)
    cir.return loc(#loc56)
  } loc(#loc209)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc239)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc240)
    %2 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc241)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc126)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc126)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc126)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc126)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc126)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc126)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc126)
    cir.store %9, %2 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc242)
    cir.scope {
      %10 = cir.const #cir.int<0> : !s32i loc(#loc130)
      cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
      cir.for : cond {
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc133)
        %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc245)
        cir.condition(%13) loc(#loc134)
      } body {
        cir.scope {
          cir.scope {
            %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc248)
            cir.scope {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc142)
              cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc250)
              cir.for : cond {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc144)
                %14 = cir.const #cir.int<10> : !s32i loc(#loc145)
                %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc251)
                cir.condition(%15) loc(#loc146)
              } body {
                cir.scope {
                  %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc148)
                  %14 = cir.cast(int_to_float, %13 : !s32i), !cir.double loc(#loc148)
                  %15 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc149)
                  %16 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc150)
                  %17 = cir.ptr_stride(%15 : !cir.ptr<!cir.double>, %16 : !s32i), !cir.ptr<!cir.double> loc(#loc151)
                  cir.store %14, %17 : !cir.double, !cir.ptr<!cir.double> loc(#loc253)
                } loc(#loc252)
                cir.yield loc(#loc141)
              } step {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc152)
                %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc153)
                cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc254)
                cir.yield loc(#loc249)
              } loc(#loc249)
            } loc(#loc249)
          } loc(#loc247)
        } loc(#loc246)
        cir.yield loc(#loc129)
      } step {
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
        %12 = cir.unary(inc, %11) nsw : !s32i, !s32i loc(#loc155)
        cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc255)
        cir.yield loc(#loc243)
      } loc(#loc243)
    } loc(#loc243)
    cir.scope {
      %10 = cir.const #cir.int<0> : !s32i loc(#loc158)
      cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc257)
      cir.for : cond {
        %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc160)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc161)
        %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc258)
        cir.condition(%13) loc(#loc162)
      } body {
        cir.scope {
          cir.scope {
            %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc261)
            cir.scope {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc170)
              cir.store %12, %11 : !s32i, !cir.ptr<!s32i> loc(#loc263)
              cir.for : cond {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc172)
                %14 = cir.const #cir.int<10> : !s32i loc(#loc173)
                %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc264)
                cir.condition(%15) loc(#loc174)
              } body {
                cir.scope {
                  %13 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc176)
                  %14 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc177)
                  %15 = cir.ptr_stride(%13 : !cir.ptr<!cir.double>, %14 : !s32i), !cir.ptr<!cir.double> loc(#loc178)
                  %16 = cir.load %15 : !cir.ptr<!cir.double>, !cir.double loc(#loc176)
                  cir.call @printDoubleLine(%16) : (!cir.double) -> () loc(#loc179)
                } loc(#loc265)
                cir.yield loc(#loc169)
              } step {
                %13 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc180)
                %14 = cir.unary(inc, %13) nsw : !s32i, !s32i loc(#loc181)
                cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc266)
                cir.yield loc(#loc262)
              } loc(#loc262)
            } loc(#loc262)
          } loc(#loc260)
        } loc(#loc259)
        cir.yield loc(#loc157)
      } step {
        %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc182)
        %12 = cir.unary(inc, %11) nsw : !s32i, !s32i loc(#loc183)
        cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc267)
        cir.yield loc(#loc256)
      } loc(#loc256)
    } loc(#loc256)
    cir.return loc(#loc120)
  } loc(#loc238)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":22:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":43:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":24:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":24:9)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":24:11)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":25:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":25:14)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":26:22)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":26:5)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":27:5)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":31:5)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":27:13)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":27:9)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":27:16)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":27:20)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":27:18)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":27:24)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":27:23)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":32:5)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":42:5)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":32:13)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":32:9)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":32:16)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":32:20)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":32:18)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":33:5)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":35:9)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":41:9)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":36:13)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":36:17)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":37:13)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":40:13)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":37:19)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":37:17)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":37:22)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":37:24)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":37:23)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":38:13)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":39:33)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":39:38)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":39:39)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":39:17)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":37:29)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":37:28)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":32:24)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":32:23)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":110:1)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":114:1)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":112:5)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":112:13)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":113:5)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":113:13)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":50:1)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":78:1)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":52:5)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":52:9)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":52:11)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":53:5)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":53:14)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":54:22)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":54:5)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":55:5)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":59:5)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":55:13)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":55:9)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":55:16)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":55:20)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":55:18)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":55:24)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":55:23)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":60:5)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":77:5)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":60:13)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":60:9)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":60:16)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":60:20)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":60:18)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":61:5)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":63:9)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":69:9)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":64:13)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":64:17)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":65:13)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":68:13)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":65:19)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":65:17)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":65:22)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":65:24)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":65:23)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":66:13)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":67:35)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":67:17)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":67:22)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":67:23)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":65:29)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":65:28)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":70:9)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":76:9)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":71:13)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":71:17)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":72:13)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":75:13)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":72:19)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":72:17)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":72:22)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":72:24)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":72:23)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":73:13)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":74:33)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":74:38)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":74:39)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":74:17)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":72:29)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":72:28)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":60:24)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":60:23)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":81:1)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":108:1)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":83:5)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":83:9)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":83:11)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":84:5)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":84:14)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":85:22)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":85:5)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":86:5)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":96:5)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":86:13)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":86:9)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":86:16)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":86:20)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":86:18)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":87:5)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":89:9)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":95:9)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":90:13)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":90:17)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":91:13)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":94:13)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":91:19)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":91:17)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":91:22)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":91:24)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":91:23)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":92:13)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":93:35)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":93:17)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":93:22)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":93:23)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":91:29)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":91:28)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":86:24)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":86:23)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":97:5)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":107:5)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":97:13)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":97:9)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":97:16)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":97:20)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":97:18)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":98:5)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":100:9)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":106:9)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":101:13)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":101:17)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":102:13)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":105:13)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":102:19)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":102:17)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":102:22)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":102:24)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":102:23)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":103:13)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":104:33)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":104:38)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":104:39)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":104:17)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":102:29)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":102:28)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":97:24)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_17.c":97:23)
#loc184 = loc(fused[#loc1, #loc2])
#loc185 = loc(fused[#loc3, #loc4])
#loc186 = loc(fused[#loc5, #loc6])
#loc187 = loc(fused[#loc5, #loc7])
#loc188 = loc(fused[#loc8, #loc9])
#loc189 = loc(fused[#loc11, #loc10])
#loc190 = loc(fused[#loc12, #loc13])
#loc191 = loc(fused[#loc15, #loc14])
#loc192 = loc(fused[#loc16, #loc17])
#loc193 = loc(fused[#loc20, #loc19])
#loc194 = loc(fused[#loc21, #loc22])
#loc195 = loc(fused[#loc24, #loc23])
#loc196 = loc(fused[#loc25, #loc26])
#loc197 = loc(fused[#loc28, #loc22])
#loc198 = loc(fused[#loc29, #loc30])
#loc199 = loc(fused[#loc31, #loc32])
#loc200 = loc(fused[#loc33, #loc34])
#loc201 = loc(fused[#loc36, #loc35])
#loc202 = loc(fused[#loc37, #loc38])
#loc203 = loc(fused[#loc40, #loc34])
#loc204 = loc(fused[#loc46, #loc45])
#loc205 = loc(fused[#loc48, #loc47])
#loc206 = loc(fused[#loc49, #loc50])
#loc207 = loc(fused[#loc51, #loc52])
#loc208 = loc(fused[#loc53, #loc54])
#loc209 = loc(fused[#loc55, #loc56])
#loc210 = loc(fused[#loc57, #loc58])
#loc211 = loc(fused[#loc57, #loc59])
#loc212 = loc(fused[#loc60, #loc61])
#loc213 = loc(fused[#loc63, #loc62])
#loc214 = loc(fused[#loc64, #loc65])
#loc215 = loc(fused[#loc67, #loc66])
#loc216 = loc(fused[#loc68, #loc69])
#loc217 = loc(fused[#loc72, #loc71])
#loc218 = loc(fused[#loc73, #loc74])
#loc219 = loc(fused[#loc76, #loc75])
#loc220 = loc(fused[#loc77, #loc78])
#loc221 = loc(fused[#loc80, #loc74])
#loc222 = loc(fused[#loc81, #loc82])
#loc223 = loc(fused[#loc83, #loc84])
#loc224 = loc(fused[#loc85, #loc86])
#loc225 = loc(fused[#loc88, #loc87])
#loc226 = loc(fused[#loc89, #loc90])
#loc227 = loc(fused[#loc92, #loc86])
#loc228 = loc(fused[#loc94, #loc93])
#loc229 = loc(fused[#loc98, #loc97])
#loc230 = loc(fused[#loc99, #loc100])
#loc231 = loc(fused[#loc101, #loc102])
#loc232 = loc(fused[#loc103, #loc104])
#loc233 = loc(fused[#loc106, #loc105])
#loc234 = loc(fused[#loc107, #loc108])
#loc235 = loc(fused[#loc110, #loc104])
#loc236 = loc(fused[#loc116, #loc115])
#loc237 = loc(fused[#loc118, #loc117])
#loc238 = loc(fused[#loc119, #loc120])
#loc239 = loc(fused[#loc121, #loc122])
#loc240 = loc(fused[#loc121, #loc123])
#loc241 = loc(fused[#loc124, #loc125])
#loc242 = loc(fused[#loc127, #loc126])
#loc243 = loc(fused[#loc128, #loc129])
#loc244 = loc(fused[#loc131, #loc130])
#loc245 = loc(fused[#loc132, #loc133])
#loc246 = loc(fused[#loc135, #loc129])
#loc247 = loc(fused[#loc136, #loc137])
#loc248 = loc(fused[#loc138, #loc139])
#loc249 = loc(fused[#loc140, #loc141])
#loc250 = loc(fused[#loc143, #loc142])
#loc251 = loc(fused[#loc144, #loc145])
#loc252 = loc(fused[#loc147, #loc141])
#loc253 = loc(fused[#loc149, #loc148])
#loc254 = loc(fused[#loc153, #loc152])
#loc255 = loc(fused[#loc155, #loc154])
#loc256 = loc(fused[#loc156, #loc157])
#loc257 = loc(fused[#loc159, #loc158])
#loc258 = loc(fused[#loc160, #loc161])
#loc259 = loc(fused[#loc163, #loc157])
#loc260 = loc(fused[#loc164, #loc165])
#loc261 = loc(fused[#loc166, #loc167])
#loc262 = loc(fused[#loc168, #loc169])
#loc263 = loc(fused[#loc171, #loc170])
#loc264 = loc(fused[#loc172, #loc173])
#loc265 = loc(fused[#loc175, #loc169])
#loc266 = loc(fused[#loc181, #loc180])
#loc267 = loc(fused[#loc183, #loc182])
