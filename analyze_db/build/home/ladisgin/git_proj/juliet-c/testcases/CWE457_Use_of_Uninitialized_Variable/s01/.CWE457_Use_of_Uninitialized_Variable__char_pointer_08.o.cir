!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc117)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__char_pointer_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc119)
    cir.br ^bb1 loc(#loc120)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc121)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc9)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc9)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc122)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc8)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc8)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc123)
  ^bb5:  // pred: ^bb4
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc124)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc14)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %6 ^bb6, ^bb7 loc(#loc125)
  ^bb6:  // pred: ^bb5
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc18)
    cir.br ^bb7 loc(#loc13)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc13)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc4)
  } loc(#loc118)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__char_pointer_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc21)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc128)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc130)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    cir.return loc(#loc20)
  } loc(#loc126)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc30)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc31)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    cir.return %2 : !s32i loc(#loc132)
  } loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc34)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc134)
    cir.br ^bb1 loc(#loc135)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc136)
    %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc41)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc41)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc137)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc40)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc40)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc138)
  ^bb5:  // pred: ^bb4
    %4 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc139)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc46)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc46)
    cir.brcond %6 ^bb6, ^bb7 loc(#loc140)
  ^bb6:  // pred: ^bb5
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc33)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.br ^bb8 loc(#loc49)
  ^bb7:  // pred: ^bb5
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc34)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc34)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    cir.br ^bb8 loc(#loc45)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc45)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc36)
  } loc(#loc133)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc56)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc57)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    cir.return %2 : !s32i loc(#loc143)
  } loc(#loc142)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc145)
    cir.br ^bb1 loc(#loc146)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc147)
    %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc65)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc65)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc148)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc64)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc64)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc149)
  ^bb5:  // pred: ^bb4
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc150)
    %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc70)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc70)
    cir.brcond %6 ^bb6, ^bb7 loc(#loc151)
  ^bb6:  // pred: ^bb5
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc73)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc73)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    cir.br ^bb7 loc(#loc69)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc69)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc60)
  } loc(#loc144)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc154)
    cir.br ^bb1 loc(#loc155)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc156)
    %2 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc83)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc83)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc157)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc88)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    cir.br ^bb4 loc(#loc86)
  ^bb3:  // pred: ^bb1
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc90)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc90)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    cir.br ^bb4 loc(#loc82)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc82)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc159)
  ^bb6:  // pred: ^bb5
    %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc160)
    %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc94)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc94)
    cir.brcond %10 ^bb7, ^bb8 loc(#loc161)
  ^bb7:  // pred: ^bb6
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    cir.br ^bb8 loc(#loc93)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc93)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc78)
  } loc(#loc153)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc163)
    cir.br ^bb1 loc(#loc164)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc165)
    %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc105)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc105)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc166)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc108)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc108)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    cir.br ^bb3 loc(#loc104)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc104)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc168)
  ^bb5:  // pred: ^bb4
    %6 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc169)
    %7 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc112)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc112)
    cir.brcond %8 ^bb6, ^bb7 loc(#loc170)
  ^bb6:  // pred: ^bb5
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    cir.br ^bb7 loc(#loc111)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc111)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc100)
  } loc(#loc162)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":37:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":50:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":39:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":39:12)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":40:5)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":44:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":40:8)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":40:26)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":41:5)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":45:5)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":49:5)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":45:8)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":45:26)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":46:5)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":48:19)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":48:9)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":132:1)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":138:1)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":134:5)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":134:14)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":135:5)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":135:14)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":136:5)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":136:14)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":137:5)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":137:14)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":25:1)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":28:1)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":27:12)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":27:5)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":68:19)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":73:16)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":57:1)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":76:1)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":59:5)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":59:12)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":60:5)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":64:5)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":60:8)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":60:26)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":61:5)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":65:5)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":75:5)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":65:8)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":65:27)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":66:5)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":69:5)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":71:5)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":68:9)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":73:9)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":74:19)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":74:9)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":30:1)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":33:1)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":32:12)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":32:5)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":79:1)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":93:1)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":81:5)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":81:12)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":82:5)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":86:5)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":82:8)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":82:26)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":83:5)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":87:5)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":92:5)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":87:8)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":87:26)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":88:5)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":90:16)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":90:9)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":91:19)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":91:9)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":96:1)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":114:1)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":98:5)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":98:12)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":99:5)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":108:5)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":99:8)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":99:27)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":100:5)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":103:5)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":105:5)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":102:19)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":102:9)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":107:16)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":107:9)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":109:5)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":113:5)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":109:8)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":109:26)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":110:5)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":112:19)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":112:9)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":117:1)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":130:1)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":119:5)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":119:12)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":120:5)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":124:5)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":120:8)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":120:26)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":121:5)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":123:16)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":123:9)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":125:5)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":129:5)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":125:8)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":125:26)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":126:5)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":128:19)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__char_pointer_08.c":128:9)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc120 = loc(fused[#loc7, #loc8])
#loc121 = loc(fused[#loc9, #loc10])
#loc122 = loc(fused[#loc11, #loc8])
#loc123 = loc(fused[#loc12, #loc13])
#loc124 = loc(fused[#loc14, #loc15])
#loc125 = loc(fused[#loc16, #loc13])
#loc126 = loc(fused[#loc19, #loc20])
#loc127 = loc(fused[#loc21, #loc22])
#loc128 = loc(fused[#loc23, #loc24])
#loc129 = loc(fused[#loc25, #loc26])
#loc130 = loc(fused[#loc27, #loc28])
#loc131 = loc(fused[#loc29, #loc30])
#loc132 = loc(fused[#loc32, #loc31])
#loc133 = loc(fused[#loc35, #loc36])
#loc134 = loc(fused[#loc37, #loc38])
#loc135 = loc(fused[#loc39, #loc40])
#loc136 = loc(fused[#loc41, #loc42])
#loc137 = loc(fused[#loc43, #loc40])
#loc138 = loc(fused[#loc44, #loc45])
#loc139 = loc(fused[#loc46, #loc47])
#loc140 = loc(fused[#loc48, #loc49, #loc50, #loc45])
#loc141 = loc(fused[#loc52, #loc34])
#loc142 = loc(fused[#loc55, #loc56])
#loc143 = loc(fused[#loc58, #loc57])
#loc144 = loc(fused[#loc59, #loc60])
#loc145 = loc(fused[#loc61, #loc62])
#loc146 = loc(fused[#loc63, #loc64])
#loc147 = loc(fused[#loc65, #loc66])
#loc148 = loc(fused[#loc67, #loc64])
#loc149 = loc(fused[#loc68, #loc69])
#loc150 = loc(fused[#loc70, #loc71])
#loc151 = loc(fused[#loc72, #loc69])
#loc152 = loc(fused[#loc74, #loc73])
#loc153 = loc(fused[#loc77, #loc78])
#loc154 = loc(fused[#loc79, #loc80])
#loc155 = loc(fused[#loc81, #loc82])
#loc156 = loc(fused[#loc83, #loc84])
#loc157 = loc(fused[#loc85, #loc86, #loc87, #loc82])
#loc158 = loc(fused[#loc91, #loc90])
#loc159 = loc(fused[#loc92, #loc93])
#loc160 = loc(fused[#loc94, #loc95])
#loc161 = loc(fused[#loc96, #loc93])
#loc162 = loc(fused[#loc99, #loc100])
#loc163 = loc(fused[#loc101, #loc102])
#loc164 = loc(fused[#loc103, #loc104])
#loc165 = loc(fused[#loc105, #loc106])
#loc166 = loc(fused[#loc107, #loc104])
#loc167 = loc(fused[#loc109, #loc108])
#loc168 = loc(fused[#loc110, #loc111])
#loc169 = loc(fused[#loc112, #loc113])
#loc170 = loc(fused[#loc114, #loc111])
