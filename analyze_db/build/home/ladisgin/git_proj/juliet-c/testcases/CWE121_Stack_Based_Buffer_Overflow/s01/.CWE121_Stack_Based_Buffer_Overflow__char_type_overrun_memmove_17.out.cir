!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":91:10)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":91:14)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":91:20)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":91:32)
#loc154 = loc(fused[#loc64, #loc65])
#loc155 = loc(fused[#loc66, #loc67])
!ty__charVoid = !cir.struct<struct "_charVoid" {!cir.array<!s8i x 16>, !cir.ptr<!void>, !cir.ptr<!void>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"0123456789abcdef0123456789abcde\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc1)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc127)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc129)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc10)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc131)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc12)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc13)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc132)
        cir.condition(%4) loc(#loc14)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc135)
            %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc1)
            %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc1)
            %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc1)
            %6 = cir.get_member %2[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc20)
            cir.store %5, %6 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc136)
            %7 = cir.get_member %2[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc20)
            %8 = cir.load %7 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc22)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc137)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc24)
            %10 = cir.get_member %2[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc25)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc138)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc138)
            %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc28)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc28)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
            %16 = cir.const #cir.int<32> : !u64i loc(#loc139)
            cir.libc.memmove %16 bytes from %15 to %12 : !cir.ptr<!void>, !u64i loc(#loc140)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc33)
            %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc33)
            %19 = cir.get_member %2[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc25)
            %20 = cir.const #cir.int<16> : !u64i loc(#loc141)
            %21 = cir.const #cir.int<1> : !u64i loc(#loc142)
            %22 = cir.binop(div, %20, %21) : !u64i loc(#loc143)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc38)
            %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc38)
            %25 = cir.binop(sub, %22, %24) : !u64i loc(#loc144)
            %26 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc40)
            %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc41)
            cir.store %18, %27 : !s8i, !cir.ptr<!s8i> loc(#loc145)
            %28 = cir.get_member %2[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc25)
            %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc146)
            cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc44)
            %30 = cir.get_member %2[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc20)
            %31 = cir.load %30 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc45)
            %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc147)
            cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc47)
          } loc(#loc134)
        } loc(#loc133)
        cir.yield loc(#loc9)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc49)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc148)
        cir.yield loc(#loc130)
      } loc(#loc130)
    } loc(#loc130)
    cir.return loc(#loc5)
  } loc(#loc128)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    cir.return loc(#loc51)
  } loc(#loc149)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc151)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc61)
  cir.func @main(%arg0: !s32i loc(fused[#loc64, #loc65]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc66, #loc67])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc154)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc155)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc63)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc68)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc68)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc69)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc70)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc70)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc71)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc58)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc156)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17_good() : () -> () loc(#loc73)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc59)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc60)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17_bad() : () -> () loc(#loc77)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc61)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc80)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.return %17 : !s32i loc(#loc158)
  } loc(#loc153)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc160)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc88)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc162)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc91)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc163)
        cir.condition(%4) loc(#loc92)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc166)
            %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc98)
            %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc98)
            %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
            %6 = cir.get_member %2[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc20)
            cir.store %5, %6 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc167)
            %7 = cir.get_member %2[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc20)
            %8 = cir.load %7 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc100)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc168)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc102)
            %10 = cir.get_member %2[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc25)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc169)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc169)
            %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc105)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc105)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
            %16 = cir.const #cir.int<16> : !u64i loc(#loc170)
            cir.libc.memmove %16 bytes from %15 to %12 : !cir.ptr<!void>, !u64i loc(#loc171)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc110)
            %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc110)
            %19 = cir.get_member %2[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc25)
            %20 = cir.const #cir.int<16> : !u64i loc(#loc172)
            %21 = cir.const #cir.int<1> : !u64i loc(#loc173)
            %22 = cir.binop(div, %20, %21) : !u64i loc(#loc174)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc115)
            %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc115)
            %25 = cir.binop(sub, %22, %24) : !u64i loc(#loc175)
            %26 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc117)
            %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc118)
            cir.store %18, %27 : !s8i, !cir.ptr<!s8i> loc(#loc176)
            %28 = cir.get_member %2[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc25)
            %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc177)
            cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc121)
            %30 = cir.get_member %2[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc20)
            %31 = cir.load %30 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc122)
            %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc178)
            cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc124)
          } loc(#loc165)
        } loc(#loc164)
        cir.yield loc(#loc87)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc125)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc126)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
        cir.yield loc(#loc161)
      } loc(#loc161)
    } loc(#loc161)
    cir.return loc(#loc83)
  } loc(#loc159)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":41:49)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":34:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":51:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":36:5)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":36:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":37:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":50:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":37:13)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":37:9)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":37:16)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":37:20)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":37:18)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":38:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":39:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":49:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":40:13)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":40:22)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":28:12)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":41:13)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":43:46)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":43:31)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":43:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":27:10)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":45:21)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":45:36)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":45:47)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":45:56)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":45:77)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":45:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":45:78)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":46:91)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":46:39)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":46:70)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":46:72)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":46:83)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":46:86)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":46:38)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":46:13)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":46:28)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":47:31)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":47:46)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":47:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":48:46)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":48:31)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":48:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":37:24)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":37:23)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":77:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":80:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":79:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":79:11)
#loc54 = loc("/usr/include/stdlib.h":575:1)
#loc55 = loc("/usr/include/stdlib.h":575:41)
#loc56 = loc("/usr/include/time.h":76:1)
#loc57 = loc("/usr/include/time.h":76:38)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":96:15)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":98:15)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":101:15)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":103:15)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":91:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":106:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":92:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":94:27)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":94:22)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":94:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":96:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":97:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":97:75)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":98:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":101:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":102:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":102:74)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":103:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":105:12)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":105:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":58:1)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":75:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":60:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":60:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":61:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":74:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":61:13)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":61:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":61:16)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":61:20)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":61:18)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":62:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":63:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":73:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":64:13)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":64:22)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":65:49)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":65:13)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":67:46)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":67:31)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":67:13)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":69:21)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":69:36)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":69:47)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":69:56)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":69:87)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":69:13)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":69:88)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":70:91)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":70:39)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":70:70)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":70:72)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":70:83)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":70:86)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":70:38)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":70:13)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":70:28)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":71:31)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":71:46)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":71:13)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":72:46)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":72:31)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":72:13)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":61:24)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memmove_17.c":61:23)
#loc127 = loc(fused[#loc2, #loc3])
#loc128 = loc(fused[#loc4, #loc5])
#loc129 = loc(fused[#loc6, #loc7])
#loc130 = loc(fused[#loc8, #loc9])
#loc131 = loc(fused[#loc11, #loc10])
#loc132 = loc(fused[#loc12, #loc13])
#loc133 = loc(fused[#loc15, #loc9])
#loc134 = loc(fused[#loc16, #loc17])
#loc135 = loc(fused[#loc18, #loc19])
#loc136 = loc(fused[#loc21, #loc1])
#loc137 = loc(fused[#loc23, #loc22])
#loc138 = loc(fused[#loc26, #loc27])
#loc139 = loc(fused[#loc29, #loc30])
#loc140 = loc(fused[#loc31, #loc32])
#loc141 = loc(fused[#loc34, #loc35])
#loc142 = loc(fused[#loc36, #loc37])
#loc143 = loc(fused[#loc34, #loc37])
#loc144 = loc(fused[#loc39, #loc38])
#loc145 = loc(fused[#loc40, #loc33])
#loc146 = loc(fused[#loc42, #loc43])
#loc147 = loc(fused[#loc46, #loc45])
#loc148 = loc(fused[#loc49, #loc48])
#loc149 = loc(fused[#loc50, #loc51])
#loc150 = loc(fused[#loc52, #loc53])
#loc151 = loc(fused[#loc54, #loc55])
#loc152 = loc(fused[#loc56, #loc57])
#loc153 = loc(fused[#loc62, #loc63])
#loc156 = loc(fused[#loc73, #loc74])
#loc157 = loc(fused[#loc77, #loc78])
#loc158 = loc(fused[#loc81, #loc80])
#loc159 = loc(fused[#loc82, #loc83])
#loc160 = loc(fused[#loc84, #loc85])
#loc161 = loc(fused[#loc86, #loc87])
#loc162 = loc(fused[#loc89, #loc88])
#loc163 = loc(fused[#loc90, #loc91])
#loc164 = loc(fused[#loc93, #loc87])
#loc165 = loc(fused[#loc94, #loc95])
#loc166 = loc(fused[#loc96, #loc97])
#loc167 = loc(fused[#loc99, #loc98])
#loc168 = loc(fused[#loc101, #loc100])
#loc169 = loc(fused[#loc103, #loc104])
#loc170 = loc(fused[#loc106, #loc107])
#loc171 = loc(fused[#loc108, #loc109])
#loc172 = loc(fused[#loc111, #loc112])
#loc173 = loc(fused[#loc113, #loc114])
#loc174 = loc(fused[#loc111, #loc114])
#loc175 = loc(fused[#loc116, #loc115])
#loc176 = loc(fused[#loc117, #loc110])
#loc177 = loc(fused[#loc119, #loc120])
#loc178 = loc(fused[#loc123, #loc122])
#loc179 = loc(fused[#loc126, #loc125])
