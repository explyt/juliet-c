!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc43 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":73:10)
#loc44 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":73:14)
#loc45 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":73:20)
#loc46 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":73:32)
#loc129 = loc(fused[#loc43, #loc44])
#loc130 = loc(fused[#loc45, #loc46])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc112)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_alloca_use_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc114)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc9)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc116)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc11)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc12)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc117)
        cir.condition(%4) loc(#loc13)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc120)
            %3 = cir.const #cir.int<8> : !u64i loc(#loc18)
            %4 = cir.alloca !u8i, !cir.ptr<!u8i>, %3 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc18)
            %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc121)
            %6 = cir.cast(bitcast, %4 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc18)
            %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc18)
            cir.store %7, %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc120)
            %8 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc20)
            %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc21)
            cir.store %9, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc121)
            %10 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc22)
            %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc23)
            cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc24)
          } loc(#loc119)
        } loc(#loc118)
        cir.yield loc(#loc8)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc26)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc122)
        cir.yield loc(#loc115)
      } loc(#loc115)
    } loc(#loc115)
    cir.return loc(#loc4)
  } loc(#loc113)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_alloca_use_17_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc124)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    cir.return loc(#loc28)
  } loc(#loc123)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc125)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc126)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc40)
  cir.func @main(%arg0: !s32i loc(fused[#loc43, #loc44]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc45, #loc46])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc129)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc130)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc42)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc47)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc47)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc48)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc49)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc49)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc50)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc37)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %8 = cir.get_global @CWE758_Undefined_Behavior__int_pointer_alloca_use_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call @CWE758_Undefined_Behavior__int_pointer_alloca_use_17_good() : () -> () loc(#loc52)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc38)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc39)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %13 = cir.get_global @CWE758_Undefined_Behavior__int_pointer_alloca_use_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call @CWE758_Undefined_Behavior__int_pointer_alloca_use_17_bad() : () -> () loc(#loc56)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc40)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc59)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    cir.return %17 : !s32i loc(#loc133)
  } loc(#loc128)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc134)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc135)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc137)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc71)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc139)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc73)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc74)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc140)
        cir.condition(%4) loc(#loc75)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
            %3 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc144)
            %4 = cir.const #cir.int<8> : !u64i loc(#loc82)
            %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc82)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc82)
            %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc82)
            cir.store %7, %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc144)
            %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc83)
            %9 = cir.const #cir.int<4> : !u64i loc(#loc145)
            %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc83)
            %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc146)
            cir.store %11, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc147)
            cir.scope {
              %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc90)
              %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc91)
              %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc91)
              %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc149)
              cir.if %19 {
                %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc93)
                %21 = cir.const #cir.int<1> : !s32i loc(#loc94)
                %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc95)
                cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr1) loc(#loc93)
              } loc(#loc150)
            } loc(#loc148)
            %12 = cir.const #cir.int<5> : !s32i loc(#loc96)
            %13 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc97)
            cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc151)
            %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
            %15 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc100)
            cir.store %14, %15 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc152)
            cir.scope {
              %16 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc154)
              %17 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc105)
              %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc106)
              cir.store %18, %16 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc154)
              %19 = cir.load deref %16 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc107)
              %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc108)
              cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc109)
            } loc(#loc153)
          } loc(#loc142)
        } loc(#loc141)
        cir.yield loc(#loc70)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc111)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc155)
        cir.yield loc(#loc138)
      } loc(#loc138)
    } loc(#loc138)
    cir.return loc(#loc66)
  } loc(#loc136)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":20:1)
#loc4 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":31:1)
#loc5 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":22:5)
#loc6 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":22:9)
#loc7 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":23:5)
#loc8 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":30:5)
#loc9 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":23:13)
#loc10 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":23:9)
#loc11 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":23:16)
#loc12 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":23:20)
#loc13 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":23:18)
#loc14 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":24:5)
#loc15 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":25:9)
#loc16 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":29:9)
#loc17 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":26:13)
#loc18 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":26:40)
#loc19 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":27:13)
#loc20 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":27:27)
#loc21 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":27:26)
#loc22 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":28:27)
#loc23 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":28:26)
#loc24 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":28:13)
#loc25 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":23:24)
#loc26 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":23:23)
#loc27 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":59:1)
#loc28 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":62:1)
#loc29 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":61:5)
#loc30 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":61:11)
#loc31 = loc("/usr/include/stdlib.h":575:1)
#loc32 = loc("/usr/include/stdlib.h":575:41)
#loc33 = loc("/usr/include/time.h":76:1)
#loc34 = loc("/usr/include/time.h":76:38)
#loc35 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc36 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc37 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":78:15)
#loc38 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":80:15)
#loc39 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":83:15)
#loc40 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":85:15)
#loc41 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":73:1)
#loc42 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":88:1)
#loc47 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":74:1)
#loc48 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":76:27)
#loc49 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":76:22)
#loc50 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":76:5)
#loc51 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":78:5)
#loc52 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":79:5)
#loc53 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":79:63)
#loc54 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":80:5)
#loc55 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":83:5)
#loc56 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":84:5)
#loc57 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":84:62)
#loc58 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":85:5)
#loc59 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":87:12)
#loc60 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":87:5)
#loc61 = loc("/usr/include/stdlib.h":672:1)
#loc62 = loc("/usr/include/stdlib.h":672:45)
#loc63 = loc("/usr/include/stdlib.h":756:1)
#loc64 = loc("/usr/include/stdlib.h":756:70)
#loc65 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":38:1)
#loc66 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":57:1)
#loc67 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":40:5)
#loc68 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":40:9)
#loc69 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":41:5)
#loc70 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":56:5)
#loc71 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":41:13)
#loc72 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":41:9)
#loc73 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":41:16)
#loc74 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":41:20)
#loc75 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":41:18)
#loc76 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":42:5)
#loc77 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":43:9)
#loc78 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":55:9)
#loc79 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":44:13)
#loc80 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":44:19)
#loc81 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":45:13)
#loc82 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":45:40)
#loc83 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":47:27)
#loc84 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":47:34)
#loc85 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":47:44)
#loc86 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":47:45)
#loc87 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":47:13)
#loc88 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":48:13)
#loc89 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":48:41)
#loc90 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":48:17)
#loc91 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":48:25)
#loc92 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":48:31)
#loc93 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":48:32)
#loc94 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":48:38)
#loc95 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":48:37)
#loc96 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":49:21)
#loc97 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":49:14)
#loc98 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":49:13)
#loc99 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":50:24)
#loc100 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":50:14)
#loc101 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":50:13)
#loc102 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":51:13)
#loc103 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":54:13)
#loc104 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":52:17)
#loc105 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":52:31)
#loc106 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":52:30)
#loc107 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":53:31)
#loc108 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":53:30)
#loc109 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":53:17)
#loc110 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":41:24)
#loc111 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_17.c":41:23)
#loc112 = loc(fused[#loc1, #loc2])
#loc113 = loc(fused[#loc3, #loc4])
#loc114 = loc(fused[#loc5, #loc6])
#loc115 = loc(fused[#loc7, #loc8])
#loc116 = loc(fused[#loc10, #loc9])
#loc117 = loc(fused[#loc11, #loc12])
#loc118 = loc(fused[#loc14, #loc8])
#loc119 = loc(fused[#loc15, #loc16])
#loc120 = loc(fused[#loc17, #loc18])
#loc121 = loc(fused[#loc19, #loc20])
#loc122 = loc(fused[#loc26, #loc25])
#loc123 = loc(fused[#loc27, #loc28])
#loc124 = loc(fused[#loc29, #loc30])
#loc125 = loc(fused[#loc31, #loc32])
#loc126 = loc(fused[#loc33, #loc34])
#loc127 = loc(fused[#loc35, #loc36])
#loc128 = loc(fused[#loc41, #loc42])
#loc131 = loc(fused[#loc52, #loc53])
#loc132 = loc(fused[#loc56, #loc57])
#loc133 = loc(fused[#loc60, #loc59])
#loc134 = loc(fused[#loc61, #loc62])
#loc135 = loc(fused[#loc63, #loc64])
#loc136 = loc(fused[#loc65, #loc66])
#loc137 = loc(fused[#loc67, #loc68])
#loc138 = loc(fused[#loc69, #loc70])
#loc139 = loc(fused[#loc72, #loc71])
#loc140 = loc(fused[#loc73, #loc74])
#loc141 = loc(fused[#loc76, #loc70])
#loc142 = loc(fused[#loc77, #loc78])
#loc143 = loc(fused[#loc79, #loc80])
#loc144 = loc(fused[#loc81, #loc82])
#loc145 = loc(fused[#loc84, #loc85])
#loc146 = loc(fused[#loc83, #loc86])
#loc147 = loc(fused[#loc87, #loc86])
#loc148 = loc(fused[#loc88, #loc89])
#loc149 = loc(fused[#loc90, #loc91])
#loc150 = loc(fused[#loc92, #loc89])
#loc151 = loc(fused[#loc98, #loc96])
#loc152 = loc(fused[#loc101, #loc99])
#loc153 = loc(fused[#loc102, #loc103])
#loc154 = loc(fused[#loc104, #loc105])
#loc155 = loc(fused[#loc111, #loc110])
