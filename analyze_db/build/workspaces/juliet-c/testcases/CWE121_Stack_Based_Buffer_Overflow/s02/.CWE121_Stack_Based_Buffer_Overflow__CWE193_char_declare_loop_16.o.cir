!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc107)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc108)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc109)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc110)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc112)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc113)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc114)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc19)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc19)
        cir.condition(%4) loc(#loc19)
      } do {
        cir.scope {
          %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc21)
          cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
          %4 = cir.const #cir.int<0> : !s32i loc(#loc23)
          %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc23)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc25)
          %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc26)
          cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc118)
          cir.break loc(#loc27)
        } loc(#loc116)
        cir.yield loc(#loc18)
      } loc(#loc115)
    } loc(#loc115)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc108)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc120)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc121)
      %6 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc108)
      cir.copy %6 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc108)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc33)
      %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc34)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc33)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc122)
      cir.scope {
        %11 = cir.const #cir.int<0> : !s32i loc(#loc39)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc39)
        cir.store %12, %4 : !u64i, !cir.ptr<!u64i> loc(#loc124)
        cir.for : cond {
          %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc41)
          %14 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc42)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc43)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc43)
          %17 = cir.binop(add, %14, %16) : !u64i loc(#loc125)
          %18 = cir.cmp(lt, %13, %17) : !u64i, !cir.bool loc(#loc126)
          cir.condition(%18) loc(#loc44)
        } body {
          cir.scope {
            %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc46)
            %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc47)
            %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !u64i), !cir.ptr<!s8i> loc(#loc47)
            %16 = cir.load %15 : !cir.ptr<!s8i>, !s8i loc(#loc47)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
            %18 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc49)
            %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc50)
            cir.store %16, %19 : !s8i, !cir.ptr<!s8i> loc(#loc128)
          } loc(#loc127)
          cir.yield loc(#loc38)
        } step {
          %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc52)
          %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc53)
          cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc129)
          cir.yield loc(#loc123)
        } loc(#loc123)
      } loc(#loc123)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
      cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    } loc(#loc119)
    cir.return loc(#loc10)
  } loc(#loc111)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc131)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc58)
    cir.return loc(#loc57)
  } loc(#loc130)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc133)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc134)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc135)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc70)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc70)
        cir.condition(%4) loc(#loc70)
      } do {
        cir.scope {
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc72)
          cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
          %4 = cir.const #cir.int<0> : !s32i loc(#loc74)
          %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc74)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc76)
          %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc77)
          cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc139)
          cir.break loc(#loc78)
        } loc(#loc137)
        cir.yield loc(#loc69)
      } loc(#loc136)
    } loc(#loc136)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc107)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc141)
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc142)
      %6 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc107)
      cir.copy %6 to %3 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc107)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc84)
      %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc85)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc84)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc143)
      cir.scope {
        %11 = cir.const #cir.int<0> : !s32i loc(#loc90)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc90)
        cir.store %12, %4 : !u64i, !cir.ptr<!u64i> loc(#loc145)
        cir.for : cond {
          %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc92)
          %14 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc93)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc94)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc94)
          %17 = cir.binop(add, %14, %16) : !u64i loc(#loc146)
          %18 = cir.cmp(lt, %13, %17) : !u64i, !cir.bool loc(#loc147)
          cir.condition(%18) loc(#loc95)
        } body {
          cir.scope {
            %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc97)
            %14 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc98)
            %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !u64i), !cir.ptr<!s8i> loc(#loc98)
            %16 = cir.load %15 : !cir.ptr<!s8i>, !s8i loc(#loc98)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
            %18 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc100)
            %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc101)
            cir.store %16, %19 : !s8i, !cir.ptr<!s8i> loc(#loc149)
          } loc(#loc148)
          cir.yield loc(#loc89)
        } step {
          %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc103)
          %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc104)
          cir.store %14, %4 : !u64i, !cir.ptr<!u64i> loc(#loc150)
          cir.yield loc(#loc144)
        } loc(#loc144)
      } loc(#loc144)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
      cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    } loc(#loc140)
    cir.return loc(#loc61)
  } loc(#loc132)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":74:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":74:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":42:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":42:29)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":28:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":53:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":30:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":30:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":31:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":31:26)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":32:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":32:29)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":33:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":40:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":33:11)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":34:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":37:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":37:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":38:19)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":38:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":38:14)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":38:15)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":39:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":41:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":52:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":43:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":43:16)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":43:19)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":44:21)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":44:28)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":44:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":44:34)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":47:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":50:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":47:18)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":47:14)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":47:21)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":47:25)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":47:37)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":47:23)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":48:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":49:30)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":49:23)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":49:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":49:18)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":49:19)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":49:31)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":47:41)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":47:40)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":51:19)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":51:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":87:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":90:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":89:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":89:13)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":60:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":85:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":62:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":62:12)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":63:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":63:26)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":64:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":64:29)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":65:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":72:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":65:11)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":66:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":69:16)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":69:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":70:19)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":70:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":70:14)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":70:15)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":71:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":73:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":84:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":75:9)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":75:16)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":75:19)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":76:21)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":76:28)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":76:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":76:34)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":79:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":82:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":79:18)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":79:14)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":79:21)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":79:25)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":79:37)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":79:23)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":80:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":81:30)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":81:23)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":81:13)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":81:18)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":81:19)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":81:31)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":79:41)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":79:40)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":83:19)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_16.c":83:9)
#loc107 = loc(fused[#loc1, #loc2])
#loc108 = loc(fused[#loc3, #loc4])
#loc109 = loc(fused[#loc5, #loc6])
#loc110 = loc(fused[#loc7, #loc8])
#loc111 = loc(fused[#loc9, #loc10])
#loc112 = loc(fused[#loc11, #loc12])
#loc113 = loc(fused[#loc13, #loc14])
#loc114 = loc(fused[#loc15, #loc16])
#loc115 = loc(fused[#loc17, #loc18])
#loc116 = loc(fused[#loc20, #loc18])
#loc117 = loc(fused[#loc22, #loc21])
#loc118 = loc(fused[#loc24, #loc23])
#loc119 = loc(fused[#loc28, #loc29])
#loc120 = loc(fused[#loc30, #loc31])
#loc121 = loc(fused[#loc30, #loc32])
#loc122 = loc(fused[#loc35, #loc36])
#loc123 = loc(fused[#loc37, #loc38])
#loc124 = loc(fused[#loc40, #loc39])
#loc125 = loc(fused[#loc42, #loc43])
#loc126 = loc(fused[#loc41, #loc43])
#loc127 = loc(fused[#loc45, #loc38])
#loc128 = loc(fused[#loc48, #loc51])
#loc129 = loc(fused[#loc53, #loc52])
#loc130 = loc(fused[#loc56, #loc57])
#loc131 = loc(fused[#loc58, #loc59])
#loc132 = loc(fused[#loc60, #loc61])
#loc133 = loc(fused[#loc62, #loc63])
#loc134 = loc(fused[#loc64, #loc65])
#loc135 = loc(fused[#loc66, #loc67])
#loc136 = loc(fused[#loc68, #loc69])
#loc137 = loc(fused[#loc71, #loc69])
#loc138 = loc(fused[#loc73, #loc72])
#loc139 = loc(fused[#loc75, #loc74])
#loc140 = loc(fused[#loc79, #loc80])
#loc141 = loc(fused[#loc81, #loc82])
#loc142 = loc(fused[#loc81, #loc83])
#loc143 = loc(fused[#loc86, #loc87])
#loc144 = loc(fused[#loc88, #loc89])
#loc145 = loc(fused[#loc91, #loc90])
#loc146 = loc(fused[#loc93, #loc94])
#loc147 = loc(fused[#loc92, #loc94])
#loc148 = loc(fused[#loc96, #loc89])
#loc149 = loc(fused[#loc99, #loc102])
#loc150 = loc(fused[#loc104, #loc103])
