!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s02/CWE415_Double_Free__new_delete_int_03.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc127)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr) loc(#loc128)
  cir.func  @_ZN37CWE415_Double_Free__new_delete_int_033badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc130)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc131)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc13)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc133)
      cir.if %4 {
        %5 = cir.const #cir.int<4> : !u64i loc(#loc135)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc18)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc135)
        cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc136)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc20)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc20)
        %10 = cir.const #cir.int<4> : !u64i loc(#loc18)
        cir.call @_ZdlPvm(%9, %10) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc18)
      } loc(#loc134)
    } loc(#loc132)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc23)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc24)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc138)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc26)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc26)
        %7 = cir.const #cir.int<4> : !u64i loc(#loc18)
        cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc18)
      } loc(#loc139)
    } loc(#loc137)
    cir.return loc(#loc6)
  } loc(#loc129)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc140)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc29)
  cir.func internal private  @_ZN37CWE415_Double_Free__new_delete_int_03L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc34)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc143)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc38)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc39)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc145)
      cir.if %4 {
        %5 = cir.const #cir.int<4> : !u64i loc(#loc147)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc43)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc147)
        cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc148)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc45)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc45)
        %10 = cir.const #cir.int<4> : !u64i loc(#loc43)
        cir.call @_ZdlPvm(%9, %10) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc43)
      } loc(#loc146)
    } loc(#loc144)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc48)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc49)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc150)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc29)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc29)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc53)
      } else {
      } loc(#loc151)
    } loc(#loc149)
    cir.return loc(#loc31)
  } loc(#loc141)
  cir.func internal private  @_ZN37CWE415_Double_Free__new_delete_int_03L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc58)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc154)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc62)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc63)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc156)
      cir.if %4 {
        %5 = cir.const #cir.int<4> : !u64i loc(#loc158)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc67)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc158)
        cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc159)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc69)
        %10 = cir.const #cir.int<4> : !u64i loc(#loc67)
        cir.call @_ZdlPvm(%9, %10) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc67)
      } loc(#loc157)
    } loc(#loc155)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc72)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc73)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc161)
      cir.if %4 {
      } loc(#loc162)
    } loc(#loc160)
    cir.return loc(#loc55)
  } loc(#loc152)
  cir.func internal private  @_ZN37CWE415_Double_Free__new_delete_int_03L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc164)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc79)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc165)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc83)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc84)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc167)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc88)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc88)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc89)
      } else {
        %5 = cir.const #cir.int<4> : !u64i loc(#loc169)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc92)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc169)
        cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc170)
      } loc(#loc168)
    } loc(#loc166)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc96)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc97)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc172)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc99)
        %7 = cir.const #cir.int<4> : !u64i loc(#loc92)
        cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc92)
      } loc(#loc173)
    } loc(#loc171)
    cir.return loc(#loc76)
  } loc(#loc163)
  cir.func internal private  @_ZN37CWE415_Double_Free__new_delete_int_03L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc104)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc176)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc108)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc109)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc178)
      cir.if %4 {
        %5 = cir.const #cir.int<4> : !u64i loc(#loc180)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc113)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc180)
        cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc181)
      } loc(#loc179)
    } loc(#loc177)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc117)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc118)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc183)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc120)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc120)
        %7 = cir.const #cir.int<4> : !u64i loc(#loc113)
        cir.call @_ZdlPvm(%6, %7) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc113)
      } loc(#loc184)
    } loc(#loc182)
    cir.return loc(#loc101)
  } loc(#loc174)
  cir.func  @_ZN37CWE415_Double_Free__new_delete_int_034goodEv() extra(#fn_attr1) {
    cir.call @_ZN37CWE415_Double_Free__new_delete_int_03L8goodB2G1Ev() : () -> () loc(#loc123)
    cir.call @_ZN37CWE415_Double_Free__new_delete_int_03L8goodB2G2Ev() : () -> () loc(#loc124)
    cir.call @_ZN37CWE415_Double_Free__new_delete_int_03L8goodG2B1Ev() : () -> () loc(#loc125)
    cir.call @_ZN37CWE415_Double_Free__new_delete_int_03L8goodG2B2Ev() : () -> () loc(#loc126)
    cir.return loc(#loc122)
  } loc(#loc185)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s02/CWE415_Double_Free__new_delete_int_03.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc5 = loc("CWE415_Double_Free__new_delete_int_03.cpp":27:1)
#loc6 = loc("CWE415_Double_Free__new_delete_int_03.cpp":43:1)
#loc7 = loc("CWE415_Double_Free__new_delete_int_03.cpp":29:5)
#loc8 = loc("CWE415_Double_Free__new_delete_int_03.cpp":29:11)
#loc9 = loc("CWE415_Double_Free__new_delete_int_03.cpp":31:12)
#loc10 = loc("CWE415_Double_Free__new_delete_int_03.cpp":31:5)
#loc11 = loc("CWE415_Double_Free__new_delete_int_03.cpp":32:5)
#loc12 = loc("CWE415_Double_Free__new_delete_int_03.cpp":37:5)
#loc13 = loc("CWE415_Double_Free__new_delete_int_03.cpp":32:8)
#loc14 = loc("CWE415_Double_Free__new_delete_int_03.cpp":32:11)
#loc15 = loc("CWE415_Double_Free__new_delete_int_03.cpp":33:5)
#loc16 = loc("CWE415_Double_Free__new_delete_int_03.cpp":34:16)
#loc17 = loc("CWE415_Double_Free__new_delete_int_03.cpp":34:20)
#loc18 = loc("CWE415_Double_Free__new_delete_int_03.cpp":27:6)
#loc19 = loc("CWE415_Double_Free__new_delete_int_03.cpp":34:9)
#loc20 = loc("CWE415_Double_Free__new_delete_int_03.cpp":36:16)
#loc21 = loc("CWE415_Double_Free__new_delete_int_03.cpp":38:5)
#loc22 = loc("CWE415_Double_Free__new_delete_int_03.cpp":42:5)
#loc23 = loc("CWE415_Double_Free__new_delete_int_03.cpp":38:8)
#loc24 = loc("CWE415_Double_Free__new_delete_int_03.cpp":38:11)
#loc25 = loc("CWE415_Double_Free__new_delete_int_03.cpp":39:5)
#loc26 = loc("CWE415_Double_Free__new_delete_int_03.cpp":41:16)
#loc27 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc28 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc29 = loc("CWE415_Double_Free__new_delete_int_03.cpp":64:19)
#loc30 = loc("CWE415_Double_Free__new_delete_int_03.cpp":50:1)
#loc31 = loc("CWE415_Double_Free__new_delete_int_03.cpp":72:1)
#loc32 = loc("CWE415_Double_Free__new_delete_int_03.cpp":52:5)
#loc33 = loc("CWE415_Double_Free__new_delete_int_03.cpp":52:11)
#loc34 = loc("CWE415_Double_Free__new_delete_int_03.cpp":54:12)
#loc35 = loc("CWE415_Double_Free__new_delete_int_03.cpp":54:5)
#loc36 = loc("CWE415_Double_Free__new_delete_int_03.cpp":55:5)
#loc37 = loc("CWE415_Double_Free__new_delete_int_03.cpp":60:5)
#loc38 = loc("CWE415_Double_Free__new_delete_int_03.cpp":55:8)
#loc39 = loc("CWE415_Double_Free__new_delete_int_03.cpp":55:11)
#loc40 = loc("CWE415_Double_Free__new_delete_int_03.cpp":56:5)
#loc41 = loc("CWE415_Double_Free__new_delete_int_03.cpp":57:16)
#loc42 = loc("CWE415_Double_Free__new_delete_int_03.cpp":57:20)
#loc43 = loc("CWE415_Double_Free__new_delete_int_03.cpp":50:13)
#loc44 = loc("CWE415_Double_Free__new_delete_int_03.cpp":57:9)
#loc45 = loc("CWE415_Double_Free__new_delete_int_03.cpp":59:16)
#loc46 = loc("CWE415_Double_Free__new_delete_int_03.cpp":61:5)
#loc47 = loc("CWE415_Double_Free__new_delete_int_03.cpp":71:5)
#loc48 = loc("CWE415_Double_Free__new_delete_int_03.cpp":61:8)
#loc49 = loc("CWE415_Double_Free__new_delete_int_03.cpp":61:11)
#loc50 = loc("CWE415_Double_Free__new_delete_int_03.cpp":62:5)
#loc51 = loc("CWE415_Double_Free__new_delete_int_03.cpp":65:5)
#loc52 = loc("CWE415_Double_Free__new_delete_int_03.cpp":67:5)
#loc53 = loc("CWE415_Double_Free__new_delete_int_03.cpp":64:9)
#loc54 = loc("CWE415_Double_Free__new_delete_int_03.cpp":75:1)
#loc55 = loc("CWE415_Double_Free__new_delete_int_03.cpp":92:1)
#loc56 = loc("CWE415_Double_Free__new_delete_int_03.cpp":77:5)
#loc57 = loc("CWE415_Double_Free__new_delete_int_03.cpp":77:11)
#loc58 = loc("CWE415_Double_Free__new_delete_int_03.cpp":79:12)
#loc59 = loc("CWE415_Double_Free__new_delete_int_03.cpp":79:5)
#loc60 = loc("CWE415_Double_Free__new_delete_int_03.cpp":80:5)
#loc61 = loc("CWE415_Double_Free__new_delete_int_03.cpp":85:5)
#loc62 = loc("CWE415_Double_Free__new_delete_int_03.cpp":80:8)
#loc63 = loc("CWE415_Double_Free__new_delete_int_03.cpp":80:11)
#loc64 = loc("CWE415_Double_Free__new_delete_int_03.cpp":81:5)
#loc65 = loc("CWE415_Double_Free__new_delete_int_03.cpp":82:16)
#loc66 = loc("CWE415_Double_Free__new_delete_int_03.cpp":82:20)
#loc67 = loc("CWE415_Double_Free__new_delete_int_03.cpp":75:13)
#loc68 = loc("CWE415_Double_Free__new_delete_int_03.cpp":82:9)
#loc69 = loc("CWE415_Double_Free__new_delete_int_03.cpp":84:16)
#loc70 = loc("CWE415_Double_Free__new_delete_int_03.cpp":86:5)
#loc71 = loc("CWE415_Double_Free__new_delete_int_03.cpp":91:5)
#loc72 = loc("CWE415_Double_Free__new_delete_int_03.cpp":86:8)
#loc73 = loc("CWE415_Double_Free__new_delete_int_03.cpp":86:11)
#loc74 = loc("CWE415_Double_Free__new_delete_int_03.cpp":87:5)
#loc75 = loc("CWE415_Double_Free__new_delete_int_03.cpp":95:1)
#loc76 = loc("CWE415_Double_Free__new_delete_int_03.cpp":115:1)
#loc77 = loc("CWE415_Double_Free__new_delete_int_03.cpp":97:5)
#loc78 = loc("CWE415_Double_Free__new_delete_int_03.cpp":97:11)
#loc79 = loc("CWE415_Double_Free__new_delete_int_03.cpp":99:12)
#loc80 = loc("CWE415_Double_Free__new_delete_int_03.cpp":99:5)
#loc81 = loc("CWE415_Double_Free__new_delete_int_03.cpp":100:5)
#loc82 = loc("CWE415_Double_Free__new_delete_int_03.cpp":109:5)
#loc83 = loc("CWE415_Double_Free__new_delete_int_03.cpp":100:8)
#loc84 = loc("CWE415_Double_Free__new_delete_int_03.cpp":100:11)
#loc85 = loc("CWE415_Double_Free__new_delete_int_03.cpp":101:5)
#loc86 = loc("CWE415_Double_Free__new_delete_int_03.cpp":104:5)
#loc87 = loc("CWE415_Double_Free__new_delete_int_03.cpp":106:5)
#loc88 = loc("CWE415_Double_Free__new_delete_int_03.cpp":103:19)
#loc89 = loc("CWE415_Double_Free__new_delete_int_03.cpp":103:9)
#loc90 = loc("CWE415_Double_Free__new_delete_int_03.cpp":107:16)
#loc91 = loc("CWE415_Double_Free__new_delete_int_03.cpp":107:20)
#loc92 = loc("CWE415_Double_Free__new_delete_int_03.cpp":95:13)
#loc93 = loc("CWE415_Double_Free__new_delete_int_03.cpp":107:9)
#loc94 = loc("CWE415_Double_Free__new_delete_int_03.cpp":110:5)
#loc95 = loc("CWE415_Double_Free__new_delete_int_03.cpp":114:5)
#loc96 = loc("CWE415_Double_Free__new_delete_int_03.cpp":110:8)
#loc97 = loc("CWE415_Double_Free__new_delete_int_03.cpp":110:11)
#loc98 = loc("CWE415_Double_Free__new_delete_int_03.cpp":111:5)
#loc99 = loc("CWE415_Double_Free__new_delete_int_03.cpp":113:16)
#loc100 = loc("CWE415_Double_Free__new_delete_int_03.cpp":118:1)
#loc101 = loc("CWE415_Double_Free__new_delete_int_03.cpp":133:1)
#loc102 = loc("CWE415_Double_Free__new_delete_int_03.cpp":120:5)
#loc103 = loc("CWE415_Double_Free__new_delete_int_03.cpp":120:11)
#loc104 = loc("CWE415_Double_Free__new_delete_int_03.cpp":122:12)
#loc105 = loc("CWE415_Double_Free__new_delete_int_03.cpp":122:5)
#loc106 = loc("CWE415_Double_Free__new_delete_int_03.cpp":123:5)
#loc107 = loc("CWE415_Double_Free__new_delete_int_03.cpp":127:5)
#loc108 = loc("CWE415_Double_Free__new_delete_int_03.cpp":123:8)
#loc109 = loc("CWE415_Double_Free__new_delete_int_03.cpp":123:11)
#loc110 = loc("CWE415_Double_Free__new_delete_int_03.cpp":124:5)
#loc111 = loc("CWE415_Double_Free__new_delete_int_03.cpp":125:16)
#loc112 = loc("CWE415_Double_Free__new_delete_int_03.cpp":125:20)
#loc113 = loc("CWE415_Double_Free__new_delete_int_03.cpp":118:13)
#loc114 = loc("CWE415_Double_Free__new_delete_int_03.cpp":125:9)
#loc115 = loc("CWE415_Double_Free__new_delete_int_03.cpp":128:5)
#loc116 = loc("CWE415_Double_Free__new_delete_int_03.cpp":132:5)
#loc117 = loc("CWE415_Double_Free__new_delete_int_03.cpp":128:8)
#loc118 = loc("CWE415_Double_Free__new_delete_int_03.cpp":128:11)
#loc119 = loc("CWE415_Double_Free__new_delete_int_03.cpp":129:5)
#loc120 = loc("CWE415_Double_Free__new_delete_int_03.cpp":131:16)
#loc121 = loc("CWE415_Double_Free__new_delete_int_03.cpp":135:1)
#loc122 = loc("CWE415_Double_Free__new_delete_int_03.cpp":141:1)
#loc123 = loc("CWE415_Double_Free__new_delete_int_03.cpp":137:5)
#loc124 = loc("CWE415_Double_Free__new_delete_int_03.cpp":138:5)
#loc125 = loc("CWE415_Double_Free__new_delete_int_03.cpp":139:5)
#loc126 = loc("CWE415_Double_Free__new_delete_int_03.cpp":140:5)
#loc127 = loc(fused[#loc1, #loc2])
#loc128 = loc(fused[#loc3, #loc4])
#loc129 = loc(fused[#loc5, #loc6])
#loc130 = loc(fused[#loc7, #loc8])
#loc131 = loc(fused[#loc10, #loc9])
#loc132 = loc(fused[#loc11, #loc12])
#loc133 = loc(fused[#loc13, #loc14])
#loc134 = loc(fused[#loc15, #loc12])
#loc135 = loc(fused[#loc16, #loc17])
#loc136 = loc(fused[#loc19, #loc17])
#loc137 = loc(fused[#loc21, #loc22])
#loc138 = loc(fused[#loc23, #loc24])
#loc139 = loc(fused[#loc25, #loc22])
#loc140 = loc(fused[#loc27, #loc28])
#loc141 = loc(fused[#loc30, #loc31])
#loc142 = loc(fused[#loc32, #loc33])
#loc143 = loc(fused[#loc35, #loc34])
#loc144 = loc(fused[#loc36, #loc37])
#loc145 = loc(fused[#loc38, #loc39])
#loc146 = loc(fused[#loc40, #loc37])
#loc147 = loc(fused[#loc41, #loc42])
#loc148 = loc(fused[#loc44, #loc42])
#loc149 = loc(fused[#loc46, #loc47])
#loc150 = loc(fused[#loc48, #loc49])
#loc151 = loc(fused[#loc50, #loc51, #loc52, #loc47])
#loc152 = loc(fused[#loc54, #loc55])
#loc153 = loc(fused[#loc56, #loc57])
#loc154 = loc(fused[#loc59, #loc58])
#loc155 = loc(fused[#loc60, #loc61])
#loc156 = loc(fused[#loc62, #loc63])
#loc157 = loc(fused[#loc64, #loc61])
#loc158 = loc(fused[#loc65, #loc66])
#loc159 = loc(fused[#loc68, #loc66])
#loc160 = loc(fused[#loc70, #loc71])
#loc161 = loc(fused[#loc72, #loc73])
#loc162 = loc(fused[#loc74, #loc71])
#loc163 = loc(fused[#loc75, #loc76])
#loc164 = loc(fused[#loc77, #loc78])
#loc165 = loc(fused[#loc80, #loc79])
#loc166 = loc(fused[#loc81, #loc82])
#loc167 = loc(fused[#loc83, #loc84])
#loc168 = loc(fused[#loc85, #loc86, #loc87, #loc82])
#loc169 = loc(fused[#loc90, #loc91])
#loc170 = loc(fused[#loc93, #loc91])
#loc171 = loc(fused[#loc94, #loc95])
#loc172 = loc(fused[#loc96, #loc97])
#loc173 = loc(fused[#loc98, #loc95])
#loc174 = loc(fused[#loc100, #loc101])
#loc175 = loc(fused[#loc102, #loc103])
#loc176 = loc(fused[#loc105, #loc104])
#loc177 = loc(fused[#loc106, #loc107])
#loc178 = loc(fused[#loc108, #loc109])
#loc179 = loc(fused[#loc110, #loc107])
#loc180 = loc(fused[#loc111, #loc112])
#loc181 = loc(fused[#loc114, #loc112])
#loc182 = loc(fused[#loc115, #loc116])
#loc183 = loc(fused[#loc117, #loc118])
#loc184 = loc(fused[#loc119, #loc116])
#loc185 = loc(fused[#loc121, #loc122])
