!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc133 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc208 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":204:10)
#loc209 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":204:14)
#loc210 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":204:20)
#loc211 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":204:32)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc281 = loc(fused[#loc208, #loc209])
#loc282 = loc(fused[#loc210, #loc211])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s03/CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc224)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc225)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc226)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc7)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc227)
  cir.func @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc229)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc230)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc18)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc20)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc21)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc21)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc232)
          %7 = cir.call @calloc(%5, %6) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc233)
          cir.store %8, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc234)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc28)
            %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc29)
            %11 = cir.cmp(eq, %9, %10) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc236)
            cir.if %11 {
              %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc32)
              %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc33)
              cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
            } loc(#loc237)
          } loc(#loc235)
          cir.break loc(#loc34)
        } loc(#loc19)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc7)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc7)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc36)
          cir.break loc(#loc37)
        } loc(#loc35)
        cir.yield loc(#loc16)
      } loc(#loc16)
    } loc(#loc231)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc40)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc42)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc42)
          cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc43)
          cir.break loc(#loc44)
        } loc(#loc41)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc46)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc46)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc47)
          cir.break loc(#loc48)
        } loc(#loc45)
        cir.yield loc(#loc38)
      } loc(#loc38)
    } loc(#loc238)
    cir.return loc(#loc11)
  } loc(#loc228)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc239)
  cir.func internal private @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc241)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc55)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc242)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc59)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc61)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc62)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc62)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc244)
          %7 = cir.call @calloc(%5, %6) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc61)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc245)
          cir.store %8, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc246)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc69)
            %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc70)
            %11 = cir.cmp(eq, %9, %10) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc248)
            cir.if %11 {
              %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc72)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc73)
              %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc74)
              cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc72)
            } loc(#loc249)
          } loc(#loc247)
          cir.break loc(#loc75)
        } loc(#loc60)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc77)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc77)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc78)
          cir.break loc(#loc79)
        } loc(#loc76)
        cir.yield loc(#loc57)
      } loc(#loc57)
    } loc(#loc243)
    cir.scope {
      %2 = cir.const #cir.int<8> : !s32i loc(#loc82)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc84)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc84)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc85)
          cir.break loc(#loc86)
        } loc(#loc83)
        cir.case(default, []) {
          %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc88)
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc89)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc89)
          cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc88)
          cir.break loc(#loc90)
        } loc(#loc87)
        cir.yield loc(#loc80)
      } loc(#loc80)
    } loc(#loc250)
    cir.return loc(#loc52)
  } loc(#loc240)
  cir.func internal private @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc252)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc95)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc253)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc99)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc101)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc102)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc102)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc255)
          %7 = cir.call @calloc(%5, %6) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc101)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc256)
          cir.store %8, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc257)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc109)
            %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc110)
            %11 = cir.cmp(eq, %9, %10) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc259)
            cir.if %11 {
              %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc112)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc113)
              %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc114)
              cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc112)
            } loc(#loc260)
          } loc(#loc258)
          cir.break loc(#loc115)
        } loc(#loc100)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc117)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc117)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc118)
          cir.break loc(#loc119)
        } loc(#loc116)
        cir.yield loc(#loc97)
      } loc(#loc97)
    } loc(#loc254)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc122)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc124)
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc125)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc125)
          cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc124)
          cir.break loc(#loc126)
        } loc(#loc123)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc128)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc128)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc129)
          cir.break loc(#loc130)
        } loc(#loc127)
        cir.yield loc(#loc120)
      } loc(#loc120)
    } loc(#loc261)
    cir.return loc(#loc92)
  } loc(#loc251)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc262)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc133)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc133)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc133)
    cir.return loc(#loc133)
  } loc(#loc133)
  cir.func internal private @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc264)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc138)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc265)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc142)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc144)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc144)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc145)
          cir.break loc(#loc146)
        } loc(#loc143)
        cir.case(default, []) {
          %3 = cir.const #cir.int<8> : !u64i loc(#loc267)
          %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc150)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc267)
          cir.call @_ZN12TwoIntsClassC2Ev(%5) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc149)
          cir.store %5, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc268)
          cir.break loc(#loc152)
        } loc(#loc147)
        cir.yield loc(#loc140)
      } loc(#loc140)
    } loc(#loc266)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc155)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc157)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc157)
          cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc150)
          cir.break loc(#loc158)
        } loc(#loc156)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc160)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc160)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc161)
          cir.break loc(#loc162)
        } loc(#loc159)
        cir.yield loc(#loc153)
      } loc(#loc153)
    } loc(#loc269)
    cir.return loc(#loc135)
  } loc(#loc263)
  cir.func internal private @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc271)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc167)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc272)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc171)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.const #cir.int<8> : !u64i loc(#loc274)
          %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc175)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc274)
          cir.call @_ZN12TwoIntsClassC2Ev(%5) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc174)
          cir.store %5, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc275)
          cir.break loc(#loc177)
        } loc(#loc172)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc179)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc179)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc180)
          cir.break loc(#loc181)
        } loc(#loc178)
        cir.yield loc(#loc169)
      } loc(#loc169)
    } loc(#loc273)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc184)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc186)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc186)
          cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc175)
          cir.break loc(#loc187)
        } loc(#loc185)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc189)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc189)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc190)
          cir.break loc(#loc191)
        } loc(#loc188)
        cir.yield loc(#loc182)
      } loc(#loc182)
    } loc(#loc276)
    cir.return loc(#loc164)
  } loc(#loc270)
  cir.func @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15L8goodB2G1Ev() : () -> () loc(#loc194)
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15L8goodB2G2Ev() : () -> () loc(#loc195)
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15L8goodG2B1Ev() : () -> () loc(#loc196)
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15L8goodG2B2Ev() : () -> () loc(#loc197)
    cir.return loc(#loc193)
  } loc(#loc277)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc278)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc279)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc205)
  cir.func @main(%arg0: !s32i loc(fused[#loc208, #loc209]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc210, #loc211])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc281)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc282)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc207)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc212)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc213)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc214)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc214)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc215)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc202)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc202)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc216)
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_154goodEv() : () -> () loc(#loc217)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc203)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc203)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc218)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc204)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc204)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc219)
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_153badEv() : () -> () loc(#loc220)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc205)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc205)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc221)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc222)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc283)
    cir.return %15 : !s32i loc(#loc283)
  } loc(#loc280)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s03/CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":38:19)
#loc8 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc9 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":24:1)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":53:1)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":26:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":26:20)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":28:12)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":28:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":29:5)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":40:5)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":29:12)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":31:5)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":33:32)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":33:39)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":33:44)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":33:63)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":33:64)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":33:9)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":34:9)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":34:37)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":34:13)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":34:21)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":34:27)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":34:28)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":34:34)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":34:33)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":35:9)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":36:5)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":38:9)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":39:9)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":41:5)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":52:5)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":41:12)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":43:5)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":46:16)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":24:6)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":47:9)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":48:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":50:19)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":50:9)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":51:9)
#loc49 = loc("/usr/include/stdlib.h":687:1)
#loc50 = loc("/usr/include/stdlib.h":687:32)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":60:1)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":88:1)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":62:5)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":62:20)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":64:12)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":64:5)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":65:5)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":76:5)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":65:12)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":67:5)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":69:32)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":69:39)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":69:44)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":69:63)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":69:64)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":69:9)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":70:9)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":70:37)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":70:13)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":70:21)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":70:27)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":70:28)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":70:34)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":70:33)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":71:9)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":72:5)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":74:19)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":74:9)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":75:9)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":77:5)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":87:5)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":77:12)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":79:5)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":81:19)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":81:9)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":82:9)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":83:5)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":85:9)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":85:14)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":86:9)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":91:1)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":119:1)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":93:5)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":93:20)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":95:12)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":95:5)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":96:5)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":107:5)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":96:12)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":98:5)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":100:32)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":100:39)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":100:44)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":100:63)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":100:64)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":100:9)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":101:9)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":101:37)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":101:13)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":101:21)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":101:27)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":101:28)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":101:34)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":101:33)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":102:9)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":103:5)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":105:19)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":105:9)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":106:9)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":108:5)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":118:5)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":108:12)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":110:5)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":112:9)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":112:14)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":113:9)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":114:5)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":116:19)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":116:9)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":117:9)
#loc131 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc132 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":122:1)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":150:1)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":124:5)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":124:20)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":126:12)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":126:5)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":127:5)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":137:5)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":127:12)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":129:5)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":131:19)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":131:9)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":132:9)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":133:5)
#loc148 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":135:16)
#loc149 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":135:20)
#loc150 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":122:13)
#loc151 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":135:9)
#loc152 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":136:9)
#loc153 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":138:5)
#loc154 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":149:5)
#loc155 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":138:12)
#loc156 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":140:5)
#loc157 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":143:16)
#loc158 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":144:9)
#loc159 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":145:5)
#loc160 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":147:19)
#loc161 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":147:9)
#loc162 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":148:9)
#loc163 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":153:1)
#loc164 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":181:1)
#loc165 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":155:5)
#loc166 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":155:20)
#loc167 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":157:12)
#loc168 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":157:5)
#loc169 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":158:5)
#loc170 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":168:5)
#loc171 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":158:12)
#loc172 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":160:5)
#loc173 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":162:16)
#loc174 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":162:20)
#loc175 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":153:13)
#loc176 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":162:9)
#loc177 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":163:9)
#loc178 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":164:5)
#loc179 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":166:19)
#loc180 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":166:9)
#loc181 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":167:9)
#loc182 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":169:5)
#loc183 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":180:5)
#loc184 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":169:12)
#loc185 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":171:5)
#loc186 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":174:16)
#loc187 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":175:9)
#loc188 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":176:5)
#loc189 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":178:19)
#loc190 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":178:9)
#loc191 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":179:9)
#loc192 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":183:1)
#loc193 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":189:1)
#loc194 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":185:5)
#loc195 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":186:5)
#loc196 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":187:5)
#loc197 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":188:5)
#loc198 = loc("/usr/include/stdlib.h":575:1)
#loc199 = loc("/usr/include/stdlib.h":575:41)
#loc200 = loc("/usr/include/time.h":76:1)
#loc201 = loc("/usr/include/time.h":76:38)
#loc202 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":209:15)
#loc203 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":211:15)
#loc204 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":214:15)
#loc205 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":216:15)
#loc206 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":204:1)
#loc207 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":219:1)
#loc212 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":205:1)
#loc213 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":207:27)
#loc214 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":207:22)
#loc215 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":207:5)
#loc216 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":209:5)
#loc217 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":210:5)
#loc218 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":211:5)
#loc219 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":214:5)
#loc220 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":215:5)
#loc221 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":216:5)
#loc222 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":218:12)
#loc223 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_15.cpp":218:5)
#loc224 = loc(fused[#loc1, #loc2])
#loc225 = loc(fused[#loc3, #loc4])
#loc226 = loc(fused[#loc5, #loc6])
#loc227 = loc(fused[#loc8, #loc9])
#loc228 = loc(fused[#loc10, #loc11])
#loc229 = loc(fused[#loc12, #loc13])
#loc230 = loc(fused[#loc15, #loc14])
#loc231 = loc(fused[#loc16, #loc17])
#loc232 = loc(fused[#loc22, #loc23])
#loc233 = loc(fused[#loc20, #loc24])
#loc234 = loc(fused[#loc25, #loc24])
#loc235 = loc(fused[#loc26, #loc27])
#loc236 = loc(fused[#loc28, #loc29])
#loc237 = loc(fused[#loc30, #loc27])
#loc238 = loc(fused[#loc38, #loc39])
#loc239 = loc(fused[#loc49, #loc50])
#loc240 = loc(fused[#loc51, #loc52])
#loc241 = loc(fused[#loc53, #loc54])
#loc242 = loc(fused[#loc56, #loc55])
#loc243 = loc(fused[#loc57, #loc58])
#loc244 = loc(fused[#loc63, #loc64])
#loc245 = loc(fused[#loc61, #loc65])
#loc246 = loc(fused[#loc66, #loc65])
#loc247 = loc(fused[#loc67, #loc68])
#loc248 = loc(fused[#loc69, #loc70])
#loc249 = loc(fused[#loc71, #loc68])
#loc250 = loc(fused[#loc80, #loc81])
#loc251 = loc(fused[#loc91, #loc92])
#loc252 = loc(fused[#loc93, #loc94])
#loc253 = loc(fused[#loc96, #loc95])
#loc254 = loc(fused[#loc97, #loc98])
#loc255 = loc(fused[#loc103, #loc104])
#loc256 = loc(fused[#loc101, #loc105])
#loc257 = loc(fused[#loc106, #loc105])
#loc258 = loc(fused[#loc107, #loc108])
#loc259 = loc(fused[#loc109, #loc110])
#loc260 = loc(fused[#loc111, #loc108])
#loc261 = loc(fused[#loc120, #loc121])
#loc262 = loc(fused[#loc131, #loc132])
#loc263 = loc(fused[#loc134, #loc135])
#loc264 = loc(fused[#loc136, #loc137])
#loc265 = loc(fused[#loc139, #loc138])
#loc266 = loc(fused[#loc140, #loc141])
#loc267 = loc(fused[#loc148, #loc149])
#loc268 = loc(fused[#loc151, #loc149])
#loc269 = loc(fused[#loc153, #loc154])
#loc270 = loc(fused[#loc163, #loc164])
#loc271 = loc(fused[#loc165, #loc166])
#loc272 = loc(fused[#loc168, #loc167])
#loc273 = loc(fused[#loc169, #loc170])
#loc274 = loc(fused[#loc173, #loc174])
#loc275 = loc(fused[#loc176, #loc174])
#loc276 = loc(fused[#loc182, #loc183])
#loc277 = loc(fused[#loc192, #loc193])
#loc278 = loc(fused[#loc198, #loc199])
#loc279 = loc(fused[#loc200, #loc201])
#loc280 = loc(fused[#loc206, #loc207])
#loc283 = loc(fused[#loc223, #loc222])
