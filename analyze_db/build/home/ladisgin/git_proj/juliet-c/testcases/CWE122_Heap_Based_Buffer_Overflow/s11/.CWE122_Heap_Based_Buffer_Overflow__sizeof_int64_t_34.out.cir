!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":85:10)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":85:14)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":85:20)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":85:32)
#loc139 = loc(fused[#loc62, #loc63])
#loc140 = loc(fused[#loc64, #loc65])
!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_unionType = !cir.struct<union "CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_unionType" {!cir.ptr<!s64i>, !cir.ptr<!s64i>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc115)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc116)
  cir.func private @printLongLongLine(!s64i) loc(#loc117)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc118)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc120)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc121)
    %2 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc122)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc17)
    cir.store %3, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc123)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc19)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc124)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc19)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc125)
    cir.store %7, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc126)
    cir.br ^bb1 loc(#loc127)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc26)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc27)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc27)
    %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s64i>, !cir.bool loc(#loc128)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc129)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc29)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc31)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc29)
    cir.br ^bb3 loc(#loc25)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc25)
  ^bb4:  // pred: ^bb3
    %15 = cir.const #cir.int<2147483643> : !s64i loc(#loc32)
    %16 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc33)
    cir.store %15, %16 : !s64i, !cir.ptr<!s64i> loc(#loc130)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc35)
    %18 = cir.get_member %2[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_unionType> -> !cir.ptr<!cir.ptr<!s64i>> loc(#loc36)
    cir.store %17, %18 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc131)
    cir.br ^bb5 loc(#loc132)
  ^bb5:  // pred: ^bb4
    %19 = cir.get_member %2[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_unionType> -> !cir.ptr<!cir.ptr<!s64i>> loc(#loc40)
    %20 = cir.load %19 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc12)
    cir.store %20, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc120)
    %21 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc41)
    %22 = cir.load %21 : !cir.ptr<!s64i>, !s64i loc(#loc42)
    cir.call @printLongLongLine(%22) : (!s64i) -> () loc(#loc43)
    %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc44)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc45)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc45)
    cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc44)
    cir.br ^bb6 loc(#loc39)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc10)
  } loc(#loc119)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    cir.return loc(#loc47)
  } loc(#loc133)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc135)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc136)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc59)
  cir.func @main(%arg0: !s32i loc(fused[#loc62, #loc63]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc64, #loc65])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc139)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc140)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc61)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc66)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc66)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc67)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc68)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc68)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc69)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc56)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc141)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_good() : () -> () loc(#loc71)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc57)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc58)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc142)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_bad() : () -> () loc(#loc75)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc59)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc78)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    cir.return %17 : !s32i loc(#loc143)
  } loc(#loc138)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc145)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %2 = cir.alloca !ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_unionType, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc147)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc88)
    cir.store %3, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc148)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc90)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc149)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc90)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc150)
    cir.store %7, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc151)
    cir.br ^bb1 loc(#loc152)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc97)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc98)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc98)
    %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s64i>, !cir.bool loc(#loc153)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc154)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc100)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc102)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc100)
    cir.br ^bb3 loc(#loc96)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc96)
  ^bb4:  // pred: ^bb3
    %15 = cir.const #cir.int<2147483643> : !s64i loc(#loc103)
    %16 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc104)
    cir.store %15, %16 : !s64i, !cir.ptr<!s64i> loc(#loc155)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc106)
    %18 = cir.get_member %2[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_unionType> -> !cir.ptr<!cir.ptr<!s64i>> loc(#loc36)
    cir.store %17, %18 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc156)
    cir.br ^bb5 loc(#loc157)
  ^bb5:  // pred: ^bb4
    %19 = cir.get_member %2[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34_unionType> -> !cir.ptr<!cir.ptr<!s64i>> loc(#loc40)
    %20 = cir.load %19 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc83)
    cir.store %20, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc145)
    %21 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc110)
    %22 = cir.load %21 : !cir.ptr<!s64i>, !s64i loc(#loc111)
    cir.call @printLongLongLine(%22) : (!s64i) -> () loc(#loc112)
    %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc113)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc114)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc114)
    cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc113)
    cir.br ^bb6 loc(#loc109)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc81)
  } loc(#loc144)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":27:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":45:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":40:9)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":40:34)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":29:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":29:15)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":30:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":30:68)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":32:12)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":32:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":35:23)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":35:30)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":35:41)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":35:42)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":35:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":36:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":36:33)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":36:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":36:17)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":36:23)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":36:24)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":36:30)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":36:29)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":37:13)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":37:6)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":37:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":38:26)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":21:15)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":38:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":39:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":44:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":22:15)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":42:28)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":42:27)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":42:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":43:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":43:14)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":71:1)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":74:1)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":73:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":73:13)
#loc50 = loc("/usr/include/stdlib.h":575:1)
#loc51 = loc("/usr/include/stdlib.h":575:41)
#loc52 = loc("/usr/include/time.h":76:1)
#loc53 = loc("/usr/include/time.h":76:38)
#loc54 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc55 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":90:15)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":92:15)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":95:15)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":97:15)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":85:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":100:1)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":86:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":88:27)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":88:22)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":88:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":90:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":91:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":91:63)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":92:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":95:5)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":96:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":96:62)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":97:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":99:12)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":99:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":52:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":69:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":64:9)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":64:34)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":54:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":54:15)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":55:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":55:68)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":57:12)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":57:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":59:23)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":59:30)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":59:42)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":59:43)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":59:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":60:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":60:33)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":60:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":60:17)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":60:23)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":60:24)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":60:30)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":60:29)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":61:13)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":61:6)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":61:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":62:26)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":62:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":63:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":68:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":66:28)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":66:27)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":66:9)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":67:9)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_int64_t_34.c":67:14)
#loc115 = loc(fused[#loc1, #loc2])
#loc116 = loc(fused[#loc3, #loc4])
#loc117 = loc(fused[#loc5, #loc6])
#loc118 = loc(fused[#loc7, #loc8])
#loc119 = loc(fused[#loc9, #loc10])
#loc120 = loc(fused[#loc11, #loc12])
#loc121 = loc(fused[#loc13, #loc14])
#loc122 = loc(fused[#loc15, #loc16])
#loc123 = loc(fused[#loc18, #loc17])
#loc124 = loc(fused[#loc20, #loc21])
#loc125 = loc(fused[#loc19, #loc22])
#loc126 = loc(fused[#loc23, #loc22])
#loc127 = loc(fused[#loc24, #loc25])
#loc128 = loc(fused[#loc26, #loc27])
#loc129 = loc(fused[#loc28, #loc25])
#loc130 = loc(fused[#loc34, #loc32])
#loc131 = loc(fused[#loc37, #loc35])
#loc132 = loc(fused[#loc38, #loc39])
#loc133 = loc(fused[#loc46, #loc47])
#loc134 = loc(fused[#loc48, #loc49])
#loc135 = loc(fused[#loc50, #loc51])
#loc136 = loc(fused[#loc52, #loc53])
#loc137 = loc(fused[#loc54, #loc55])
#loc138 = loc(fused[#loc60, #loc61])
#loc141 = loc(fused[#loc71, #loc72])
#loc142 = loc(fused[#loc75, #loc76])
#loc143 = loc(fused[#loc79, #loc78])
#loc144 = loc(fused[#loc80, #loc81])
#loc145 = loc(fused[#loc82, #loc83])
#loc146 = loc(fused[#loc84, #loc85])
#loc147 = loc(fused[#loc86, #loc87])
#loc148 = loc(fused[#loc89, #loc88])
#loc149 = loc(fused[#loc91, #loc92])
#loc150 = loc(fused[#loc90, #loc93])
#loc151 = loc(fused[#loc94, #loc93])
#loc152 = loc(fused[#loc95, #loc96])
#loc153 = loc(fused[#loc97, #loc98])
#loc154 = loc(fused[#loc99, #loc96])
#loc155 = loc(fused[#loc105, #loc103])
#loc156 = loc(fused[#loc107, #loc106])
#loc157 = loc(fused[#loc108, #loc109])
