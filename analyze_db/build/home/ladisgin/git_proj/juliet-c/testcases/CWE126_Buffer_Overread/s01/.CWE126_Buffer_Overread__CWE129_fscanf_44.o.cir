!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc8 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":22:21)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":22:25)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":57:25)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":57:29)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":87:25)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":87:29)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":92:23)
#true = #cir.bool<true> : !cir.bool
#loc126 = loc(fused[#loc8, #loc9])
#loc142 = loc(fused[#loc52, #loc53])
#loc154 = loc(fused[#loc87, #loc88])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc123)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc5)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc127)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc126)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc12)
    cir.br ^bb1 loc(#loc128)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc127)
    cir.store %2, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc127)
    cir.br ^bb2 loc(#loc129)
  ^bb2:  // pred: ^bb1
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc18)
    %5 = cir.cmp(ge, %3, %4) : !s32i, !cir.bool loc(#loc130)
    cir.brcond %5 ^bb3, ^bb4 loc(#loc131)
  ^bb3:  // pred: ^bb2
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc23)
    %8 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc23)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc24)
    cir.br ^bb5 loc(#loc20)
  ^bb4:  // pred: ^bb2
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc5)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc25)
    cir.br ^bb5 loc(#loc16)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc16)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc14)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc7)
  } loc(#loc125)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc132)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc30)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fscanf_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc136)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc36)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc136)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc38)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc40)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc133)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc30)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc30)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc40)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc42)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc42)
    cir.return loc(#loc32)
  } loc(#loc134)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fscanf_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc139)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc140)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    cir.return loc(#loc45)
  } loc(#loc138)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc52, #loc53])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc143)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc142)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc56)
    cir.br ^bb1 loc(#loc144)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc143)
    cir.store %2, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc143)
    cir.br ^bb2 loc(#loc145)
  ^bb2:  // pred: ^bb1
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %5 = cir.cmp(ge, %3, %4) : !s32i, !cir.bool loc(#loc146)
    cir.brcond %5 ^bb3, ^bb4 loc(#loc147)
  ^bb3:  // pred: ^bb2
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc67)
    %8 = cir.ptr_stride(%7 : !cir.ptr<!s32i>, %6 : !s32i), !cir.ptr<!s32i> loc(#loc67)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc68)
    cir.br ^bb5 loc(#loc64)
  ^bb4:  // pred: ^bb2
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc69)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    cir.br ^bb5 loc(#loc60)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc60)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc58)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc51)
  } loc(#loc141)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc76)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc150)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc78)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc80)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc82)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc82)
    cir.return loc(#loc72)
  } loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc84)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc87, #loc88])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc155)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc154)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.br ^bb1 loc(#loc156)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc155)
    cir.store %2, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc155)
    cir.br ^bb2 loc(#loc157)
  ^bb2:  // pred: ^bb1
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %5 = cir.cmp(ge, %3, %4) : !s32i, !cir.bool loc(#loc158)
    cir.brcond %5 ^bb3, ^bb8 loc(#loc98)
  ^bb3:  // pred: ^bb2
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc100)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc159)
    cir.brcond %8 ^bb4, ^bb5 loc(#loc98)
  ^bb4:  // pred: ^bb3
    %9 = cir.const #true loc(#loc98)
    cir.br ^bb6(%9 : !cir.bool) loc(#loc98)
  ^bb5:  // pred: ^bb3
    %10 = cir.const #false loc(#loc98)
    cir.br ^bb6(%10 : !cir.bool) loc(#loc98)
  ^bb6(%11: !cir.bool loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":92:23)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc98)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%11 : !cir.bool) loc(#loc98)
  ^bb8:  // pred: ^bb2
    %12 = cir.const #false loc(#loc98)
    cir.br ^bb9(%12 : !cir.bool) loc(#loc98)
  ^bb9(%13: !cir.bool loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":92:23)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc98)
  ^bb10:  // pred: ^bb9
    cir.brcond %13 ^bb11, ^bb12 loc(#loc160)
  ^bb11:  // pred: ^bb10
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc106)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc106)
    %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc107)
    cir.br ^bb13 loc(#loc103)
  ^bb12:  // pred: ^bb10
    %18 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc84)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    cir.br ^bb13 loc(#loc95)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc95)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc93)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc86)
  } loc(#loc153)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc114)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc163)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc116)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc118)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc133)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc119)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc120)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc120)
    %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc118)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc121)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    cir.call %11(%12) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc121)
    cir.return loc(#loc110)
  } loc(#loc161)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":34:23)
#loc6 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":22:1)
#loc7 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":37:1)
#loc10 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":25:9)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":25:30)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":23:1)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":24:5)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":36:5)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":28:9)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":35:9)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":28:13)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":28:21)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":29:9)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":31:9)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":33:9)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":30:33)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":30:26)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":30:13)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":34:13)
#loc26 = loc("/usr/include/stdio.h":463:1)
#loc27 = loc("/usr/include/stdio.h":465:33)
#loc28 = loc("/usr/include/stdio.h":149:1)
#loc29 = loc("/usr/include/stdio.h":149:14)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":47:19)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":39:1)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":50:1)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":41:5)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":41:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":43:5)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":43:29)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":45:13)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":45:12)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":45:5)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":47:5)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":47:12)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":49:5)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":49:13)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":114:1)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":118:1)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":116:5)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":116:13)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":117:5)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":117:13)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":57:1)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":72:1)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":60:9)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":60:30)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":58:1)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":59:5)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":71:5)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":63:9)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":70:9)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":63:13)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":63:21)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":64:9)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":66:9)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":68:9)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":65:33)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":65:26)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":65:13)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":69:23)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":69:13)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":74:1)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":84:1)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":76:5)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":76:9)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":77:5)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":77:29)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":79:13)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":79:12)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":79:5)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":82:12)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":82:5)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":83:5)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":83:13)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":98:23)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":87:1)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":101:1)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":90:9)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":90:30)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":88:1)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":89:5)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":100:5)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":92:9)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":99:9)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":92:13)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":92:21)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":92:26)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":92:34)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":92:36)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":93:9)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":95:9)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":97:9)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":94:33)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":94:26)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":94:13)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":98:13)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":103:1)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":112:1)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":105:5)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":105:9)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":106:5)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":106:29)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":108:13)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":108:12)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":108:5)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":110:5)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":110:12)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":110:19)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":111:5)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fscanf_44.c":111:13)
#loc123 = loc(fused[#loc1, #loc2])
#loc124 = loc(fused[#loc3, #loc4])
#loc125 = loc(fused[#loc6, #loc7])
#loc127 = loc(fused[#loc10, #loc11])
#loc128 = loc(fused[#loc13, #loc14])
#loc129 = loc(fused[#loc15, #loc16])
#loc130 = loc(fused[#loc17, #loc18])
#loc131 = loc(fused[#loc19, #loc20, #loc21, #loc16])
#loc132 = loc(fused[#loc26, #loc27])
#loc133 = loc(fused[#loc28, #loc29])
#loc134 = loc(fused[#loc31, #loc32])
#loc135 = loc(fused[#loc33, #loc34])
#loc136 = loc(fused[#loc35, #loc36])
#loc137 = loc(fused[#loc39, #loc37])
#loc138 = loc(fused[#loc44, #loc45])
#loc139 = loc(fused[#loc46, #loc47])
#loc140 = loc(fused[#loc48, #loc49])
#loc141 = loc(fused[#loc50, #loc51])
#loc143 = loc(fused[#loc54, #loc55])
#loc144 = loc(fused[#loc57, #loc58])
#loc145 = loc(fused[#loc59, #loc60])
#loc146 = loc(fused[#loc61, #loc62])
#loc147 = loc(fused[#loc63, #loc64, #loc65, #loc60])
#loc148 = loc(fused[#loc71, #loc72])
#loc149 = loc(fused[#loc73, #loc74])
#loc150 = loc(fused[#loc75, #loc76])
#loc151 = loc(fused[#loc79, #loc77])
#loc152 = loc(fused[#loc81, #loc80])
#loc153 = loc(fused[#loc85, #loc86])
#loc155 = loc(fused[#loc89, #loc90])
#loc156 = loc(fused[#loc92, #loc93])
#loc157 = loc(fused[#loc94, #loc95])
#loc158 = loc(fused[#loc96, #loc97])
#loc159 = loc(fused[#loc99, #loc101])
#loc160 = loc(fused[#loc102, #loc103, #loc104, #loc95])
#loc161 = loc(fused[#loc109, #loc110])
#loc162 = loc(fused[#loc111, #loc112])
#loc163 = loc(fused[#loc113, #loc114])
#loc164 = loc(fused[#loc117, #loc115])
