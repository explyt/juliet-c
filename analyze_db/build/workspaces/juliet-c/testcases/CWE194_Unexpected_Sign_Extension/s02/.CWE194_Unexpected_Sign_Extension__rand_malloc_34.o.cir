!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc23 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":34:19)
!ty_CWE194_Unexpected_Sign_Extension__rand_malloc_34_unionType = !cir.record<union "CWE194_Unexpected_Sign_Extension__rand_malloc_34_unionType" {!s16i, !s16i}>
module @"/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc114)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc115)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc116)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc117)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc118)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_malloc_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc120)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc121)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc122)
    %3 = cir.alloca !ty_CWE194_Unexpected_Sign_Extension__rand_malloc_34_unionType, !cir.ptr<!ty_CWE194_Unexpected_Sign_Extension__rand_malloc_34_unionType>, ["myUnion"] {alignment = 2 : i64} loc(#loc123)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %5 = cir.cast(integral, %4 : !s32i), !s16i loc(#loc21)
    cir.store %5, %2 : !s16i, !cir.ptr<!s16i> loc(#loc124)
    %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %8 = cir.binop(and, %6, %7) : !s32i loc(#loc23)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %9 ^bb1, ^bb2 loc(#loc23)
  ^bb1:  // pred: ^bb0
    %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc23)
    %12 = cir.const #cir.int<30> : !s32i loc(#loc23)
    %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc23)
    %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc23)
    %16 = cir.const #cir.int<15> : !s32i loc(#loc23)
    %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc23)
    %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc23)
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc23)
    %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc23)
    cir.br ^bb3(%21 : !u32i) loc(#loc23)
  ^bb2:  // pred: ^bb0
    %22 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc23)
    %24 = cir.const #cir.int<30> : !s32i loc(#loc23)
    %25 = cir.shift(left, %23 : !u32i, %24 : !s32i) -> !u32i loc(#loc23)
    %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc23)
    %28 = cir.const #cir.int<15> : !s32i loc(#loc23)
    %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc23)
    %30 = cir.binop(xor, %25, %29) : !u32i loc(#loc23)
    %31 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc23)
    %33 = cir.binop(xor, %30, %32) : !u32i loc(#loc23)
    %34 = cir.unary(minus, %33) : !u32i, !u32i loc(#loc23)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc23)
    %37 = cir.binop(sub, %34, %36) : !u32i loc(#loc23)
    cir.br ^bb3(%37 : !u32i) loc(#loc23)
  ^bb3(%38: !u32i loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":34:19)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc23)
  ^bb4:  // pred: ^bb3
    %39 = cir.cast(integral, %38 : !u32i), !s32i loc(#loc23)
    %40 = cir.cast(integral, %39 : !s32i), !s16i loc(#loc23)
    cir.store %40, %2 : !s16i, !cir.ptr<!s16i> loc(#loc125)
    %41 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc25)
    %42 = cir.get_member %3[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE194_Unexpected_Sign_Extension__rand_malloc_34_unionType> -> !cir.ptr<!s16i> loc(#loc26)
    cir.store %41, %42 : !s16i, !cir.ptr<!s16i> loc(#loc126)
    cir.br ^bb5 loc(#loc127)
  ^bb5:  // pred: ^bb4
    %43 = cir.get_member %3[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE194_Unexpected_Sign_Extension__rand_malloc_34_unionType> -> !cir.ptr<!s16i> loc(#loc30)
    %44 = cir.load %43 : !cir.ptr<!s16i>, !s16i loc(#loc14)
    cir.store %44, %0 : !s16i, !cir.ptr<!s16i> loc(#loc120)
    cir.br ^bb6 loc(#loc128)
  ^bb6:  // pred: ^bb5
    %45 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc33)
    %46 = cir.cast(integral, %45 : !s16i), !s32i loc(#loc33)
    %47 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %48 = cir.cmp(lt, %46, %47) : !s32i, !cir.bool loc(#loc129)
    cir.brcond %48 ^bb7, ^bb12 loc(#loc130)
  ^bb7:  // pred: ^bb6
    %49 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc36)
    %50 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc37)
    %51 = cir.cast(integral, %50 : !s16i), !u64i loc(#loc37)
    %52 = cir.call @malloc(%51) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc36)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc131)
    cir.store %53, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    cir.br ^bb8 loc(#loc132)
  ^bb8:  // pred: ^bb7
    %54 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
    %56 = cir.cast(bitcast, %55 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
    %57 = cir.cmp(eq, %54, %56) : !cir.ptr<!s8i>, !cir.bool loc(#loc133)
    cir.brcond %57 ^bb9, ^bb10 loc(#loc134)
  ^bb9:  // pred: ^bb8
    %58 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc43)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc45)
    cir.call @exit(%60) : (!s32i) -> () extra(#fn_attr) loc(#loc43)
    cir.br ^bb10 loc(#loc39)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc39)
  ^bb11:  // pred: ^bb10
    %61 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc46)
    %63 = cir.const #cir.int<65> : !s32i loc(#loc47)
    %64 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc48)
    %65 = cir.cast(integral, %64 : !s16i), !s32i loc(#loc48)
    %66 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %67 = cir.binop(sub, %65, %66) nsw : !s32i loc(#loc48)
    %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc48)
    cir.libc.memset %68 bytes from %62 set to %63 : !cir.ptr<!void>, !s32i, !u64i loc(#loc135)
    %69 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %70 = cir.cast(integral, %69 : !s32i), !s8i loc(#loc52)
    %71 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %72 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc54)
    %73 = cir.cast(integral, %72 : !s16i), !s32i loc(#loc54)
    %74 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %75 = cir.binop(sub, %73, %74) nsw : !s32i loc(#loc54)
    %76 = cir.ptr_stride(%71 : !cir.ptr<!s8i>, %75 : !s32i), !cir.ptr<!s8i> loc(#loc56)
    cir.store %70, %76 : !s8i, !cir.ptr<!s8i> loc(#loc136)
    %77 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%77) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %78 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %79 = cir.cast(bitcast, %78 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc59)
    cir.call @free(%79) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc60)
    cir.br ^bb12 loc(#loc32)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc32)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc29)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc12)
  } loc(#loc119)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_malloc_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc138)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc63)
    cir.return loc(#loc62)
  } loc(#loc137)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc140)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc141)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc142)
    %3 = cir.alloca !ty_CWE194_Unexpected_Sign_Extension__rand_malloc_34_unionType, !cir.ptr<!ty_CWE194_Unexpected_Sign_Extension__rand_malloc_34_unionType>, ["myUnion"] {alignment = 2 : i64} loc(#loc143)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %5 = cir.cast(integral, %4 : !s32i), !s16i loc(#loc75)
    cir.store %5, %2 : !s16i, !cir.ptr<!s16i> loc(#loc144)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc77)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc78)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc77)
    %9 = cir.cast(integral, %8 : !s32i), !s16i loc(#loc77)
    cir.store %9, %2 : !s16i, !cir.ptr<!s16i> loc(#loc145)
    %10 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc80)
    %11 = cir.get_member %3[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE194_Unexpected_Sign_Extension__rand_malloc_34_unionType> -> !cir.ptr<!s16i> loc(#loc26)
    cir.store %10, %11 : !s16i, !cir.ptr<!s16i> loc(#loc146)
    cir.br ^bb1 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %12 = cir.get_member %3[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE194_Unexpected_Sign_Extension__rand_malloc_34_unionType> -> !cir.ptr<!s16i> loc(#loc30)
    %13 = cir.load %12 : !cir.ptr<!s16i>, !s16i loc(#loc68)
    cir.store %13, %0 : !s16i, !cir.ptr<!s16i> loc(#loc140)
    cir.br ^bb2 loc(#loc148)
  ^bb2:  // pred: ^bb1
    %14 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc86)
    %15 = cir.cast(integral, %14 : !s16i), !s32i loc(#loc86)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc149)
    cir.brcond %17 ^bb3, ^bb8 loc(#loc150)
  ^bb3:  // pred: ^bb2
    %18 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc89)
    %19 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc90)
    %20 = cir.cast(integral, %19 : !s16i), !u64i loc(#loc90)
    %21 = cir.call @malloc(%20) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc89)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc151)
    cir.store %22, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    cir.br ^bb4 loc(#loc152)
  ^bb4:  // pred: ^bb3
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc94)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc94)
    %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc153)
    cir.brcond %26 ^bb5, ^bb6 loc(#loc154)
  ^bb5:  // pred: ^bb4
    %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc96)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc98)
    cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc96)
    cir.br ^bb6 loc(#loc92)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc92)
  ^bb7:  // pred: ^bb6
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc99)
    %32 = cir.const #cir.int<65> : !s32i loc(#loc100)
    %33 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc101)
    %34 = cir.cast(integral, %33 : !s16i), !s32i loc(#loc101)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc101)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc101)
    cir.libc.memset %37 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc155)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc105)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %41 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc107)
    %42 = cir.cast(integral, %41 : !s16i), !s32i loc(#loc107)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc107)
    %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc109)
    cir.store %39, %45 : !s8i, !cir.ptr<!s8i> loc(#loc156)
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc113)
    cir.br ^bb8 loc(#loc85)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc85)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc83)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc66)
  } loc(#loc139)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":27:1)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":52:1)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":37:9)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":37:30)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":43:13)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":43:52)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":29:5)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":29:11)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":30:5)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":30:64)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":32:12)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":32:5)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":34:5)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":35:26)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":21:11)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":35:5)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":36:5)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":51:5)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":22:11)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":39:9)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":50:9)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":39:13)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":39:20)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":40:9)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":43:41)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":43:48)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":44:13)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":44:47)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":44:17)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":44:31)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":44:37)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":44:38)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":44:44)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":44:43)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":46:20)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":46:32)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":46:37)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":46:42)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":46:13)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":46:43)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":47:34)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":47:13)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":47:24)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":47:29)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":47:30)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":48:23)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":48:13)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":49:18)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":49:13)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":86:1)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":89:1)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":88:5)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":88:13)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":59:1)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":84:1)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":69:9)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":69:30)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":75:13)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":75:52)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":61:5)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":61:11)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":62:5)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":62:64)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":64:12)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":64:5)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":66:12)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":66:16)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":66:5)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":67:26)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":67:5)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":68:5)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":83:5)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":71:9)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":82:9)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":71:13)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":71:20)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":72:9)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":75:41)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":75:48)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":76:13)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":76:47)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":76:17)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":76:31)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":76:37)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":76:38)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":76:44)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":76:43)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":78:20)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":78:32)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":78:37)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":78:42)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":78:13)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":78:43)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":79:34)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":79:13)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":79:24)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":79:29)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":79:30)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":80:23)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":80:13)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":81:18)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_34.c":81:13)
#loc114 = loc(fused[#loc1, #loc2])
#loc115 = loc(fused[#loc3, #loc4])
#loc116 = loc(fused[#loc5, #loc6])
#loc117 = loc(fused[#loc7, #loc8])
#loc118 = loc(fused[#loc9, #loc10])
#loc119 = loc(fused[#loc11, #loc12])
#loc120 = loc(fused[#loc13, #loc14])
#loc121 = loc(fused[#loc15, #loc16])
#loc122 = loc(fused[#loc17, #loc18])
#loc123 = loc(fused[#loc19, #loc20])
#loc124 = loc(fused[#loc22, #loc21])
#loc125 = loc(fused[#loc24, #loc23])
#loc126 = loc(fused[#loc27, #loc25])
#loc127 = loc(fused[#loc28, #loc29])
#loc128 = loc(fused[#loc31, #loc32])
#loc129 = loc(fused[#loc33, #loc34])
#loc130 = loc(fused[#loc35, #loc32])
#loc131 = loc(fused[#loc36, #loc16])
#loc132 = loc(fused[#loc38, #loc39])
#loc133 = loc(fused[#loc40, #loc41])
#loc134 = loc(fused[#loc42, #loc39])
#loc135 = loc(fused[#loc50, #loc51])
#loc136 = loc(fused[#loc53, #loc52])
#loc137 = loc(fused[#loc61, #loc62])
#loc138 = loc(fused[#loc63, #loc64])
#loc139 = loc(fused[#loc65, #loc66])
#loc140 = loc(fused[#loc67, #loc68])
#loc141 = loc(fused[#loc69, #loc70])
#loc142 = loc(fused[#loc71, #loc72])
#loc143 = loc(fused[#loc73, #loc74])
#loc144 = loc(fused[#loc76, #loc75])
#loc145 = loc(fused[#loc79, #loc78])
#loc146 = loc(fused[#loc81, #loc80])
#loc147 = loc(fused[#loc82, #loc83])
#loc148 = loc(fused[#loc84, #loc85])
#loc149 = loc(fused[#loc86, #loc87])
#loc150 = loc(fused[#loc88, #loc85])
#loc151 = loc(fused[#loc89, #loc70])
#loc152 = loc(fused[#loc91, #loc92])
#loc153 = loc(fused[#loc93, #loc94])
#loc154 = loc(fused[#loc95, #loc92])
#loc155 = loc(fused[#loc103, #loc104])
#loc156 = loc(fused[#loc106, #loc105])
