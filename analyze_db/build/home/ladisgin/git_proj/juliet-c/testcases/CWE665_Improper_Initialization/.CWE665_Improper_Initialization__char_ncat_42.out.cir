!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("CWE665_Improper_Initialization__char_ncat_42.c":23:25)
#loc4 = loc("CWE665_Improper_Initialization__char_ncat_42.c":23:32)
#loc66 = loc("CWE665_Improper_Initialization__char_ncat_42.c":93:10)
#loc67 = loc("CWE665_Improper_Initialization__char_ncat_42.c":93:14)
#loc68 = loc("CWE665_Improper_Initialization__char_ncat_42.c":93:20)
#loc69 = loc("CWE665_Improper_Initialization__char_ncat_42.c":93:32)
#loc86 = loc("CWE665_Improper_Initialization__char_ncat_42.c":52:29)
#loc87 = loc("CWE665_Improper_Initialization__char_ncat_42.c":52:36)
#loc134 = loc(fused[#loc3, #loc4])
#loc155 = loc(fused[#loc66, #loc67])
#loc156 = loc(fused[#loc68, #loc69])
#loc161 = loc(fused[#loc86, #loc87])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_ncat_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc3, #loc4])) -> !cir.ptr<!s8i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc134)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc2)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc5)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc6)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc135)
  } loc(#loc133)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc136)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.func no_proto @CWE665_Improper_Initialization__char_ncat_42_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc141)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %4 = cir.call @badSource(%3) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc23)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc145)
      %6 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc146)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
      %9 = cir.const #cir.int<67> : !s32i loc(#loc33)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc34)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc34)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc34)
      cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc147)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc38)
      %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc38)
      %16 = cir.const #cir.int<100> : !s32i loc(#loc39)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc40)
      %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc39)
      %19 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
      %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc41)
      cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc148)
      %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc42)
      %22 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
      %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc42)
      cir.store %23, %5 : !u64i, !cir.ptr<!u64i> loc(#loc149)
      %24 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc46)
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
      %26 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
      %27 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc49)
      %28 = cir.call @strncat(%25, %26, %27) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc46)
      %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
      cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    } loc(#loc144)
    cir.return loc(#loc15)
  } loc(#loc139)
  cir.func no_proto @CWE665_Improper_Initialization__char_ncat_42_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc53)
  } loc(#loc150)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc152)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc63)
  cir.func @main(%arg0: !s32i loc(fused[#loc66, #loc67]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc68, #loc69])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc155)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc156)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc65)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc70)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc70)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc71)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc72)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc72)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc73)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc60)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %8 = cir.get_global @CWE665_Improper_Initialization__char_ncat_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call @CWE665_Improper_Initialization__char_ncat_42_good() : () -> () loc(#loc75)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc61)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc62)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %13 = cir.get_global @CWE665_Improper_Initialization__char_ncat_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call @CWE665_Improper_Initialization__char_ncat_42_bad() : () -> () loc(#loc79)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc63)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc82)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.return %17 : !s32i loc(#loc159)
  } loc(#loc154)
  cir.func internal private @goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc86, #loc87])) -> !cir.ptr<!s8i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc85)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc88)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %3 = cir.cast(integral, %2 : !s32i), !s8i loc(#loc89)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %6 = cir.ptr_stride(%4 : !cir.ptr<!s8i>, %5 : !s32i), !cir.ptr<!s8i> loc(#loc92)
    cir.store %3, %6 : !s8i, !cir.ptr<!s8i> loc(#loc162)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    cir.return %8 : !cir.ptr<!s8i> loc(#loc163)
  } loc(#loc160)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc165)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc166)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc101)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %4 = cir.call @goodG2BSource(%3) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc104)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc170)
      %6 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc171)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc113)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
      %9 = cir.const #cir.int<67> : !s32i loc(#loc114)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc115)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc116)
      %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc115)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc115)
      cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc172)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc119)
      %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc119)
      %16 = cir.const #cir.int<100> : !s32i loc(#loc120)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc121)
      %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc120)
      %19 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc122)
      %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc122)
      cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc173)
      %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc123)
      %22 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
      %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc123)
      cir.store %23, %5 : !u64i, !cir.ptr<!u64i> loc(#loc174)
      %24 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc127)
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
      %26 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc129)
      %27 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc130)
      %28 = cir.call @strncat(%25, %26, %27) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc127)
      %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
      cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    } loc(#loc169)
    cir.return loc(#loc96)
  } loc(#loc164)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_ncat_42.c":0:0)
#loc1 = loc("CWE665_Improper_Initialization__char_ncat_42.c":23:1)
#loc2 = loc("CWE665_Improper_Initialization__char_ncat_42.c":28:1)
#loc5 = loc("CWE665_Improper_Initialization__char_ncat_42.c":24:1)
#loc6 = loc("CWE665_Improper_Initialization__char_ncat_42.c":27:12)
#loc7 = loc("CWE665_Improper_Initialization__char_ncat_42.c":27:5)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/string.h":152:1)
#loc11 = loc("/usr/include/string.h":153:29)
#loc12 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc14 = loc("CWE665_Improper_Initialization__char_ncat_42.c":30:1)
#loc15 = loc("CWE665_Improper_Initialization__char_ncat_42.c":46:1)
#loc16 = loc("CWE665_Improper_Initialization__char_ncat_42.c":32:5)
#loc17 = loc("CWE665_Improper_Initialization__char_ncat_42.c":32:12)
#loc18 = loc("CWE665_Improper_Initialization__char_ncat_42.c":33:5)
#loc19 = loc("CWE665_Improper_Initialization__char_ncat_42.c":33:24)
#loc20 = loc("CWE665_Improper_Initialization__char_ncat_42.c":34:12)
#loc21 = loc("CWE665_Improper_Initialization__char_ncat_42.c":34:5)
#loc22 = loc("CWE665_Improper_Initialization__char_ncat_42.c":35:22)
#loc23 = loc("CWE665_Improper_Initialization__char_ncat_42.c":35:12)
#loc24 = loc("CWE665_Improper_Initialization__char_ncat_42.c":35:5)
#loc25 = loc("CWE665_Improper_Initialization__char_ncat_42.c":35:26)
#loc26 = loc("CWE665_Improper_Initialization__char_ncat_42.c":36:5)
#loc27 = loc("CWE665_Improper_Initialization__char_ncat_42.c":45:5)
#loc28 = loc("CWE665_Improper_Initialization__char_ncat_42.c":37:9)
#loc29 = loc("CWE665_Improper_Initialization__char_ncat_42.c":37:16)
#loc30 = loc("CWE665_Improper_Initialization__char_ncat_42.c":38:9)
#loc31 = loc("CWE665_Improper_Initialization__char_ncat_42.c":38:24)
#loc32 = loc("CWE665_Improper_Initialization__char_ncat_42.c":39:16)
#loc33 = loc("CWE665_Improper_Initialization__char_ncat_42.c":39:24)
#loc34 = loc("CWE665_Improper_Initialization__char_ncat_42.c":39:29)
#loc35 = loc("CWE665_Improper_Initialization__char_ncat_42.c":39:33)
#loc36 = loc("CWE665_Improper_Initialization__char_ncat_42.c":39:9)
#loc37 = loc("CWE665_Improper_Initialization__char_ncat_42.c":39:34)
#loc38 = loc("CWE665_Improper_Initialization__char_ncat_42.c":40:25)
#loc39 = loc("CWE665_Improper_Initialization__char_ncat_42.c":40:16)
#loc40 = loc("CWE665_Improper_Initialization__char_ncat_42.c":40:20)
#loc41 = loc("CWE665_Improper_Initialization__char_ncat_42.c":40:9)
#loc42 = loc("CWE665_Improper_Initialization__char_ncat_42.c":41:21)
#loc43 = loc("CWE665_Improper_Initialization__char_ncat_42.c":41:28)
#loc44 = loc("CWE665_Improper_Initialization__char_ncat_42.c":41:9)
#loc45 = loc("CWE665_Improper_Initialization__char_ncat_42.c":41:34)
#loc46 = loc("CWE665_Improper_Initialization__char_ncat_42.c":43:9)
#loc47 = loc("CWE665_Improper_Initialization__char_ncat_42.c":43:17)
#loc48 = loc("CWE665_Improper_Initialization__char_ncat_42.c":43:23)
#loc49 = loc("CWE665_Improper_Initialization__char_ncat_42.c":43:31)
#loc50 = loc("CWE665_Improper_Initialization__char_ncat_42.c":44:19)
#loc51 = loc("CWE665_Improper_Initialization__char_ncat_42.c":44:9)
#loc52 = loc("CWE665_Improper_Initialization__char_ncat_42.c":78:1)
#loc53 = loc("CWE665_Improper_Initialization__char_ncat_42.c":81:1)
#loc54 = loc("CWE665_Improper_Initialization__char_ncat_42.c":80:5)
#loc55 = loc("CWE665_Improper_Initialization__char_ncat_42.c":80:13)
#loc56 = loc("/usr/include/stdlib.h":575:1)
#loc57 = loc("/usr/include/stdlib.h":575:41)
#loc58 = loc("/usr/include/time.h":76:1)
#loc59 = loc("/usr/include/time.h":76:38)
#loc60 = loc("CWE665_Improper_Initialization__char_ncat_42.c":98:15)
#loc61 = loc("CWE665_Improper_Initialization__char_ncat_42.c":100:15)
#loc62 = loc("CWE665_Improper_Initialization__char_ncat_42.c":103:15)
#loc63 = loc("CWE665_Improper_Initialization__char_ncat_42.c":105:15)
#loc64 = loc("CWE665_Improper_Initialization__char_ncat_42.c":93:1)
#loc65 = loc("CWE665_Improper_Initialization__char_ncat_42.c":108:1)
#loc70 = loc("CWE665_Improper_Initialization__char_ncat_42.c":94:1)
#loc71 = loc("CWE665_Improper_Initialization__char_ncat_42.c":96:27)
#loc72 = loc("CWE665_Improper_Initialization__char_ncat_42.c":96:22)
#loc73 = loc("CWE665_Improper_Initialization__char_ncat_42.c":96:5)
#loc74 = loc("CWE665_Improper_Initialization__char_ncat_42.c":98:5)
#loc75 = loc("CWE665_Improper_Initialization__char_ncat_42.c":99:5)
#loc76 = loc("CWE665_Improper_Initialization__char_ncat_42.c":99:55)
#loc77 = loc("CWE665_Improper_Initialization__char_ncat_42.c":100:5)
#loc78 = loc("CWE665_Improper_Initialization__char_ncat_42.c":103:5)
#loc79 = loc("CWE665_Improper_Initialization__char_ncat_42.c":104:5)
#loc80 = loc("CWE665_Improper_Initialization__char_ncat_42.c":104:54)
#loc81 = loc("CWE665_Improper_Initialization__char_ncat_42.c":105:5)
#loc82 = loc("CWE665_Improper_Initialization__char_ncat_42.c":107:12)
#loc83 = loc("CWE665_Improper_Initialization__char_ncat_42.c":107:5)
#loc84 = loc("CWE665_Improper_Initialization__char_ncat_42.c":52:1)
#loc85 = loc("CWE665_Improper_Initialization__char_ncat_42.c":57:1)
#loc88 = loc("CWE665_Improper_Initialization__char_ncat_42.c":53:1)
#loc89 = loc("CWE665_Improper_Initialization__char_ncat_42.c":55:15)
#loc90 = loc("CWE665_Improper_Initialization__char_ncat_42.c":55:5)
#loc91 = loc("CWE665_Improper_Initialization__char_ncat_42.c":55:10)
#loc92 = loc("CWE665_Improper_Initialization__char_ncat_42.c":55:11)
#loc93 = loc("CWE665_Improper_Initialization__char_ncat_42.c":56:12)
#loc94 = loc("CWE665_Improper_Initialization__char_ncat_42.c":56:5)
#loc95 = loc("CWE665_Improper_Initialization__char_ncat_42.c":60:1)
#loc96 = loc("CWE665_Improper_Initialization__char_ncat_42.c":76:1)
#loc97 = loc("CWE665_Improper_Initialization__char_ncat_42.c":62:5)
#loc98 = loc("CWE665_Improper_Initialization__char_ncat_42.c":62:12)
#loc99 = loc("CWE665_Improper_Initialization__char_ncat_42.c":63:5)
#loc100 = loc("CWE665_Improper_Initialization__char_ncat_42.c":63:24)
#loc101 = loc("CWE665_Improper_Initialization__char_ncat_42.c":64:12)
#loc102 = loc("CWE665_Improper_Initialization__char_ncat_42.c":64:5)
#loc103 = loc("CWE665_Improper_Initialization__char_ncat_42.c":65:26)
#loc104 = loc("CWE665_Improper_Initialization__char_ncat_42.c":65:12)
#loc105 = loc("CWE665_Improper_Initialization__char_ncat_42.c":65:5)
#loc106 = loc("CWE665_Improper_Initialization__char_ncat_42.c":65:30)
#loc107 = loc("CWE665_Improper_Initialization__char_ncat_42.c":66:5)
#loc108 = loc("CWE665_Improper_Initialization__char_ncat_42.c":75:5)
#loc109 = loc("CWE665_Improper_Initialization__char_ncat_42.c":67:9)
#loc110 = loc("CWE665_Improper_Initialization__char_ncat_42.c":67:16)
#loc111 = loc("CWE665_Improper_Initialization__char_ncat_42.c":68:9)
#loc112 = loc("CWE665_Improper_Initialization__char_ncat_42.c":68:24)
#loc113 = loc("CWE665_Improper_Initialization__char_ncat_42.c":69:16)
#loc114 = loc("CWE665_Improper_Initialization__char_ncat_42.c":69:24)
#loc115 = loc("CWE665_Improper_Initialization__char_ncat_42.c":69:29)
#loc116 = loc("CWE665_Improper_Initialization__char_ncat_42.c":69:33)
#loc117 = loc("CWE665_Improper_Initialization__char_ncat_42.c":69:9)
#loc118 = loc("CWE665_Improper_Initialization__char_ncat_42.c":69:34)
#loc119 = loc("CWE665_Improper_Initialization__char_ncat_42.c":70:25)
#loc120 = loc("CWE665_Improper_Initialization__char_ncat_42.c":70:16)
#loc121 = loc("CWE665_Improper_Initialization__char_ncat_42.c":70:20)
#loc122 = loc("CWE665_Improper_Initialization__char_ncat_42.c":70:9)
#loc123 = loc("CWE665_Improper_Initialization__char_ncat_42.c":71:21)
#loc124 = loc("CWE665_Improper_Initialization__char_ncat_42.c":71:28)
#loc125 = loc("CWE665_Improper_Initialization__char_ncat_42.c":71:9)
#loc126 = loc("CWE665_Improper_Initialization__char_ncat_42.c":71:34)
#loc127 = loc("CWE665_Improper_Initialization__char_ncat_42.c":73:9)
#loc128 = loc("CWE665_Improper_Initialization__char_ncat_42.c":73:17)
#loc129 = loc("CWE665_Improper_Initialization__char_ncat_42.c":73:23)
#loc130 = loc("CWE665_Improper_Initialization__char_ncat_42.c":73:31)
#loc131 = loc("CWE665_Improper_Initialization__char_ncat_42.c":74:19)
#loc132 = loc("CWE665_Improper_Initialization__char_ncat_42.c":74:9)
#loc133 = loc(fused[#loc1, #loc2])
#loc135 = loc(fused[#loc7, #loc6])
#loc136 = loc(fused[#loc8, #loc9])
#loc137 = loc(fused[#loc10, #loc11])
#loc138 = loc(fused[#loc12, #loc13])
#loc139 = loc(fused[#loc14, #loc15])
#loc140 = loc(fused[#loc16, #loc17])
#loc141 = loc(fused[#loc18, #loc19])
#loc142 = loc(fused[#loc21, #loc20])
#loc143 = loc(fused[#loc24, #loc25])
#loc144 = loc(fused[#loc26, #loc27])
#loc145 = loc(fused[#loc28, #loc29])
#loc146 = loc(fused[#loc30, #loc31])
#loc147 = loc(fused[#loc36, #loc37])
#loc148 = loc(fused[#loc41, #loc38])
#loc149 = loc(fused[#loc44, #loc45])
#loc150 = loc(fused[#loc52, #loc53])
#loc151 = loc(fused[#loc54, #loc55])
#loc152 = loc(fused[#loc56, #loc57])
#loc153 = loc(fused[#loc58, #loc59])
#loc154 = loc(fused[#loc64, #loc65])
#loc157 = loc(fused[#loc75, #loc76])
#loc158 = loc(fused[#loc79, #loc80])
#loc159 = loc(fused[#loc83, #loc82])
#loc160 = loc(fused[#loc84, #loc85])
#loc162 = loc(fused[#loc90, #loc89])
#loc163 = loc(fused[#loc94, #loc93])
#loc164 = loc(fused[#loc95, #loc96])
#loc165 = loc(fused[#loc97, #loc98])
#loc166 = loc(fused[#loc99, #loc100])
#loc167 = loc(fused[#loc102, #loc101])
#loc168 = loc(fused[#loc105, #loc106])
#loc169 = loc(fused[#loc107, #loc108])
#loc170 = loc(fused[#loc109, #loc110])
#loc171 = loc(fused[#loc111, #loc112])
#loc172 = loc(fused[#loc117, #loc118])
#loc173 = loc(fused[#loc122, #loc119])
#loc174 = loc(fused[#loc125, #loc126])
