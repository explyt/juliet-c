!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc210)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc211)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc212)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc213)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc214)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc14)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc15)
  cir.func @_ZN48CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc217)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc218)
    %2 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc219)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc218)
    cir.store %0, %2 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc219)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc24)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc220)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc222)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc29)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc30)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc222)
      cir.scope {
        %10 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc224)
        %11 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc224)
        cir.store %11, %10 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc224)
        cir.scope {
          %12 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc37)
          %13 = cir.const #cir.int<3> : !s32i loc(#loc38)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc38)
          %15 = cir.const #cir.int<8> : !u64i loc(#loc38)
          %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc38)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc38)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc38)
          %19 = cir.binop(add, %16, %18) : !u64i loc(#loc38)
          %20 = cir.cast(integral, %19 : !u64i), !s32i loc(#loc38)
          %21 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc211)
          %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
          %23 = cir.call @fgets(%12, %20, %22) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc40)
          %24 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc41)
          %25 = cir.cmp(ne, %23, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc226)
          cir.if %25 {
            %26 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc45)
            %27 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc46)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc47)
            %29 = cir.const #cir.int<0> : !s32i loc(#loc48)
            %30 = cir.call @__isoc23_strtoul(%27, %28, %29) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc45)
            cir.store %30, %5 : !u64i, !cir.ptr<!u64i> loc(#loc228)
          } else {
            %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
            %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
            cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc51)
          } loc(#loc227)
        } loc(#loc225)
      } loc(#loc223)
      %8 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc52)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc53)
      cir.store %8, %9 : !u64i, !cir.ptr<!u64i> loc(#loc229)
    } loc(#loc221)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc231)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc58)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc59)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc231)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc233)
        cir.scope {
          %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc66)
          %10 = cir.const #cir.int<5> : !u64i loc(#loc235)
          %11 = cir.cmp(gt, %9, %10) : !u64i, !cir.bool loc(#loc236)
          cir.if %11 {
            %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc72)
            %13 = cir.call @_Znam(%12) : (!u64i) -> !cir.ptr<!void> loc(#loc73)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc238)
            cir.store %14, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc239)
            %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc77)
            %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
            %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc14)
            %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc14)
            %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc77)
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
            cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc80)
            %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
            cir.delete.array %21 : <!s8i> loc(#loc81)
          } else {
            %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc15)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc15)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc82)
          } loc(#loc237)
        } loc(#loc234)
      } loc(#loc232)
    } loc(#loc230)
    cir.return loc(#loc17)
  } loc(#loc216)
  cir.func internal private @_ZN48CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc241)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc242)
    %2 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc243)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc242)
    cir.store %0, %2 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc243)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc91)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc244)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc246)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc96)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc97)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc246)
      %8 = cir.const #cir.int<20> : !s32i loc(#loc98)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc98)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc247)
      %10 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc100)
      %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc101)
      cir.store %10, %11 : !u64i, !cir.ptr<!u64i> loc(#loc248)
    } loc(#loc245)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc250)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc106)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc107)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc250)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc252)
        cir.scope {
          %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc114)
          %10 = cir.const #cir.int<5> : !u64i loc(#loc254)
          %11 = cir.cmp(gt, %9, %10) : !u64i, !cir.bool loc(#loc255)
          cir.if %11 {
            %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc120)
            %13 = cir.call @_Znam(%12) : (!u64i) -> !cir.ptr<!void> loc(#loc121)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc257)
            cir.store %14, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc258)
            %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc125)
            %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
            %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc127)
            %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc127)
            %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc125)
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
            cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc129)
            %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
            cir.delete.array %21 : <!s8i> loc(#loc130)
          } else {
            %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc131)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc131)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc132)
          } loc(#loc256)
        } loc(#loc253)
      } loc(#loc251)
    } loc(#loc249)
    cir.return loc(#loc84)
  } loc(#loc240)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc133)
  cir.func internal private @_ZN48CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc260)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc261)
    %2 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc262)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc261)
    cir.store %0, %2 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc262)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc142)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc142)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc263)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc265)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc147)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc148)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc265)
      cir.scope {
        %10 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc267)
        %11 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc267)
        cir.store %11, %10 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc267)
        cir.scope {
          %12 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc155)
          %13 = cir.const #cir.int<3> : !s32i loc(#loc156)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc156)
          %15 = cir.const #cir.int<8> : !u64i loc(#loc156)
          %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc156)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc156)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc156)
          %19 = cir.binop(add, %16, %18) : !u64i loc(#loc156)
          %20 = cir.cast(integral, %19 : !u64i), !s32i loc(#loc156)
          %21 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc211)
          %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc157)
          %23 = cir.call @fgets(%12, %20, %22) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc158)
          %24 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc159)
          %25 = cir.cmp(ne, %23, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc269)
          cir.if %25 {
            %26 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc163)
            %27 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc164)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
            %29 = cir.const #cir.int<0> : !s32i loc(#loc166)
            %30 = cir.call @__isoc23_strtoul(%27, %28, %29) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc163)
            cir.store %30, %5 : !u64i, !cir.ptr<!u64i> loc(#loc271)
          } else {
            %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc169)
            %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc169)
            cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc170)
          } loc(#loc270)
        } loc(#loc268)
      } loc(#loc266)
      %8 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc171)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc172)
      cir.store %8, %9 : !u64i, !cir.ptr<!u64i> loc(#loc272)
    } loc(#loc264)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc274)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc177)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc178)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc274)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc276)
        cir.scope {
          %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc185)
          %10 = cir.const #cir.int<5> : !u64i loc(#loc278)
          %11 = cir.cmp(gt, %9, %10) : !u64i, !cir.bool loc(#loc279)
          %12 = cir.ternary(%11, true {
            %13 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc189)
            %14 = cir.const #cir.int<100> : !s32i loc(#loc190)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc190)
            %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc280)
            %17 = cir.ternary(%16, true {
              %18 = cir.const #true loc(#loc188)
              cir.yield %18 : !cir.bool loc(#loc188)
            }, false {
              %18 = cir.const #false loc(#loc188)
              cir.yield %18 : !cir.bool loc(#loc188)
            }) : (!cir.bool) -> !cir.bool loc(#loc188)
            cir.yield %17 : !cir.bool loc(#loc188)
          }, false {
            %13 = cir.const #false loc(#loc188)
            cir.yield %13 : !cir.bool loc(#loc188)
          }) : (!cir.bool) -> !cir.bool loc(#loc188)
          cir.if %12 {
            %13 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc194)
            %14 = cir.call @_Znam(%13) : (!u64i) -> !cir.ptr<!void> loc(#loc195)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc282)
            cir.store %15, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc283)
            %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc199)
            %17 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc200)
            %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc201)
            %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc201)
            %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc199)
            %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
            cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc203)
            %22 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
            cir.delete.array %22 : <!s8i> loc(#loc204)
          } else {
            %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc133)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc133)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc205)
          } loc(#loc281)
        } loc(#loc277)
      } loc(#loc275)
    } loc(#loc273)
    cir.return loc(#loc135)
  } loc(#loc259)
  cir.func @_ZN48CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN48CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32L7goodG2BEv() : () -> () loc(#loc208)
    cir.call @_ZN48CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32L7goodB2GEv() : () -> () loc(#loc209)
    cir.return loc(#loc207)
  } loc(#loc284)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":219:1)
#loc6 = loc("/usr/include/stdlib.h":223:6)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":52:27)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc12 = loc("/usr/include/string.h":141:1)
#loc13 = loc("/usr/include/string.h":142:14)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":68:34)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":74:27)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":33:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":78:1)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":35:5)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":35:12)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":36:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":36:25)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":37:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":37:25)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":39:12)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":39:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":40:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":56:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":41:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":41:24)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":41:23)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":42:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":54:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":43:13)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":43:49)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":45:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":53:13)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":45:23)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":45:36)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":45:53)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":45:17)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":45:63)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":46:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":49:13)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":51:13)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":48:24)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":48:32)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":48:45)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":48:51)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":48:17)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":48:52)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":52:17)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":55:21)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":55:10)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":55:9)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":57:5)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":77:5)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":58:9)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":58:24)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":58:23)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":59:9)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":76:9)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":60:13)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":60:20)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":64:13)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":75:13)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":64:17)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":64:24)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":64:43)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":65:13)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":71:13)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":73:13)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":66:37)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":33:6)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":66:28)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":66:41)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":66:17)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":68:17)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":68:24)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":69:27)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":69:17)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":70:27)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":74:17)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":85:1)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":119:1)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":87:5)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":87:12)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":88:5)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":88:25)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":89:5)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":89:25)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":91:12)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":91:5)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":92:5)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":97:5)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":93:9)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":93:24)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":93:23)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":95:16)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":95:9)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":96:21)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":96:10)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":96:9)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":98:5)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":118:5)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":99:9)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":99:24)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":99:23)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":100:9)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":117:9)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":101:13)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":101:20)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":105:13)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":116:13)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":105:17)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":105:24)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":105:43)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":106:13)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":112:13)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":114:13)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":107:37)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":85:13)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":107:28)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":107:41)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":107:17)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":109:17)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":109:24)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":109:34)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":110:27)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":110:17)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":111:27)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":115:27)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":115:17)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":163:27)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":122:1)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":167:1)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":124:5)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":124:12)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":125:5)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":125:25)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":126:5)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":126:25)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":128:12)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":128:5)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":129:5)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":145:5)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":130:9)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":130:24)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":130:23)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":131:9)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":143:9)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":132:13)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":132:49)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":134:13)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":142:13)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":134:23)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":134:36)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":134:53)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":134:17)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":134:63)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":135:13)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":138:13)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":140:13)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":137:24)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":137:32)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":137:45)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":137:51)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":137:17)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":137:52)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":141:27)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":141:17)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":144:21)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":144:10)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":144:9)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":146:5)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":166:5)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":147:9)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":147:24)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":147:23)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":148:9)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":165:9)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":149:13)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":149:20)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":153:13)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":164:13)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":153:17)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":153:24)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":153:43)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":153:45)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":153:48)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":153:55)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":154:13)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":160:13)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":162:13)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":155:37)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":122:13)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":155:28)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":155:41)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":155:17)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":157:17)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":157:24)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":157:34)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":158:27)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":158:17)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":159:27)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":163:17)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":169:1)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":173:1)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":171:5)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fgets_32.cpp":172:5)
#loc210 = loc(fused[#loc1, #loc2])
#loc211 = loc(fused[#loc3, #loc4])
#loc212 = loc(fused[#loc5, #loc6])
#loc213 = loc(fused[#loc7, #loc8])
#loc214 = loc(fused[#loc10, #loc11])
#loc215 = loc(fused[#loc12, #loc13])
#loc216 = loc(fused[#loc16, #loc17])
#loc217 = loc(fused[#loc18, #loc19])
#loc218 = loc(fused[#loc20, #loc21])
#loc219 = loc(fused[#loc22, #loc23])
#loc220 = loc(fused[#loc25, #loc24])
#loc221 = loc(fused[#loc26, #loc27])
#loc222 = loc(fused[#loc28, #loc29])
#loc223 = loc(fused[#loc31, #loc32])
#loc224 = loc(fused[#loc33, #loc34])
#loc225 = loc(fused[#loc35, #loc36])
#loc226 = loc(fused[#loc40, #loc41])
#loc227 = loc(fused[#loc42, #loc43, #loc44, #loc36])
#loc228 = loc(fused[#loc49, #loc50])
#loc229 = loc(fused[#loc54, #loc52])
#loc230 = loc(fused[#loc55, #loc56])
#loc231 = loc(fused[#loc57, #loc58])
#loc232 = loc(fused[#loc60, #loc61])
#loc233 = loc(fused[#loc62, #loc63])
#loc234 = loc(fused[#loc64, #loc65])
#loc235 = loc(fused[#loc67, #loc68])
#loc236 = loc(fused[#loc66, #loc68])
#loc237 = loc(fused[#loc69, #loc70, #loc71, #loc65])
#loc238 = loc(fused[#loc74, #loc75])
#loc239 = loc(fused[#loc76, #loc75])
#loc240 = loc(fused[#loc83, #loc84])
#loc241 = loc(fused[#loc85, #loc86])
#loc242 = loc(fused[#loc87, #loc88])
#loc243 = loc(fused[#loc89, #loc90])
#loc244 = loc(fused[#loc92, #loc91])
#loc245 = loc(fused[#loc93, #loc94])
#loc246 = loc(fused[#loc95, #loc96])
#loc247 = loc(fused[#loc99, #loc98])
#loc248 = loc(fused[#loc102, #loc100])
#loc249 = loc(fused[#loc103, #loc104])
#loc250 = loc(fused[#loc105, #loc106])
#loc251 = loc(fused[#loc108, #loc109])
#loc252 = loc(fused[#loc110, #loc111])
#loc253 = loc(fused[#loc112, #loc113])
#loc254 = loc(fused[#loc115, #loc116])
#loc255 = loc(fused[#loc114, #loc116])
#loc256 = loc(fused[#loc117, #loc118, #loc119, #loc113])
#loc257 = loc(fused[#loc122, #loc123])
#loc258 = loc(fused[#loc124, #loc123])
#loc259 = loc(fused[#loc134, #loc135])
#loc260 = loc(fused[#loc136, #loc137])
#loc261 = loc(fused[#loc138, #loc139])
#loc262 = loc(fused[#loc140, #loc141])
#loc263 = loc(fused[#loc143, #loc142])
#loc264 = loc(fused[#loc144, #loc145])
#loc265 = loc(fused[#loc146, #loc147])
#loc266 = loc(fused[#loc149, #loc150])
#loc267 = loc(fused[#loc151, #loc152])
#loc268 = loc(fused[#loc153, #loc154])
#loc269 = loc(fused[#loc158, #loc159])
#loc270 = loc(fused[#loc160, #loc161, #loc162, #loc154])
#loc271 = loc(fused[#loc167, #loc168])
#loc272 = loc(fused[#loc173, #loc171])
#loc273 = loc(fused[#loc174, #loc175])
#loc274 = loc(fused[#loc176, #loc177])
#loc275 = loc(fused[#loc179, #loc180])
#loc276 = loc(fused[#loc181, #loc182])
#loc277 = loc(fused[#loc183, #loc184])
#loc278 = loc(fused[#loc186, #loc187])
#loc279 = loc(fused[#loc185, #loc187])
#loc280 = loc(fused[#loc189, #loc190])
#loc281 = loc(fused[#loc191, #loc192, #loc193, #loc184])
#loc282 = loc(fused[#loc196, #loc197])
#loc283 = loc(fused[#loc198, #loc197])
#loc284 = loc(fused[#loc206, #loc207])
