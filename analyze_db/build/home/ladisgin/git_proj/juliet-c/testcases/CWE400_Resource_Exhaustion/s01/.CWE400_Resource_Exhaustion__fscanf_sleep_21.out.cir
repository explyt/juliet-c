!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc13 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":33:21)
#loc14 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":33:25)
#loc56 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":164:10)
#loc57 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":164:14)
#loc58 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":164:20)
#loc59 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":164:32)
#loc81 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":64:26)
#loc82 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":64:30)
#loc123 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":98:26)
#loc124 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":98:30)
#loc164 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":127:25)
#loc165 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":127:29)
#true = #cir.bool<true> : !cir.bool
#loc193 = loc(fused[#loc13, #loc14])
#loc208 = loc(fused[#loc56, #loc57])
#loc209 = loc(fused[#loc58, #loc59])
#loc215 = loc(fused[#loc81, #loc82])
#loc228 = loc(fused[#loc123, #loc124])
#loc241 = loc(fused[#loc164, #loc165])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc188)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc190)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc10)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc13, #loc14])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc193)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc15)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc190)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc18)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc18)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
        %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc20)
        %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc21)
        %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc10)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc10)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc22)
      } loc(#loc195)
    } loc(#loc194)
    cir.return loc(#loc12)
  } loc(#loc192)
  cir.func no_proto @CWE400_Resource_Exhaustion__fscanf_sleep_21_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc197)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc28)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc30)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc189)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc31)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc30)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %10 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc190)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.call @badSink(%11) : (!s32i) -> () loc(#loc35)
    cir.return loc(#loc24)
  } loc(#loc196)
  cir.func no_proto @CWE400_Resource_Exhaustion__fscanf_sleep_21_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc202)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    cir.return loc(#loc37)
  } loc(#loc200)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc204)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc205)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc53)
  cir.func @main(%arg0: !s32i loc(fused[#loc56, #loc57]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc58, #loc59])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc208)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc209)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc55)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc60)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc61)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc62)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc62)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc63)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc50)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__fscanf_sleep_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc210)
    cir.call @CWE400_Resource_Exhaustion__fscanf_sleep_21_good() : () -> () loc(#loc65)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc51)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc52)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__fscanf_sleep_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc211)
    cir.call @CWE400_Resource_Exhaustion__fscanf_sleep_21_bad() : () -> () loc(#loc69)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc53)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc72)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    cir.return %17 : !s32i loc(#loc212)
  } loc(#loc207)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc213)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc78)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc81, #loc82])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc215)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc213)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc86)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc86)
      cir.if %3 {
        %4 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc76)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc76)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc90)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc93)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc94)
          %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc219)
          %7 = cir.ternary(%6, true {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc96)
            %9 = cir.const #cir.int<2000> : !s32i loc(#loc97)
            %10 = cir.cmp(le, %8, %9) : !s32i, !cir.bool loc(#loc220)
            %11 = cir.ternary(%10, true {
              %12 = cir.const #true loc(#loc95)
              cir.yield %12 : !cir.bool loc(#loc95)
            }, false {
              %12 = cir.const #false loc(#loc95)
              cir.yield %12 : !cir.bool loc(#loc95)
            }) : (!cir.bool) -> !cir.bool loc(#loc95)
            cir.yield %11 : !cir.bool loc(#loc95)
          }, false {
            %8 = cir.const #false loc(#loc95)
            cir.yield %8 : !cir.bool loc(#loc95)
          }) : (!cir.bool) -> !cir.bool loc(#loc95)
          cir.if %7 {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
            %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc101)
            %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc102)
            %11 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc77)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc77)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc103)
          } else {
            %8 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc78)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc78)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc104)
          } loc(#loc221)
        } loc(#loc218)
      } loc(#loc217)
    } loc(#loc216)
    cir.return loc(#loc80)
  } loc(#loc214)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc223)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc110)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc112)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc189)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc113)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc114)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc114)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc112)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %10 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc213)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    cir.call @goodB2G1Sink(%11) : (!s32i) -> () loc(#loc118)
    cir.return loc(#loc106)
  } loc(#loc222)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc226)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc123, #loc124])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc228)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc226)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc128)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc128)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc133)
          %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc232)
          %7 = cir.ternary(%6, true {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
            %9 = cir.const #cir.int<2000> : !s32i loc(#loc136)
            %10 = cir.cmp(le, %8, %9) : !s32i, !cir.bool loc(#loc233)
            %11 = cir.ternary(%10, true {
              %12 = cir.const #true loc(#loc134)
              cir.yield %12 : !cir.bool loc(#loc134)
            }, false {
              %12 = cir.const #false loc(#loc134)
              cir.yield %12 : !cir.bool loc(#loc134)
            }) : (!cir.bool) -> !cir.bool loc(#loc134)
            cir.yield %11 : !cir.bool loc(#loc134)
          }, false {
            %8 = cir.const #false loc(#loc134)
            cir.yield %8 : !cir.bool loc(#loc134)
          }) : (!cir.bool) -> !cir.bool loc(#loc134)
          cir.if %7 {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc140)
            %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc140)
            %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc141)
            %11 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc142)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc142)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc143)
          } else {
            %8 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc144)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc144)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc145)
          } loc(#loc234)
        } loc(#loc231)
      } loc(#loc230)
    } loc(#loc229)
    cir.return loc(#loc122)
  } loc(#loc227)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc236)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc151)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc237)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc153)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc189)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc154)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc155)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc155)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc153)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %10 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc226)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.call @goodB2G2Sink(%11) : (!s32i) -> () loc(#loc159)
    cir.return loc(#loc147)
  } loc(#loc235)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc239)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc164, #loc165])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc241)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc239)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc169)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc169)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc171)
        %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc171)
        %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc172)
        %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc173)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc173)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc174)
      } loc(#loc243)
    } loc(#loc242)
    cir.return loc(#loc163)
  } loc(#loc240)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc245)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc180)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc182)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc239)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc248)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc187)
    cir.return loc(#loc176)
  } loc(#loc244)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fscanf_sleep_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":49:19)
#loc6 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":31:1)
#loc7 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":31:24)
#loc8 = loc("/usr/include/unistd.h":480:1)
#loc9 = loc("/usr/include/unistd.h":480:43)
#loc10 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":39:19)
#loc11 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":33:1)
#loc12 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":41:1)
#loc15 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":34:1)
#loc16 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":35:5)
#loc17 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":40:5)
#loc18 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":35:8)
#loc19 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":36:5)
#loc20 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":38:15)
#loc21 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":38:9)
#loc22 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":39:9)
#loc23 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":43:1)
#loc24 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":52:1)
#loc25 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":45:5)
#loc26 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":45:9)
#loc27 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":47:14)
#loc28 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":47:13)
#loc29 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":47:5)
#loc30 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":49:5)
#loc31 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":49:12)
#loc32 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":50:17)
#loc33 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":50:5)
#loc34 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":51:13)
#loc35 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":51:5)
#loc36 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":148:1)
#loc37 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":153:1)
#loc38 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":150:5)
#loc39 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":150:14)
#loc40 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":151:5)
#loc41 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":151:14)
#loc42 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":152:5)
#loc43 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":152:13)
#loc44 = loc("/usr/include/stdlib.h":575:1)
#loc45 = loc("/usr/include/stdlib.h":575:41)
#loc46 = loc("/usr/include/time.h":76:1)
#loc47 = loc("/usr/include/time.h":76:38)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc50 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":169:15)
#loc51 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":171:15)
#loc52 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":174:15)
#loc53 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":176:15)
#loc54 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":164:1)
#loc55 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":179:1)
#loc60 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":165:1)
#loc61 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":167:27)
#loc62 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":167:22)
#loc63 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":167:5)
#loc64 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":169:5)
#loc65 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":170:5)
#loc66 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":170:54)
#loc67 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":171:5)
#loc68 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":174:5)
#loc69 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":175:5)
#loc70 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":175:53)
#loc71 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":176:5)
#loc72 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":178:12)
#loc73 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":178:5)
#loc74 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":59:1)
#loc75 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":59:29)
#loc76 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":69:19)
#loc77 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":77:23)
#loc78 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":81:23)
#loc79 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":64:1)
#loc80 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":84:1)
#loc83 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":65:1)
#loc84 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":66:5)
#loc85 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":83:5)
#loc86 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":66:8)
#loc87 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":67:5)
#loc88 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":70:5)
#loc89 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":72:5)
#loc90 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":69:9)
#loc91 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":74:9)
#loc92 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":82:9)
#loc93 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":74:13)
#loc94 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":74:21)
#loc95 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":74:23)
#loc96 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":74:26)
#loc97 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":74:35)
#loc98 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":75:9)
#loc99 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":78:9)
#loc100 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":80:9)
#loc101 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":76:19)
#loc102 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":76:13)
#loc103 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":77:13)
#loc104 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":81:13)
#loc105 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":86:1)
#loc106 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":95:1)
#loc107 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":88:5)
#loc108 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":88:9)
#loc109 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":90:14)
#loc110 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":90:13)
#loc111 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":90:5)
#loc112 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":92:5)
#loc113 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":92:12)
#loc114 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":92:19)
#loc115 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":93:22)
#loc116 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":93:5)
#loc117 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":94:18)
#loc118 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":94:5)
#loc119 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":60:1)
#loc120 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":60:29)
#loc121 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":98:1)
#loc122 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":113:1)
#loc125 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":99:1)
#loc126 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":100:5)
#loc127 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":112:5)
#loc128 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":100:8)
#loc129 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":101:5)
#loc130 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":103:9)
#loc131 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":111:9)
#loc132 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":103:13)
#loc133 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":103:21)
#loc134 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":103:23)
#loc135 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":103:26)
#loc136 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":103:35)
#loc137 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":104:9)
#loc138 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":107:9)
#loc139 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":109:9)
#loc140 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":105:19)
#loc141 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":105:13)
#loc142 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":106:23)
#loc143 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":106:13)
#loc144 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":110:23)
#loc145 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":110:13)
#loc146 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":115:1)
#loc147 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":124:1)
#loc148 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":117:5)
#loc149 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":117:9)
#loc150 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":119:14)
#loc151 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":119:13)
#loc152 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":119:5)
#loc153 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":121:5)
#loc154 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":121:12)
#loc155 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":121:19)
#loc156 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":122:22)
#loc157 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":122:5)
#loc158 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":123:18)
#loc159 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":123:5)
#loc160 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":61:1)
#loc161 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":61:28)
#loc162 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":127:1)
#loc163 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":135:1)
#loc166 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":128:1)
#loc167 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":129:5)
#loc168 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":134:5)
#loc169 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":129:8)
#loc170 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":130:5)
#loc171 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":132:15)
#loc172 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":132:9)
#loc173 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":133:19)
#loc174 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":133:9)
#loc175 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":137:1)
#loc176 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":146:1)
#loc177 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":139:5)
#loc178 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":139:9)
#loc179 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":141:14)
#loc180 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":141:13)
#loc181 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":141:5)
#loc182 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":143:13)
#loc183 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":143:5)
#loc184 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":144:21)
#loc185 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":144:5)
#loc186 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":145:17)
#loc187 = loc("CWE400_Resource_Exhaustion__fscanf_sleep_21.c":145:5)
#loc188 = loc(fused[#loc1, #loc2])
#loc189 = loc(fused[#loc3, #loc4])
#loc190 = loc(fused[#loc6, #loc7])
#loc191 = loc(fused[#loc8, #loc9])
#loc192 = loc(fused[#loc11, #loc12])
#loc194 = loc(fused[#loc16, #loc17])
#loc195 = loc(fused[#loc19, #loc17])
#loc196 = loc(fused[#loc23, #loc24])
#loc197 = loc(fused[#loc25, #loc26])
#loc198 = loc(fused[#loc29, #loc27])
#loc199 = loc(fused[#loc33, #loc32])
#loc200 = loc(fused[#loc36, #loc37])
#loc201 = loc(fused[#loc38, #loc39])
#loc202 = loc(fused[#loc40, #loc41])
#loc203 = loc(fused[#loc42, #loc43])
#loc204 = loc(fused[#loc44, #loc45])
#loc205 = loc(fused[#loc46, #loc47])
#loc206 = loc(fused[#loc48, #loc49])
#loc207 = loc(fused[#loc54, #loc55])
#loc210 = loc(fused[#loc65, #loc66])
#loc211 = loc(fused[#loc69, #loc70])
#loc212 = loc(fused[#loc73, #loc72])
#loc213 = loc(fused[#loc74, #loc75])
#loc214 = loc(fused[#loc79, #loc80])
#loc216 = loc(fused[#loc84, #loc85])
#loc217 = loc(fused[#loc87, #loc88, #loc89, #loc85])
#loc218 = loc(fused[#loc91, #loc92])
#loc219 = loc(fused[#loc93, #loc94])
#loc220 = loc(fused[#loc96, #loc97])
#loc221 = loc(fused[#loc98, #loc99, #loc100, #loc92])
#loc222 = loc(fused[#loc105, #loc106])
#loc223 = loc(fused[#loc107, #loc108])
#loc224 = loc(fused[#loc111, #loc109])
#loc225 = loc(fused[#loc116, #loc115])
#loc226 = loc(fused[#loc119, #loc120])
#loc227 = loc(fused[#loc121, #loc122])
#loc229 = loc(fused[#loc126, #loc127])
#loc230 = loc(fused[#loc129, #loc127])
#loc231 = loc(fused[#loc130, #loc131])
#loc232 = loc(fused[#loc132, #loc133])
#loc233 = loc(fused[#loc135, #loc136])
#loc234 = loc(fused[#loc137, #loc138, #loc139, #loc131])
#loc235 = loc(fused[#loc146, #loc147])
#loc236 = loc(fused[#loc148, #loc149])
#loc237 = loc(fused[#loc152, #loc150])
#loc238 = loc(fused[#loc157, #loc156])
#loc239 = loc(fused[#loc160, #loc161])
#loc240 = loc(fused[#loc162, #loc163])
#loc242 = loc(fused[#loc167, #loc168])
#loc243 = loc(fused[#loc170, #loc168])
#loc244 = loc(fused[#loc175, #loc176])
#loc245 = loc(fused[#loc177, #loc178])
#loc246 = loc(fused[#loc181, #loc179])
#loc247 = loc(fused[#loc183, #loc182])
#loc248 = loc(fused[#loc185, #loc184])
