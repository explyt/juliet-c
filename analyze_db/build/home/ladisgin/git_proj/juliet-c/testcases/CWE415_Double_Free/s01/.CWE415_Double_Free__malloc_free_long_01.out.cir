!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc49 = loc("CWE415_Double_Free__malloc_free_long_01.c":84:10)
#loc50 = loc("CWE415_Double_Free__malloc_free_long_01.c":84:14)
#loc51 = loc("CWE415_Double_Free__malloc_free_long_01.c":84:20)
#loc52 = loc("CWE415_Double_Free__malloc_free_long_01.c":84:32)
#loc131 = loc(fused[#loc49, #loc50])
#loc132 = loc(fused[#loc51, #loc52])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_long_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc111)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc112)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc113)
  cir.func no_proto @CWE415_Double_Free__malloc_free_long_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc115)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc116)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc13)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc117)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc118)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc13)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc119)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc120)
    cir.br ^bb1 loc(#loc121)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc21)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc22)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc22)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s64i>, !cir.bool loc(#loc122)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc123)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc24)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc26)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc24)
    cir.br ^bb3 loc(#loc20)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc27)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc27)
    cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc28)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc29)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc29)
    cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc30)
    cir.return loc(#loc8)
  } loc(#loc114)
  cir.func no_proto @CWE415_Double_Free__malloc_free_long_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc125)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc126)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    cir.return loc(#loc32)
  } loc(#loc124)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc127)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc128)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc46)
  cir.func @main(%arg0: !s32i loc(fused[#loc49, #loc50]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc51, #loc52])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc132)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc48)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc53)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc53)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc54)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc55)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc55)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc56)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc43)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %8 = cir.get_global @CWE415_Double_Free__malloc_free_long_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call @CWE415_Double_Free__malloc_free_long_01_good() : () -> () loc(#loc58)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc44)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc45)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %13 = cir.get_global @CWE415_Double_Free__malloc_free_long_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call @CWE415_Double_Free__malloc_free_long_01_bad() : () -> () loc(#loc62)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc46)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc65)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    cir.return %17 : !s32i loc(#loc135)
  } loc(#loc130)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc71)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc138)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc73)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc74)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc74)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc139)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc140)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc73)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc141)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc142)
    cir.br ^bb1 loc(#loc143)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc81)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc82)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc82)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s64i>, !cir.bool loc(#loc144)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc145)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc84)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc86)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc84)
    cir.br ^bb3 loc(#loc80)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc80)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc87)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc87)
    cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc88)
    cir.return loc(#loc68)
  } loc(#loc136)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc93)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc148)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc95)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc96)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc149)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc150)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc95)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc151)
    cir.store %8, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc152)
    cir.br ^bb1 loc(#loc153)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc103)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc104)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc104)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s64i>, !cir.bool loc(#loc154)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc155)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc106)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc108)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc106)
    cir.br ^bb3 loc(#loc102)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc102)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc109)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc109)
    cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc110)
    cir.return loc(#loc90)
  } loc(#loc146)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_long_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE415_Double_Free__malloc_free_long_01.c":24:1)
#loc8 = loc("CWE415_Double_Free__malloc_free_long_01.c":35:1)
#loc9 = loc("CWE415_Double_Free__malloc_free_long_01.c":26:5)
#loc10 = loc("CWE415_Double_Free__malloc_free_long_01.c":26:12)
#loc11 = loc("CWE415_Double_Free__malloc_free_long_01.c":28:12)
#loc12 = loc("CWE415_Double_Free__malloc_free_long_01.c":28:5)
#loc13 = loc("CWE415_Double_Free__malloc_free_long_01.c":29:20)
#loc14 = loc("CWE415_Double_Free__malloc_free_long_01.c":29:27)
#loc15 = loc("CWE415_Double_Free__malloc_free_long_01.c":29:31)
#loc16 = loc("CWE415_Double_Free__malloc_free_long_01.c":29:42)
#loc17 = loc("CWE415_Double_Free__malloc_free_long_01.c":29:43)
#loc18 = loc("CWE415_Double_Free__malloc_free_long_01.c":29:5)
#loc19 = loc("CWE415_Double_Free__malloc_free_long_01.c":30:5)
#loc20 = loc("CWE415_Double_Free__malloc_free_long_01.c":30:33)
#loc21 = loc("CWE415_Double_Free__malloc_free_long_01.c":30:9)
#loc22 = loc("CWE415_Double_Free__malloc_free_long_01.c":30:17)
#loc23 = loc("CWE415_Double_Free__malloc_free_long_01.c":30:23)
#loc24 = loc("CWE415_Double_Free__malloc_free_long_01.c":30:24)
#loc25 = loc("CWE415_Double_Free__malloc_free_long_01.c":30:30)
#loc26 = loc("CWE415_Double_Free__malloc_free_long_01.c":30:29)
#loc27 = loc("CWE415_Double_Free__malloc_free_long_01.c":32:10)
#loc28 = loc("CWE415_Double_Free__malloc_free_long_01.c":32:5)
#loc29 = loc("CWE415_Double_Free__malloc_free_long_01.c":34:10)
#loc30 = loc("CWE415_Double_Free__malloc_free_long_01.c":34:5)
#loc31 = loc("CWE415_Double_Free__malloc_free_long_01.c":69:1)
#loc32 = loc("CWE415_Double_Free__malloc_free_long_01.c":73:1)
#loc33 = loc("CWE415_Double_Free__malloc_free_long_01.c":71:5)
#loc34 = loc("CWE415_Double_Free__malloc_free_long_01.c":71:13)
#loc35 = loc("CWE415_Double_Free__malloc_free_long_01.c":72:5)
#loc36 = loc("CWE415_Double_Free__malloc_free_long_01.c":72:13)
#loc37 = loc("/usr/include/stdlib.h":575:1)
#loc38 = loc("/usr/include/stdlib.h":575:41)
#loc39 = loc("/usr/include/time.h":76:1)
#loc40 = loc("/usr/include/time.h":76:38)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc43 = loc("CWE415_Double_Free__malloc_free_long_01.c":89:15)
#loc44 = loc("CWE415_Double_Free__malloc_free_long_01.c":91:15)
#loc45 = loc("CWE415_Double_Free__malloc_free_long_01.c":94:15)
#loc46 = loc("CWE415_Double_Free__malloc_free_long_01.c":96:15)
#loc47 = loc("CWE415_Double_Free__malloc_free_long_01.c":84:1)
#loc48 = loc("CWE415_Double_Free__malloc_free_long_01.c":99:1)
#loc53 = loc("CWE415_Double_Free__malloc_free_long_01.c":85:1)
#loc54 = loc("CWE415_Double_Free__malloc_free_long_01.c":87:27)
#loc55 = loc("CWE415_Double_Free__malloc_free_long_01.c":87:22)
#loc56 = loc("CWE415_Double_Free__malloc_free_long_01.c":87:5)
#loc57 = loc("CWE415_Double_Free__malloc_free_long_01.c":89:5)
#loc58 = loc("CWE415_Double_Free__malloc_free_long_01.c":90:5)
#loc59 = loc("CWE415_Double_Free__malloc_free_long_01.c":90:50)
#loc60 = loc("CWE415_Double_Free__malloc_free_long_01.c":91:5)
#loc61 = loc("CWE415_Double_Free__malloc_free_long_01.c":94:5)
#loc62 = loc("CWE415_Double_Free__malloc_free_long_01.c":95:5)
#loc63 = loc("CWE415_Double_Free__malloc_free_long_01.c":95:49)
#loc64 = loc("CWE415_Double_Free__malloc_free_long_01.c":96:5)
#loc65 = loc("CWE415_Double_Free__malloc_free_long_01.c":98:12)
#loc66 = loc("CWE415_Double_Free__malloc_free_long_01.c":98:5)
#loc67 = loc("CWE415_Double_Free__malloc_free_long_01.c":42:1)
#loc68 = loc("CWE415_Double_Free__malloc_free_long_01.c":52:1)
#loc69 = loc("CWE415_Double_Free__malloc_free_long_01.c":44:5)
#loc70 = loc("CWE415_Double_Free__malloc_free_long_01.c":44:12)
#loc71 = loc("CWE415_Double_Free__malloc_free_long_01.c":46:12)
#loc72 = loc("CWE415_Double_Free__malloc_free_long_01.c":46:5)
#loc73 = loc("CWE415_Double_Free__malloc_free_long_01.c":47:20)
#loc74 = loc("CWE415_Double_Free__malloc_free_long_01.c":47:27)
#loc75 = loc("CWE415_Double_Free__malloc_free_long_01.c":47:31)
#loc76 = loc("CWE415_Double_Free__malloc_free_long_01.c":47:42)
#loc77 = loc("CWE415_Double_Free__malloc_free_long_01.c":47:43)
#loc78 = loc("CWE415_Double_Free__malloc_free_long_01.c":47:5)
#loc79 = loc("CWE415_Double_Free__malloc_free_long_01.c":48:5)
#loc80 = loc("CWE415_Double_Free__malloc_free_long_01.c":48:33)
#loc81 = loc("CWE415_Double_Free__malloc_free_long_01.c":48:9)
#loc82 = loc("CWE415_Double_Free__malloc_free_long_01.c":48:17)
#loc83 = loc("CWE415_Double_Free__malloc_free_long_01.c":48:23)
#loc84 = loc("CWE415_Double_Free__malloc_free_long_01.c":48:24)
#loc85 = loc("CWE415_Double_Free__malloc_free_long_01.c":48:30)
#loc86 = loc("CWE415_Double_Free__malloc_free_long_01.c":48:29)
#loc87 = loc("CWE415_Double_Free__malloc_free_long_01.c":51:10)
#loc88 = loc("CWE415_Double_Free__malloc_free_long_01.c":51:5)
#loc89 = loc("CWE415_Double_Free__malloc_free_long_01.c":55:1)
#loc90 = loc("CWE415_Double_Free__malloc_free_long_01.c":67:1)
#loc91 = loc("CWE415_Double_Free__malloc_free_long_01.c":57:5)
#loc92 = loc("CWE415_Double_Free__malloc_free_long_01.c":57:12)
#loc93 = loc("CWE415_Double_Free__malloc_free_long_01.c":59:12)
#loc94 = loc("CWE415_Double_Free__malloc_free_long_01.c":59:5)
#loc95 = loc("CWE415_Double_Free__malloc_free_long_01.c":60:20)
#loc96 = loc("CWE415_Double_Free__malloc_free_long_01.c":60:27)
#loc97 = loc("CWE415_Double_Free__malloc_free_long_01.c":60:31)
#loc98 = loc("CWE415_Double_Free__malloc_free_long_01.c":60:42)
#loc99 = loc("CWE415_Double_Free__malloc_free_long_01.c":60:43)
#loc100 = loc("CWE415_Double_Free__malloc_free_long_01.c":60:5)
#loc101 = loc("CWE415_Double_Free__malloc_free_long_01.c":61:5)
#loc102 = loc("CWE415_Double_Free__malloc_free_long_01.c":61:33)
#loc103 = loc("CWE415_Double_Free__malloc_free_long_01.c":61:9)
#loc104 = loc("CWE415_Double_Free__malloc_free_long_01.c":61:17)
#loc105 = loc("CWE415_Double_Free__malloc_free_long_01.c":61:23)
#loc106 = loc("CWE415_Double_Free__malloc_free_long_01.c":61:24)
#loc107 = loc("CWE415_Double_Free__malloc_free_long_01.c":61:30)
#loc108 = loc("CWE415_Double_Free__malloc_free_long_01.c":61:29)
#loc109 = loc("CWE415_Double_Free__malloc_free_long_01.c":63:10)
#loc110 = loc("CWE415_Double_Free__malloc_free_long_01.c":63:5)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc3, #loc4])
#loc113 = loc(fused[#loc5, #loc6])
#loc114 = loc(fused[#loc7, #loc8])
#loc115 = loc(fused[#loc9, #loc10])
#loc116 = loc(fused[#loc12, #loc11])
#loc117 = loc(fused[#loc15, #loc16])
#loc118 = loc(fused[#loc14, #loc16])
#loc119 = loc(fused[#loc13, #loc17])
#loc120 = loc(fused[#loc18, #loc17])
#loc121 = loc(fused[#loc19, #loc20])
#loc122 = loc(fused[#loc21, #loc22])
#loc123 = loc(fused[#loc23, #loc20])
#loc124 = loc(fused[#loc31, #loc32])
#loc125 = loc(fused[#loc33, #loc34])
#loc126 = loc(fused[#loc35, #loc36])
#loc127 = loc(fused[#loc37, #loc38])
#loc128 = loc(fused[#loc39, #loc40])
#loc129 = loc(fused[#loc41, #loc42])
#loc130 = loc(fused[#loc47, #loc48])
#loc133 = loc(fused[#loc58, #loc59])
#loc134 = loc(fused[#loc62, #loc63])
#loc135 = loc(fused[#loc66, #loc65])
#loc136 = loc(fused[#loc67, #loc68])
#loc137 = loc(fused[#loc69, #loc70])
#loc138 = loc(fused[#loc72, #loc71])
#loc139 = loc(fused[#loc75, #loc76])
#loc140 = loc(fused[#loc74, #loc76])
#loc141 = loc(fused[#loc73, #loc77])
#loc142 = loc(fused[#loc78, #loc77])
#loc143 = loc(fused[#loc79, #loc80])
#loc144 = loc(fused[#loc81, #loc82])
#loc145 = loc(fused[#loc83, #loc80])
#loc146 = loc(fused[#loc89, #loc90])
#loc147 = loc(fused[#loc91, #loc92])
#loc148 = loc(fused[#loc94, #loc93])
#loc149 = loc(fused[#loc97, #loc98])
#loc150 = loc(fused[#loc96, #loc98])
#loc151 = loc(fused[#loc95, #loc99])
#loc152 = loc(fused[#loc100, #loc99])
#loc153 = loc(fused[#loc101, #loc102])
#loc154 = loc(fused[#loc103, #loc104])
#loc155 = loc(fused[#loc105, #loc102])
