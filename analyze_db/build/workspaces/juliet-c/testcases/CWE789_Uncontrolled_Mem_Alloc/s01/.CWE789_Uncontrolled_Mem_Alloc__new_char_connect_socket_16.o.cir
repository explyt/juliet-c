!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc333)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc334)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc335)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc336)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc337)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc338)
  cir.func private @close(!s32i) -> !s32i loc(#loc339)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc340)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc341)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc20)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc342)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc23)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc344)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc28)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc345)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc32)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc32)
        cir.condition(%4) loc(#loc32)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc349)
            %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc350)
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc351)
            %6 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc352)
            %7 = cir.const #cir.int<1> : !s32i loc(#loc41)
            %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc41)
            cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc351)
            cir.scope {
              cir.do {
                cir.scope {
                  %9 = cir.const #cir.int<2> : !s32i loc(#loc48)
                  %10 = cir.const #cir.int<1> : !u32i loc(#loc49)
                  %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc49)
                  %12 = cir.const #cir.int<6> : !u32i loc(#loc50)
                  %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc50)
                  %14 = cir.call @socket(%9, %11, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
                  cir.store %14, %5 : !s32i, !cir.ptr<!s32i> loc(#loc355)
                  cir.scope {
                    %55 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc56)
                    %56 = cir.const #cir.int<1> : !s32i loc(#loc57)
                    %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc57)
                    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc357)
                    cir.if %58 {
                      cir.break loc(#loc59)
                    } loc(#loc358)
                  } loc(#loc356)
                  %15 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc359)
                  %16 = cir.const #cir.int<0> : !s32i loc(#loc62)
                  %17 = cir.const #cir.int<16> : !u64i loc(#loc360)
                  cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc361)
                  %18 = cir.const #cir.int<2> : !s32i loc(#loc67)
                  %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc67)
                  %20 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
                  cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc362)
                  %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                  %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                  %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc70)
                  %24 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
                  %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
                  cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc363)
                  %26 = cir.const #cir.int<27015> : !s32i loc(#loc75)
                  %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc75)
                  %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc76)
                  %29 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
                  cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc364)
                  cir.scope {
                    %55 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc82)
                    %56 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc366)
                    %57 = cir.const #cir.int<16> : !u64i loc(#loc367)
                    %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc367)
                    %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc87)
                    %60 = cir.const #cir.int<1> : !s32i loc(#loc88)
                    %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc88)
                    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc368)
                    cir.if %62 {
                      cir.break loc(#loc90)
                    } loc(#loc369)
                  } loc(#loc365)
                  %30 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc91)
                  %31 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc92)
                  %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
                  %33 = cir.const #cir.int<3> : !s32i loc(#loc93)
                  %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc93)
                  %35 = cir.const #cir.int<8> : !u64i loc(#loc93)
                  %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc93)
                  %37 = cir.const #cir.int<2> : !s32i loc(#loc93)
                  %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc93)
                  %39 = cir.binop(add, %36, %38) : !u64i loc(#loc93)
                  %40 = cir.const #cir.int<1> : !s32i loc(#loc94)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc94)
                  %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc370)
                  %43 = cir.const #cir.int<0> : !s32i loc(#loc95)
                  %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc96)
                  %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc96)
                  cir.store %45, %3 : !s32i, !cir.ptr<!s32i> loc(#loc371)
                  cir.scope {
                    %55 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                    %56 = cir.const #cir.int<1> : !s32i loc(#loc102)
                    %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc102)
                    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc373)
                    %59 = cir.ternary(%58, true {
                      %60 = cir.const #true loc(#loc103)
                      cir.yield %60 : !cir.bool loc(#loc103)
                    }, false {
                      %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                      %61 = cir.const #cir.int<0> : !s32i loc(#loc105)
                      %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc374)
                      %63 = cir.ternary(%62, true {
                        %64 = cir.const #true loc(#loc103)
                        cir.yield %64 : !cir.bool loc(#loc103)
                      }, false {
                        %64 = cir.const #false loc(#loc103)
                        cir.yield %64 : !cir.bool loc(#loc103)
                      }) : (!cir.bool) -> !cir.bool loc(#loc103)
                      cir.yield %63 : !cir.bool loc(#loc103)
                    }) : (!cir.bool) -> !cir.bool loc(#loc103)
                    cir.if %59 {
                      cir.break loc(#loc107)
                    } loc(#loc375)
                  } loc(#loc372)
                  %46 = cir.const #cir.int<0> : !s8i loc(#loc108)
                  %47 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                  %48 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc110)
                  %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc110)
                  cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc376)
                  %50 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc111)
                  %51 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc112)
                  %52 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
                  %53 = cir.const #cir.int<0> : !s32i loc(#loc114)
                  %54 = cir.call @__isoc23_strtoul(%51, %52, %53) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc111)
                  cir.store %54, %0 : !u64i, !cir.ptr<!u64i> loc(#loc377)
                } loc(#loc354)
                cir.yield loc(#loc45)
              } while {
                %9 = cir.const #cir.int<0> : !s32i loc(#loc117)
                %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc117)
                cir.condition(%10) loc(#loc117)
              } loc(#loc353)
            } loc(#loc353)
            cir.scope {
              %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc120)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc121)
              %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc121)
              %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc379)
              cir.if %12 {
                %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc123)
                %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc124)
              } loc(#loc380)
            } loc(#loc378)
          } loc(#loc348)
          cir.break loc(#loc125)
        } loc(#loc347)
        cir.yield loc(#loc31)
      } loc(#loc346)
    } loc(#loc346)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc128)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc128)
        cir.condition(%4) loc(#loc128)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc384)
            cir.scope {
              %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc136)
              %5 = cir.const #cir.int<5> : !u64i loc(#loc386)
              %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc387)
              cir.if %6 {
                %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc142)
                %8 = cir.call @_Znam(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc143)
                %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc389)
                cir.store %9, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc390)
                %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc147)
                %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
                %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc20)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc20)
                %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc147)
                %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
                cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc150)
                %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
                cir.delete.array %16 : <!s8i> loc(#loc151)
              } else {
                %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc23)
                %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc23)
                cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc152)
              } loc(#loc388)
            } loc(#loc385)
          } loc(#loc383)
          cir.break loc(#loc153)
        } loc(#loc382)
        cir.yield loc(#loc127)
      } loc(#loc381)
    } loc(#loc381)
    cir.return loc(#loc25)
  } loc(#loc343)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc154)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc392)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc159)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc159)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc393)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc163)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc163)
        cir.condition(%4) loc(#loc163)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc397)
            %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc398)
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc399)
            %6 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc400)
            %7 = cir.const #cir.int<1> : !s32i loc(#loc172)
            %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc172)
            cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc399)
            cir.scope {
              cir.do {
                cir.scope {
                  %9 = cir.const #cir.int<2> : !s32i loc(#loc179)
                  %10 = cir.const #cir.int<1> : !u32i loc(#loc180)
                  %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc180)
                  %12 = cir.const #cir.int<6> : !u32i loc(#loc181)
                  %13 = cir.cast(integral, %12 : !u32i), !s32i loc(#loc181)
                  %14 = cir.call @socket(%9, %11, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc182)
                  cir.store %14, %5 : !s32i, !cir.ptr<!s32i> loc(#loc403)
                  cir.scope {
                    %55 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc187)
                    %56 = cir.const #cir.int<1> : !s32i loc(#loc188)
                    %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc188)
                    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc405)
                    cir.if %58 {
                      cir.break loc(#loc190)
                    } loc(#loc406)
                  } loc(#loc404)
                  %15 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc407)
                  %16 = cir.const #cir.int<0> : !s32i loc(#loc193)
                  %17 = cir.const #cir.int<16> : !u64i loc(#loc408)
                  cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc409)
                  %18 = cir.const #cir.int<2> : !s32i loc(#loc198)
                  %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc198)
                  %20 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
                  cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc410)
                  %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc200)
                  %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc200)
                  %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc201)
                  %24 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
                  %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
                  cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc411)
                  %26 = cir.const #cir.int<27015> : !s32i loc(#loc204)
                  %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc204)
                  %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc205)
                  %29 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
                  cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc412)
                  cir.scope {
                    %55 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc210)
                    %56 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc414)
                    %57 = cir.const #cir.int<16> : !u64i loc(#loc415)
                    %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc415)
                    %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc215)
                    %60 = cir.const #cir.int<1> : !s32i loc(#loc216)
                    %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc216)
                    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc416)
                    cir.if %62 {
                      cir.break loc(#loc218)
                    } loc(#loc417)
                  } loc(#loc413)
                  %30 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc219)
                  %31 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc220)
                  %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc220)
                  %33 = cir.const #cir.int<3> : !s32i loc(#loc221)
                  %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc221)
                  %35 = cir.const #cir.int<8> : !u64i loc(#loc221)
                  %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc221)
                  %37 = cir.const #cir.int<2> : !s32i loc(#loc221)
                  %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc221)
                  %39 = cir.binop(add, %36, %38) : !u64i loc(#loc221)
                  %40 = cir.const #cir.int<1> : !s32i loc(#loc222)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc222)
                  %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc418)
                  %43 = cir.const #cir.int<0> : !s32i loc(#loc223)
                  %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc224)
                  %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc224)
                  cir.store %45, %3 : !s32i, !cir.ptr<!s32i> loc(#loc419)
                  cir.scope {
                    %55 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc229)
                    %56 = cir.const #cir.int<1> : !s32i loc(#loc230)
                    %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc230)
                    %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc421)
                    %59 = cir.ternary(%58, true {
                      %60 = cir.const #true loc(#loc231)
                      cir.yield %60 : !cir.bool loc(#loc231)
                    }, false {
                      %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc232)
                      %61 = cir.const #cir.int<0> : !s32i loc(#loc233)
                      %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc422)
                      %63 = cir.ternary(%62, true {
                        %64 = cir.const #true loc(#loc231)
                        cir.yield %64 : !cir.bool loc(#loc231)
                      }, false {
                        %64 = cir.const #false loc(#loc231)
                        cir.yield %64 : !cir.bool loc(#loc231)
                      }) : (!cir.bool) -> !cir.bool loc(#loc231)
                      cir.yield %63 : !cir.bool loc(#loc231)
                    }) : (!cir.bool) -> !cir.bool loc(#loc231)
                    cir.if %59 {
                      cir.break loc(#loc235)
                    } loc(#loc423)
                  } loc(#loc420)
                  %46 = cir.const #cir.int<0> : !s8i loc(#loc236)
                  %47 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc237)
                  %48 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc238)
                  %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc238)
                  cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc424)
                  %50 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc239)
                  %51 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc240)
                  %52 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc241)
                  %53 = cir.const #cir.int<0> : !s32i loc(#loc242)
                  %54 = cir.call @__isoc23_strtoul(%51, %52, %53) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc239)
                  cir.store %54, %0 : !u64i, !cir.ptr<!u64i> loc(#loc425)
                } loc(#loc402)
                cir.yield loc(#loc176)
              } while {
                %9 = cir.const #cir.int<0> : !s32i loc(#loc245)
                %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc245)
                cir.condition(%10) loc(#loc245)
              } loc(#loc401)
            } loc(#loc401)
            cir.scope {
              %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc248)
              %10 = cir.const #cir.int<1> : !s32i loc(#loc249)
              %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc249)
              %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc427)
              cir.if %12 {
                %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc251)
                %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc252)
              } loc(#loc428)
            } loc(#loc426)
          } loc(#loc396)
          cir.break loc(#loc253)
        } loc(#loc395)
        cir.yield loc(#loc162)
      } loc(#loc394)
    } loc(#loc394)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc256)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc256)
        cir.condition(%4) loc(#loc256)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc432)
            cir.scope {
              %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc264)
              %5 = cir.const #cir.int<5> : !u64i loc(#loc434)
              %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc435)
              %7 = cir.ternary(%6, true {
                %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc268)
                %9 = cir.const #cir.int<100> : !s32i loc(#loc269)
                %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc269)
                %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc436)
                %12 = cir.ternary(%11, true {
                  %13 = cir.const #true loc(#loc267)
                  cir.yield %13 : !cir.bool loc(#loc267)
                }, false {
                  %13 = cir.const #false loc(#loc267)
                  cir.yield %13 : !cir.bool loc(#loc267)
                }) : (!cir.bool) -> !cir.bool loc(#loc267)
                cir.yield %12 : !cir.bool loc(#loc267)
              }, false {
                %8 = cir.const #false loc(#loc267)
                cir.yield %8 : !cir.bool loc(#loc267)
              }) : (!cir.bool) -> !cir.bool loc(#loc267)
              cir.if %7 {
                %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc273)
                %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc274)
                %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc438)
                cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc439)
                %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc278)
                %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc279)
                %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc280)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc280)
                %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc278)
                %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc281)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc282)
                %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc283)
                cir.delete.array %17 : <!s8i> loc(#loc283)
              } else {
                %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc154)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc154)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc284)
              } loc(#loc437)
            } loc(#loc433)
          } loc(#loc431)
          cir.break loc(#loc285)
        } loc(#loc430)
        cir.yield loc(#loc255)
      } loc(#loc429)
    } loc(#loc429)
    cir.return loc(#loc156)
  } loc(#loc391)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc441)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc290)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc290)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc442)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc294)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc294)
        cir.condition(%4) loc(#loc294)
      } do {
        cir.scope {
          %3 = cir.const #cir.int<20> : !s32i loc(#loc296)
          %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc296)
          cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc445)
          cir.break loc(#loc298)
        } loc(#loc444)
        cir.yield loc(#loc293)
      } loc(#loc443)
    } loc(#loc443)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc301)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc301)
        cir.condition(%4) loc(#loc301)
      } do {
        cir.scope {
          cir.scope {
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc449)
            cir.scope {
              %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc309)
              %5 = cir.const #cir.int<5> : !u64i loc(#loc451)
              %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc452)
              cir.if %6 {
                %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc315)
                %8 = cir.call @_Znam(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc316)
                %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc454)
                cir.store %9, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc455)
                %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc320)
                %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc321)
                %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc322)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc322)
                %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc320)
                %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc323)
                cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc324)
                %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc325)
                cir.delete.array %16 : <!s8i> loc(#loc325)
              } else {
                %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc326)
                %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc326)
                cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc327)
              } loc(#loc453)
            } loc(#loc450)
          } loc(#loc448)
          cir.break loc(#loc328)
        } loc(#loc447)
        cir.yield loc(#loc300)
      } loc(#loc446)
    } loc(#loc446)
    cir.return loc(#loc287)
  } loc(#loc440)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16L7goodB2GEv() : () -> () loc(#loc331)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16L7goodG2BEv() : () -> () loc(#loc332)
    cir.return loc(#loc330)
  } loc(#loc456)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":85:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":219:1)
#loc13 = loc("/usr/include/stdlib.h":223:6)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc18 = loc("/usr/include/string.h":141:1)
#loc19 = loc("/usr/include/string.h":142:14)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":128:34)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":134:27)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":52:1)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":139:1)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":54:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":54:12)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":56:12)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":56:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":57:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":116:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":57:11)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":58:5)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":59:9)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":114:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":64:13)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":64:17)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":65:13)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":65:32)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":66:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":66:36)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":67:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":67:45)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":68:13)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":103:21)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":69:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":102:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":78:40)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":78:49)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":78:62)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":78:33)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":78:17)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":78:73)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":79:17)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":82:17)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":79:21)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":79:38)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":80:17)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":81:21)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":83:24)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":83:25)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":83:34)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":83:37)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":83:51)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":83:17)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":83:52)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":84:38)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":84:17)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":85:43)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":85:17)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":85:63)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":86:42)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":86:36)
#loc77 = loc("/usr/include/netinet/in.h":250:15)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":86:17)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":86:50)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":87:17)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":90:17)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":87:29)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":87:62)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":87:63)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":87:72)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":87:86)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":87:21)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":87:92)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":88:17)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":89:21)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":93:35)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":93:50)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":93:63)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":93:81)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":93:84)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":93:30)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":93:17)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":93:85)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":94:17)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":97:17)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":94:21)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":94:35)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":94:48)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":94:51)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":94:65)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":95:17)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":96:21)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":99:43)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":99:29)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":99:17)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":101:24)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":101:32)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":101:45)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":101:51)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":101:17)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":101:52)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":103:20)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":104:13)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":107:13)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":104:17)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":104:34)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":105:13)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":106:30)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":106:17)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":115:9)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":117:5)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":138:5)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":117:11)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":118:5)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":119:9)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":136:9)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":120:13)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":120:20)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":124:13)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":135:13)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":124:17)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":124:24)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":124:43)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":125:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":131:13)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":133:13)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":126:37)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":52:6)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":126:28)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":126:41)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":126:17)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":128:17)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":128:24)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":129:27)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":129:17)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":130:27)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":134:17)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":137:9)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":228:27)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":146:1)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":233:1)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":148:5)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":148:12)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":150:12)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":150:5)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":151:5)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":210:5)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":151:11)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":152:5)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":153:9)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":208:9)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":158:13)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":158:17)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":159:13)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":159:32)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":160:13)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":160:36)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":161:13)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":161:45)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":162:13)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":197:21)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":163:13)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":196:13)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":172:40)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":172:49)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":172:62)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":172:33)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":172:17)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":172:73)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":173:17)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":176:17)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":173:21)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":173:38)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":174:17)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":175:21)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":177:24)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":177:25)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":177:34)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":177:37)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":177:51)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":177:17)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":177:52)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":178:38)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":178:17)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":179:53)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":179:43)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":179:17)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":179:63)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":180:42)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":180:36)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":180:17)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":180:50)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":181:17)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":184:17)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":181:29)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":181:62)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":181:63)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":181:72)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":181:86)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":181:21)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":181:92)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":182:17)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":183:21)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":187:35)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":187:50)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":187:63)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":187:81)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":187:84)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":187:30)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":187:17)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":187:85)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":188:17)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":191:17)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":188:21)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":188:35)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":188:48)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":188:51)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":188:65)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":189:17)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":190:21)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":193:43)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":193:29)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":193:17)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":195:24)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":195:32)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":195:45)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":195:51)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":195:17)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":195:52)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":197:20)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":198:13)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":201:13)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":198:17)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":198:34)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":199:13)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":200:30)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":200:17)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":209:9)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":211:5)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":232:5)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":211:11)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":212:5)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":213:9)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":230:9)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":214:13)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":214:20)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":218:13)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":229:13)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":218:17)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":218:24)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":218:43)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":218:45)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":218:48)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":218:55)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":219:13)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":225:13)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":227:13)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":220:37)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":146:13)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":220:28)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":220:41)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":220:17)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":222:17)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":222:24)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":222:34)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":223:27)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":223:17)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":224:27)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":228:17)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":231:9)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":236:1)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":269:1)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":238:5)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":238:12)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":240:12)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":240:5)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":241:5)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":246:5)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":241:11)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":242:5)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":244:16)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":244:9)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":245:9)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":247:5)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":268:5)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":247:11)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":248:5)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":249:9)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":266:9)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":250:13)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":250:20)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":254:13)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":265:13)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":254:17)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":254:24)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":254:43)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":255:13)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":261:13)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":263:13)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":256:37)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":236:13)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":256:28)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":256:41)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":256:17)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":258:17)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":258:24)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":258:34)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":259:27)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":259:17)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":260:27)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":264:27)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":264:17)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":267:9)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":271:1)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":275:1)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":273:5)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_16.cpp":274:5)
#loc333 = loc(fused[#loc1, #loc2])
#loc334 = loc(fused[#loc3, #loc4])
#loc335 = loc(fused[#loc6, #loc7])
#loc336 = loc(fused[#loc8, #loc9])
#loc337 = loc(fused[#loc10, #loc11])
#loc338 = loc(fused[#loc12, #loc13])
#loc339 = loc(fused[#loc14, #loc15])
#loc340 = loc(fused[#loc16, #loc17])
#loc341 = loc(fused[#loc18, #loc19])
#loc342 = loc(fused[#loc21, #loc22])
#loc343 = loc(fused[#loc24, #loc25])
#loc344 = loc(fused[#loc26, #loc27])
#loc345 = loc(fused[#loc29, #loc28])
#loc346 = loc(fused[#loc30, #loc31])
#loc347 = loc(fused[#loc33, #loc31])
#loc348 = loc(fused[#loc34, #loc35])
#loc349 = loc(fused[#loc36, #loc37])
#loc350 = loc(fused[#loc38, #loc39])
#loc351 = loc(fused[#loc40, #loc41])
#loc352 = loc(fused[#loc42, #loc43])
#loc353 = loc(fused[#loc44, #loc45])
#loc354 = loc(fused[#loc46, #loc47])
#loc355 = loc(fused[#loc52, #loc53])
#loc356 = loc(fused[#loc54, #loc55])
#loc357 = loc(fused[#loc56, #loc57])
#loc358 = loc(fused[#loc58, #loc55])
#loc359 = loc(fused[#loc60, #loc61])
#loc360 = loc(fused[#loc63, #loc64])
#loc361 = loc(fused[#loc65, #loc66])
#loc362 = loc(fused[#loc69, #loc67])
#loc363 = loc(fused[#loc73, #loc74])
#loc364 = loc(fused[#loc78, #loc79])
#loc365 = loc(fused[#loc80, #loc81])
#loc366 = loc(fused[#loc83, #loc84])
#loc367 = loc(fused[#loc85, #loc86])
#loc368 = loc(fused[#loc87, #loc88])
#loc369 = loc(fused[#loc89, #loc81])
#loc370 = loc(fused[#loc93, #loc94])
#loc371 = loc(fused[#loc97, #loc98])
#loc372 = loc(fused[#loc99, #loc100])
#loc373 = loc(fused[#loc101, #loc102])
#loc374 = loc(fused[#loc104, #loc105])
#loc375 = loc(fused[#loc106, #loc100])
#loc376 = loc(fused[#loc110, #loc108])
#loc377 = loc(fused[#loc115, #loc116])
#loc378 = loc(fused[#loc118, #loc119])
#loc379 = loc(fused[#loc120, #loc121])
#loc380 = loc(fused[#loc122, #loc119])
#loc381 = loc(fused[#loc126, #loc127])
#loc382 = loc(fused[#loc129, #loc127])
#loc383 = loc(fused[#loc130, #loc131])
#loc384 = loc(fused[#loc132, #loc133])
#loc385 = loc(fused[#loc134, #loc135])
#loc386 = loc(fused[#loc137, #loc138])
#loc387 = loc(fused[#loc136, #loc138])
#loc388 = loc(fused[#loc139, #loc140, #loc141, #loc135])
#loc389 = loc(fused[#loc144, #loc145])
#loc390 = loc(fused[#loc146, #loc145])
#loc391 = loc(fused[#loc155, #loc156])
#loc392 = loc(fused[#loc157, #loc158])
#loc393 = loc(fused[#loc160, #loc159])
#loc394 = loc(fused[#loc161, #loc162])
#loc395 = loc(fused[#loc164, #loc162])
#loc396 = loc(fused[#loc165, #loc166])
#loc397 = loc(fused[#loc167, #loc168])
#loc398 = loc(fused[#loc169, #loc170])
#loc399 = loc(fused[#loc171, #loc172])
#loc400 = loc(fused[#loc173, #loc174])
#loc401 = loc(fused[#loc175, #loc176])
#loc402 = loc(fused[#loc177, #loc178])
#loc403 = loc(fused[#loc183, #loc184])
#loc404 = loc(fused[#loc185, #loc186])
#loc405 = loc(fused[#loc187, #loc188])
#loc406 = loc(fused[#loc189, #loc186])
#loc407 = loc(fused[#loc191, #loc192])
#loc408 = loc(fused[#loc194, #loc195])
#loc409 = loc(fused[#loc196, #loc197])
#loc410 = loc(fused[#loc199, #loc198])
#loc411 = loc(fused[#loc202, #loc203])
#loc412 = loc(fused[#loc206, #loc207])
#loc413 = loc(fused[#loc208, #loc209])
#loc414 = loc(fused[#loc211, #loc212])
#loc415 = loc(fused[#loc213, #loc214])
#loc416 = loc(fused[#loc215, #loc216])
#loc417 = loc(fused[#loc217, #loc209])
#loc418 = loc(fused[#loc221, #loc222])
#loc419 = loc(fused[#loc225, #loc226])
#loc420 = loc(fused[#loc227, #loc228])
#loc421 = loc(fused[#loc229, #loc230])
#loc422 = loc(fused[#loc232, #loc233])
#loc423 = loc(fused[#loc234, #loc228])
#loc424 = loc(fused[#loc238, #loc236])
#loc425 = loc(fused[#loc243, #loc244])
#loc426 = loc(fused[#loc246, #loc247])
#loc427 = loc(fused[#loc248, #loc249])
#loc428 = loc(fused[#loc250, #loc247])
#loc429 = loc(fused[#loc254, #loc255])
#loc430 = loc(fused[#loc257, #loc255])
#loc431 = loc(fused[#loc258, #loc259])
#loc432 = loc(fused[#loc260, #loc261])
#loc433 = loc(fused[#loc262, #loc263])
#loc434 = loc(fused[#loc265, #loc266])
#loc435 = loc(fused[#loc264, #loc266])
#loc436 = loc(fused[#loc268, #loc269])
#loc437 = loc(fused[#loc270, #loc271, #loc272, #loc263])
#loc438 = loc(fused[#loc275, #loc276])
#loc439 = loc(fused[#loc277, #loc276])
#loc440 = loc(fused[#loc286, #loc287])
#loc441 = loc(fused[#loc288, #loc289])
#loc442 = loc(fused[#loc291, #loc290])
#loc443 = loc(fused[#loc292, #loc293])
#loc444 = loc(fused[#loc295, #loc293])
#loc445 = loc(fused[#loc297, #loc296])
#loc446 = loc(fused[#loc299, #loc300])
#loc447 = loc(fused[#loc302, #loc300])
#loc448 = loc(fused[#loc303, #loc304])
#loc449 = loc(fused[#loc305, #loc306])
#loc450 = loc(fused[#loc307, #loc308])
#loc451 = loc(fused[#loc310, #loc311])
#loc452 = loc(fused[#loc309, #loc311])
#loc453 = loc(fused[#loc312, #loc313, #loc314, #loc308])
#loc454 = loc(fused[#loc317, #loc318])
#loc455 = loc(fused[#loc319, #loc318])
#loc456 = loc(fused[#loc329, #loc330])
