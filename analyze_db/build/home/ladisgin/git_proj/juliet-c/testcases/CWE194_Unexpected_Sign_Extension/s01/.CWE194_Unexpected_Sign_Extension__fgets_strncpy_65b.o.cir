!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":24:66)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":24:72)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":47:70)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":47:76)
#loc78 = loc(fused[#loc7, #loc8])
#loc89 = loc(fused[#loc42, #loc43])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s01/CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc75)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc76)
  cir.func @CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b_badSink(%arg0: !s16i loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc79)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc80)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc78)
    cir.store %arg0, %2 : !s16i, !cir.ptr<!s16i> loc(#loc13)
    cir.br ^bb1 loc(#loc81)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc80)
    cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc80)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc16)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc16)
    %6 = cir.const #cir.int<65> : !s32i loc(#loc17)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc18)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc18)
    cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc82)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc22)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc23)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc83)
    cir.br ^bb2 loc(#loc84)
  ^bb2:  // pred: ^bb1
    %18 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc28)
    %19 = cir.cast(integral, %18 : !s16i), !s32i loc(#loc28)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc85)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc86)
  ^bb3:  // pred: ^bb2
    %22 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc31)
    %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
    %25 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc34)
    %26 = cir.cast(integral, %25 : !s16i), !u64i loc(#loc34)
    %27 = cir.call @strncpy(%23, %24, %26) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc31)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc35)
    %30 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc36)
    %31 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s16i), !cir.ptr<!s8i> loc(#loc37)
    cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc87)
    cir.br ^bb4 loc(#loc27)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc27)
  ^bb5:  // pred: ^bb4
    %33 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    cir.br ^bb6 loc(#loc15)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc77)
  cir.func @CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b_goodG2BSink(%arg0: !s16i loc(fused[#loc42, #loc43])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc90)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc91)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc89)
    cir.store %arg0, %2 : !s16i, !cir.ptr<!s16i> loc(#loc48)
    cir.br ^bb1 loc(#loc92)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc91)
    cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc91)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc51)
    %6 = cir.const #cir.int<65> : !s32i loc(#loc52)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc53)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc53)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc53)
    cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc93)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc57)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc58)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc60)
    cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc94)
    cir.br ^bb2 loc(#loc95)
  ^bb2:  // pred: ^bb1
    %18 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc63)
    %19 = cir.cast(integral, %18 : !s16i), !s32i loc(#loc63)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc64)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc96)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc97)
  ^bb3:  // pred: ^bb2
    %22 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc66)
    %23 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
    %25 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc69)
    %26 = cir.cast(integral, %25 : !s16i), !u64i loc(#loc69)
    %27 = cir.call @strncpy(%23, %24, %26) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc66)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc70)
    %30 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc71)
    %31 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s16i), !cir.ptr<!s8i> loc(#loc72)
    cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc98)
    cir.br ^bb4 loc(#loc62)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc62)
  ^bb5:  // pred: ^bb4
    %33 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    cir.br ^bb6 loc(#loc50)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc41)
  } loc(#loc88)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s01/CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":0:0)
#loc1 = loc("/usr/include/string.h":144:1)
#loc2 = loc("/usr/include/string.h":146:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":24:1)
#loc6 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":40:1)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":27:9)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":27:24)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":28:9)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":28:26)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":25:1)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":26:5)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":39:5)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":29:16)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":29:24)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":29:29)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":29:33)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":29:9)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":29:34)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":30:25)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":30:16)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":30:20)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":30:9)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":31:9)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":37:9)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":31:13)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":31:20)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":32:9)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":35:13)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":35:21)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":35:27)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":35:35)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":36:26)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":36:18)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":36:13)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":38:19)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":38:9)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":47:1)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":63:1)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":50:9)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":50:24)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":51:9)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":51:26)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":48:1)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":49:5)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":62:5)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":52:16)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":52:24)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":52:29)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":52:33)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":52:9)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":52:34)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":53:25)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":53:16)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":53:20)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":53:9)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":54:9)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":60:9)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":54:13)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":54:20)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":55:9)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":58:13)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":58:21)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":58:27)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":58:35)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":59:26)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":59:18)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":59:13)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":61:19)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__fgets_strncpy_65b.c":61:9)
#loc75 = loc(fused[#loc1, #loc2])
#loc76 = loc(fused[#loc3, #loc4])
#loc77 = loc(fused[#loc5, #loc6])
#loc79 = loc(fused[#loc9, #loc10])
#loc80 = loc(fused[#loc11, #loc12])
#loc81 = loc(fused[#loc14, #loc15])
#loc82 = loc(fused[#loc20, #loc21])
#loc83 = loc(fused[#loc25, #loc22])
#loc84 = loc(fused[#loc26, #loc27])
#loc85 = loc(fused[#loc28, #loc29])
#loc86 = loc(fused[#loc30, #loc27])
#loc87 = loc(fused[#loc37, #loc35])
#loc88 = loc(fused[#loc40, #loc41])
#loc90 = loc(fused[#loc44, #loc45])
#loc91 = loc(fused[#loc46, #loc47])
#loc92 = loc(fused[#loc49, #loc50])
#loc93 = loc(fused[#loc55, #loc56])
#loc94 = loc(fused[#loc60, #loc57])
#loc95 = loc(fused[#loc61, #loc62])
#loc96 = loc(fused[#loc63, #loc64])
#loc97 = loc(fused[#loc65, #loc62])
#loc98 = loc(fused[#loc72, #loc70])
