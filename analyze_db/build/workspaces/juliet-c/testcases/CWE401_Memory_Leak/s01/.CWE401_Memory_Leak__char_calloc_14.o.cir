!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_14.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" external @globalFive : !s32i {alignment = 4 : i64} loc(#loc186)
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc187)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc188)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc190)
  cir.func no_proto @CWE401_Memory_Leak__char_calloc_14_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc192)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc16)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc193)
    cir.scope {
      %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc186)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc20)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc21)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc195)
      cir.if %5 {
        %6 = cir.get_global @calloc : !cir.ptr<!cir.func<(!u64i, !u64i) -> !cir.ptr<!void>>> loc(#loc23)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc24)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc24)
        %9 = cir.const #cir.int<1> : !u64i loc(#loc197)
        %10 = cir.call @calloc(%8, %9) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc23)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc198)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
        cir.scope {
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
          %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc32)
          %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc201)
          cir.if %21 {
            %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc34)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc35)
            %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc36)
            cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
          } loc(#loc202)
        } loc(#loc200)
        %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc37)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
        %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc9)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc9)
        %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc37)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc40)
      } loc(#loc196)
    } loc(#loc194)
    cir.scope {
      %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc186)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc43)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc44)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc204)
      cir.if %5 {
      } loc(#loc205)
    } loc(#loc203)
    cir.return loc(#loc13)
  } loc(#loc191)
  cir.func no_proto @CWE401_Memory_Leak__char_calloc_14_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc207)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc48)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc208)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc50)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc209)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc52)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc210)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc54)
    cir.return loc(#loc47)
  } loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc56)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc211)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc213)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc63)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
    cir.scope {
      %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc186)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc67)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc68)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc216)
      cir.if %5 {
        %6 = cir.get_global @calloc : !cir.ptr<!cir.func<(!u64i, !u64i) -> !cir.ptr<!void>>> loc(#loc70)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc71)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc71)
        %9 = cir.const #cir.int<1> : !u64i loc(#loc218)
        %10 = cir.call @calloc(%8, %9) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc70)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc219)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
        cir.scope {
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
          %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc79)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc79)
          %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc222)
          cir.if %21 {
            %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc81)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc82)
            %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc83)
            cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc81)
          } loc(#loc223)
        } loc(#loc221)
        %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc84)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
        %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc86)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc86)
        %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc84)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc88)
      } loc(#loc217)
    } loc(#loc215)
    cir.scope {
      %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc186)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc92)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc225)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc56)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc56)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc96)
      } else {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc97)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc97)
      } loc(#loc226)
    } loc(#loc224)
    cir.return loc(#loc60)
  } loc(#loc212)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc228)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc103)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
    cir.scope {
      %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc186)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc107)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc108)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc231)
      cir.if %5 {
        %6 = cir.get_global @calloc : !cir.ptr<!cir.func<(!u64i, !u64i) -> !cir.ptr<!void>>> loc(#loc110)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc111)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc111)
        %9 = cir.const #cir.int<1> : !u64i loc(#loc233)
        %10 = cir.call @calloc(%8, %9) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc110)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc234)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc235)
        cir.scope {
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
          %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc119)
          %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc237)
          cir.if %21 {
            %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc121)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc122)
            %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc123)
            cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc121)
          } loc(#loc238)
        } loc(#loc236)
        %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc124)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
        %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc126)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc126)
        %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc124)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc128)
      } loc(#loc232)
    } loc(#loc230)
    cir.scope {
      %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc186)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc131)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc132)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc240)
      cir.if %5 {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc134)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc134)
      } loc(#loc241)
    } loc(#loc239)
    cir.return loc(#loc100)
  } loc(#loc227)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc243)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc140)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc244)
    cir.scope {
      %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc186)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc144)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc145)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc246)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc149)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc149)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc150)
      } else {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc151)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc151)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc151)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc151)
        %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc151)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc151)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc151)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc248)
        %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc153)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
        %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc155)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc155)
        %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc153)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
        cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc157)
      } loc(#loc247)
    } loc(#loc245)
    cir.scope {
      %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc186)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc160)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc161)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc250)
      cir.if %5 {
      } loc(#loc251)
    } loc(#loc249)
    cir.return loc(#loc137)
  } loc(#loc242)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc253)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc167)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc254)
    cir.scope {
      %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc186)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc171)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc172)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc256)
      cir.if %5 {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc174)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc174)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc174)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc174)
        %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc174)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc174)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc174)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc258)
        %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc176)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
        %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc178)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc178)
        %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc176)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
        cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc180)
      } loc(#loc257)
    } loc(#loc255)
    cir.scope {
      %2 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc186)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc183)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc184)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc260)
      cir.if %5 {
      } loc(#loc261)
    } loc(#loc259)
    cir.return loc(#loc164)
  } loc(#loc252)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_14.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":118:12)
#loc3 = loc("/usr/include/stdlib.h":675:1)
#loc4 = loc("/usr/include/stdlib.h":676:14)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE401_Memory_Leak__char_calloc_14.c":34:22)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE401_Memory_Leak__char_calloc_14.c":24:1)
#loc13 = loc("CWE401_Memory_Leak__char_calloc_14.c":42:1)
#loc14 = loc("CWE401_Memory_Leak__char_calloc_14.c":26:5)
#loc15 = loc("CWE401_Memory_Leak__char_calloc_14.c":26:12)
#loc16 = loc("CWE401_Memory_Leak__char_calloc_14.c":27:12)
#loc17 = loc("CWE401_Memory_Leak__char_calloc_14.c":27:5)
#loc18 = loc("CWE401_Memory_Leak__char_calloc_14.c":28:5)
#loc19 = loc("CWE401_Memory_Leak__char_calloc_14.c":36:5)
#loc20 = loc("CWE401_Memory_Leak__char_calloc_14.c":28:8)
#loc21 = loc("CWE401_Memory_Leak__char_calloc_14.c":28:20)
#loc22 = loc("CWE401_Memory_Leak__char_calloc_14.c":29:5)
#loc23 = loc("CWE401_Memory_Leak__char_calloc_14.c":31:24)
#loc24 = loc("CWE401_Memory_Leak__char_calloc_14.c":31:31)
#loc25 = loc("CWE401_Memory_Leak__char_calloc_14.c":31:36)
#loc26 = loc("CWE401_Memory_Leak__char_calloc_14.c":31:47)
#loc27 = loc("CWE401_Memory_Leak__char_calloc_14.c":31:48)
#loc28 = loc("CWE401_Memory_Leak__char_calloc_14.c":31:9)
#loc29 = loc("CWE401_Memory_Leak__char_calloc_14.c":32:9)
#loc30 = loc("CWE401_Memory_Leak__char_calloc_14.c":32:37)
#loc31 = loc("CWE401_Memory_Leak__char_calloc_14.c":32:13)
#loc32 = loc("CWE401_Memory_Leak__char_calloc_14.c":32:21)
#loc33 = loc("CWE401_Memory_Leak__char_calloc_14.c":32:27)
#loc34 = loc("CWE401_Memory_Leak__char_calloc_14.c":32:28)
#loc35 = loc("CWE401_Memory_Leak__char_calloc_14.c":32:34)
#loc36 = loc("CWE401_Memory_Leak__char_calloc_14.c":32:33)
#loc37 = loc("CWE401_Memory_Leak__char_calloc_14.c":34:9)
#loc38 = loc("CWE401_Memory_Leak__char_calloc_14.c":34:16)
#loc39 = loc("CWE401_Memory_Leak__char_calloc_14.c":35:19)
#loc40 = loc("CWE401_Memory_Leak__char_calloc_14.c":35:9)
#loc41 = loc("CWE401_Memory_Leak__char_calloc_14.c":37:5)
#loc42 = loc("CWE401_Memory_Leak__char_calloc_14.c":41:5)
#loc43 = loc("CWE401_Memory_Leak__char_calloc_14.c":37:8)
#loc44 = loc("CWE401_Memory_Leak__char_calloc_14.c":37:20)
#loc45 = loc("CWE401_Memory_Leak__char_calloc_14.c":38:5)
#loc46 = loc("CWE401_Memory_Leak__char_calloc_14.c":140:1)
#loc47 = loc("CWE401_Memory_Leak__char_calloc_14.c":146:1)
#loc48 = loc("CWE401_Memory_Leak__char_calloc_14.c":142:5)
#loc49 = loc("CWE401_Memory_Leak__char_calloc_14.c":142:14)
#loc50 = loc("CWE401_Memory_Leak__char_calloc_14.c":143:5)
#loc51 = loc("CWE401_Memory_Leak__char_calloc_14.c":143:14)
#loc52 = loc("CWE401_Memory_Leak__char_calloc_14.c":144:5)
#loc53 = loc("CWE401_Memory_Leak__char_calloc_14.c":144:14)
#loc54 = loc("CWE401_Memory_Leak__char_calloc_14.c":145:5)
#loc55 = loc("CWE401_Memory_Leak__char_calloc_14.c":145:14)
#loc56 = loc("CWE401_Memory_Leak__char_calloc_14.c":65:19)
#loc57 = loc("/usr/include/stdlib.h":687:1)
#loc58 = loc("/usr/include/stdlib.h":687:32)
#loc59 = loc("CWE401_Memory_Leak__char_calloc_14.c":49:1)
#loc60 = loc("CWE401_Memory_Leak__char_calloc_14.c":72:1)
#loc61 = loc("CWE401_Memory_Leak__char_calloc_14.c":51:5)
#loc62 = loc("CWE401_Memory_Leak__char_calloc_14.c":51:12)
#loc63 = loc("CWE401_Memory_Leak__char_calloc_14.c":52:12)
#loc64 = loc("CWE401_Memory_Leak__char_calloc_14.c":52:5)
#loc65 = loc("CWE401_Memory_Leak__char_calloc_14.c":53:5)
#loc66 = loc("CWE401_Memory_Leak__char_calloc_14.c":61:5)
#loc67 = loc("CWE401_Memory_Leak__char_calloc_14.c":53:8)
#loc68 = loc("CWE401_Memory_Leak__char_calloc_14.c":53:20)
#loc69 = loc("CWE401_Memory_Leak__char_calloc_14.c":54:5)
#loc70 = loc("CWE401_Memory_Leak__char_calloc_14.c":56:24)
#loc71 = loc("CWE401_Memory_Leak__char_calloc_14.c":56:31)
#loc72 = loc("CWE401_Memory_Leak__char_calloc_14.c":56:36)
#loc73 = loc("CWE401_Memory_Leak__char_calloc_14.c":56:47)
#loc74 = loc("CWE401_Memory_Leak__char_calloc_14.c":56:48)
#loc75 = loc("CWE401_Memory_Leak__char_calloc_14.c":56:9)
#loc76 = loc("CWE401_Memory_Leak__char_calloc_14.c":57:9)
#loc77 = loc("CWE401_Memory_Leak__char_calloc_14.c":57:37)
#loc78 = loc("CWE401_Memory_Leak__char_calloc_14.c":57:13)
#loc79 = loc("CWE401_Memory_Leak__char_calloc_14.c":57:21)
#loc80 = loc("CWE401_Memory_Leak__char_calloc_14.c":57:27)
#loc81 = loc("CWE401_Memory_Leak__char_calloc_14.c":57:28)
#loc82 = loc("CWE401_Memory_Leak__char_calloc_14.c":57:34)
#loc83 = loc("CWE401_Memory_Leak__char_calloc_14.c":57:33)
#loc84 = loc("CWE401_Memory_Leak__char_calloc_14.c":59:9)
#loc85 = loc("CWE401_Memory_Leak__char_calloc_14.c":59:16)
#loc86 = loc("CWE401_Memory_Leak__char_calloc_14.c":59:22)
#loc87 = loc("CWE401_Memory_Leak__char_calloc_14.c":60:19)
#loc88 = loc("CWE401_Memory_Leak__char_calloc_14.c":60:9)
#loc89 = loc("CWE401_Memory_Leak__char_calloc_14.c":62:5)
#loc90 = loc("CWE401_Memory_Leak__char_calloc_14.c":71:5)
#loc91 = loc("CWE401_Memory_Leak__char_calloc_14.c":62:8)
#loc92 = loc("CWE401_Memory_Leak__char_calloc_14.c":62:20)
#loc93 = loc("CWE401_Memory_Leak__char_calloc_14.c":63:5)
#loc94 = loc("CWE401_Memory_Leak__char_calloc_14.c":66:5)
#loc95 = loc("CWE401_Memory_Leak__char_calloc_14.c":68:5)
#loc96 = loc("CWE401_Memory_Leak__char_calloc_14.c":65:9)
#loc97 = loc("CWE401_Memory_Leak__char_calloc_14.c":70:9)
#loc98 = loc("CWE401_Memory_Leak__char_calloc_14.c":70:14)
#loc99 = loc("CWE401_Memory_Leak__char_calloc_14.c":75:1)
#loc100 = loc("CWE401_Memory_Leak__char_calloc_14.c":93:1)
#loc101 = loc("CWE401_Memory_Leak__char_calloc_14.c":77:5)
#loc102 = loc("CWE401_Memory_Leak__char_calloc_14.c":77:12)
#loc103 = loc("CWE401_Memory_Leak__char_calloc_14.c":78:12)
#loc104 = loc("CWE401_Memory_Leak__char_calloc_14.c":78:5)
#loc105 = loc("CWE401_Memory_Leak__char_calloc_14.c":79:5)
#loc106 = loc("CWE401_Memory_Leak__char_calloc_14.c":87:5)
#loc107 = loc("CWE401_Memory_Leak__char_calloc_14.c":79:8)
#loc108 = loc("CWE401_Memory_Leak__char_calloc_14.c":79:20)
#loc109 = loc("CWE401_Memory_Leak__char_calloc_14.c":80:5)
#loc110 = loc("CWE401_Memory_Leak__char_calloc_14.c":82:24)
#loc111 = loc("CWE401_Memory_Leak__char_calloc_14.c":82:31)
#loc112 = loc("CWE401_Memory_Leak__char_calloc_14.c":82:36)
#loc113 = loc("CWE401_Memory_Leak__char_calloc_14.c":82:47)
#loc114 = loc("CWE401_Memory_Leak__char_calloc_14.c":82:48)
#loc115 = loc("CWE401_Memory_Leak__char_calloc_14.c":82:9)
#loc116 = loc("CWE401_Memory_Leak__char_calloc_14.c":83:9)
#loc117 = loc("CWE401_Memory_Leak__char_calloc_14.c":83:37)
#loc118 = loc("CWE401_Memory_Leak__char_calloc_14.c":83:13)
#loc119 = loc("CWE401_Memory_Leak__char_calloc_14.c":83:21)
#loc120 = loc("CWE401_Memory_Leak__char_calloc_14.c":83:27)
#loc121 = loc("CWE401_Memory_Leak__char_calloc_14.c":83:28)
#loc122 = loc("CWE401_Memory_Leak__char_calloc_14.c":83:34)
#loc123 = loc("CWE401_Memory_Leak__char_calloc_14.c":83:33)
#loc124 = loc("CWE401_Memory_Leak__char_calloc_14.c":85:9)
#loc125 = loc("CWE401_Memory_Leak__char_calloc_14.c":85:16)
#loc126 = loc("CWE401_Memory_Leak__char_calloc_14.c":85:22)
#loc127 = loc("CWE401_Memory_Leak__char_calloc_14.c":86:19)
#loc128 = loc("CWE401_Memory_Leak__char_calloc_14.c":86:9)
#loc129 = loc("CWE401_Memory_Leak__char_calloc_14.c":88:5)
#loc130 = loc("CWE401_Memory_Leak__char_calloc_14.c":92:5)
#loc131 = loc("CWE401_Memory_Leak__char_calloc_14.c":88:8)
#loc132 = loc("CWE401_Memory_Leak__char_calloc_14.c":88:20)
#loc133 = loc("CWE401_Memory_Leak__char_calloc_14.c":89:5)
#loc134 = loc("CWE401_Memory_Leak__char_calloc_14.c":91:9)
#loc135 = loc("CWE401_Memory_Leak__char_calloc_14.c":91:14)
#loc136 = loc("CWE401_Memory_Leak__char_calloc_14.c":96:1)
#loc137 = loc("CWE401_Memory_Leak__char_calloc_14.c":118:1)
#loc138 = loc("CWE401_Memory_Leak__char_calloc_14.c":98:5)
#loc139 = loc("CWE401_Memory_Leak__char_calloc_14.c":98:12)
#loc140 = loc("CWE401_Memory_Leak__char_calloc_14.c":99:12)
#loc141 = loc("CWE401_Memory_Leak__char_calloc_14.c":99:5)
#loc142 = loc("CWE401_Memory_Leak__char_calloc_14.c":100:5)
#loc143 = loc("CWE401_Memory_Leak__char_calloc_14.c":112:5)
#loc144 = loc("CWE401_Memory_Leak__char_calloc_14.c":100:8)
#loc145 = loc("CWE401_Memory_Leak__char_calloc_14.c":100:20)
#loc146 = loc("CWE401_Memory_Leak__char_calloc_14.c":101:5)
#loc147 = loc("CWE401_Memory_Leak__char_calloc_14.c":104:5)
#loc148 = loc("CWE401_Memory_Leak__char_calloc_14.c":106:5)
#loc149 = loc("CWE401_Memory_Leak__char_calloc_14.c":103:19)
#loc150 = loc("CWE401_Memory_Leak__char_calloc_14.c":103:9)
#loc151 = loc("CWE401_Memory_Leak__char_calloc_14.c":108:24)
#loc152 = loc("CWE401_Memory_Leak__char_calloc_14.c":108:9)
#loc153 = loc("CWE401_Memory_Leak__char_calloc_14.c":110:9)
#loc154 = loc("CWE401_Memory_Leak__char_calloc_14.c":110:16)
#loc155 = loc("CWE401_Memory_Leak__char_calloc_14.c":110:22)
#loc156 = loc("CWE401_Memory_Leak__char_calloc_14.c":111:19)
#loc157 = loc("CWE401_Memory_Leak__char_calloc_14.c":111:9)
#loc158 = loc("CWE401_Memory_Leak__char_calloc_14.c":113:5)
#loc159 = loc("CWE401_Memory_Leak__char_calloc_14.c":117:5)
#loc160 = loc("CWE401_Memory_Leak__char_calloc_14.c":113:8)
#loc161 = loc("CWE401_Memory_Leak__char_calloc_14.c":113:20)
#loc162 = loc("CWE401_Memory_Leak__char_calloc_14.c":114:5)
#loc163 = loc("CWE401_Memory_Leak__char_calloc_14.c":121:1)
#loc164 = loc("CWE401_Memory_Leak__char_calloc_14.c":138:1)
#loc165 = loc("CWE401_Memory_Leak__char_calloc_14.c":123:5)
#loc166 = loc("CWE401_Memory_Leak__char_calloc_14.c":123:12)
#loc167 = loc("CWE401_Memory_Leak__char_calloc_14.c":124:12)
#loc168 = loc("CWE401_Memory_Leak__char_calloc_14.c":124:5)
#loc169 = loc("CWE401_Memory_Leak__char_calloc_14.c":125:5)
#loc170 = loc("CWE401_Memory_Leak__char_calloc_14.c":132:5)
#loc171 = loc("CWE401_Memory_Leak__char_calloc_14.c":125:8)
#loc172 = loc("CWE401_Memory_Leak__char_calloc_14.c":125:20)
#loc173 = loc("CWE401_Memory_Leak__char_calloc_14.c":126:5)
#loc174 = loc("CWE401_Memory_Leak__char_calloc_14.c":128:24)
#loc175 = loc("CWE401_Memory_Leak__char_calloc_14.c":128:9)
#loc176 = loc("CWE401_Memory_Leak__char_calloc_14.c":130:9)
#loc177 = loc("CWE401_Memory_Leak__char_calloc_14.c":130:16)
#loc178 = loc("CWE401_Memory_Leak__char_calloc_14.c":130:22)
#loc179 = loc("CWE401_Memory_Leak__char_calloc_14.c":131:19)
#loc180 = loc("CWE401_Memory_Leak__char_calloc_14.c":131:9)
#loc181 = loc("CWE401_Memory_Leak__char_calloc_14.c":133:5)
#loc182 = loc("CWE401_Memory_Leak__char_calloc_14.c":137:5)
#loc183 = loc("CWE401_Memory_Leak__char_calloc_14.c":133:8)
#loc184 = loc("CWE401_Memory_Leak__char_calloc_14.c":133:20)
#loc185 = loc("CWE401_Memory_Leak__char_calloc_14.c":134:5)
#loc186 = loc(fused[#loc1, #loc2])
#loc187 = loc(fused[#loc3, #loc4])
#loc188 = loc(fused[#loc5, #loc6])
#loc189 = loc(fused[#loc7, #loc8])
#loc190 = loc(fused[#loc10, #loc11])
#loc191 = loc(fused[#loc12, #loc13])
#loc192 = loc(fused[#loc14, #loc15])
#loc193 = loc(fused[#loc17, #loc16])
#loc194 = loc(fused[#loc18, #loc19])
#loc195 = loc(fused[#loc20, #loc21])
#loc196 = loc(fused[#loc22, #loc19])
#loc197 = loc(fused[#loc25, #loc26])
#loc198 = loc(fused[#loc23, #loc27])
#loc199 = loc(fused[#loc28, #loc27])
#loc200 = loc(fused[#loc29, #loc30])
#loc201 = loc(fused[#loc31, #loc32])
#loc202 = loc(fused[#loc33, #loc30])
#loc203 = loc(fused[#loc41, #loc42])
#loc204 = loc(fused[#loc43, #loc44])
#loc205 = loc(fused[#loc45, #loc42])
#loc206 = loc(fused[#loc46, #loc47])
#loc207 = loc(fused[#loc48, #loc49])
#loc208 = loc(fused[#loc50, #loc51])
#loc209 = loc(fused[#loc52, #loc53])
#loc210 = loc(fused[#loc54, #loc55])
#loc211 = loc(fused[#loc57, #loc58])
#loc212 = loc(fused[#loc59, #loc60])
#loc213 = loc(fused[#loc61, #loc62])
#loc214 = loc(fused[#loc64, #loc63])
#loc215 = loc(fused[#loc65, #loc66])
#loc216 = loc(fused[#loc67, #loc68])
#loc217 = loc(fused[#loc69, #loc66])
#loc218 = loc(fused[#loc72, #loc73])
#loc219 = loc(fused[#loc70, #loc74])
#loc220 = loc(fused[#loc75, #loc74])
#loc221 = loc(fused[#loc76, #loc77])
#loc222 = loc(fused[#loc78, #loc79])
#loc223 = loc(fused[#loc80, #loc77])
#loc224 = loc(fused[#loc89, #loc90])
#loc225 = loc(fused[#loc91, #loc92])
#loc226 = loc(fused[#loc93, #loc94, #loc95, #loc90])
#loc227 = loc(fused[#loc99, #loc100])
#loc228 = loc(fused[#loc101, #loc102])
#loc229 = loc(fused[#loc104, #loc103])
#loc230 = loc(fused[#loc105, #loc106])
#loc231 = loc(fused[#loc107, #loc108])
#loc232 = loc(fused[#loc109, #loc106])
#loc233 = loc(fused[#loc112, #loc113])
#loc234 = loc(fused[#loc110, #loc114])
#loc235 = loc(fused[#loc115, #loc114])
#loc236 = loc(fused[#loc116, #loc117])
#loc237 = loc(fused[#loc118, #loc119])
#loc238 = loc(fused[#loc120, #loc117])
#loc239 = loc(fused[#loc129, #loc130])
#loc240 = loc(fused[#loc131, #loc132])
#loc241 = loc(fused[#loc133, #loc130])
#loc242 = loc(fused[#loc136, #loc137])
#loc243 = loc(fused[#loc138, #loc139])
#loc244 = loc(fused[#loc141, #loc140])
#loc245 = loc(fused[#loc142, #loc143])
#loc246 = loc(fused[#loc144, #loc145])
#loc247 = loc(fused[#loc146, #loc147, #loc148, #loc143])
#loc248 = loc(fused[#loc152, #loc151])
#loc249 = loc(fused[#loc158, #loc159])
#loc250 = loc(fused[#loc160, #loc161])
#loc251 = loc(fused[#loc162, #loc159])
#loc252 = loc(fused[#loc163, #loc164])
#loc253 = loc(fused[#loc165, #loc166])
#loc254 = loc(fused[#loc168, #loc167])
#loc255 = loc(fused[#loc169, #loc170])
#loc256 = loc(fused[#loc171, #loc172])
#loc257 = loc(fused[#loc173, #loc170])
#loc258 = loc(fused[#loc175, #loc174])
#loc259 = loc(fused[#loc181, #loc182])
#loc260 = loc(fused[#loc183, #loc184])
#loc261 = loc(fused[#loc185, #loc182])
