!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_timespec = !cir.record<struct "timespec" {!s64i, !s64i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_stat = !cir.record<struct "stat" {!u64i, !u64i, !u64i, !u32i, !u32i, !u32i, !s32i, !u64i, !s64i, !s64i, !s64i, !ty_timespec, !ty_timespec, !ty_timespec, !cir.array<!s64i x 3>}>
module @"/workspaces/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc168)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc169)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc171)
  cir.func private @stat(!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc172)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc173)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc174)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc176)
  cir.func no_proto @CWE367_TOC_TOU__stat_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc178)
    %1 = cir.alloca !ty_stat, !cir.ptr<!ty_stat>, ["statBuffer"] {alignment = 8 : i64} loc(#loc179)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc180)
    cir.goto "sink" loc(#loc181)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc31)
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc178)
    cir.store %3, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc178)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc32)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.scope {
      %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc36)
      %11 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc169)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc37)
      %13 = cir.call @fgets(%9, %10, %12) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc38)
      %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
      %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc183)
      cir.if %16 {
        %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
        %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
        cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc41)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc42)
        %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc42)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc43)
        %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
        %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc44)
        cir.store %20, %23 : !s8i, !cir.ptr<!s8i> loc(#loc185)
      } loc(#loc184)
    } loc(#loc182)
    cir.scope {
      %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc47)
      %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
      %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc47)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc49)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc49)
      %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc187)
      cir.if %14 {
        %15 = cir.const #cir.int<0> : !s32i loc(#loc51)
        %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc51)
        %17 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc52)
        %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
        %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc52)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc54)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc54)
        %22 = cir.binop(sub, %19, %21) : !u64i loc(#loc189)
        %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
        %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !u64i), !cir.ptr<!s8i> loc(#loc55)
        cir.store %16, %24 : !s8i, !cir.ptr<!s8i> loc(#loc190)
      } loc(#loc188)
    } loc(#loc186)
    cir.scope {
      %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
      %10 = cir.call @stat(%9, %1) : (!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc59)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc60)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc61)
      %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc192)
      cir.if %13 {
        %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc63)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc64)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc63)
      } loc(#loc193)
    } loc(#loc191)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
    %7 = cir.const #cir.int<2> : !s32i loc(#loc66)
    %8 = cir.call @open(%6, %7) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc67)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    cir.scope {
      %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc72)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc73)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc74)
      %12 = cir.cmp(eq, %9, %11) : !s32i, !cir.bool loc(#loc196)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc76)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc77)
        cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc76)
      } loc(#loc197)
    } loc(#loc195)
    cir.scope {
      %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc80)
      %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
      %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
      %13 = cir.const #cir.int<11> : !u64i loc(#loc199)
      %14 = cir.call @write(%9, %12, %13) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc83)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc84)
      %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc85)
      %17 = cir.cast(integral, %16 : !s32i), !s64i loc(#loc85)
      %18 = cir.cmp(eq, %14, %17) : !s64i, !cir.bool loc(#loc200)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc87)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc88)
        cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc87)
      } loc(#loc201)
    } loc(#loc198)
    cir.scope {
      %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc92)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc93)
      %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc203)
      cir.if %12 {
        %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc95)
        %14 = cir.call @close(%13) : (!s32i) -> !s32i loc(#loc96)
      } loc(#loc204)
    } loc(#loc202)
    cir.return loc(#loc22)
  } loc(#loc177)
  cir.func no_proto @CWE367_TOC_TOU__stat_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc206)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc99)
    cir.return loc(#loc98)
  } loc(#loc205)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc101)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc208)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc209)
    cir.goto "sink" loc(#loc210)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc110)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc208)
    cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc208)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc111)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    cir.scope {
      %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc114)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc115)
      %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc169)
      %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc116)
      %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc117)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc118)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc212)
      cir.if %15 {
        %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc120)
        %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc120)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc121)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc122)
        %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc122)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc123)
        %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
        %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc124)
        cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc214)
      } loc(#loc213)
    } loc(#loc211)
    cir.scope {
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc127)
      %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc128)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc127)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc129)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc129)
      %13 = cir.cmp(gt, %10, %12) : !u64i, !cir.bool loc(#loc216)
      cir.if %13 {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc131)
        %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc131)
        %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc132)
        %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc133)
        %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc132)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc134)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc134)
        %21 = cir.binop(sub, %18, %20) : !u64i loc(#loc218)
        %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
        %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc135)
        cir.store %15, %23 : !s8i, !cir.ptr<!s8i> loc(#loc219)
      } loc(#loc217)
    } loc(#loc215)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc136)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc137)
    %7 = cir.call @open(%5, %6) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc138)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    cir.scope {
      %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc143)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc144)
      %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc145)
      %11 = cir.cmp(eq, %8, %10) : !s32i, !cir.bool loc(#loc222)
      cir.if %11 {
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc147)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc148)
        cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc147)
      } loc(#loc223)
    } loc(#loc221)
    cir.scope {
      %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc151)
      %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc101)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc101)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc101)
      %12 = cir.const #cir.int<12> : !u64i loc(#loc225)
      %13 = cir.call @write(%8, %11, %12) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc154)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc155)
      %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc156)
      %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc156)
      %17 = cir.cmp(eq, %13, %16) : !s64i, !cir.bool loc(#loc226)
      cir.if %17 {
        %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc158)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc159)
        cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc158)
      } loc(#loc227)
    } loc(#loc224)
    cir.scope {
      %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc162)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc163)
      %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc164)
      %11 = cir.cmp(ne, %8, %10) : !s32i, !cir.bool loc(#loc229)
      cir.if %11 {
        %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc166)
        %13 = cir.call @close(%12) : (!s32i) -> !s32i loc(#loc167)
      } loc(#loc230)
    } loc(#loc228)
    cir.return loc(#loc103)
  } loc(#loc207)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__stat_18.c":47:23)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/stat.h":205:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/stat.h":206:43)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__stat_18.c":65:29)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__stat_18.c":37:1)
#loc22 = loc("CWE367_TOC_TOU__stat_18.c":74:1)
#loc23 = loc("CWE367_TOC_TOU__stat_18.c":42:9)
#loc24 = loc("CWE367_TOC_TOU__stat_18.c":42:30)
#loc25 = loc("CWE367_TOC_TOU__stat_18.c":43:9)
#loc26 = loc("CWE367_TOC_TOU__stat_18.c":43:21)
#loc27 = loc("CWE367_TOC_TOU__stat_18.c":44:9)
#loc28 = loc("CWE367_TOC_TOU__stat_18.c":44:25)
#loc29 = loc("CWE367_TOC_TOU__stat_18.c":39:5)
#loc30 = loc("CWE367_TOC_TOU__stat_18.c":39:10)
#loc31 = loc("CWE367_TOC_TOU__stat_18.c":40:1)
#loc32 = loc("CWE367_TOC_TOU__stat_18.c":44:24)
#loc33 = loc("CWE367_TOC_TOU__stat_18.c":45:9)
#loc34 = loc("CWE367_TOC_TOU__stat_18.c":50:9)
#loc35 = loc("CWE367_TOC_TOU__stat_18.c":45:19)
#loc36 = loc("CWE367_TOC_TOU__stat_18.c":45:29)
#loc37 = loc("CWE367_TOC_TOU__stat_18.c":45:34)
#loc38 = loc("CWE367_TOC_TOU__stat_18.c":45:13)
#loc39 = loc("CWE367_TOC_TOU__stat_18.c":45:44)
#loc40 = loc("CWE367_TOC_TOU__stat_18.c":46:9)
#loc41 = loc("CWE367_TOC_TOU__stat_18.c":47:13)
#loc42 = loc("CWE367_TOC_TOU__stat_18.c":49:27)
#loc43 = loc("CWE367_TOC_TOU__stat_18.c":49:22)
#loc44 = loc("CWE367_TOC_TOU__stat_18.c":49:13)
#loc45 = loc("CWE367_TOC_TOU__stat_18.c":51:9)
#loc46 = loc("CWE367_TOC_TOU__stat_18.c":54:9)
#loc47 = loc("CWE367_TOC_TOU__stat_18.c":51:13)
#loc48 = loc("CWE367_TOC_TOU__stat_18.c":51:20)
#loc49 = loc("CWE367_TOC_TOU__stat_18.c":51:32)
#loc50 = loc("CWE367_TOC_TOU__stat_18.c":52:9)
#loc51 = loc("CWE367_TOC_TOU__stat_18.c":53:44)
#loc52 = loc("CWE367_TOC_TOU__stat_18.c":53:22)
#loc53 = loc("CWE367_TOC_TOU__stat_18.c":53:29)
#loc54 = loc("CWE367_TOC_TOU__stat_18.c":53:39)
#loc55 = loc("CWE367_TOC_TOU__stat_18.c":53:13)
#loc56 = loc("CWE367_TOC_TOU__stat_18.c":56:9)
#loc57 = loc("CWE367_TOC_TOU__stat_18.c":59:9)
#loc58 = loc("CWE367_TOC_TOU__stat_18.c":56:18)
#loc59 = loc("CWE367_TOC_TOU__stat_18.c":56:13)
#loc60 = loc("CWE367_TOC_TOU__stat_18.c":56:45)
#loc61 = loc("CWE367_TOC_TOU__stat_18.c":56:44)
#loc62 = loc("CWE367_TOC_TOU__stat_18.c":57:9)
#loc63 = loc("CWE367_TOC_TOU__stat_18.c":58:13)
#loc64 = loc("CWE367_TOC_TOU__stat_18.c":58:18)
#loc65 = loc("CWE367_TOC_TOU__stat_18.c":60:26)
#loc66 = loc("CWE367_TOC_TOU__stat_18.c":60:36)
#loc67 = loc("CWE367_TOC_TOU__stat_18.c":60:21)
#loc68 = loc("CWE367_TOC_TOU__stat_18.c":60:9)
#loc69 = loc("CWE367_TOC_TOU__stat_18.c":60:42)
#loc70 = loc("CWE367_TOC_TOU__stat_18.c":61:9)
#loc71 = loc("CWE367_TOC_TOU__stat_18.c":64:9)
#loc72 = loc("CWE367_TOC_TOU__stat_18.c":61:13)
#loc73 = loc("CWE367_TOC_TOU__stat_18.c":61:26)
#loc74 = loc("CWE367_TOC_TOU__stat_18.c":61:25)
#loc75 = loc("CWE367_TOC_TOU__stat_18.c":62:9)
#loc76 = loc("CWE367_TOC_TOU__stat_18.c":63:13)
#loc77 = loc("CWE367_TOC_TOU__stat_18.c":63:18)
#loc78 = loc("CWE367_TOC_TOU__stat_18.c":65:9)
#loc79 = loc("CWE367_TOC_TOU__stat_18.c":68:9)
#loc80 = loc("CWE367_TOC_TOU__stat_18.c":65:19)
#loc81 = loc("CWE367_TOC_TOU__stat_18.c":65:46)
#loc82 = loc("CWE367_TOC_TOU__stat_18.c":65:68)
#loc83 = loc("CWE367_TOC_TOU__stat_18.c":65:13)
#loc84 = loc("CWE367_TOC_TOU__stat_18.c":65:75)
#loc85 = loc("CWE367_TOC_TOU__stat_18.c":65:74)
#loc86 = loc("CWE367_TOC_TOU__stat_18.c":66:9)
#loc87 = loc("CWE367_TOC_TOU__stat_18.c":67:13)
#loc88 = loc("CWE367_TOC_TOU__stat_18.c":67:18)
#loc89 = loc("CWE367_TOC_TOU__stat_18.c":69:9)
#loc90 = loc("CWE367_TOC_TOU__stat_18.c":72:9)
#loc91 = loc("CWE367_TOC_TOU__stat_18.c":69:13)
#loc92 = loc("CWE367_TOC_TOU__stat_18.c":69:26)
#loc93 = loc("CWE367_TOC_TOU__stat_18.c":69:25)
#loc94 = loc("CWE367_TOC_TOU__stat_18.c":70:9)
#loc95 = loc("CWE367_TOC_TOU__stat_18.c":71:19)
#loc96 = loc("CWE367_TOC_TOU__stat_18.c":71:13)
#loc97 = loc("CWE367_TOC_TOU__stat_18.c":115:1)
#loc98 = loc("CWE367_TOC_TOU__stat_18.c":118:1)
#loc99 = loc("CWE367_TOC_TOU__stat_18.c":117:5)
#loc100 = loc("CWE367_TOC_TOU__stat_18.c":117:11)
#loc101 = loc("CWE367_TOC_TOU__stat_18.c":104:29)
#loc102 = loc("CWE367_TOC_TOU__stat_18.c":81:1)
#loc103 = loc("CWE367_TOC_TOU__stat_18.c":113:1)
#loc104 = loc("CWE367_TOC_TOU__stat_18.c":86:9)
#loc105 = loc("CWE367_TOC_TOU__stat_18.c":86:30)
#loc106 = loc("CWE367_TOC_TOU__stat_18.c":87:9)
#loc107 = loc("CWE367_TOC_TOU__stat_18.c":87:25)
#loc108 = loc("CWE367_TOC_TOU__stat_18.c":83:5)
#loc109 = loc("CWE367_TOC_TOU__stat_18.c":83:10)
#loc110 = loc("CWE367_TOC_TOU__stat_18.c":84:1)
#loc111 = loc("CWE367_TOC_TOU__stat_18.c":87:24)
#loc112 = loc("CWE367_TOC_TOU__stat_18.c":88:9)
#loc113 = loc("CWE367_TOC_TOU__stat_18.c":93:9)
#loc114 = loc("CWE367_TOC_TOU__stat_18.c":88:19)
#loc115 = loc("CWE367_TOC_TOU__stat_18.c":88:29)
#loc116 = loc("CWE367_TOC_TOU__stat_18.c":88:34)
#loc117 = loc("CWE367_TOC_TOU__stat_18.c":88:13)
#loc118 = loc("CWE367_TOC_TOU__stat_18.c":88:44)
#loc119 = loc("CWE367_TOC_TOU__stat_18.c":89:9)
#loc120 = loc("CWE367_TOC_TOU__stat_18.c":90:23)
#loc121 = loc("CWE367_TOC_TOU__stat_18.c":90:13)
#loc122 = loc("CWE367_TOC_TOU__stat_18.c":92:27)
#loc123 = loc("CWE367_TOC_TOU__stat_18.c":92:22)
#loc124 = loc("CWE367_TOC_TOU__stat_18.c":92:13)
#loc125 = loc("CWE367_TOC_TOU__stat_18.c":94:9)
#loc126 = loc("CWE367_TOC_TOU__stat_18.c":97:9)
#loc127 = loc("CWE367_TOC_TOU__stat_18.c":94:13)
#loc128 = loc("CWE367_TOC_TOU__stat_18.c":94:20)
#loc129 = loc("CWE367_TOC_TOU__stat_18.c":94:32)
#loc130 = loc("CWE367_TOC_TOU__stat_18.c":95:9)
#loc131 = loc("CWE367_TOC_TOU__stat_18.c":96:44)
#loc132 = loc("CWE367_TOC_TOU__stat_18.c":96:22)
#loc133 = loc("CWE367_TOC_TOU__stat_18.c":96:29)
#loc134 = loc("CWE367_TOC_TOU__stat_18.c":96:39)
#loc135 = loc("CWE367_TOC_TOU__stat_18.c":96:13)
#loc136 = loc("CWE367_TOC_TOU__stat_18.c":99:26)
#loc137 = loc("CWE367_TOC_TOU__stat_18.c":99:36)
#loc138 = loc("CWE367_TOC_TOU__stat_18.c":99:21)
#loc139 = loc("CWE367_TOC_TOU__stat_18.c":99:9)
#loc140 = loc("CWE367_TOC_TOU__stat_18.c":99:42)
#loc141 = loc("CWE367_TOC_TOU__stat_18.c":100:9)
#loc142 = loc("CWE367_TOC_TOU__stat_18.c":103:9)
#loc143 = loc("CWE367_TOC_TOU__stat_18.c":100:13)
#loc144 = loc("CWE367_TOC_TOU__stat_18.c":100:26)
#loc145 = loc("CWE367_TOC_TOU__stat_18.c":100:25)
#loc146 = loc("CWE367_TOC_TOU__stat_18.c":101:9)
#loc147 = loc("CWE367_TOC_TOU__stat_18.c":102:13)
#loc148 = loc("CWE367_TOC_TOU__stat_18.c":102:18)
#loc149 = loc("CWE367_TOC_TOU__stat_18.c":104:9)
#loc150 = loc("CWE367_TOC_TOU__stat_18.c":107:9)
#loc151 = loc("CWE367_TOC_TOU__stat_18.c":104:19)
#loc152 = loc("CWE367_TOC_TOU__stat_18.c":104:47)
#loc153 = loc("CWE367_TOC_TOU__stat_18.c":104:70)
#loc154 = loc("CWE367_TOC_TOU__stat_18.c":104:13)
#loc155 = loc("CWE367_TOC_TOU__stat_18.c":104:77)
#loc156 = loc("CWE367_TOC_TOU__stat_18.c":104:76)
#loc157 = loc("CWE367_TOC_TOU__stat_18.c":105:9)
#loc158 = loc("CWE367_TOC_TOU__stat_18.c":106:13)
#loc159 = loc("CWE367_TOC_TOU__stat_18.c":106:18)
#loc160 = loc("CWE367_TOC_TOU__stat_18.c":108:9)
#loc161 = loc("CWE367_TOC_TOU__stat_18.c":111:9)
#loc162 = loc("CWE367_TOC_TOU__stat_18.c":108:13)
#loc163 = loc("CWE367_TOC_TOU__stat_18.c":108:26)
#loc164 = loc("CWE367_TOC_TOU__stat_18.c":108:25)
#loc165 = loc("CWE367_TOC_TOU__stat_18.c":109:9)
#loc166 = loc("CWE367_TOC_TOU__stat_18.c":110:19)
#loc167 = loc("CWE367_TOC_TOU__stat_18.c":110:13)
#loc168 = loc(fused[#loc1, #loc2])
#loc169 = loc(fused[#loc3, #loc4])
#loc170 = loc(fused[#loc5, #loc6])
#loc171 = loc(fused[#loc8, #loc9])
#loc172 = loc(fused[#loc10, #loc11])
#loc173 = loc(fused[#loc12, #loc13])
#loc174 = loc(fused[#loc14, #loc15])
#loc175 = loc(fused[#loc16, #loc17])
#loc176 = loc(fused[#loc19, #loc20])
#loc177 = loc(fused[#loc21, #loc22])
#loc178 = loc(fused[#loc23, #loc24])
#loc179 = loc(fused[#loc25, #loc26])
#loc180 = loc(fused[#loc27, #loc28])
#loc181 = loc(fused[#loc29, #loc30])
#loc182 = loc(fused[#loc33, #loc34])
#loc183 = loc(fused[#loc38, #loc39])
#loc184 = loc(fused[#loc40, #loc34])
#loc185 = loc(fused[#loc44, #loc42])
#loc186 = loc(fused[#loc45, #loc46])
#loc187 = loc(fused[#loc47, #loc49])
#loc188 = loc(fused[#loc50, #loc46])
#loc189 = loc(fused[#loc52, #loc54])
#loc190 = loc(fused[#loc55, #loc51])
#loc191 = loc(fused[#loc56, #loc57])
#loc192 = loc(fused[#loc59, #loc60])
#loc193 = loc(fused[#loc62, #loc57])
#loc194 = loc(fused[#loc68, #loc69])
#loc195 = loc(fused[#loc70, #loc71])
#loc196 = loc(fused[#loc72, #loc73])
#loc197 = loc(fused[#loc75, #loc71])
#loc198 = loc(fused[#loc78, #loc79])
#loc199 = loc(fused[#loc81, #loc82])
#loc200 = loc(fused[#loc83, #loc84])
#loc201 = loc(fused[#loc86, #loc79])
#loc202 = loc(fused[#loc89, #loc90])
#loc203 = loc(fused[#loc91, #loc92])
#loc204 = loc(fused[#loc94, #loc90])
#loc205 = loc(fused[#loc97, #loc98])
#loc206 = loc(fused[#loc99, #loc100])
#loc207 = loc(fused[#loc102, #loc103])
#loc208 = loc(fused[#loc104, #loc105])
#loc209 = loc(fused[#loc106, #loc107])
#loc210 = loc(fused[#loc108, #loc109])
#loc211 = loc(fused[#loc112, #loc113])
#loc212 = loc(fused[#loc117, #loc118])
#loc213 = loc(fused[#loc119, #loc113])
#loc214 = loc(fused[#loc124, #loc122])
#loc215 = loc(fused[#loc125, #loc126])
#loc216 = loc(fused[#loc127, #loc129])
#loc217 = loc(fused[#loc130, #loc126])
#loc218 = loc(fused[#loc132, #loc134])
#loc219 = loc(fused[#loc135, #loc131])
#loc220 = loc(fused[#loc139, #loc140])
#loc221 = loc(fused[#loc141, #loc142])
#loc222 = loc(fused[#loc143, #loc144])
#loc223 = loc(fused[#loc146, #loc142])
#loc224 = loc(fused[#loc149, #loc150])
#loc225 = loc(fused[#loc152, #loc153])
#loc226 = loc(fused[#loc154, #loc155])
#loc227 = loc(fused[#loc157, #loc150])
#loc228 = loc(fused[#loc160, #loc161])
#loc229 = loc(fused[#loc162, #loc163])
#loc230 = loc(fused[#loc165, #loc161])
