!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc22 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":49:21)
#loc23 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":49:25)
#loc112 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":101:44)
#loc152 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":136:26)
#loc153 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":136:30)
#loc168 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":146:28)
#loc254 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":198:44)
#loc281 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":224:26)
#loc282 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":224:30)
#loc294 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":229:28)
#loc381 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":281:44)
#loc408 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":307:25)
#loc409 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":307:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc444 = loc(fused[#loc22, #loc23])
#loc493 = loc(fused[#loc152, #loc153])
#loc540 = loc(fused[#loc281, #loc282])
#loc587 = loc(fused[#loc408, #loc409])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc434)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc435)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc436)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc437)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc438)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc439)
  cir.func private @close(!s32i) -> !s32i loc(#loc440)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc441)
  cir.func private @printIntLine(!s32i) loc(#loc442)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc22, #loc23])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc445)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc444)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc26)
    cir.br ^bb1 loc(#loc446)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc441)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc29)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc447)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc448)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %7 = cir.binop(mul, %5, %6) nsw : !s32i loc(#loc33)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc445)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc35)
    cir.br ^bb4 loc(#loc32)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc28)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc28)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc21)
  } loc(#loc443)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_square_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc450)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc451)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc452)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc453)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc454)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc48)
    cir.store %5, %4 : !s32i, !cir.ptr<!s32i> loc(#loc455)
    cir.br ^bb1 loc(#loc456)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc43)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc452)
    cir.br ^bb2 loc(#loc457)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc457)
  ^bb3:  // pred: ^bb26
    %8 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc54)
    cir.brcond %9 ^bb4, ^bb27 loc(#loc54)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc458)
  ^bb5:  // pred: ^bb4
    %10 = cir.const #cir.int<2> : !s32i loc(#loc57)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %12 = cir.const #cir.int<6> : !s32i loc(#loc59)
    %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc60)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc459)
    cir.br ^bb6 loc(#loc460)
  ^bb6:  // pred: ^bb5
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc66)
    %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc461)
    cir.brcond %17 ^bb7, ^bb8 loc(#loc462)
  ^bb7:  // pred: ^bb6
    cir.br ^bb27 loc(#loc68)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc64)
  ^bb9:  // pred: ^bb8
    %18 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc463)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %20 = cir.const #cir.int<16> : !u64i loc(#loc464)
    cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc465)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc76)
    %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc76)
    %23 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc466)
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc79)
    %27 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
    %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
    cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc467)
    %29 = cir.const #cir.int<27015> : !s32i loc(#loc84)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc84)
    %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc85)
    %32 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc86)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc468)
    cir.br ^bb10 loc(#loc469)
  ^bb10:  // pred: ^bb9
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %34 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc470)
    %35 = cir.const #cir.int<16> : !u64i loc(#loc471)
    %36 = cir.cast(integral, %35 : !u64i), !u32i loc(#loc471)
    %37 = cir.call @connect(%33, %34, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc96)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %39 = cir.unary(minus, %38) nsw : !s32i, !s32i loc(#loc97)
    %40 = cir.cmp(eq, %37, %39) : !s32i, !cir.bool loc(#loc472)
    cir.brcond %40 ^bb11, ^bb12 loc(#loc473)
  ^bb11:  // pred: ^bb10
    cir.br ^bb27 loc(#loc99)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc90)
  ^bb13:  // pred: ^bb12
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %42 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc101)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc101)
    %44 = cir.const #cir.int<3> : !s32i loc(#loc102)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc102)
    %46 = cir.const #cir.int<4> : !u64i loc(#loc102)
    %47 = cir.binop(mul, %45, %46) : !u64i loc(#loc102)
    %48 = cir.const #cir.int<2> : !s32i loc(#loc102)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc102)
    %50 = cir.binop(add, %47, %49) : !u64i loc(#loc102)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc103)
    %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc474)
    %54 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %55 = cir.call @recv(%41, %43, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc105)
    %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc105)
    cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc475)
    cir.br ^bb14 loc(#loc476)
  ^bb14:  // pred: ^bb13
    %57 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc111)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc477)
    cir.brcond %60 ^bb15, ^bb16 loc(#loc112)
  ^bb15:  // pred: ^bb14
    %61 = cir.const #true loc(#loc112)
    cir.br ^bb21(%61 : !cir.bool) loc(#loc112)
  ^bb16:  // pred: ^bb14
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc478)
    cir.brcond %64 ^bb17, ^bb18 loc(#loc112)
  ^bb17:  // pred: ^bb16
    %65 = cir.const #true loc(#loc112)
    cir.br ^bb19(%65 : !cir.bool) loc(#loc112)
  ^bb18:  // pred: ^bb16
    %66 = cir.const #false loc(#loc112)
    cir.br ^bb19(%66 : !cir.bool) loc(#loc112)
  ^bb19(%67: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":101:44)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc112)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%67 : !cir.bool) loc(#loc112)
  ^bb21(%68: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":101:44)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc112)
  ^bb22:  // pred: ^bb21
    cir.brcond %68 ^bb23, ^bb24 loc(#loc479)
  ^bb23:  // pred: ^bb22
    cir.br ^bb27 loc(#loc116)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc109)
  ^bb25:  // pred: ^bb24
    %69 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %70 = cir.cast(integral, %69 : !s32i), !s8i loc(#loc117)
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %72 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc119)
    %73 = cir.ptr_stride(%72 : !cir.ptr<!s8i>, %71 : !s32i), !cir.ptr<!s8i> loc(#loc119)
    cir.store %70, %73 : !s8i, !cir.ptr<!s8i> loc(#loc480)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc120)
    %75 = cir.call @atoi(%74) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc121)
    cir.store %75, %4 : !s32i, !cir.ptr<!s32i> loc(#loc481)
    cir.br ^bb26 loc(#loc56)
  ^bb26:  // pred: ^bb25
    cir.br ^bb3 loc(#loc53)
  ^bb27:  // 4 preds: ^bb3, ^bb7, ^bb11, ^bb23
    cir.br ^bb28 loc(#loc53)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc482)
  ^bb29:  // pred: ^bb28
    %76 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc127)
    %79 = cir.cmp(ne, %76, %78) : !s32i, !cir.bool loc(#loc483)
    cir.brcond %79 ^bb30, ^bb31 loc(#loc484)
  ^bb30:  // pred: ^bb29
    %80 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %81 = cir.call @close(%80) : (!s32i) -> !s32i loc(#loc130)
    cir.br ^bb31 loc(#loc125)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc125)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc51)
  ^bb33:  // pred: ^bb32
    %82 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %83 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc441)
    cir.store %82, %83 : !s32i, !cir.ptr<!s32i> loc(#loc485)
    %84 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    cir.call @badSink(%84) : (!s32i) -> () loc(#loc134)
    cir.return loc(#loc37)
  } loc(#loc449)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_square_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc487)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc137)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc488)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc139)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc489)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc141)
    cir.return loc(#loc136)
  } loc(#loc486)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc490)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc491)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc147)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr) loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc149)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc152, #loc153])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc494)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc493)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    cir.br ^bb1 loc(#loc495)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc490)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc159)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc496)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc147)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc163)
    cir.br ^bb17 loc(#loc161)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc497)
  ^bb4:  // pred: ^bb3
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %8 = cir.const #cir.int<2147483647> : !s32i loc(#loc167)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc167)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc167)
    %12 = cir.cmp(gt, %7, %11) : !s32i, !cir.bool loc(#loc498)
    cir.brcond %12 ^bb5, ^bb10 loc(#loc168)
  ^bb5:  // pred: ^bb4
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    %14 = cir.abs %13 poison : !s32i loc(#loc170)
    %15 = cir.cast(integral, %14 : !s32i), !s64i loc(#loc170)
    %16 = cir.get_global @sqrt : !cir.ptr<!cir.func<(!cir.double) -> !cir.double>> loc(#loc171)
    %17 = cir.const #cir.int<2147483647> : !s32i loc(#loc172)
    %18 = cir.cast(int_to_float, %17 : !s32i), !cir.double loc(#loc172)
    %19 = cir.call @sqrt(%18) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc171)
    %20 = cir.cast(float_to_int, %19 : !cir.double), !s64i loc(#loc171)
    %21 = cir.cmp(lt, %15, %20) : !s64i, !cir.bool loc(#loc499)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc168)
  ^bb6:  // pred: ^bb5
    %22 = cir.const #true loc(#loc168)
    cir.br ^bb8(%22 : !cir.bool) loc(#loc168)
  ^bb7:  // pred: ^bb5
    %23 = cir.const #false loc(#loc168)
    cir.br ^bb8(%23 : !cir.bool) loc(#loc168)
  ^bb8(%24: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":146:28)):  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc168)
  ^bb9:  // pred: ^bb8
    cir.br ^bb11(%24 : !cir.bool) loc(#loc168)
  ^bb10:  // pred: ^bb4
    %25 = cir.const #false loc(#loc168)
    cir.br ^bb11(%25 : !cir.bool) loc(#loc168)
  ^bb11(%26: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":146:28)):  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc168)
  ^bb12:  // pred: ^bb11
    cir.brcond %26 ^bb13, ^bb14 loc(#loc500)
  ^bb13:  // pred: ^bb12
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc177)
    %28 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    %29 = cir.binop(mul, %27, %28) nsw : !s32i loc(#loc177)
    cir.store %29, %0 : !s32i, !cir.ptr<!s32i> loc(#loc494)
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    cir.call @printIntLine(%30) : (!s32i) -> () loc(#loc179)
    cir.br ^bb15 loc(#loc175)
  ^bb14:  // pred: ^bb12
    %31 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc149)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc149)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc180)
    cir.br ^bb15 loc(#loc165)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc165)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc158)
  ^bb17:  // 2 preds: ^bb2, ^bb16
    cir.br ^bb18 loc(#loc158)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc151)
  } loc(#loc492)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc502)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc503)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc504)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc505)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc506)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc193)
    cir.store %5, %4 : !s32i, !cir.ptr<!s32i> loc(#loc507)
    cir.br ^bb1 loc(#loc508)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc188)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc188)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc504)
    cir.br ^bb2 loc(#loc509)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc509)
  ^bb3:  // pred: ^bb26
    %8 = cir.const #cir.int<0> : !s32i loc(#loc199)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc199)
    cir.brcond %9 ^bb4, ^bb27 loc(#loc199)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc510)
  ^bb5:  // pred: ^bb4
    %10 = cir.const #cir.int<2> : !s32i loc(#loc202)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc203)
    %12 = cir.const #cir.int<6> : !s32i loc(#loc204)
    %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc205)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc511)
    cir.br ^bb6 loc(#loc512)
  ^bb6:  // pred: ^bb5
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc211)
    %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc211)
    %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc513)
    cir.brcond %17 ^bb7, ^bb8 loc(#loc514)
  ^bb7:  // pred: ^bb6
    cir.br ^bb27 loc(#loc213)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc209)
  ^bb9:  // pred: ^bb8
    %18 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc515)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc216)
    %20 = cir.const #cir.int<16> : !u64i loc(#loc516)
    cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc517)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc221)
    %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc221)
    %23 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc518)
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc223)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc223)
    %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc224)
    %27 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
    %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
    cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc519)
    %29 = cir.const #cir.int<27015> : !s32i loc(#loc227)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc227)
    %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc228)
    %32 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc86)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc520)
    cir.br ^bb10 loc(#loc521)
  ^bb10:  // pred: ^bb9
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc233)
    %34 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc522)
    %35 = cir.const #cir.int<16> : !u64i loc(#loc523)
    %36 = cir.cast(integral, %35 : !u64i), !u32i loc(#loc523)
    %37 = cir.call @connect(%33, %34, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc238)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc239)
    %39 = cir.unary(minus, %38) nsw : !s32i, !s32i loc(#loc239)
    %40 = cir.cmp(eq, %37, %39) : !s32i, !cir.bool loc(#loc524)
    cir.brcond %40 ^bb11, ^bb12 loc(#loc525)
  ^bb11:  // pred: ^bb10
    cir.br ^bb27 loc(#loc241)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc232)
  ^bb13:  // pred: ^bb12
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc242)
    %42 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc243)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc243)
    %44 = cir.const #cir.int<3> : !s32i loc(#loc244)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc244)
    %46 = cir.const #cir.int<4> : !u64i loc(#loc244)
    %47 = cir.binop(mul, %45, %46) : !u64i loc(#loc244)
    %48 = cir.const #cir.int<2> : !s32i loc(#loc244)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc244)
    %50 = cir.binop(add, %47, %49) : !u64i loc(#loc244)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc245)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc245)
    %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc526)
    %54 = cir.const #cir.int<0> : !s32i loc(#loc246)
    %55 = cir.call @recv(%41, %43, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc247)
    %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc247)
    cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc527)
    cir.br ^bb14 loc(#loc528)
  ^bb14:  // pred: ^bb13
    %57 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc253)
    %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc253)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc529)
    cir.brcond %60 ^bb15, ^bb16 loc(#loc254)
  ^bb15:  // pred: ^bb14
    %61 = cir.const #true loc(#loc254)
    cir.br ^bb21(%61 : !cir.bool) loc(#loc254)
  ^bb16:  // pred: ^bb14
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc256)
    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc530)
    cir.brcond %64 ^bb17, ^bb18 loc(#loc254)
  ^bb17:  // pred: ^bb16
    %65 = cir.const #true loc(#loc254)
    cir.br ^bb19(%65 : !cir.bool) loc(#loc254)
  ^bb18:  // pred: ^bb16
    %66 = cir.const #false loc(#loc254)
    cir.br ^bb19(%66 : !cir.bool) loc(#loc254)
  ^bb19(%67: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":198:44)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc254)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%67 : !cir.bool) loc(#loc254)
  ^bb21(%68: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":198:44)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc254)
  ^bb22:  // pred: ^bb21
    cir.brcond %68 ^bb23, ^bb24 loc(#loc531)
  ^bb23:  // pred: ^bb22
    cir.br ^bb27 loc(#loc258)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc251)
  ^bb25:  // pred: ^bb24
    %69 = cir.const #cir.int<0> : !s32i loc(#loc259)
    %70 = cir.cast(integral, %69 : !s32i), !s8i loc(#loc259)
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc260)
    %72 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc261)
    %73 = cir.ptr_stride(%72 : !cir.ptr<!s8i>, %71 : !s32i), !cir.ptr<!s8i> loc(#loc261)
    cir.store %70, %73 : !s8i, !cir.ptr<!s8i> loc(#loc532)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc262)
    %75 = cir.call @atoi(%74) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc263)
    cir.store %75, %4 : !s32i, !cir.ptr<!s32i> loc(#loc533)
    cir.br ^bb26 loc(#loc201)
  ^bb26:  // pred: ^bb25
    cir.br ^bb3 loc(#loc198)
  ^bb27:  // 4 preds: ^bb3, ^bb7, ^bb11, ^bb23
    cir.br ^bb28 loc(#loc198)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc534)
  ^bb29:  // pred: ^bb28
    %76 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc268)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc269)
    %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc269)
    %79 = cir.cmp(ne, %76, %78) : !s32i, !cir.bool loc(#loc535)
    cir.brcond %79 ^bb30, ^bb31 loc(#loc536)
  ^bb30:  // pred: ^bb29
    %80 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    %81 = cir.call @close(%80) : (!s32i) -> !s32i loc(#loc272)
    cir.br ^bb31 loc(#loc267)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc267)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc196)
  ^bb33:  // pred: ^bb32
    %82 = cir.const #cir.int<0> : !s32i loc(#loc273)
    %83 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc490)
    cir.store %82, %83 : !s32i, !cir.ptr<!s32i> loc(#loc537)
    %84 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc275)
    cir.call @goodB2G1Sink(%84) : (!s32i) -> () loc(#loc276)
    cir.return loc(#loc182)
  } loc(#loc501)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc538)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc281, #loc282])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc541)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc540)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc285)
    cir.br ^bb1 loc(#loc542)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc538)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc288)
    cir.brcond %4 ^bb2, ^bb16 loc(#loc543)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc544)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc292)
    %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc293)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc293)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc293)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc293)
    %10 = cir.cmp(gt, %5, %9) : !s32i, !cir.bool loc(#loc545)
    cir.brcond %10 ^bb4, ^bb9 loc(#loc294)
  ^bb4:  // pred: ^bb3
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc295)
    %12 = cir.abs %11 poison : !s32i loc(#loc296)
    %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc296)
    %14 = cir.get_global @sqrt : !cir.ptr<!cir.func<(!cir.double) -> !cir.double>> loc(#loc297)
    %15 = cir.const #cir.int<2147483647> : !s32i loc(#loc298)
    %16 = cir.cast(int_to_float, %15 : !s32i), !cir.double loc(#loc298)
    %17 = cir.call @sqrt(%16) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc297)
    %18 = cir.cast(float_to_int, %17 : !cir.double), !s64i loc(#loc297)
    %19 = cir.cmp(lt, %13, %18) : !s64i, !cir.bool loc(#loc546)
    cir.brcond %19 ^bb5, ^bb6 loc(#loc294)
  ^bb5:  // pred: ^bb4
    %20 = cir.const #true loc(#loc294)
    cir.br ^bb7(%20 : !cir.bool) loc(#loc294)
  ^bb6:  // pred: ^bb4
    %21 = cir.const #false loc(#loc294)
    cir.br ^bb7(%21 : !cir.bool) loc(#loc294)
  ^bb7(%22: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":229:28)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc294)
  ^bb8:  // pred: ^bb7
    cir.br ^bb10(%22 : !cir.bool) loc(#loc294)
  ^bb9:  // pred: ^bb3
    %23 = cir.const #false loc(#loc294)
    cir.br ^bb10(%23 : !cir.bool) loc(#loc294)
  ^bb10(%24: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":229:28)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc294)
  ^bb11:  // pred: ^bb10
    cir.brcond %24 ^bb12, ^bb13 loc(#loc547)
  ^bb12:  // pred: ^bb11
    %25 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc303)
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc284)
    %27 = cir.binop(mul, %25, %26) nsw : !s32i loc(#loc303)
    cir.store %27, %0 : !s32i, !cir.ptr<!s32i> loc(#loc541)
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc304)
    cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc305)
    cir.br ^bb14 loc(#loc301)
  ^bb13:  // pred: ^bb11
    %29 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc306)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc306)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc307)
    cir.br ^bb14 loc(#loc291)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc291)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc287)
  ^bb16:  // 2 preds: ^bb1, ^bb15
    cir.br ^bb17 loc(#loc287)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc280)
  } loc(#loc539)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc549)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc550)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc551)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc552)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc553)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc320)
    cir.store %5, %4 : !s32i, !cir.ptr<!s32i> loc(#loc554)
    cir.br ^bb1 loc(#loc555)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc315)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc315)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc551)
    cir.br ^bb2 loc(#loc556)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc556)
  ^bb3:  // pred: ^bb26
    %8 = cir.const #cir.int<0> : !s32i loc(#loc326)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc326)
    cir.brcond %9 ^bb4, ^bb27 loc(#loc326)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc557)
  ^bb5:  // pred: ^bb4
    %10 = cir.const #cir.int<2> : !s32i loc(#loc329)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc330)
    %12 = cir.const #cir.int<6> : !s32i loc(#loc331)
    %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc332)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc558)
    cir.br ^bb6 loc(#loc559)
  ^bb6:  // pred: ^bb5
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc337)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc338)
    %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc338)
    %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc560)
    cir.brcond %17 ^bb7, ^bb8 loc(#loc561)
  ^bb7:  // pred: ^bb6
    cir.br ^bb27 loc(#loc340)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc336)
  ^bb9:  // pred: ^bb8
    %18 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc562)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc343)
    %20 = cir.const #cir.int<16> : !u64i loc(#loc563)
    cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc564)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc348)
    %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc348)
    %23 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc565)
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc350)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc350)
    %26 = cir.call @inet_addr(%25) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc351)
    %27 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
    %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
    cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc566)
    %29 = cir.const #cir.int<27015> : !s32i loc(#loc354)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc354)
    %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc355)
    %32 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc86)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc567)
    cir.br ^bb10 loc(#loc568)
  ^bb10:  // pred: ^bb9
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc360)
    %34 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc569)
    %35 = cir.const #cir.int<16> : !u64i loc(#loc570)
    %36 = cir.cast(integral, %35 : !u64i), !u32i loc(#loc570)
    %37 = cir.call @connect(%33, %34, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc365)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc366)
    %39 = cir.unary(minus, %38) nsw : !s32i, !s32i loc(#loc366)
    %40 = cir.cmp(eq, %37, %39) : !s32i, !cir.bool loc(#loc571)
    cir.brcond %40 ^bb11, ^bb12 loc(#loc572)
  ^bb11:  // pred: ^bb10
    cir.br ^bb27 loc(#loc368)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc359)
  ^bb13:  // pred: ^bb12
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc369)
    %42 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc370)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc370)
    %44 = cir.const #cir.int<3> : !s32i loc(#loc371)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc371)
    %46 = cir.const #cir.int<4> : !u64i loc(#loc371)
    %47 = cir.binop(mul, %45, %46) : !u64i loc(#loc371)
    %48 = cir.const #cir.int<2> : !s32i loc(#loc371)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc371)
    %50 = cir.binop(add, %47, %49) : !u64i loc(#loc371)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc372)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc372)
    %53 = cir.binop(sub, %50, %52) : !u64i loc(#loc573)
    %54 = cir.const #cir.int<0> : !s32i loc(#loc373)
    %55 = cir.call @recv(%41, %43, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc374)
    %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc374)
    cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc574)
    cir.br ^bb14 loc(#loc575)
  ^bb14:  // pred: ^bb13
    %57 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc379)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc380)
    %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc380)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc576)
    cir.brcond %60 ^bb15, ^bb16 loc(#loc381)
  ^bb15:  // pred: ^bb14
    %61 = cir.const #true loc(#loc381)
    cir.br ^bb21(%61 : !cir.bool) loc(#loc381)
  ^bb16:  // pred: ^bb14
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc382)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc383)
    %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc577)
    cir.brcond %64 ^bb17, ^bb18 loc(#loc381)
  ^bb17:  // pred: ^bb16
    %65 = cir.const #true loc(#loc381)
    cir.br ^bb19(%65 : !cir.bool) loc(#loc381)
  ^bb18:  // pred: ^bb16
    %66 = cir.const #false loc(#loc381)
    cir.br ^bb19(%66 : !cir.bool) loc(#loc381)
  ^bb19(%67: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":281:44)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc381)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%67 : !cir.bool) loc(#loc381)
  ^bb21(%68: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":281:44)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc381)
  ^bb22:  // pred: ^bb21
    cir.brcond %68 ^bb23, ^bb24 loc(#loc578)
  ^bb23:  // pred: ^bb22
    cir.br ^bb27 loc(#loc385)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc378)
  ^bb25:  // pred: ^bb24
    %69 = cir.const #cir.int<0> : !s32i loc(#loc386)
    %70 = cir.cast(integral, %69 : !s32i), !s8i loc(#loc386)
    %71 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc387)
    %72 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc388)
    %73 = cir.ptr_stride(%72 : !cir.ptr<!s8i>, %71 : !s32i), !cir.ptr<!s8i> loc(#loc388)
    cir.store %70, %73 : !s8i, !cir.ptr<!s8i> loc(#loc579)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc389)
    %75 = cir.call @atoi(%74) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc390)
    cir.store %75, %4 : !s32i, !cir.ptr<!s32i> loc(#loc580)
    cir.br ^bb26 loc(#loc328)
  ^bb26:  // pred: ^bb25
    cir.br ^bb3 loc(#loc325)
  ^bb27:  // 4 preds: ^bb3, ^bb7, ^bb11, ^bb23
    cir.br ^bb28 loc(#loc325)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc581)
  ^bb29:  // pred: ^bb28
    %76 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc395)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc396)
    %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc396)
    %79 = cir.cmp(ne, %76, %78) : !s32i, !cir.bool loc(#loc582)
    cir.brcond %79 ^bb30, ^bb31 loc(#loc583)
  ^bb30:  // pred: ^bb29
    %80 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc398)
    %81 = cir.call @close(%80) : (!s32i) -> !s32i loc(#loc399)
    cir.br ^bb31 loc(#loc394)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc394)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc323)
  ^bb33:  // pred: ^bb32
    %82 = cir.const #cir.int<1> : !s32i loc(#loc400)
    %83 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc538)
    cir.store %82, %83 : !s32i, !cir.ptr<!s32i> loc(#loc584)
    %84 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc402)
    cir.call @goodB2G2Sink(%84) : (!s32i) -> () loc(#loc403)
    cir.return loc(#loc309)
  } loc(#loc548)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc585)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc408, #loc409])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc588)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc587)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc412)
    cir.br ^bb1 loc(#loc589)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc585)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc415)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc415)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc590)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc591)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc419)
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc411)
    %7 = cir.binop(mul, %5, %6) nsw : !s32i loc(#loc419)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc588)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc420)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc421)
    cir.br ^bb4 loc(#loc418)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc414)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc414)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc407)
  } loc(#loc586)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc593)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc426)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc594)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc428)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc595)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc430)
    %4 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc585)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc596)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc432)
    cir.call @goodG2BSink(%5) : (!s32i) -> () loc(#loc433)
    cir.return loc(#loc423)
  } loc(#loc592)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_21.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":92:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":47:1)
#loc17 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":47:24)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":49:1)
#loc21 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":59:1)
#loc24 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":55:13)
#loc25 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":55:33)
#loc26 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":50:1)
#loc27 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":51:5)
#loc28 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":58:5)
#loc29 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":51:8)
#loc30 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":52:5)
#loc31 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":53:9)
#loc32 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":57:9)
#loc33 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":55:26)
#loc34 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":56:26)
#loc35 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":56:13)
#loc36 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":61:1)
#loc37 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":124:1)
#loc38 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":71:9)
#loc39 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":71:13)
#loc40 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":72:9)
#loc41 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":72:28)
#loc42 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":73:9)
#loc43 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":73:32)
#loc44 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":74:9)
#loc45 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":74:41)
#loc46 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":63:5)
#loc47 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":63:9)
#loc48 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":65:12)
#loc49 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":65:5)
#loc50 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":66:5)
#loc51 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":121:5)
#loc52 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":75:9)
#loc53 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":110:17)
#loc54 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":110:16)
#loc55 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":76:9)
#loc56 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":109:9)
#loc57 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":85:36)
#loc58 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":85:45)
#loc59 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":85:58)
#loc60 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":85:29)
#loc61 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":85:13)
#loc62 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":85:69)
#loc63 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":86:13)
#loc64 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":89:13)
#loc65 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":86:17)
#loc66 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":86:34)
#loc67 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":87:13)
#loc68 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":88:17)
#loc69 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":90:20)
#loc70 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":90:21)
#loc71 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":90:30)
#loc72 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":90:33)
#loc73 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":90:47)
#loc74 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":90:13)
#loc75 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":90:48)
#loc76 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":91:34)
#loc77 = loc("/usr/include/netinet/in.h":249:5)
#loc78 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":91:13)
#loc79 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":92:39)
#loc80 = loc("/usr/include/netinet/in.h":251:20)
#loc81 = loc("/usr/include/netinet/in.h":33:15)
#loc82 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":92:13)
#loc83 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":92:59)
#loc84 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":93:38)
#loc85 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":93:32)
#loc86 = loc("/usr/include/netinet/in.h":250:15)
#loc87 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":93:13)
#loc88 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":93:46)
#loc89 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":94:13)
#loc90 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":97:13)
#loc91 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":94:25)
#loc92 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":94:58)
#loc93 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":94:59)
#loc94 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":94:68)
#loc95 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":94:82)
#loc96 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":94:17)
#loc97 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":94:88)
#loc98 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":95:13)
#loc99 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":96:17)
#loc100 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":100:31)
#loc101 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":100:46)
#loc102 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":100:59)
#loc103 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":100:77)
#loc104 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":100:80)
#loc105 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":100:26)
#loc106 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":100:13)
#loc107 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":100:81)
#loc108 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":101:13)
#loc109 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":104:13)
#loc110 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":101:17)
#loc111 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":101:31)
#loc113 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":101:47)
#loc114 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":101:61)
#loc115 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":102:13)
#loc116 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":103:17)
#loc117 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":106:39)
#loc118 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":106:25)
#loc119 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":106:13)
#loc120 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":108:25)
#loc121 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":108:20)
#loc122 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":108:13)
#loc123 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":108:36)
#loc124 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":111:9)
#loc125 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":114:9)
#loc126 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":111:13)
#loc127 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":111:30)
#loc128 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":112:9)
#loc129 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":113:26)
#loc130 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":113:13)
#loc131 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":122:17)
#loc132 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":122:5)
#loc133 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":123:13)
#loc134 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":123:5)
#loc135 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":330:1)
#loc136 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":335:1)
#loc137 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":332:5)
#loc138 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":332:14)
#loc139 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":333:5)
#loc140 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":333:14)
#loc141 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":334:5)
#loc142 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":334:13)
#loc143 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":131:1)
#loc144 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":131:29)
#loc145 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc146 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc147 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":141:19)
#loc148 = loc("/usr/include/x86_64-linux-gnu/bits/mathcalls.h":143:1)
#loc149 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":153:23)
#loc150 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":136:1)
#loc151 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":156:1)
#loc154 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":148:13)
#loc155 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":148:33)
#loc156 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":137:1)
#loc157 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":138:5)
#loc158 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":155:5)
#loc159 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":138:8)
#loc160 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":139:5)
#loc161 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":142:5)
#loc162 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":144:5)
#loc163 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":141:9)
#loc164 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":146:9)
#loc165 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":154:9)
#loc166 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":146:13)
#loc167 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":146:20)
#loc169 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":146:35)
#loc170 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":146:31)
#loc171 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":146:49)
#loc172 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":146:62)
#loc173 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":146:69)
#loc174 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":147:9)
#loc175 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":150:9)
#loc176 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":152:9)
#loc177 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":148:26)
#loc178 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":149:26)
#loc179 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":149:13)
#loc180 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":153:13)
#loc181 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":158:1)
#loc182 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":221:1)
#loc183 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":168:9)
#loc184 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":168:13)
#loc185 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":169:9)
#loc186 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":169:28)
#loc187 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":170:9)
#loc188 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":170:32)
#loc189 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":171:9)
#loc190 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":171:41)
#loc191 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":160:5)
#loc192 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":160:9)
#loc193 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":162:12)
#loc194 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":162:5)
#loc195 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":163:5)
#loc196 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":218:5)
#loc197 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":172:9)
#loc198 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":207:17)
#loc199 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":207:16)
#loc200 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":173:9)
#loc201 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":206:9)
#loc202 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":182:36)
#loc203 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":182:45)
#loc204 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":182:58)
#loc205 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":182:29)
#loc206 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":182:13)
#loc207 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":182:69)
#loc208 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":183:13)
#loc209 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":186:13)
#loc210 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":183:17)
#loc211 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":183:34)
#loc212 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":184:13)
#loc213 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":185:17)
#loc214 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":187:20)
#loc215 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":187:21)
#loc216 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":187:30)
#loc217 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":187:33)
#loc218 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":187:47)
#loc219 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":187:13)
#loc220 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":187:48)
#loc221 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":188:34)
#loc222 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":188:13)
#loc223 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":189:49)
#loc224 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":189:39)
#loc225 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":189:13)
#loc226 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":189:59)
#loc227 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":190:38)
#loc228 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":190:32)
#loc229 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":190:13)
#loc230 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":190:46)
#loc231 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":191:13)
#loc232 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":194:13)
#loc233 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":191:25)
#loc234 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":191:58)
#loc235 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":191:59)
#loc236 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":191:68)
#loc237 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":191:82)
#loc238 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":191:17)
#loc239 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":191:88)
#loc240 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":192:13)
#loc241 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":193:17)
#loc242 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":197:31)
#loc243 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":197:46)
#loc244 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":197:59)
#loc245 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":197:77)
#loc246 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":197:80)
#loc247 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":197:26)
#loc248 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":197:13)
#loc249 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":197:81)
#loc250 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":198:13)
#loc251 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":201:13)
#loc252 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":198:17)
#loc253 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":198:31)
#loc255 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":198:47)
#loc256 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":198:61)
#loc257 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":199:13)
#loc258 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":200:17)
#loc259 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":203:39)
#loc260 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":203:25)
#loc261 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":203:13)
#loc262 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":205:25)
#loc263 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":205:20)
#loc264 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":205:13)
#loc265 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":205:36)
#loc266 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":208:9)
#loc267 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":211:9)
#loc268 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":208:13)
#loc269 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":208:30)
#loc270 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":209:9)
#loc271 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":210:26)
#loc272 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":210:13)
#loc273 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":219:22)
#loc274 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":219:5)
#loc275 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":220:18)
#loc276 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":220:5)
#loc277 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":132:1)
#loc278 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":132:29)
#loc279 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":224:1)
#loc280 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":239:1)
#loc283 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":231:13)
#loc284 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":231:33)
#loc285 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":225:1)
#loc286 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":226:5)
#loc287 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":238:5)
#loc288 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":226:8)
#loc289 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":227:5)
#loc290 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":229:9)
#loc291 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":237:9)
#loc292 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":229:13)
#loc293 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":229:20)
#loc295 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":229:35)
#loc296 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":229:31)
#loc297 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":229:49)
#loc298 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":229:62)
#loc299 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":229:69)
#loc300 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":230:9)
#loc301 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":233:9)
#loc302 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":235:9)
#loc303 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":231:26)
#loc304 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":232:26)
#loc305 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":232:13)
#loc306 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":236:23)
#loc307 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":236:13)
#loc308 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":241:1)
#loc309 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":304:1)
#loc310 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":251:9)
#loc311 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":251:13)
#loc312 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":252:9)
#loc313 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":252:28)
#loc314 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":253:9)
#loc315 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":253:32)
#loc316 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":254:9)
#loc317 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":254:41)
#loc318 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":243:5)
#loc319 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":243:9)
#loc320 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":245:12)
#loc321 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":245:5)
#loc322 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":246:5)
#loc323 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":301:5)
#loc324 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":255:9)
#loc325 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":290:17)
#loc326 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":290:16)
#loc327 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":256:9)
#loc328 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":289:9)
#loc329 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":265:36)
#loc330 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":265:45)
#loc331 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":265:58)
#loc332 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":265:29)
#loc333 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":265:13)
#loc334 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":265:69)
#loc335 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":266:13)
#loc336 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":269:13)
#loc337 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":266:17)
#loc338 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":266:34)
#loc339 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":267:13)
#loc340 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":268:17)
#loc341 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":270:20)
#loc342 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":270:21)
#loc343 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":270:30)
#loc344 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":270:33)
#loc345 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":270:47)
#loc346 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":270:13)
#loc347 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":270:48)
#loc348 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":271:34)
#loc349 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":271:13)
#loc350 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":272:49)
#loc351 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":272:39)
#loc352 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":272:13)
#loc353 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":272:59)
#loc354 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":273:38)
#loc355 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":273:32)
#loc356 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":273:13)
#loc357 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":273:46)
#loc358 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":274:13)
#loc359 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":277:13)
#loc360 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":274:25)
#loc361 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":274:58)
#loc362 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":274:59)
#loc363 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":274:68)
#loc364 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":274:82)
#loc365 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":274:17)
#loc366 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":274:88)
#loc367 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":275:13)
#loc368 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":276:17)
#loc369 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":280:31)
#loc370 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":280:46)
#loc371 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":280:59)
#loc372 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":280:77)
#loc373 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":280:80)
#loc374 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":280:26)
#loc375 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":280:13)
#loc376 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":280:81)
#loc377 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":281:13)
#loc378 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":284:13)
#loc379 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":281:17)
#loc380 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":281:31)
#loc382 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":281:47)
#loc383 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":281:61)
#loc384 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":282:13)
#loc385 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":283:17)
#loc386 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":286:39)
#loc387 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":286:25)
#loc388 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":286:13)
#loc389 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":288:25)
#loc390 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":288:20)
#loc391 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":288:13)
#loc392 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":288:36)
#loc393 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":291:9)
#loc394 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":294:9)
#loc395 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":291:13)
#loc396 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":291:30)
#loc397 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":292:9)
#loc398 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":293:26)
#loc399 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":293:13)
#loc400 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":302:22)
#loc401 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":302:5)
#loc402 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":303:18)
#loc403 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":303:5)
#loc404 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":133:1)
#loc405 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":133:28)
#loc406 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":307:1)
#loc407 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":317:1)
#loc410 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":313:13)
#loc411 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":313:33)
#loc412 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":308:1)
#loc413 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":309:5)
#loc414 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":316:5)
#loc415 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":309:8)
#loc416 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":310:5)
#loc417 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":311:9)
#loc418 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":315:9)
#loc419 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":313:26)
#loc420 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":314:26)
#loc421 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":314:13)
#loc422 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":319:1)
#loc423 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":328:1)
#loc424 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":321:5)
#loc425 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":321:9)
#loc426 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":323:12)
#loc427 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":323:5)
#loc428 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":325:12)
#loc429 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":325:5)
#loc430 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":326:21)
#loc431 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":326:5)
#loc432 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":327:17)
#loc433 = loc("CWE190_Integer_Overflow__int_connect_socket_square_21.c":327:5)
#loc434 = loc(fused[#loc1, #loc2])
#loc435 = loc(fused[#loc3, #loc4])
#loc436 = loc(fused[#loc6, #loc7])
#loc437 = loc(fused[#loc8, #loc9])
#loc438 = loc(fused[#loc10, #loc11])
#loc439 = loc(fused[#loc12, #loc13])
#loc440 = loc(fused[#loc14, #loc15])
#loc441 = loc(fused[#loc16, #loc17])
#loc442 = loc(fused[#loc18, #loc19])
#loc443 = loc(fused[#loc20, #loc21])
#loc445 = loc(fused[#loc24, #loc25])
#loc446 = loc(fused[#loc27, #loc28])
#loc447 = loc(fused[#loc30, #loc28])
#loc448 = loc(fused[#loc31, #loc32])
#loc449 = loc(fused[#loc36, #loc37])
#loc450 = loc(fused[#loc38, #loc39])
#loc451 = loc(fused[#loc40, #loc41])
#loc452 = loc(fused[#loc42, #loc43])
#loc453 = loc(fused[#loc44, #loc45])
#loc454 = loc(fused[#loc46, #loc47])
#loc455 = loc(fused[#loc49, #loc48])
#loc456 = loc(fused[#loc50, #loc51])
#loc457 = loc(fused[#loc52, #loc53])
#loc458 = loc(fused[#loc55, #loc56])
#loc459 = loc(fused[#loc61, #loc62])
#loc460 = loc(fused[#loc63, #loc64])
#loc461 = loc(fused[#loc65, #loc66])
#loc462 = loc(fused[#loc67, #loc64])
#loc463 = loc(fused[#loc69, #loc70])
#loc464 = loc(fused[#loc72, #loc73])
#loc465 = loc(fused[#loc74, #loc75])
#loc466 = loc(fused[#loc78, #loc76])
#loc467 = loc(fused[#loc82, #loc83])
#loc468 = loc(fused[#loc87, #loc88])
#loc469 = loc(fused[#loc89, #loc90])
#loc470 = loc(fused[#loc92, #loc93])
#loc471 = loc(fused[#loc94, #loc95])
#loc472 = loc(fused[#loc96, #loc97])
#loc473 = loc(fused[#loc98, #loc90])
#loc474 = loc(fused[#loc102, #loc103])
#loc475 = loc(fused[#loc106, #loc107])
#loc476 = loc(fused[#loc108, #loc109])
#loc477 = loc(fused[#loc110, #loc111])
#loc478 = loc(fused[#loc113, #loc114])
#loc479 = loc(fused[#loc115, #loc109])
#loc480 = loc(fused[#loc119, #loc117])
#loc481 = loc(fused[#loc122, #loc123])
#loc482 = loc(fused[#loc124, #loc125])
#loc483 = loc(fused[#loc126, #loc127])
#loc484 = loc(fused[#loc128, #loc125])
#loc485 = loc(fused[#loc132, #loc131])
#loc486 = loc(fused[#loc135, #loc136])
#loc487 = loc(fused[#loc137, #loc138])
#loc488 = loc(fused[#loc139, #loc140])
#loc489 = loc(fused[#loc141, #loc142])
#loc490 = loc(fused[#loc143, #loc144])
#loc491 = loc(fused[#loc145, #loc146])
#loc492 = loc(fused[#loc150, #loc151])
#loc494 = loc(fused[#loc154, #loc155])
#loc495 = loc(fused[#loc157, #loc158])
#loc496 = loc(fused[#loc160, #loc161, #loc162, #loc158])
#loc497 = loc(fused[#loc164, #loc165])
#loc498 = loc(fused[#loc166, #loc167])
#loc499 = loc(fused[#loc170, #loc173])
#loc500 = loc(fused[#loc174, #loc175, #loc176, #loc165])
#loc501 = loc(fused[#loc181, #loc182])
#loc502 = loc(fused[#loc183, #loc184])
#loc503 = loc(fused[#loc185, #loc186])
#loc504 = loc(fused[#loc187, #loc188])
#loc505 = loc(fused[#loc189, #loc190])
#loc506 = loc(fused[#loc191, #loc192])
#loc507 = loc(fused[#loc194, #loc193])
#loc508 = loc(fused[#loc195, #loc196])
#loc509 = loc(fused[#loc197, #loc198])
#loc510 = loc(fused[#loc200, #loc201])
#loc511 = loc(fused[#loc206, #loc207])
#loc512 = loc(fused[#loc208, #loc209])
#loc513 = loc(fused[#loc210, #loc211])
#loc514 = loc(fused[#loc212, #loc209])
#loc515 = loc(fused[#loc214, #loc215])
#loc516 = loc(fused[#loc217, #loc218])
#loc517 = loc(fused[#loc219, #loc220])
#loc518 = loc(fused[#loc222, #loc221])
#loc519 = loc(fused[#loc225, #loc226])
#loc520 = loc(fused[#loc229, #loc230])
#loc521 = loc(fused[#loc231, #loc232])
#loc522 = loc(fused[#loc234, #loc235])
#loc523 = loc(fused[#loc236, #loc237])
#loc524 = loc(fused[#loc238, #loc239])
#loc525 = loc(fused[#loc240, #loc232])
#loc526 = loc(fused[#loc244, #loc245])
#loc527 = loc(fused[#loc248, #loc249])
#loc528 = loc(fused[#loc250, #loc251])
#loc529 = loc(fused[#loc252, #loc253])
#loc530 = loc(fused[#loc255, #loc256])
#loc531 = loc(fused[#loc257, #loc251])
#loc532 = loc(fused[#loc261, #loc259])
#loc533 = loc(fused[#loc264, #loc265])
#loc534 = loc(fused[#loc266, #loc267])
#loc535 = loc(fused[#loc268, #loc269])
#loc536 = loc(fused[#loc270, #loc267])
#loc537 = loc(fused[#loc274, #loc273])
#loc538 = loc(fused[#loc277, #loc278])
#loc539 = loc(fused[#loc279, #loc280])
#loc541 = loc(fused[#loc283, #loc284])
#loc542 = loc(fused[#loc286, #loc287])
#loc543 = loc(fused[#loc289, #loc287])
#loc544 = loc(fused[#loc290, #loc291])
#loc545 = loc(fused[#loc292, #loc293])
#loc546 = loc(fused[#loc296, #loc299])
#loc547 = loc(fused[#loc300, #loc301, #loc302, #loc291])
#loc548 = loc(fused[#loc308, #loc309])
#loc549 = loc(fused[#loc310, #loc311])
#loc550 = loc(fused[#loc312, #loc313])
#loc551 = loc(fused[#loc314, #loc315])
#loc552 = loc(fused[#loc316, #loc317])
#loc553 = loc(fused[#loc318, #loc319])
#loc554 = loc(fused[#loc321, #loc320])
#loc555 = loc(fused[#loc322, #loc323])
#loc556 = loc(fused[#loc324, #loc325])
#loc557 = loc(fused[#loc327, #loc328])
#loc558 = loc(fused[#loc333, #loc334])
#loc559 = loc(fused[#loc335, #loc336])
#loc560 = loc(fused[#loc337, #loc338])
#loc561 = loc(fused[#loc339, #loc336])
#loc562 = loc(fused[#loc341, #loc342])
#loc563 = loc(fused[#loc344, #loc345])
#loc564 = loc(fused[#loc346, #loc347])
#loc565 = loc(fused[#loc349, #loc348])
#loc566 = loc(fused[#loc352, #loc353])
#loc567 = loc(fused[#loc356, #loc357])
#loc568 = loc(fused[#loc358, #loc359])
#loc569 = loc(fused[#loc361, #loc362])
#loc570 = loc(fused[#loc363, #loc364])
#loc571 = loc(fused[#loc365, #loc366])
#loc572 = loc(fused[#loc367, #loc359])
#loc573 = loc(fused[#loc371, #loc372])
#loc574 = loc(fused[#loc375, #loc376])
#loc575 = loc(fused[#loc377, #loc378])
#loc576 = loc(fused[#loc379, #loc380])
#loc577 = loc(fused[#loc382, #loc383])
#loc578 = loc(fused[#loc384, #loc378])
#loc579 = loc(fused[#loc388, #loc386])
#loc580 = loc(fused[#loc391, #loc392])
#loc581 = loc(fused[#loc393, #loc394])
#loc582 = loc(fused[#loc395, #loc396])
#loc583 = loc(fused[#loc397, #loc394])
#loc584 = loc(fused[#loc401, #loc400])
#loc585 = loc(fused[#loc404, #loc405])
#loc586 = loc(fused[#loc406, #loc407])
#loc588 = loc(fused[#loc410, #loc411])
#loc589 = loc(fused[#loc413, #loc414])
#loc590 = loc(fused[#loc416, #loc414])
#loc591 = loc(fused[#loc417, #loc418])
#loc592 = loc(fused[#loc422, #loc423])
#loc593 = loc(fused[#loc424, #loc425])
#loc594 = loc(fused[#loc427, #loc426])
#loc595 = loc(fused[#loc429, #loc428])
#loc596 = loc(fused[#loc431, #loc430])
