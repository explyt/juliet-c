!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":516:10)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":516:14)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":516:20)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":516:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc899 = loc(fused[#loc251, #loc252])
#loc900 = loc(fused[#loc253, #loc254])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc801)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc802)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc803)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc804)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc805)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc806)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc807)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc808)
  cir.func private @close(!s32i) -> !s32i loc(#loc809)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc810)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc21)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc811)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc24)
  cir.func private @printIntLine(!s32i) loc(#loc812)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_listen_socket_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc814)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc815)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc815)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc815)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc816)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc37)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc819)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc820)
            %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc821)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc822)
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc823)
            %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc824)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc48)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc48)
            cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc822)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc50)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc50)
            cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc823)
            %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc53)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
            %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc53)
            cir.store %17, %10 : !u64i, !cir.ptr<!u64i> loc(#loc824)
            cir.scope {
              cir.do {
                %18 = cir.const #cir.int<2> : !s32i loc(#loc57)
                %19 = cir.const #cir.int<1> : !s32i loc(#loc58)
                %20 = cir.const #cir.int<6> : !s32i loc(#loc59)
                %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc60)
                cir.store %21, %8 : !s32i, !cir.ptr<!s32i> loc(#loc826)
                cir.scope {
                  %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc65)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc66)
                  %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc66)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc828)
                  cir.if %78 {
                    cir.break loc(#loc68)
                  } loc(#loc829)
                } loc(#loc827)
                %22 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc830)
                %23 = cir.const #cir.int<0> : !s32i loc(#loc71)
                %24 = cir.const #cir.int<16> : !u64i loc(#loc831)
                cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc832)
                %25 = cir.const #cir.int<2> : !s32i loc(#loc76)
                %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc76)
                %27 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
                cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc833)
                %28 = cir.const #cir.int<0> : !s32i loc(#loc79)
                %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc79)
                %30 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
                %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
                cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc834)
                %32 = cir.const #cir.int<27015> : !s32i loc(#loc83)
                %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc83)
                %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc84)
                %35 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
                cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc835)
                cir.scope {
                  %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc90)
                  %76 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc837)
                  %77 = cir.const #cir.int<16> : !u64i loc(#loc838)
                  %78 = cir.cast(integral, %77 : !u64i), !u32i loc(#loc838)
                  %79 = cir.call @bind(%75, %76, %78) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc95)
                  %80 = cir.const #cir.int<1> : !s32i loc(#loc96)
                  %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc96)
                  %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc839)
                  cir.if %82 {
                    cir.break loc(#loc98)
                  } loc(#loc840)
                } loc(#loc836)
                cir.scope {
                  %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                  %76 = cir.const #cir.int<5> : !s32i loc(#loc102)
                  %77 = cir.call @listen(%75, %76) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc103)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc104)
                  %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc104)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc842)
                  cir.if %80 {
                    cir.break loc(#loc106)
                  } loc(#loc843)
                } loc(#loc841)
                %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                %37 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc108)
                %38 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc109)
                %39 = cir.call @accept(%36, %37, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc110)
                cir.store %39, %9 : !s32i, !cir.ptr<!s32i> loc(#loc844)
                cir.scope {
                  %75 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc115)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc116)
                  %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc116)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc846)
                  cir.if %78 {
                    cir.break loc(#loc118)
                  } loc(#loc847)
                } loc(#loc845)
                %40 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc119)
                %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
                %42 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc121)
                %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc122)
                %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc848)
                %45 = cir.const #cir.int<1> : !u64i loc(#loc849)
                %46 = cir.const #cir.int<100> : !s32i loc(#loc127)
                %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc127)
                %48 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc128)
                %49 = cir.binop(sub, %47, %48) : !u64i loc(#loc850)
                %50 = cir.const #cir.int<1> : !s32i loc(#loc129)
                %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc129)
                %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc851)
                %53 = cir.binop(mul, %45, %52) : !u64i loc(#loc852)
                %54 = cir.const #cir.int<0> : !s32i loc(#loc131)
                %55 = cir.call @recv(%40, %44, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc132)
                %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc132)
                cir.store %56, %5 : !s32i, !cir.ptr<!s32i> loc(#loc853)
                cir.scope {
                  %75 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc137)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc138)
                  %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc138)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc855)
                  %79 = cir.ternary(%78, true {
                    %80 = cir.const #true loc(#loc139)
                    cir.yield %80 : !cir.bool loc(#loc139)
                  }, false {
                    %80 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc140)
                    %81 = cir.const #cir.int<0> : !s32i loc(#loc141)
                    %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc856)
                    %83 = cir.ternary(%82, true {
                      %84 = cir.const #true loc(#loc139)
                      cir.yield %84 : !cir.bool loc(#loc139)
                    }, false {
                      %84 = cir.const #false loc(#loc139)
                      cir.yield %84 : !cir.bool loc(#loc139)
                    }) : (!cir.bool) -> !cir.bool loc(#loc139)
                    cir.yield %83 : !cir.bool loc(#loc139)
                  }) : (!cir.bool) -> !cir.bool loc(#loc139)
                  cir.if %79 {
                    cir.break loc(#loc143)
                  } loc(#loc857)
                } loc(#loc854)
                %57 = cir.const #cir.int<0> : !s32i loc(#loc144)
                %58 = cir.cast(integral, %57 : !s32i), !s8i loc(#loc144)
                %59 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
                %60 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc146)
                %61 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc147)
                %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc147)
                %63 = cir.const #cir.int<1> : !u64i loc(#loc858)
                %64 = cir.binop(div, %62, %63) : !u64i loc(#loc859)
                %65 = cir.binop(add, %60, %64) : !u64i loc(#loc860)
                %66 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc150)
                cir.store %58, %66 : !s8i, !cir.ptr<!s8i> loc(#loc861)
                %67 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc151)
                %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
                %69 = cir.const #cir.int<13> : !s32i loc(#loc153)
                %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc151)
                cir.store %70, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc862)
                cir.scope {
                  %75 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
                  %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc158)
                  cir.if %76 {
                    %77 = cir.const #cir.int<0> : !s32i loc(#loc160)
                    %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc160)
                    %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
                    cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc865)
                  } loc(#loc864)
                } loc(#loc863)
                %71 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc163)
                %72 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
                %73 = cir.const #cir.int<10> : !s32i loc(#loc165)
                %74 = cir.call @strchr(%72, %73) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc163)
                cir.store %74, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc866)
                cir.scope {
                  %75 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
                  %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc170)
                  cir.if %76 {
                    %77 = cir.const #cir.int<0> : !s32i loc(#loc172)
                    %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc172)
                    %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
                    cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc869)
                  } loc(#loc868)
                } loc(#loc867)
                cir.yield loc(#loc56)
              } while {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc175)
                %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc175)
                cir.condition(%19) loc(#loc175)
              } loc(#loc825)
            } loc(#loc825)
            cir.scope {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc178)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc179)
              %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc179)
              %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc871)
              cir.if %21 {
                %22 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc181)
                %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc182)
              } loc(#loc872)
            } loc(#loc870)
            cir.scope {
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc185)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc186)
              %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc186)
              %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc874)
              cir.if %21 {
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc188)
                %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc189)
              } loc(#loc875)
            } loc(#loc873)
          } loc(#loc818)
          cir.break loc(#loc190)
        } loc(#loc38)
        cir.case(default, []) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc21)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc21)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc192)
          cir.break loc(#loc193)
        } loc(#loc191)
        cir.yield loc(#loc35)
      } loc(#loc35)
    } loc(#loc817)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc196)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc878)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc879)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc880)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc206)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
              %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc24)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc24)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc206)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc208)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc882)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc210)
                cir.store %15, %7 : !s32i, !cir.ptr<!s32i> loc(#loc884)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc214)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc886)
                  cir.for : cond {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc216)
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc217)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc887)
                    cir.condition(%20) loc(#loc218)
                  } body {
                    cir.scope {
                      %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc220)
                      %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc221)
                      cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc889)
                    } loc(#loc888)
                    cir.yield loc(#loc213)
                  } step {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc222)
                    %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc223)
                    cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc890)
                    cir.yield loc(#loc885)
                  } loc(#loc885)
                } loc(#loc885)
                %16 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc224)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc225)
              } loc(#loc883)
            } loc(#loc881)
          } loc(#loc877)
          cir.break loc(#loc226)
        } loc(#loc197)
        cir.case(default, []) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc228)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc228)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc229)
          cir.break loc(#loc230)
        } loc(#loc227)
        cir.yield loc(#loc194)
      } loc(#loc194)
    } loc(#loc876)
    cir.return loc(#loc28)
  } loc(#loc813)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_listen_socket_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc892)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc233)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc893)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc235)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc894)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc237)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc895)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc239)
    cir.return loc(#loc232)
  } loc(#loc891)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc896)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc897)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc245)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc246)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc247)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc248)
  cir.func @main(%arg0: !s32i loc(fused[#loc251, #loc252]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc253, #loc254])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc899)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc900)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc250)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc255)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc256)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc257)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc257)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc258)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc245)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc245)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc259)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_listen_socket_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc901)
    cir.call @CWE606_Unchecked_Loop_Condition__char_listen_socket_15_good() : () -> () loc(#loc260)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc246)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc246)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc262)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc247)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc247)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc263)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_listen_socket_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc902)
    cir.call @CWE606_Unchecked_Loop_Condition__char_listen_socket_15_bad() : () -> () loc(#loc264)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc248)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc248)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc266)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc267)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc903)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc903)
    cir.return %17 : !s32i loc(#loc903)
  } loc(#loc898)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc905)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc906)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc906)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc906)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc275)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc907)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc279)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc910)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc911)
            %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc912)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc913)
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc914)
            %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc915)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc290)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc290)
            cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc913)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc292)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc292)
            cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc914)
            %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc295)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc296)
            %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc295)
            cir.store %17, %10 : !u64i, !cir.ptr<!u64i> loc(#loc915)
            cir.scope {
              cir.do {
                %18 = cir.const #cir.int<2> : !s32i loc(#loc299)
                %19 = cir.const #cir.int<1> : !s32i loc(#loc300)
                %20 = cir.const #cir.int<6> : !s32i loc(#loc301)
                %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc302)
                cir.store %21, %8 : !s32i, !cir.ptr<!s32i> loc(#loc917)
                cir.scope {
                  %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc307)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc308)
                  %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc308)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc919)
                  cir.if %78 {
                    cir.break loc(#loc310)
                  } loc(#loc920)
                } loc(#loc918)
                %22 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc921)
                %23 = cir.const #cir.int<0> : !s32i loc(#loc313)
                %24 = cir.const #cir.int<16> : !u64i loc(#loc922)
                cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc923)
                %25 = cir.const #cir.int<2> : !s32i loc(#loc318)
                %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc318)
                %27 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
                cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc924)
                %28 = cir.const #cir.int<0> : !s32i loc(#loc320)
                %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc320)
                %30 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
                %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
                cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc925)
                %32 = cir.const #cir.int<27015> : !s32i loc(#loc322)
                %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc322)
                %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc323)
                %35 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
                cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc926)
                cir.scope {
                  %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc328)
                  %76 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc928)
                  %77 = cir.const #cir.int<16> : !u64i loc(#loc929)
                  %78 = cir.cast(integral, %77 : !u64i), !u32i loc(#loc929)
                  %79 = cir.call @bind(%75, %76, %78) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc333)
                  %80 = cir.const #cir.int<1> : !s32i loc(#loc334)
                  %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc334)
                  %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc930)
                  cir.if %82 {
                    cir.break loc(#loc336)
                  } loc(#loc931)
                } loc(#loc927)
                cir.scope {
                  %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc339)
                  %76 = cir.const #cir.int<5> : !s32i loc(#loc340)
                  %77 = cir.call @listen(%75, %76) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc341)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc342)
                  %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc342)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc933)
                  cir.if %80 {
                    cir.break loc(#loc344)
                  } loc(#loc934)
                } loc(#loc932)
                %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc345)
                %37 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc346)
                %38 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc347)
                %39 = cir.call @accept(%36, %37, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc348)
                cir.store %39, %9 : !s32i, !cir.ptr<!s32i> loc(#loc935)
                cir.scope {
                  %75 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc353)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc354)
                  %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc354)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc937)
                  cir.if %78 {
                    cir.break loc(#loc356)
                  } loc(#loc938)
                } loc(#loc936)
                %40 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc357)
                %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc358)
                %42 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc359)
                %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc360)
                %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc939)
                %45 = cir.const #cir.int<1> : !u64i loc(#loc940)
                %46 = cir.const #cir.int<100> : !s32i loc(#loc365)
                %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc365)
                %48 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc366)
                %49 = cir.binop(sub, %47, %48) : !u64i loc(#loc941)
                %50 = cir.const #cir.int<1> : !s32i loc(#loc367)
                %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc367)
                %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc942)
                %53 = cir.binop(mul, %45, %52) : !u64i loc(#loc943)
                %54 = cir.const #cir.int<0> : !s32i loc(#loc369)
                %55 = cir.call @recv(%40, %44, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc370)
                %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc370)
                cir.store %56, %5 : !s32i, !cir.ptr<!s32i> loc(#loc944)
                cir.scope {
                  %75 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc375)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc376)
                  %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc376)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc946)
                  %79 = cir.ternary(%78, true {
                    %80 = cir.const #true loc(#loc377)
                    cir.yield %80 : !cir.bool loc(#loc377)
                  }, false {
                    %80 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc378)
                    %81 = cir.const #cir.int<0> : !s32i loc(#loc379)
                    %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc947)
                    %83 = cir.ternary(%82, true {
                      %84 = cir.const #true loc(#loc377)
                      cir.yield %84 : !cir.bool loc(#loc377)
                    }, false {
                      %84 = cir.const #false loc(#loc377)
                      cir.yield %84 : !cir.bool loc(#loc377)
                    }) : (!cir.bool) -> !cir.bool loc(#loc377)
                    cir.yield %83 : !cir.bool loc(#loc377)
                  }) : (!cir.bool) -> !cir.bool loc(#loc377)
                  cir.if %79 {
                    cir.break loc(#loc381)
                  } loc(#loc948)
                } loc(#loc945)
                %57 = cir.const #cir.int<0> : !s32i loc(#loc382)
                %58 = cir.cast(integral, %57 : !s32i), !s8i loc(#loc382)
                %59 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc383)
                %60 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc384)
                %61 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc385)
                %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc385)
                %63 = cir.const #cir.int<1> : !u64i loc(#loc949)
                %64 = cir.binop(div, %62, %63) : !u64i loc(#loc950)
                %65 = cir.binop(add, %60, %64) : !u64i loc(#loc951)
                %66 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc388)
                cir.store %58, %66 : !s8i, !cir.ptr<!s8i> loc(#loc952)
                %67 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc389)
                %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc390)
                %69 = cir.const #cir.int<13> : !s32i loc(#loc391)
                %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc389)
                cir.store %70, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc953)
                cir.scope {
                  %75 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc396)
                  %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc396)
                  cir.if %76 {
                    %77 = cir.const #cir.int<0> : !s32i loc(#loc398)
                    %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc398)
                    %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc399)
                    cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc956)
                  } loc(#loc955)
                } loc(#loc954)
                %71 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc401)
                %72 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc402)
                %73 = cir.const #cir.int<10> : !s32i loc(#loc403)
                %74 = cir.call @strchr(%72, %73) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc401)
                cir.store %74, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc957)
                cir.scope {
                  %75 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc408)
                  %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc408)
                  cir.if %76 {
                    %77 = cir.const #cir.int<0> : !s32i loc(#loc410)
                    %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc410)
                    %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc411)
                    cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc960)
                  } loc(#loc959)
                } loc(#loc958)
                cir.yield loc(#loc298)
              } while {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc413)
                %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc413)
                cir.condition(%19) loc(#loc413)
              } loc(#loc916)
            } loc(#loc916)
            cir.scope {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc416)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc417)
              %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc417)
              %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc962)
              cir.if %21 {
                %22 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc419)
                %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc420)
              } loc(#loc963)
            } loc(#loc961)
            cir.scope {
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc423)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc424)
              %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc424)
              %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc965)
              cir.if %21 {
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc426)
                %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc427)
              } loc(#loc966)
            } loc(#loc964)
          } loc(#loc909)
          cir.break loc(#loc428)
        } loc(#loc280)
        cir.case(default, []) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc430)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc430)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc431)
          cir.break loc(#loc432)
        } loc(#loc429)
        cir.yield loc(#loc277)
      } loc(#loc277)
    } loc(#loc908)
    cir.scope {
      %4 = cir.const #cir.int<8> : !s32i loc(#loc435)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc437)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc437)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc438)
          cir.break loc(#loc439)
        } loc(#loc436)
        cir.case(default, []) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc969)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc970)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc971)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc449)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc450)
              %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc451)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc451)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc449)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc452)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc973)
              cir.if %14 {
                cir.scope {
                  %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc456)
                  %16 = cir.const #cir.int<10000> : !s32i loc(#loc457)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc976)
                  cir.if %17 {
                    %18 = cir.const #cir.int<0> : !s32i loc(#loc459)
                    cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc978)
                    cir.scope {
                      %20 = cir.const #cir.int<0> : !s32i loc(#loc463)
                      cir.store %20, %5 : !s32i, !cir.ptr<!s32i> loc(#loc980)
                      cir.for : cond {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc465)
                        %22 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc466)
                        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc981)
                        cir.condition(%23) loc(#loc467)
                      } body {
                        cir.scope {
                          %21 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc469)
                          %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc470)
                          cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc983)
                        } loc(#loc982)
                        cir.yield loc(#loc462)
                      } step {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc471)
                        %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc472)
                        cir.store %22, %5 : !s32i, !cir.ptr<!s32i> loc(#loc984)
                        cir.yield loc(#loc979)
                      } loc(#loc979)
                    } loc(#loc979)
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc473)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc474)
                  } loc(#loc977)
                } loc(#loc975)
              } loc(#loc974)
            } loc(#loc972)
          } loc(#loc968)
          cir.break loc(#loc475)
        } loc(#loc440)
        cir.yield loc(#loc433)
      } loc(#loc433)
    } loc(#loc967)
    cir.return loc(#loc270)
  } loc(#loc904)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc986)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc987)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc987)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc987)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc482)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc988)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc486)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc991)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc992)
            %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc993)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc994)
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc995)
            %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc996)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc497)
            %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc497)
            cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc994)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc499)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc499)
            cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc995)
            %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc502)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc503)
            %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc502)
            cir.store %17, %10 : !u64i, !cir.ptr<!u64i> loc(#loc996)
            cir.scope {
              cir.do {
                %18 = cir.const #cir.int<2> : !s32i loc(#loc506)
                %19 = cir.const #cir.int<1> : !s32i loc(#loc507)
                %20 = cir.const #cir.int<6> : !s32i loc(#loc508)
                %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc509)
                cir.store %21, %8 : !s32i, !cir.ptr<!s32i> loc(#loc998)
                cir.scope {
                  %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc514)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc515)
                  %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc515)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc1000)
                  cir.if %78 {
                    cir.break loc(#loc517)
                  } loc(#loc1001)
                } loc(#loc999)
                %22 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc1002)
                %23 = cir.const #cir.int<0> : !s32i loc(#loc520)
                %24 = cir.const #cir.int<16> : !u64i loc(#loc1003)
                cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc1004)
                %25 = cir.const #cir.int<2> : !s32i loc(#loc525)
                %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc525)
                %27 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
                cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc1005)
                %28 = cir.const #cir.int<0> : !s32i loc(#loc527)
                %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc527)
                %30 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
                %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
                cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc1006)
                %32 = cir.const #cir.int<27015> : !s32i loc(#loc529)
                %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc529)
                %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc530)
                %35 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
                cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc1007)
                cir.scope {
                  %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc535)
                  %76 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc1009)
                  %77 = cir.const #cir.int<16> : !u64i loc(#loc1010)
                  %78 = cir.cast(integral, %77 : !u64i), !u32i loc(#loc1010)
                  %79 = cir.call @bind(%75, %76, %78) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc540)
                  %80 = cir.const #cir.int<1> : !s32i loc(#loc541)
                  %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc541)
                  %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc1011)
                  cir.if %82 {
                    cir.break loc(#loc543)
                  } loc(#loc1012)
                } loc(#loc1008)
                cir.scope {
                  %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc546)
                  %76 = cir.const #cir.int<5> : !s32i loc(#loc547)
                  %77 = cir.call @listen(%75, %76) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc548)
                  %78 = cir.const #cir.int<1> : !s32i loc(#loc549)
                  %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc549)
                  %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc1014)
                  cir.if %80 {
                    cir.break loc(#loc551)
                  } loc(#loc1015)
                } loc(#loc1013)
                %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc552)
                %37 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc553)
                %38 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc554)
                %39 = cir.call @accept(%36, %37, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc555)
                cir.store %39, %9 : !s32i, !cir.ptr<!s32i> loc(#loc1016)
                cir.scope {
                  %75 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc560)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc561)
                  %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc561)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc1018)
                  cir.if %78 {
                    cir.break loc(#loc563)
                  } loc(#loc1019)
                } loc(#loc1017)
                %40 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc564)
                %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc565)
                %42 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc566)
                %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc567)
                %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc1020)
                %45 = cir.const #cir.int<1> : !u64i loc(#loc1021)
                %46 = cir.const #cir.int<100> : !s32i loc(#loc572)
                %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc572)
                %48 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc573)
                %49 = cir.binop(sub, %47, %48) : !u64i loc(#loc1022)
                %50 = cir.const #cir.int<1> : !s32i loc(#loc574)
                %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc574)
                %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc1023)
                %53 = cir.binop(mul, %45, %52) : !u64i loc(#loc1024)
                %54 = cir.const #cir.int<0> : !s32i loc(#loc576)
                %55 = cir.call @recv(%40, %44, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc577)
                %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc577)
                cir.store %56, %5 : !s32i, !cir.ptr<!s32i> loc(#loc1025)
                cir.scope {
                  %75 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc582)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc583)
                  %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc583)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc1027)
                  %79 = cir.ternary(%78, true {
                    %80 = cir.const #true loc(#loc584)
                    cir.yield %80 : !cir.bool loc(#loc584)
                  }, false {
                    %80 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc585)
                    %81 = cir.const #cir.int<0> : !s32i loc(#loc586)
                    %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc1028)
                    %83 = cir.ternary(%82, true {
                      %84 = cir.const #true loc(#loc584)
                      cir.yield %84 : !cir.bool loc(#loc584)
                    }, false {
                      %84 = cir.const #false loc(#loc584)
                      cir.yield %84 : !cir.bool loc(#loc584)
                    }) : (!cir.bool) -> !cir.bool loc(#loc584)
                    cir.yield %83 : !cir.bool loc(#loc584)
                  }) : (!cir.bool) -> !cir.bool loc(#loc584)
                  cir.if %79 {
                    cir.break loc(#loc588)
                  } loc(#loc1029)
                } loc(#loc1026)
                %57 = cir.const #cir.int<0> : !s32i loc(#loc589)
                %58 = cir.cast(integral, %57 : !s32i), !s8i loc(#loc589)
                %59 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc590)
                %60 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc591)
                %61 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc592)
                %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc592)
                %63 = cir.const #cir.int<1> : !u64i loc(#loc1030)
                %64 = cir.binop(div, %62, %63) : !u64i loc(#loc1031)
                %65 = cir.binop(add, %60, %64) : !u64i loc(#loc1032)
                %66 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc595)
                cir.store %58, %66 : !s8i, !cir.ptr<!s8i> loc(#loc1033)
                %67 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc596)
                %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc597)
                %69 = cir.const #cir.int<13> : !s32i loc(#loc598)
                %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc596)
                cir.store %70, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc1034)
                cir.scope {
                  %75 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc603)
                  %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc603)
                  cir.if %76 {
                    %77 = cir.const #cir.int<0> : !s32i loc(#loc605)
                    %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc605)
                    %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc606)
                    cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc1037)
                  } loc(#loc1036)
                } loc(#loc1035)
                %71 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc608)
                %72 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc609)
                %73 = cir.const #cir.int<10> : !s32i loc(#loc610)
                %74 = cir.call @strchr(%72, %73) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc608)
                cir.store %74, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc1038)
                cir.scope {
                  %75 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc615)
                  %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc615)
                  cir.if %76 {
                    %77 = cir.const #cir.int<0> : !s32i loc(#loc617)
                    %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc617)
                    %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc618)
                    cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc1041)
                  } loc(#loc1040)
                } loc(#loc1039)
                cir.yield loc(#loc505)
              } while {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc620)
                %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc620)
                cir.condition(%19) loc(#loc620)
              } loc(#loc997)
            } loc(#loc997)
            cir.scope {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc623)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc624)
              %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc624)
              %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc1043)
              cir.if %21 {
                %22 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc626)
                %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc627)
              } loc(#loc1044)
            } loc(#loc1042)
            cir.scope {
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc630)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc631)
              %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc631)
              %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc1046)
              cir.if %21 {
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc633)
                %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc634)
              } loc(#loc1047)
            } loc(#loc1045)
          } loc(#loc990)
          cir.break loc(#loc635)
        } loc(#loc487)
        cir.case(default, []) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc637)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc637)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc638)
          cir.break loc(#loc639)
        } loc(#loc636)
        cir.yield loc(#loc484)
      } loc(#loc484)
    } loc(#loc989)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc642)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc1050)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc1051)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc1052)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc652)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc653)
              %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc654)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc654)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc652)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc655)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc1054)
              cir.if %14 {
                cir.scope {
                  %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc659)
                  %16 = cir.const #cir.int<10000> : !s32i loc(#loc660)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc1057)
                  cir.if %17 {
                    %18 = cir.const #cir.int<0> : !s32i loc(#loc662)
                    cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc1059)
                    cir.scope {
                      %20 = cir.const #cir.int<0> : !s32i loc(#loc666)
                      cir.store %20, %5 : !s32i, !cir.ptr<!s32i> loc(#loc1061)
                      cir.for : cond {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc668)
                        %22 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc669)
                        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc1062)
                        cir.condition(%23) loc(#loc670)
                      } body {
                        cir.scope {
                          %21 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc672)
                          %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc673)
                          cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc1064)
                        } loc(#loc1063)
                        cir.yield loc(#loc665)
                      } step {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc674)
                        %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc675)
                        cir.store %22, %5 : !s32i, !cir.ptr<!s32i> loc(#loc1065)
                        cir.yield loc(#loc1060)
                      } loc(#loc1060)
                    } loc(#loc1060)
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc676)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc677)
                  } loc(#loc1058)
                } loc(#loc1056)
              } loc(#loc1055)
            } loc(#loc1053)
          } loc(#loc1049)
          cir.break loc(#loc678)
        } loc(#loc643)
        cir.case(default, []) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc680)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc680)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc681)
          cir.break loc(#loc682)
        } loc(#loc679)
        cir.yield loc(#loc640)
      } loc(#loc640)
    } loc(#loc1048)
    cir.return loc(#loc477)
  } loc(#loc985)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc1066)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc685)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc1068)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc1069)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc1069)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc1069)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc692)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc1070)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc696)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc698)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc698)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc699)
          cir.break loc(#loc700)
        } loc(#loc697)
        cir.case(default, []) {
          %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc702)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc703)
          %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc685)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc685)
          %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc702)
          cir.break loc(#loc704)
        } loc(#loc701)
        cir.yield loc(#loc694)
      } loc(#loc694)
    } loc(#loc1071)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc707)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc1074)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc1075)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc1076)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc717)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc718)
              %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc719)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc719)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc717)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc720)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc1078)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc722)
                cir.store %15, %7 : !s32i, !cir.ptr<!s32i> loc(#loc1080)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc726)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc1082)
                  cir.for : cond {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc728)
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc729)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc1083)
                    cir.condition(%20) loc(#loc730)
                  } body {
                    cir.scope {
                      %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc732)
                      %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc733)
                      cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc1085)
                    } loc(#loc1084)
                    cir.yield loc(#loc725)
                  } step {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc734)
                    %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc735)
                    cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc1086)
                    cir.yield loc(#loc1081)
                  } loc(#loc1081)
                } loc(#loc1081)
                %16 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc736)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc737)
              } loc(#loc1079)
            } loc(#loc1077)
          } loc(#loc1073)
          cir.break loc(#loc738)
        } loc(#loc708)
        cir.case(default, []) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc740)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc740)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc741)
          cir.break loc(#loc742)
        } loc(#loc739)
        cir.yield loc(#loc705)
      } loc(#loc705)
    } loc(#loc1072)
    cir.return loc(#loc687)
  } loc(#loc1067)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc1088)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc1089)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc1089)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc1089)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc749)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc1090)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc753)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc755)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc756)
          %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc757)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc757)
          %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc755)
          cir.break loc(#loc758)
        } loc(#loc754)
        cir.case(default, []) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc760)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc760)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc761)
          cir.break loc(#loc762)
        } loc(#loc759)
        cir.yield loc(#loc751)
      } loc(#loc751)
    } loc(#loc1091)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc765)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc1094)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc1095)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc1096)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc775)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc776)
              %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc777)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc777)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc775)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc778)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc1098)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc780)
                cir.store %15, %7 : !s32i, !cir.ptr<!s32i> loc(#loc1100)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc784)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc1102)
                  cir.for : cond {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc786)
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc787)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc1103)
                    cir.condition(%20) loc(#loc788)
                  } body {
                    cir.scope {
                      %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc790)
                      %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc791)
                      cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc1105)
                    } loc(#loc1104)
                    cir.yield loc(#loc783)
                  } step {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc792)
                    %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc793)
                    cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc1106)
                    cir.yield loc(#loc1101)
                  } loc(#loc1101)
                } loc(#loc1101)
                %16 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc794)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc795)
              } loc(#loc1099)
            } loc(#loc1097)
          } loc(#loc1093)
          cir.break loc(#loc796)
        } loc(#loc766)
        cir.case(default, []) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc798)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc798)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc799)
          cir.break loc(#loc800)
        } loc(#loc797)
        cir.yield loc(#loc763)
      } loc(#loc763)
    } loc(#loc1092)
    cir.return loc(#loc744)
  } loc(#loc1087)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":404:1)
#loc6 = loc("/usr/include/netinet/in.h":405:40)
#loc7 = loc("/usr/include/sys/socket.h":112:1)
#loc8 = loc("/usr/include/sys/socket.h":113:6)
#loc9 = loc("/usr/include/sys/socket.h":296:1)
#loc10 = loc("/usr/include/sys/socket.h":296:39)
#loc11 = loc("/usr/include/sys/socket.h":306:1)
#loc12 = loc("/usr/include/sys/socket.h":307:38)
#loc13 = loc("/usr/include/sys/socket.h":145:1)
#loc14 = loc("/usr/include/sys/socket.h":145:68)
#loc15 = loc("/usr/include/string.h":246:1)
#loc16 = loc("/usr/include/string.h":247:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":139:19)
#loc22 = loc("/usr/include/stdio.h":468:1)
#loc23 = loc("/usr/include/stdio.h":468:12)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":147:26)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":49:1)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":165:1)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":51:5)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":51:12)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":52:5)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":52:28)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":53:12)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":53:5)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":54:5)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":141:5)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":54:12)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":56:5)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":57:5)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":135:5)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":62:9)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":62:13)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":63:9)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":63:28)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":64:9)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":64:15)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":65:9)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":65:31)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":66:9)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":66:31)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":67:9)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":67:37)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":67:26)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":67:33)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":68:9)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":120:17)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":78:35)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":78:44)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":78:57)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":78:28)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":78:13)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":78:68)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":79:13)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":82:13)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":79:17)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":79:33)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":80:13)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":81:17)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":83:20)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":83:21)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":83:30)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":83:33)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":83:47)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":83:13)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":83:48)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":84:34)
#loc77 = loc("/usr/include/netinet/in.h":249:5)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":84:13)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":85:39)
#loc80 = loc("/usr/include/netinet/in.h":251:20)
#loc81 = loc("/usr/include/netinet/in.h":33:15)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":85:13)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":86:38)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":86:32)
#loc85 = loc("/usr/include/netinet/in.h":250:15)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":86:13)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":86:46)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":87:13)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":90:13)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":87:22)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":87:54)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":87:55)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":87:64)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":87:78)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":87:17)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":87:84)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":88:13)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":89:17)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":91:13)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":94:13)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":91:24)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":91:38)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":91:17)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":91:57)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":92:13)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":93:17)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":95:35)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":95:49)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":95:55)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":95:28)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":95:13)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":95:59)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":96:13)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":99:13)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":96:17)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":96:33)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":97:13)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":98:17)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:31)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:54)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:61)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:59)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:45)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:68)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:71)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:82)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:87)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:93)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:103)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:104)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:107)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:26)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:13)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:108)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":102:13)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":105:13)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":102:17)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":102:31)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":102:44)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":102:47)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":102:61)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":103:13)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":104:17)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":107:57)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":107:13)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":107:18)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":107:28)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":107:41)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":107:52)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":107:53)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":109:23)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":109:30)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":109:36)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":109:13)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":109:40)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":110:13)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":113:13)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":110:17)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":111:13)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":112:28)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":112:18)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":112:17)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":114:23)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":114:30)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":114:36)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":114:13)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":114:40)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":115:13)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":118:13)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":115:17)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":116:13)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":117:28)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":117:18)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":117:17)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":120:16)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":121:9)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":124:9)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":121:13)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":121:29)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":122:9)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":123:26)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":123:13)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":125:9)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":128:9)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":125:13)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":125:29)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":126:9)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":127:26)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":127:13)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":136:5)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":137:5)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":139:9)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":140:9)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":142:5)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":164:5)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":142:12)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":144:5)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":145:5)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":158:5)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":146:9)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":146:13)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":146:16)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":146:19)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":147:9)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":157:9)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":147:13)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":147:20)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":147:39)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":148:9)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":150:27)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":150:13)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":151:13)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":155:13)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":151:22)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":151:18)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":151:25)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":151:29)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":151:27)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":152:13)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":154:28)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":154:17)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":151:33)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":151:32)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":156:26)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":156:13)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":159:5)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":160:5)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":162:19)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":162:9)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":163:9)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":499:1)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":505:1)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":501:5)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":501:14)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":502:5)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":502:14)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":503:5)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":503:14)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":504:5)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":504:14)
#loc241 = loc("/usr/include/stdlib.h":575:1)
#loc242 = loc("/usr/include/stdlib.h":575:41)
#loc243 = loc("/usr/include/time.h":76:1)
#loc244 = loc("/usr/include/time.h":76:38)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":521:15)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":523:15)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":526:15)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":528:15)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":516:1)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":531:1)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":517:1)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":519:27)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":519:22)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":519:5)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":521:5)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":522:5)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":522:65)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":523:5)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":526:5)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":527:5)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":527:64)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":528:5)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":530:12)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":530:5)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":172:1)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":291:1)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":174:5)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":174:12)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":175:5)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":175:28)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":176:12)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":176:5)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":177:5)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":264:5)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":177:12)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":179:5)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":180:5)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":258:5)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":185:9)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":185:13)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":186:9)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":186:28)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":187:9)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":187:15)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":188:9)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":188:31)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":189:9)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":189:31)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":190:9)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":190:37)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":190:26)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":190:33)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":191:9)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":243:17)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":201:35)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":201:44)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":201:57)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":201:28)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":201:13)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":201:68)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":202:13)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":205:13)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":202:17)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":202:33)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":203:13)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":204:17)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":206:20)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":206:21)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":206:30)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":206:33)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":206:47)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":206:13)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":206:48)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":207:34)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":207:13)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":208:39)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":208:13)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":209:38)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":209:32)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":209:13)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":209:46)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":210:13)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":213:13)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":210:22)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":210:54)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":210:55)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":210:64)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":210:78)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":210:17)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":210:84)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":211:13)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":212:17)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":214:13)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":217:13)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":214:24)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":214:38)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":214:17)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":214:57)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":215:13)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":216:17)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":218:35)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":218:49)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":218:55)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":218:28)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":218:13)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":218:59)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":219:13)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":222:13)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":219:17)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":219:33)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":220:13)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":221:17)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:31)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:54)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:61)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:59)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:45)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:68)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:71)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:82)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:87)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:93)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:103)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:104)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:107)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:26)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:13)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:108)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":225:13)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":228:13)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":225:17)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":225:31)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":225:44)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":225:47)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":225:61)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":226:13)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":227:17)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":230:57)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":230:13)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":230:18)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":230:28)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":230:41)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":230:52)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":230:53)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":232:23)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":232:30)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":232:36)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":232:13)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":232:40)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":233:13)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":236:13)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":233:17)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":234:13)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":235:28)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":235:18)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":235:17)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":237:23)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":237:30)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":237:36)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":237:13)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":237:40)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":238:13)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":241:13)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":238:17)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":239:13)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":240:28)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":240:18)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":240:17)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":243:16)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":244:9)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":247:9)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":244:13)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":244:29)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":245:9)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":246:26)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":246:13)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":248:9)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":251:9)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":248:13)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":248:29)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":249:9)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":250:26)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":250:13)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":259:5)
#loc429 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":260:5)
#loc430 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":262:19)
#loc431 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":262:9)
#loc432 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":263:9)
#loc433 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":265:5)
#loc434 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":290:5)
#loc435 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":265:12)
#loc436 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":267:5)
#loc437 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":269:19)
#loc438 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":269:9)
#loc439 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":270:9)
#loc440 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":271:5)
#loc441 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":272:5)
#loc442 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":288:5)
#loc443 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":273:9)
#loc444 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":273:13)
#loc445 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":273:16)
#loc446 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":273:19)
#loc447 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":274:9)
#loc448 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":287:9)
#loc449 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":274:13)
#loc450 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":274:20)
#loc451 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":274:26)
#loc452 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":274:39)
#loc453 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":275:9)
#loc454 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":277:13)
#loc455 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":286:13)
#loc456 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":277:17)
#loc457 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":277:21)
#loc458 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":278:13)
#loc459 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":279:31)
#loc460 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":279:17)
#loc461 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":280:17)
#loc462 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":284:17)
#loc463 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":280:26)
#loc464 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":280:22)
#loc465 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":280:29)
#loc466 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":280:33)
#loc467 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":280:31)
#loc468 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":281:17)
#loc469 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":283:32)
#loc470 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":283:21)
#loc471 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":280:37)
#loc472 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":280:36)
#loc473 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":285:30)
#loc474 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":285:17)
#loc475 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":289:5)
#loc476 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":294:1)
#loc477 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":413:1)
#loc478 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":296:5)
#loc479 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":296:12)
#loc480 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":297:5)
#loc481 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":297:28)
#loc482 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":298:12)
#loc483 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":298:5)
#loc484 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":299:5)
#loc485 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":386:5)
#loc486 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":299:12)
#loc487 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":301:5)
#loc488 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":302:5)
#loc489 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":380:5)
#loc490 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":307:9)
#loc491 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":307:13)
#loc492 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":308:9)
#loc493 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":308:28)
#loc494 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":309:9)
#loc495 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":309:15)
#loc496 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":310:9)
#loc497 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":310:31)
#loc498 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":311:9)
#loc499 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":311:31)
#loc500 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":312:9)
#loc501 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":312:37)
#loc502 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":312:26)
#loc503 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":312:33)
#loc504 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":313:9)
#loc505 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":365:17)
#loc506 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":323:35)
#loc507 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":323:44)
#loc508 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":323:57)
#loc509 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":323:28)
#loc510 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":323:13)
#loc511 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":323:68)
#loc512 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":324:13)
#loc513 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":327:13)
#loc514 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":324:17)
#loc515 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":324:33)
#loc516 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":325:13)
#loc517 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":326:17)
#loc518 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":328:20)
#loc519 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":328:21)
#loc520 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":328:30)
#loc521 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":328:33)
#loc522 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":328:47)
#loc523 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":328:13)
#loc524 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":328:48)
#loc525 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":329:34)
#loc526 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":329:13)
#loc527 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":330:39)
#loc528 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":330:13)
#loc529 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":331:38)
#loc530 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":331:32)
#loc531 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":331:13)
#loc532 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":331:46)
#loc533 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":332:13)
#loc534 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":335:13)
#loc535 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":332:22)
#loc536 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":332:54)
#loc537 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":332:55)
#loc538 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":332:64)
#loc539 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":332:78)
#loc540 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":332:17)
#loc541 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":332:84)
#loc542 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":333:13)
#loc543 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":334:17)
#loc544 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":336:13)
#loc545 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":339:13)
#loc546 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":336:24)
#loc547 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":336:38)
#loc548 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":336:17)
#loc549 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":336:57)
#loc550 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":337:13)
#loc551 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":338:17)
#loc552 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":340:35)
#loc553 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":340:49)
#loc554 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":340:55)
#loc555 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":340:28)
#loc556 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":340:13)
#loc557 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":340:59)
#loc558 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":341:13)
#loc559 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":344:13)
#loc560 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":341:17)
#loc561 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":341:33)
#loc562 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":342:13)
#loc563 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":343:17)
#loc564 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:31)
#loc565 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:54)
#loc566 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:61)
#loc567 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:59)
#loc568 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:45)
#loc569 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:68)
#loc570 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:71)
#loc571 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:82)
#loc572 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:87)
#loc573 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:93)
#loc574 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:103)
#loc575 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:104)
#loc576 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:107)
#loc577 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:26)
#loc578 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:13)
#loc579 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:108)
#loc580 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":347:13)
#loc581 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":350:13)
#loc582 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":347:17)
#loc583 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":347:31)
#loc584 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":347:44)
#loc585 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":347:47)
#loc586 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":347:61)
#loc587 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":348:13)
#loc588 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":349:17)
#loc589 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":352:57)
#loc590 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":352:13)
#loc591 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":352:18)
#loc592 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":352:28)
#loc593 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":352:41)
#loc594 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":352:52)
#loc595 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":352:53)
#loc596 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":354:23)
#loc597 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":354:30)
#loc598 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":354:36)
#loc599 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":354:13)
#loc600 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":354:40)
#loc601 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":355:13)
#loc602 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":358:13)
#loc603 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":355:17)
#loc604 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":356:13)
#loc605 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":357:28)
#loc606 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":357:18)
#loc607 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":357:17)
#loc608 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":359:23)
#loc609 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":359:30)
#loc610 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":359:36)
#loc611 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":359:13)
#loc612 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":359:40)
#loc613 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":360:13)
#loc614 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":363:13)
#loc615 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":360:17)
#loc616 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":361:13)
#loc617 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":362:28)
#loc618 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":362:18)
#loc619 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":362:17)
#loc620 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":365:16)
#loc621 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":366:9)
#loc622 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":369:9)
#loc623 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":366:13)
#loc624 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":366:29)
#loc625 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":367:9)
#loc626 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":368:26)
#loc627 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":368:13)
#loc628 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":370:9)
#loc629 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":373:9)
#loc630 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":370:13)
#loc631 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":370:29)
#loc632 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":371:9)
#loc633 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":372:26)
#loc634 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":372:13)
#loc635 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":381:5)
#loc636 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":382:5)
#loc637 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":384:19)
#loc638 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":384:9)
#loc639 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":385:9)
#loc640 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":387:5)
#loc641 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":412:5)
#loc642 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":387:12)
#loc643 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":389:5)
#loc644 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":390:5)
#loc645 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":406:5)
#loc646 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":391:9)
#loc647 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":391:13)
#loc648 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":391:16)
#loc649 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":391:19)
#loc650 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":392:9)
#loc651 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":405:9)
#loc652 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":392:13)
#loc653 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":392:20)
#loc654 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":392:26)
#loc655 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":392:39)
#loc656 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":393:9)
#loc657 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":395:13)
#loc658 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":404:13)
#loc659 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":395:17)
#loc660 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":395:21)
#loc661 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":396:13)
#loc662 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":397:31)
#loc663 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":397:17)
#loc664 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":398:17)
#loc665 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":402:17)
#loc666 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":398:26)
#loc667 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":398:22)
#loc668 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":398:29)
#loc669 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":398:33)
#loc670 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":398:31)
#loc671 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":399:17)
#loc672 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":401:32)
#loc673 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":401:21)
#loc674 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":398:37)
#loc675 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":398:36)
#loc676 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":403:30)
#loc677 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":403:17)
#loc678 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":407:5)
#loc679 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":408:5)
#loc680 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":410:19)
#loc681 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":410:9)
#loc682 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":411:9)
#loc683 = loc("/usr/include/string.h":141:1)
#loc684 = loc("/usr/include/string.h":142:14)
#loc685 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":429:22)
#loc686 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":416:1)
#loc687 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":455:1)
#loc688 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":418:5)
#loc689 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":418:12)
#loc690 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":419:5)
#loc691 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":419:28)
#loc692 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":420:12)
#loc693 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":420:5)
#loc694 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":421:5)
#loc695 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":431:5)
#loc696 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":421:12)
#loc697 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":423:5)
#loc698 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":425:19)
#loc699 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":425:9)
#loc700 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":426:9)
#loc701 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":427:5)
#loc702 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":429:9)
#loc703 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":429:16)
#loc704 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":430:9)
#loc705 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":432:5)
#loc706 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":454:5)
#loc707 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":432:12)
#loc708 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":434:5)
#loc709 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":435:5)
#loc710 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":448:5)
#loc711 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":436:9)
#loc712 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":436:13)
#loc713 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":436:16)
#loc714 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":436:19)
#loc715 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":437:9)
#loc716 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":447:9)
#loc717 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":437:13)
#loc718 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":437:20)
#loc719 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":437:26)
#loc720 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":437:39)
#loc721 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":438:9)
#loc722 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":440:27)
#loc723 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":440:13)
#loc724 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":441:13)
#loc725 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":445:13)
#loc726 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":441:22)
#loc727 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":441:18)
#loc728 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":441:25)
#loc729 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":441:29)
#loc730 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":441:27)
#loc731 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":442:13)
#loc732 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":444:28)
#loc733 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":444:17)
#loc734 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":441:33)
#loc735 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":441:32)
#loc736 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":446:26)
#loc737 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":446:13)
#loc738 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":449:5)
#loc739 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":450:5)
#loc740 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":452:19)
#loc741 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":452:9)
#loc742 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":453:9)
#loc743 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":458:1)
#loc744 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":497:1)
#loc745 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":460:5)
#loc746 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":460:12)
#loc747 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":461:5)
#loc748 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":461:28)
#loc749 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":462:12)
#loc750 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":462:5)
#loc751 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":463:5)
#loc752 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":473:5)
#loc753 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":463:12)
#loc754 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":465:5)
#loc755 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":467:9)
#loc756 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":467:16)
#loc757 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":467:22)
#loc758 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":468:9)
#loc759 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":469:5)
#loc760 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":471:19)
#loc761 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":471:9)
#loc762 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":472:9)
#loc763 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":474:5)
#loc764 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":496:5)
#loc765 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":474:12)
#loc766 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":476:5)
#loc767 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":477:5)
#loc768 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":490:5)
#loc769 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":478:9)
#loc770 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":478:13)
#loc771 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":478:16)
#loc772 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":478:19)
#loc773 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":479:9)
#loc774 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":489:9)
#loc775 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":479:13)
#loc776 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":479:20)
#loc777 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":479:26)
#loc778 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":479:39)
#loc779 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":480:9)
#loc780 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":482:27)
#loc781 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":482:13)
#loc782 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":483:13)
#loc783 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":487:13)
#loc784 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":483:22)
#loc785 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":483:18)
#loc786 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":483:25)
#loc787 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":483:29)
#loc788 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":483:27)
#loc789 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":484:13)
#loc790 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":486:28)
#loc791 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":486:17)
#loc792 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":483:33)
#loc793 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":483:32)
#loc794 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":488:26)
#loc795 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":488:13)
#loc796 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":491:5)
#loc797 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":492:5)
#loc798 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":494:19)
#loc799 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":494:9)
#loc800 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":495:9)
#loc801 = loc(fused[#loc1, #loc2])
#loc802 = loc(fused[#loc3, #loc4])
#loc803 = loc(fused[#loc5, #loc6])
#loc804 = loc(fused[#loc7, #loc8])
#loc805 = loc(fused[#loc9, #loc10])
#loc806 = loc(fused[#loc11, #loc12])
#loc807 = loc(fused[#loc13, #loc14])
#loc808 = loc(fused[#loc15, #loc16])
#loc809 = loc(fused[#loc17, #loc18])
#loc810 = loc(fused[#loc19, #loc20])
#loc811 = loc(fused[#loc22, #loc23])
#loc812 = loc(fused[#loc25, #loc26])
#loc813 = loc(fused[#loc27, #loc28])
#loc814 = loc(fused[#loc29, #loc30])
#loc815 = loc(fused[#loc31, #loc32])
#loc816 = loc(fused[#loc34, #loc33])
#loc817 = loc(fused[#loc35, #loc36])
#loc818 = loc(fused[#loc39, #loc40])
#loc819 = loc(fused[#loc41, #loc42])
#loc820 = loc(fused[#loc43, #loc44])
#loc821 = loc(fused[#loc45, #loc46])
#loc822 = loc(fused[#loc47, #loc48])
#loc823 = loc(fused[#loc49, #loc50])
#loc824 = loc(fused[#loc51, #loc52])
#loc825 = loc(fused[#loc55, #loc56])
#loc826 = loc(fused[#loc61, #loc62])
#loc827 = loc(fused[#loc63, #loc64])
#loc828 = loc(fused[#loc65, #loc66])
#loc829 = loc(fused[#loc67, #loc64])
#loc830 = loc(fused[#loc69, #loc70])
#loc831 = loc(fused[#loc72, #loc73])
#loc832 = loc(fused[#loc74, #loc75])
#loc833 = loc(fused[#loc78, #loc76])
#loc834 = loc(fused[#loc82, #loc79])
#loc835 = loc(fused[#loc86, #loc87])
#loc836 = loc(fused[#loc88, #loc89])
#loc837 = loc(fused[#loc91, #loc92])
#loc838 = loc(fused[#loc93, #loc94])
#loc839 = loc(fused[#loc95, #loc96])
#loc840 = loc(fused[#loc97, #loc89])
#loc841 = loc(fused[#loc99, #loc100])
#loc842 = loc(fused[#loc103, #loc104])
#loc843 = loc(fused[#loc105, #loc100])
#loc844 = loc(fused[#loc111, #loc112])
#loc845 = loc(fused[#loc113, #loc114])
#loc846 = loc(fused[#loc115, #loc116])
#loc847 = loc(fused[#loc117, #loc114])
#loc848 = loc(fused[#loc123, #loc124])
#loc849 = loc(fused[#loc125, #loc126])
#loc850 = loc(fused[#loc127, #loc128])
#loc851 = loc(fused[#loc127, #loc129])
#loc852 = loc(fused[#loc125, #loc130])
#loc853 = loc(fused[#loc133, #loc134])
#loc854 = loc(fused[#loc135, #loc136])
#loc855 = loc(fused[#loc137, #loc138])
#loc856 = loc(fused[#loc140, #loc141])
#loc857 = loc(fused[#loc142, #loc136])
#loc858 = loc(fused[#loc148, #loc149])
#loc859 = loc(fused[#loc147, #loc149])
#loc860 = loc(fused[#loc146, #loc149])
#loc861 = loc(fused[#loc145, #loc144])
#loc862 = loc(fused[#loc154, #loc155])
#loc863 = loc(fused[#loc156, #loc157])
#loc864 = loc(fused[#loc159, #loc157])
#loc865 = loc(fused[#loc162, #loc160])
#loc866 = loc(fused[#loc166, #loc167])
#loc867 = loc(fused[#loc168, #loc169])
#loc868 = loc(fused[#loc171, #loc169])
#loc869 = loc(fused[#loc174, #loc172])
#loc870 = loc(fused[#loc176, #loc177])
#loc871 = loc(fused[#loc178, #loc179])
#loc872 = loc(fused[#loc180, #loc177])
#loc873 = loc(fused[#loc183, #loc184])
#loc874 = loc(fused[#loc185, #loc186])
#loc875 = loc(fused[#loc187, #loc184])
#loc876 = loc(fused[#loc194, #loc195])
#loc877 = loc(fused[#loc198, #loc199])
#loc878 = loc(fused[#loc200, #loc201])
#loc879 = loc(fused[#loc200, #loc202])
#loc880 = loc(fused[#loc200, #loc203])
#loc881 = loc(fused[#loc204, #loc205])
#loc882 = loc(fused[#loc206, #loc208])
#loc883 = loc(fused[#loc209, #loc205])
#loc884 = loc(fused[#loc211, #loc210])
#loc885 = loc(fused[#loc212, #loc213])
#loc886 = loc(fused[#loc215, #loc214])
#loc887 = loc(fused[#loc216, #loc217])
#loc888 = loc(fused[#loc219, #loc213])
#loc889 = loc(fused[#loc221, #loc220])
#loc890 = loc(fused[#loc223, #loc222])
#loc891 = loc(fused[#loc231, #loc232])
#loc892 = loc(fused[#loc233, #loc234])
#loc893 = loc(fused[#loc235, #loc236])
#loc894 = loc(fused[#loc237, #loc238])
#loc895 = loc(fused[#loc239, #loc240])
#loc896 = loc(fused[#loc241, #loc242])
#loc897 = loc(fused[#loc243, #loc244])
#loc898 = loc(fused[#loc249, #loc250])
#loc901 = loc(fused[#loc260, #loc261])
#loc902 = loc(fused[#loc264, #loc265])
#loc903 = loc(fused[#loc268, #loc267])
#loc904 = loc(fused[#loc269, #loc270])
#loc905 = loc(fused[#loc271, #loc272])
#loc906 = loc(fused[#loc273, #loc274])
#loc907 = loc(fused[#loc276, #loc275])
#loc908 = loc(fused[#loc277, #loc278])
#loc909 = loc(fused[#loc281, #loc282])
#loc910 = loc(fused[#loc283, #loc284])
#loc911 = loc(fused[#loc285, #loc286])
#loc912 = loc(fused[#loc287, #loc288])
#loc913 = loc(fused[#loc289, #loc290])
#loc914 = loc(fused[#loc291, #loc292])
#loc915 = loc(fused[#loc293, #loc294])
#loc916 = loc(fused[#loc297, #loc298])
#loc917 = loc(fused[#loc303, #loc304])
#loc918 = loc(fused[#loc305, #loc306])
#loc919 = loc(fused[#loc307, #loc308])
#loc920 = loc(fused[#loc309, #loc306])
#loc921 = loc(fused[#loc311, #loc312])
#loc922 = loc(fused[#loc314, #loc315])
#loc923 = loc(fused[#loc316, #loc317])
#loc924 = loc(fused[#loc319, #loc318])
#loc925 = loc(fused[#loc321, #loc320])
#loc926 = loc(fused[#loc324, #loc325])
#loc927 = loc(fused[#loc326, #loc327])
#loc928 = loc(fused[#loc329, #loc330])
#loc929 = loc(fused[#loc331, #loc332])
#loc930 = loc(fused[#loc333, #loc334])
#loc931 = loc(fused[#loc335, #loc327])
#loc932 = loc(fused[#loc337, #loc338])
#loc933 = loc(fused[#loc341, #loc342])
#loc934 = loc(fused[#loc343, #loc338])
#loc935 = loc(fused[#loc349, #loc350])
#loc936 = loc(fused[#loc351, #loc352])
#loc937 = loc(fused[#loc353, #loc354])
#loc938 = loc(fused[#loc355, #loc352])
#loc939 = loc(fused[#loc361, #loc362])
#loc940 = loc(fused[#loc363, #loc364])
#loc941 = loc(fused[#loc365, #loc366])
#loc942 = loc(fused[#loc365, #loc367])
#loc943 = loc(fused[#loc363, #loc368])
#loc944 = loc(fused[#loc371, #loc372])
#loc945 = loc(fused[#loc373, #loc374])
#loc946 = loc(fused[#loc375, #loc376])
#loc947 = loc(fused[#loc378, #loc379])
#loc948 = loc(fused[#loc380, #loc374])
#loc949 = loc(fused[#loc386, #loc387])
#loc950 = loc(fused[#loc385, #loc387])
#loc951 = loc(fused[#loc384, #loc387])
#loc952 = loc(fused[#loc383, #loc382])
#loc953 = loc(fused[#loc392, #loc393])
#loc954 = loc(fused[#loc394, #loc395])
#loc955 = loc(fused[#loc397, #loc395])
#loc956 = loc(fused[#loc400, #loc398])
#loc957 = loc(fused[#loc404, #loc405])
#loc958 = loc(fused[#loc406, #loc407])
#loc959 = loc(fused[#loc409, #loc407])
#loc960 = loc(fused[#loc412, #loc410])
#loc961 = loc(fused[#loc414, #loc415])
#loc962 = loc(fused[#loc416, #loc417])
#loc963 = loc(fused[#loc418, #loc415])
#loc964 = loc(fused[#loc421, #loc422])
#loc965 = loc(fused[#loc423, #loc424])
#loc966 = loc(fused[#loc425, #loc422])
#loc967 = loc(fused[#loc433, #loc434])
#loc968 = loc(fused[#loc441, #loc442])
#loc969 = loc(fused[#loc443, #loc444])
#loc970 = loc(fused[#loc443, #loc445])
#loc971 = loc(fused[#loc443, #loc446])
#loc972 = loc(fused[#loc447, #loc448])
#loc973 = loc(fused[#loc449, #loc452])
#loc974 = loc(fused[#loc453, #loc448])
#loc975 = loc(fused[#loc454, #loc455])
#loc976 = loc(fused[#loc456, #loc457])
#loc977 = loc(fused[#loc458, #loc455])
#loc978 = loc(fused[#loc460, #loc459])
#loc979 = loc(fused[#loc461, #loc462])
#loc980 = loc(fused[#loc464, #loc463])
#loc981 = loc(fused[#loc465, #loc466])
#loc982 = loc(fused[#loc468, #loc462])
#loc983 = loc(fused[#loc470, #loc469])
#loc984 = loc(fused[#loc472, #loc471])
#loc985 = loc(fused[#loc476, #loc477])
#loc986 = loc(fused[#loc478, #loc479])
#loc987 = loc(fused[#loc480, #loc481])
#loc988 = loc(fused[#loc483, #loc482])
#loc989 = loc(fused[#loc484, #loc485])
#loc990 = loc(fused[#loc488, #loc489])
#loc991 = loc(fused[#loc490, #loc491])
#loc992 = loc(fused[#loc492, #loc493])
#loc993 = loc(fused[#loc494, #loc495])
#loc994 = loc(fused[#loc496, #loc497])
#loc995 = loc(fused[#loc498, #loc499])
#loc996 = loc(fused[#loc500, #loc501])
#loc997 = loc(fused[#loc504, #loc505])
#loc998 = loc(fused[#loc510, #loc511])
#loc999 = loc(fused[#loc512, #loc513])
#loc1000 = loc(fused[#loc514, #loc515])
#loc1001 = loc(fused[#loc516, #loc513])
#loc1002 = loc(fused[#loc518, #loc519])
#loc1003 = loc(fused[#loc521, #loc522])
#loc1004 = loc(fused[#loc523, #loc524])
#loc1005 = loc(fused[#loc526, #loc525])
#loc1006 = loc(fused[#loc528, #loc527])
#loc1007 = loc(fused[#loc531, #loc532])
#loc1008 = loc(fused[#loc533, #loc534])
#loc1009 = loc(fused[#loc536, #loc537])
#loc1010 = loc(fused[#loc538, #loc539])
#loc1011 = loc(fused[#loc540, #loc541])
#loc1012 = loc(fused[#loc542, #loc534])
#loc1013 = loc(fused[#loc544, #loc545])
#loc1014 = loc(fused[#loc548, #loc549])
#loc1015 = loc(fused[#loc550, #loc545])
#loc1016 = loc(fused[#loc556, #loc557])
#loc1017 = loc(fused[#loc558, #loc559])
#loc1018 = loc(fused[#loc560, #loc561])
#loc1019 = loc(fused[#loc562, #loc559])
#loc1020 = loc(fused[#loc568, #loc569])
#loc1021 = loc(fused[#loc570, #loc571])
#loc1022 = loc(fused[#loc572, #loc573])
#loc1023 = loc(fused[#loc572, #loc574])
#loc1024 = loc(fused[#loc570, #loc575])
#loc1025 = loc(fused[#loc578, #loc579])
#loc1026 = loc(fused[#loc580, #loc581])
#loc1027 = loc(fused[#loc582, #loc583])
#loc1028 = loc(fused[#loc585, #loc586])
#loc1029 = loc(fused[#loc587, #loc581])
#loc1030 = loc(fused[#loc593, #loc594])
#loc1031 = loc(fused[#loc592, #loc594])
#loc1032 = loc(fused[#loc591, #loc594])
#loc1033 = loc(fused[#loc590, #loc589])
#loc1034 = loc(fused[#loc599, #loc600])
#loc1035 = loc(fused[#loc601, #loc602])
#loc1036 = loc(fused[#loc604, #loc602])
#loc1037 = loc(fused[#loc607, #loc605])
#loc1038 = loc(fused[#loc611, #loc612])
#loc1039 = loc(fused[#loc613, #loc614])
#loc1040 = loc(fused[#loc616, #loc614])
#loc1041 = loc(fused[#loc619, #loc617])
#loc1042 = loc(fused[#loc621, #loc622])
#loc1043 = loc(fused[#loc623, #loc624])
#loc1044 = loc(fused[#loc625, #loc622])
#loc1045 = loc(fused[#loc628, #loc629])
#loc1046 = loc(fused[#loc630, #loc631])
#loc1047 = loc(fused[#loc632, #loc629])
#loc1048 = loc(fused[#loc640, #loc641])
#loc1049 = loc(fused[#loc644, #loc645])
#loc1050 = loc(fused[#loc646, #loc647])
#loc1051 = loc(fused[#loc646, #loc648])
#loc1052 = loc(fused[#loc646, #loc649])
#loc1053 = loc(fused[#loc650, #loc651])
#loc1054 = loc(fused[#loc652, #loc655])
#loc1055 = loc(fused[#loc656, #loc651])
#loc1056 = loc(fused[#loc657, #loc658])
#loc1057 = loc(fused[#loc659, #loc660])
#loc1058 = loc(fused[#loc661, #loc658])
#loc1059 = loc(fused[#loc663, #loc662])
#loc1060 = loc(fused[#loc664, #loc665])
#loc1061 = loc(fused[#loc667, #loc666])
#loc1062 = loc(fused[#loc668, #loc669])
#loc1063 = loc(fused[#loc671, #loc665])
#loc1064 = loc(fused[#loc673, #loc672])
#loc1065 = loc(fused[#loc675, #loc674])
#loc1066 = loc(fused[#loc683, #loc684])
#loc1067 = loc(fused[#loc686, #loc687])
#loc1068 = loc(fused[#loc688, #loc689])
#loc1069 = loc(fused[#loc690, #loc691])
#loc1070 = loc(fused[#loc693, #loc692])
#loc1071 = loc(fused[#loc694, #loc695])
#loc1072 = loc(fused[#loc705, #loc706])
#loc1073 = loc(fused[#loc709, #loc710])
#loc1074 = loc(fused[#loc711, #loc712])
#loc1075 = loc(fused[#loc711, #loc713])
#loc1076 = loc(fused[#loc711, #loc714])
#loc1077 = loc(fused[#loc715, #loc716])
#loc1078 = loc(fused[#loc717, #loc720])
#loc1079 = loc(fused[#loc721, #loc716])
#loc1080 = loc(fused[#loc723, #loc722])
#loc1081 = loc(fused[#loc724, #loc725])
#loc1082 = loc(fused[#loc727, #loc726])
#loc1083 = loc(fused[#loc728, #loc729])
#loc1084 = loc(fused[#loc731, #loc725])
#loc1085 = loc(fused[#loc733, #loc732])
#loc1086 = loc(fused[#loc735, #loc734])
#loc1087 = loc(fused[#loc743, #loc744])
#loc1088 = loc(fused[#loc745, #loc746])
#loc1089 = loc(fused[#loc747, #loc748])
#loc1090 = loc(fused[#loc750, #loc749])
#loc1091 = loc(fused[#loc751, #loc752])
#loc1092 = loc(fused[#loc763, #loc764])
#loc1093 = loc(fused[#loc767, #loc768])
#loc1094 = loc(fused[#loc769, #loc770])
#loc1095 = loc(fused[#loc769, #loc771])
#loc1096 = loc(fused[#loc769, #loc772])
#loc1097 = loc(fused[#loc773, #loc774])
#loc1098 = loc(fused[#loc775, #loc778])
#loc1099 = loc(fused[#loc779, #loc774])
#loc1100 = loc(fused[#loc781, #loc780])
#loc1101 = loc(fused[#loc782, #loc783])
#loc1102 = loc(fused[#loc785, #loc784])
#loc1103 = loc(fused[#loc786, #loc787])
#loc1104 = loc(fused[#loc789, #loc783])
#loc1105 = loc(fused[#loc791, #loc790])
#loc1106 = loc(fused[#loc793, #loc792])
