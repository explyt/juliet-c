!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc189 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":420:10)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":420:14)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":420:20)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":420:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc649 = loc(fused[#loc189, #loc190])
#loc650 = loc(fused[#loc191, #loc192])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_listen_socket_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc575)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc576)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc577)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc578)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc579)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc580)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc581)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc582)
  cir.func private @close(!s32i) -> !s32i loc(#loc583)
  cir.func private @printIntLine(!s32i) loc(#loc584)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc585)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc23)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_listen_socket_10_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc587)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc29)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc588)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc575)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc33)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc33)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc592)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc593)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc594)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc595)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc596)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc42)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc42)
          cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc594)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc44)
          cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc595)
          cir.scope {
            cir.do {
              %15 = cir.const #cir.int<2> : !s32i loc(#loc49)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc50)
              %17 = cir.const #cir.int<6> : !s32i loc(#loc51)
              %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc52)
              cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc598)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc57)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc58)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc58)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc600)
                cir.if %63 {
                  cir.break loc(#loc60)
                } loc(#loc601)
              } loc(#loc599)
              %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc602)
              %20 = cir.const #cir.int<0> : !s32i loc(#loc63)
              %21 = cir.const #cir.int<16> : !u64i loc(#loc603)
              cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc604)
              %22 = cir.const #cir.int<2> : !s32i loc(#loc68)
              %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc68)
              %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
              cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc605)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc71)
              %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc71)
              %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
              %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
              cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc606)
              %29 = cir.const #cir.int<27015> : !s32i loc(#loc75)
              %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc75)
              %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc76)
              %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
              cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc607)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc82)
                %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc609)
                %62 = cir.const #cir.int<16> : !u64i loc(#loc610)
                %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc610)
                %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc87)
                %65 = cir.const #cir.int<1> : !s32i loc(#loc88)
                %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc88)
                %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc611)
                cir.if %67 {
                  cir.break loc(#loc90)
                } loc(#loc612)
              } loc(#loc608)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc93)
                %61 = cir.const #cir.int<5> : !s32i loc(#loc94)
                %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc95)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc96)
                %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc96)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc614)
                cir.if %65 {
                  cir.break loc(#loc98)
                } loc(#loc615)
              } loc(#loc613)
              %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc99)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc100)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc101)
              %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc102)
              cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc616)
              cir.scope {
                %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc108)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc108)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc618)
                cir.if %63 {
                  cir.break loc(#loc110)
                } loc(#loc619)
              } loc(#loc617)
              %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc111)
              %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
              %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
              %40 = cir.const #cir.int<3> : !s32i loc(#loc113)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc113)
              %42 = cir.const #cir.int<4> : !u64i loc(#loc113)
              %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc113)
              %44 = cir.const #cir.int<2> : !s32i loc(#loc113)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc113)
              %46 = cir.binop(add, %43, %45) : !u64i loc(#loc113)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc114)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc114)
              %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc620)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc115)
              %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc116)
              %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc116)
              cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc621)
              cir.scope {
                %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc122)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc122)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc623)
                %64 = cir.ternary(%63, true {
                  %65 = cir.const #true loc(#loc123)
                  cir.yield %65 : !cir.bool loc(#loc123)
                }, false {
                  %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc124)
                  %66 = cir.const #cir.int<0> : !s32i loc(#loc125)
                  %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc624)
                  %68 = cir.ternary(%67, true {
                    %69 = cir.const #true loc(#loc123)
                    cir.yield %69 : !cir.bool loc(#loc123)
                  }, false {
                    %69 = cir.const #false loc(#loc123)
                    cir.yield %69 : !cir.bool loc(#loc123)
                  }) : (!cir.bool) -> !cir.bool loc(#loc123)
                  cir.yield %68 : !cir.bool loc(#loc123)
                }) : (!cir.bool) -> !cir.bool loc(#loc123)
                cir.if %64 {
                  cir.break loc(#loc127)
                } loc(#loc625)
              } loc(#loc622)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc128)
              %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc128)
              %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc129)
              %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc130)
              %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc130)
              cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc626)
              %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc131)
              %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc132)
              cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc627)
              cir.yield loc(#loc48)
            } while {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc135)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc135)
              cir.condition(%16) loc(#loc135)
            } loc(#loc597)
          } loc(#loc597)
          cir.scope {
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc138)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc139)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc139)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc629)
            cir.if %18 {
              %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc141)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc142)
            } loc(#loc630)
          } loc(#loc628)
          cir.scope {
            %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc145)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc146)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc146)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc632)
            cir.if %18 {
              %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc148)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc149)
            } loc(#loc633)
          } loc(#loc631)
        } loc(#loc591)
      } loc(#loc590)
    } loc(#loc589)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc575)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc152)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc152)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc637)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc637)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc637)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc160)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc161)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc639)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc165)
              %12 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc166)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc166)
              %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc166)
              cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc167)
            } else {
              %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc23)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc23)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc168)
            } loc(#loc640)
          } loc(#loc638)
        } loc(#loc636)
      } loc(#loc635)
    } loc(#loc634)
    cir.return loc(#loc25)
  } loc(#loc586)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_listen_socket_10_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc642)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc171)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc643)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc173)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc644)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc175)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc645)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc177)
    cir.return loc(#loc170)
  } loc(#loc641)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc646)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc647)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc183)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc184)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc185)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc186)
  cir.func @main(%arg0: !s32i loc(fused[#loc189, #loc190]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc191, #loc192])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc649)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc650)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc188)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc193)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc194)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc195)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc195)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc196)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc183)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc183)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc197)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE129_listen_socket_10_good : !cir.ptr<!cir.func<!void ()>> loc(#loc651)
    cir.call @CWE126_Buffer_Overread__CWE129_listen_socket_10_good() : () -> () loc(#loc198)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc184)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc184)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc200)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc185)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc185)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc201)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE129_listen_socket_10_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc652)
    cir.call @CWE126_Buffer_Overread__CWE129_listen_socket_10_bad() : () -> () loc(#loc202)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc186)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc186)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc204)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc205)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc653)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc653)
    cir.return %17 : !s32i loc(#loc653)
  } loc(#loc648)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc654)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc210)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc656)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc215)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc216)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc657)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc575)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc220)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc220)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc661)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc662)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc663)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc664)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc665)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc229)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc229)
          cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc663)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc231)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc231)
          cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc664)
          cir.scope {
            cir.do {
              %15 = cir.const #cir.int<2> : !s32i loc(#loc236)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc237)
              %17 = cir.const #cir.int<6> : !s32i loc(#loc238)
              %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc239)
              cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc667)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc244)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc245)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc245)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc669)
                cir.if %63 {
                  cir.break loc(#loc247)
                } loc(#loc670)
              } loc(#loc668)
              %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc671)
              %20 = cir.const #cir.int<0> : !s32i loc(#loc250)
              %21 = cir.const #cir.int<16> : !u64i loc(#loc672)
              cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc673)
              %22 = cir.const #cir.int<2> : !s32i loc(#loc255)
              %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc255)
              %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
              cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc674)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc257)
              %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc257)
              %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
              %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
              cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc675)
              %29 = cir.const #cir.int<27015> : !s32i loc(#loc259)
              %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc259)
              %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc260)
              %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
              cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc676)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc265)
                %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc678)
                %62 = cir.const #cir.int<16> : !u64i loc(#loc679)
                %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc679)
                %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc270)
                %65 = cir.const #cir.int<1> : !s32i loc(#loc271)
                %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc271)
                %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc680)
                cir.if %67 {
                  cir.break loc(#loc273)
                } loc(#loc681)
              } loc(#loc677)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc276)
                %61 = cir.const #cir.int<5> : !s32i loc(#loc277)
                %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc278)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc279)
                %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc279)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc683)
                cir.if %65 {
                  cir.break loc(#loc281)
                } loc(#loc684)
              } loc(#loc682)
              %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc282)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc283)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc284)
              %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc285)
              cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc685)
              cir.scope {
                %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc290)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc291)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc291)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc687)
                cir.if %63 {
                  cir.break loc(#loc293)
                } loc(#loc688)
              } loc(#loc686)
              %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc294)
              %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc295)
              %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc295)
              %40 = cir.const #cir.int<3> : !s32i loc(#loc296)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc296)
              %42 = cir.const #cir.int<4> : !u64i loc(#loc296)
              %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc296)
              %44 = cir.const #cir.int<2> : !s32i loc(#loc296)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc296)
              %46 = cir.binop(add, %43, %45) : !u64i loc(#loc296)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc297)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc297)
              %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc689)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc298)
              %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc299)
              %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc299)
              cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc690)
              cir.scope {
                %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc304)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc305)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc305)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc692)
                %64 = cir.ternary(%63, true {
                  %65 = cir.const #true loc(#loc306)
                  cir.yield %65 : !cir.bool loc(#loc306)
                }, false {
                  %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc307)
                  %66 = cir.const #cir.int<0> : !s32i loc(#loc308)
                  %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc693)
                  %68 = cir.ternary(%67, true {
                    %69 = cir.const #true loc(#loc306)
                    cir.yield %69 : !cir.bool loc(#loc306)
                  }, false {
                    %69 = cir.const #false loc(#loc306)
                    cir.yield %69 : !cir.bool loc(#loc306)
                  }) : (!cir.bool) -> !cir.bool loc(#loc306)
                  cir.yield %68 : !cir.bool loc(#loc306)
                }) : (!cir.bool) -> !cir.bool loc(#loc306)
                cir.if %64 {
                  cir.break loc(#loc310)
                } loc(#loc694)
              } loc(#loc691)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc311)
              %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc311)
              %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc312)
              %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc313)
              %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc313)
              cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc695)
              %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc314)
              %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc315)
              cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc696)
              cir.yield loc(#loc235)
            } while {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc318)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc318)
              cir.condition(%16) loc(#loc318)
            } loc(#loc666)
          } loc(#loc666)
          cir.scope {
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc321)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc322)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc322)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc698)
            cir.if %18 {
              %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc324)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc325)
            } loc(#loc699)
          } loc(#loc697)
          cir.scope {
            %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc328)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc329)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc329)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc701)
            cir.if %18 {
              %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc331)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc332)
            } loc(#loc702)
          } loc(#loc700)
        } loc(#loc660)
      } loc(#loc659)
    } loc(#loc658)
    cir.scope {
      %3 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc654)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc335)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc335)
      cir.if %5 {
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc209)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc209)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc339)
      } else {
        cir.scope {
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc706)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc706)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc706)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc346)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc347)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc708)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc349)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc350)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc709)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc348)
                cir.yield %16 : !cir.bool loc(#loc348)
              }, false {
                %16 = cir.const #false loc(#loc348)
                cir.yield %16 : !cir.bool loc(#loc348)
              }) : (!cir.bool) -> !cir.bool loc(#loc348)
              cir.yield %15 : !cir.bool loc(#loc348)
            }, false {
              %12 = cir.const #false loc(#loc348)
              cir.yield %12 : !cir.bool loc(#loc348)
            }) : (!cir.bool) -> !cir.bool loc(#loc348)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc355)
              %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc356)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc356)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc356)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc357)
            } else {
              %12 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc210)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc210)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc358)
            } loc(#loc710)
          } loc(#loc707)
        } loc(#loc705)
      } loc(#loc704)
    } loc(#loc703)
    cir.return loc(#loc212)
  } loc(#loc655)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc712)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc363)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc364)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc713)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc575)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc368)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc368)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc717)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc718)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc719)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc720)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc721)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc377)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc377)
          cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc719)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc379)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc379)
          cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc720)
          cir.scope {
            cir.do {
              %15 = cir.const #cir.int<2> : !s32i loc(#loc384)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc385)
              %17 = cir.const #cir.int<6> : !s32i loc(#loc386)
              %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc387)
              cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc723)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc392)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc393)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc393)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc725)
                cir.if %63 {
                  cir.break loc(#loc395)
                } loc(#loc726)
              } loc(#loc724)
              %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc727)
              %20 = cir.const #cir.int<0> : !s32i loc(#loc398)
              %21 = cir.const #cir.int<16> : !u64i loc(#loc728)
              cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc729)
              %22 = cir.const #cir.int<2> : !s32i loc(#loc403)
              %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc403)
              %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
              cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc730)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc405)
              %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc405)
              %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
              %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
              cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc731)
              %29 = cir.const #cir.int<27015> : !s32i loc(#loc407)
              %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc407)
              %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc408)
              %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
              cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc732)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc413)
                %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc734)
                %62 = cir.const #cir.int<16> : !u64i loc(#loc735)
                %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc735)
                %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc418)
                %65 = cir.const #cir.int<1> : !s32i loc(#loc419)
                %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc419)
                %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc736)
                cir.if %67 {
                  cir.break loc(#loc421)
                } loc(#loc737)
              } loc(#loc733)
              cir.scope {
                %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc424)
                %61 = cir.const #cir.int<5> : !s32i loc(#loc425)
                %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc426)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc427)
                %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc427)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc739)
                cir.if %65 {
                  cir.break loc(#loc429)
                } loc(#loc740)
              } loc(#loc738)
              %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc430)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc431)
              %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc432)
              %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc433)
              cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc741)
              cir.scope {
                %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc438)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc439)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc439)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc743)
                cir.if %63 {
                  cir.break loc(#loc441)
                } loc(#loc744)
              } loc(#loc742)
              %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc442)
              %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc443)
              %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc443)
              %40 = cir.const #cir.int<3> : !s32i loc(#loc444)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc444)
              %42 = cir.const #cir.int<4> : !u64i loc(#loc444)
              %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc444)
              %44 = cir.const #cir.int<2> : !s32i loc(#loc444)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc444)
              %46 = cir.binop(add, %43, %45) : !u64i loc(#loc444)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc445)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc445)
              %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc745)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc446)
              %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc447)
              %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc447)
              cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc746)
              cir.scope {
                %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc452)
                %61 = cir.const #cir.int<1> : !s32i loc(#loc453)
                %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc453)
                %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc748)
                %64 = cir.ternary(%63, true {
                  %65 = cir.const #true loc(#loc454)
                  cir.yield %65 : !cir.bool loc(#loc454)
                }, false {
                  %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc455)
                  %66 = cir.const #cir.int<0> : !s32i loc(#loc456)
                  %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc749)
                  %68 = cir.ternary(%67, true {
                    %69 = cir.const #true loc(#loc454)
                    cir.yield %69 : !cir.bool loc(#loc454)
                  }, false {
                    %69 = cir.const #false loc(#loc454)
                    cir.yield %69 : !cir.bool loc(#loc454)
                  }) : (!cir.bool) -> !cir.bool loc(#loc454)
                  cir.yield %68 : !cir.bool loc(#loc454)
                }) : (!cir.bool) -> !cir.bool loc(#loc454)
                cir.if %64 {
                  cir.break loc(#loc458)
                } loc(#loc750)
              } loc(#loc747)
              %53 = cir.const #cir.int<0> : !s32i loc(#loc459)
              %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc459)
              %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc460)
              %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc461)
              %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc461)
              cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc751)
              %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc462)
              %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc463)
              cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc752)
              cir.yield loc(#loc383)
            } while {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc466)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc466)
              cir.condition(%16) loc(#loc466)
            } loc(#loc722)
          } loc(#loc722)
          cir.scope {
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc469)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc470)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc470)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc754)
            cir.if %18 {
              %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc472)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc473)
            } loc(#loc755)
          } loc(#loc753)
          cir.scope {
            %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc476)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc477)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc477)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc757)
            cir.if %18 {
              %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc479)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc480)
            } loc(#loc758)
          } loc(#loc756)
        } loc(#loc716)
      } loc(#loc715)
    } loc(#loc714)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc575)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc483)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc483)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc762)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc762)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc762)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc491)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc492)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc764)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc494)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc495)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc765)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc493)
                cir.yield %16 : !cir.bool loc(#loc493)
              }, false {
                %16 = cir.const #false loc(#loc493)
                cir.yield %16 : !cir.bool loc(#loc493)
              }) : (!cir.bool) -> !cir.bool loc(#loc493)
              cir.yield %15 : !cir.bool loc(#loc493)
            }, false {
              %12 = cir.const #false loc(#loc493)
              cir.yield %12 : !cir.bool loc(#loc493)
            }) : (!cir.bool) -> !cir.bool loc(#loc493)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc500)
              %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc501)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc501)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc501)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc502)
            } else {
              %12 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc503)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc503)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc504)
            } loc(#loc766)
          } loc(#loc763)
        } loc(#loc761)
      } loc(#loc760)
    } loc(#loc759)
    cir.return loc(#loc360)
  } loc(#loc711)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc768)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc509)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc510)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc769)
    cir.scope {
      %3 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc654)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc514)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc514)
      cir.if %5 {
        %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc518)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc518)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc519)
      } else {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc520)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc772)
      } loc(#loc771)
    } loc(#loc770)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc575)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc524)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc524)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc776)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc776)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc776)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc532)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc533)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc778)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc537)
              %12 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc538)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc538)
              %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc538)
              cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc539)
            } else {
              %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc540)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc540)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc541)
            } loc(#loc779)
          } loc(#loc777)
        } loc(#loc775)
      } loc(#loc774)
    } loc(#loc773)
    cir.return loc(#loc506)
  } loc(#loc767)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc781)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc546)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc547)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc782)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc575)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc551)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc551)
      cir.if %5 {
        %6 = cir.const #cir.int<7> : !s32i loc(#loc553)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc785)
      } loc(#loc784)
    } loc(#loc783)
    cir.scope {
      %3 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc575)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc557)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc557)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc789)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc789)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc789)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc565)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc566)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !cir.bool loc(#loc791)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc570)
              %12 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc571)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc571)
              %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc571)
              cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc572)
            } else {
              %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc573)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc573)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc574)
            } loc(#loc792)
          } loc(#loc790)
        } loc(#loc788)
      } loc(#loc787)
    } loc(#loc786)
    cir.return loc(#loc543)
  } loc(#loc780)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_listen_socket_10.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":404:1)
#loc6 = loc("/usr/include/netinet/in.h":405:40)
#loc7 = loc("/usr/include/sys/socket.h":112:1)
#loc8 = loc("/usr/include/sys/socket.h":113:6)
#loc9 = loc("/usr/include/sys/socket.h":296:1)
#loc10 = loc("/usr/include/sys/socket.h":296:39)
#loc11 = loc("/usr/include/sys/socket.h":306:1)
#loc12 = loc("/usr/include/sys/socket.h":307:38)
#loc13 = loc("/usr/include/sys/socket.h":145:1)
#loc14 = loc("/usr/include/sys/socket.h":145:68)
#loc15 = loc("/usr/include/stdlib.h":105:1)
#loc16 = loc("/usr/include/stdlib.h":106:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":133:27)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":44:1)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":137:1)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":46:5)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":46:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":48:13)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":48:12)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":48:5)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":49:5)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":120:5)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":49:8)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":50:5)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":51:9)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":119:9)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":56:13)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":56:17)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":57:13)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":57:32)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":58:13)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":58:35)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":59:13)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":59:35)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":60:13)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":60:45)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":61:13)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":104:21)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":71:39)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":71:48)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":71:61)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":71:32)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":71:17)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":71:72)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":72:17)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":75:17)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":72:21)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":72:37)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":73:17)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":74:21)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":76:24)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":76:25)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":76:34)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":76:37)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":76:51)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":76:17)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":76:52)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":77:38)
#loc69 = loc("/usr/include/netinet/in.h":249:5)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":77:17)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":78:43)
#loc72 = loc("/usr/include/netinet/in.h":251:20)
#loc73 = loc("/usr/include/netinet/in.h":33:15)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":78:17)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":79:42)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":79:36)
#loc77 = loc("/usr/include/netinet/in.h":250:15)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":79:17)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":79:50)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":80:17)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":83:17)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":80:26)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":80:58)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":80:59)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":80:68)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":80:82)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":80:21)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":80:88)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":81:17)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":82:21)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":84:17)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":87:17)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":84:28)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":84:42)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":84:21)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":84:61)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":85:17)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":86:21)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":88:39)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":88:53)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":88:59)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":88:32)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":88:17)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":88:63)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":89:17)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":92:17)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":89:21)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":89:37)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":90:17)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":91:21)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":94:35)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":94:49)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":94:62)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":94:80)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":94:83)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":94:30)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":94:17)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":94:84)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":95:17)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":98:17)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":95:21)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":95:35)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":95:48)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":95:51)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":95:65)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":96:17)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":97:21)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":100:43)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":100:29)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":100:17)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":102:29)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":102:24)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":102:17)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":102:40)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":104:20)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":105:13)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":108:13)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":105:17)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":105:33)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":106:13)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":107:30)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":107:17)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":109:13)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":112:13)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":109:17)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":109:33)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":110:13)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":111:30)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":111:17)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":121:5)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":136:5)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":121:8)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":122:5)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":123:9)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":135:9)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":124:13)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":124:34)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":127:13)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":134:13)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":127:17)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":127:25)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":128:13)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":130:13)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":132:13)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":129:37)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":129:30)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":129:17)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":133:17)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":403:1)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":409:1)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":405:5)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":405:14)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":406:5)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":406:14)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":407:5)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":407:14)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":408:5)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":408:14)
#loc179 = loc("/usr/include/stdlib.h":575:1)
#loc180 = loc("/usr/include/stdlib.h":575:41)
#loc181 = loc("/usr/include/time.h":76:1)
#loc182 = loc("/usr/include/time.h":76:38)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":425:15)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":427:15)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":430:15)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":432:15)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":420:1)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":435:1)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":421:1)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":423:27)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":423:22)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":423:5)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":425:5)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":426:5)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":426:58)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":427:5)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":430:5)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":431:5)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":431:57)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":432:5)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":434:12)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":434:5)
#loc207 = loc("../../../testcasesupport/std_testcase.h":117:1)
#loc208 = loc("../../../testcasesupport/std_testcase.h":117:12)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":224:19)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":237:27)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":144:1)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":241:1)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":146:5)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":146:9)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":148:13)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":148:12)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":148:5)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":149:5)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":220:5)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":149:8)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":150:5)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":151:9)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":219:9)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":156:13)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":156:17)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":157:13)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":157:32)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":158:13)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":158:35)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":159:13)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":159:35)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":160:13)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":160:45)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":161:13)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":204:21)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":171:39)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":171:48)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":171:61)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":171:32)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":171:17)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":171:72)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":172:17)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":175:17)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":172:21)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":172:37)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":173:17)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":174:21)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":176:24)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":176:25)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":176:34)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":176:37)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":176:51)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":176:17)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":176:52)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":177:38)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":177:17)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":178:43)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":178:17)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":179:42)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":179:36)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":179:17)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":179:50)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":180:17)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":183:17)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":180:26)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":180:58)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":180:59)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":180:68)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":180:82)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":180:21)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":180:88)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":181:17)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":182:21)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":184:17)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":187:17)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":184:28)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":184:42)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":184:21)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":184:61)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":185:17)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":186:21)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":188:39)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":188:53)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":188:59)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":188:32)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":188:17)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":188:63)
#loc288 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":189:17)
#loc289 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":192:17)
#loc290 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":189:21)
#loc291 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":189:37)
#loc292 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":190:17)
#loc293 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":191:21)
#loc294 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":194:35)
#loc295 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":194:49)
#loc296 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":194:62)
#loc297 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":194:80)
#loc298 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":194:83)
#loc299 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":194:30)
#loc300 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":194:17)
#loc301 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":194:84)
#loc302 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":195:17)
#loc303 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":198:17)
#loc304 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":195:21)
#loc305 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":195:35)
#loc306 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":195:48)
#loc307 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":195:51)
#loc308 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":195:65)
#loc309 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":196:17)
#loc310 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":197:21)
#loc311 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":200:43)
#loc312 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":200:29)
#loc313 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":200:17)
#loc314 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":202:29)
#loc315 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":202:24)
#loc316 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":202:17)
#loc317 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":202:40)
#loc318 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":204:20)
#loc319 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":205:13)
#loc320 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":208:13)
#loc321 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":205:17)
#loc322 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":205:33)
#loc323 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":206:13)
#loc324 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":207:30)
#loc325 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":207:17)
#loc326 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":209:13)
#loc327 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":212:13)
#loc328 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":209:17)
#loc329 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":209:33)
#loc330 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":210:13)
#loc331 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":211:30)
#loc332 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":211:17)
#loc333 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":221:5)
#loc334 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":240:5)
#loc335 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":221:8)
#loc336 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":222:5)
#loc337 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":225:5)
#loc338 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":227:5)
#loc339 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":224:9)
#loc340 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":228:9)
#loc341 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":239:9)
#loc342 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":229:13)
#loc343 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":229:34)
#loc344 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":231:13)
#loc345 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":238:13)
#loc346 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":231:17)
#loc347 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":231:25)
#loc348 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":231:27)
#loc349 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":231:30)
#loc350 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":231:38)
#loc351 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":231:40)
#loc352 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":232:13)
#loc353 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":234:13)
#loc354 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":236:13)
#loc355 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":233:37)
#loc356 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":233:30)
#loc357 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":233:17)
#loc358 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":237:17)
#loc359 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":244:1)
#loc360 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":336:1)
#loc361 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":246:5)
#loc362 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":246:9)
#loc363 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":248:13)
#loc364 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":248:12)
#loc365 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":248:5)
#loc366 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":249:5)
#loc367 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":320:5)
#loc368 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":249:8)
#loc369 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":250:5)
#loc370 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":251:9)
#loc371 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":319:9)
#loc372 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":256:13)
#loc373 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":256:17)
#loc374 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":257:13)
#loc375 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":257:32)
#loc376 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":258:13)
#loc377 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":258:35)
#loc378 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":259:13)
#loc379 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":259:35)
#loc380 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":260:13)
#loc381 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":260:45)
#loc382 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":261:13)
#loc383 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":304:21)
#loc384 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":271:39)
#loc385 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":271:48)
#loc386 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":271:61)
#loc387 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":271:32)
#loc388 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":271:17)
#loc389 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":271:72)
#loc390 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":272:17)
#loc391 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":275:17)
#loc392 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":272:21)
#loc393 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":272:37)
#loc394 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":273:17)
#loc395 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":274:21)
#loc396 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":276:24)
#loc397 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":276:25)
#loc398 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":276:34)
#loc399 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":276:37)
#loc400 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":276:51)
#loc401 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":276:17)
#loc402 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":276:52)
#loc403 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":277:38)
#loc404 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":277:17)
#loc405 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":278:43)
#loc406 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":278:17)
#loc407 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":279:42)
#loc408 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":279:36)
#loc409 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":279:17)
#loc410 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":279:50)
#loc411 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":280:17)
#loc412 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":283:17)
#loc413 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":280:26)
#loc414 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":280:58)
#loc415 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":280:59)
#loc416 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":280:68)
#loc417 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":280:82)
#loc418 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":280:21)
#loc419 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":280:88)
#loc420 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":281:17)
#loc421 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":282:21)
#loc422 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":284:17)
#loc423 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":287:17)
#loc424 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":284:28)
#loc425 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":284:42)
#loc426 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":284:21)
#loc427 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":284:61)
#loc428 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":285:17)
#loc429 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":286:21)
#loc430 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":288:39)
#loc431 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":288:53)
#loc432 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":288:59)
#loc433 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":288:32)
#loc434 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":288:17)
#loc435 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":288:63)
#loc436 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":289:17)
#loc437 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":292:17)
#loc438 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":289:21)
#loc439 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":289:37)
#loc440 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":290:17)
#loc441 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":291:21)
#loc442 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":294:35)
#loc443 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":294:49)
#loc444 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":294:62)
#loc445 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":294:80)
#loc446 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":294:83)
#loc447 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":294:30)
#loc448 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":294:17)
#loc449 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":294:84)
#loc450 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":295:17)
#loc451 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":298:17)
#loc452 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":295:21)
#loc453 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":295:35)
#loc454 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":295:48)
#loc455 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":295:51)
#loc456 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":295:65)
#loc457 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":296:17)
#loc458 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":297:21)
#loc459 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":300:43)
#loc460 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":300:29)
#loc461 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":300:17)
#loc462 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":302:29)
#loc463 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":302:24)
#loc464 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":302:17)
#loc465 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":302:40)
#loc466 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":304:20)
#loc467 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":305:13)
#loc468 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":308:13)
#loc469 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":305:17)
#loc470 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":305:33)
#loc471 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":306:13)
#loc472 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":307:30)
#loc473 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":307:17)
#loc474 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":309:13)
#loc475 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":312:13)
#loc476 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":309:17)
#loc477 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":309:33)
#loc478 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":310:13)
#loc479 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":311:30)
#loc480 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":311:17)
#loc481 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":321:5)
#loc482 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":335:5)
#loc483 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":321:8)
#loc484 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":322:5)
#loc485 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":323:9)
#loc486 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":334:9)
#loc487 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":324:13)
#loc488 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":324:34)
#loc489 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":326:13)
#loc490 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":333:13)
#loc491 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":326:17)
#loc492 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":326:25)
#loc493 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":326:27)
#loc494 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":326:30)
#loc495 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":326:38)
#loc496 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":326:40)
#loc497 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":327:13)
#loc498 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":329:13)
#loc499 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":331:13)
#loc500 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":328:37)
#loc501 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":328:30)
#loc502 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":328:17)
#loc503 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":332:27)
#loc504 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":332:17)
#loc505 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":339:1)
#loc506 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":371:1)
#loc507 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":341:5)
#loc508 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":341:9)
#loc509 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":343:13)
#loc510 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":343:12)
#loc511 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":343:5)
#loc512 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":344:5)
#loc513 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":354:5)
#loc514 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":344:8)
#loc515 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":345:5)
#loc516 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":348:5)
#loc517 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":350:5)
#loc518 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":347:19)
#loc519 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":347:9)
#loc520 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":353:16)
#loc521 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":353:9)
#loc522 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":355:5)
#loc523 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":370:5)
#loc524 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":355:8)
#loc525 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":356:5)
#loc526 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":357:9)
#loc527 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":369:9)
#loc528 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":358:13)
#loc529 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":358:34)
#loc530 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":361:13)
#loc531 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":368:13)
#loc532 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":361:17)
#loc533 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":361:25)
#loc534 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":362:13)
#loc535 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":364:13)
#loc536 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":366:13)
#loc537 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":363:37)
#loc538 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":363:30)
#loc539 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":363:17)
#loc540 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":367:27)
#loc541 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":367:17)
#loc542 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":374:1)
#loc543 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":401:1)
#loc544 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":376:5)
#loc545 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":376:9)
#loc546 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":378:13)
#loc547 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":378:12)
#loc548 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":378:5)
#loc549 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":379:5)
#loc550 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":384:5)
#loc551 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":379:8)
#loc552 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":380:5)
#loc553 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":383:16)
#loc554 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":383:9)
#loc555 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":385:5)
#loc556 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":400:5)
#loc557 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":385:8)
#loc558 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":386:5)
#loc559 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":387:9)
#loc560 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":399:9)
#loc561 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":388:13)
#loc562 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":388:34)
#loc563 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":391:13)
#loc564 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":398:13)
#loc565 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":391:17)
#loc566 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":391:25)
#loc567 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":392:13)
#loc568 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":394:13)
#loc569 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":396:13)
#loc570 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":393:37)
#loc571 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":393:30)
#loc572 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":393:17)
#loc573 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":397:27)
#loc574 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_10.c":397:17)
#loc575 = loc(fused[#loc1, #loc2])
#loc576 = loc(fused[#loc3, #loc4])
#loc577 = loc(fused[#loc5, #loc6])
#loc578 = loc(fused[#loc7, #loc8])
#loc579 = loc(fused[#loc9, #loc10])
#loc580 = loc(fused[#loc11, #loc12])
#loc581 = loc(fused[#loc13, #loc14])
#loc582 = loc(fused[#loc15, #loc16])
#loc583 = loc(fused[#loc17, #loc18])
#loc584 = loc(fused[#loc19, #loc20])
#loc585 = loc(fused[#loc21, #loc22])
#loc586 = loc(fused[#loc24, #loc25])
#loc587 = loc(fused[#loc26, #loc27])
#loc588 = loc(fused[#loc30, #loc28])
#loc589 = loc(fused[#loc31, #loc32])
#loc590 = loc(fused[#loc34, #loc32])
#loc591 = loc(fused[#loc35, #loc36])
#loc592 = loc(fused[#loc37, #loc38])
#loc593 = loc(fused[#loc39, #loc40])
#loc594 = loc(fused[#loc41, #loc42])
#loc595 = loc(fused[#loc43, #loc44])
#loc596 = loc(fused[#loc45, #loc46])
#loc597 = loc(fused[#loc47, #loc48])
#loc598 = loc(fused[#loc53, #loc54])
#loc599 = loc(fused[#loc55, #loc56])
#loc600 = loc(fused[#loc57, #loc58])
#loc601 = loc(fused[#loc59, #loc56])
#loc602 = loc(fused[#loc61, #loc62])
#loc603 = loc(fused[#loc64, #loc65])
#loc604 = loc(fused[#loc66, #loc67])
#loc605 = loc(fused[#loc70, #loc68])
#loc606 = loc(fused[#loc74, #loc71])
#loc607 = loc(fused[#loc78, #loc79])
#loc608 = loc(fused[#loc80, #loc81])
#loc609 = loc(fused[#loc83, #loc84])
#loc610 = loc(fused[#loc85, #loc86])
#loc611 = loc(fused[#loc87, #loc88])
#loc612 = loc(fused[#loc89, #loc81])
#loc613 = loc(fused[#loc91, #loc92])
#loc614 = loc(fused[#loc95, #loc96])
#loc615 = loc(fused[#loc97, #loc92])
#loc616 = loc(fused[#loc103, #loc104])
#loc617 = loc(fused[#loc105, #loc106])
#loc618 = loc(fused[#loc107, #loc108])
#loc619 = loc(fused[#loc109, #loc106])
#loc620 = loc(fused[#loc113, #loc114])
#loc621 = loc(fused[#loc117, #loc118])
#loc622 = loc(fused[#loc119, #loc120])
#loc623 = loc(fused[#loc121, #loc122])
#loc624 = loc(fused[#loc124, #loc125])
#loc625 = loc(fused[#loc126, #loc120])
#loc626 = loc(fused[#loc130, #loc128])
#loc627 = loc(fused[#loc133, #loc134])
#loc628 = loc(fused[#loc136, #loc137])
#loc629 = loc(fused[#loc138, #loc139])
#loc630 = loc(fused[#loc140, #loc137])
#loc631 = loc(fused[#loc143, #loc144])
#loc632 = loc(fused[#loc145, #loc146])
#loc633 = loc(fused[#loc147, #loc144])
#loc634 = loc(fused[#loc150, #loc151])
#loc635 = loc(fused[#loc153, #loc151])
#loc636 = loc(fused[#loc154, #loc155])
#loc637 = loc(fused[#loc156, #loc157])
#loc638 = loc(fused[#loc158, #loc159])
#loc639 = loc(fused[#loc160, #loc161])
#loc640 = loc(fused[#loc162, #loc163, #loc164, #loc159])
#loc641 = loc(fused[#loc169, #loc170])
#loc642 = loc(fused[#loc171, #loc172])
#loc643 = loc(fused[#loc173, #loc174])
#loc644 = loc(fused[#loc175, #loc176])
#loc645 = loc(fused[#loc177, #loc178])
#loc646 = loc(fused[#loc179, #loc180])
#loc647 = loc(fused[#loc181, #loc182])
#loc648 = loc(fused[#loc187, #loc188])
#loc651 = loc(fused[#loc198, #loc199])
#loc652 = loc(fused[#loc202, #loc203])
#loc653 = loc(fused[#loc206, #loc205])
#loc654 = loc(fused[#loc207, #loc208])
#loc655 = loc(fused[#loc211, #loc212])
#loc656 = loc(fused[#loc213, #loc214])
#loc657 = loc(fused[#loc217, #loc215])
#loc658 = loc(fused[#loc218, #loc219])
#loc659 = loc(fused[#loc221, #loc219])
#loc660 = loc(fused[#loc222, #loc223])
#loc661 = loc(fused[#loc224, #loc225])
#loc662 = loc(fused[#loc226, #loc227])
#loc663 = loc(fused[#loc228, #loc229])
#loc664 = loc(fused[#loc230, #loc231])
#loc665 = loc(fused[#loc232, #loc233])
#loc666 = loc(fused[#loc234, #loc235])
#loc667 = loc(fused[#loc240, #loc241])
#loc668 = loc(fused[#loc242, #loc243])
#loc669 = loc(fused[#loc244, #loc245])
#loc670 = loc(fused[#loc246, #loc243])
#loc671 = loc(fused[#loc248, #loc249])
#loc672 = loc(fused[#loc251, #loc252])
#loc673 = loc(fused[#loc253, #loc254])
#loc674 = loc(fused[#loc256, #loc255])
#loc675 = loc(fused[#loc258, #loc257])
#loc676 = loc(fused[#loc261, #loc262])
#loc677 = loc(fused[#loc263, #loc264])
#loc678 = loc(fused[#loc266, #loc267])
#loc679 = loc(fused[#loc268, #loc269])
#loc680 = loc(fused[#loc270, #loc271])
#loc681 = loc(fused[#loc272, #loc264])
#loc682 = loc(fused[#loc274, #loc275])
#loc683 = loc(fused[#loc278, #loc279])
#loc684 = loc(fused[#loc280, #loc275])
#loc685 = loc(fused[#loc286, #loc287])
#loc686 = loc(fused[#loc288, #loc289])
#loc687 = loc(fused[#loc290, #loc291])
#loc688 = loc(fused[#loc292, #loc289])
#loc689 = loc(fused[#loc296, #loc297])
#loc690 = loc(fused[#loc300, #loc301])
#loc691 = loc(fused[#loc302, #loc303])
#loc692 = loc(fused[#loc304, #loc305])
#loc693 = loc(fused[#loc307, #loc308])
#loc694 = loc(fused[#loc309, #loc303])
#loc695 = loc(fused[#loc313, #loc311])
#loc696 = loc(fused[#loc316, #loc317])
#loc697 = loc(fused[#loc319, #loc320])
#loc698 = loc(fused[#loc321, #loc322])
#loc699 = loc(fused[#loc323, #loc320])
#loc700 = loc(fused[#loc326, #loc327])
#loc701 = loc(fused[#loc328, #loc329])
#loc702 = loc(fused[#loc330, #loc327])
#loc703 = loc(fused[#loc333, #loc334])
#loc704 = loc(fused[#loc336, #loc337, #loc338, #loc334])
#loc705 = loc(fused[#loc340, #loc341])
#loc706 = loc(fused[#loc342, #loc343])
#loc707 = loc(fused[#loc344, #loc345])
#loc708 = loc(fused[#loc346, #loc347])
#loc709 = loc(fused[#loc349, #loc351])
#loc710 = loc(fused[#loc352, #loc353, #loc354, #loc345])
#loc711 = loc(fused[#loc359, #loc360])
#loc712 = loc(fused[#loc361, #loc362])
#loc713 = loc(fused[#loc365, #loc363])
#loc714 = loc(fused[#loc366, #loc367])
#loc715 = loc(fused[#loc369, #loc367])
#loc716 = loc(fused[#loc370, #loc371])
#loc717 = loc(fused[#loc372, #loc373])
#loc718 = loc(fused[#loc374, #loc375])
#loc719 = loc(fused[#loc376, #loc377])
#loc720 = loc(fused[#loc378, #loc379])
#loc721 = loc(fused[#loc380, #loc381])
#loc722 = loc(fused[#loc382, #loc383])
#loc723 = loc(fused[#loc388, #loc389])
#loc724 = loc(fused[#loc390, #loc391])
#loc725 = loc(fused[#loc392, #loc393])
#loc726 = loc(fused[#loc394, #loc391])
#loc727 = loc(fused[#loc396, #loc397])
#loc728 = loc(fused[#loc399, #loc400])
#loc729 = loc(fused[#loc401, #loc402])
#loc730 = loc(fused[#loc404, #loc403])
#loc731 = loc(fused[#loc406, #loc405])
#loc732 = loc(fused[#loc409, #loc410])
#loc733 = loc(fused[#loc411, #loc412])
#loc734 = loc(fused[#loc414, #loc415])
#loc735 = loc(fused[#loc416, #loc417])
#loc736 = loc(fused[#loc418, #loc419])
#loc737 = loc(fused[#loc420, #loc412])
#loc738 = loc(fused[#loc422, #loc423])
#loc739 = loc(fused[#loc426, #loc427])
#loc740 = loc(fused[#loc428, #loc423])
#loc741 = loc(fused[#loc434, #loc435])
#loc742 = loc(fused[#loc436, #loc437])
#loc743 = loc(fused[#loc438, #loc439])
#loc744 = loc(fused[#loc440, #loc437])
#loc745 = loc(fused[#loc444, #loc445])
#loc746 = loc(fused[#loc448, #loc449])
#loc747 = loc(fused[#loc450, #loc451])
#loc748 = loc(fused[#loc452, #loc453])
#loc749 = loc(fused[#loc455, #loc456])
#loc750 = loc(fused[#loc457, #loc451])
#loc751 = loc(fused[#loc461, #loc459])
#loc752 = loc(fused[#loc464, #loc465])
#loc753 = loc(fused[#loc467, #loc468])
#loc754 = loc(fused[#loc469, #loc470])
#loc755 = loc(fused[#loc471, #loc468])
#loc756 = loc(fused[#loc474, #loc475])
#loc757 = loc(fused[#loc476, #loc477])
#loc758 = loc(fused[#loc478, #loc475])
#loc759 = loc(fused[#loc481, #loc482])
#loc760 = loc(fused[#loc484, #loc482])
#loc761 = loc(fused[#loc485, #loc486])
#loc762 = loc(fused[#loc487, #loc488])
#loc763 = loc(fused[#loc489, #loc490])
#loc764 = loc(fused[#loc491, #loc492])
#loc765 = loc(fused[#loc494, #loc496])
#loc766 = loc(fused[#loc497, #loc498, #loc499, #loc490])
#loc767 = loc(fused[#loc505, #loc506])
#loc768 = loc(fused[#loc507, #loc508])
#loc769 = loc(fused[#loc511, #loc509])
#loc770 = loc(fused[#loc512, #loc513])
#loc771 = loc(fused[#loc515, #loc516, #loc517, #loc513])
#loc772 = loc(fused[#loc521, #loc520])
#loc773 = loc(fused[#loc522, #loc523])
#loc774 = loc(fused[#loc525, #loc523])
#loc775 = loc(fused[#loc526, #loc527])
#loc776 = loc(fused[#loc528, #loc529])
#loc777 = loc(fused[#loc530, #loc531])
#loc778 = loc(fused[#loc532, #loc533])
#loc779 = loc(fused[#loc534, #loc535, #loc536, #loc531])
#loc780 = loc(fused[#loc542, #loc543])
#loc781 = loc(fused[#loc544, #loc545])
#loc782 = loc(fused[#loc548, #loc546])
#loc783 = loc(fused[#loc549, #loc550])
#loc784 = loc(fused[#loc552, #loc550])
#loc785 = loc(fused[#loc554, #loc553])
#loc786 = loc(fused[#loc555, #loc556])
#loc787 = loc(fused[#loc558, #loc556])
#loc788 = loc(fused[#loc559, #loc560])
#loc789 = loc(fused[#loc561, #loc562])
#loc790 = loc(fused[#loc563, #loc564])
#loc791 = loc(fused[#loc565, #loc566])
#loc792 = loc(fused[#loc567, #loc568, #loc569, #loc564])
