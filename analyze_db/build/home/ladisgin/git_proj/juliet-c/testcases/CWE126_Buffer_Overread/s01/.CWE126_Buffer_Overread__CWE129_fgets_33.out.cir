!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc158 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":151:10)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":151:14)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":151:20)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":151:32)
#true = #cir.bool<true> : !cir.bool
#loc230 = loc(fused[#loc158, #loc159])
#loc231 = loc(fused[#loc160, #loc161])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc174)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc175)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc176)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc12)
  cir.func @_ZN39CWE126_Buffer_Overread__CWE129_fgets_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc180)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc181)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc18)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc20)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc184)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc184)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc184)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc28)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc29)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc29)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc29)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc29)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc29)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc29)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc29)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc29)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc175)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc31)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc32)
        %19 = cir.cmp(ne, %17, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc186)
        cir.if %19 {
          %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc36)
          %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc37)
          cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc188)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc40)
        } loc(#loc187)
      } loc(#loc185)
    } loc(#loc183)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc190)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc44)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc190)
      cir.scope {
        %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc192)
        %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc192)
        cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc192)
        cir.scope {
          %9 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc51)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc52)
          %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc194)
          cir.if %11 {
            %12 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc56)
            %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc57)
            %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc57)
            %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc57)
            cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc58)
          } else {
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc12)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc12)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc59)
          } loc(#loc195)
        } loc(#loc193)
      } loc(#loc191)
    } loc(#loc189)
    cir.return loc(#loc14)
  } loc(#loc179)
  cir.func internal private @_ZN39CWE126_Buffer_Overread__CWE129_fgets_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc197)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc198)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc65)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc67)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    %4 = cir.const #cir.int<7> : !s32i loc(#loc69)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc202)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc74)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc74)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc202)
      cir.scope {
        %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc204)
        %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc204)
        cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc204)
        cir.scope {
          %10 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc81)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc82)
          %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc206)
          cir.if %12 {
            %13 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc86)
            %14 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc87)
            %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc87)
            %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc87)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc88)
          } else {
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc89)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc89)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc90)
          } loc(#loc207)
        } loc(#loc205)
      } loc(#loc203)
    } loc(#loc201)
    cir.return loc(#loc61)
  } loc(#loc196)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc91)
  cir.func internal private @_ZN39CWE126_Buffer_Overread__CWE129_fgets_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc209)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc210)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc97)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc99)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc213)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc213)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc213)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc108)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc108)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc108)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc108)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc108)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc108)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc108)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc108)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc175)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc109)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc110)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc111)
        %19 = cir.cmp(ne, %17, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc215)
        cir.if %19 {
          %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc115)
          %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc116)
          cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc217)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc119)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc119)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc120)
        } loc(#loc216)
      } loc(#loc214)
    } loc(#loc212)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc219)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc124)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc124)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc219)
      cir.scope {
        %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc221)
        %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc221)
        cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc221)
        cir.scope {
          %9 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc131)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc132)
          %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc223)
          %12 = cir.ternary(%11, true {
            %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc134)
            %14 = cir.const #cir.int<10> : !s32i loc(#loc135)
            %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc224)
            %16 = cir.ternary(%15, true {
              %17 = cir.const #true loc(#loc133)
              cir.yield %17 : !cir.bool loc(#loc133)
            }, false {
              %17 = cir.const #false loc(#loc133)
              cir.yield %17 : !cir.bool loc(#loc133)
            }) : (!cir.bool) -> !cir.bool loc(#loc133)
            cir.yield %16 : !cir.bool loc(#loc133)
          }, false {
            %13 = cir.const #false loc(#loc133)
            cir.yield %13 : !cir.bool loc(#loc133)
          }) : (!cir.bool) -> !cir.bool loc(#loc133)
          cir.if %12 {
            %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc140)
            %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc141)
            %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc141)
            %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc141)
            cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc142)
          } else {
            %13 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc91)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc91)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc143)
          } loc(#loc225)
        } loc(#loc222)
      } loc(#loc220)
    } loc(#loc218)
    cir.return loc(#loc93)
  } loc(#loc208)
  cir.func @_ZN39CWE126_Buffer_Overread__CWE129_fgets_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN39CWE126_Buffer_Overread__CWE129_fgets_33L7goodG2BEv() : () -> () loc(#loc146)
    cir.call @_ZN39CWE126_Buffer_Overread__CWE129_fgets_33L7goodB2GEv() : () -> () loc(#loc147)
    cir.return loc(#loc145)
  } loc(#loc226)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc227)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc228)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc155)
  cir.func @main(%arg0: !s32i loc(fused[#loc158, #loc159]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc160, #loc161])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc230)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc231)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc157)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc162)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc163)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc164)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc164)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc165)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc152)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc152)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc166)
    cir.call @_ZN39CWE126_Buffer_Overread__CWE129_fgets_334goodEv() : () -> () loc(#loc167)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc153)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc153)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc168)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc154)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc154)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc169)
    cir.call @_ZN39CWE126_Buffer_Overread__CWE129_fgets_333badEv() : () -> () loc(#loc170)
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc155)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc171)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc172)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc232)
    cir.return %15 : !s32i loc(#loc232)
  } loc(#loc229)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_33.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":43:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":58:27)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":27:1)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":62:1)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":29:5)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":29:9)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":30:5)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":30:20)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":32:13)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":32:12)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":32:5)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":33:5)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":45:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":34:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":34:45)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":36:9)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":44:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":36:19)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":36:32)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":36:49)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":36:13)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":36:59)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":37:9)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":40:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":42:9)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":39:25)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":39:20)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":39:13)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":39:36)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":43:13)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":46:5)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":61:5)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":47:9)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":47:20)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":48:9)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":60:9)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":49:13)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":49:34)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":52:13)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":59:13)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":52:17)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":52:25)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":53:13)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":55:13)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":57:13)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":54:37)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":54:30)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":54:17)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":58:17)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":69:1)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":94:1)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":71:5)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":71:9)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":72:5)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":72:20)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":74:13)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":74:12)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":74:5)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":77:12)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":77:5)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":78:5)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":93:5)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":79:9)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":79:20)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":80:9)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":92:9)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":81:13)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":81:34)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":84:13)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":91:13)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":84:17)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":84:25)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":85:13)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":87:13)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":89:13)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":86:37)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":86:30)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":86:17)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":90:27)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":90:17)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":127:27)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":97:1)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":131:1)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":99:5)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":99:9)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":100:5)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":100:20)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":102:13)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":102:12)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":102:5)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":103:5)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":115:5)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":104:9)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":104:45)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":106:9)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":114:9)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":106:19)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":106:32)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":106:49)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":106:13)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":106:59)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":107:9)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":110:9)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":112:9)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":109:25)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":109:20)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":109:13)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":109:36)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":113:23)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":113:13)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":116:5)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":130:5)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":117:9)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":117:20)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":118:9)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":129:9)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":119:13)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":119:34)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":121:13)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":128:13)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":121:17)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":121:25)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":121:27)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":121:30)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":121:38)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":121:40)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":122:13)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":124:13)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":126:13)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":123:37)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":123:30)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":123:17)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":127:17)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":133:1)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":137:1)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":135:5)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":136:5)
#loc148 = loc("/usr/include/stdlib.h":575:1)
#loc149 = loc("/usr/include/stdlib.h":575:41)
#loc150 = loc("/usr/include/time.h":76:1)
#loc151 = loc("/usr/include/time.h":76:38)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":156:15)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":158:15)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":161:15)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":163:15)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":151:1)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":166:1)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":152:1)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":154:27)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":154:22)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":154:5)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":156:5)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":157:5)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":158:5)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":161:5)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":162:5)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":163:5)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":165:12)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_fgets_33.cpp":165:5)
#loc174 = loc(fused[#loc1, #loc2])
#loc175 = loc(fused[#loc3, #loc4])
#loc176 = loc(fused[#loc5, #loc6])
#loc177 = loc(fused[#loc7, #loc8])
#loc178 = loc(fused[#loc10, #loc11])
#loc179 = loc(fused[#loc13, #loc14])
#loc180 = loc(fused[#loc15, #loc16])
#loc181 = loc(fused[#loc17, #loc18])
#loc182 = loc(fused[#loc21, #loc19])
#loc183 = loc(fused[#loc22, #loc23])
#loc184 = loc(fused[#loc24, #loc25])
#loc185 = loc(fused[#loc26, #loc27])
#loc186 = loc(fused[#loc31, #loc32])
#loc187 = loc(fused[#loc33, #loc34, #loc35, #loc27])
#loc188 = loc(fused[#loc38, #loc39])
#loc189 = loc(fused[#loc41, #loc42])
#loc190 = loc(fused[#loc43, #loc44])
#loc191 = loc(fused[#loc45, #loc46])
#loc192 = loc(fused[#loc47, #loc48])
#loc193 = loc(fused[#loc49, #loc50])
#loc194 = loc(fused[#loc51, #loc52])
#loc195 = loc(fused[#loc53, #loc54, #loc55, #loc50])
#loc196 = loc(fused[#loc60, #loc61])
#loc197 = loc(fused[#loc62, #loc63])
#loc198 = loc(fused[#loc64, #loc65])
#loc199 = loc(fused[#loc68, #loc66])
#loc200 = loc(fused[#loc70, #loc69])
#loc201 = loc(fused[#loc71, #loc72])
#loc202 = loc(fused[#loc73, #loc74])
#loc203 = loc(fused[#loc75, #loc76])
#loc204 = loc(fused[#loc77, #loc78])
#loc205 = loc(fused[#loc79, #loc80])
#loc206 = loc(fused[#loc81, #loc82])
#loc207 = loc(fused[#loc83, #loc84, #loc85, #loc80])
#loc208 = loc(fused[#loc92, #loc93])
#loc209 = loc(fused[#loc94, #loc95])
#loc210 = loc(fused[#loc96, #loc97])
#loc211 = loc(fused[#loc100, #loc98])
#loc212 = loc(fused[#loc101, #loc102])
#loc213 = loc(fused[#loc103, #loc104])
#loc214 = loc(fused[#loc105, #loc106])
#loc215 = loc(fused[#loc110, #loc111])
#loc216 = loc(fused[#loc112, #loc113, #loc114, #loc106])
#loc217 = loc(fused[#loc117, #loc118])
#loc218 = loc(fused[#loc121, #loc122])
#loc219 = loc(fused[#loc123, #loc124])
#loc220 = loc(fused[#loc125, #loc126])
#loc221 = loc(fused[#loc127, #loc128])
#loc222 = loc(fused[#loc129, #loc130])
#loc223 = loc(fused[#loc131, #loc132])
#loc224 = loc(fused[#loc134, #loc136])
#loc225 = loc(fused[#loc137, #loc138, #loc139, #loc130])
#loc226 = loc(fused[#loc144, #loc145])
#loc227 = loc(fused[#loc148, #loc149])
#loc228 = loc(fused[#loc150, #loc151])
#loc229 = loc(fused[#loc156, #loc157])
#loc232 = loc(fused[#loc173, #loc172])
