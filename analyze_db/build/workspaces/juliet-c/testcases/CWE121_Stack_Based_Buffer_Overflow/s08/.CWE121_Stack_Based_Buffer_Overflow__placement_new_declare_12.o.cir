!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc6 = loc("../../../testcasesupport/std_testcase.h":68:7)
!ty_OneIntClass = !cir.record<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @globalReturnsTrueOrFalse() -> !s32i loc(#loc164)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private @printIntLine(!s32i) loc(#loc165)
  cir.func linkonce_odr @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc6)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc6)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc6)
    cir.return loc(#loc6)
  } loc(#loc6)
  cir.func @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_123badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc167)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc168)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc169)
    cir.scope {
      %3 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc17)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc171)
      cir.if %4 {
        %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc22)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
      } else {
        %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc24)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
      } loc(#loc172)
    } loc(#loc170)
    cir.scope {
      %3 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc28)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc176)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc179)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc180)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc180)
          cir.call @_ZN12TwoIntsClassC2Ev(%9) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc36)
          cir.store %9, %5 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc179)
          %10 = cir.const #cir.int<5> : !s32i loc(#loc39)
          %11 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc40)
          %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc41)
          cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc181)
          %13 = cir.const #cir.int<10> : !s32i loc(#loc42)
          %14 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc43)
          %15 = cir.get_member %14[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc44)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc182)
          %16 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc45)
          %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc41)
          %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc46)
          cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc47)
        } loc(#loc178)
      } else {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc184)
          %6 = cir.const #cir.int<4> : !u64i loc(#loc185)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc185)
          cir.call @_ZN11OneIntClassC2Ev(%9) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc51)
          cir.store %9, %5 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc184)
          %10 = cir.const #cir.int<5> : !s32i loc(#loc54)
          %11 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc55)
          %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc56)
          cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc186)
          %13 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc57)
          %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc56)
          %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc58)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc59)
        } loc(#loc183)
      } loc(#loc177)
    } loc(#loc175)
    cir.return loc(#loc8)
  } loc(#loc166)
  cir.func internal private @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc189)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc190)
    cir.scope {
      %3 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc70)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc192)
      cir.if %4 {
        %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc75)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
      } else {
        %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc77)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
      } loc(#loc193)
    } loc(#loc191)
    cir.scope {
      %3 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc81)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc197)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc200)
          %6 = cir.const #cir.int<4> : !u64i loc(#loc201)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc201)
          cir.call @_ZN11OneIntClassC2Ev(%9) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc89)
          cir.store %9, %5 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc200)
          %10 = cir.const #cir.int<5> : !s32i loc(#loc92)
          %11 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc93)
          %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc56)
          cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc202)
          %13 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc94)
          %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc56)
          %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc95)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc96)
        } loc(#loc199)
      } else {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc204)
          %6 = cir.const #cir.int<4> : !u64i loc(#loc205)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc205)
          cir.call @_ZN11OneIntClassC2Ev(%9) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc100)
          cir.store %9, %5 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc204)
          %10 = cir.const #cir.int<5> : !s32i loc(#loc103)
          %11 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc104)
          %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc56)
          cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc206)
          %13 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc105)
          %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc56)
          %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc106)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc107)
        } loc(#loc203)
      } loc(#loc198)
    } loc(#loc196)
    cir.return loc(#loc61)
  } loc(#loc187)
  cir.func internal private @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc209)
    %2 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc210)
    cir.scope {
      %3 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc118)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc212)
      cir.if %4 {
        %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc123)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
      } else {
        %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc125)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
      } loc(#loc213)
    } loc(#loc211)
    cir.scope {
      %3 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc129)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc217)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc220)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc221)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc221)
          cir.call @_ZN12TwoIntsClassC2Ev(%9) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc137)
          cir.store %9, %5 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc220)
          %10 = cir.const #cir.int<5> : !s32i loc(#loc140)
          %11 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc141)
          %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc41)
          cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc222)
          %13 = cir.const #cir.int<10> : !s32i loc(#loc142)
          %14 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc143)
          %15 = cir.get_member %14[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc44)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc223)
          %16 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc144)
          %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc41)
          %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc145)
          cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc146)
        } loc(#loc219)
      } else {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc225)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc226)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc152)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc226)
          cir.call @_ZN12TwoIntsClassC2Ev(%9) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc150)
          cir.store %9, %5 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc225)
          %10 = cir.const #cir.int<5> : !s32i loc(#loc153)
          %11 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc154)
          %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc41)
          cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc227)
          %13 = cir.const #cir.int<10> : !s32i loc(#loc155)
          %14 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc156)
          %15 = cir.get_member %14[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc44)
          cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc228)
          %16 = cir.load %5 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc157)
          %17 = cir.get_member %16[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc41)
          %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc158)
          cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc159)
        } loc(#loc224)
      } loc(#loc218)
    } loc(#loc216)
    cir.return loc(#loc109)
  } loc(#loc207)
  cir.func @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_124goodEv() extra(#fn_attr1) {
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12L7goodB2GEv() : () -> () loc(#loc162)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12L7goodG2BEv() : () -> () loc(#loc163)
    cir.return loc(#loc161)
  } loc(#loc229)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":24:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":69:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":26:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":26:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":27:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":27:43)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":28:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":28:45)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":29:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":38:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":29:8)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":29:33)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":30:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":33:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":35:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":32:16)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":32:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":37:16)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":37:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":39:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":68:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":39:8)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":39:33)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":40:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":54:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":56:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":41:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":53:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":47:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":47:49)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":47:39)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":47:43)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":49:32)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":49:13)
#loc41 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":50:32)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":50:13)
#loc44 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":51:26)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":51:36)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":51:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":57:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":67:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":63:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":63:48)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":63:38)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":63:42)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":65:32)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":65:13)
#loc56 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":66:26)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":66:36)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":66:13)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":78:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":121:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":80:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":80:12)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":81:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":81:43)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":82:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":82:45)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":83:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":92:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":83:8)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":83:33)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":84:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":87:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":89:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":86:16)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":86:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":91:16)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":91:9)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":93:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":120:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":93:8)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":93:33)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":94:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":106:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":108:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":95:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":105:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":101:13)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":101:48)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":101:38)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":101:42)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":103:32)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":103:13)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":104:26)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":104:36)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":104:13)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":109:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":119:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":115:13)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":115:48)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":115:38)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":115:42)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":117:32)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":117:13)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":118:26)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":118:36)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":118:13)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":126:1)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":173:1)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":128:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":128:12)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":129:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":129:43)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":130:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":130:45)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":131:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":140:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":131:8)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":131:33)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":132:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":135:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":137:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":134:16)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":134:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":139:16)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":139:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":141:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":172:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":141:8)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":141:33)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":142:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":156:5)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":158:5)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":143:9)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":155:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":149:13)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":149:49)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":149:39)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":149:43)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":151:32)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":151:13)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":152:32)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":152:13)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":153:26)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":153:36)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":153:13)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":159:9)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":171:9)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":165:13)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":165:49)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":165:39)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":165:43)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":167:32)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":167:13)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":168:32)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":168:13)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":169:26)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":169:36)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":169:13)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":175:1)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":179:1)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":177:5)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_12.cpp":178:5)
#loc164 = loc(fused[#loc1, #loc2])
#loc165 = loc(fused[#loc4, #loc5])
#loc166 = loc(fused[#loc7, #loc8])
#loc167 = loc(fused[#loc9, #loc10])
#loc168 = loc(fused[#loc11, #loc12])
#loc169 = loc(fused[#loc13, #loc14])
#loc170 = loc(fused[#loc15, #loc16])
#loc171 = loc(fused[#loc17, #loc18])
#loc172 = loc(fused[#loc19, #loc20, #loc21, #loc16])
#loc173 = loc(fused[#loc23, #loc22])
#loc174 = loc(fused[#loc25, #loc24])
#loc175 = loc(fused[#loc26, #loc27])
#loc176 = loc(fused[#loc28, #loc29])
#loc177 = loc(fused[#loc30, #loc31, #loc32, #loc27])
#loc178 = loc(fused[#loc33, #loc34])
#loc179 = loc(fused[#loc35, #loc36])
#loc180 = loc(fused[#loc37, #loc36])
#loc181 = loc(fused[#loc40, #loc39])
#loc182 = loc(fused[#loc43, #loc42])
#loc183 = loc(fused[#loc48, #loc49])
#loc184 = loc(fused[#loc50, #loc51])
#loc185 = loc(fused[#loc52, #loc51])
#loc186 = loc(fused[#loc55, #loc54])
#loc187 = loc(fused[#loc60, #loc61])
#loc188 = loc(fused[#loc62, #loc63])
#loc189 = loc(fused[#loc64, #loc65])
#loc190 = loc(fused[#loc66, #loc67])
#loc191 = loc(fused[#loc68, #loc69])
#loc192 = loc(fused[#loc70, #loc71])
#loc193 = loc(fused[#loc72, #loc73, #loc74, #loc69])
#loc194 = loc(fused[#loc76, #loc75])
#loc195 = loc(fused[#loc78, #loc77])
#loc196 = loc(fused[#loc79, #loc80])
#loc197 = loc(fused[#loc81, #loc82])
#loc198 = loc(fused[#loc83, #loc84, #loc85, #loc80])
#loc199 = loc(fused[#loc86, #loc87])
#loc200 = loc(fused[#loc88, #loc89])
#loc201 = loc(fused[#loc90, #loc89])
#loc202 = loc(fused[#loc93, #loc92])
#loc203 = loc(fused[#loc97, #loc98])
#loc204 = loc(fused[#loc99, #loc100])
#loc205 = loc(fused[#loc101, #loc100])
#loc206 = loc(fused[#loc104, #loc103])
#loc207 = loc(fused[#loc108, #loc109])
#loc208 = loc(fused[#loc110, #loc111])
#loc209 = loc(fused[#loc112, #loc113])
#loc210 = loc(fused[#loc114, #loc115])
#loc211 = loc(fused[#loc116, #loc117])
#loc212 = loc(fused[#loc118, #loc119])
#loc213 = loc(fused[#loc120, #loc121, #loc122, #loc117])
#loc214 = loc(fused[#loc124, #loc123])
#loc215 = loc(fused[#loc126, #loc125])
#loc216 = loc(fused[#loc127, #loc128])
#loc217 = loc(fused[#loc129, #loc130])
#loc218 = loc(fused[#loc131, #loc132, #loc133, #loc128])
#loc219 = loc(fused[#loc134, #loc135])
#loc220 = loc(fused[#loc136, #loc137])
#loc221 = loc(fused[#loc138, #loc137])
#loc222 = loc(fused[#loc141, #loc140])
#loc223 = loc(fused[#loc143, #loc142])
#loc224 = loc(fused[#loc147, #loc148])
#loc225 = loc(fused[#loc149, #loc150])
#loc226 = loc(fused[#loc151, #loc150])
#loc227 = loc(fused[#loc154, #loc153])
#loc228 = loc(fused[#loc156, #loc155])
#loc229 = loc(fused[#loc160, #loc161])
