!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc175 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":176:10)
#loc176 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":176:14)
#loc177 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":176:20)
#loc178 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":176:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc286 = loc(fused[#loc175, #loc176])
#loc287 = loc(fused[#loc177, #loc178])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_listen_socket_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc219)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc220)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc221)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc222)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc223)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc224)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc225)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc226)
  cir.func private @close(!s32i) -> !s32i loc(#loc227)
  cir.func private @printHexCharLine(!s8i) loc(#loc228)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__short_listen_socket_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc230)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc26)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc26)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc231)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc233)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc233)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc30)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc30)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc236)
          %9 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc237)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc238)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc239)
          %12 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc240)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc42)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc42)
          cir.store %14, %10 : !s32i, !cir.ptr<!s32i> loc(#loc238)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc44)
          cir.store %16, %11 : !s32i, !cir.ptr<!s32i> loc(#loc239)
          cir.scope {
            cir.do {
              %17 = cir.const #cir.int<2> : !s32i loc(#loc49)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc50)
              %19 = cir.const #cir.int<6> : !s32i loc(#loc51)
              %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc52)
              cir.store %20, %10 : !s32i, !cir.ptr<!s32i> loc(#loc242)
              cir.scope {
                %57 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc57)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc58)
                %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc58)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc244)
                cir.if %60 {
                  cir.break loc(#loc60)
                } loc(#loc245)
              } loc(#loc243)
              %21 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc246)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc63)
              %23 = cir.const #cir.int<16> : !u64i loc(#loc247)
              cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc248)
              %24 = cir.const #cir.int<2> : !s32i loc(#loc68)
              %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc68)
              %26 = cir.get_member %9[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
              cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc249)
              %27 = cir.const #cir.int<0> : !s32i loc(#loc71)
              %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc71)
              %29 = cir.get_member %9[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
              %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
              cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc250)
              %31 = cir.const #cir.int<27015> : !s32i loc(#loc75)
              %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc75)
              %33 = cir.call @htons(%32) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc76)
              %34 = cir.get_member %9[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
              cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc251)
              cir.scope {
                %57 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc82)
                %58 = cir.cast(bitcast, %9 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc253)
                %59 = cir.const #cir.int<16> : !u64i loc(#loc254)
                %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc254)
                %61 = cir.call @bind(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc87)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc88)
                %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc88)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc255)
                cir.if %64 {
                  cir.break loc(#loc90)
                } loc(#loc256)
              } loc(#loc252)
              cir.scope {
                %57 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc93)
                %58 = cir.const #cir.int<5> : !s32i loc(#loc94)
                %59 = cir.call @listen(%57, %58) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc95)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc96)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc96)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc258)
                cir.if %62 {
                  cir.break loc(#loc98)
                } loc(#loc259)
              } loc(#loc257)
              %35 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc99)
              %36 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc100)
              %37 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc101)
              %38 = cir.call @accept(%35, %36, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc102)
              cir.store %38, %11 : !s32i, !cir.ptr<!s32i> loc(#loc260)
              cir.scope {
                %57 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc108)
                %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc108)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc262)
                cir.if %60 {
                  cir.break loc(#loc110)
                } loc(#loc263)
              } loc(#loc261)
              %39 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc111)
              %40 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc112)
              %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
              %42 = cir.const #cir.int<8> : !s32i loc(#loc113)
              %43 = cir.const #cir.int<1> : !s32i loc(#loc114)
              %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc113)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc113)
              %46 = cir.const #cir.int<0> : !s32i loc(#loc115)
              %47 = cir.call @recv(%39, %41, %45, %46) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc116)
              %48 = cir.cast(integral, %47 : !s64i), !s32i loc(#loc116)
              cir.store %48, %8 : !s32i, !cir.ptr<!s32i> loc(#loc264)
              cir.scope {
                %57 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc122)
                %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc122)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc266)
                %61 = cir.ternary(%60, true {
                  %62 = cir.const #true loc(#loc123)
                  cir.yield %62 : !cir.bool loc(#loc123)
                }, false {
                  %62 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc124)
                  %63 = cir.const #cir.int<0> : !s32i loc(#loc125)
                  %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc267)
                  %65 = cir.ternary(%64, true {
                    %66 = cir.const #true loc(#loc123)
                    cir.yield %66 : !cir.bool loc(#loc123)
                  }, false {
                    %66 = cir.const #false loc(#loc123)
                    cir.yield %66 : !cir.bool loc(#loc123)
                  }) : (!cir.bool) -> !cir.bool loc(#loc123)
                  cir.yield %65 : !cir.bool loc(#loc123)
                }) : (!cir.bool) -> !cir.bool loc(#loc123)
                cir.if %61 {
                  cir.break loc(#loc127)
                } loc(#loc268)
              } loc(#loc265)
              %49 = cir.const #cir.int<0> : !s32i loc(#loc128)
              %50 = cir.cast(integral, %49 : !s32i), !s8i loc(#loc128)
              %51 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc129)
              %52 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc130)
              %53 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %51 : !s32i), !cir.ptr<!s8i> loc(#loc130)
              cir.store %50, %53 : !s8i, !cir.ptr<!s8i> loc(#loc269)
              %54 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc131)
              %55 = cir.call @atoi(%54) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc132)
              %56 = cir.cast(integral, %55 : !s32i), !s16i loc(#loc132)
              cir.store %56, %0 : !s16i, !cir.ptr<!s16i> loc(#loc270)
              cir.yield loc(#loc48)
            } while {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc135)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc135)
              cir.condition(%18) loc(#loc135)
            } loc(#loc241)
          } loc(#loc241)
          cir.scope {
            %17 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc138)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc139)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc139)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc272)
            cir.if %20 {
              %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc141)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc142)
            } loc(#loc273)
          } loc(#loc271)
          cir.scope {
            %17 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc145)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc146)
            %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc146)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc275)
            cir.if %20 {
              %21 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc148)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc149)
            } loc(#loc276)
          } loc(#loc274)
        } loc(#loc235)
      } else {
        %8 = cir.const #cir.int<127> : !s32i loc(#loc150)
        %9 = cir.const #cir.int<5> : !s32i loc(#loc151)
        %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc150)
        %11 = cir.cast(integral, %10 : !s32i), !s16i loc(#loc150)
        cir.store %11, %0 : !s16i, !cir.ptr<!s16i> loc(#loc277)
      } loc(#loc234)
    } loc(#loc232)
    cir.scope {
      %4 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc279)
      %5 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc156)
      %6 = cir.cast(integral, %5 : !s16i), !s8i loc(#loc156)
      cir.store %6, %4 : !s8i, !cir.ptr<!s8i> loc(#loc279)
      %7 = cir.load %4 : !cir.ptr<!s8i>, !s8i loc(#loc157)
      cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc158)
    } loc(#loc278)
    cir.return loc(#loc22)
  } loc(#loc229)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__short_listen_socket_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc281)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc161)
    cir.return loc(#loc160)
  } loc(#loc280)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc282)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc283)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc284)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc172)
  cir.func @main(%arg0: !s32i loc(fused[#loc175, #loc176]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc177, #loc178])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc286)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc287)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc174)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc179)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc180)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc181)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc181)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc182)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc169)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    %8 = cir.get_global @CWE197_Numeric_Truncation_Error__short_listen_socket_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc288)
    cir.call @CWE197_Numeric_Truncation_Error__short_listen_socket_12_good() : () -> () loc(#loc184)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc170)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc186)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc171)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc187)
    %13 = cir.get_global @CWE197_Numeric_Truncation_Error__short_listen_socket_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc289)
    cir.call @CWE197_Numeric_Truncation_Error__short_listen_socket_12_bad() : () -> () loc(#loc188)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc172)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc191)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc290)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc290)
    cir.return %17 : !s32i loc(#loc290)
  } loc(#loc285)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc292)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc198)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc198)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc293)
    cir.scope {
      %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc295)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc295)
      %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc202)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc202)
      cir.if %7 {
        %8 = cir.const #cir.int<127> : !s32i loc(#loc207)
        %9 = cir.const #cir.int<5> : !s32i loc(#loc208)
        %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc207)
        %11 = cir.cast(integral, %10 : !s32i), !s16i loc(#loc207)
        cir.store %11, %0 : !s16i, !cir.ptr<!s16i> loc(#loc297)
      } else {
        %8 = cir.const #cir.int<127> : !s32i loc(#loc210)
        %9 = cir.const #cir.int<5> : !s32i loc(#loc211)
        %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc210)
        %11 = cir.cast(integral, %10 : !s32i), !s16i loc(#loc210)
        cir.store %11, %0 : !s16i, !cir.ptr<!s16i> loc(#loc298)
      } loc(#loc296)
    } loc(#loc294)
    cir.scope {
      %4 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc300)
      %5 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc216)
      %6 = cir.cast(integral, %5 : !s16i), !s8i loc(#loc216)
      cir.store %6, %4 : !s8i, !cir.ptr<!s8i> loc(#loc300)
      %7 = cir.load %4 : !cir.ptr<!s8i>, !s8i loc(#loc217)
      cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc218)
    } loc(#loc299)
    cir.return loc(#loc194)
  } loc(#loc291)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":404:1)
#loc6 = loc("/usr/include/netinet/in.h":405:40)
#loc7 = loc("/usr/include/sys/socket.h":112:1)
#loc8 = loc("/usr/include/sys/socket.h":113:6)
#loc9 = loc("/usr/include/sys/socket.h":296:1)
#loc10 = loc("/usr/include/sys/socket.h":296:39)
#loc11 = loc("/usr/include/sys/socket.h":306:1)
#loc12 = loc("/usr/include/sys/socket.h":307:38)
#loc13 = loc("/usr/include/sys/socket.h":145:1)
#loc14 = loc("/usr/include/sys/socket.h":145:68)
#loc15 = loc("/usr/include/stdlib.h":105:1)
#loc16 = loc("/usr/include/stdlib.h":106:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc21 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":44:1)
#loc22 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":131:1)
#loc23 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":46:5)
#loc24 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":46:11)
#loc25 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":48:13)
#loc26 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":48:12)
#loc27 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":48:5)
#loc28 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":49:5)
#loc29 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":125:5)
#loc30 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":49:8)
#loc31 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":49:33)
#loc32 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":50:5)
#loc33 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":120:5)
#loc34 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":122:5)
#loc35 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":51:9)
#loc36 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":119:9)
#loc37 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":56:13)
#loc38 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":56:17)
#loc39 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":57:13)
#loc40 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":57:32)
#loc41 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":58:13)
#loc42 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":58:35)
#loc43 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":59:13)
#loc44 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":59:35)
#loc45 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":60:13)
#loc46 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":60:45)
#loc47 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":61:13)
#loc48 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":104:21)
#loc49 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":70:39)
#loc50 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":70:48)
#loc51 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":70:61)
#loc52 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":70:32)
#loc53 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":70:17)
#loc54 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":70:72)
#loc55 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":71:17)
#loc56 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":74:17)
#loc57 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":71:21)
#loc58 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":71:37)
#loc59 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":72:17)
#loc60 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":73:21)
#loc61 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":75:24)
#loc62 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":75:25)
#loc63 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":75:34)
#loc64 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":75:37)
#loc65 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":75:51)
#loc66 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":75:17)
#loc67 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":75:52)
#loc68 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":76:38)
#loc69 = loc("/usr/include/netinet/in.h":249:5)
#loc70 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":76:17)
#loc71 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":77:43)
#loc72 = loc("/usr/include/netinet/in.h":251:20)
#loc73 = loc("/usr/include/netinet/in.h":33:15)
#loc74 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":77:17)
#loc75 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":78:42)
#loc76 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":78:36)
#loc77 = loc("/usr/include/netinet/in.h":250:15)
#loc78 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":78:17)
#loc79 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":78:50)
#loc80 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":79:17)
#loc81 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":82:17)
#loc82 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":79:26)
#loc83 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":79:58)
#loc84 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":79:59)
#loc85 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":79:68)
#loc86 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":79:82)
#loc87 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":79:21)
#loc88 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":79:88)
#loc89 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":80:17)
#loc90 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":81:21)
#loc91 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":83:17)
#loc92 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":86:17)
#loc93 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":83:28)
#loc94 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":83:42)
#loc95 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":83:21)
#loc96 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":83:61)
#loc97 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":84:17)
#loc98 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":85:21)
#loc99 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":87:39)
#loc100 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":87:53)
#loc101 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":87:59)
#loc102 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":87:32)
#loc103 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":87:17)
#loc104 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":87:63)
#loc105 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":88:17)
#loc106 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":91:17)
#loc107 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":88:21)
#loc108 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":88:37)
#loc109 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":89:17)
#loc110 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":90:21)
#loc111 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":93:35)
#loc112 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":93:49)
#loc113 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":93:62)
#loc114 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":93:80)
#loc115 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":93:83)
#loc116 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":93:30)
#loc117 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":93:17)
#loc118 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":93:84)
#loc119 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":95:17)
#loc120 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":98:17)
#loc121 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":95:21)
#loc122 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":95:35)
#loc123 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":95:48)
#loc124 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":95:51)
#loc125 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":95:65)
#loc126 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":96:17)
#loc127 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":97:21)
#loc128 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":100:43)
#loc129 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":100:29)
#loc130 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":100:17)
#loc131 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":102:36)
#loc132 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":102:31)
#loc133 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":102:17)
#loc134 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":102:47)
#loc135 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":104:20)
#loc136 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":105:13)
#loc137 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":108:13)
#loc138 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":105:17)
#loc139 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":105:33)
#loc140 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":106:13)
#loc141 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":107:30)
#loc142 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":107:17)
#loc143 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":109:13)
#loc144 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":112:13)
#loc145 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":109:17)
#loc146 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":109:33)
#loc147 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":110:13)
#loc148 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":111:30)
#loc149 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":111:17)
#loc150 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":124:16)
#loc151 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":124:25)
#loc152 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":124:9)
#loc153 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":126:5)
#loc154 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":130:5)
#loc155 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":128:9)
#loc156 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":128:31)
#loc157 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":129:26)
#loc158 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":129:9)
#loc159 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":161:1)
#loc160 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":164:1)
#loc161 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":163:5)
#loc162 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":163:13)
#loc163 = loc("/usr/include/stdlib.h":575:1)
#loc164 = loc("/usr/include/stdlib.h":575:41)
#loc165 = loc("/usr/include/time.h":76:1)
#loc166 = loc("/usr/include/time.h":76:38)
#loc167 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc168 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc169 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":181:15)
#loc170 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":183:15)
#loc171 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":186:15)
#loc172 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":188:15)
#loc173 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":176:1)
#loc174 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":191:1)
#loc179 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":177:1)
#loc180 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":179:27)
#loc181 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":179:22)
#loc182 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":179:5)
#loc183 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":181:5)
#loc184 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":182:5)
#loc185 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":182:66)
#loc186 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":183:5)
#loc187 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":186:5)
#loc188 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":187:5)
#loc189 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":187:65)
#loc190 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":188:5)
#loc191 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":190:12)
#loc192 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":190:5)
#loc193 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":139:1)
#loc194 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":159:1)
#loc195 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":141:5)
#loc196 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":141:11)
#loc197 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":143:13)
#loc198 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":143:12)
#loc199 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":143:5)
#loc200 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":144:5)
#loc201 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":153:5)
#loc202 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":144:8)
#loc203 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":144:33)
#loc204 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":145:5)
#loc205 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":148:5)
#loc206 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":150:5)
#loc207 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":147:16)
#loc208 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":147:25)
#loc209 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":147:9)
#loc210 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":152:16)
#loc211 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":152:25)
#loc212 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":152:9)
#loc213 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":154:5)
#loc214 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":158:5)
#loc215 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":156:9)
#loc216 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":156:31)
#loc217 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":157:26)
#loc218 = loc("CWE197_Numeric_Truncation_Error__short_listen_socket_12.c":157:9)
#loc219 = loc(fused[#loc1, #loc2])
#loc220 = loc(fused[#loc3, #loc4])
#loc221 = loc(fused[#loc5, #loc6])
#loc222 = loc(fused[#loc7, #loc8])
#loc223 = loc(fused[#loc9, #loc10])
#loc224 = loc(fused[#loc11, #loc12])
#loc225 = loc(fused[#loc13, #loc14])
#loc226 = loc(fused[#loc15, #loc16])
#loc227 = loc(fused[#loc17, #loc18])
#loc228 = loc(fused[#loc19, #loc20])
#loc229 = loc(fused[#loc21, #loc22])
#loc230 = loc(fused[#loc23, #loc24])
#loc231 = loc(fused[#loc27, #loc25])
#loc232 = loc(fused[#loc28, #loc29])
#loc233 = loc(fused[#loc30, #loc31])
#loc234 = loc(fused[#loc32, #loc33, #loc34, #loc29])
#loc235 = loc(fused[#loc35, #loc36])
#loc236 = loc(fused[#loc37, #loc38])
#loc237 = loc(fused[#loc39, #loc40])
#loc238 = loc(fused[#loc41, #loc42])
#loc239 = loc(fused[#loc43, #loc44])
#loc240 = loc(fused[#loc45, #loc46])
#loc241 = loc(fused[#loc47, #loc48])
#loc242 = loc(fused[#loc53, #loc54])
#loc243 = loc(fused[#loc55, #loc56])
#loc244 = loc(fused[#loc57, #loc58])
#loc245 = loc(fused[#loc59, #loc56])
#loc246 = loc(fused[#loc61, #loc62])
#loc247 = loc(fused[#loc64, #loc65])
#loc248 = loc(fused[#loc66, #loc67])
#loc249 = loc(fused[#loc70, #loc68])
#loc250 = loc(fused[#loc74, #loc71])
#loc251 = loc(fused[#loc78, #loc79])
#loc252 = loc(fused[#loc80, #loc81])
#loc253 = loc(fused[#loc83, #loc84])
#loc254 = loc(fused[#loc85, #loc86])
#loc255 = loc(fused[#loc87, #loc88])
#loc256 = loc(fused[#loc89, #loc81])
#loc257 = loc(fused[#loc91, #loc92])
#loc258 = loc(fused[#loc95, #loc96])
#loc259 = loc(fused[#loc97, #loc92])
#loc260 = loc(fused[#loc103, #loc104])
#loc261 = loc(fused[#loc105, #loc106])
#loc262 = loc(fused[#loc107, #loc108])
#loc263 = loc(fused[#loc109, #loc106])
#loc264 = loc(fused[#loc117, #loc118])
#loc265 = loc(fused[#loc119, #loc120])
#loc266 = loc(fused[#loc121, #loc122])
#loc267 = loc(fused[#loc124, #loc125])
#loc268 = loc(fused[#loc126, #loc120])
#loc269 = loc(fused[#loc130, #loc128])
#loc270 = loc(fused[#loc133, #loc134])
#loc271 = loc(fused[#loc136, #loc137])
#loc272 = loc(fused[#loc138, #loc139])
#loc273 = loc(fused[#loc140, #loc137])
#loc274 = loc(fused[#loc143, #loc144])
#loc275 = loc(fused[#loc145, #loc146])
#loc276 = loc(fused[#loc147, #loc144])
#loc277 = loc(fused[#loc152, #loc151])
#loc278 = loc(fused[#loc153, #loc154])
#loc279 = loc(fused[#loc155, #loc156])
#loc280 = loc(fused[#loc159, #loc160])
#loc281 = loc(fused[#loc161, #loc162])
#loc282 = loc(fused[#loc163, #loc164])
#loc283 = loc(fused[#loc165, #loc166])
#loc284 = loc(fused[#loc167, #loc168])
#loc285 = loc(fused[#loc173, #loc174])
#loc288 = loc(fused[#loc184, #loc185])
#loc289 = loc(fused[#loc188, #loc189])
#loc290 = loc(fused[#loc192, #loc191])
#loc291 = loc(fused[#loc193, #loc194])
#loc292 = loc(fused[#loc195, #loc196])
#loc293 = loc(fused[#loc199, #loc197])
#loc294 = loc(fused[#loc200, #loc201])
#loc295 = loc(fused[#loc202, #loc203])
#loc296 = loc(fused[#loc204, #loc205, #loc206, #loc201])
#loc297 = loc(fused[#loc209, #loc208])
#loc298 = loc(fused[#loc212, #loc211])
#loc299 = loc(fused[#loc213, #loc214])
#loc300 = loc(fused[#loc215, #loc216])
