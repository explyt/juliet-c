!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc141)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc142)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc145)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc147)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc148)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc150)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc150)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc19)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc151)
  ^bb2:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc24)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc26)
    %12 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc29)
    cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc153)
    cir.br ^bb4 loc(#loc22)
  ^bb3:  // pred: ^bb1
    %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
    cir.store %15, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc32)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc35)
    cir.store %17, %20 : !s8i, !cir.ptr<!s8i> loc(#loc155)
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc18)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc156)
  ^bb6:  // pred: ^bb5
    %21 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
    %23 = cir.const #cir.int<67> : !s32i loc(#loc39)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc40)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc40)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc40)
    cir.libc.memset %27 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc157)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc44)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc45)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc45)
    %33 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc47)
    cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc158)
    cir.br ^bb7 loc(#loc159)
  ^bb7:  // pred: ^bb6
    %35 = cir.const #cir.int<0> : !s32i loc(#loc50)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc50)
    cir.store %36, %0 : !u64i, !cir.ptr<!u64i> loc(#loc160)
    cir.br ^bb8 loc(#loc159)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %37 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc53)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc53)
    %40 = cir.cmp(lt, %37, %39) : !u64i, !cir.bool loc(#loc161)
    cir.brcond %40 ^bb9, ^bb13 loc(#loc54)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc162)
  ^bb10:  // pred: ^bb9
    %41 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %42 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc57)
    %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc57)
    %45 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    %46 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc60)
    cir.store %44, %47 : !s8i, !cir.ptr<!s8i> loc(#loc163)
    cir.br ^bb11 loc(#loc49)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc49)
  ^bb12:  // pred: ^bb11
    %48 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc62)
    %49 = cir.unary(inc, %48) : !u64i, !u64i loc(#loc63)
    cir.store %49, %0 : !u64i, !cir.ptr<!u64i> loc(#loc164)
    cir.br ^bb8 loc(#loc159)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc49)
  ^bb14:  // pred: ^bb13
    %50 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc64)
    %52 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    %53 = cir.const #cir.int<100> : !s32i loc(#loc66)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %55 = cir.binop(sub, %53, %54) nsw : !s32i loc(#loc66)
    %56 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc68)
    cir.store %51, %56 : !s8i, !cir.ptr<!s8i> loc(#loc165)
    %57 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%57) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    cir.br ^bb15 loc(#loc37)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc6)
  } loc(#loc143)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc167)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc73)
    cir.return loc(#loc72)
  } loc(#loc166)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc169)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc170)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc172)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc173)
    cir.br ^bb1 loc(#loc174)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc175)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc175)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc89)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc89)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc176)
  ^bb2:  // pred: ^bb1
    %9 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc96)
    %12 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc99)
    cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc178)
    cir.br ^bb4 loc(#loc92)
  ^bb3:  // pred: ^bb1
    %15 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc100)
    cir.store %15, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc102)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc105)
    cir.store %17, %20 : !s8i, !cir.ptr<!s8i> loc(#loc180)
    cir.br ^bb4 loc(#loc88)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc88)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc181)
  ^bb6:  // pred: ^bb5
    %21 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc108)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
    %23 = cir.const #cir.int<67> : !s32i loc(#loc109)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc110)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc110)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc110)
    cir.libc.memset %27 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc182)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc114)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc115)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %32 = cir.binop(sub, %30, %31) nsw : !s32i loc(#loc115)
    %33 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc117)
    %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s32i), !cir.ptr<!s8i> loc(#loc117)
    cir.store %29, %34 : !s8i, !cir.ptr<!s8i> loc(#loc183)
    cir.br ^bb7 loc(#loc184)
  ^bb7:  // pred: ^bb6
    %35 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc120)
    cir.store %36, %0 : !u64i, !cir.ptr<!u64i> loc(#loc185)
    cir.br ^bb8 loc(#loc184)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %37 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc122)
    %38 = cir.const #cir.int<100> : !s32i loc(#loc123)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc123)
    %40 = cir.cmp(lt, %37, %39) : !u64i, !cir.bool loc(#loc186)
    cir.brcond %40 ^bb9, ^bb13 loc(#loc124)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc187)
  ^bb10:  // pred: ^bb9
    %41 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc126)
    %42 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc127)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc127)
    %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc127)
    %45 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %46 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc129)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc130)
    cir.store %44, %47 : !s8i, !cir.ptr<!s8i> loc(#loc188)
    cir.br ^bb11 loc(#loc119)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc119)
  ^bb12:  // pred: ^bb11
    %48 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc132)
    %49 = cir.unary(inc, %48) : !u64i, !u64i loc(#loc133)
    cir.store %49, %0 : !u64i, !cir.ptr<!u64i> loc(#loc189)
    cir.br ^bb8 loc(#loc184)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc119)
  ^bb14:  // pred: ^bb13
    %50 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc134)
    %52 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    %53 = cir.const #cir.int<100> : !s32i loc(#loc136)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %55 = cir.binop(sub, %53, %54) nsw : !s32i loc(#loc136)
    %56 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc138)
    cir.store %51, %56 : !s8i, !cir.ptr<!s8i> loc(#loc190)
    %57 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%57) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    cir.br ^bb15 loc(#loc107)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc76)
  } loc(#loc168)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":54:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":42:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":42:16)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":43:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":43:24)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":25:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":25:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":26:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":26:26)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":27:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":27:28)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":28:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":40:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":28:8)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":28:33)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":29:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":34:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":36:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":32:16)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":32:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":33:19)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":33:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":33:14)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":33:15)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":38:16)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":38:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":39:19)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":39:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":39:14)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":39:15)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":41:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":53:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":44:16)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":44:24)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":44:29)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":44:33)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":44:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":44:34)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":45:25)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":45:16)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":45:20)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":45:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":47:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":50:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":47:18)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":47:14)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":47:21)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":47:25)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":47:23)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":48:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":49:30)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":49:23)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":49:13)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":49:18)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":49:19)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":49:31)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":47:31)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":47:30)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":51:23)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":51:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":51:14)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":51:18)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":51:19)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":52:19)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":52:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":94:1)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":97:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":96:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":96:13)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":62:1)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":92:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":80:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":80:16)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":81:9)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":81:24)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":64:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":64:12)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":65:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":65:26)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":66:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":66:28)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":67:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":78:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":67:8)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":67:33)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":68:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":72:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":74:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":70:16)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":70:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":71:19)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":71:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":71:14)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":71:15)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":76:16)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":76:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":77:19)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":77:9)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":77:14)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":77:15)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":79:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":91:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":82:16)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":82:24)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":82:29)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":82:33)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":82:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":82:34)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":83:25)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":83:16)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":83:20)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":83:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":85:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":88:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":85:18)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":85:14)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":85:21)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":85:25)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":85:23)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":86:9)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":87:30)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":87:23)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":87:13)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":87:18)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":87:19)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":87:31)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":85:31)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":85:30)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":89:23)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":89:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":89:14)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":89:18)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":89:19)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":90:19)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_loop_12.c":90:9)
#loc141 = loc(fused[#loc1, #loc2])
#loc142 = loc(fused[#loc3, #loc4])
#loc143 = loc(fused[#loc5, #loc6])
#loc144 = loc(fused[#loc7, #loc8])
#loc145 = loc(fused[#loc9, #loc10])
#loc146 = loc(fused[#loc11, #loc12])
#loc147 = loc(fused[#loc13, #loc14])
#loc148 = loc(fused[#loc15, #loc16])
#loc149 = loc(fused[#loc17, #loc18])
#loc150 = loc(fused[#loc19, #loc20])
#loc151 = loc(fused[#loc21, #loc22, #loc23, #loc18])
#loc152 = loc(fused[#loc25, #loc24])
#loc153 = loc(fused[#loc27, #loc26])
#loc154 = loc(fused[#loc31, #loc30])
#loc155 = loc(fused[#loc33, #loc32])
#loc156 = loc(fused[#loc36, #loc37])
#loc157 = loc(fused[#loc42, #loc43])
#loc158 = loc(fused[#loc47, #loc44])
#loc159 = loc(fused[#loc48, #loc49])
#loc160 = loc(fused[#loc51, #loc50])
#loc161 = loc(fused[#loc52, #loc53])
#loc162 = loc(fused[#loc55, #loc49])
#loc163 = loc(fused[#loc58, #loc61])
#loc164 = loc(fused[#loc63, #loc62])
#loc165 = loc(fused[#loc65, #loc64])
#loc166 = loc(fused[#loc71, #loc72])
#loc167 = loc(fused[#loc73, #loc74])
#loc168 = loc(fused[#loc75, #loc76])
#loc169 = loc(fused[#loc77, #loc78])
#loc170 = loc(fused[#loc79, #loc80])
#loc171 = loc(fused[#loc81, #loc82])
#loc172 = loc(fused[#loc83, #loc84])
#loc173 = loc(fused[#loc85, #loc86])
#loc174 = loc(fused[#loc87, #loc88])
#loc175 = loc(fused[#loc89, #loc90])
#loc176 = loc(fused[#loc91, #loc92, #loc93, #loc88])
#loc177 = loc(fused[#loc95, #loc94])
#loc178 = loc(fused[#loc97, #loc96])
#loc179 = loc(fused[#loc101, #loc100])
#loc180 = loc(fused[#loc103, #loc102])
#loc181 = loc(fused[#loc106, #loc107])
#loc182 = loc(fused[#loc112, #loc113])
#loc183 = loc(fused[#loc117, #loc114])
#loc184 = loc(fused[#loc118, #loc119])
#loc185 = loc(fused[#loc121, #loc120])
#loc186 = loc(fused[#loc122, #loc123])
#loc187 = loc(fused[#loc125, #loc119])
#loc188 = loc(fused[#loc128, #loc131])
#loc189 = loc(fused[#loc133, #loc132])
#loc190 = loc(fused[#loc135, #loc134])
