!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":29:21)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":29:28)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":58:25)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":58:32)
#loc95 = loc(fused[#loc10, #loc11])
#loc108 = loc(fused[#loc53, #loc54])
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s07/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc91)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc93)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc10, #loc11])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc96)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc95)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    cir.br ^bb1 loc(#loc97)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc96)
    cir.store %2, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc96)
    %3 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc17)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc18)
    %5 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc19)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc19)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %11 = cir.call @snprintf(%4, %7, %9, %10) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc17)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc23)
    cir.br ^bb2 loc(#loc16)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc9)
  } loc(#loc94)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc99)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc100)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc101)
    %3 = cir.get_global @badSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc29)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc100)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc102)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc35)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc36)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc36)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc103)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc40)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc42)
    %18 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc44)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc104)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc45)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    cir.call %19(%20) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc45)
    cir.return loc(#loc25)
  } loc(#loc98)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc106)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    cir.return loc(#loc48)
  } loc(#loc105)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc53, #loc54])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc109)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc108)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc57)
    cir.br ^bb1 loc(#loc110)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc109)
    cir.store %2, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc109)
    %3 = cir.get_global @snprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc60)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc61)
    %5 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc62)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc62)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc64)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc64)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    %11 = cir.call @snprintf(%4, %7, %9, %10) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc60)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    cir.br ^bb2 loc(#loc59)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc52)
  } loc(#loc107)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc112)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc113)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc114)
    %3 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc73)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc113)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc76)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc79)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc80)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc80)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc80)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc116)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc84)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %15 = cir.const #cir.int<50> : !s32i loc(#loc86)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc86)
    %18 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc88)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc117)
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc89)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    cir.call %19(%20) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc89)
    cir.return loc(#loc69)
  } loc(#loc111)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s07/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":34:38)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":29:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":37:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":32:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":32:25)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":30:1)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":31:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":36:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":34:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":34:18)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":34:24)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":34:31)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":34:44)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":35:19)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":35:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":39:1)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":51:1)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":41:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":41:12)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":43:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":43:32)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":44:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":44:24)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":45:12)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":45:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":47:12)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":47:18)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":47:23)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":47:27)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":47:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":47:28)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":48:19)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":48:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":48:10)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":48:14)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":48:15)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":50:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":50:13)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":80:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":83:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":82:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":82:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":58:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":66:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":61:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":61:25)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":59:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":60:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":65:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":63:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":63:18)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":63:24)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":63:31)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":63:38)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":63:44)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":64:19)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":64:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":68:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":78:1)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":70:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":70:12)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":71:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":71:32)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":72:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":72:24)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":73:12)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":73:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":75:12)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":75:18)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":75:23)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":75:26)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":75:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":75:27)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":76:18)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":76:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":76:10)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":76:13)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":76:14)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":77:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_44.c":77:13)
#loc91 = loc(fused[#loc1, #loc2])
#loc92 = loc(fused[#loc3, #loc4])
#loc93 = loc(fused[#loc6, #loc7])
#loc94 = loc(fused[#loc8, #loc9])
#loc96 = loc(fused[#loc12, #loc13])
#loc97 = loc(fused[#loc15, #loc16])
#loc98 = loc(fused[#loc24, #loc25])
#loc99 = loc(fused[#loc26, #loc27])
#loc100 = loc(fused[#loc28, #loc29])
#loc101 = loc(fused[#loc30, #loc31])
#loc102 = loc(fused[#loc33, #loc32])
#loc103 = loc(fused[#loc38, #loc39])
#loc104 = loc(fused[#loc41, #loc40])
#loc105 = loc(fused[#loc47, #loc48])
#loc106 = loc(fused[#loc49, #loc50])
#loc107 = loc(fused[#loc51, #loc52])
#loc109 = loc(fused[#loc55, #loc56])
#loc110 = loc(fused[#loc58, #loc59])
#loc111 = loc(fused[#loc68, #loc69])
#loc112 = loc(fused[#loc70, #loc71])
#loc113 = loc(fused[#loc72, #loc73])
#loc114 = loc(fused[#loc74, #loc75])
#loc115 = loc(fused[#loc77, #loc76])
#loc116 = loc(fused[#loc82, #loc83])
#loc117 = loc(fused[#loc85, #loc84])
