!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc109 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":88:48)
#loc146 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:28)
#loc175 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":347:10)
#loc176 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":347:14)
#loc177 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":347:20)
#loc178 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":347:32)
#loc283 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":187:48)
#loc359 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":246:48)
#loc389 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:28)
#loc407 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:28)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc524 = loc(fused[#loc175, #loc176])
#loc525 = loc(fused[#loc177, #loc178])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc459)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc460)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc461)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc462)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc463)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc464)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc465)
  cir.func private @close(!s32i) -> !s32i loc(#loc466)
  cir.func private @printIntLine(!s32i) loc(#loc467)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr) loc(#loc20)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc468)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc23)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_square_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc470)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc471)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc472)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc473)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc474)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc475)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc476)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc40)
    cir.store %7, %6 : !s32i, !cir.ptr<!s32i> loc(#loc477)
    cir.br ^bb1 loc(#loc478)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc479)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc479)
    %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc44)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc44)
    cir.brcond %11 ^bb2, ^bb34 loc(#loc480)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc481)
  ^bb3:  // pred: ^bb2
    %12 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc31)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc472)
    cir.br ^bb4 loc(#loc482)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc482)
  ^bb5:  // pred: ^bb26
    %14 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc53)
    cir.brcond %15 ^bb6, ^bb27 loc(#loc53)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %16 = cir.const #cir.int<2> : !s32i loc(#loc54)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %18 = cir.const #cir.int<6> : !s32i loc(#loc56)
    %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc57)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc483)
    cir.br ^bb7 loc(#loc484)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc63)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc485)
    cir.brcond %23 ^bb8, ^bb9 loc(#loc486)
  ^bb8:  // pred: ^bb7
    cir.br ^bb27 loc(#loc65)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc61)
  ^bb10:  // pred: ^bb9
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc487)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc488)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc489)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc73)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc73)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc490)
    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
    %32 = cir.call @inet_addr(%31) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc76)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc491)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc81)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc81)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc82)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc492)
    cir.br ^bb11 loc(#loc493)
  ^bb11:  // pred: ^bb10
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc494)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc495)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc495)
    %43 = cir.call @connect(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc93)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc94)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc496)
    cir.brcond %46 ^bb12, ^bb13 loc(#loc497)
  ^bb12:  // pred: ^bb11
    cir.br ^bb27 loc(#loc96)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc87)
  ^bb14:  // pred: ^bb13
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %48 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc98)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc98)
    %50 = cir.const #cir.int<3> : !s32i loc(#loc99)
    %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc99)
    %52 = cir.const #cir.int<4> : !u64i loc(#loc99)
    %53 = cir.binop(mul, %51, %52) : !u64i loc(#loc99)
    %54 = cir.const #cir.int<2> : !s32i loc(#loc99)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc99)
    %56 = cir.binop(add, %53, %55) : !u64i loc(#loc99)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc100)
    %59 = cir.binop(sub, %56, %58) : !u64i loc(#loc498)
    %60 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %61 = cir.call @recv(%47, %49, %59, %60) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc102)
    %62 = cir.cast(integral, %61 : !s64i), !s32i loc(#loc102)
    cir.store %62, %0 : !s32i, !cir.ptr<!s32i> loc(#loc499)
    cir.br ^bb15 loc(#loc500)
  ^bb15:  // pred: ^bb14
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc108)
    %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc501)
    cir.brcond %66 ^bb16, ^bb17 loc(#loc109)
  ^bb16:  // pred: ^bb15
    %67 = cir.const #true loc(#loc109)
    cir.br ^bb22(%67 : !cir.bool) loc(#loc109)
  ^bb17:  // pred: ^bb15
    %68 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %69 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %70 = cir.cmp(eq, %68, %69) : !s32i, !cir.bool loc(#loc502)
    cir.brcond %70 ^bb18, ^bb19 loc(#loc109)
  ^bb18:  // pred: ^bb17
    %71 = cir.const #true loc(#loc109)
    cir.br ^bb20(%71 : !cir.bool) loc(#loc109)
  ^bb19:  // pred: ^bb17
    %72 = cir.const #false loc(#loc109)
    cir.br ^bb20(%72 : !cir.bool) loc(#loc109)
  ^bb20(%73: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":88:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc109)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%73 : !cir.bool) loc(#loc109)
  ^bb22(%74: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":88:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc109)
  ^bb23:  // pred: ^bb22
    cir.brcond %74 ^bb24, ^bb25 loc(#loc503)
  ^bb24:  // pred: ^bb23
    cir.br ^bb27 loc(#loc113)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc106)
  ^bb26:  // pred: ^bb25
    %75 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %76 = cir.cast(integral, %75 : !s32i), !s8i loc(#loc114)
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %78 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc116)
    %79 = cir.ptr_stride(%78 : !cir.ptr<!s8i>, %77 : !s32i), !cir.ptr<!s8i> loc(#loc116)
    cir.store %76, %79 : !s8i, !cir.ptr<!s8i> loc(#loc504)
    %80 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
    %81 = cir.call @atoi(%80) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc118)
    cir.store %81, %6 : !s32i, !cir.ptr<!s32i> loc(#loc505)
    cir.br ^bb5 loc(#loc52)
  ^bb27:  // 4 preds: ^bb5, ^bb8, ^bb12, ^bb24
    cir.br ^bb28 loc(#loc52)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc506)
  ^bb29:  // pred: ^bb28
    %82 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %83 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %84 = cir.unary(minus, %83) : !s32i, !s32i loc(#loc124)
    %85 = cir.cmp(ne, %82, %84) : !s32i, !cir.bool loc(#loc507)
    cir.brcond %85 ^bb30, ^bb31 loc(#loc508)
  ^bb30:  // pred: ^bb29
    %86 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %87 = cir.call @close(%86) : (!s32i) -> !s32i loc(#loc127)
    cir.br ^bb31 loc(#loc122)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc122)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc50)
  ^bb33:  // pred: ^bb32
    cir.br ^bb35 loc(#loc47)
  ^bb34:  // pred: ^bb1
    %88 = cir.const #cir.int<2> : !s32i loc(#loc128)
    cir.store %88, %6 : !s32i, !cir.ptr<!s32i> loc(#loc509)
    cir.br ^bb35 loc(#loc43)
  ^bb35:  // 2 preds: ^bb33, ^bb34
    cir.br ^bb36 loc(#loc43)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc510)
  ^bb37:  // pred: ^bb36
    %89 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc511)
    %90 = cir.cast(bitcast, %89 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc511)
    %91 = cir.call %90() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc132)
    %92 = cir.cast(int_to_bool, %91 : !s32i), !cir.bool loc(#loc132)
    cir.brcond %92 ^bb38, ^bb41 loc(#loc512)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc513)
  ^bb39:  // pred: ^bb38
    %93 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %94 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    %95 = cir.binop(mul, %93, %94) nsw : !s32i loc(#loc139)
    cir.store %95, %4 : !s32i, !cir.ptr<!s32i> loc(#loc474)
    %96 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    cir.call @printIntLine(%96) : (!s32i) -> () loc(#loc141)
    cir.br ^bb40 loc(#loc138)
  ^bb40:  // pred: ^bb39
    cir.br ^bb55 loc(#loc135)
  ^bb41:  // pred: ^bb37
    cir.br ^bb42 loc(#loc514)
  ^bb42:  // pred: ^bb41
    %97 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %98 = cir.const #cir.int<2147483647> : !s32i loc(#loc145)
    %99 = cir.unary(minus, %98) : !s32i, !s32i loc(#loc145)
    %100 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %101 = cir.binop(sub, %99, %100) nsw : !s32i loc(#loc145)
    %102 = cir.cmp(gt, %97, %101) : !s32i, !cir.bool loc(#loc515)
    cir.brcond %102 ^bb43, ^bb48 loc(#loc146)
  ^bb43:  // pred: ^bb42
    %103 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    %104 = cir.abs %103 poison : !s32i loc(#loc148)
    %105 = cir.cast(integral, %104 : !s32i), !s64i loc(#loc148)
    %106 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc149)
    %107 = cir.const #cir.int<2147483647> : !s32i loc(#loc150)
    %108 = cir.cast(int_to_float, %107 : !s32i), !cir.double loc(#loc150)
    %109 = cir.call @sqrt(%108) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc149)
    %110 = cir.cast(float_to_int, %109 : !cir.double), !s64i loc(#loc149)
    %111 = cir.cmp(lt, %105, %110) : !s64i, !cir.bool loc(#loc516)
    cir.brcond %111 ^bb44, ^bb45 loc(#loc146)
  ^bb44:  // pred: ^bb43
    %112 = cir.const #true loc(#loc146)
    cir.br ^bb46(%112 : !cir.bool) loc(#loc146)
  ^bb45:  // pred: ^bb43
    %113 = cir.const #false loc(#loc146)
    cir.br ^bb46(%113 : !cir.bool) loc(#loc146)
  ^bb46(%114: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:28)):  // 2 preds: ^bb44, ^bb45
    cir.br ^bb47 loc(#loc146)
  ^bb47:  // pred: ^bb46
    cir.br ^bb49(%114 : !cir.bool) loc(#loc146)
  ^bb48:  // pred: ^bb42
    %115 = cir.const #false loc(#loc146)
    cir.br ^bb49(%115 : !cir.bool) loc(#loc146)
  ^bb49(%116: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:28)):  // 2 preds: ^bb47, ^bb48
    cir.br ^bb50 loc(#loc146)
  ^bb50:  // pred: ^bb49
    cir.brcond %116 ^bb51, ^bb52 loc(#loc517)
  ^bb51:  // pred: ^bb50
    %117 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    %118 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %119 = cir.binop(mul, %117, %118) nsw : !s32i loc(#loc155)
    cir.store %119, %5 : !s32i, !cir.ptr<!s32i> loc(#loc475)
    %120 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.call @printIntLine(%120) : (!s32i) -> () loc(#loc157)
    cir.br ^bb53 loc(#loc153)
  ^bb52:  // pred: ^bb50
    %121 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc23)
    %122 = cir.cast(array_to_ptrdecay, %121 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc23)
    cir.call @printLine(%122) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    cir.br ^bb53 loc(#loc143)
  ^bb53:  // 2 preds: ^bb51, ^bb52
    cir.br ^bb54 loc(#loc143)
  ^bb54:  // pred: ^bb53
    cir.br ^bb55 loc(#loc131)
  ^bb55:  // 2 preds: ^bb40, ^bb54
    cir.br ^bb56 loc(#loc131)
  ^bb56:  // pred: ^bb55
    cir.return loc(#loc25)
  } loc(#loc469)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_square_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc519)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc161)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc520)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc163)
    cir.return loc(#loc160)
  } loc(#loc518)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc521)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc522)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc172)
  cir.func @main(%arg0: !s32i loc(fused[#loc175, #loc176]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc177, #loc178])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc524)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc525)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc174)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc179)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc180)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc181)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc181)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc182)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc169)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    %8 = cir.get_global @CWE190_Integer_Overflow__int_connect_socket_square_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc526)
    cir.call @CWE190_Integer_Overflow__int_connect_socket_square_12_good() : () -> () loc(#loc184)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc170)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc186)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc171)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc171)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc187)
    %13 = cir.get_global @CWE190_Integer_Overflow__int_connect_socket_square_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc527)
    cir.call @CWE190_Integer_Overflow__int_connect_socket_square_12_bad() : () -> () loc(#loc188)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc172)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc191)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc528)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc528)
    cir.return %17 : !s32i loc(#loc528)
  } loc(#loc523)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc530)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc531)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc532)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc533)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc534)
    %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc535)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc536)
    %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc537)
    %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc538)
    %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc539)
    %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc540)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc217)
    cir.store %11, %10 : !s32i, !cir.ptr<!s32i> loc(#loc541)
    cir.br ^bb1 loc(#loc542)
  ^bb1:  // pred: ^bb0
    %12 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc543)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc543)
    %14 = cir.call %13() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc221)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc221)
    cir.brcond %15 ^bb2, ^bb34 loc(#loc544)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc545)
  ^bb3:  // pred: ^bb2
    %16 = cir.const #cir.int<1> : !s32i loc(#loc200)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc200)
    cir.store %17, %2 : !s32i, !cir.ptr<!s32i> loc(#loc532)
    cir.br ^bb4 loc(#loc546)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc546)
  ^bb5:  // pred: ^bb26
    %18 = cir.const #cir.int<0> : !s32i loc(#loc230)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc230)
    cir.brcond %19 ^bb6, ^bb27 loc(#loc230)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %20 = cir.const #cir.int<2> : !s32i loc(#loc231)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc232)
    %22 = cir.const #cir.int<6> : !s32i loc(#loc233)
    %23 = cir.call @socket(%20, %21, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc234)
    cir.store %23, %2 : !s32i, !cir.ptr<!s32i> loc(#loc547)
    cir.br ^bb7 loc(#loc548)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc239)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc240)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc240)
    %27 = cir.cmp(eq, %24, %26) : !s32i, !cir.bool loc(#loc549)
    cir.brcond %27 ^bb8, ^bb9 loc(#loc550)
  ^bb8:  // pred: ^bb7
    cir.br ^bb27 loc(#loc242)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc238)
  ^bb10:  // pred: ^bb9
    %28 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc551)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc245)
    %30 = cir.const #cir.int<16> : !u64i loc(#loc552)
    cir.libc.memset %30 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc553)
    %31 = cir.const #cir.int<2> : !s32i loc(#loc250)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc250)
    %33 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc554)
    %34 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc252)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc252)
    %36 = cir.call @inet_addr(%35) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc253)
    %37 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
    %38 = cir.get_member %37[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
    cir.store %36, %38 : !u32i, !cir.ptr<!u32i> loc(#loc555)
    %39 = cir.const #cir.int<27015> : !s32i loc(#loc256)
    %40 = cir.cast(integral, %39 : !s32i), !u16i loc(#loc256)
    %41 = cir.call @htons(%40) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc257)
    %42 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
    cir.store %41, %42 : !u16i, !cir.ptr<!u16i> loc(#loc556)
    cir.br ^bb11 loc(#loc557)
  ^bb11:  // pred: ^bb10
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc262)
    %44 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc558)
    %45 = cir.const #cir.int<16> : !u64i loc(#loc559)
    %46 = cir.cast(integral, %45 : !u64i), !u32i loc(#loc559)
    %47 = cir.call @connect(%43, %44, %46) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc267)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc268)
    %49 = cir.unary(minus, %48) : !s32i, !s32i loc(#loc268)
    %50 = cir.cmp(eq, %47, %49) : !s32i, !cir.bool loc(#loc560)
    cir.brcond %50 ^bb12, ^bb13 loc(#loc561)
  ^bb12:  // pred: ^bb11
    cir.br ^bb27 loc(#loc270)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc261)
  ^bb14:  // pred: ^bb13
    %51 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    %52 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc272)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc272)
    %54 = cir.const #cir.int<3> : !s32i loc(#loc273)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc273)
    %56 = cir.const #cir.int<4> : !u64i loc(#loc273)
    %57 = cir.binop(mul, %55, %56) : !u64i loc(#loc273)
    %58 = cir.const #cir.int<2> : !s32i loc(#loc273)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc273)
    %60 = cir.binop(add, %57, %59) : !u64i loc(#loc273)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc274)
    %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc274)
    %63 = cir.binop(sub, %60, %62) : !u64i loc(#loc562)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc275)
    %65 = cir.call @recv(%51, %53, %63, %64) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc276)
    %66 = cir.cast(integral, %65 : !s64i), !s32i loc(#loc276)
    cir.store %66, %0 : !s32i, !cir.ptr<!s32i> loc(#loc563)
    cir.br ^bb15 loc(#loc564)
  ^bb15:  // pred: ^bb14
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc281)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc282)
    %69 = cir.unary(minus, %68) : !s32i, !s32i loc(#loc282)
    %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc565)
    cir.brcond %70 ^bb16, ^bb17 loc(#loc283)
  ^bb16:  // pred: ^bb15
    %71 = cir.const #true loc(#loc283)
    cir.br ^bb22(%71 : !cir.bool) loc(#loc283)
  ^bb17:  // pred: ^bb15
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc284)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc285)
    %74 = cir.cmp(eq, %72, %73) : !s32i, !cir.bool loc(#loc566)
    cir.brcond %74 ^bb18, ^bb19 loc(#loc283)
  ^bb18:  // pred: ^bb17
    %75 = cir.const #true loc(#loc283)
    cir.br ^bb20(%75 : !cir.bool) loc(#loc283)
  ^bb19:  // pred: ^bb17
    %76 = cir.const #false loc(#loc283)
    cir.br ^bb20(%76 : !cir.bool) loc(#loc283)
  ^bb20(%77: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":187:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc283)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%77 : !cir.bool) loc(#loc283)
  ^bb22(%78: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":187:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc283)
  ^bb23:  // pred: ^bb22
    cir.brcond %78 ^bb24, ^bb25 loc(#loc567)
  ^bb24:  // pred: ^bb23
    cir.br ^bb27 loc(#loc287)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc280)
  ^bb26:  // pred: ^bb25
    %79 = cir.const #cir.int<0> : !s32i loc(#loc288)
    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc288)
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc289)
    %82 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc290)
    %83 = cir.ptr_stride(%82 : !cir.ptr<!s8i>, %81 : !s32i), !cir.ptr<!s8i> loc(#loc290)
    cir.store %80, %83 : !s8i, !cir.ptr<!s8i> loc(#loc568)
    %84 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc291)
    %85 = cir.call @atoi(%84) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc292)
    cir.store %85, %10 : !s32i, !cir.ptr<!s32i> loc(#loc569)
    cir.br ^bb5 loc(#loc229)
  ^bb27:  // 4 preds: ^bb5, ^bb8, ^bb12, ^bb24
    cir.br ^bb28 loc(#loc229)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc570)
  ^bb29:  // pred: ^bb28
    %86 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    %87 = cir.const #cir.int<1> : !s32i loc(#loc298)
    %88 = cir.unary(minus, %87) : !s32i, !s32i loc(#loc298)
    %89 = cir.cmp(ne, %86, %88) : !s32i, !cir.bool loc(#loc571)
    cir.brcond %89 ^bb30, ^bb31 loc(#loc572)
  ^bb30:  // pred: ^bb29
    %90 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc300)
    %91 = cir.call @close(%90) : (!s32i) -> !s32i loc(#loc301)
    cir.br ^bb31 loc(#loc296)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc296)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc227)
  ^bb33:  // pred: ^bb32
    cir.br ^bb66 loc(#loc224)
  ^bb34:  // pred: ^bb1
    cir.br ^bb35 loc(#loc573)
  ^bb35:  // pred: ^bb34
    %92 = cir.const #cir.int<1> : !s32i loc(#loc208)
    %93 = cir.unary(minus, %92) : !s32i, !s32i loc(#loc208)
    cir.store %93, %6 : !s32i, !cir.ptr<!s32i> loc(#loc536)
    cir.br ^bb36 loc(#loc574)
  ^bb36:  // pred: ^bb35
    cir.br ^bb38 loc(#loc574)
  ^bb37:  // pred: ^bb58
    %94 = cir.const #cir.int<0> : !s32i loc(#loc306)
    %95 = cir.cast(int_to_bool, %94 : !s32i), !cir.bool loc(#loc306)
    cir.brcond %95 ^bb38, ^bb59 loc(#loc306)
  ^bb38:  // 2 preds: ^bb36, ^bb37
    %96 = cir.const #cir.int<2> : !s32i loc(#loc307)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc308)
    %98 = cir.const #cir.int<6> : !s32i loc(#loc309)
    %99 = cir.call @socket(%96, %97, %98) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc310)
    cir.store %99, %6 : !s32i, !cir.ptr<!s32i> loc(#loc575)
    cir.br ^bb39 loc(#loc576)
  ^bb39:  // pred: ^bb38
    %100 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc315)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc316)
    %102 = cir.unary(minus, %101) : !s32i, !s32i loc(#loc316)
    %103 = cir.cmp(eq, %100, %102) : !s32i, !cir.bool loc(#loc577)
    cir.brcond %103 ^bb40, ^bb41 loc(#loc578)
  ^bb40:  // pred: ^bb39
    cir.br ^bb59 loc(#loc318)
  ^bb41:  // pred: ^bb39
    cir.br ^bb42 loc(#loc314)
  ^bb42:  // pred: ^bb41
    %104 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc579)
    %105 = cir.const #cir.int<0> : !s32i loc(#loc321)
    %106 = cir.const #cir.int<16> : !u64i loc(#loc580)
    cir.libc.memset %106 bytes from %104 set to %105 : !cir.ptr<!void>, !s32i, !u64i loc(#loc581)
    %107 = cir.const #cir.int<2> : !s32i loc(#loc326)
    %108 = cir.cast(integral, %107 : !s32i), !u16i loc(#loc326)
    %109 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %108, %109 : !u16i, !cir.ptr<!u16i> loc(#loc582)
    %110 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc328)
    %111 = cir.cast(array_to_ptrdecay, %110 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc328)
    %112 = cir.call @inet_addr(%111) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc329)
    %113 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
    %114 = cir.get_member %113[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
    cir.store %112, %114 : !u32i, !cir.ptr<!u32i> loc(#loc583)
    %115 = cir.const #cir.int<27015> : !s32i loc(#loc332)
    %116 = cir.cast(integral, %115 : !s32i), !u16i loc(#loc332)
    %117 = cir.call @htons(%116) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc333)
    %118 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
    cir.store %117, %118 : !u16i, !cir.ptr<!u16i> loc(#loc584)
    cir.br ^bb43 loc(#loc585)
  ^bb43:  // pred: ^bb42
    %119 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc338)
    %120 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc586)
    %121 = cir.const #cir.int<16> : !u64i loc(#loc587)
    %122 = cir.cast(integral, %121 : !u64i), !u32i loc(#loc587)
    %123 = cir.call @connect(%119, %120, %122) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc343)
    %124 = cir.const #cir.int<1> : !s32i loc(#loc344)
    %125 = cir.unary(minus, %124) : !s32i, !s32i loc(#loc344)
    %126 = cir.cmp(eq, %123, %125) : !s32i, !cir.bool loc(#loc588)
    cir.brcond %126 ^bb44, ^bb45 loc(#loc589)
  ^bb44:  // pred: ^bb43
    cir.br ^bb59 loc(#loc346)
  ^bb45:  // pred: ^bb43
    cir.br ^bb46 loc(#loc337)
  ^bb46:  // pred: ^bb45
    %127 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc347)
    %128 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc348)
    %129 = cir.cast(bitcast, %128 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc348)
    %130 = cir.const #cir.int<3> : !s32i loc(#loc349)
    %131 = cir.cast(integral, %130 : !s32i), !u64i loc(#loc349)
    %132 = cir.const #cir.int<4> : !u64i loc(#loc349)
    %133 = cir.binop(mul, %131, %132) : !u64i loc(#loc349)
    %134 = cir.const #cir.int<2> : !s32i loc(#loc349)
    %135 = cir.cast(integral, %134 : !s32i), !u64i loc(#loc349)
    %136 = cir.binop(add, %133, %135) : !u64i loc(#loc349)
    %137 = cir.const #cir.int<1> : !s32i loc(#loc350)
    %138 = cir.cast(integral, %137 : !s32i), !u64i loc(#loc350)
    %139 = cir.binop(sub, %136, %138) : !u64i loc(#loc590)
    %140 = cir.const #cir.int<0> : !s32i loc(#loc351)
    %141 = cir.call @recv(%127, %129, %139, %140) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc352)
    %142 = cir.cast(integral, %141 : !s64i), !s32i loc(#loc352)
    cir.store %142, %4 : !s32i, !cir.ptr<!s32i> loc(#loc591)
    cir.br ^bb47 loc(#loc592)
  ^bb47:  // pred: ^bb46
    %143 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc357)
    %144 = cir.const #cir.int<1> : !s32i loc(#loc358)
    %145 = cir.unary(minus, %144) : !s32i, !s32i loc(#loc358)
    %146 = cir.cmp(eq, %143, %145) : !s32i, !cir.bool loc(#loc593)
    cir.brcond %146 ^bb48, ^bb49 loc(#loc359)
  ^bb48:  // pred: ^bb47
    %147 = cir.const #true loc(#loc359)
    cir.br ^bb54(%147 : !cir.bool) loc(#loc359)
  ^bb49:  // pred: ^bb47
    %148 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc360)
    %149 = cir.const #cir.int<0> : !s32i loc(#loc361)
    %150 = cir.cmp(eq, %148, %149) : !s32i, !cir.bool loc(#loc594)
    cir.brcond %150 ^bb50, ^bb51 loc(#loc359)
  ^bb50:  // pred: ^bb49
    %151 = cir.const #true loc(#loc359)
    cir.br ^bb52(%151 : !cir.bool) loc(#loc359)
  ^bb51:  // pred: ^bb49
    %152 = cir.const #false loc(#loc359)
    cir.br ^bb52(%152 : !cir.bool) loc(#loc359)
  ^bb52(%153: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":246:48)):  // 2 preds: ^bb50, ^bb51
    cir.br ^bb53 loc(#loc359)
  ^bb53:  // pred: ^bb52
    cir.br ^bb54(%153 : !cir.bool) loc(#loc359)
  ^bb54(%154: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":246:48)):  // 2 preds: ^bb48, ^bb53
    cir.br ^bb55 loc(#loc359)
  ^bb55:  // pred: ^bb54
    cir.brcond %154 ^bb56, ^bb57 loc(#loc595)
  ^bb56:  // pred: ^bb55
    cir.br ^bb59 loc(#loc363)
  ^bb57:  // pred: ^bb55
    cir.br ^bb58 loc(#loc356)
  ^bb58:  // pred: ^bb57
    %155 = cir.const #cir.int<0> : !s32i loc(#loc364)
    %156 = cir.cast(integral, %155 : !s32i), !s8i loc(#loc364)
    %157 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc365)
    %158 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc366)
    %159 = cir.ptr_stride(%158 : !cir.ptr<!s8i>, %157 : !s32i), !cir.ptr<!s8i> loc(#loc366)
    cir.store %156, %159 : !s8i, !cir.ptr<!s8i> loc(#loc596)
    %160 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc367)
    %161 = cir.call @atoi(%160) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc368)
    cir.store %161, %10 : !s32i, !cir.ptr<!s32i> loc(#loc597)
    cir.br ^bb37 loc(#loc305)
  ^bb59:  // 4 preds: ^bb37, ^bb40, ^bb44, ^bb56
    cir.br ^bb60 loc(#loc305)
  ^bb60:  // pred: ^bb59
    cir.br ^bb61 loc(#loc598)
  ^bb61:  // pred: ^bb60
    %162 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc373)
    %163 = cir.const #cir.int<1> : !s32i loc(#loc374)
    %164 = cir.unary(minus, %163) : !s32i, !s32i loc(#loc374)
    %165 = cir.cmp(ne, %162, %164) : !s32i, !cir.bool loc(#loc599)
    cir.brcond %165 ^bb62, ^bb63 loc(#loc600)
  ^bb62:  // pred: ^bb61
    %166 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc376)
    %167 = cir.call @close(%166) : (!s32i) -> !s32i loc(#loc377)
    cir.br ^bb63 loc(#loc372)
  ^bb63:  // 2 preds: ^bb61, ^bb62
    cir.br ^bb64 loc(#loc372)
  ^bb64:  // pred: ^bb63
    cir.br ^bb65 loc(#loc303)
  ^bb65:  // pred: ^bb64
    cir.br ^bb66 loc(#loc220)
  ^bb66:  // 2 preds: ^bb33, ^bb65
    cir.br ^bb67 loc(#loc220)
  ^bb67:  // pred: ^bb66
    cir.br ^bb68 loc(#loc601)
  ^bb68:  // pred: ^bb67
    %168 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc602)
    %169 = cir.cast(bitcast, %168 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc602)
    %170 = cir.call %169() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc380)
    %171 = cir.cast(int_to_bool, %170 : !s32i), !cir.bool loc(#loc380)
    cir.brcond %171 ^bb69, ^bb83 loc(#loc603)
  ^bb69:  // pred: ^bb68
    cir.br ^bb70 loc(#loc604)
  ^bb70:  // pred: ^bb69
    %172 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc387)
    %173 = cir.const #cir.int<2147483647> : !s32i loc(#loc388)
    %174 = cir.unary(minus, %173) : !s32i, !s32i loc(#loc388)
    %175 = cir.const #cir.int<1> : !s32i loc(#loc388)
    %176 = cir.binop(sub, %174, %175) nsw : !s32i loc(#loc388)
    %177 = cir.cmp(gt, %172, %176) : !s32i, !cir.bool loc(#loc605)
    cir.brcond %177 ^bb71, ^bb76 loc(#loc389)
  ^bb71:  // pred: ^bb70
    %178 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc390)
    %179 = cir.abs %178 poison : !s32i loc(#loc391)
    %180 = cir.cast(integral, %179 : !s32i), !s64i loc(#loc391)
    %181 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc392)
    %182 = cir.const #cir.int<2147483647> : !s32i loc(#loc393)
    %183 = cir.cast(int_to_float, %182 : !s32i), !cir.double loc(#loc393)
    %184 = cir.call @sqrt(%183) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc392)
    %185 = cir.cast(float_to_int, %184 : !cir.double), !s64i loc(#loc392)
    %186 = cir.cmp(lt, %180, %185) : !s64i, !cir.bool loc(#loc606)
    cir.brcond %186 ^bb72, ^bb73 loc(#loc389)
  ^bb72:  // pred: ^bb71
    %187 = cir.const #true loc(#loc389)
    cir.br ^bb74(%187 : !cir.bool) loc(#loc389)
  ^bb73:  // pred: ^bb71
    %188 = cir.const #false loc(#loc389)
    cir.br ^bb74(%188 : !cir.bool) loc(#loc389)
  ^bb74(%189: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:28)):  // 2 preds: ^bb72, ^bb73
    cir.br ^bb75 loc(#loc389)
  ^bb75:  // pred: ^bb74
    cir.br ^bb77(%189 : !cir.bool) loc(#loc389)
  ^bb76:  // pred: ^bb70
    %190 = cir.const #false loc(#loc389)
    cir.br ^bb77(%190 : !cir.bool) loc(#loc389)
  ^bb77(%191: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:28)):  // 2 preds: ^bb75, ^bb76
    cir.br ^bb78 loc(#loc389)
  ^bb78:  // pred: ^bb77
    cir.brcond %191 ^bb79, ^bb80 loc(#loc607)
  ^bb79:  // pred: ^bb78
    %192 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc398)
    %193 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc212)
    %194 = cir.binop(mul, %192, %193) nsw : !s32i loc(#loc398)
    cir.store %194, %8 : !s32i, !cir.ptr<!s32i> loc(#loc538)
    %195 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc399)
    cir.call @printIntLine(%195) : (!s32i) -> () loc(#loc400)
    cir.br ^bb81 loc(#loc396)
  ^bb80:  // pred: ^bb78
    %196 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc401)
    %197 = cir.cast(array_to_ptrdecay, %196 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc401)
    cir.call @printLine(%197) : (!cir.ptr<!s8i>) -> () loc(#loc402)
    cir.br ^bb81 loc(#loc386)
  ^bb81:  // 2 preds: ^bb79, ^bb80
    cir.br ^bb82 loc(#loc386)
  ^bb82:  // pred: ^bb81
    cir.br ^bb97 loc(#loc383)
  ^bb83:  // pred: ^bb68
    cir.br ^bb84 loc(#loc608)
  ^bb84:  // pred: ^bb83
    %198 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc405)
    %199 = cir.const #cir.int<2147483647> : !s32i loc(#loc406)
    %200 = cir.unary(minus, %199) : !s32i, !s32i loc(#loc406)
    %201 = cir.const #cir.int<1> : !s32i loc(#loc406)
    %202 = cir.binop(sub, %200, %201) nsw : !s32i loc(#loc406)
    %203 = cir.cmp(gt, %198, %202) : !s32i, !cir.bool loc(#loc609)
    cir.brcond %203 ^bb85, ^bb90 loc(#loc407)
  ^bb85:  // pred: ^bb84
    %204 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc408)
    %205 = cir.abs %204 poison : !s32i loc(#loc409)
    %206 = cir.cast(integral, %205 : !s32i), !s64i loc(#loc409)
    %207 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc410)
    %208 = cir.const #cir.int<2147483647> : !s32i loc(#loc411)
    %209 = cir.cast(int_to_float, %208 : !s32i), !cir.double loc(#loc411)
    %210 = cir.call @sqrt(%209) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc410)
    %211 = cir.cast(float_to_int, %210 : !cir.double), !s64i loc(#loc410)
    %212 = cir.cmp(lt, %206, %211) : !s64i, !cir.bool loc(#loc610)
    cir.brcond %212 ^bb86, ^bb87 loc(#loc407)
  ^bb86:  // pred: ^bb85
    %213 = cir.const #true loc(#loc407)
    cir.br ^bb88(%213 : !cir.bool) loc(#loc407)
  ^bb87:  // pred: ^bb85
    %214 = cir.const #false loc(#loc407)
    cir.br ^bb88(%214 : !cir.bool) loc(#loc407)
  ^bb88(%215: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:28)):  // 2 preds: ^bb86, ^bb87
    cir.br ^bb89 loc(#loc407)
  ^bb89:  // pred: ^bb88
    cir.br ^bb91(%215 : !cir.bool) loc(#loc407)
  ^bb90:  // pred: ^bb84
    %216 = cir.const #false loc(#loc407)
    cir.br ^bb91(%216 : !cir.bool) loc(#loc407)
  ^bb91(%217: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:28)):  // 2 preds: ^bb89, ^bb90
    cir.br ^bb92 loc(#loc407)
  ^bb92:  // pred: ^bb91
    cir.brcond %217 ^bb93, ^bb94 loc(#loc611)
  ^bb93:  // pred: ^bb92
    %218 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc416)
    %219 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    %220 = cir.binop(mul, %218, %219) nsw : !s32i loc(#loc416)
    cir.store %220, %9 : !s32i, !cir.ptr<!s32i> loc(#loc539)
    %221 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc417)
    cir.call @printIntLine(%221) : (!s32i) -> () loc(#loc418)
    cir.br ^bb95 loc(#loc414)
  ^bb94:  // pred: ^bb92
    %222 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc419)
    %223 = cir.cast(array_to_ptrdecay, %222 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc419)
    cir.call @printLine(%223) : (!cir.ptr<!s8i>) -> () loc(#loc420)
    cir.br ^bb95 loc(#loc404)
  ^bb95:  // 2 preds: ^bb93, ^bb94
    cir.br ^bb96 loc(#loc404)
  ^bb96:  // pred: ^bb95
    cir.br ^bb97 loc(#loc379)
  ^bb97:  // 2 preds: ^bb82, ^bb96
    cir.br ^bb98 loc(#loc379)
  ^bb98:  // pred: ^bb97
    cir.return loc(#loc194)
  } loc(#loc529)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc613)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc614)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc615)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc429)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc616)
    cir.br ^bb1 loc(#loc617)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc618)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc618)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc433)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc433)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc619)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<2> : !s32i loc(#loc438)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc620)
    cir.br ^bb4 loc(#loc436)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<2> : !s32i loc(#loc440)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc621)
    cir.br ^bb4 loc(#loc432)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc432)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc622)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc623)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc623)
    %12 = cir.call %11() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc444)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc444)
    cir.brcond %13 ^bb7, ^bb10 loc(#loc624)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc625)
  ^bb8:  // pred: ^bb7
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc451)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc424)
    %16 = cir.binop(mul, %14, %15) nsw : !s32i loc(#loc451)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc613)
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc452)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc453)
    cir.br ^bb9 loc(#loc450)
  ^bb9:  // pred: ^bb8
    cir.br ^bb13 loc(#loc447)
  ^bb10:  // pred: ^bb6
    cir.br ^bb11 loc(#loc626)
  ^bb11:  // pred: ^bb10
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc456)
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc426)
    %20 = cir.binop(mul, %18, %19) nsw : !s32i loc(#loc456)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc614)
    %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc457)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc458)
    cir.br ^bb12 loc(#loc455)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc443)
  ^bb13:  // 2 preds: ^bb9, ^bb12
    cir.br ^bb14 loc(#loc443)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc422)
  } loc(#loc612)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":79:53)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("/usr/include/bits/mathcalls.h":158:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":133:23)
#loc24 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":46:1)
#loc25 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":136:1)
#loc26 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":58:13)
#loc27 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":58:17)
#loc28 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":59:13)
#loc29 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":59:32)
#loc30 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":60:13)
#loc31 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":60:36)
#loc32 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":61:13)
#loc33 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":61:45)
#loc34 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":119:13)
#loc35 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":119:33)
#loc36 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":128:13)
#loc37 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":128:33)
#loc38 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":48:5)
#loc39 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":48:9)
#loc40 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":50:12)
#loc41 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":50:5)
#loc42 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":51:5)
#loc43 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":114:5)
#loc44 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":51:8)
#loc45 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":51:33)
#loc46 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":52:5)
#loc47 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":109:5)
#loc48 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":111:5)
#loc49 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":53:9)
#loc50 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":108:9)
#loc51 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":62:13)
#loc52 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":97:21)
#loc53 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":97:20)
#loc54 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":72:40)
#loc55 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":72:49)
#loc56 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":72:62)
#loc57 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":72:33)
#loc58 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":72:17)
#loc59 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":72:73)
#loc60 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":73:17)
#loc61 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":76:17)
#loc62 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":73:21)
#loc63 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":73:38)
#loc64 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":74:17)
#loc65 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":75:21)
#loc66 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":77:24)
#loc67 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":77:25)
#loc68 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":77:34)
#loc69 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":77:37)
#loc70 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":77:51)
#loc71 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":77:17)
#loc72 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":77:52)
#loc73 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":78:38)
#loc74 = loc("/usr/include/netinet/in.h":249:5)
#loc75 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":78:17)
#loc76 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":79:43)
#loc77 = loc("/usr/include/netinet/in.h":251:20)
#loc78 = loc("/usr/include/netinet/in.h":33:15)
#loc79 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":79:17)
#loc80 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":79:63)
#loc81 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":80:42)
#loc82 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":80:36)
#loc83 = loc("/usr/include/netinet/in.h":250:15)
#loc84 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":80:17)
#loc85 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":80:50)
#loc86 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":81:17)
#loc87 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":84:17)
#loc88 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":81:29)
#loc89 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":81:62)
#loc90 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":81:63)
#loc91 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":81:72)
#loc92 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":81:86)
#loc93 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":81:21)
#loc94 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":81:92)
#loc95 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":82:17)
#loc96 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":83:21)
#loc97 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":87:35)
#loc98 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":87:50)
#loc99 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":87:63)
#loc100 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":87:81)
#loc101 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":87:84)
#loc102 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":87:30)
#loc103 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":87:17)
#loc104 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":87:85)
#loc105 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":88:17)
#loc106 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":91:17)
#loc107 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":88:21)
#loc108 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":88:35)
#loc110 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":88:51)
#loc111 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":88:65)
#loc112 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":89:17)
#loc113 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":90:21)
#loc114 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":93:43)
#loc115 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":93:29)
#loc116 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":93:17)
#loc117 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":95:29)
#loc118 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":95:24)
#loc119 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":95:17)
#loc120 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":95:40)
#loc121 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":98:13)
#loc122 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":101:13)
#loc123 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":98:17)
#loc124 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":98:34)
#loc125 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":99:13)
#loc126 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":100:30)
#loc127 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":100:17)
#loc128 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":113:16)
#loc129 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":113:9)
#loc130 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":115:5)
#loc131 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":135:5)
#loc132 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":115:8)
#loc133 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":115:33)
#loc134 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":116:5)
#loc135 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":122:5)
#loc136 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":124:5)
#loc137 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":117:9)
#loc138 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":121:9)
#loc139 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":119:26)
#loc140 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":120:26)
#loc141 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":120:13)
#loc142 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:9)
#loc143 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":134:9)
#loc144 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:13)
#loc145 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:20)
#loc147 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:35)
#loc148 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:31)
#loc149 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:49)
#loc150 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:62)
#loc151 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":126:69)
#loc152 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":127:9)
#loc153 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":130:9)
#loc154 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":132:9)
#loc155 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":128:26)
#loc156 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":129:26)
#loc157 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":129:13)
#loc158 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":133:13)
#loc159 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":332:1)
#loc160 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":336:1)
#loc161 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":334:5)
#loc162 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":334:13)
#loc163 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":335:5)
#loc164 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":335:13)
#loc165 = loc("/usr/include/stdlib.h":575:1)
#loc166 = loc("/usr/include/stdlib.h":575:41)
#loc167 = loc("/usr/include/time.h":76:1)
#loc168 = loc("/usr/include/time.h":76:38)
#loc169 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":352:15)
#loc170 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":354:15)
#loc171 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":357:15)
#loc172 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":359:15)
#loc173 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":347:1)
#loc174 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":362:1)
#loc179 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":348:1)
#loc180 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":350:27)
#loc181 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":350:22)
#loc182 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":350:5)
#loc183 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":352:5)
#loc184 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":353:5)
#loc185 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":353:64)
#loc186 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":354:5)
#loc187 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":357:5)
#loc188 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":358:5)
#loc189 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":358:63)
#loc190 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":359:5)
#loc191 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":361:12)
#loc192 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":361:5)
#loc193 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":145:1)
#loc194 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":294:1)
#loc195 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":157:13)
#loc196 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":157:17)
#loc197 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":158:13)
#loc198 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":158:32)
#loc199 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":159:13)
#loc200 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":159:36)
#loc201 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":160:13)
#loc202 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":160:45)
#loc203 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":216:13)
#loc204 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":216:17)
#loc205 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":217:13)
#loc206 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":217:32)
#loc207 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":218:13)
#loc208 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":218:36)
#loc209 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":219:13)
#loc210 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":219:45)
#loc211 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":273:13)
#loc212 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":273:33)
#loc213 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":286:13)
#loc214 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":286:33)
#loc215 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":147:5)
#loc216 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":147:9)
#loc217 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":149:12)
#loc218 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":149:5)
#loc219 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":150:5)
#loc220 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":267:5)
#loc221 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":150:8)
#loc222 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":150:33)
#loc223 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":151:5)
#loc224 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":208:5)
#loc225 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":210:5)
#loc226 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":152:9)
#loc227 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":207:9)
#loc228 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":161:13)
#loc229 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":196:21)
#loc230 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":196:20)
#loc231 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":171:40)
#loc232 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":171:49)
#loc233 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":171:62)
#loc234 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":171:33)
#loc235 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":171:17)
#loc236 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":171:73)
#loc237 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":172:17)
#loc238 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":175:17)
#loc239 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":172:21)
#loc240 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":172:38)
#loc241 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":173:17)
#loc242 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":174:21)
#loc243 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":176:24)
#loc244 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":176:25)
#loc245 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":176:34)
#loc246 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":176:37)
#loc247 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":176:51)
#loc248 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":176:17)
#loc249 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":176:52)
#loc250 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":177:38)
#loc251 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":177:17)
#loc252 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":178:53)
#loc253 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":178:43)
#loc254 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":178:17)
#loc255 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":178:63)
#loc256 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":179:42)
#loc257 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":179:36)
#loc258 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":179:17)
#loc259 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":179:50)
#loc260 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":180:17)
#loc261 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":183:17)
#loc262 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":180:29)
#loc263 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":180:62)
#loc264 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":180:63)
#loc265 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":180:72)
#loc266 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":180:86)
#loc267 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":180:21)
#loc268 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":180:92)
#loc269 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":181:17)
#loc270 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":182:21)
#loc271 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":186:35)
#loc272 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":186:50)
#loc273 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":186:63)
#loc274 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":186:81)
#loc275 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":186:84)
#loc276 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":186:30)
#loc277 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":186:17)
#loc278 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":186:85)
#loc279 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":187:17)
#loc280 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":190:17)
#loc281 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":187:21)
#loc282 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":187:35)
#loc284 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":187:51)
#loc285 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":187:65)
#loc286 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":188:17)
#loc287 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":189:21)
#loc288 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":192:43)
#loc289 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":192:29)
#loc290 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":192:17)
#loc291 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":194:29)
#loc292 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":194:24)
#loc293 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":194:17)
#loc294 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":194:40)
#loc295 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":197:13)
#loc296 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":200:13)
#loc297 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":197:17)
#loc298 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":197:34)
#loc299 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":198:13)
#loc300 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":199:30)
#loc301 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":199:17)
#loc302 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":211:9)
#loc303 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":266:9)
#loc304 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":220:13)
#loc305 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":255:21)
#loc306 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":255:20)
#loc307 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":230:40)
#loc308 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":230:49)
#loc309 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":230:62)
#loc310 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":230:33)
#loc311 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":230:17)
#loc312 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":230:73)
#loc313 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":231:17)
#loc314 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":234:17)
#loc315 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":231:21)
#loc316 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":231:38)
#loc317 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":232:17)
#loc318 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":233:21)
#loc319 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":235:24)
#loc320 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":235:25)
#loc321 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":235:34)
#loc322 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":235:37)
#loc323 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":235:51)
#loc324 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":235:17)
#loc325 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":235:52)
#loc326 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":236:38)
#loc327 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":236:17)
#loc328 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":237:53)
#loc329 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":237:43)
#loc330 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":237:17)
#loc331 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":237:63)
#loc332 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":238:42)
#loc333 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":238:36)
#loc334 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":238:17)
#loc335 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":238:50)
#loc336 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":239:17)
#loc337 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":242:17)
#loc338 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":239:29)
#loc339 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":239:62)
#loc340 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":239:63)
#loc341 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":239:72)
#loc342 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":239:86)
#loc343 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":239:21)
#loc344 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":239:92)
#loc345 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":240:17)
#loc346 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":241:21)
#loc347 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":245:35)
#loc348 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":245:50)
#loc349 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":245:63)
#loc350 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":245:81)
#loc351 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":245:84)
#loc352 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":245:30)
#loc353 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":245:17)
#loc354 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":245:85)
#loc355 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":246:17)
#loc356 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":249:17)
#loc357 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":246:21)
#loc358 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":246:35)
#loc360 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":246:51)
#loc361 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":246:65)
#loc362 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":247:17)
#loc363 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":248:21)
#loc364 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":251:43)
#loc365 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":251:29)
#loc366 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":251:17)
#loc367 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":253:29)
#loc368 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":253:24)
#loc369 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":253:17)
#loc370 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":253:40)
#loc371 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":256:13)
#loc372 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":259:13)
#loc373 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":256:17)
#loc374 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":256:34)
#loc375 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":257:13)
#loc376 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":258:30)
#loc377 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":258:17)
#loc378 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":268:5)
#loc379 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":293:5)
#loc380 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":268:8)
#loc381 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":268:33)
#loc382 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":269:5)
#loc383 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":280:5)
#loc384 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":282:5)
#loc385 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:9)
#loc386 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":279:9)
#loc387 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:13)
#loc388 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:20)
#loc390 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:35)
#loc391 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:31)
#loc392 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:49)
#loc393 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:62)
#loc394 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":271:69)
#loc395 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":272:9)
#loc396 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":275:9)
#loc397 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":277:9)
#loc398 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":273:26)
#loc399 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":274:26)
#loc400 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":274:13)
#loc401 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":278:23)
#loc402 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":278:13)
#loc403 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:9)
#loc404 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":292:9)
#loc405 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:13)
#loc406 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:20)
#loc408 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:35)
#loc409 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:31)
#loc410 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:49)
#loc411 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:62)
#loc412 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":284:69)
#loc413 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":285:9)
#loc414 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":288:9)
#loc415 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":290:9)
#loc416 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":286:26)
#loc417 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":287:26)
#loc418 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":287:13)
#loc419 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":291:23)
#loc420 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":291:13)
#loc421 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":299:1)
#loc422 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":330:1)
#loc423 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":318:13)
#loc424 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":318:33)
#loc425 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":326:13)
#loc426 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":326:33)
#loc427 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":301:5)
#loc428 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":301:9)
#loc429 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":303:12)
#loc430 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":303:5)
#loc431 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":304:5)
#loc432 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":313:5)
#loc433 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":304:8)
#loc434 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":304:33)
#loc435 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":305:5)
#loc436 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":308:5)
#loc437 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":310:5)
#loc438 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":307:16)
#loc439 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":307:9)
#loc440 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":312:16)
#loc441 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":312:9)
#loc442 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":314:5)
#loc443 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":329:5)
#loc444 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":314:8)
#loc445 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":314:33)
#loc446 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":315:5)
#loc447 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":321:5)
#loc448 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":323:5)
#loc449 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":316:9)
#loc450 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":320:9)
#loc451 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":318:26)
#loc452 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":319:26)
#loc453 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":319:13)
#loc454 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":324:9)
#loc455 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":328:9)
#loc456 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":326:26)
#loc457 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":327:26)
#loc458 = loc("CWE190_Integer_Overflow__int_connect_socket_square_12.c":327:13)
#loc459 = loc(fused[#loc1, #loc2])
#loc460 = loc(fused[#loc3, #loc4])
#loc461 = loc(fused[#loc5, #loc6])
#loc462 = loc(fused[#loc8, #loc9])
#loc463 = loc(fused[#loc10, #loc11])
#loc464 = loc(fused[#loc12, #loc13])
#loc465 = loc(fused[#loc14, #loc15])
#loc466 = loc(fused[#loc16, #loc17])
#loc467 = loc(fused[#loc18, #loc19])
#loc468 = loc(fused[#loc21, #loc22])
#loc469 = loc(fused[#loc24, #loc25])
#loc470 = loc(fused[#loc26, #loc27])
#loc471 = loc(fused[#loc28, #loc29])
#loc472 = loc(fused[#loc30, #loc31])
#loc473 = loc(fused[#loc32, #loc33])
#loc474 = loc(fused[#loc34, #loc35])
#loc475 = loc(fused[#loc36, #loc37])
#loc476 = loc(fused[#loc38, #loc39])
#loc477 = loc(fused[#loc41, #loc40])
#loc478 = loc(fused[#loc42, #loc43])
#loc479 = loc(fused[#loc44, #loc45])
#loc480 = loc(fused[#loc46, #loc47, #loc48, #loc43])
#loc481 = loc(fused[#loc49, #loc50])
#loc482 = loc(fused[#loc51, #loc52])
#loc483 = loc(fused[#loc58, #loc59])
#loc484 = loc(fused[#loc60, #loc61])
#loc485 = loc(fused[#loc62, #loc63])
#loc486 = loc(fused[#loc64, #loc61])
#loc487 = loc(fused[#loc66, #loc67])
#loc488 = loc(fused[#loc69, #loc70])
#loc489 = loc(fused[#loc71, #loc72])
#loc490 = loc(fused[#loc75, #loc73])
#loc491 = loc(fused[#loc79, #loc80])
#loc492 = loc(fused[#loc84, #loc85])
#loc493 = loc(fused[#loc86, #loc87])
#loc494 = loc(fused[#loc89, #loc90])
#loc495 = loc(fused[#loc91, #loc92])
#loc496 = loc(fused[#loc93, #loc94])
#loc497 = loc(fused[#loc95, #loc87])
#loc498 = loc(fused[#loc99, #loc100])
#loc499 = loc(fused[#loc103, #loc104])
#loc500 = loc(fused[#loc105, #loc106])
#loc501 = loc(fused[#loc107, #loc108])
#loc502 = loc(fused[#loc110, #loc111])
#loc503 = loc(fused[#loc112, #loc106])
#loc504 = loc(fused[#loc116, #loc114])
#loc505 = loc(fused[#loc119, #loc120])
#loc506 = loc(fused[#loc121, #loc122])
#loc507 = loc(fused[#loc123, #loc124])
#loc508 = loc(fused[#loc125, #loc122])
#loc509 = loc(fused[#loc129, #loc128])
#loc510 = loc(fused[#loc130, #loc131])
#loc511 = loc(fused[#loc132, #loc133])
#loc512 = loc(fused[#loc134, #loc135, #loc136, #loc131])
#loc513 = loc(fused[#loc137, #loc138])
#loc514 = loc(fused[#loc142, #loc143])
#loc515 = loc(fused[#loc144, #loc145])
#loc516 = loc(fused[#loc148, #loc151])
#loc517 = loc(fused[#loc152, #loc153, #loc154, #loc143])
#loc518 = loc(fused[#loc159, #loc160])
#loc519 = loc(fused[#loc161, #loc162])
#loc520 = loc(fused[#loc163, #loc164])
#loc521 = loc(fused[#loc165, #loc166])
#loc522 = loc(fused[#loc167, #loc168])
#loc523 = loc(fused[#loc173, #loc174])
#loc526 = loc(fused[#loc184, #loc185])
#loc527 = loc(fused[#loc188, #loc189])
#loc528 = loc(fused[#loc192, #loc191])
#loc529 = loc(fused[#loc193, #loc194])
#loc530 = loc(fused[#loc195, #loc196])
#loc531 = loc(fused[#loc197, #loc198])
#loc532 = loc(fused[#loc199, #loc200])
#loc533 = loc(fused[#loc201, #loc202])
#loc534 = loc(fused[#loc203, #loc204])
#loc535 = loc(fused[#loc205, #loc206])
#loc536 = loc(fused[#loc207, #loc208])
#loc537 = loc(fused[#loc209, #loc210])
#loc538 = loc(fused[#loc211, #loc212])
#loc539 = loc(fused[#loc213, #loc214])
#loc540 = loc(fused[#loc215, #loc216])
#loc541 = loc(fused[#loc218, #loc217])
#loc542 = loc(fused[#loc219, #loc220])
#loc543 = loc(fused[#loc221, #loc222])
#loc544 = loc(fused[#loc223, #loc224, #loc225, #loc220])
#loc545 = loc(fused[#loc226, #loc227])
#loc546 = loc(fused[#loc228, #loc229])
#loc547 = loc(fused[#loc235, #loc236])
#loc548 = loc(fused[#loc237, #loc238])
#loc549 = loc(fused[#loc239, #loc240])
#loc550 = loc(fused[#loc241, #loc238])
#loc551 = loc(fused[#loc243, #loc244])
#loc552 = loc(fused[#loc246, #loc247])
#loc553 = loc(fused[#loc248, #loc249])
#loc554 = loc(fused[#loc251, #loc250])
#loc555 = loc(fused[#loc254, #loc255])
#loc556 = loc(fused[#loc258, #loc259])
#loc557 = loc(fused[#loc260, #loc261])
#loc558 = loc(fused[#loc263, #loc264])
#loc559 = loc(fused[#loc265, #loc266])
#loc560 = loc(fused[#loc267, #loc268])
#loc561 = loc(fused[#loc269, #loc261])
#loc562 = loc(fused[#loc273, #loc274])
#loc563 = loc(fused[#loc277, #loc278])
#loc564 = loc(fused[#loc279, #loc280])
#loc565 = loc(fused[#loc281, #loc282])
#loc566 = loc(fused[#loc284, #loc285])
#loc567 = loc(fused[#loc286, #loc280])
#loc568 = loc(fused[#loc290, #loc288])
#loc569 = loc(fused[#loc293, #loc294])
#loc570 = loc(fused[#loc295, #loc296])
#loc571 = loc(fused[#loc297, #loc298])
#loc572 = loc(fused[#loc299, #loc296])
#loc573 = loc(fused[#loc302, #loc303])
#loc574 = loc(fused[#loc304, #loc305])
#loc575 = loc(fused[#loc311, #loc312])
#loc576 = loc(fused[#loc313, #loc314])
#loc577 = loc(fused[#loc315, #loc316])
#loc578 = loc(fused[#loc317, #loc314])
#loc579 = loc(fused[#loc319, #loc320])
#loc580 = loc(fused[#loc322, #loc323])
#loc581 = loc(fused[#loc324, #loc325])
#loc582 = loc(fused[#loc327, #loc326])
#loc583 = loc(fused[#loc330, #loc331])
#loc584 = loc(fused[#loc334, #loc335])
#loc585 = loc(fused[#loc336, #loc337])
#loc586 = loc(fused[#loc339, #loc340])
#loc587 = loc(fused[#loc341, #loc342])
#loc588 = loc(fused[#loc343, #loc344])
#loc589 = loc(fused[#loc345, #loc337])
#loc590 = loc(fused[#loc349, #loc350])
#loc591 = loc(fused[#loc353, #loc354])
#loc592 = loc(fused[#loc355, #loc356])
#loc593 = loc(fused[#loc357, #loc358])
#loc594 = loc(fused[#loc360, #loc361])
#loc595 = loc(fused[#loc362, #loc356])
#loc596 = loc(fused[#loc366, #loc364])
#loc597 = loc(fused[#loc369, #loc370])
#loc598 = loc(fused[#loc371, #loc372])
#loc599 = loc(fused[#loc373, #loc374])
#loc600 = loc(fused[#loc375, #loc372])
#loc601 = loc(fused[#loc378, #loc379])
#loc602 = loc(fused[#loc380, #loc381])
#loc603 = loc(fused[#loc382, #loc383, #loc384, #loc379])
#loc604 = loc(fused[#loc385, #loc386])
#loc605 = loc(fused[#loc387, #loc388])
#loc606 = loc(fused[#loc391, #loc394])
#loc607 = loc(fused[#loc395, #loc396, #loc397, #loc386])
#loc608 = loc(fused[#loc403, #loc404])
#loc609 = loc(fused[#loc405, #loc406])
#loc610 = loc(fused[#loc409, #loc412])
#loc611 = loc(fused[#loc413, #loc414, #loc415, #loc404])
#loc612 = loc(fused[#loc421, #loc422])
#loc613 = loc(fused[#loc423, #loc424])
#loc614 = loc(fused[#loc425, #loc426])
#loc615 = loc(fused[#loc427, #loc428])
#loc616 = loc(fused[#loc430, #loc429])
#loc617 = loc(fused[#loc431, #loc432])
#loc618 = loc(fused[#loc433, #loc434])
#loc619 = loc(fused[#loc435, #loc436, #loc437, #loc432])
#loc620 = loc(fused[#loc439, #loc438])
#loc621 = loc(fused[#loc441, #loc440])
#loc622 = loc(fused[#loc442, #loc443])
#loc623 = loc(fused[#loc444, #loc445])
#loc624 = loc(fused[#loc446, #loc447, #loc448, #loc443])
#loc625 = loc(fused[#loc449, #loc450])
#loc626 = loc(fused[#loc454, #loc455])
