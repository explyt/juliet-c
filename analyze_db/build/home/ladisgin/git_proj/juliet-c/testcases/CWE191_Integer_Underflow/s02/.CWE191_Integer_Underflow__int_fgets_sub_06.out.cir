!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc74 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":207:10)
#loc75 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":207:14)
#loc76 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":207:20)
#loc77 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":207:32)
#loc282 = loc(fused[#loc74, #loc75])
#loc283 = loc(fused[#loc76, #loc77])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_sub_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc252)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc253)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc254)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc255)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc256)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_sub_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc258)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc16)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc20)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc21)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc261)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc264)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc264)
          cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc264)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc29)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc30)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc30)
            %10 = cir.const #cir.int<4> : !u64i loc(#loc30)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc30)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc30)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc30)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc30)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc30)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc253)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc31)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc32)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
            %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc266)
            cir.if %21 {
              %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc37)
              %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc38)
              cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc268)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc41)
            } loc(#loc267)
          } loc(#loc265)
        } loc(#loc263)
      } loc(#loc262)
    } loc(#loc260)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc44)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc45)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc270)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc273)
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc51)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc50)
          %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc51)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc273)
          %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc52)
          cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc53)
        } loc(#loc272)
      } loc(#loc271)
    } loc(#loc269)
    cir.return loc(#loc13)
  } loc(#loc257)
  cir.func no_proto @CWE191_Integer_Underflow__int_fgets_sub_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc275)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc276)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc277)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc278)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc62)
    cir.return loc(#loc55)
  } loc(#loc274)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc279)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc280)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc71)
  cir.func @main(%arg0: !s32i loc(fused[#loc74, #loc75]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc76, #loc77])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc282)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc283)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc73)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc78)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc79)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc80)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc80)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc81)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc68)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_fgets_sub_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc284)
    cir.call @CWE191_Integer_Underflow__int_fgets_sub_06_good() : () -> () loc(#loc83)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc69)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc70)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_fgets_sub_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc285)
    cir.call @CWE191_Integer_Underflow__int_fgets_sub_06_bad() : () -> () loc(#loc87)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc71)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc90)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc286)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc286)
    cir.return %17 : !s32i loc(#loc286)
  } loc(#loc281)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc93)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc288)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc98)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc289)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc102)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc103)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc291)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc294)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc294)
          cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc294)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc112)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc112)
            %10 = cir.const #cir.int<4> : !u64i loc(#loc112)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc112)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc112)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc112)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc112)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc112)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc253)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc113)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc114)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc115)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc115)
            %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc296)
            cir.if %21 {
              %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc119)
              %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc120)
              cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc298)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc123)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc123)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc124)
            } loc(#loc297)
          } loc(#loc295)
        } loc(#loc293)
      } loc(#loc292)
    } loc(#loc290)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc127)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc128)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc300)
      cir.if %4 {
        %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc92)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc92)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc132)
      } else {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
          %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc136)
          %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc136)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc136)
          %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc136)
          %10 = cir.cmp(gt, %5, %9) : !s32i, !cir.bool loc(#loc303)
          cir.if %10 {
            %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc305)
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc142)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc141)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc142)
            cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc305)
            %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc143)
            cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc144)
          } else {
            %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc93)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc93)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc145)
          } loc(#loc304)
        } loc(#loc302)
      } loc(#loc301)
    } loc(#loc299)
    cir.return loc(#loc95)
  } loc(#loc287)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc307)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc150)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc308)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc154)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc155)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc310)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc313)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc313)
          cir.store %6, %5 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc313)
          cir.scope {
            %7 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc163)
            %8 = cir.const #cir.int<3> : !s32i loc(#loc164)
            %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc164)
            %10 = cir.const #cir.int<4> : !u64i loc(#loc164)
            %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc164)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc164)
            %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc164)
            %14 = cir.binop(add, %11, %13) : !u64i loc(#loc164)
            %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc164)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc253)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc165)
            %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc166)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc167)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc167)
            %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc315)
            cir.if %21 {
              %22 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc171)
              %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc172)
              cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc317)
            } else {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc175)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc175)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc176)
            } loc(#loc316)
          } loc(#loc314)
        } loc(#loc312)
      } loc(#loc311)
    } loc(#loc309)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc179)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc180)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc319)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc184)
          %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc185)
          %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc185)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc185)
          %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc185)
          %10 = cir.cmp(gt, %5, %9) : !s32i, !cir.bool loc(#loc322)
          cir.if %10 {
            %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc324)
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc191)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc190)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc191)
            cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc324)
            %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc192)
            cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc193)
          } else {
            %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc194)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc194)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc195)
          } loc(#loc323)
        } loc(#loc321)
      } loc(#loc320)
    } loc(#loc318)
    cir.return loc(#loc147)
  } loc(#loc306)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc326)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc200)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc204)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc205)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc329)
      cir.if %4 {
        %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc209)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc209)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc210)
      } else {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc211)
        %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc212)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc331)
      } loc(#loc330)
    } loc(#loc328)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc216)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc217)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc333)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc336)
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc223)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc222)
          %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc223)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc336)
          %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc224)
          cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc225)
        } loc(#loc335)
      } loc(#loc334)
    } loc(#loc332)
    cir.return loc(#loc197)
  } loc(#loc325)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc338)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc230)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc234)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc235)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc341)
      cir.if %4 {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc237)
        %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc238)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc343)
      } loc(#loc342)
    } loc(#loc340)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc242)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc243)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc345)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc348)
          %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc249)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc248)
          %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc249)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc348)
          %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc250)
          cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc251)
        } loc(#loc347)
      } loc(#loc346)
    } loc(#loc344)
    cir.return loc(#loc227)
  } loc(#loc337)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fgets_sub_06.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":46:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":29:1)
#loc13 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":58:1)
#loc14 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":31:5)
#loc15 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":31:9)
#loc16 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":33:12)
#loc17 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":33:5)
#loc18 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":34:5)
#loc19 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":49:5)
#loc20 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":34:8)
#loc21 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":34:27)
#loc22 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":35:5)
#loc23 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":36:9)
#loc24 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":48:9)
#loc25 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":37:13)
#loc26 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":37:49)
#loc27 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":39:13)
#loc28 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":47:13)
#loc29 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":39:23)
#loc30 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":39:36)
#loc31 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":39:53)
#loc32 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":39:17)
#loc33 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":39:63)
#loc34 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":40:13)
#loc35 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":43:13)
#loc36 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":45:13)
#loc37 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":42:29)
#loc38 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":42:24)
#loc39 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":42:17)
#loc40 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":42:40)
#loc41 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":46:17)
#loc42 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":50:5)
#loc43 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":57:5)
#loc44 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":50:8)
#loc45 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":50:27)
#loc46 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":51:5)
#loc47 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":52:9)
#loc48 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":56:9)
#loc49 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":54:13)
#loc50 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":54:33)
#loc51 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":54:26)
#loc52 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":55:26)
#loc53 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":55:13)
#loc54 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":190:1)
#loc55 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":196:1)
#loc56 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":192:5)
#loc57 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":192:14)
#loc58 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":193:5)
#loc59 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":193:14)
#loc60 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":194:5)
#loc61 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":194:14)
#loc62 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":195:5)
#loc63 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":195:14)
#loc64 = loc("/usr/include/stdlib.h":575:1)
#loc65 = loc("/usr/include/stdlib.h":575:41)
#loc66 = loc("/usr/include/time.h":76:1)
#loc67 = loc("/usr/include/time.h":76:38)
#loc68 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":212:15)
#loc69 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":214:15)
#loc70 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":217:15)
#loc71 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":219:15)
#loc72 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":207:1)
#loc73 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":222:1)
#loc78 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":208:1)
#loc79 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":210:27)
#loc80 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":210:22)
#loc81 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":210:5)
#loc82 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":212:5)
#loc83 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":213:5)
#loc84 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":213:53)
#loc85 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":214:5)
#loc86 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":217:5)
#loc87 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":218:5)
#loc88 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":218:52)
#loc89 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":219:5)
#loc90 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":221:12)
#loc91 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":221:5)
#loc92 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":89:19)
#loc93 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":101:23)
#loc94 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":65:1)
#loc95 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":104:1)
#loc96 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":67:5)
#loc97 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":67:9)
#loc98 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":69:12)
#loc99 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":69:5)
#loc100 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":70:5)
#loc101 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":85:5)
#loc102 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":70:8)
#loc103 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":70:27)
#loc104 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":71:5)
#loc105 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":72:9)
#loc106 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":84:9)
#loc107 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":73:13)
#loc108 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":73:49)
#loc109 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":75:13)
#loc110 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":83:13)
#loc111 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":75:23)
#loc112 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":75:36)
#loc113 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":75:53)
#loc114 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":75:17)
#loc115 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":75:63)
#loc116 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":76:13)
#loc117 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":79:13)
#loc118 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":81:13)
#loc119 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":78:29)
#loc120 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":78:24)
#loc121 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":78:17)
#loc122 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":78:40)
#loc123 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":82:27)
#loc124 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":82:17)
#loc125 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":86:5)
#loc126 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":103:5)
#loc127 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":86:8)
#loc128 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":86:27)
#loc129 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":87:5)
#loc130 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":90:5)
#loc131 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":92:5)
#loc132 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":89:9)
#loc133 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":94:9)
#loc134 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":102:9)
#loc135 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":94:13)
#loc136 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":94:20)
#loc137 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":95:9)
#loc138 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":98:9)
#loc139 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":100:9)
#loc140 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":96:13)
#loc141 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":96:33)
#loc142 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":96:26)
#loc143 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":97:26)
#loc144 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":97:13)
#loc145 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":101:13)
#loc146 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":107:1)
#loc147 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":141:1)
#loc148 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":109:5)
#loc149 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":109:9)
#loc150 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":111:12)
#loc151 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":111:5)
#loc152 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":112:5)
#loc153 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":127:5)
#loc154 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":112:8)
#loc155 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":112:27)
#loc156 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":113:5)
#loc157 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":114:9)
#loc158 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":126:9)
#loc159 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":115:13)
#loc160 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":115:49)
#loc161 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":117:13)
#loc162 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":125:13)
#loc163 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":117:23)
#loc164 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":117:36)
#loc165 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":117:53)
#loc166 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":117:17)
#loc167 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":117:63)
#loc168 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":118:13)
#loc169 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":121:13)
#loc170 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":123:13)
#loc171 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":120:29)
#loc172 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":120:24)
#loc173 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":120:17)
#loc174 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":120:40)
#loc175 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":124:27)
#loc176 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":124:17)
#loc177 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":128:5)
#loc178 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":140:5)
#loc179 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":128:8)
#loc180 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":128:27)
#loc181 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":129:5)
#loc182 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":131:9)
#loc183 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":139:9)
#loc184 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":131:13)
#loc185 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":131:20)
#loc186 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":132:9)
#loc187 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":135:9)
#loc188 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":137:9)
#loc189 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":133:13)
#loc190 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":133:33)
#loc191 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":133:26)
#loc192 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":134:26)
#loc193 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":134:13)
#loc194 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":138:23)
#loc195 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":138:13)
#loc196 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":144:1)
#loc197 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":167:1)
#loc198 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":146:5)
#loc199 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":146:9)
#loc200 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":148:12)
#loc201 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":148:5)
#loc202 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":149:5)
#loc203 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":158:5)
#loc204 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":149:8)
#loc205 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":149:27)
#loc206 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":150:5)
#loc207 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":153:5)
#loc208 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":155:5)
#loc209 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":152:19)
#loc210 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":152:9)
#loc211 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":157:17)
#loc212 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":157:16)
#loc213 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":157:9)
#loc214 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":159:5)
#loc215 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":166:5)
#loc216 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":159:8)
#loc217 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":159:27)
#loc218 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":160:5)
#loc219 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":161:9)
#loc220 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":165:9)
#loc221 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":163:13)
#loc222 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":163:33)
#loc223 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":163:26)
#loc224 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":164:26)
#loc225 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":164:13)
#loc226 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":170:1)
#loc227 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":188:1)
#loc228 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":172:5)
#loc229 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":172:9)
#loc230 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":174:12)
#loc231 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":174:5)
#loc232 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":175:5)
#loc233 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":179:5)
#loc234 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":175:8)
#loc235 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":175:27)
#loc236 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":176:5)
#loc237 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":178:17)
#loc238 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":178:16)
#loc239 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":178:9)
#loc240 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":180:5)
#loc241 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":187:5)
#loc242 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":180:8)
#loc243 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":180:27)
#loc244 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":181:5)
#loc245 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":182:9)
#loc246 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":186:9)
#loc247 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":184:13)
#loc248 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":184:33)
#loc249 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":184:26)
#loc250 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":185:26)
#loc251 = loc("CWE191_Integer_Underflow__int_fgets_sub_06.c":185:13)
#loc252 = loc(fused[#loc1, #loc2])
#loc253 = loc(fused[#loc3, #loc4])
#loc254 = loc(fused[#loc5, #loc6])
#loc255 = loc(fused[#loc7, #loc8])
#loc256 = loc(fused[#loc10, #loc11])
#loc257 = loc(fused[#loc12, #loc13])
#loc258 = loc(fused[#loc14, #loc15])
#loc259 = loc(fused[#loc17, #loc16])
#loc260 = loc(fused[#loc18, #loc19])
#loc261 = loc(fused[#loc20, #loc21])
#loc262 = loc(fused[#loc22, #loc19])
#loc263 = loc(fused[#loc23, #loc24])
#loc264 = loc(fused[#loc25, #loc26])
#loc265 = loc(fused[#loc27, #loc28])
#loc266 = loc(fused[#loc32, #loc33])
#loc267 = loc(fused[#loc34, #loc35, #loc36, #loc28])
#loc268 = loc(fused[#loc39, #loc40])
#loc269 = loc(fused[#loc42, #loc43])
#loc270 = loc(fused[#loc44, #loc45])
#loc271 = loc(fused[#loc46, #loc43])
#loc272 = loc(fused[#loc47, #loc48])
#loc273 = loc(fused[#loc49, #loc50])
#loc274 = loc(fused[#loc54, #loc55])
#loc275 = loc(fused[#loc56, #loc57])
#loc276 = loc(fused[#loc58, #loc59])
#loc277 = loc(fused[#loc60, #loc61])
#loc278 = loc(fused[#loc62, #loc63])
#loc279 = loc(fused[#loc64, #loc65])
#loc280 = loc(fused[#loc66, #loc67])
#loc281 = loc(fused[#loc72, #loc73])
#loc284 = loc(fused[#loc83, #loc84])
#loc285 = loc(fused[#loc87, #loc88])
#loc286 = loc(fused[#loc91, #loc90])
#loc287 = loc(fused[#loc94, #loc95])
#loc288 = loc(fused[#loc96, #loc97])
#loc289 = loc(fused[#loc99, #loc98])
#loc290 = loc(fused[#loc100, #loc101])
#loc291 = loc(fused[#loc102, #loc103])
#loc292 = loc(fused[#loc104, #loc101])
#loc293 = loc(fused[#loc105, #loc106])
#loc294 = loc(fused[#loc107, #loc108])
#loc295 = loc(fused[#loc109, #loc110])
#loc296 = loc(fused[#loc114, #loc115])
#loc297 = loc(fused[#loc116, #loc117, #loc118, #loc110])
#loc298 = loc(fused[#loc121, #loc122])
#loc299 = loc(fused[#loc125, #loc126])
#loc300 = loc(fused[#loc127, #loc128])
#loc301 = loc(fused[#loc129, #loc130, #loc131, #loc126])
#loc302 = loc(fused[#loc133, #loc134])
#loc303 = loc(fused[#loc135, #loc136])
#loc304 = loc(fused[#loc137, #loc138, #loc139, #loc134])
#loc305 = loc(fused[#loc140, #loc141])
#loc306 = loc(fused[#loc146, #loc147])
#loc307 = loc(fused[#loc148, #loc149])
#loc308 = loc(fused[#loc151, #loc150])
#loc309 = loc(fused[#loc152, #loc153])
#loc310 = loc(fused[#loc154, #loc155])
#loc311 = loc(fused[#loc156, #loc153])
#loc312 = loc(fused[#loc157, #loc158])
#loc313 = loc(fused[#loc159, #loc160])
#loc314 = loc(fused[#loc161, #loc162])
#loc315 = loc(fused[#loc166, #loc167])
#loc316 = loc(fused[#loc168, #loc169, #loc170, #loc162])
#loc317 = loc(fused[#loc173, #loc174])
#loc318 = loc(fused[#loc177, #loc178])
#loc319 = loc(fused[#loc179, #loc180])
#loc320 = loc(fused[#loc181, #loc178])
#loc321 = loc(fused[#loc182, #loc183])
#loc322 = loc(fused[#loc184, #loc185])
#loc323 = loc(fused[#loc186, #loc187, #loc188, #loc183])
#loc324 = loc(fused[#loc189, #loc190])
#loc325 = loc(fused[#loc196, #loc197])
#loc326 = loc(fused[#loc198, #loc199])
#loc327 = loc(fused[#loc201, #loc200])
#loc328 = loc(fused[#loc202, #loc203])
#loc329 = loc(fused[#loc204, #loc205])
#loc330 = loc(fused[#loc206, #loc207, #loc208, #loc203])
#loc331 = loc(fused[#loc213, #loc211])
#loc332 = loc(fused[#loc214, #loc215])
#loc333 = loc(fused[#loc216, #loc217])
#loc334 = loc(fused[#loc218, #loc215])
#loc335 = loc(fused[#loc219, #loc220])
#loc336 = loc(fused[#loc221, #loc222])
#loc337 = loc(fused[#loc226, #loc227])
#loc338 = loc(fused[#loc228, #loc229])
#loc339 = loc(fused[#loc231, #loc230])
#loc340 = loc(fused[#loc232, #loc233])
#loc341 = loc(fused[#loc234, #loc235])
#loc342 = loc(fused[#loc236, #loc233])
#loc343 = loc(fused[#loc239, #loc237])
#loc344 = loc(fused[#loc240, #loc241])
#loc345 = loc(fused[#loc242, #loc243])
#loc346 = loc(fused[#loc244, #loc241])
#loc347 = loc(fused[#loc245, #loc246])
#loc348 = loc(fused[#loc247, #loc248])
