!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc64 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":222:10)
#loc65 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":222:14)
#loc66 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":222:20)
#loc67 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":222:32)
#loc254 = loc(fused[#loc64, #loc65])
#loc255 = loc(fused[#loc66, #loc67])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int_fscanf_preinc_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc234)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc235)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc236)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc8)
  cir.func private @printIntLine(!s32i) loc(#loc237)
  cir.func no_proto @CWE190_Integer_Overflow__int_fscanf_preinc_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc239)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc15)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc19)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc21)
          %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc235)
          %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc22)
          %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
          %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc21)
          cir.break loc(#loc23)
        } loc(#loc20)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc8)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc8)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc25)
          cir.break loc(#loc26)
        } loc(#loc24)
        cir.yield loc(#loc17)
      } loc(#loc17)
    } loc(#loc241)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc29)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc244)
            %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
            %5 = cir.unary(inc, %4) : !s32i, !s32i loc(#loc35)
            cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc245)
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
            cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc244)
            %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc37)
            cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc38)
          } loc(#loc243)
          cir.break loc(#loc39)
        } loc(#loc30)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc41)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc41)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc42)
          cir.break loc(#loc43)
        } loc(#loc40)
        cir.yield loc(#loc27)
      } loc(#loc27)
    } loc(#loc242)
    cir.return loc(#loc12)
  } loc(#loc238)
  cir.func no_proto @CWE190_Integer_Overflow__int_fscanf_preinc_15_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc247)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc248)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc249)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc250)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    cir.return loc(#loc45)
  } loc(#loc246)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc251)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc252)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc61)
  cir.func @main(%arg0: !s32i loc(fused[#loc64, #loc65]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc66, #loc67])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc254)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc255)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc63)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc68)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc68)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc69)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc70)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc70)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc71)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc58)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %8 = cir.get_global @CWE190_Integer_Overflow__int_fscanf_preinc_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc256)
    cir.call @CWE190_Integer_Overflow__int_fscanf_preinc_15_good() : () -> () loc(#loc73)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc59)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc60)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %13 = cir.get_global @CWE190_Integer_Overflow__int_fscanf_preinc_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc257)
    cir.call @CWE190_Integer_Overflow__int_fscanf_preinc_15_bad() : () -> () loc(#loc77)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc61)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc80)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    cir.return %17 : !s32i loc(#loc258)
  } loc(#loc253)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc82)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc260)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc87)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc91)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc93)
          %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc235)
          %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc94)
          %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc95)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc95)
          %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc93)
          cir.break loc(#loc96)
        } loc(#loc92)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc98)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc98)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc99)
          cir.break loc(#loc100)
        } loc(#loc97)
        cir.yield loc(#loc89)
      } loc(#loc89)
    } loc(#loc262)
    cir.scope {
      %2 = cir.const #cir.int<8> : !s32i loc(#loc103)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc105)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc105)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc106)
          cir.break loc(#loc107)
        } loc(#loc104)
        cir.case(default, []) {
          cir.scope {
            %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
            %4 = cir.const #cir.int<2147483647> : !s32i loc(#loc112)
            %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc265)
            cir.if %5 {
              %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc267)
              %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              %8 = cir.unary(inc, %7) : !s32i, !s32i loc(#loc118)
              cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc268)
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
              cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc267)
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc120)
              cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc121)
            } else {
              %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc82)
              %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc82)
              cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc122)
            } loc(#loc266)
          } loc(#loc264)
          cir.break loc(#loc123)
        } loc(#loc108)
        cir.yield loc(#loc101)
      } loc(#loc101)
    } loc(#loc263)
    cir.return loc(#loc84)
  } loc(#loc259)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc270)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc128)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc132)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc134)
          %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc235)
          %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc135)
          %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc136)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc136)
          %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc134)
          cir.break loc(#loc137)
        } loc(#loc133)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc139)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc139)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc140)
          cir.break loc(#loc141)
        } loc(#loc138)
        cir.yield loc(#loc130)
      } loc(#loc130)
    } loc(#loc272)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc144)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
            %4 = cir.const #cir.int<2147483647> : !s32i loc(#loc149)
            %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc275)
            cir.if %5 {
              %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc277)
              %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc155)
              %8 = cir.unary(inc, %7) : !s32i, !s32i loc(#loc155)
              cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc278)
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
              cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc277)
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc157)
              cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc158)
            } else {
              %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc159)
              %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc159)
              cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc160)
            } loc(#loc276)
          } loc(#loc274)
          cir.break loc(#loc161)
        } loc(#loc145)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc163)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc163)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc164)
          cir.break loc(#loc165)
        } loc(#loc162)
        cir.yield loc(#loc142)
      } loc(#loc142)
    } loc(#loc273)
    cir.return loc(#loc125)
  } loc(#loc269)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc280)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc170)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc174)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc176)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc176)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc177)
          cir.break loc(#loc178)
        } loc(#loc175)
        cir.case(default, []) {
          %3 = cir.const #cir.int<2> : !s32i loc(#loc180)
          cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc283)
          cir.break loc(#loc182)
        } loc(#loc179)
        cir.yield loc(#loc172)
      } loc(#loc172)
    } loc(#loc282)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc185)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc286)
            %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc191)
            %5 = cir.unary(inc, %4) : !s32i, !s32i loc(#loc191)
            cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc287)
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc190)
            cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc286)
            %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc193)
            cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc194)
          } loc(#loc285)
          cir.break loc(#loc195)
        } loc(#loc186)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc197)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc197)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc198)
          cir.break loc(#loc199)
        } loc(#loc196)
        cir.yield loc(#loc183)
      } loc(#loc183)
    } loc(#loc284)
    cir.return loc(#loc167)
  } loc(#loc279)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc289)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc204)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc290)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc208)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.const #cir.int<2> : !s32i loc(#loc210)
          cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc292)
          cir.break loc(#loc212)
        } loc(#loc209)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc214)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc214)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc215)
          cir.break loc(#loc216)
        } loc(#loc213)
        cir.yield loc(#loc206)
      } loc(#loc206)
    } loc(#loc291)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc219)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc295)
            %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc225)
            %5 = cir.unary(inc, %4) : !s32i, !s32i loc(#loc225)
            cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc296)
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc224)
            cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc295)
            %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc227)
            cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc228)
          } loc(#loc294)
          cir.break loc(#loc229)
        } loc(#loc220)
        cir.case(default, []) {
          %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc231)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc231)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc232)
          cir.break loc(#loc233)
        } loc(#loc230)
        cir.yield loc(#loc217)
      } loc(#loc217)
    } loc(#loc293)
    cir.return loc(#loc201)
  } loc(#loc288)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int_fscanf_preinc_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":31:23)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":35:19)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc11 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":22:1)
#loc12 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":53:1)
#loc13 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":24:5)
#loc14 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":24:9)
#loc15 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":26:12)
#loc16 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":26:5)
#loc17 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":27:5)
#loc18 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":37:5)
#loc19 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":27:12)
#loc20 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":29:5)
#loc21 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":31:9)
#loc22 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":31:16)
#loc23 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":32:9)
#loc24 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":33:5)
#loc25 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":35:9)
#loc26 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":36:9)
#loc27 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":38:5)
#loc28 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":52:5)
#loc29 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":38:12)
#loc30 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":40:5)
#loc31 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":41:5)
#loc32 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":46:5)
#loc33 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":44:9)
#loc34 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":44:22)
#loc35 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":43:9)
#loc36 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":43:11)
#loc37 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":45:22)
#loc38 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":45:9)
#loc39 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":47:5)
#loc40 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":48:5)
#loc41 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":50:19)
#loc42 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":50:9)
#loc43 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":51:9)
#loc44 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":205:1)
#loc45 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":211:1)
#loc46 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":207:5)
#loc47 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":207:14)
#loc48 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":208:5)
#loc49 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":208:14)
#loc50 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":209:5)
#loc51 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":209:14)
#loc52 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":210:5)
#loc53 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":210:14)
#loc54 = loc("/usr/include/stdlib.h":575:1)
#loc55 = loc("/usr/include/stdlib.h":575:41)
#loc56 = loc("/usr/include/time.h":76:1)
#loc57 = loc("/usr/include/time.h":76:38)
#loc58 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":227:15)
#loc59 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":229:15)
#loc60 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":232:15)
#loc61 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":234:15)
#loc62 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":222:1)
#loc63 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":237:1)
#loc68 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":223:1)
#loc69 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":225:27)
#loc70 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":225:22)
#loc71 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":225:5)
#loc72 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":227:5)
#loc73 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":228:5)
#loc74 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":228:56)
#loc75 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":229:5)
#loc76 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":232:5)
#loc77 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":233:5)
#loc78 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":233:55)
#loc79 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":234:5)
#loc80 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":236:12)
#loc81 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":236:5)
#loc82 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":92:23)
#loc83 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":60:1)
#loc84 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":96:1)
#loc85 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":62:5)
#loc86 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":62:9)
#loc87 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":64:12)
#loc88 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":64:5)
#loc89 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":65:5)
#loc90 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":75:5)
#loc91 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":65:12)
#loc92 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":67:5)
#loc93 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":69:9)
#loc94 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":69:16)
#loc95 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":69:23)
#loc96 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":70:9)
#loc97 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":71:5)
#loc98 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":73:19)
#loc99 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":73:9)
#loc100 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":74:9)
#loc101 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":76:5)
#loc102 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":95:5)
#loc103 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":76:12)
#loc104 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":78:5)
#loc105 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":80:19)
#loc106 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":80:9)
#loc107 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":81:9)
#loc108 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":82:5)
#loc109 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":84:9)
#loc110 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":93:9)
#loc111 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":84:13)
#loc112 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":84:20)
#loc113 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":85:9)
#loc114 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":89:9)
#loc115 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":91:9)
#loc116 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":87:13)
#loc117 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":87:26)
#loc118 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":86:13)
#loc119 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":86:15)
#loc120 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":88:26)
#loc121 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":88:13)
#loc122 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":92:13)
#loc123 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":94:9)
#loc124 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":99:1)
#loc125 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":135:1)
#loc126 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":101:5)
#loc127 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":101:9)
#loc128 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":103:12)
#loc129 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":103:5)
#loc130 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":104:5)
#loc131 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":114:5)
#loc132 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":104:12)
#loc133 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":106:5)
#loc134 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":108:9)
#loc135 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":108:16)
#loc136 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":108:23)
#loc137 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":109:9)
#loc138 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":110:5)
#loc139 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":112:19)
#loc140 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":112:9)
#loc141 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":113:9)
#loc142 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":115:5)
#loc143 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":134:5)
#loc144 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":115:12)
#loc145 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":117:5)
#loc146 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":119:9)
#loc147 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":128:9)
#loc148 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":119:13)
#loc149 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":119:20)
#loc150 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":120:9)
#loc151 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":124:9)
#loc152 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":126:9)
#loc153 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":122:13)
#loc154 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":122:26)
#loc155 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":121:13)
#loc156 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":121:15)
#loc157 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":123:26)
#loc158 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":123:13)
#loc159 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":127:23)
#loc160 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":127:13)
#loc161 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":129:9)
#loc162 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":130:5)
#loc163 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":132:19)
#loc164 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":132:9)
#loc165 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":133:9)
#loc166 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":138:1)
#loc167 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":169:1)
#loc168 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":140:5)
#loc169 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":140:9)
#loc170 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":142:12)
#loc171 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":142:5)
#loc172 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":143:5)
#loc173 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":153:5)
#loc174 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":143:12)
#loc175 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":145:5)
#loc176 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":147:19)
#loc177 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":147:9)
#loc178 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":148:9)
#loc179 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":149:5)
#loc180 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":151:16)
#loc181 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":151:9)
#loc182 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":152:9)
#loc183 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":154:5)
#loc184 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":168:5)
#loc185 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":154:12)
#loc186 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":156:5)
#loc187 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":157:5)
#loc188 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":162:5)
#loc189 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":160:9)
#loc190 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":160:22)
#loc191 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":159:9)
#loc192 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":159:11)
#loc193 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":161:22)
#loc194 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":161:9)
#loc195 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":163:5)
#loc196 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":164:5)
#loc197 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":166:19)
#loc198 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":166:9)
#loc199 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":167:9)
#loc200 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":172:1)
#loc201 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":203:1)
#loc202 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":174:5)
#loc203 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":174:9)
#loc204 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":176:12)
#loc205 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":176:5)
#loc206 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":177:5)
#loc207 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":187:5)
#loc208 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":177:12)
#loc209 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":179:5)
#loc210 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":181:16)
#loc211 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":181:9)
#loc212 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":182:9)
#loc213 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":183:5)
#loc214 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":185:19)
#loc215 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":185:9)
#loc216 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":186:9)
#loc217 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":188:5)
#loc218 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":202:5)
#loc219 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":188:12)
#loc220 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":190:5)
#loc221 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":191:5)
#loc222 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":196:5)
#loc223 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":194:9)
#loc224 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":194:22)
#loc225 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":193:9)
#loc226 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":193:11)
#loc227 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":195:22)
#loc228 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":195:9)
#loc229 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":197:5)
#loc230 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":198:5)
#loc231 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":200:19)
#loc232 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":200:9)
#loc233 = loc("CWE190_Integer_Overflow__int_fscanf_preinc_15.c":201:9)
#loc234 = loc(fused[#loc1, #loc2])
#loc235 = loc(fused[#loc3, #loc4])
#loc236 = loc(fused[#loc6, #loc7])
#loc237 = loc(fused[#loc9, #loc10])
#loc238 = loc(fused[#loc11, #loc12])
#loc239 = loc(fused[#loc13, #loc14])
#loc240 = loc(fused[#loc16, #loc15])
#loc241 = loc(fused[#loc17, #loc18])
#loc242 = loc(fused[#loc27, #loc28])
#loc243 = loc(fused[#loc31, #loc32])
#loc244 = loc(fused[#loc33, #loc34])
#loc245 = loc(fused[#loc35, #loc36])
#loc246 = loc(fused[#loc44, #loc45])
#loc247 = loc(fused[#loc46, #loc47])
#loc248 = loc(fused[#loc48, #loc49])
#loc249 = loc(fused[#loc50, #loc51])
#loc250 = loc(fused[#loc52, #loc53])
#loc251 = loc(fused[#loc54, #loc55])
#loc252 = loc(fused[#loc56, #loc57])
#loc253 = loc(fused[#loc62, #loc63])
#loc256 = loc(fused[#loc73, #loc74])
#loc257 = loc(fused[#loc77, #loc78])
#loc258 = loc(fused[#loc81, #loc80])
#loc259 = loc(fused[#loc83, #loc84])
#loc260 = loc(fused[#loc85, #loc86])
#loc261 = loc(fused[#loc88, #loc87])
#loc262 = loc(fused[#loc89, #loc90])
#loc263 = loc(fused[#loc101, #loc102])
#loc264 = loc(fused[#loc109, #loc110])
#loc265 = loc(fused[#loc111, #loc112])
#loc266 = loc(fused[#loc113, #loc114, #loc115, #loc110])
#loc267 = loc(fused[#loc116, #loc117])
#loc268 = loc(fused[#loc118, #loc119])
#loc269 = loc(fused[#loc124, #loc125])
#loc270 = loc(fused[#loc126, #loc127])
#loc271 = loc(fused[#loc129, #loc128])
#loc272 = loc(fused[#loc130, #loc131])
#loc273 = loc(fused[#loc142, #loc143])
#loc274 = loc(fused[#loc146, #loc147])
#loc275 = loc(fused[#loc148, #loc149])
#loc276 = loc(fused[#loc150, #loc151, #loc152, #loc147])
#loc277 = loc(fused[#loc153, #loc154])
#loc278 = loc(fused[#loc155, #loc156])
#loc279 = loc(fused[#loc166, #loc167])
#loc280 = loc(fused[#loc168, #loc169])
#loc281 = loc(fused[#loc171, #loc170])
#loc282 = loc(fused[#loc172, #loc173])
#loc283 = loc(fused[#loc181, #loc180])
#loc284 = loc(fused[#loc183, #loc184])
#loc285 = loc(fused[#loc187, #loc188])
#loc286 = loc(fused[#loc189, #loc190])
#loc287 = loc(fused[#loc191, #loc192])
#loc288 = loc(fused[#loc200, #loc201])
#loc289 = loc(fused[#loc202, #loc203])
#loc290 = loc(fused[#loc205, #loc204])
#loc291 = loc(fused[#loc206, #loc207])
#loc292 = loc(fused[#loc211, #loc210])
#loc293 = loc(fused[#loc217, #loc218])
#loc294 = loc(fused[#loc221, #loc222])
#loc295 = loc(fused[#loc223, #loc224])
#loc296 = loc(fused[#loc225, #loc226])
