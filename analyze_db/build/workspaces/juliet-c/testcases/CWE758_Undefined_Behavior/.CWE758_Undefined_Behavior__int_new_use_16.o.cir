!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_new_use_16.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc57)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc58)
  cir.func private @printIntLine(!s32i) loc(#loc59)
  cir.func @_ZN41CWE758_Undefined_Behavior__int_new_use_163badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc61)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc62)
    cir.br ^bb1 loc(#loc63)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc63)
  ^bb2:  // 2 preds: ^bb1, ^bb7
    %2 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %3 ^bb3, ^bb8 loc(#loc15)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc64)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc65)
  ^bb5:  // pred: ^bb4
    %4 = cir.const #cir.int<4> : !u64i loc(#loc66)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc61)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc66)
    cir.store %6, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc61)
    %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc12)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc21)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc21)
    cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc22)
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc24)
    cir.br ^bb6 loc(#loc18)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc25)
  ^bb7:  // no predecessors
    cir.br ^bb2 loc(#loc14)
  ^bb8:  // 2 preds: ^bb2, ^bb6
    cir.br ^bb9 loc(#loc14)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc8)
  } loc(#loc60)
  cir.func internal private @_ZN41CWE758_Undefined_Behavior__int_new_use_16L5good1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc68)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc69)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc70)
    cir.br ^bb1 loc(#loc71)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc71)
  ^bb2:  // 2 preds: ^bb1, ^bb9
    %3 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc36)
    cir.brcond %4 ^bb3, ^bb10 loc(#loc36)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc72)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc73)
  ^bb5:  // pred: ^bb4
    %5 = cir.const #cir.int<5> : !s32i loc(#loc40)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc75)
    %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc69)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc75)
    cir.store %8, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc69)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    cir.br ^bb6 loc(#loc77)
  ^bb6:  // pred: ^bb5
    %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc70)
    %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc50)
    cir.br ^bb7 loc(#loc47)
  ^bb7:  // pred: ^bb6
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc51)
    cir.call @_ZdlPv(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
    cir.br ^bb8 loc(#loc39)
  ^bb8:  // pred: ^bb7
    cir.br ^bb10 loc(#loc53)
  ^bb9:  // no predecessors
    cir.br ^bb2 loc(#loc35)
  ^bb10:  // 2 preds: ^bb2, ^bb8
    cir.br ^bb11 loc(#loc35)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc27)
  } loc(#loc67)
  cir.func @_ZN41CWE758_Undefined_Behavior__int_new_use_164goodEv() extra(#fn_attr1) {
    cir.call @_ZN41CWE758_Undefined_Behavior__int_new_use_16L5good1Ev() : () -> () loc(#loc56)
    cir.return loc(#loc55)
  } loc(#loc78)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_new_use_16.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":23:1)
#loc8 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":35:1)
#loc9 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":28:13)
#loc10 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":28:33)
#loc11 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":29:13)
#loc12 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":29:25)
#loc13 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":25:5)
#loc14 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":34:5)
#loc15 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":25:11)
#loc16 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":26:5)
#loc17 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":27:9)
#loc18 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":32:9)
#loc19 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":28:29)
#loc20 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":29:24)
#loc21 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":30:20)
#loc22 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":23:6)
#loc23 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":31:26)
#loc24 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":31:13)
#loc25 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":33:9)
#loc26 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":42:1)
#loc27 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":59:1)
#loc28 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":47:13)
#loc29 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":47:17)
#loc30 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":49:13)
#loc31 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":49:33)
#loc32 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":52:17)
#loc33 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":52:29)
#loc34 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":44:5)
#loc35 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":58:5)
#loc36 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":44:11)
#loc37 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":45:5)
#loc38 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":46:9)
#loc39 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":56:9)
#loc40 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":48:20)
#loc41 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":48:13)
#loc42 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":49:29)
#loc43 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":50:24)
#loc44 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":50:14)
#loc45 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":50:13)
#loc46 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":51:13)
#loc47 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":54:13)
#loc48 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":52:28)
#loc49 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":53:30)
#loc50 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":53:17)
#loc51 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":55:20)
#loc52 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":42:13)
#loc53 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":57:9)
#loc54 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":61:1)
#loc55 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":64:1)
#loc56 = loc("CWE758_Undefined_Behavior__int_new_use_16.cpp":63:5)
#loc57 = loc(fused[#loc1, #loc2])
#loc58 = loc(fused[#loc3, #loc4])
#loc59 = loc(fused[#loc5, #loc6])
#loc60 = loc(fused[#loc7, #loc8])
#loc61 = loc(fused[#loc9, #loc10])
#loc62 = loc(fused[#loc11, #loc12])
#loc63 = loc(fused[#loc13, #loc14])
#loc64 = loc(fused[#loc16, #loc14])
#loc65 = loc(fused[#loc17, #loc18])
#loc66 = loc(fused[#loc19, #loc10])
#loc67 = loc(fused[#loc26, #loc27])
#loc68 = loc(fused[#loc28, #loc29])
#loc69 = loc(fused[#loc30, #loc31])
#loc70 = loc(fused[#loc32, #loc33])
#loc71 = loc(fused[#loc34, #loc35])
#loc72 = loc(fused[#loc37, #loc35])
#loc73 = loc(fused[#loc38, #loc39])
#loc74 = loc(fused[#loc41, #loc40])
#loc75 = loc(fused[#loc42, #loc31])
#loc76 = loc(fused[#loc45, #loc43])
#loc77 = loc(fused[#loc46, #loc47])
#loc78 = loc(fused[#loc54, #loc55])
