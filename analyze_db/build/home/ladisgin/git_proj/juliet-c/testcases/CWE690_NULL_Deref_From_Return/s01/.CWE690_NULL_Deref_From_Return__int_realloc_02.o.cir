!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int_realloc_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc110)
  cir.func private @printIntLine(!s32i) loc(#loc111)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc112)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__int_realloc_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc115)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc13)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc14)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc14)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc15)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc116)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc117)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc13)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc118)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc119)
    cir.br ^bb1 loc(#loc120)
  ^bb1:  // pred: ^bb0
    %11 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc121)
  ^bb2:  // pred: ^bb1
    %13 = cir.const #cir.int<5> : !s32i loc(#loc24)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc25)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc27)
    cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc30)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc31)
    %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc32)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc33)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc33)
    cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc32)
    cir.br ^bb3 loc(#loc21)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc8)
  } loc(#loc113)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__int_realloc_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc124)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc125)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    cir.return loc(#loc35)
  } loc(#loc123)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc42)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc47)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc129)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc49)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc50)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc51)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc130)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc131)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc49)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc132)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc133)
    cir.br ^bb1 loc(#loc134)
  ^bb1:  // pred: ^bb0
    %11 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc58)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc135)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc42)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    cir.br ^bb8 loc(#loc60)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc136)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc66)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc66)
    %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s32i>, !cir.bool loc(#loc137)
    cir.brcond %18 ^bb5, ^bb6 loc(#loc138)
  ^bb5:  // pred: ^bb4
    %19 = cir.const #cir.int<5> : !s32i loc(#loc68)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc71)
    cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc72)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc74)
    %26 = cir.load %25 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    cir.call @printIntLine(%26) : (!s32i) -> () loc(#loc75)
    %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc76)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc77)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc77)
    cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc76)
    cir.br ^bb6 loc(#loc64)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc64)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc57)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc57)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc44)
  } loc(#loc127)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc82)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc142)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc84)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc85)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc86)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc143)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc144)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc84)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc145)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc146)
    cir.br ^bb1 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %11 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc93)
    cir.brcond %12 ^bb2, ^bb7 loc(#loc148)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc149)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc97)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc98)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc98)
    %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc150)
    cir.brcond %16 ^bb4, ^bb5 loc(#loc151)
  ^bb4:  // pred: ^bb3
    %17 = cir.const #cir.int<5> : !s32i loc(#loc100)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc101)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc103)
    cir.store %17, %20 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc104)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc106)
    %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc107)
    %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc108)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc109)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc109)
    cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc108)
    cir.br ^bb5 loc(#loc96)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc96)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc92)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc92)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc79)
  } loc(#loc140)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__int_realloc_02.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":23:1)
#loc8 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":36:1)
#loc9 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":25:5)
#loc10 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":25:11)
#loc11 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":26:12)
#loc12 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":26:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":28:19)
#loc14 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":28:27)
#loc15 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":28:33)
#loc16 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":28:35)
#loc17 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":28:45)
#loc18 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":28:46)
#loc19 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":28:5)
#loc20 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":29:5)
#loc21 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":35:5)
#loc22 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":29:8)
#loc23 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":30:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":32:19)
#loc25 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":32:9)
#loc26 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":32:14)
#loc27 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":32:15)
#loc28 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":33:22)
#loc29 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":33:27)
#loc30 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":33:28)
#loc31 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":33:9)
#loc32 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":34:9)
#loc33 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":34:14)
#loc34 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":85:1)
#loc35 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":89:1)
#loc36 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":87:5)
#loc37 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":87:14)
#loc38 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":88:5)
#loc39 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":88:14)
#loc40 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc42 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":52:19)
#loc43 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":43:1)
#loc44 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":64:1)
#loc45 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":45:5)
#loc46 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":45:11)
#loc47 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":46:12)
#loc48 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":46:5)
#loc49 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":48:19)
#loc50 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":48:27)
#loc51 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":48:33)
#loc52 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":48:35)
#loc53 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":48:45)
#loc54 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":48:46)
#loc55 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":48:5)
#loc56 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":49:5)
#loc57 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":63:5)
#loc58 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":49:8)
#loc59 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":50:5)
#loc60 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":53:5)
#loc61 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":55:5)
#loc62 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":52:9)
#loc63 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":57:9)
#loc64 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":62:9)
#loc65 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":57:13)
#loc66 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":57:21)
#loc67 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":58:9)
#loc68 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":59:23)
#loc69 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":59:13)
#loc70 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":59:18)
#loc71 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":59:19)
#loc72 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":60:26)
#loc73 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":60:31)
#loc74 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":60:32)
#loc75 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":60:13)
#loc76 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":61:13)
#loc77 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":61:18)
#loc78 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":67:1)
#loc79 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":83:1)
#loc80 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":69:5)
#loc81 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":69:11)
#loc82 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":70:12)
#loc83 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":70:5)
#loc84 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":72:19)
#loc85 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":72:27)
#loc86 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":72:33)
#loc87 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":72:35)
#loc88 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":72:45)
#loc89 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":72:46)
#loc90 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":72:5)
#loc91 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":73:5)
#loc92 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":82:5)
#loc93 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":73:8)
#loc94 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":74:5)
#loc95 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":76:9)
#loc96 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":81:9)
#loc97 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":76:13)
#loc98 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":76:21)
#loc99 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":77:9)
#loc100 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":78:23)
#loc101 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":78:13)
#loc102 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":78:18)
#loc103 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":78:19)
#loc104 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":79:26)
#loc105 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":79:31)
#loc106 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":79:32)
#loc107 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":79:13)
#loc108 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":80:13)
#loc109 = loc("CWE690_NULL_Deref_From_Return__int_realloc_02.c":80:18)
#loc110 = loc(fused[#loc1, #loc2])
#loc111 = loc(fused[#loc3, #loc4])
#loc112 = loc(fused[#loc5, #loc6])
#loc113 = loc(fused[#loc7, #loc8])
#loc114 = loc(fused[#loc9, #loc10])
#loc115 = loc(fused[#loc12, #loc11])
#loc116 = loc(fused[#loc16, #loc17])
#loc117 = loc(fused[#loc15, #loc17])
#loc118 = loc(fused[#loc13, #loc18])
#loc119 = loc(fused[#loc19, #loc18])
#loc120 = loc(fused[#loc20, #loc21])
#loc121 = loc(fused[#loc23, #loc21])
#loc122 = loc(fused[#loc25, #loc24])
#loc123 = loc(fused[#loc34, #loc35])
#loc124 = loc(fused[#loc36, #loc37])
#loc125 = loc(fused[#loc38, #loc39])
#loc126 = loc(fused[#loc40, #loc41])
#loc127 = loc(fused[#loc43, #loc44])
#loc128 = loc(fused[#loc45, #loc46])
#loc129 = loc(fused[#loc48, #loc47])
#loc130 = loc(fused[#loc52, #loc53])
#loc131 = loc(fused[#loc51, #loc53])
#loc132 = loc(fused[#loc49, #loc54])
#loc133 = loc(fused[#loc55, #loc54])
#loc134 = loc(fused[#loc56, #loc57])
#loc135 = loc(fused[#loc59, #loc60, #loc61, #loc57])
#loc136 = loc(fused[#loc63, #loc64])
#loc137 = loc(fused[#loc65, #loc66])
#loc138 = loc(fused[#loc67, #loc64])
#loc139 = loc(fused[#loc69, #loc68])
#loc140 = loc(fused[#loc78, #loc79])
#loc141 = loc(fused[#loc80, #loc81])
#loc142 = loc(fused[#loc83, #loc82])
#loc143 = loc(fused[#loc87, #loc88])
#loc144 = loc(fused[#loc86, #loc88])
#loc145 = loc(fused[#loc84, #loc89])
#loc146 = loc(fused[#loc90, #loc89])
#loc147 = loc(fused[#loc91, #loc92])
#loc148 = loc(fused[#loc94, #loc92])
#loc149 = loc(fused[#loc95, #loc96])
#loc150 = loc(fused[#loc97, #loc98])
#loc151 = loc(fused[#loc99, #loc96])
#loc152 = loc(fused[#loc101, #loc100])
