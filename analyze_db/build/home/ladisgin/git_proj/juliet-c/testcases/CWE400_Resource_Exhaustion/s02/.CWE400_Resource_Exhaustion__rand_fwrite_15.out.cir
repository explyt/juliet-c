!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":297:10)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":297:14)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":297:20)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":297:32)
#true = #cir.bool<true> : !cir.bool
#loc496 = loc(fused[#loc111, #loc112])
#loc497 = loc(fused[#loc113, #loc114])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc455)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc456)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc6)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc457)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc9)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc458)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc459)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc14)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc460)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc462)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc22)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc463)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc26)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
          %5 = cir.const #cir.int<1> : !s32i loc(#loc28)
          %6 = cir.binop(and, %4, %5) : !s32i loc(#loc28)
          %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc28)
          %8 = cir.ternary(%7, true {
            %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
            %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc28)
            %12 = cir.const #cir.int<30> : !s32i loc(#loc28)
            %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc28)
            %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
            %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc28)
            %16 = cir.const #cir.int<15> : !s32i loc(#loc28)
            %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc28)
            %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc28)
            %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
            %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc28)
            %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc28)
            cir.yield %21 : !u32i loc(#loc28)
          }, false {
            %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
            %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc28)
            %12 = cir.const #cir.int<30> : !s32i loc(#loc28)
            %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc28)
            %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
            %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc28)
            %16 = cir.const #cir.int<15> : !s32i loc(#loc28)
            %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc28)
            %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc28)
            %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc28)
            %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc28)
            %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc28)
            %22 = cir.unary(minus, %21) : !u32i, !u32i loc(#loc28)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc28)
            %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc28)
            %25 = cir.binop(sub, %22, %24) : !u32i loc(#loc28)
            cir.yield %25 : !u32i loc(#loc28)
          }) : (!cir.bool) -> !u32i loc(#loc28)
          %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc28)
          cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc465)
          cir.break loc(#loc30)
        } loc(#loc27)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc5)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc5)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc32)
          cir.break loc(#loc33)
        } loc(#loc31)
        cir.yield loc(#loc24)
      } loc(#loc24)
    } loc(#loc464)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc36)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc468)
            %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc469)
            %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc470)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc41)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc41)
            cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc468)
            %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc43)
            cir.store %9, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc469)
            %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc6)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc6)
            cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc470)
            %12 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc45)
            %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
            %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc9)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc9)
            %16 = cir.call @fopen(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc45)
            cir.store %16, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc471)
            cir.scope {
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc51)
              %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc52)
              %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc52)
              %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc473)
              cir.if %20 {
                %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc54)
                %22 = cir.const #cir.int<1> : !s32i loc(#loc55)
                cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc54)
              } loc(#loc474)
            } loc(#loc472)
            cir.scope {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc58)
              %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc58)
              cir.store %18, %4 : !u64i, !cir.ptr<!u64i> loc(#loc476)
              cir.for : cond {
                %19 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc60)
                %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc61)
                %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc477)
                cir.condition(%22) loc(#loc62)
              } body {
                cir.scope {
                  cir.scope {
                    %19 = cir.const #cir.int<50> : !u64i loc(#loc480)
                    %20 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc68)
                    %21 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc14)
                    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc14)
                    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc14)
                    %24 = cir.const #cir.int<1> : !u64i loc(#loc481)
                    %25 = cir.const #cir.int<50> : !u64i loc(#loc482)
                    %26 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc73)
                    %27 = cir.call @fwrite(%23, %24, %25, %26) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc68)
                    %28 = cir.cmp(ne, %19, %27) : !u64i, !cir.bool loc(#loc483)
                    cir.if %28 {
                      %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc76)
                      %30 = cir.const #cir.int<1> : !s32i loc(#loc77)
                      cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc76)
                    } loc(#loc484)
                  } loc(#loc479)
                } loc(#loc478)
                cir.yield loc(#loc57)
              } step {
                %19 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc78)
                %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc79)
                cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc485)
                cir.yield loc(#loc475)
              } loc(#loc475)
            } loc(#loc475)
            cir.scope {
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc82)
              %18 = cir.cast(ptr_to_bool, %17 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc82)
              cir.if %18 {
                %19 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc84)
                %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc85)
              } loc(#loc487)
            } loc(#loc486)
          } loc(#loc467)
          cir.break loc(#loc86)
        } loc(#loc37)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc88)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc88)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc89)
          cir.break loc(#loc90)
        } loc(#loc87)
        cir.yield loc(#loc34)
      } loc(#loc34)
    } loc(#loc466)
    cir.return loc(#loc18)
  } loc(#loc461)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc489)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc93)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc490)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc95)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc491)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc97)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc492)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc99)
    cir.return loc(#loc92)
  } loc(#loc488)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc493)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc494)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc107)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc108)
  cir.func @main(%arg0: !s32i loc(fused[#loc111, #loc112]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc113, #loc114])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc496)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc497)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc110)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc115)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc115)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc116)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc117)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc117)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc118)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc105)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__rand_fwrite_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc498)
    cir.call @CWE400_Resource_Exhaustion__rand_fwrite_15_good() : () -> () loc(#loc120)
    %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc106)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc107)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__rand_fwrite_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc499)
    cir.call @CWE400_Resource_Exhaustion__rand_fwrite_15_bad() : () -> () loc(#loc124)
    %14 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc108)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc127)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc500)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc500)
    cir.return %17 : !s32i loc(#loc500)
  } loc(#loc495)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc129)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc502)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc134)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc135)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc503)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc139)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc141)
          %5 = cir.const #cir.int<1> : !s32i loc(#loc141)
          %6 = cir.binop(and, %4, %5) : !s32i loc(#loc141)
          %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc141)
          %8 = cir.ternary(%7, true {
            %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc141)
            %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc141)
            %12 = cir.const #cir.int<30> : !s32i loc(#loc141)
            %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc141)
            %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc141)
            %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc141)
            %16 = cir.const #cir.int<15> : !s32i loc(#loc141)
            %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc141)
            %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc141)
            %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc141)
            %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc141)
            %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc141)
            cir.yield %21 : !u32i loc(#loc141)
          }, false {
            %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc141)
            %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc141)
            %12 = cir.const #cir.int<30> : !s32i loc(#loc141)
            %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc141)
            %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc141)
            %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc141)
            %16 = cir.const #cir.int<15> : !s32i loc(#loc141)
            %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc141)
            %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc141)
            %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc141)
            %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc141)
            %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc141)
            %22 = cir.unary(minus, %21) : !u32i, !u32i loc(#loc141)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc141)
            %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc141)
            %25 = cir.binop(sub, %22, %24) : !u32i loc(#loc141)
            cir.yield %25 : !u32i loc(#loc141)
          }) : (!cir.bool) -> !u32i loc(#loc141)
          %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc141)
          cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc505)
          cir.break loc(#loc143)
        } loc(#loc140)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc145)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc145)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc146)
          cir.break loc(#loc147)
        } loc(#loc144)
        cir.yield loc(#loc137)
      } loc(#loc137)
    } loc(#loc504)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc150)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc152)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc152)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc153)
          cir.break loc(#loc154)
        } loc(#loc151)
        cir.case(default, []) {
          cir.scope {
            %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc508)
            %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc509)
            %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc510)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc159)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc159)
            cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc508)
            %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc161)
            cir.store %9, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc509)
            %10 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc129)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc129)
            cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc510)
            cir.scope {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc165)
              %13 = cir.const #cir.int<0> : !s32i loc(#loc166)
              %14 = cir.cmp(gt, %12, %13) : !s32i, !cir.bool loc(#loc512)
              %15 = cir.ternary(%14, true {
                %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc168)
                %17 = cir.const #cir.int<20> : !s32i loc(#loc169)
                %18 = cir.cmp(le, %16, %17) : !s32i, !cir.bool loc(#loc513)
                %19 = cir.ternary(%18, true {
                  %20 = cir.const #true loc(#loc167)
                  cir.yield %20 : !cir.bool loc(#loc167)
                }, false {
                  %20 = cir.const #false loc(#loc167)
                  cir.yield %20 : !cir.bool loc(#loc167)
                }) : (!cir.bool) -> !cir.bool loc(#loc167)
                cir.yield %19 : !cir.bool loc(#loc167)
              }, false {
                %16 = cir.const #false loc(#loc167)
                cir.yield %16 : !cir.bool loc(#loc167)
              }) : (!cir.bool) -> !cir.bool loc(#loc167)
              cir.if %15 {
                %16 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc171)
                %17 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
                %18 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc173)
                %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc173)
                %20 = cir.call @fopen(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc171)
                cir.store %20, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc515)
                cir.scope {
                  %21 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc178)
                  %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc179)
                  %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc179)
                  %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc517)
                  cir.if %24 {
                    %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc181)
                    %26 = cir.const #cir.int<1> : !s32i loc(#loc182)
                    cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc181)
                  } loc(#loc518)
                } loc(#loc516)
                cir.scope {
                  %21 = cir.const #cir.int<0> : !s32i loc(#loc185)
                  %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc185)
                  cir.store %22, %4 : !u64i, !cir.ptr<!u64i> loc(#loc520)
                  cir.for : cond {
                    %23 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc187)
                    %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc188)
                    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc188)
                    %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc521)
                    cir.condition(%26) loc(#loc189)
                  } body {
                    cir.scope {
                      cir.scope {
                        %23 = cir.const #cir.int<50> : !u64i loc(#loc524)
                        %24 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc195)
                        %25 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc196)
                        %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc196)
                        %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc196)
                        %28 = cir.const #cir.int<1> : !u64i loc(#loc525)
                        %29 = cir.const #cir.int<50> : !u64i loc(#loc526)
                        %30 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc201)
                        %31 = cir.call @fwrite(%27, %28, %29, %30) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc195)
                        %32 = cir.cmp(ne, %23, %31) : !u64i, !cir.bool loc(#loc527)
                        cir.if %32 {
                          %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc203)
                          %34 = cir.const #cir.int<1> : !s32i loc(#loc204)
                          cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc203)
                        } loc(#loc528)
                      } loc(#loc523)
                    } loc(#loc522)
                    cir.yield loc(#loc184)
                  } step {
                    %23 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc205)
                    %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc206)
                    cir.store %24, %4 : !u64i, !cir.ptr<!u64i> loc(#loc529)
                    cir.yield loc(#loc519)
                  } loc(#loc519)
                } loc(#loc519)
                cir.scope {
                  %21 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc209)
                  %22 = cir.cast(ptr_to_bool, %21 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc209)
                  cir.if %22 {
                    %23 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc211)
                    %24 = cir.call @fclose(%23) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc212)
                  } loc(#loc531)
                } loc(#loc530)
              } loc(#loc514)
            } loc(#loc511)
          } loc(#loc507)
          cir.break loc(#loc213)
        } loc(#loc155)
        cir.yield loc(#loc148)
      } loc(#loc148)
    } loc(#loc506)
    cir.return loc(#loc131)
  } loc(#loc501)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc533)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc218)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc219)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc534)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc223)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc225)
          %5 = cir.const #cir.int<1> : !s32i loc(#loc225)
          %6 = cir.binop(and, %4, %5) : !s32i loc(#loc225)
          %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc225)
          %8 = cir.ternary(%7, true {
            %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc225)
            %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc225)
            %12 = cir.const #cir.int<30> : !s32i loc(#loc225)
            %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc225)
            %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc225)
            %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc225)
            %16 = cir.const #cir.int<15> : !s32i loc(#loc225)
            %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc225)
            %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc225)
            %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc225)
            %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc225)
            %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc225)
            cir.yield %21 : !u32i loc(#loc225)
          }, false {
            %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc225)
            %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc225)
            %12 = cir.const #cir.int<30> : !s32i loc(#loc225)
            %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc225)
            %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc225)
            %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc225)
            %16 = cir.const #cir.int<15> : !s32i loc(#loc225)
            %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc225)
            %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc225)
            %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc225)
            %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc225)
            %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc225)
            %22 = cir.unary(minus, %21) : !u32i, !u32i loc(#loc225)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc225)
            %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc225)
            %25 = cir.binop(sub, %22, %24) : !u32i loc(#loc225)
            cir.yield %25 : !u32i loc(#loc225)
          }) : (!cir.bool) -> !u32i loc(#loc225)
          %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc225)
          cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc536)
          cir.break loc(#loc227)
        } loc(#loc224)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc229)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc229)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc230)
          cir.break loc(#loc231)
        } loc(#loc228)
        cir.yield loc(#loc221)
      } loc(#loc221)
    } loc(#loc535)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc234)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc539)
            %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc540)
            %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc541)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc239)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc239)
            cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc539)
            %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc241)
            cir.store %9, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc540)
            %10 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc243)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc243)
            cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc541)
            cir.scope {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc246)
              %13 = cir.const #cir.int<0> : !s32i loc(#loc247)
              %14 = cir.cmp(gt, %12, %13) : !s32i, !cir.bool loc(#loc543)
              %15 = cir.ternary(%14, true {
                %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc249)
                %17 = cir.const #cir.int<20> : !s32i loc(#loc250)
                %18 = cir.cmp(le, %16, %17) : !s32i, !cir.bool loc(#loc544)
                %19 = cir.ternary(%18, true {
                  %20 = cir.const #true loc(#loc248)
                  cir.yield %20 : !cir.bool loc(#loc248)
                }, false {
                  %20 = cir.const #false loc(#loc248)
                  cir.yield %20 : !cir.bool loc(#loc248)
                }) : (!cir.bool) -> !cir.bool loc(#loc248)
                cir.yield %19 : !cir.bool loc(#loc248)
              }, false {
                %16 = cir.const #false loc(#loc248)
                cir.yield %16 : !cir.bool loc(#loc248)
              }) : (!cir.bool) -> !cir.bool loc(#loc248)
              cir.if %15 {
                %16 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc252)
                %17 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc253)
                %18 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc254)
                %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc254)
                %20 = cir.call @fopen(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc252)
                cir.store %20, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc546)
                cir.scope {
                  %21 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc259)
                  %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc260)
                  %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc260)
                  %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc548)
                  cir.if %24 {
                    %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc262)
                    %26 = cir.const #cir.int<1> : !s32i loc(#loc263)
                    cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc262)
                  } loc(#loc549)
                } loc(#loc547)
                cir.scope {
                  %21 = cir.const #cir.int<0> : !s32i loc(#loc266)
                  %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc266)
                  cir.store %22, %4 : !u64i, !cir.ptr<!u64i> loc(#loc551)
                  cir.for : cond {
                    %23 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc268)
                    %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc269)
                    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc269)
                    %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc552)
                    cir.condition(%26) loc(#loc270)
                  } body {
                    cir.scope {
                      cir.scope {
                        %23 = cir.const #cir.int<50> : !u64i loc(#loc555)
                        %24 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc276)
                        %25 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc277)
                        %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc277)
                        %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc277)
                        %28 = cir.const #cir.int<1> : !u64i loc(#loc556)
                        %29 = cir.const #cir.int<50> : !u64i loc(#loc557)
                        %30 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc282)
                        %31 = cir.call @fwrite(%27, %28, %29, %30) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc276)
                        %32 = cir.cmp(ne, %23, %31) : !u64i, !cir.bool loc(#loc558)
                        cir.if %32 {
                          %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc284)
                          %34 = cir.const #cir.int<1> : !s32i loc(#loc285)
                          cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc284)
                        } loc(#loc559)
                      } loc(#loc554)
                    } loc(#loc553)
                    cir.yield loc(#loc265)
                  } step {
                    %23 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc286)
                    %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc287)
                    cir.store %24, %4 : !u64i, !cir.ptr<!u64i> loc(#loc560)
                    cir.yield loc(#loc550)
                  } loc(#loc550)
                } loc(#loc550)
                cir.scope {
                  %21 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc290)
                  %22 = cir.cast(ptr_to_bool, %21 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc290)
                  cir.if %22 {
                    %23 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc292)
                    %24 = cir.call @fclose(%23) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc293)
                  } loc(#loc562)
                } loc(#loc561)
              } loc(#loc545)
            } loc(#loc542)
          } loc(#loc538)
          cir.break loc(#loc294)
        } loc(#loc235)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc296)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc296)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc297)
          cir.break loc(#loc298)
        } loc(#loc295)
        cir.yield loc(#loc232)
      } loc(#loc232)
    } loc(#loc537)
    cir.return loc(#loc215)
  } loc(#loc532)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc564)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc303)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc304)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc565)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc308)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc310)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc310)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc311)
          cir.break loc(#loc312)
        } loc(#loc309)
        cir.case(default, []) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc314)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc567)
          cir.break loc(#loc316)
        } loc(#loc313)
        cir.yield loc(#loc306)
      } loc(#loc306)
    } loc(#loc566)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc319)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc570)
            %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc571)
            %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc572)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc324)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc324)
            cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc570)
            %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc326)
            cir.store %9, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc571)
            %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc328)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc328)
            cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc572)
            %12 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc329)
            %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc330)
            %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc331)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc331)
            %16 = cir.call @fopen(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc329)
            cir.store %16, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc573)
            cir.scope {
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc336)
              %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc337)
              %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc337)
              %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc575)
              cir.if %20 {
                %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc339)
                %22 = cir.const #cir.int<1> : !s32i loc(#loc340)
                cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc339)
              } loc(#loc576)
            } loc(#loc574)
            cir.scope {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc343)
              %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc343)
              cir.store %18, %4 : !u64i, !cir.ptr<!u64i> loc(#loc578)
              cir.for : cond {
                %19 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc345)
                %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc346)
                %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc346)
                %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc579)
                cir.condition(%22) loc(#loc347)
              } body {
                cir.scope {
                  cir.scope {
                    %19 = cir.const #cir.int<50> : !u64i loc(#loc582)
                    %20 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc353)
                    %21 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc354)
                    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc354)
                    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc354)
                    %24 = cir.const #cir.int<1> : !u64i loc(#loc583)
                    %25 = cir.const #cir.int<50> : !u64i loc(#loc584)
                    %26 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc359)
                    %27 = cir.call @fwrite(%23, %24, %25, %26) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc353)
                    %28 = cir.cmp(ne, %19, %27) : !u64i, !cir.bool loc(#loc585)
                    cir.if %28 {
                      %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc362)
                      %30 = cir.const #cir.int<1> : !s32i loc(#loc363)
                      cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc362)
                    } loc(#loc586)
                  } loc(#loc581)
                } loc(#loc580)
                cir.yield loc(#loc342)
              } step {
                %19 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc364)
                %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc365)
                cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc587)
                cir.yield loc(#loc577)
              } loc(#loc577)
            } loc(#loc577)
            cir.scope {
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc368)
              %18 = cir.cast(ptr_to_bool, %17 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc368)
              cir.if %18 {
                %19 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc370)
                %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc371)
              } loc(#loc589)
            } loc(#loc588)
          } loc(#loc569)
          cir.break loc(#loc372)
        } loc(#loc320)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc374)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc374)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc375)
          cir.break loc(#loc376)
        } loc(#loc373)
        cir.yield loc(#loc317)
      } loc(#loc317)
    } loc(#loc568)
    cir.return loc(#loc300)
  } loc(#loc563)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc591)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc381)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc382)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc592)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc386)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc388)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc594)
          cir.break loc(#loc390)
        } loc(#loc387)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc392)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc392)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc393)
          cir.break loc(#loc394)
        } loc(#loc391)
        cir.yield loc(#loc384)
      } loc(#loc384)
    } loc(#loc593)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc397)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc597)
            %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc598)
            %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc599)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc402)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc402)
            cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc597)
            %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc404)
            cir.store %9, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc598)
            %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc406)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc406)
            cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc599)
            %12 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc407)
            %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc408)
            %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc409)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc409)
            %16 = cir.call @fopen(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc407)
            cir.store %16, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc600)
            cir.scope {
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc414)
              %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc415)
              %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc415)
              %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc602)
              cir.if %20 {
                %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc417)
                %22 = cir.const #cir.int<1> : !s32i loc(#loc418)
                cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc417)
              } loc(#loc603)
            } loc(#loc601)
            cir.scope {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc421)
              %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc421)
              cir.store %18, %4 : !u64i, !cir.ptr<!u64i> loc(#loc605)
              cir.for : cond {
                %19 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc423)
                %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc424)
                %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc424)
                %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc606)
                cir.condition(%22) loc(#loc425)
              } body {
                cir.scope {
                  cir.scope {
                    %19 = cir.const #cir.int<50> : !u64i loc(#loc609)
                    %20 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc431)
                    %21 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc432)
                    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc432)
                    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc432)
                    %24 = cir.const #cir.int<1> : !u64i loc(#loc610)
                    %25 = cir.const #cir.int<50> : !u64i loc(#loc611)
                    %26 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc437)
                    %27 = cir.call @fwrite(%23, %24, %25, %26) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc431)
                    %28 = cir.cmp(ne, %19, %27) : !u64i, !cir.bool loc(#loc612)
                    cir.if %28 {
                      %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc440)
                      %30 = cir.const #cir.int<1> : !s32i loc(#loc441)
                      cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc440)
                    } loc(#loc613)
                  } loc(#loc608)
                } loc(#loc607)
                cir.yield loc(#loc420)
              } step {
                %19 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc442)
                %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc443)
                cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc614)
                cir.yield loc(#loc604)
              } loc(#loc604)
            } loc(#loc604)
            cir.scope {
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc446)
              %18 = cir.cast(ptr_to_bool, %17 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc446)
              cir.if %18 {
                %19 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc448)
                %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc449)
              } loc(#loc616)
            } loc(#loc615)
          } loc(#loc596)
          cir.break loc(#loc450)
        } loc(#loc398)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc452)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc452)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc453)
          cir.break loc(#loc454)
        } loc(#loc451)
        cir.yield loc(#loc395)
      } loc(#loc395)
    } loc(#loc595)
    cir.return loc(#loc378)
  } loc(#loc590)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":37:19)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":46:32)
#loc7 = loc("/usr/include/stdio.h":264:1)
#loc8 = loc("/usr/include/stdio.h":266:3)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":47:33)
#loc10 = loc("/usr/include/stdlib.h":756:1)
#loc11 = loc("/usr/include/stdlib.h":756:70)
#loc12 = loc("/usr/include/stdio.h":735:1)
#loc13 = loc("/usr/include/stdio.h":736:43)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:44)
#loc15 = loc("/usr/include/stdio.h":184:1)
#loc16 = loc("/usr/include/stdio.h":184:36)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":24:1)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":72:1)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":26:5)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":26:9)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":28:14)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":28:13)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":28:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":29:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":39:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":29:12)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":31:5)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":33:17)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":33:9)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":34:9)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":35:5)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":37:9)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":38:9)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":40:5)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":71:5)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":40:12)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":42:5)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":43:5)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":65:5)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":44:9)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":44:20)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":45:9)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":45:23)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":46:9)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":47:17)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":47:23)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":47:9)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":47:37)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":48:9)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":51:9)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":48:13)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":48:22)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":49:9)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":50:13)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":50:18)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":54:9)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":60:9)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":54:18)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":54:14)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":54:21)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":54:33)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":54:23)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":55:9)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:13)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":59:13)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:17)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:32)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:37)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:54)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:65)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:68)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:83)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:86)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":56:91)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":57:13)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":58:17)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":58:22)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":54:41)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":54:40)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":61:9)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":64:9)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":61:13)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":62:9)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":63:20)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":63:13)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":66:5)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":67:5)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":69:19)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":69:9)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":70:9)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":280:1)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":286:1)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":282:5)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":282:14)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":283:5)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":283:14)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":284:5)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":284:14)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":285:5)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":285:14)
#loc101 = loc("/usr/include/stdlib.h":575:1)
#loc102 = loc("/usr/include/stdlib.h":575:41)
#loc103 = loc("/usr/include/time.h":76:1)
#loc104 = loc("/usr/include/time.h":76:38)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":302:15)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":304:15)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":307:15)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":309:15)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":297:1)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":312:1)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":298:1)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":300:27)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":300:22)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":300:5)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":302:5)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":303:5)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":303:53)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":304:5)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":307:5)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":308:5)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":308:52)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":309:5)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":311:12)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":311:5)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":105:32)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":79:1)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":126:1)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":81:5)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":81:9)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":83:14)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":83:13)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":83:5)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":84:5)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":94:5)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":84:12)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":86:5)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":88:17)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":88:9)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":89:9)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":90:5)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":92:19)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":92:9)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":93:9)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":95:5)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":125:5)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":95:12)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":97:5)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":99:19)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":99:9)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":100:9)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":101:5)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":102:5)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":123:5)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":103:9)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":103:20)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":104:9)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":104:23)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":105:9)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":107:9)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":122:9)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":107:13)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":107:21)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":107:23)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":107:26)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":107:35)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":108:9)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":109:21)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":109:27)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":109:37)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":109:13)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":109:41)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":110:13)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":113:13)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":110:17)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":110:26)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":111:13)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":112:17)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":112:22)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":114:13)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":117:13)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":114:22)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":114:18)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":114:25)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":114:37)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":114:27)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":115:13)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:17)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:104)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:21)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:36)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:41)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:48)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:58)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:69)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:72)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:87)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:90)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:95)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:98)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":116:103)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":114:45)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":114:44)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":118:13)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":121:13)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":118:17)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":119:13)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":120:24)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":120:17)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":124:5)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":129:1)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":176:1)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":131:5)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":131:9)
#loc218 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":133:14)
#loc219 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":133:13)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":133:5)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":134:5)
#loc222 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":144:5)
#loc223 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":134:12)
#loc224 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":136:5)
#loc225 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":138:17)
#loc226 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":138:9)
#loc227 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":139:9)
#loc228 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":140:5)
#loc229 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":142:19)
#loc230 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":142:9)
#loc231 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":143:9)
#loc232 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":145:5)
#loc233 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":175:5)
#loc234 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":145:12)
#loc235 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":147:5)
#loc236 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":148:5)
#loc237 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":169:5)
#loc238 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":149:9)
#loc239 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":149:20)
#loc240 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":150:9)
#loc241 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":150:23)
#loc242 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":151:9)
#loc243 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":151:32)
#loc244 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":153:9)
#loc245 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":168:9)
#loc246 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":153:13)
#loc247 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":153:21)
#loc248 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":153:23)
#loc249 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":153:26)
#loc250 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":153:35)
#loc251 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":154:9)
#loc252 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":155:21)
#loc253 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":155:27)
#loc254 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":155:37)
#loc255 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":155:13)
#loc256 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":155:41)
#loc257 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":156:13)
#loc258 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":159:13)
#loc259 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":156:17)
#loc260 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":156:26)
#loc261 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":157:13)
#loc262 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":158:17)
#loc263 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":158:22)
#loc264 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":160:13)
#loc265 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":163:13)
#loc266 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":160:22)
#loc267 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":160:18)
#loc268 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":160:25)
#loc269 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":160:37)
#loc270 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":160:27)
#loc271 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":161:13)
#loc272 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:17)
#loc273 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:104)
#loc274 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:21)
#loc275 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:36)
#loc276 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:41)
#loc277 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:48)
#loc278 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:58)
#loc279 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:69)
#loc280 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:72)
#loc281 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:87)
#loc282 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:90)
#loc283 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:95)
#loc284 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:98)
#loc285 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":162:103)
#loc286 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":160:45)
#loc287 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":160:44)
#loc288 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":164:13)
#loc289 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":167:13)
#loc290 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":164:17)
#loc291 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":165:13)
#loc292 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":166:24)
#loc293 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":166:17)
#loc294 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":170:5)
#loc295 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":171:5)
#loc296 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":173:19)
#loc297 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":173:9)
#loc298 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":174:9)
#loc299 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":179:1)
#loc300 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":227:1)
#loc301 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":181:5)
#loc302 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":181:9)
#loc303 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":183:14)
#loc304 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":183:13)
#loc305 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":183:5)
#loc306 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":184:5)
#loc307 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":194:5)
#loc308 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":184:12)
#loc309 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":186:5)
#loc310 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":188:19)
#loc311 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":188:9)
#loc312 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":189:9)
#loc313 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":190:5)
#loc314 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":192:17)
#loc315 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":192:9)
#loc316 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":193:9)
#loc317 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":195:5)
#loc318 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":226:5)
#loc319 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":195:12)
#loc320 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":197:5)
#loc321 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":198:5)
#loc322 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":220:5)
#loc323 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":199:9)
#loc324 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":199:20)
#loc325 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":200:9)
#loc326 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":200:23)
#loc327 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":201:9)
#loc328 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":201:32)
#loc329 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":202:17)
#loc330 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":202:23)
#loc331 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":202:33)
#loc332 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":202:9)
#loc333 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":202:37)
#loc334 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":203:9)
#loc335 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":206:9)
#loc336 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":203:13)
#loc337 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":203:22)
#loc338 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":204:9)
#loc339 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":205:13)
#loc340 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":205:18)
#loc341 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":209:9)
#loc342 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":215:9)
#loc343 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":209:18)
#loc344 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":209:14)
#loc345 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":209:21)
#loc346 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":209:33)
#loc347 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":209:23)
#loc348 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":210:9)
#loc349 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:13)
#loc350 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":214:13)
#loc351 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:17)
#loc352 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:32)
#loc353 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:37)
#loc354 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:44)
#loc355 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:54)
#loc356 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:65)
#loc357 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:68)
#loc358 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:83)
#loc359 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:86)
#loc360 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":211:91)
#loc361 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":212:13)
#loc362 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":213:17)
#loc363 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":213:22)
#loc364 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":209:41)
#loc365 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":209:40)
#loc366 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":216:9)
#loc367 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":219:9)
#loc368 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":216:13)
#loc369 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":217:9)
#loc370 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":218:20)
#loc371 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":218:13)
#loc372 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":221:5)
#loc373 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":222:5)
#loc374 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":224:19)
#loc375 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":224:9)
#loc376 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":225:9)
#loc377 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":230:1)
#loc378 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":278:1)
#loc379 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":232:5)
#loc380 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":232:9)
#loc381 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":234:14)
#loc382 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":234:13)
#loc383 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":234:5)
#loc384 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":235:5)
#loc385 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":245:5)
#loc386 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":235:12)
#loc387 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":237:5)
#loc388 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":239:17)
#loc389 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":239:9)
#loc390 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":240:9)
#loc391 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":241:5)
#loc392 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":243:19)
#loc393 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":243:9)
#loc394 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":244:9)
#loc395 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":246:5)
#loc396 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":277:5)
#loc397 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":246:12)
#loc398 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":248:5)
#loc399 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":249:5)
#loc400 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":271:5)
#loc401 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":250:9)
#loc402 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":250:20)
#loc403 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":251:9)
#loc404 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":251:23)
#loc405 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":252:9)
#loc406 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":252:32)
#loc407 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":253:17)
#loc408 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":253:23)
#loc409 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":253:33)
#loc410 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":253:9)
#loc411 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":253:37)
#loc412 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":254:9)
#loc413 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":257:9)
#loc414 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":254:13)
#loc415 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":254:22)
#loc416 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":255:9)
#loc417 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":256:13)
#loc418 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":256:18)
#loc419 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":260:9)
#loc420 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":266:9)
#loc421 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":260:18)
#loc422 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":260:14)
#loc423 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":260:21)
#loc424 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":260:33)
#loc425 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":260:23)
#loc426 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":261:9)
#loc427 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:13)
#loc428 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":265:13)
#loc429 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:17)
#loc430 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:32)
#loc431 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:37)
#loc432 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:44)
#loc433 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:54)
#loc434 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:65)
#loc435 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:68)
#loc436 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:83)
#loc437 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:86)
#loc438 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":262:91)
#loc439 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":263:13)
#loc440 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":264:17)
#loc441 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":264:22)
#loc442 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":260:41)
#loc443 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":260:40)
#loc444 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":267:9)
#loc445 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":270:9)
#loc446 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":267:13)
#loc447 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":268:9)
#loc448 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":269:20)
#loc449 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":269:13)
#loc450 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":272:5)
#loc451 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":273:5)
#loc452 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":275:19)
#loc453 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":275:9)
#loc454 = loc("CWE400_Resource_Exhaustion__rand_fwrite_15.c":276:9)
#loc455 = loc(fused[#loc1, #loc2])
#loc456 = loc(fused[#loc3, #loc4])
#loc457 = loc(fused[#loc7, #loc8])
#loc458 = loc(fused[#loc10, #loc11])
#loc459 = loc(fused[#loc12, #loc13])
#loc460 = loc(fused[#loc15, #loc16])
#loc461 = loc(fused[#loc17, #loc18])
#loc462 = loc(fused[#loc19, #loc20])
#loc463 = loc(fused[#loc23, #loc21])
#loc464 = loc(fused[#loc24, #loc25])
#loc465 = loc(fused[#loc29, #loc28])
#loc466 = loc(fused[#loc34, #loc35])
#loc467 = loc(fused[#loc38, #loc39])
#loc468 = loc(fused[#loc40, #loc41])
#loc469 = loc(fused[#loc42, #loc43])
#loc470 = loc(fused[#loc44, #loc6])
#loc471 = loc(fused[#loc47, #loc48])
#loc472 = loc(fused[#loc49, #loc50])
#loc473 = loc(fused[#loc51, #loc52])
#loc474 = loc(fused[#loc53, #loc50])
#loc475 = loc(fused[#loc56, #loc57])
#loc476 = loc(fused[#loc59, #loc58])
#loc477 = loc(fused[#loc60, #loc61])
#loc478 = loc(fused[#loc63, #loc57])
#loc479 = loc(fused[#loc64, #loc65])
#loc480 = loc(fused[#loc66, #loc67])
#loc481 = loc(fused[#loc69, #loc70])
#loc482 = loc(fused[#loc71, #loc72])
#loc483 = loc(fused[#loc66, #loc74])
#loc484 = loc(fused[#loc75, #loc65])
#loc485 = loc(fused[#loc79, #loc78])
#loc486 = loc(fused[#loc80, #loc81])
#loc487 = loc(fused[#loc83, #loc81])
#loc488 = loc(fused[#loc91, #loc92])
#loc489 = loc(fused[#loc93, #loc94])
#loc490 = loc(fused[#loc95, #loc96])
#loc491 = loc(fused[#loc97, #loc98])
#loc492 = loc(fused[#loc99, #loc100])
#loc493 = loc(fused[#loc101, #loc102])
#loc494 = loc(fused[#loc103, #loc104])
#loc495 = loc(fused[#loc109, #loc110])
#loc498 = loc(fused[#loc120, #loc121])
#loc499 = loc(fused[#loc124, #loc125])
#loc500 = loc(fused[#loc128, #loc127])
#loc501 = loc(fused[#loc130, #loc131])
#loc502 = loc(fused[#loc132, #loc133])
#loc503 = loc(fused[#loc136, #loc134])
#loc504 = loc(fused[#loc137, #loc138])
#loc505 = loc(fused[#loc142, #loc141])
#loc506 = loc(fused[#loc148, #loc149])
#loc507 = loc(fused[#loc156, #loc157])
#loc508 = loc(fused[#loc158, #loc159])
#loc509 = loc(fused[#loc160, #loc161])
#loc510 = loc(fused[#loc162, #loc129])
#loc511 = loc(fused[#loc163, #loc164])
#loc512 = loc(fused[#loc165, #loc166])
#loc513 = loc(fused[#loc168, #loc169])
#loc514 = loc(fused[#loc170, #loc164])
#loc515 = loc(fused[#loc174, #loc175])
#loc516 = loc(fused[#loc176, #loc177])
#loc517 = loc(fused[#loc178, #loc179])
#loc518 = loc(fused[#loc180, #loc177])
#loc519 = loc(fused[#loc183, #loc184])
#loc520 = loc(fused[#loc186, #loc185])
#loc521 = loc(fused[#loc187, #loc188])
#loc522 = loc(fused[#loc190, #loc184])
#loc523 = loc(fused[#loc191, #loc192])
#loc524 = loc(fused[#loc193, #loc194])
#loc525 = loc(fused[#loc197, #loc198])
#loc526 = loc(fused[#loc199, #loc200])
#loc527 = loc(fused[#loc193, #loc202])
#loc528 = loc(fused[#loc203, #loc192])
#loc529 = loc(fused[#loc206, #loc205])
#loc530 = loc(fused[#loc207, #loc208])
#loc531 = loc(fused[#loc210, #loc208])
#loc532 = loc(fused[#loc214, #loc215])
#loc533 = loc(fused[#loc216, #loc217])
#loc534 = loc(fused[#loc220, #loc218])
#loc535 = loc(fused[#loc221, #loc222])
#loc536 = loc(fused[#loc226, #loc225])
#loc537 = loc(fused[#loc232, #loc233])
#loc538 = loc(fused[#loc236, #loc237])
#loc539 = loc(fused[#loc238, #loc239])
#loc540 = loc(fused[#loc240, #loc241])
#loc541 = loc(fused[#loc242, #loc243])
#loc542 = loc(fused[#loc244, #loc245])
#loc543 = loc(fused[#loc246, #loc247])
#loc544 = loc(fused[#loc249, #loc250])
#loc545 = loc(fused[#loc251, #loc245])
#loc546 = loc(fused[#loc255, #loc256])
#loc547 = loc(fused[#loc257, #loc258])
#loc548 = loc(fused[#loc259, #loc260])
#loc549 = loc(fused[#loc261, #loc258])
#loc550 = loc(fused[#loc264, #loc265])
#loc551 = loc(fused[#loc267, #loc266])
#loc552 = loc(fused[#loc268, #loc269])
#loc553 = loc(fused[#loc271, #loc265])
#loc554 = loc(fused[#loc272, #loc273])
#loc555 = loc(fused[#loc274, #loc275])
#loc556 = loc(fused[#loc278, #loc279])
#loc557 = loc(fused[#loc280, #loc281])
#loc558 = loc(fused[#loc274, #loc283])
#loc559 = loc(fused[#loc284, #loc273])
#loc560 = loc(fused[#loc287, #loc286])
#loc561 = loc(fused[#loc288, #loc289])
#loc562 = loc(fused[#loc291, #loc289])
#loc563 = loc(fused[#loc299, #loc300])
#loc564 = loc(fused[#loc301, #loc302])
#loc565 = loc(fused[#loc305, #loc303])
#loc566 = loc(fused[#loc306, #loc307])
#loc567 = loc(fused[#loc315, #loc314])
#loc568 = loc(fused[#loc317, #loc318])
#loc569 = loc(fused[#loc321, #loc322])
#loc570 = loc(fused[#loc323, #loc324])
#loc571 = loc(fused[#loc325, #loc326])
#loc572 = loc(fused[#loc327, #loc328])
#loc573 = loc(fused[#loc332, #loc333])
#loc574 = loc(fused[#loc334, #loc335])
#loc575 = loc(fused[#loc336, #loc337])
#loc576 = loc(fused[#loc338, #loc335])
#loc577 = loc(fused[#loc341, #loc342])
#loc578 = loc(fused[#loc344, #loc343])
#loc579 = loc(fused[#loc345, #loc346])
#loc580 = loc(fused[#loc348, #loc342])
#loc581 = loc(fused[#loc349, #loc350])
#loc582 = loc(fused[#loc351, #loc352])
#loc583 = loc(fused[#loc355, #loc356])
#loc584 = loc(fused[#loc357, #loc358])
#loc585 = loc(fused[#loc351, #loc360])
#loc586 = loc(fused[#loc361, #loc350])
#loc587 = loc(fused[#loc365, #loc364])
#loc588 = loc(fused[#loc366, #loc367])
#loc589 = loc(fused[#loc369, #loc367])
#loc590 = loc(fused[#loc377, #loc378])
#loc591 = loc(fused[#loc379, #loc380])
#loc592 = loc(fused[#loc383, #loc381])
#loc593 = loc(fused[#loc384, #loc385])
#loc594 = loc(fused[#loc389, #loc388])
#loc595 = loc(fused[#loc395, #loc396])
#loc596 = loc(fused[#loc399, #loc400])
#loc597 = loc(fused[#loc401, #loc402])
#loc598 = loc(fused[#loc403, #loc404])
#loc599 = loc(fused[#loc405, #loc406])
#loc600 = loc(fused[#loc410, #loc411])
#loc601 = loc(fused[#loc412, #loc413])
#loc602 = loc(fused[#loc414, #loc415])
#loc603 = loc(fused[#loc416, #loc413])
#loc604 = loc(fused[#loc419, #loc420])
#loc605 = loc(fused[#loc422, #loc421])
#loc606 = loc(fused[#loc423, #loc424])
#loc607 = loc(fused[#loc426, #loc420])
#loc608 = loc(fused[#loc427, #loc428])
#loc609 = loc(fused[#loc429, #loc430])
#loc610 = loc(fused[#loc433, #loc434])
#loc611 = loc(fused[#loc435, #loc436])
#loc612 = loc(fused[#loc429, #loc438])
#loc613 = loc(fused[#loc439, #loc428])
#loc614 = loc(fused[#loc443, #loc442])
#loc615 = loc(fused[#loc444, #loc445])
#loc616 = loc(fused[#loc447, #loc445])
