!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc12 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":25:21)
#loc13 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":25:25)
#loc55 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":59:26)
#loc56 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":59:30)
#loc96 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":94:26)
#loc97 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":94:30)
#loc135 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":124:25)
#loc136 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":124:29)
#loc167 = loc(fused[#loc12, #loc13])
#loc184 = loc(fused[#loc55, #loc56])
#loc198 = loc(fused[#loc96, #loc97])
#loc212 = loc(fused[#loc135, #loc136])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_fscanf_postinc_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc162)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc164)
  cir.func private @printIntLine(!s32i) loc(#loc165)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc12, #loc13])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc168)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc167)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc16)
    cir.br ^bb1 loc(#loc169)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc164)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc170)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc171)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc24)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc26)
    cir.br ^bb4 loc(#loc22)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc18)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc18)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc11)
  } loc(#loc166)
  cir.func no_proto @CWE190_Integer_Overflow__int_fscanf_postinc_21_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc174)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc31)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc33)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc163)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc33)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %9 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc164)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    cir.call @badSink(%10) : (!s32i) -> () loc(#loc38)
    cir.return loc(#loc28)
  } loc(#loc173)
  cir.func no_proto @CWE190_Integer_Overflow__int_fscanf_postinc_21_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc178)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc179)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc180)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    cir.return loc(#loc40)
  } loc(#loc177)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc181)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc52)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc55, #loc56])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc185)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc184)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc59)
    cir.br ^bb1 loc(#loc186)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc181)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc62)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc187)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc51)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    cir.br ^bb9 loc(#loc64)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc188)
  ^bb4:  // pred: ^bb3
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    %8 = cir.const #cir.int<2147483647> : !s32i loc(#loc70)
    %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc189)
    cir.brcond %9 ^bb5, ^bb6 loc(#loc190)
  ^bb5:  // pred: ^bb4
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %11 = cir.unary(inc, %10) nsw : !s32i, !s32i loc(#loc75)
    cir.store %11, %1 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc77)
    cir.br ^bb7 loc(#loc72)
  ^bb6:  // pred: ^bb4
    %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc52)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    cir.br ^bb7 loc(#loc68)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc68)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc61)
  ^bb9:  // 2 preds: ^bb2, ^bb8
    cir.br ^bb10 loc(#loc61)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc54)
  } loc(#loc183)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc193)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc83)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc85)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc163)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc86)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc87)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc87)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc85)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %9 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc181)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    cir.call @goodB2G1Sink(%10) : (!s32i) -> () loc(#loc91)
    cir.return loc(#loc80)
  } loc(#loc192)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc196)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc96, #loc97])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc199)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc198)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    cir.br ^bb1 loc(#loc200)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc196)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc103)
    cir.brcond %4 ^bb2, ^bb8 loc(#loc201)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc202)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc108)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc203)
    cir.brcond %7 ^bb4, ^bb5 loc(#loc204)
  ^bb4:  // pred: ^bb3
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %9 = cir.unary(inc, %8) nsw : !s32i, !s32i loc(#loc113)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc115)
    cir.br ^bb6 loc(#loc110)
  ^bb5:  // pred: ^bb3
    %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc116)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    cir.br ^bb6 loc(#loc106)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc106)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc102)
  ^bb8:  // 2 preds: ^bb1, ^bb7
    cir.br ^bb9 loc(#loc102)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc95)
  } loc(#loc197)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc207)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc122)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc124)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc163)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc125)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc126)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc126)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc124)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %9 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc196)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    cir.call @goodB2G2Sink(%10) : (!s32i) -> () loc(#loc130)
    cir.return loc(#loc119)
  } loc(#loc206)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc210)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc135, #loc136])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc213)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc212)
    cir.store %arg0, %1 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    cir.br ^bb1 loc(#loc214)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc210)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc142)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc215)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc216)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc147)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc149)
    cir.br ^bb4 loc(#loc145)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc141)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc141)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc134)
  } loc(#loc211)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc219)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc154)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc156)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc158)
    %4 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc210)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    cir.call @goodG2BSink(%5) : (!s32i) -> () loc(#loc161)
    cir.return loc(#loc151)
  } loc(#loc218)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_fscanf_postinc_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":44:19)
#loc6 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":23:1)
#loc7 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":23:24)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":25:1)
#loc11 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":36:1)
#loc14 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":32:13)
#loc15 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":32:26)
#loc16 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":26:1)
#loc17 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":27:5)
#loc18 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":35:5)
#loc19 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":27:8)
#loc20 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":28:5)
#loc21 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":29:9)
#loc22 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":34:9)
#loc23 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":31:17)
#loc24 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":31:13)
#loc25 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":33:26)
#loc26 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":33:13)
#loc27 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":38:1)
#loc28 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":47:1)
#loc29 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":40:5)
#loc30 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":40:9)
#loc31 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":42:12)
#loc32 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":42:5)
#loc33 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":44:5)
#loc34 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":44:12)
#loc35 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":45:17)
#loc36 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":45:5)
#loc37 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":46:13)
#loc38 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":46:5)
#loc39 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":148:1)
#loc40 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":153:1)
#loc41 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":150:5)
#loc42 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":150:14)
#loc43 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":151:5)
#loc44 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":151:14)
#loc45 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":152:5)
#loc46 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":152:13)
#loc47 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":54:1)
#loc48 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":54:29)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc51 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":64:19)
#loc52 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":77:23)
#loc53 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":59:1)
#loc54 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":80:1)
#loc57 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":72:13)
#loc58 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":72:26)
#loc59 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":60:1)
#loc60 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":61:5)
#loc61 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":79:5)
#loc62 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":61:8)
#loc63 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":62:5)
#loc64 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":65:5)
#loc65 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":67:5)
#loc66 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":64:9)
#loc67 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":69:9)
#loc68 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":78:9)
#loc69 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":69:13)
#loc70 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":69:20)
#loc71 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":70:9)
#loc72 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":74:9)
#loc73 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":76:9)
#loc74 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":71:17)
#loc75 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":71:13)
#loc76 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":73:26)
#loc77 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":73:13)
#loc78 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":77:13)
#loc79 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":82:1)
#loc80 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":91:1)
#loc81 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":84:5)
#loc82 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":84:9)
#loc83 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":86:12)
#loc84 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":86:5)
#loc85 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":88:5)
#loc86 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":88:12)
#loc87 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":88:19)
#loc88 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":89:22)
#loc89 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":89:5)
#loc90 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":90:18)
#loc91 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":90:5)
#loc92 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":55:1)
#loc93 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":55:29)
#loc94 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":94:1)
#loc95 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":110:1)
#loc98 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":102:13)
#loc99 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":102:26)
#loc100 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":95:1)
#loc101 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":96:5)
#loc102 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":109:5)
#loc103 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":96:8)
#loc104 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":97:5)
#loc105 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":99:9)
#loc106 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":108:9)
#loc107 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":99:13)
#loc108 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":99:20)
#loc109 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":100:9)
#loc110 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":104:9)
#loc111 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":106:9)
#loc112 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":101:17)
#loc113 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":101:13)
#loc114 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":103:26)
#loc115 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":103:13)
#loc116 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":107:23)
#loc117 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":107:13)
#loc118 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":112:1)
#loc119 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":121:1)
#loc120 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":114:5)
#loc121 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":114:9)
#loc122 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":116:12)
#loc123 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":116:5)
#loc124 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":118:5)
#loc125 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":118:12)
#loc126 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":118:19)
#loc127 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":119:22)
#loc128 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":119:5)
#loc129 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":120:18)
#loc130 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":120:5)
#loc131 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":56:1)
#loc132 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":56:28)
#loc133 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":124:1)
#loc134 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":135:1)
#loc137 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":131:13)
#loc138 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":131:26)
#loc139 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":125:1)
#loc140 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":126:5)
#loc141 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":134:5)
#loc142 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":126:8)
#loc143 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":127:5)
#loc144 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":128:9)
#loc145 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":133:9)
#loc146 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":130:17)
#loc147 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":130:13)
#loc148 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":132:26)
#loc149 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":132:13)
#loc150 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":137:1)
#loc151 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":146:1)
#loc152 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":139:5)
#loc153 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":139:9)
#loc154 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":141:12)
#loc155 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":141:5)
#loc156 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":143:12)
#loc157 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":143:5)
#loc158 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":144:21)
#loc159 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":144:5)
#loc160 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":145:17)
#loc161 = loc("CWE190_Integer_Overflow__int_fscanf_postinc_21.c":145:5)
#loc162 = loc(fused[#loc1, #loc2])
#loc163 = loc(fused[#loc3, #loc4])
#loc164 = loc(fused[#loc6, #loc7])
#loc165 = loc(fused[#loc8, #loc9])
#loc166 = loc(fused[#loc10, #loc11])
#loc168 = loc(fused[#loc14, #loc15])
#loc169 = loc(fused[#loc17, #loc18])
#loc170 = loc(fused[#loc20, #loc18])
#loc171 = loc(fused[#loc21, #loc22])
#loc172 = loc(fused[#loc24, #loc23])
#loc173 = loc(fused[#loc27, #loc28])
#loc174 = loc(fused[#loc29, #loc30])
#loc175 = loc(fused[#loc32, #loc31])
#loc176 = loc(fused[#loc36, #loc35])
#loc177 = loc(fused[#loc39, #loc40])
#loc178 = loc(fused[#loc41, #loc42])
#loc179 = loc(fused[#loc43, #loc44])
#loc180 = loc(fused[#loc45, #loc46])
#loc181 = loc(fused[#loc47, #loc48])
#loc182 = loc(fused[#loc49, #loc50])
#loc183 = loc(fused[#loc53, #loc54])
#loc185 = loc(fused[#loc57, #loc58])
#loc186 = loc(fused[#loc60, #loc61])
#loc187 = loc(fused[#loc63, #loc64, #loc65, #loc61])
#loc188 = loc(fused[#loc67, #loc68])
#loc189 = loc(fused[#loc69, #loc70])
#loc190 = loc(fused[#loc71, #loc72, #loc73, #loc68])
#loc191 = loc(fused[#loc75, #loc74])
#loc192 = loc(fused[#loc79, #loc80])
#loc193 = loc(fused[#loc81, #loc82])
#loc194 = loc(fused[#loc84, #loc83])
#loc195 = loc(fused[#loc89, #loc88])
#loc196 = loc(fused[#loc92, #loc93])
#loc197 = loc(fused[#loc94, #loc95])
#loc199 = loc(fused[#loc98, #loc99])
#loc200 = loc(fused[#loc101, #loc102])
#loc201 = loc(fused[#loc104, #loc102])
#loc202 = loc(fused[#loc105, #loc106])
#loc203 = loc(fused[#loc107, #loc108])
#loc204 = loc(fused[#loc109, #loc110, #loc111, #loc106])
#loc205 = loc(fused[#loc113, #loc112])
#loc206 = loc(fused[#loc118, #loc119])
#loc207 = loc(fused[#loc120, #loc121])
#loc208 = loc(fused[#loc123, #loc122])
#loc209 = loc(fused[#loc128, #loc127])
#loc210 = loc(fused[#loc131, #loc132])
#loc211 = loc(fused[#loc133, #loc134])
#loc213 = loc(fused[#loc137, #loc138])
#loc214 = loc(fused[#loc140, #loc141])
#loc215 = loc(fused[#loc143, #loc141])
#loc216 = loc(fused[#loc144, #loc145])
#loc217 = loc(fused[#loc147, #loc146])
#loc218 = loc(fused[#loc150, #loc151])
#loc219 = loc(fused[#loc152, #loc153])
#loc220 = loc(fused[#loc155, #loc154])
#loc221 = loc(fused[#loc157, #loc156])
#loc222 = loc(fused[#loc159, #loc158])
