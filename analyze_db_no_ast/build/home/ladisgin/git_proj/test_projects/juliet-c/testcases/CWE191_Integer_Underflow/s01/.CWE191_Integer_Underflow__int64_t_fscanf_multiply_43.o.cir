!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc9 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":26:23)
#loc10 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":26:32)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":50:27)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":50:36)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":70:27)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":70:36)
#loc107 = loc(fused[#loc9, #loc10])
#loc117 = loc(fused[#loc36, #loc37])
#loc127 = loc(fused[#loc61, #loc62])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc103)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc104)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc105)
  cir.func internal private  @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_43L9badSourceERl(%arg0: !cir.ptr<!s64i> loc(fused[#loc9, #loc10])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc107)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc11)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc12)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc104)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc13)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc105)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc105)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc14)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc12)
    cir.return loc(#loc8)
  } loc(#loc106)
  cir.func private  @printLongLongLine(!s64i) loc(#loc108)
  cir.func  @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_433badEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc21)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc111)
    cir.call @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_43L9badSourceERl(%0) : (!cir.ptr<!s64i>) -> () loc(#loc23)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc26)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc27)
      %4 = cir.cast(integral, %3 : !s32i), !s64i loc(#loc27)
      %5 = cir.cmp(lt, %2, %4) : !s64i, !cir.bool loc(#loc113)
      cir.if %5 {
        %6 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc115)
        %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc31)
        %8 = cir.const #cir.int<2> : !s32i loc(#loc30)
        %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc30)
        %10 = cir.binop(mul, %7, %9) nsw : !s64i loc(#loc31)
        cir.store %10, %6 : !s64i, !cir.ptr<!s64i> loc(#loc115)
        %11 = cir.load %6 : !cir.ptr<!s64i>, !s64i loc(#loc32)
        cir.call @printLongLongLine(%11) : (!s64i) -> () loc(#loc33)
      } loc(#loc114)
    } loc(#loc112)
    cir.return loc(#loc18)
  } loc(#loc109)
  cir.func internal private  @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_43L13goodG2BSourceERl(%arg0: !cir.ptr<!s64i> loc(fused[#loc36, #loc37])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc117)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc38)
    %1 = cir.const #cir.int<2> : !s32i loc(#loc39)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc40)
    %3 = cir.cast(integral, %2 : !s32i), !s64i loc(#loc40)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc41)
    cir.store %3, %4 : !s64i, !cir.ptr<!s64i> loc(#loc118)
    cir.return loc(#loc35)
  } loc(#loc116)
  cir.func internal private  @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_43L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc120)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc46)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc121)
    cir.call @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_43L13goodG2BSourceERl(%0) : (!cir.ptr<!s64i>) -> () loc(#loc48)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc51)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc52)
      %4 = cir.cast(integral, %3 : !s32i), !s64i loc(#loc52)
      %5 = cir.cmp(lt, %2, %4) : !s64i, !cir.bool loc(#loc123)
      cir.if %5 {
        %6 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc125)
        %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc56)
        %8 = cir.const #cir.int<2> : !s32i loc(#loc55)
        %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc55)
        %10 = cir.binop(mul, %7, %9) nsw : !s64i loc(#loc56)
        cir.store %10, %6 : !s64i, !cir.ptr<!s64i> loc(#loc125)
        %11 = cir.load %6 : !cir.ptr<!s64i>, !s64i loc(#loc57)
        cir.call @printLongLongLine(%11) : (!s64i) -> () loc(#loc58)
      } loc(#loc124)
    } loc(#loc122)
    cir.return loc(#loc43)
  } loc(#loc119)
  cir.func internal private  @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_43L13goodB2GSourceERl(%arg0: !cir.ptr<!s64i> loc(fused[#loc61, #loc62])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc127)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc63)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc64)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc104)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc65)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc128)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc128)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc68)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc64)
    cir.return loc(#loc60)
  } loc(#loc126)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc129)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc71)
  cir.func internal private  @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_43L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc76)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc132)
    cir.call @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_43L13goodB2GSourceERl(%0) : (!cir.ptr<!s64i>) -> () loc(#loc78)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc81)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc82)
      %4 = cir.cast(integral, %3 : !s32i), !s64i loc(#loc82)
      %5 = cir.cmp(lt, %2, %4) : !s64i, !cir.bool loc(#loc134)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc86)
          %7 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc87)
          %8 = cir.unary(minus, %7) : !s64i, !s64i loc(#loc87)
          %9 = cir.const #cir.int<1> : !s64i loc(#loc87)
          %10 = cir.binop(sub, %8, %9) nsw : !s64i loc(#loc87)
          %11 = cir.const #cir.int<2> : !s32i loc(#loc88)
          %12 = cir.cast(integral, %11 : !s32i), !s64i loc(#loc88)
          %13 = cir.binop(div, %10, %12) : !s64i loc(#loc137)
          %14 = cir.cmp(gt, %6, %13) : !s64i, !cir.bool loc(#loc138)
          cir.if %14 {
            %15 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc140)
            %16 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc95)
            %17 = cir.const #cir.int<2> : !s32i loc(#loc94)
            %18 = cir.cast(integral, %17 : !s32i), !s64i loc(#loc94)
            %19 = cir.binop(mul, %16, %18) nsw : !s64i loc(#loc95)
            cir.store %19, %15 : !s64i, !cir.ptr<!s64i> loc(#loc140)
            %20 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc96)
            cir.call @printLongLongLine(%20) : (!s64i) -> () loc(#loc97)
          } else {
            %15 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc71)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc71)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc98)
          } loc(#loc139)
        } loc(#loc136)
      } loc(#loc135)
    } loc(#loc133)
    cir.return loc(#loc73)
  } loc(#loc130)
  cir.func  @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_434goodEv() extra(#fn_attr) {
    cir.call @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_43L7goodG2BEv() : () -> () loc(#loc101)
    cir.call @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_43L7goodB2GEv() : () -> () loc(#loc102)
    cir.return loc(#loc100)
  } loc(#loc141)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":29:20)
#loc6 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":29:24)
#loc7 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":26:1)
#loc8 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":30:1)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":27:1)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":29:5)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":29:13)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":29:33)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":32:1)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":43:1)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":34:5)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":34:13)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":35:12)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":35:5)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":36:5)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":37:5)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":42:5)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":37:8)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":37:15)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":38:5)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":40:9)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":40:33)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":40:26)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":41:27)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":41:9)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":50:1)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":54:1)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":51:1)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":53:13)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":53:12)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":53:5)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":56:1)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":67:1)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":58:5)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":58:13)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":59:12)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":59:5)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":60:5)
#loc49 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":61:5)
#loc50 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":66:5)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":61:8)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":61:15)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":62:5)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":64:9)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":64:33)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":64:26)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":65:27)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":65:9)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":70:1)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":74:1)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":71:1)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":73:5)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":73:13)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":73:20)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":73:24)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":73:33)
#loc69 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc70 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":91:23)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":76:1)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":94:1)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":78:5)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":78:13)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":79:12)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":79:5)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":80:5)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":81:5)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":93:5)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":81:8)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":81:15)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":82:5)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":84:9)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":92:9)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":84:13)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":84:21)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":84:31)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":84:32)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":85:9)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":88:9)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":90:9)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":86:13)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":86:37)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":86:30)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":87:31)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":87:13)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":91:13)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":96:1)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":100:1)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":98:5)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":99:5)
#loc103 = loc(fused[#loc1, #loc2])
#loc104 = loc(fused[#loc3, #loc4])
#loc105 = loc(fused[#loc5, #loc6])
#loc106 = loc(fused[#loc7, #loc8])
#loc108 = loc(fused[#loc15, #loc16])
#loc109 = loc(fused[#loc17, #loc18])
#loc110 = loc(fused[#loc19, #loc20])
#loc111 = loc(fused[#loc22, #loc21])
#loc112 = loc(fused[#loc24, #loc25])
#loc113 = loc(fused[#loc26, #loc27])
#loc114 = loc(fused[#loc28, #loc25])
#loc115 = loc(fused[#loc29, #loc30])
#loc116 = loc(fused[#loc34, #loc35])
#loc118 = loc(fused[#loc41, #loc39])
#loc119 = loc(fused[#loc42, #loc43])
#loc120 = loc(fused[#loc44, #loc45])
#loc121 = loc(fused[#loc47, #loc46])
#loc122 = loc(fused[#loc49, #loc50])
#loc123 = loc(fused[#loc51, #loc52])
#loc124 = loc(fused[#loc53, #loc50])
#loc125 = loc(fused[#loc54, #loc55])
#loc126 = loc(fused[#loc59, #loc60])
#loc128 = loc(fused[#loc66, #loc67])
#loc129 = loc(fused[#loc69, #loc70])
#loc130 = loc(fused[#loc72, #loc73])
#loc131 = loc(fused[#loc74, #loc75])
#loc132 = loc(fused[#loc77, #loc76])
#loc133 = loc(fused[#loc79, #loc80])
#loc134 = loc(fused[#loc81, #loc82])
#loc135 = loc(fused[#loc83, #loc80])
#loc136 = loc(fused[#loc84, #loc85])
#loc137 = loc(fused[#loc87, #loc88])
#loc138 = loc(fused[#loc86, #loc89])
#loc139 = loc(fused[#loc90, #loc91, #loc92, #loc85])
#loc140 = loc(fused[#loc93, #loc94])
#loc141 = loc(fused[#loc99, #loc100])
