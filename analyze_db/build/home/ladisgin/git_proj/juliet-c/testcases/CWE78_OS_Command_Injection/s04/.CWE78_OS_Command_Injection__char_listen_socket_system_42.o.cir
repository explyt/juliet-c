!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc25 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":56:25)
#loc26 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":56:32)
#loc129 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":103:44)
#loc216 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":158:29)
#loc217 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":158:36)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc255 = loc(fused[#loc25, #loc26])
#loc329 = loc(fused[#loc216, #loc217])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_system_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc243)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_listen_socket_system_42_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc244)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc245)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc246)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc247)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc248)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc249)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc250)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc251)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc252)
  cir.func private @close(!s32i) -> !s32i loc(#loc253)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc25, #loc26])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc256)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc257)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc258)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc259)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc260)
    %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc261)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc255)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc24)
    cir.store %arg0, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc39)
    cir.br ^bb1 loc(#loc262)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc34)
    cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc36)
    cir.store %11, %4 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc42)
    %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc42)
    cir.store %14, %5 : !u64i, !cir.ptr<!u64i> loc(#loc261)
    cir.br ^bb2 loc(#loc263)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc263)
  ^bb3:  // pred: ^bb40
    %15 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc46)
    cir.brcond %16 ^bb4, ^bb41 loc(#loc46)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %17 = cir.const #cir.int<2> : !s32i loc(#loc47)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc49)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
    cir.store %20, %3 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    cir.br ^bb5 loc(#loc265)
  ^bb5:  // pred: ^bb4
    %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc56)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc266)
    cir.brcond %24 ^bb6, ^bb7 loc(#loc267)
  ^bb6:  // pred: ^bb5
    cir.br ^bb41 loc(#loc58)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc54)
  ^bb8:  // pred: ^bb7
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc268)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc269)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc270)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc66)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc66)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc271)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc69)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc272)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc73)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc73)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc74)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc273)
    cir.br ^bb9 loc(#loc274)
  ^bb9:  // pred: ^bb8
    %39 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc275)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc276)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc276)
    %43 = cir.call @bind(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc85)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc86)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc277)
    cir.brcond %46 ^bb10, ^bb11 loc(#loc278)
  ^bb10:  // pred: ^bb9
    cir.br ^bb41 loc(#loc88)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc79)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc279)
  ^bb13:  // pred: ^bb12
    %47 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %48 = cir.const #cir.int<5> : !s32i loc(#loc92)
    %49 = cir.call @listen(%47, %48) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc93)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc94)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc280)
    cir.brcond %52 ^bb14, ^bb15 loc(#loc281)
  ^bb14:  // pred: ^bb13
    cir.br ^bb41 loc(#loc96)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc90)
  ^bb16:  // pred: ^bb15
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc98)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc99)
    %56 = cir.call @accept(%53, %54, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc100)
    cir.store %56, %4 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    cir.br ^bb17 loc(#loc283)
  ^bb17:  // pred: ^bb16
    %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc106)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc284)
    cir.brcond %60 ^bb18, ^bb19 loc(#loc285)
  ^bb18:  // pred: ^bb17
    cir.br ^bb41 loc(#loc108)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc104)
  ^bb20:  // pred: ^bb19
    %61 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %62 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %63 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc111)
    %64 = cir.ptr_stride(%62 : !cir.ptr<!s8i>, %63 : !u64i), !cir.ptr<!s8i> loc(#loc112)
    %65 = cir.cast(bitcast, %64 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc286)
    %66 = cir.const #cir.int<1> : !u64i loc(#loc287)
    %67 = cir.const #cir.int<100> : !s32i loc(#loc117)
    %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc117)
    %69 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc118)
    %70 = cir.binop(sub, %68, %69) : !u64i loc(#loc288)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc119)
    %73 = cir.binop(sub, %70, %72) : !u64i loc(#loc289)
    %74 = cir.binop(mul, %66, %73) : !u64i loc(#loc290)
    %75 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %76 = cir.call @recv(%61, %65, %74, %75) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc122)
    %77 = cir.cast(integral, %76 : !s64i), !s32i loc(#loc122)
    cir.store %77, %0 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    cir.br ^bb21 loc(#loc292)
  ^bb21:  // pred: ^bb20
    %78 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc128)
    %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc293)
    cir.brcond %81 ^bb22, ^bb23 loc(#loc129)
  ^bb22:  // pred: ^bb21
    %82 = cir.const #true loc(#loc129)
    cir.br ^bb28(%82 : !cir.bool) loc(#loc129)
  ^bb23:  // pred: ^bb21
    %83 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %84 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc294)
    cir.brcond %85 ^bb24, ^bb25 loc(#loc129)
  ^bb24:  // pred: ^bb23
    %86 = cir.const #true loc(#loc129)
    cir.br ^bb26(%86 : !cir.bool) loc(#loc129)
  ^bb25:  // pred: ^bb23
    %87 = cir.const #false loc(#loc129)
    cir.br ^bb26(%87 : !cir.bool) loc(#loc129)
  ^bb26(%88: !cir.bool loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":103:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc129)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%88 : !cir.bool) loc(#loc129)
  ^bb28(%89: !cir.bool loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":103:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc129)
  ^bb29:  // pred: ^bb28
    cir.brcond %89 ^bb30, ^bb31 loc(#loc295)
  ^bb30:  // pred: ^bb29
    cir.br ^bb41 loc(#loc133)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc126)
  ^bb32:  // pred: ^bb31
    %90 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %91 = cir.cast(integral, %90 : !s32i), !s8i loc(#loc134)
    %92 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    %93 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc136)
    %94 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %95 = cir.cast(integral, %94 : !s32i), !u64i loc(#loc137)
    %96 = cir.const #cir.int<1> : !u64i loc(#loc296)
    %97 = cir.binop(div, %95, %96) : !u64i loc(#loc297)
    %98 = cir.binop(add, %93, %97) : !u64i loc(#loc298)
    %99 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %98 : !u64i), !cir.ptr<!s8i> loc(#loc140)
    cir.store %91, %99 : !s8i, !cir.ptr<!s8i> loc(#loc299)
    %100 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
    %101 = cir.const #cir.int<13> : !s32i loc(#loc142)
    %102 = cir.call @strchr(%100, %101) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc143)
    cir.store %102, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc300)
    cir.br ^bb33 loc(#loc301)
  ^bb33:  // pred: ^bb32
    %103 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
    %104 = cir.cast(ptr_to_bool, %103 : !cir.ptr<!s8i>), !cir.bool loc(#loc148)
    cir.brcond %104 ^bb34, ^bb35 loc(#loc302)
  ^bb34:  // pred: ^bb33
    %105 = cir.const #cir.int<0> : !s32i loc(#loc150)
    %106 = cir.cast(integral, %105 : !s32i), !s8i loc(#loc150)
    %107 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
    cir.store %106, %107 : !s8i, !cir.ptr<!s8i> loc(#loc303)
    cir.br ^bb35 loc(#loc147)
  ^bb35:  // 2 preds: ^bb33, ^bb34
    cir.br ^bb36 loc(#loc147)
  ^bb36:  // pred: ^bb35
    %108 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    %109 = cir.const #cir.int<10> : !s32i loc(#loc154)
    %110 = cir.call @strchr(%108, %109) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc155)
    cir.store %110, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc304)
    cir.br ^bb37 loc(#loc305)
  ^bb37:  // pred: ^bb36
    %111 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
    %112 = cir.cast(ptr_to_bool, %111 : !cir.ptr<!s8i>), !cir.bool loc(#loc160)
    cir.brcond %112 ^bb38, ^bb39 loc(#loc306)
  ^bb38:  // pred: ^bb37
    %113 = cir.const #cir.int<0> : !s32i loc(#loc162)
    %114 = cir.cast(integral, %113 : !s32i), !s8i loc(#loc162)
    %115 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    cir.store %114, %115 : !s8i, !cir.ptr<!s8i> loc(#loc307)
    cir.br ^bb39 loc(#loc159)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc159)
  ^bb40:  // pred: ^bb39
    cir.br ^bb3 loc(#loc45)
  ^bb41:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb42 loc(#loc45)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc308)
  ^bb43:  // pred: ^bb42
    %116 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    %117 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %118 = cir.unary(minus, %117) : !s32i, !s32i loc(#loc168)
    %119 = cir.cmp(ne, %116, %118) : !s32i, !cir.bool loc(#loc309)
    cir.brcond %119 ^bb44, ^bb45 loc(#loc310)
  ^bb44:  // pred: ^bb43
    %120 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    %121 = cir.call @close(%120) : (!s32i) -> !s32i loc(#loc171)
    cir.br ^bb45 loc(#loc166)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc166)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc311)
  ^bb47:  // pred: ^bb46
    %122 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    %123 = cir.const #cir.int<1> : !s32i loc(#loc175)
    %124 = cir.unary(minus, %123) : !s32i, !s32i loc(#loc175)
    %125 = cir.cmp(ne, %122, %124) : !s32i, !cir.bool loc(#loc312)
    cir.brcond %125 ^bb48, ^bb49 loc(#loc313)
  ^bb48:  // pred: ^bb47
    %126 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc177)
    %127 = cir.call @close(%126) : (!s32i) -> !s32i loc(#loc178)
    cir.br ^bb49 loc(#loc173)
  ^bb49:  // 2 preds: ^bb47, ^bb48
    cir.br ^bb50 loc(#loc173)
  ^bb50:  // pred: ^bb49
    cir.br ^bb51 loc(#loc41)
  ^bb51:  // pred: ^bb50
    %128 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
    cir.store %128, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc314)
    %129 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc314)
    cir.return %129 : !cir.ptr<!s8i> loc(#loc314)
  } loc(#loc254)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc315)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc316)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc185)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc317)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_system_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc319)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc244)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_listen_socket_system_42_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc244)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc244)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc192)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc320)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc194)
    %5 = cir.call @badSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc195)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc321)
    cir.br ^bb1 loc(#loc322)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc200)
    %7 = cir.call @system(%6) : (!cir.ptr<!s8i>) -> !s32i loc(#loc201)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc202)
    %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc323)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc324)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc185)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc185)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc204)
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc205)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc206)
    cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc205)
    cir.br ^bb3 loc(#loc199)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc199)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc189)
  } loc(#loc318)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_system_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc326)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc209)
    cir.return loc(#loc208)
  } loc(#loc325)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc327)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc213)
  cir.func internal private @goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc216, #loc217])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc329)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc215)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
    %2 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc219)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc220)
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc213)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc213)
    %6 = cir.call @strcat(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc219)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc221)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc330)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc330)
    cir.return %8 : !cir.ptr<!s8i> loc(#loc330)
  } loc(#loc328)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc332)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc243)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc243)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc243)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc227)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc333)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc229)
    %5 = cir.call @goodG2BSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc230)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc334)
    cir.br ^bb1 loc(#loc335)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc235)
    %7 = cir.call @system(%6) : (!cir.ptr<!s8i>) -> !s32i loc(#loc236)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc237)
    %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc336)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc337)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc239)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc239)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc240)
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc241)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc242)
    cir.call @exit(%13) : (!s32i) -> () extra(#fn_attr) loc(#loc241)
    cir.br ^bb3 loc(#loc234)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc234)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc224)
  } loc(#loc331)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_system_42.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":169:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":169:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":143:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":143:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/sys/socket.h":102:1)
#loc8 = loc("/usr/include/sys/socket.h":102:62)
#loc9 = loc("/usr/include/netinet/in.h":404:1)
#loc10 = loc("/usr/include/netinet/in.h":405:40)
#loc11 = loc("/usr/include/sys/socket.h":112:1)
#loc12 = loc("/usr/include/sys/socket.h":113:6)
#loc13 = loc("/usr/include/sys/socket.h":296:1)
#loc14 = loc("/usr/include/sys/socket.h":296:39)
#loc15 = loc("/usr/include/sys/socket.h":306:1)
#loc16 = loc("/usr/include/sys/socket.h":307:38)
#loc17 = loc("/usr/include/sys/socket.h":145:1)
#loc18 = loc("/usr/include/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":246:1)
#loc20 = loc("/usr/include/string.h":247:33)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":56:1)
#loc24 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":138:1)
#loc27 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":63:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":63:13)
#loc29 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":64:9)
#loc30 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":64:28)
#loc31 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":65:9)
#loc32 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":65:15)
#loc33 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":66:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":66:31)
#loc35 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":67:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":67:31)
#loc37 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":68:9)
#loc38 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":68:37)
#loc39 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":57:1)
#loc40 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":58:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":136:5)
#loc42 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":68:26)
#loc43 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":68:33)
#loc44 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":69:9)
#loc45 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":121:17)
#loc46 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":121:16)
#loc47 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":79:35)
#loc48 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":79:44)
#loc49 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":79:57)
#loc50 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":79:28)
#loc51 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":79:13)
#loc52 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":79:68)
#loc53 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":80:13)
#loc54 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":83:13)
#loc55 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":80:17)
#loc56 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":80:33)
#loc57 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":81:13)
#loc58 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":82:17)
#loc59 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":84:20)
#loc60 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":84:21)
#loc61 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":84:30)
#loc62 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":84:33)
#loc63 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":84:47)
#loc64 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":84:13)
#loc65 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":84:48)
#loc66 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":85:34)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":85:13)
#loc69 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":86:39)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":86:13)
#loc73 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":87:38)
#loc74 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":87:32)
#loc75 = loc("/usr/include/netinet/in.h":250:15)
#loc76 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":87:13)
#loc77 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":87:46)
#loc78 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":88:13)
#loc79 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":91:13)
#loc80 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":88:22)
#loc81 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":88:54)
#loc82 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":88:55)
#loc83 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":88:64)
#loc84 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":88:78)
#loc85 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":88:17)
#loc86 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":88:84)
#loc87 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":89:13)
#loc88 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":90:17)
#loc89 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":92:13)
#loc90 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":95:13)
#loc91 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":92:24)
#loc92 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":92:38)
#loc93 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":92:17)
#loc94 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":92:57)
#loc95 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":93:13)
#loc96 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":94:17)
#loc97 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":96:35)
#loc98 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":96:49)
#loc99 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":96:55)
#loc100 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":96:28)
#loc101 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":96:13)
#loc102 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":96:59)
#loc103 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":97:13)
#loc104 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":100:13)
#loc105 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":97:17)
#loc106 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":97:33)
#loc107 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":98:13)
#loc108 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":99:17)
#loc109 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:31)
#loc110 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:54)
#loc111 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:61)
#loc112 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:59)
#loc113 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:45)
#loc114 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:68)
#loc115 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:71)
#loc116 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:82)
#loc117 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:87)
#loc118 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:93)
#loc119 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:103)
#loc120 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:104)
#loc121 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:107)
#loc122 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:26)
#loc123 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:13)
#loc124 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":102:108)
#loc125 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":103:13)
#loc126 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":106:13)
#loc127 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":103:17)
#loc128 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":103:31)
#loc130 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":103:47)
#loc131 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":103:61)
#loc132 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":104:13)
#loc133 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":105:17)
#loc134 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":108:57)
#loc135 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":108:13)
#loc136 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":108:18)
#loc137 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":108:28)
#loc138 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":108:41)
#loc139 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":108:52)
#loc140 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":108:53)
#loc141 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":110:30)
#loc142 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":110:36)
#loc143 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":110:23)
#loc144 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":110:13)
#loc145 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":110:40)
#loc146 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":111:13)
#loc147 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":114:13)
#loc148 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":111:17)
#loc149 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":112:13)
#loc150 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":113:28)
#loc151 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":113:18)
#loc152 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":113:17)
#loc153 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":115:30)
#loc154 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":115:36)
#loc155 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":115:23)
#loc156 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":115:13)
#loc157 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":115:40)
#loc158 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":116:13)
#loc159 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":119:13)
#loc160 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":116:17)
#loc161 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":117:13)
#loc162 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":118:28)
#loc163 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":118:18)
#loc164 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":118:17)
#loc165 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":122:9)
#loc166 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":125:9)
#loc167 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":122:13)
#loc168 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":122:29)
#loc169 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":123:9)
#loc170 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":124:26)
#loc171 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":124:13)
#loc172 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":126:9)
#loc173 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":129:9)
#loc174 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":126:13)
#loc175 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":126:29)
#loc176 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":127:9)
#loc177 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":128:26)
#loc178 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":128:13)
#loc179 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":137:12)
#loc180 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":137:5)
#loc181 = loc("/usr/include/stdlib.h":923:1)
#loc182 = loc("/usr/include/stdlib.h":923:41)
#loc183 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc184 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc185 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":149:19)
#loc186 = loc("/usr/include/stdlib.h":756:1)
#loc187 = loc("/usr/include/stdlib.h":756:70)
#loc188 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":140:1)
#loc189 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":152:1)
#loc190 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":142:5)
#loc191 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":142:12)
#loc192 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":144:12)
#loc193 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":144:5)
#loc194 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":145:22)
#loc195 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":145:12)
#loc196 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":145:5)
#loc197 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":145:26)
#loc198 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":147:5)
#loc199 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":151:5)
#loc200 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":147:16)
#loc201 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":147:9)
#loc202 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":147:25)
#loc203 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":148:5)
#loc204 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":149:9)
#loc205 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":150:9)
#loc206 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":150:14)
#loc207 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":180:1)
#loc208 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":183:1)
#loc209 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":182:5)
#loc210 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":182:13)
#loc211 = loc("/usr/include/string.h":149:1)
#loc212 = loc("/usr/include/string.h":150:14)
#loc213 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":161:18)
#loc214 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":158:1)
#loc215 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":163:1)
#loc218 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":159:1)
#loc219 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":161:5)
#loc220 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":161:12)
#loc221 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":162:12)
#loc222 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":162:5)
#loc223 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":166:1)
#loc224 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":178:1)
#loc225 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":168:5)
#loc226 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":168:12)
#loc227 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":170:12)
#loc228 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":170:5)
#loc229 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":171:26)
#loc230 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":171:12)
#loc231 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":171:5)
#loc232 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":171:30)
#loc233 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":173:5)
#loc234 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":177:5)
#loc235 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":173:16)
#loc236 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":173:9)
#loc237 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":173:25)
#loc238 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":174:5)
#loc239 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":175:19)
#loc240 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":175:9)
#loc241 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":176:9)
#loc242 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_42.c":176:14)
#loc243 = loc(fused[#loc1, #loc2])
#loc244 = loc(fused[#loc3, #loc4])
#loc245 = loc(fused[#loc5, #loc6])
#loc246 = loc(fused[#loc7, #loc8])
#loc247 = loc(fused[#loc9, #loc10])
#loc248 = loc(fused[#loc11, #loc12])
#loc249 = loc(fused[#loc13, #loc14])
#loc250 = loc(fused[#loc15, #loc16])
#loc251 = loc(fused[#loc17, #loc18])
#loc252 = loc(fused[#loc19, #loc20])
#loc253 = loc(fused[#loc21, #loc22])
#loc254 = loc(fused[#loc23, #loc24])
#loc256 = loc(fused[#loc27, #loc28])
#loc257 = loc(fused[#loc29, #loc30])
#loc258 = loc(fused[#loc31, #loc32])
#loc259 = loc(fused[#loc33, #loc34])
#loc260 = loc(fused[#loc35, #loc36])
#loc261 = loc(fused[#loc37, #loc38])
#loc262 = loc(fused[#loc40, #loc41])
#loc263 = loc(fused[#loc44, #loc45])
#loc264 = loc(fused[#loc51, #loc52])
#loc265 = loc(fused[#loc53, #loc54])
#loc266 = loc(fused[#loc55, #loc56])
#loc267 = loc(fused[#loc57, #loc54])
#loc268 = loc(fused[#loc59, #loc60])
#loc269 = loc(fused[#loc62, #loc63])
#loc270 = loc(fused[#loc64, #loc65])
#loc271 = loc(fused[#loc68, #loc66])
#loc272 = loc(fused[#loc72, #loc69])
#loc273 = loc(fused[#loc76, #loc77])
#loc274 = loc(fused[#loc78, #loc79])
#loc275 = loc(fused[#loc81, #loc82])
#loc276 = loc(fused[#loc83, #loc84])
#loc277 = loc(fused[#loc85, #loc86])
#loc278 = loc(fused[#loc87, #loc79])
#loc279 = loc(fused[#loc89, #loc90])
#loc280 = loc(fused[#loc93, #loc94])
#loc281 = loc(fused[#loc95, #loc90])
#loc282 = loc(fused[#loc101, #loc102])
#loc283 = loc(fused[#loc103, #loc104])
#loc284 = loc(fused[#loc105, #loc106])
#loc285 = loc(fused[#loc107, #loc104])
#loc286 = loc(fused[#loc113, #loc114])
#loc287 = loc(fused[#loc115, #loc116])
#loc288 = loc(fused[#loc117, #loc118])
#loc289 = loc(fused[#loc117, #loc119])
#loc290 = loc(fused[#loc115, #loc120])
#loc291 = loc(fused[#loc123, #loc124])
#loc292 = loc(fused[#loc125, #loc126])
#loc293 = loc(fused[#loc127, #loc128])
#loc294 = loc(fused[#loc130, #loc131])
#loc295 = loc(fused[#loc132, #loc126])
#loc296 = loc(fused[#loc138, #loc139])
#loc297 = loc(fused[#loc137, #loc139])
#loc298 = loc(fused[#loc136, #loc139])
#loc299 = loc(fused[#loc135, #loc134])
#loc300 = loc(fused[#loc144, #loc145])
#loc301 = loc(fused[#loc146, #loc147])
#loc302 = loc(fused[#loc149, #loc147])
#loc303 = loc(fused[#loc152, #loc150])
#loc304 = loc(fused[#loc156, #loc157])
#loc305 = loc(fused[#loc158, #loc159])
#loc306 = loc(fused[#loc161, #loc159])
#loc307 = loc(fused[#loc164, #loc162])
#loc308 = loc(fused[#loc165, #loc166])
#loc309 = loc(fused[#loc167, #loc168])
#loc310 = loc(fused[#loc169, #loc166])
#loc311 = loc(fused[#loc172, #loc173])
#loc312 = loc(fused[#loc174, #loc175])
#loc313 = loc(fused[#loc176, #loc173])
#loc314 = loc(fused[#loc180, #loc179])
#loc315 = loc(fused[#loc181, #loc182])
#loc316 = loc(fused[#loc183, #loc184])
#loc317 = loc(fused[#loc186, #loc187])
#loc318 = loc(fused[#loc188, #loc189])
#loc319 = loc(fused[#loc190, #loc191])
#loc320 = loc(fused[#loc193, #loc192])
#loc321 = loc(fused[#loc196, #loc197])
#loc322 = loc(fused[#loc198, #loc199])
#loc323 = loc(fused[#loc201, #loc202])
#loc324 = loc(fused[#loc203, #loc199])
#loc325 = loc(fused[#loc207, #loc208])
#loc326 = loc(fused[#loc209, #loc210])
#loc327 = loc(fused[#loc211, #loc212])
#loc328 = loc(fused[#loc214, #loc215])
#loc330 = loc(fused[#loc222, #loc221])
#loc331 = loc(fused[#loc223, #loc224])
#loc332 = loc(fused[#loc225, #loc226])
#loc333 = loc(fused[#loc228, #loc227])
#loc334 = loc(fused[#loc231, #loc232])
#loc335 = loc(fused[#loc233, #loc234])
#loc336 = loc(fused[#loc236, #loc237])
#loc337 = loc(fused[#loc238, #loc234])
