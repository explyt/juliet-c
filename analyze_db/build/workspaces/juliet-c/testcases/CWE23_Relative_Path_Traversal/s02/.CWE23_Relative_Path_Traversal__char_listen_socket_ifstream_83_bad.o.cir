!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!ty___locale_data = !cir.record<struct "__locale_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc21 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":47:68)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":47:134)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":47:141)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":131:68)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc212 = loc(fused[#loc22, #loc23])
!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad = !cir.record<class "CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83::CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad" {!cir.ptr<!s8i>} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty___pthread_internal_list = !cir.record<struct "__pthread_internal_list" {!cir.ptr<!cir.record<struct "__pthread_internal_list">>, !cir.ptr<!cir.record<struct "__pthread_internal_list">>} #cir.record.decl.ast>
!ty_anon2E0 = !cir.record<union "anon.0" {!u32i, !cir.array<!s8i x 4>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty_std3A3Aios_base3A3A_Words = !cir.record<struct "std::ios_base::_Words" {!cir.ptr<!void>, !s64i} #cir.record.decl.ast>
!ty___locale_struct = !cir.record<struct "__locale_struct" {!cir.array<!cir.ptr<!ty___locale_data> x 13>, !cir.ptr<!u16i>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.array<!cir.ptr<!s8i> x 13>} #cir.record.decl.ast>
!ty___mbstate_t = !cir.record<struct "__mbstate_t" {!s32i, !ty_anon2E0} #cir.record.decl.ast>
!ty___pthread_mutex_s = !cir.record<struct "__pthread_mutex_s" {!s32i, !u32i, !s32i, !u32i, !s32i, !s16i, !s16i, !ty___pthread_internal_list} #cir.record.decl.ast>
!ty_pthread_mutex_t = !cir.record<union "pthread_mutex_t" {!ty___pthread_mutex_s, !cir.array<!s8i x 40>, !s64i} #cir.record.decl.ast>
!ty_std3A3A__basic_file3Cchar3E = !cir.record<class "std::__basic_file<char>" packed padded {!cir.ptr<!ty__IO_FILE>, !cir.bool, !cir.array<!u8i x 7>} #cir.record.decl.ast>
!ty_std3A3Abasic_istream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase = !cir.record<class "std::basic_istream<char, std::char_traits<char>>.base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i} #cir.record.decl.ast>
!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ostream<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.record<class "std::basic_ios<char, std::char_traits<char>>" {!cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.record<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<(!u32i, !cir.ptr<!cir.record<class "std::ios_base">>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>, !cir.ptr<!cir.record<class "std::basic_ostream<char, std::char_traits<char>>">>, !s8i, !cir.bool, !cir.ptr<!cir.record<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::ctype<char>" packed padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>" padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>" padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>
!ty_std3A3Aios_base3A3A_Callback_list = !cir.record<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<(!u32i, !cir.ptr<!cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet = !cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet2Ebase = !cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>
!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase = !cir.record<class "std::__codecvt_abstract_base<char, char, __mbstate_t>.base" {!ty_std3A3Alocale3A3Afacet2Ebase} #cir.record.decl.ast>
!ty_std3A3Actype3Cchar3E = !cir.record<class "std::ctype<char>" packed padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>
!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E = !cir.record<class "std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>" padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E = !cir.record<class "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>" padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E = !cir.record<class "std::codecvt<char, char, __mbstate_t>" {!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase, !cir.ptr<!ty___locale_struct>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3A_Impl = !cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !u64i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>
!ty_std3A3Alocale = !cir.record<class "std::locale" {!cir.ptr<!ty_std3A3Alocale3A3A_Impl>} #cir.record.decl.ast>
!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Aios_base = !cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Callback_list>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_filebuf<char, std::char_traits<char>>" {!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_pthread_mutex_t, !ty_std3A3A__basic_file3Cchar3E, !s32i, !ty___mbstate_t, !ty___mbstate_t, !ty___mbstate_t, !cir.ptr<!s8i>, !u64i, !cir.bool, !cir.bool, !cir.bool, !s8i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.bool, !cir.ptr<!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E>, !cir.ptr<!s8i>, !s64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>} #cir.record.decl.ast>
!ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ios<char, std::char_traits<char>>" {!ty_std3A3Aios_base, !cir.ptr<!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !s8i, !cir.bool, !cir.ptr<!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!ty_std3A3Actype3Cchar3E>, !cir.ptr<!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E>, !cir.ptr<!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E>} #cir.record.decl.ast>
!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ifstream<char, std::char_traits<char>>" {!ty_std3A3Abasic_istream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase, !ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E}>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc202)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc203)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc204)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc205)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc206)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc207)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc208)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc209)
  cir.func private @close(!s32i) -> !s32i loc(#loc210)
  cir.func @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_8365CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_badC2EPc(%arg0: !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad> loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":47:68), %arg1: !cir.ptr<!s8i> loc(fused[#loc22, #loc23])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad>, !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc21)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc212)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad>, !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad>> loc(#loc24)
    cir.store %arg1, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc24)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad>>, !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad> loc(#loc21)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %4 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc26)
    cir.store %3, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc213)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc215)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc216)
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc217)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc218)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc219)
      %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc220)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc37)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc37)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc218)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc39)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc39)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc219)
      %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc42)
      %16 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc26)
      %17 = cir.load %16 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc42)
      cir.store %18, %10 : !u64i, !cir.ptr<!u64i> loc(#loc220)
      cir.scope {
        cir.do {
          cir.scope {
            %19 = cir.const #cir.int<2> : !s32i loc(#loc48)
            %20 = cir.const #cir.int<1> : !u32i loc(#loc49)
            %21 = cir.cast(integral, %20 : !u32i), !s32i loc(#loc49)
            %22 = cir.const #cir.int<6> : !u32i loc(#loc50)
            %23 = cir.cast(integral, %22 : !u32i), !s32i loc(#loc50)
            %24 = cir.call @socket(%19, %21, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
            cir.store %24, %8 : !s32i, !cir.ptr<!s32i> loc(#loc223)
            cir.scope {
              %81 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc56)
              %82 = cir.const #cir.int<1> : !s32i loc(#loc57)
              %83 = cir.unary(minus, %82) nsw : !s32i, !s32i loc(#loc57)
              %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc225)
              cir.if %84 {
                cir.break loc(#loc59)
              } loc(#loc226)
            } loc(#loc224)
            %25 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc227)
            %26 = cir.const #cir.int<0> : !s32i loc(#loc62)
            %27 = cir.const #cir.int<16> : !u64i loc(#loc228)
            cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc229)
            %28 = cir.const #cir.int<2> : !s32i loc(#loc67)
            %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc67)
            %30 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc230)
            %31 = cir.const #cir.int<0> : !s32i loc(#loc70)
            %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc70)
            %33 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
            %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
            cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc231)
            %35 = cir.const #cir.int<27015> : !s32i loc(#loc74)
            %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc74)
            %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc75)
            %38 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
            cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc232)
            cir.scope {
              %81 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc81)
              %82 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc234)
              %83 = cir.const #cir.int<16> : !u64i loc(#loc235)
              %84 = cir.cast(integral, %83 : !u64i), !u32i loc(#loc235)
              %85 = cir.call @bind(%81, %82, %84) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc86)
              %86 = cir.const #cir.int<1> : !s32i loc(#loc87)
              %87 = cir.unary(minus, %86) nsw : !s32i, !s32i loc(#loc87)
              %88 = cir.cmp(eq, %85, %87) : !s32i, !cir.bool loc(#loc236)
              cir.if %88 {
                cir.break loc(#loc89)
              } loc(#loc237)
            } loc(#loc233)
            cir.scope {
              %81 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc92)
              %82 = cir.const #cir.int<5> : !s32i loc(#loc93)
              %83 = cir.call @listen(%81, %82) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc94)
              %84 = cir.const #cir.int<1> : !s32i loc(#loc95)
              %85 = cir.unary(minus, %84) nsw : !s32i, !s32i loc(#loc95)
              %86 = cir.cmp(eq, %83, %85) : !s32i, !cir.bool loc(#loc239)
              cir.if %86 {
                cir.break loc(#loc97)
              } loc(#loc240)
            } loc(#loc238)
            %39 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc98)
            %40 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc99)
            %41 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc100)
            %42 = cir.call @accept(%39, %40, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc101)
            cir.store %42, %9 : !s32i, !cir.ptr<!s32i> loc(#loc241)
            cir.scope {
              %81 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc106)
              %82 = cir.const #cir.int<1> : !s32i loc(#loc107)
              %83 = cir.unary(minus, %82) nsw : !s32i, !s32i loc(#loc107)
              %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc243)
              cir.if %84 {
                cir.break loc(#loc109)
              } loc(#loc244)
            } loc(#loc242)
            %43 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc110)
            %44 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc26)
            %45 = cir.load %44 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
            %46 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc112)
            %47 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc113)
            %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc245)
            %49 = cir.const #cir.int<1> : !u64i loc(#loc246)
            %50 = cir.const #cir.int<4096> : !s32i loc(#loc118)
            %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc118)
            %52 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc119)
            %53 = cir.binop(sub, %51, %52) : !u64i loc(#loc247)
            %54 = cir.const #cir.int<1> : !s32i loc(#loc120)
            %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc120)
            %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc248)
            %57 = cir.binop(mul, %49, %56) : !u64i loc(#loc249)
            %58 = cir.const #cir.int<0> : !s32i loc(#loc122)
            %59 = cir.call @recv(%43, %48, %57, %58) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc123)
            %60 = cir.cast(integral, %59 : !s64i), !s32i loc(#loc123)
            cir.store %60, %5 : !s32i, !cir.ptr<!s32i> loc(#loc250)
            cir.scope {
              %81 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc128)
              %82 = cir.const #cir.int<1> : !s32i loc(#loc129)
              %83 = cir.unary(minus, %82) nsw : !s32i, !s32i loc(#loc129)
              %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc252)
              %85 = cir.ternary(%84, true {
                %86 = cir.const #true loc(#loc130)
                cir.yield %86 : !cir.bool loc(#loc130)
              }, false {
                %86 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc131)
                %87 = cir.const #cir.int<0> : !s32i loc(#loc132)
                %88 = cir.cmp(eq, %86, %87) : !s32i, !cir.bool loc(#loc253)
                %89 = cir.ternary(%88, true {
                  %90 = cir.const #true loc(#loc130)
                  cir.yield %90 : !cir.bool loc(#loc130)
                }, false {
                  %90 = cir.const #false loc(#loc130)
                  cir.yield %90 : !cir.bool loc(#loc130)
                }) : (!cir.bool) -> !cir.bool loc(#loc130)
                cir.yield %89 : !cir.bool loc(#loc130)
              }) : (!cir.bool) -> !cir.bool loc(#loc130)
              cir.if %85 {
                cir.break loc(#loc134)
              } loc(#loc254)
            } loc(#loc251)
            %61 = cir.const #cir.int<0> : !s8i loc(#loc135)
            %62 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc26)
            %63 = cir.load %62 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
            %64 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc137)
            %65 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc138)
            %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc138)
            %67 = cir.const #cir.int<1> : !u64i loc(#loc255)
            %68 = cir.binop(div, %66, %67) : !u64i loc(#loc256)
            %69 = cir.binop(add, %64, %68) : !u64i loc(#loc257)
            %70 = cir.ptr_stride(%63 : !cir.ptr<!s8i>, %69 : !u64i), !cir.ptr<!s8i> loc(#loc141)
            cir.store %61, %70 : !s8i, !cir.ptr<!s8i> loc(#loc258)
            %71 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc26)
            %72 = cir.load %71 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
            %73 = cir.const #cir.int<13> : !s8i loc(#loc143)
            %74 = cir.cast(integral, %73 : !s8i), !s32i loc(#loc143)
            %75 = cir.call @strchr(%72, %74) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc144)
            cir.store %75, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc259)
            cir.scope {
              %81 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
              %82 = cir.cast(ptr_to_bool, %81 : !cir.ptr<!s8i>), !cir.bool loc(#loc149)
              cir.if %82 {
                %83 = cir.const #cir.int<0> : !s8i loc(#loc151)
                %84 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
                cir.store %83, %84 : !s8i, !cir.ptr<!s8i> loc(#loc262)
              } loc(#loc261)
            } loc(#loc260)
            %76 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc26)
            %77 = cir.load %76 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
            %78 = cir.const #cir.int<10> : !s8i loc(#loc155)
            %79 = cir.cast(integral, %78 : !s8i), !s32i loc(#loc155)
            %80 = cir.call @strchr(%77, %79) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc156)
            cir.store %80, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc263)
            cir.scope {
              %81 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
              %82 = cir.cast(ptr_to_bool, %81 : !cir.ptr<!s8i>), !cir.bool loc(#loc161)
              cir.if %82 {
                %83 = cir.const #cir.int<0> : !s8i loc(#loc163)
                %84 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
                cir.store %83, %84 : !s8i, !cir.ptr<!s8i> loc(#loc266)
              } loc(#loc265)
            } loc(#loc264)
          } loc(#loc222)
          cir.yield loc(#loc45)
        } while {
          %19 = cir.const #cir.int<0> : !s32i loc(#loc166)
          %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc166)
          cir.condition(%20) loc(#loc166)
        } loc(#loc221)
      } loc(#loc221)
      cir.scope {
        %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc169)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc170)
        %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc170)
        %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc268)
        cir.if %22 {
          %23 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc172)
          %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc173)
        } loc(#loc269)
      } loc(#loc267)
      cir.scope {
        %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc176)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc177)
        %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc177)
        %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc271)
        cir.if %22 {
          %23 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc179)
          %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc180)
        } loc(#loc272)
      } loc(#loc270)
    } loc(#loc214)
    cir.return loc(#loc20)
  } loc(#loc211)
  cir.func private @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_8365CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_badC1EPc(!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad>, !cir.ptr<!s8i>) alias(@_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_8365CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_badC2EPc) loc(#loc211)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc273)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) loc(#loc274)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc275)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) extra(#fn_attr) loc(#loc276)
  cir.func @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_8365CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_badD2Ev(%arg0: !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad> loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":131:68)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad>, !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc191)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad>, !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad>> loc(#loc192)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad>>, !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad> loc(#loc191)
    cir.scope {
      %2 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc279)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%2) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc196)
      %3 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc26)
      %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc197)
      %5 = cir.const #cir.int<8> : !s32i loc(#loc280)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%2, %4, %5) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%2) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc276)
          cir.yield loc(#loc200)
        } loc(#loc200)
        cir.yield loc(#loc191)
      } catch [#cir.unwind {
        cir.resume loc(#loc191)
      }] loc(#loc191)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%2) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%2) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc276)
          cir.yield loc(#loc201)
        } loc(#loc201)
        cir.yield loc(#loc191)
      } catch [#cir.unwind {
        cir.resume loc(#loc191)
      }] loc(#loc191)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%2) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc276)
    } loc(#loc278)
    cir.return loc(#loc190)
  } loc(#loc277)
  cir.func private @_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_8365CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_badD1Ev(!cir.ptr<!ty_CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_833A3ACWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad>) alias(@_ZN61CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_8365CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_badD2Ev) loc(#loc277)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":402:1)
#loc6 = loc("/usr/include/netinet/in.h":403:40)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc15 = loc("/usr/include/string.h":226:1)
#loc16 = loc("/usr/include/string.h":227:50)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":47:1)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":129:1)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":48:1)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":49:12)
#loc26 = loc("./CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83.h":38:12)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":49:5)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":50:5)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":128:5)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":55:9)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":55:13)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":56:9)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":56:28)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":57:9)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":57:15)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":58:9)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":58:31)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":59:9)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":59:31)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":60:9)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":60:37)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":60:26)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":60:33)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":61:9)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":113:17)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":62:9)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":112:9)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":71:35)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":71:44)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":71:57)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":71:28)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":71:13)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":71:68)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":72:13)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":75:13)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":72:17)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":72:33)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":73:13)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":74:17)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":76:20)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":76:21)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":76:30)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":76:33)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":76:47)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":76:13)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":76:48)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":77:34)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":77:13)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":78:39)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":78:13)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":79:38)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":79:32)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":79:13)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":79:46)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":80:13)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":83:13)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":80:22)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":80:54)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":80:55)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":80:64)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":80:78)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":80:17)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":80:84)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":81:13)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":82:17)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":84:13)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":87:13)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":84:24)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":84:38)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":84:17)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":84:57)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":85:13)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":86:17)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":88:35)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":88:49)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":88:55)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":88:28)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":88:13)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":88:59)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":89:13)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":92:13)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":89:17)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":89:33)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":90:13)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":91:17)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":94:31)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":94:54)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":94:61)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":94:59)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":94:45)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":94:68)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":94:71)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":94:82)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":94:87)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":94:102)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":94:112)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":94:113)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":94:116)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":94:26)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":94:13)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":94:117)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":95:13)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":98:13)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":95:17)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":95:31)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":95:44)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":95:47)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":95:61)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":96:13)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":97:17)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":100:57)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":100:13)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":100:18)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":100:28)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":100:41)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":100:52)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":100:53)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":102:30)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":102:36)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":102:23)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":102:13)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":102:40)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":103:13)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":106:13)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":103:17)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":104:13)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":105:28)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":105:18)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":105:17)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":107:30)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":107:36)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":107:23)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":107:13)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":107:40)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":108:13)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":111:13)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":108:17)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":109:13)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":110:28)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":110:18)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":110:17)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":113:16)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":114:9)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":117:9)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":114:13)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":114:29)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":115:9)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":116:26)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":116:13)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":118:9)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":121:9)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":118:13)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":118:29)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":119:9)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":120:26)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":120:13)
#loc181 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":525:7)
#loc182 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":526:34)
#loc183 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":664:7)
#loc184 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":673:7)
#loc185 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":736:7)
#loc186 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":741:7)
#loc187 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":606:7)
#loc188 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":607:9)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":131:1)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":139:1)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":132:1)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":133:5)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":138:5)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":134:9)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":134:18)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":136:32)
#loc198 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":665:57)
#loc199 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":665:67)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":136:19)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_ifstream_83_bad.cpp":137:19)
#loc202 = loc(fused[#loc1, #loc2])
#loc203 = loc(fused[#loc3, #loc4])
#loc204 = loc(fused[#loc5, #loc6])
#loc205 = loc(fused[#loc7, #loc8])
#loc206 = loc(fused[#loc9, #loc10])
#loc207 = loc(fused[#loc11, #loc12])
#loc208 = loc(fused[#loc13, #loc14])
#loc209 = loc(fused[#loc15, #loc16])
#loc210 = loc(fused[#loc17, #loc18])
#loc211 = loc(fused[#loc19, #loc20])
#loc213 = loc(fused[#loc27, #loc25])
#loc214 = loc(fused[#loc28, #loc29])
#loc215 = loc(fused[#loc30, #loc31])
#loc216 = loc(fused[#loc32, #loc33])
#loc217 = loc(fused[#loc34, #loc35])
#loc218 = loc(fused[#loc36, #loc37])
#loc219 = loc(fused[#loc38, #loc39])
#loc220 = loc(fused[#loc40, #loc41])
#loc221 = loc(fused[#loc44, #loc45])
#loc222 = loc(fused[#loc46, #loc47])
#loc223 = loc(fused[#loc52, #loc53])
#loc224 = loc(fused[#loc54, #loc55])
#loc225 = loc(fused[#loc56, #loc57])
#loc226 = loc(fused[#loc58, #loc55])
#loc227 = loc(fused[#loc60, #loc61])
#loc228 = loc(fused[#loc63, #loc64])
#loc229 = loc(fused[#loc65, #loc66])
#loc230 = loc(fused[#loc69, #loc67])
#loc231 = loc(fused[#loc73, #loc70])
#loc232 = loc(fused[#loc77, #loc78])
#loc233 = loc(fused[#loc79, #loc80])
#loc234 = loc(fused[#loc82, #loc83])
#loc235 = loc(fused[#loc84, #loc85])
#loc236 = loc(fused[#loc86, #loc87])
#loc237 = loc(fused[#loc88, #loc80])
#loc238 = loc(fused[#loc90, #loc91])
#loc239 = loc(fused[#loc94, #loc95])
#loc240 = loc(fused[#loc96, #loc91])
#loc241 = loc(fused[#loc102, #loc103])
#loc242 = loc(fused[#loc104, #loc105])
#loc243 = loc(fused[#loc106, #loc107])
#loc244 = loc(fused[#loc108, #loc105])
#loc245 = loc(fused[#loc114, #loc115])
#loc246 = loc(fused[#loc116, #loc117])
#loc247 = loc(fused[#loc118, #loc119])
#loc248 = loc(fused[#loc118, #loc120])
#loc249 = loc(fused[#loc116, #loc121])
#loc250 = loc(fused[#loc124, #loc125])
#loc251 = loc(fused[#loc126, #loc127])
#loc252 = loc(fused[#loc128, #loc129])
#loc253 = loc(fused[#loc131, #loc132])
#loc254 = loc(fused[#loc133, #loc127])
#loc255 = loc(fused[#loc139, #loc140])
#loc256 = loc(fused[#loc138, #loc140])
#loc257 = loc(fused[#loc137, #loc140])
#loc258 = loc(fused[#loc136, #loc135])
#loc259 = loc(fused[#loc145, #loc146])
#loc260 = loc(fused[#loc147, #loc148])
#loc261 = loc(fused[#loc150, #loc148])
#loc262 = loc(fused[#loc153, #loc151])
#loc263 = loc(fused[#loc157, #loc158])
#loc264 = loc(fused[#loc159, #loc160])
#loc265 = loc(fused[#loc162, #loc160])
#loc266 = loc(fused[#loc165, #loc163])
#loc267 = loc(fused[#loc167, #loc168])
#loc268 = loc(fused[#loc169, #loc170])
#loc269 = loc(fused[#loc171, #loc168])
#loc270 = loc(fused[#loc174, #loc175])
#loc271 = loc(fused[#loc176, #loc177])
#loc272 = loc(fused[#loc178, #loc175])
#loc273 = loc(fused[#loc181, #loc182])
#loc274 = loc(fused[#loc183, #loc184])
#loc275 = loc(fused[#loc185, #loc186])
#loc276 = loc(fused[#loc187, #loc188])
#loc277 = loc(fused[#loc189, #loc190])
#loc278 = loc(fused[#loc193, #loc194])
#loc279 = loc(fused[#loc195, #loc196])
#loc280 = loc(fused[#loc198, #loc199])
