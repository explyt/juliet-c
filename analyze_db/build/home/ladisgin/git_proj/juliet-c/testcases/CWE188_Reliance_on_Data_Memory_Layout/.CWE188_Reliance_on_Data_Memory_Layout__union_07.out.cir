!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc44 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":111:10)
#loc45 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":111:14)
#loc46 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":111:20)
#loc47 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":111:32)
!ty_anon2E1_ = !cir.struct<struct "anon.1" {!s8i, !s8i, !s8i, !s8i} #cir.record.decl.ast>
#loc119 = loc(fused[#loc44, #loc45])
#loc120 = loc(fused[#loc46, #loc47])
!ty_anon2E0_ = !cir.struct<union "anon.0" {!ty_anon2E1_, !s64i}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE188_Reliance_on_Data_Memory_Layout/CWE188_Reliance_on_Data_Memory_Layout__union_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc102)
  cir.func private @printIntLine(!s32i) loc(#loc103)
  cir.func no_proto @CWE188_Reliance_on_Data_Memory_Layout__union_07_bad() extra(#fn_attr) {
    %0 = cir.alloca !ty_anon2E0_, !cir.ptr<!ty_anon2E0_>, ["unionStructLong"] {alignment = 8 : i64} loc(#loc105)
    cir.br ^bb1 loc(#loc106)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc102)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc11)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc12)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc107)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc108)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc109)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<270544960> : !s32i loc(#loc16)
    %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc16)
    %7 = cir.get_member %0[1] {name = "longNumber"} : !cir.ptr<!ty_anon2E0_> -> !cir.ptr<!s64i> loc(#loc17)
    cir.store %6, %7 : !s64i, !cir.ptr<!s64i> loc(#loc110)
    %8 = cir.const #cir.int<128> : !s32i loc(#loc19)
    %9 = cir.get_member %0[0] {name = "structChars"} : !cir.ptr<!ty_anon2E0_> -> !cir.ptr<!ty_anon2E1_> loc(#loc20)
    %10 = cir.get_member %9[3] {name = "charFourth"} : !cir.ptr<!ty_anon2E1_> -> !cir.ptr<!s8i> loc(#loc21)
    %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc22)
    %12 = cir.cast(integral, %11 : !s8i), !s32i loc(#loc22)
    %13 = cir.binop(or, %12, %8) : !s32i loc(#loc111)
    %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc111)
    cir.store %14, %10 : !s8i, !cir.ptr<!s8i> loc(#loc111)
    %15 = cir.get_member %0[1] {name = "longNumber"} : !cir.ptr<!ty_anon2E0_> -> !cir.ptr<!s64i> loc(#loc17)
    %16 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc24)
    %17 = cir.cast(integral, %16 : !s64i), !s32i loc(#loc24)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc25)
    cir.br ^bb4 loc(#loc15)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc10)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc10)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc104)
  cir.func no_proto @CWE188_Reliance_on_Data_Memory_Layout__union_07_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc113)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc114)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc30)
    cir.return loc(#loc27)
  } loc(#loc112)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc115)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc116)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc41)
  cir.func @main(%arg0: !s32i loc(fused[#loc44, #loc45]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc46, #loc47])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc119)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc120)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc43)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc48)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc48)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc49)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc50)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc50)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc51)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc38)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %8 = cir.get_global @CWE188_Reliance_on_Data_Memory_Layout__union_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc121)
    cir.call @CWE188_Reliance_on_Data_Memory_Layout__union_07_good() : () -> () loc(#loc53)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc39)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc40)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %13 = cir.get_global @CWE188_Reliance_on_Data_Memory_Layout__union_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc122)
    cir.call @CWE188_Reliance_on_Data_Memory_Layout__union_07_bad() : () -> () loc(#loc57)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc41)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc60)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    cir.return %17 : !s32i loc(#loc123)
  } loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc62)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["longNumber"] {alignment = 8 : i64} loc(#loc125)
    cir.br ^bb1 loc(#loc126)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc102)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc70)
    %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc127)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc128)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc62)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    cir.br ^bb6 loc(#loc72)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc129)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.int<270544960> : !s32i loc(#loc77)
    %8 = cir.cast(integral, %7 : !s32i), !s64i loc(#loc77)
    cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc130)
    %9 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc79)
    %10 = cir.unary(minus, %9) : !s64i, !s64i loc(#loc79)
    %11 = cir.const #cir.int<1> : !s64i loc(#loc79)
    %12 = cir.binop(sub, %10, %11) nsw : !s64i loc(#loc79)
    %13 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc80)
    %14 = cir.binop(or, %13, %12) : !s64i loc(#loc131)
    cir.store %14, %0 : !s64i, !cir.ptr<!s64i> loc(#loc131)
    %15 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc82)
    %16 = cir.cast(integral, %15 : !s64i), !s32i loc(#loc82)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc83)
    cir.br ^bb5 loc(#loc76)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc68)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc68)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc64)
  } loc(#loc124)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["longNumber"] {alignment = 8 : i64} loc(#loc133)
    cir.br ^bb1 loc(#loc134)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc102)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %3 = cir.const #cir.int<5> : !s32i loc(#loc91)
    %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc135)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc136)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc137)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<270544960> : !s32i loc(#loc95)
    %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc95)
    cir.store %6, %0 : !s64i, !cir.ptr<!s64i> loc(#loc138)
    %7 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc97)
    %8 = cir.unary(minus, %7) : !s64i, !s64i loc(#loc97)
    %9 = cir.const #cir.int<1> : !s64i loc(#loc97)
    %10 = cir.binop(sub, %8, %9) nsw : !s64i loc(#loc97)
    %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc98)
    %12 = cir.binop(or, %11, %10) : !s64i loc(#loc139)
    cir.store %12, %0 : !s64i, !cir.ptr<!s64i> loc(#loc139)
    %13 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc100)
    %14 = cir.cast(integral, %13 : !s64i), !s32i loc(#loc100)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc101)
    cir.br ^bb4 loc(#loc94)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc89)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc89)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc85)
  } loc(#loc132)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE188_Reliance_on_Data_Memory_Layout/CWE188_Reliance_on_Data_Memory_Layout__union_07.c":0:0)
#loc1 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":21:1)
#loc2 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":21:25)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":25:1)
#loc6 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":45:1)
#loc7 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":30:13)
#loc8 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":37:15)
#loc9 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":27:5)
#loc10 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":44:5)
#loc11 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":27:8)
#loc12 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":27:20)
#loc13 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":28:5)
#loc14 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":29:9)
#loc15 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":43:9)
#loc16 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":38:42)
#loc17 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":36:22)
#loc18 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":38:13)
#loc19 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":41:55)
#loc20 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":35:19)
#loc21 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":34:60)
#loc22 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":41:52)
#loc23 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":41:13)
#loc24 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":42:42)
#loc25 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":42:13)
#loc26 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":96:1)
#loc27 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":100:1)
#loc28 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":98:5)
#loc29 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":98:11)
#loc30 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":99:5)
#loc31 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":99:11)
#loc32 = loc("/usr/include/stdlib.h":575:1)
#loc33 = loc("/usr/include/stdlib.h":575:41)
#loc34 = loc("/usr/include/time.h":76:1)
#loc35 = loc("/usr/include/time.h":76:38)
#loc36 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc37 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc38 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":116:15)
#loc39 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":118:15)
#loc40 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":121:15)
#loc41 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":123:15)
#loc42 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":111:1)
#loc43 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":126:1)
#loc48 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":112:1)
#loc49 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":114:27)
#loc50 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":114:22)
#loc51 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":114:5)
#loc52 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":116:5)
#loc53 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":117:5)
#loc54 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":117:58)
#loc55 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":118:5)
#loc56 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":121:5)
#loc57 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":122:5)
#loc58 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":122:57)
#loc59 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":123:5)
#loc60 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":125:12)
#loc61 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":125:5)
#loc62 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":57:19)
#loc63 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":52:1)
#loc64 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":74:1)
#loc65 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":62:13)
#loc66 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":62:18)
#loc67 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":54:5)
#loc68 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":73:5)
#loc69 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":54:8)
#loc70 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":54:20)
#loc71 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":55:5)
#loc72 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":58:5)
#loc73 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":60:5)
#loc74 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":57:9)
#loc75 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":61:9)
#loc76 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":72:9)
#loc77 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":63:26)
#loc78 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":63:13)
#loc79 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":70:27)
#loc80 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":70:24)
#loc81 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":70:13)
#loc82 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":71:26)
#loc83 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":71:13)
#loc84 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":77:1)
#loc85 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":94:1)
#loc86 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":82:13)
#loc87 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":82:18)
#loc88 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":79:5)
#loc89 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":93:5)
#loc90 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":79:8)
#loc91 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":79:20)
#loc92 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":80:5)
#loc93 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":81:9)
#loc94 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":92:9)
#loc95 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":83:26)
#loc96 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":83:13)
#loc97 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":90:27)
#loc98 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":90:24)
#loc99 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":90:13)
#loc100 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":91:26)
#loc101 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_07.c":91:13)
#loc102 = loc(fused[#loc1, #loc2])
#loc103 = loc(fused[#loc3, #loc4])
#loc104 = loc(fused[#loc5, #loc6])
#loc105 = loc(fused[#loc7, #loc8])
#loc106 = loc(fused[#loc9, #loc10])
#loc107 = loc(fused[#loc11, #loc12])
#loc108 = loc(fused[#loc13, #loc10])
#loc109 = loc(fused[#loc14, #loc15])
#loc110 = loc(fused[#loc18, #loc16])
#loc111 = loc(fused[#loc23, #loc19])
#loc112 = loc(fused[#loc26, #loc27])
#loc113 = loc(fused[#loc28, #loc29])
#loc114 = loc(fused[#loc30, #loc31])
#loc115 = loc(fused[#loc32, #loc33])
#loc116 = loc(fused[#loc34, #loc35])
#loc117 = loc(fused[#loc36, #loc37])
#loc118 = loc(fused[#loc42, #loc43])
#loc121 = loc(fused[#loc53, #loc54])
#loc122 = loc(fused[#loc57, #loc58])
#loc123 = loc(fused[#loc61, #loc60])
#loc124 = loc(fused[#loc63, #loc64])
#loc125 = loc(fused[#loc65, #loc66])
#loc126 = loc(fused[#loc67, #loc68])
#loc127 = loc(fused[#loc69, #loc70])
#loc128 = loc(fused[#loc71, #loc72, #loc73, #loc68])
#loc129 = loc(fused[#loc75, #loc76])
#loc130 = loc(fused[#loc78, #loc77])
#loc131 = loc(fused[#loc81, #loc79])
#loc132 = loc(fused[#loc84, #loc85])
#loc133 = loc(fused[#loc86, #loc87])
#loc134 = loc(fused[#loc88, #loc89])
#loc135 = loc(fused[#loc90, #loc91])
#loc136 = loc(fused[#loc92, #loc89])
#loc137 = loc(fused[#loc93, #loc94])
#loc138 = loc(fused[#loc96, #loc95])
#loc139 = loc(fused[#loc99, #loc97])
