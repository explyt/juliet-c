!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc104)
  cir.func private @fread(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc105)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc106)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc107)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fread failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc109)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc110)
    cir.br ^bb1 loc(#loc111)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc112)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc112)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc18)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc18)
    cir.brcond %5 ^bb2, ^bb9 loc(#loc113)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc114)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc109)
    cir.store %6, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc109)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    cir.br ^bb4 loc(#loc115)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc25)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc117)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc30)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc30)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc106)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
    %18 = cir.call @fread(%10, %11, %15, %17) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc25)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc33)
    %21 = cir.cmp(eq, %18, %20) : !u64i, !cir.bool loc(#loc118)
    cir.brcond %21 ^bb5, ^bb6 loc(#loc119)
  ^bb5:  // pred: ^bb4
    %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc9)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    cir.br ^bb6 loc(#loc24)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc24)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc22)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc17)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc17)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc11)
  } loc(#loc108)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc121)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc122)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc120)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc44)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc125)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc126)
    cir.br ^bb1 loc(#loc127)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc128)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc128)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc53)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc53)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc129)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc44)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    cir.br ^bb10 loc(#loc56)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc130)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc125)
    cir.store %8, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc125)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
    cir.br ^bb5 loc(#loc131)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc63)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc133)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc68)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc68)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc68)
    %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc106)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc70)
    %20 = cir.call @fread(%12, %13, %17, %19) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc63)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc71)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc71)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc71)
    %25 = cir.cmp(ne, %20, %24) : !u64i, !cir.bool loc(#loc134)
    cir.brcond %25 ^bb6, ^bb7 loc(#loc135)
  ^bb6:  // pred: ^bb5
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc74)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    cir.br ^bb7 loc(#loc62)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc62)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc60)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc52)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc52)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc46)
  } loc(#loc124)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc137)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc138)
    cir.br ^bb1 loc(#loc139)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc140)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc140)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc84)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc84)
    cir.brcond %5 ^bb2, ^bb9 loc(#loc141)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc142)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc137)
    cir.store %6, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc137)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc138)
    cir.br ^bb4 loc(#loc143)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc91)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc144)
    %11 = cir.const #cir.int<1> : !u64i loc(#loc145)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc96)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc96)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc106)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc98)
    %18 = cir.call @fread(%10, %11, %15, %17) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc91)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc99)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc99)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc99)
    %23 = cir.cmp(ne, %18, %22) : !u64i, !cir.bool loc(#loc146)
    cir.brcond %23 ^bb5, ^bb6 loc(#loc147)
  ^bb5:  // pred: ^bb4
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc102)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    cir.br ^bb6 loc(#loc90)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc90)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc88)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc83)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc83)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc77)
  } loc(#loc136)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdio.h":728:1)
#loc4 = loc("/usr/include/stdio.h":730:3)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":37:27)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":24:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":41:1)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":31:13)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":31:36)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":32:13)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":32:27)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":26:5)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":40:5)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":26:8)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":26:26)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":27:5)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":28:9)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":39:9)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":35:13)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":38:13)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":35:17)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":35:31)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":35:23)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":35:37)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":35:48)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":35:60)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":35:64)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":35:68)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":35:78)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":36:13)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":37:17)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":90:1)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":94:1)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":92:5)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":92:11)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":93:5)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":93:11)
#loc42 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc43 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":53:19)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":48:1)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":69:1)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":60:13)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":60:36)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":61:13)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":61:27)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":50:5)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":68:5)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":50:8)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":50:27)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":51:5)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":54:5)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":56:5)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":53:9)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":57:9)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":67:9)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":63:13)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":66:13)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":63:17)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":63:31)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":63:23)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":63:37)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":63:48)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":63:60)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":63:64)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":63:68)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":63:78)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":63:82)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":64:13)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":65:27)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":65:17)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":72:1)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":88:1)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":79:13)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":79:36)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":80:13)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":80:27)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":74:5)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":87:5)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":74:8)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":74:26)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":75:5)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":76:9)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":86:9)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":82:13)
#loc90 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":85:13)
#loc91 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":82:17)
#loc92 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":82:31)
#loc93 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":82:23)
#loc94 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":82:37)
#loc95 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":82:48)
#loc96 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":82:60)
#loc97 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":82:64)
#loc98 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":82:68)
#loc99 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":82:78)
#loc100 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":82:82)
#loc101 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":83:13)
#loc102 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":84:27)
#loc103 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_11.c":84:17)
#loc104 = loc(fused[#loc1, #loc2])
#loc105 = loc(fused[#loc3, #loc4])
#loc106 = loc(fused[#loc5, #loc6])
#loc107 = loc(fused[#loc7, #loc8])
#loc108 = loc(fused[#loc10, #loc11])
#loc109 = loc(fused[#loc12, #loc13])
#loc110 = loc(fused[#loc14, #loc15])
#loc111 = loc(fused[#loc16, #loc17])
#loc112 = loc(fused[#loc18, #loc19])
#loc113 = loc(fused[#loc20, #loc17])
#loc114 = loc(fused[#loc21, #loc22])
#loc115 = loc(fused[#loc23, #loc24])
#loc116 = loc(fused[#loc27, #loc26])
#loc117 = loc(fused[#loc28, #loc29])
#loc118 = loc(fused[#loc25, #loc33])
#loc119 = loc(fused[#loc34, #loc24])
#loc120 = loc(fused[#loc36, #loc37])
#loc121 = loc(fused[#loc38, #loc39])
#loc122 = loc(fused[#loc40, #loc41])
#loc123 = loc(fused[#loc42, #loc43])
#loc124 = loc(fused[#loc45, #loc46])
#loc125 = loc(fused[#loc47, #loc48])
#loc126 = loc(fused[#loc49, #loc50])
#loc127 = loc(fused[#loc51, #loc52])
#loc128 = loc(fused[#loc53, #loc54])
#loc129 = loc(fused[#loc55, #loc56, #loc57, #loc52])
#loc130 = loc(fused[#loc59, #loc60])
#loc131 = loc(fused[#loc61, #loc62])
#loc132 = loc(fused[#loc65, #loc64])
#loc133 = loc(fused[#loc66, #loc67])
#loc134 = loc(fused[#loc63, #loc72])
#loc135 = loc(fused[#loc73, #loc62])
#loc136 = loc(fused[#loc76, #loc77])
#loc137 = loc(fused[#loc78, #loc79])
#loc138 = loc(fused[#loc80, #loc81])
#loc139 = loc(fused[#loc82, #loc83])
#loc140 = loc(fused[#loc84, #loc85])
#loc141 = loc(fused[#loc86, #loc83])
#loc142 = loc(fused[#loc87, #loc88])
#loc143 = loc(fused[#loc89, #loc90])
#loc144 = loc(fused[#loc93, #loc92])
#loc145 = loc(fused[#loc94, #loc95])
#loc146 = loc(fused[#loc91, #loc100])
#loc147 = loc(fused[#loc101, #loc90])
