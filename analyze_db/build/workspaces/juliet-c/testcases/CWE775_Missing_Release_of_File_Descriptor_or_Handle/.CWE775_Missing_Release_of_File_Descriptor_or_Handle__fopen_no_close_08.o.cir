!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE775_Missing_Release_of_File_Descriptor_or_Handle/CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_fopen.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto @CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc89)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc90)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc11)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc3)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc3)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc11)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc91)
    cir.scope {
      %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc93)
      %9 = cir.call %8() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc16)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc16)
      cir.if %10 {
      } loc(#loc94)
    } loc(#loc92)
    cir.return loc(#loc6)
  } loc(#loc88)
  cir.func no_proto @CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc96)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc21)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc97)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc23)
    cir.return loc(#loc20)
  } loc(#loc95)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc26)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc27)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    cir.return %2 : !s32i loc(#loc99)
  } loc(#loc98)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc31)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc101)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc103)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc38)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc104)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc40)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc41)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc41)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc42)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc42)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc40)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc105)
    cir.scope {
      %8 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc107)
      %9 = cir.call %8() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc47)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc47)
      cir.if %10 {
        %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc31)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc31)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc52)
      } else {
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc55)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc56)
          %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc110)
          cir.if %14 {
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc58)
            %16 = cir.call @fclose(%15) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc59)
          } loc(#loc111)
        } loc(#loc109)
      } loc(#loc108)
    } loc(#loc106)
    cir.return loc(#loc35)
  } loc(#loc102)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc61)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc62)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    cir.return %2 : !s32i loc(#loc113)
  } loc(#loc112)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc115)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc68)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc116)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc70)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc71)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc71)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc72)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc72)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc70)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc117)
    cir.scope {
      %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc119)
      %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc77)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc77)
      cir.if %10 {
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc82)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc83)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc83)
          %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc122)
          cir.if %14 {
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc85)
            %16 = cir.call @fclose(%15) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc86)
          } loc(#loc123)
        } loc(#loc121)
      } loc(#loc120)
    } loc(#loc118)
    cir.return loc(#loc65)
  } loc(#loc114)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE775_Missing_Release_of_File_Descriptor_or_Handle/CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":39:18)
#loc4 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":39:41)
#loc5 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":34:1)
#loc6 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":45:1)
#loc7 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":36:5)
#loc8 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":36:12)
#loc9 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":37:12)
#loc10 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":37:5)
#loc11 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":39:12)
#loc12 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":39:5)
#loc13 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":39:45)
#loc14 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":40:5)
#loc15 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":44:5)
#loc16 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":40:8)
#loc17 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":40:26)
#loc18 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":41:5)
#loc19 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":90:1)
#loc20 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":94:1)
#loc21 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":92:5)
#loc22 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":92:14)
#loc23 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":93:5)
#loc24 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":93:14)
#loc25 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":22:1)
#loc26 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":25:1)
#loc27 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":24:12)
#loc28 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":24:5)
#loc29 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc31 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":61:19)
#loc32 = loc("/usr/include/stdio.h":184:1)
#loc33 = loc("/usr/include/stdio.h":184:36)
#loc34 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":52:1)
#loc35 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":71:1)
#loc36 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":54:5)
#loc37 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":54:12)
#loc38 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":55:12)
#loc39 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":55:5)
#loc40 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":57:12)
#loc41 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":57:18)
#loc42 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":57:41)
#loc43 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":57:5)
#loc44 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":57:45)
#loc45 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":58:5)
#loc46 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":70:5)
#loc47 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":58:8)
#loc48 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":58:27)
#loc49 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":59:5)
#loc50 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":62:5)
#loc51 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":64:5)
#loc52 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":61:9)
#loc53 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":66:9)
#loc54 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":69:9)
#loc55 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":66:13)
#loc56 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":66:21)
#loc57 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":67:9)
#loc58 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":68:20)
#loc59 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":68:13)
#loc60 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":27:1)
#loc61 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":30:1)
#loc62 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":29:12)
#loc63 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":29:5)
#loc64 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":74:1)
#loc65 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":88:1)
#loc66 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":76:5)
#loc67 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":76:12)
#loc68 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":77:12)
#loc69 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":77:5)
#loc70 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":79:12)
#loc71 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":79:18)
#loc72 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":79:41)
#loc73 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":79:5)
#loc74 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":79:45)
#loc75 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":80:5)
#loc76 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":87:5)
#loc77 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":80:8)
#loc78 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":80:26)
#loc79 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":81:5)
#loc80 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":83:9)
#loc81 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":86:9)
#loc82 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":83:13)
#loc83 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":83:21)
#loc84 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":84:9)
#loc85 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":85:20)
#loc86 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__fopen_no_close_08.c":85:13)
#loc87 = loc(fused[#loc1, #loc2])
#loc88 = loc(fused[#loc5, #loc6])
#loc89 = loc(fused[#loc7, #loc8])
#loc90 = loc(fused[#loc10, #loc9])
#loc91 = loc(fused[#loc12, #loc13])
#loc92 = loc(fused[#loc14, #loc15])
#loc93 = loc(fused[#loc16, #loc17])
#loc94 = loc(fused[#loc18, #loc15])
#loc95 = loc(fused[#loc19, #loc20])
#loc96 = loc(fused[#loc21, #loc22])
#loc97 = loc(fused[#loc23, #loc24])
#loc98 = loc(fused[#loc25, #loc26])
#loc99 = loc(fused[#loc28, #loc27])
#loc100 = loc(fused[#loc29, #loc30])
#loc101 = loc(fused[#loc32, #loc33])
#loc102 = loc(fused[#loc34, #loc35])
#loc103 = loc(fused[#loc36, #loc37])
#loc104 = loc(fused[#loc39, #loc38])
#loc105 = loc(fused[#loc43, #loc44])
#loc106 = loc(fused[#loc45, #loc46])
#loc107 = loc(fused[#loc47, #loc48])
#loc108 = loc(fused[#loc49, #loc50, #loc51, #loc46])
#loc109 = loc(fused[#loc53, #loc54])
#loc110 = loc(fused[#loc55, #loc56])
#loc111 = loc(fused[#loc57, #loc54])
#loc112 = loc(fused[#loc60, #loc61])
#loc113 = loc(fused[#loc63, #loc62])
#loc114 = loc(fused[#loc64, #loc65])
#loc115 = loc(fused[#loc66, #loc67])
#loc116 = loc(fused[#loc69, #loc68])
#loc117 = loc(fused[#loc73, #loc74])
#loc118 = loc(fused[#loc75, #loc76])
#loc119 = loc(fused[#loc77, #loc78])
#loc120 = loc(fused[#loc79, #loc76])
#loc121 = loc(fused[#loc80, #loc81])
#loc122 = loc(fused[#loc82, #loc83])
#loc123 = loc(fused[#loc84, #loc81])
