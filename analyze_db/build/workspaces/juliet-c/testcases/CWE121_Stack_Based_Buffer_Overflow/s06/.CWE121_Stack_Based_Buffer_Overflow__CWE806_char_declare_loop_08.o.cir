!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc191)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc192)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc194)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc195)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc196)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc197)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc198)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc16)
    cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
    cir.br ^bb1 loc(#loc200)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc201)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc20)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc20)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc202)
  ^bb2:  // pred: ^bb1
    %9 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc24)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc25)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc25)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc203)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc29)
    %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc31)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc31)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc33)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc204)
    cir.br ^bb3 loc(#loc19)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc205)
  ^bb5:  // pred: ^bb4
    %23 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc194)
    cir.store %23, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc194)
    %24 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc36)
    %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc36)
    cir.store %26, %2 : !u64i, !cir.ptr<!u64i> loc(#loc206)
    cir.br ^bb6 loc(#loc207)
  ^bb6:  // pred: ^bb5
    %27 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc42)
    cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc208)
    cir.br ^bb7 loc(#loc207)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %30 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %31 = cir.cmp(lt, %29, %30) : !u64i, !cir.bool loc(#loc209)
    cir.brcond %31 ^bb8, ^bb12 loc(#loc46)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc210)
  ^bb9:  // pred: ^bb8
    %32 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %33 : !u64i), !cir.ptr<!s8i> loc(#loc50)
    %35 = cir.load %34 : !cir.ptr<!s8i>, !s8i loc(#loc48)
    %36 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc52)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc52)
    cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc211)
    cir.br ^bb10 loc(#loc41)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc41)
  ^bb11:  // pred: ^bb10
    %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %40 = cir.unary(inc, %39) : !u64i, !u64i loc(#loc54)
    cir.store %40, %1 : !u64i, !cir.ptr<!u64i> loc(#loc212)
    cir.br ^bb7 loc(#loc207)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc41)
  ^bb13:  // pred: ^bb12
    %41 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc55)
    %43 = cir.const #cir.int<50> : !s32i loc(#loc56)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %45 = cir.binop(sub, %43, %44) nsw : !s32i loc(#loc56)
    %46 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc58)
    %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc58)
    cir.store %42, %47 : !s8i, !cir.ptr<!s8i> loc(#loc213)
    %48 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    cir.br ^bb14 loc(#loc35)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc6)
  } loc(#loc193)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc215)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc63)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc216)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc65)
    cir.return loc(#loc62)
  } loc(#loc214)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc68)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc69)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc218)
    cir.return %2 : !s32i loc(#loc218)
  } loc(#loc217)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc71)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc220)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc221)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc222)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc223)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc224)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc83)
    cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc225)
    cir.br ^bb1 loc(#loc226)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc227)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc87)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc87)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc228)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc71)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    cir.br ^bb4 loc(#loc90)
  ^bb3:  // pred: ^bb1
    %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc93)
    %13 = cir.const #cir.int<65> : !s32i loc(#loc94)
    %14 = cir.const #cir.int<50> : !s32i loc(#loc95)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc95)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc95)
    cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc229)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc99)
    %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc101)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc101)
    %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc103)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc230)
    cir.br ^bb4 loc(#loc86)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc86)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc231)
  ^bb6:  // pred: ^bb5
    %25 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc220)
    cir.store %25, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc220)
    %26 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc106)
    %27 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %28 = cir.call @strlen(%27) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc106)
    cir.store %28, %2 : !u64i, !cir.ptr<!u64i> loc(#loc232)
    cir.br ^bb7 loc(#loc233)
  ^bb7:  // pred: ^bb6
    %29 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc112)
    cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc234)
    cir.br ^bb8 loc(#loc233)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc114)
    %32 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %33 = cir.cmp(lt, %31, %32) : !u64i, !cir.bool loc(#loc235)
    cir.brcond %33 ^bb9, ^bb13 loc(#loc116)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc236)
  ^bb10:  // pred: ^bb9
    %34 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc119)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc120)
    %37 = cir.load %36 : !cir.ptr<!s8i>, !s8i loc(#loc118)
    %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc121)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc122)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc122)
    cir.store %37, %40 : !s8i, !cir.ptr<!s8i> loc(#loc237)
    cir.br ^bb11 loc(#loc111)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc111)
  ^bb12:  // pred: ^bb11
    %41 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc123)
    %42 = cir.unary(inc, %41) : !u64i, !u64i loc(#loc124)
    cir.store %42, %1 : !u64i, !cir.ptr<!u64i> loc(#loc238)
    cir.br ^bb8 loc(#loc233)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc111)
  ^bb14:  // pred: ^bb13
    %43 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %44 = cir.cast(integral, %43 : !s32i), !s8i loc(#loc125)
    %45 = cir.const #cir.int<50> : !s32i loc(#loc126)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %47 = cir.binop(sub, %45, %46) nsw : !s32i loc(#loc126)
    %48 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc128)
    %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc128)
    cir.store %44, %49 : !s8i, !cir.ptr<!s8i> loc(#loc239)
    %50 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%50) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    cir.br ^bb15 loc(#loc105)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc73)
  } loc(#loc219)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc132)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc133)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    cir.return %2 : !s32i loc(#loc241)
  } loc(#loc240)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc243)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc244)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc245)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc246)
    %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc247)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
    cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc248)
    cir.br ^bb1 loc(#loc249)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc250)
    %7 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc150)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc150)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc251)
  ^bb2:  // pred: ^bb1
    %9 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc153)
    %11 = cir.const #cir.int<65> : !s32i loc(#loc154)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc155)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc155)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc155)
    cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc252)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc159)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc159)
    %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
    %19 = cir.const #cir.int<50> : !s32i loc(#loc161)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc161)
    %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc163)
    cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc253)
    cir.br ^bb3 loc(#loc149)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc149)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc254)
  ^bb5:  // pred: ^bb4
    %23 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc243)
    cir.store %23, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc243)
    %24 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc166)
    %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
    %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc166)
    cir.store %26, %2 : !u64i, !cir.ptr<!u64i> loc(#loc255)
    cir.br ^bb6 loc(#loc256)
  ^bb6:  // pred: ^bb5
    %27 = cir.const #cir.int<0> : !s32i loc(#loc172)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc172)
    cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc257)
    cir.br ^bb7 loc(#loc256)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc174)
    %30 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc175)
    %31 = cir.cmp(lt, %29, %30) : !u64i, !cir.bool loc(#loc258)
    cir.brcond %31 ^bb8, ^bb12 loc(#loc176)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc259)
  ^bb9:  // pred: ^bb8
    %32 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc179)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %33 : !u64i), !cir.ptr<!s8i> loc(#loc180)
    %35 = cir.load %34 : !cir.ptr<!s8i>, !s8i loc(#loc178)
    %36 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc181)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc182)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc182)
    cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc260)
    cir.br ^bb10 loc(#loc171)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc171)
  ^bb11:  // pred: ^bb10
    %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc183)
    %40 = cir.unary(inc, %39) : !u64i, !u64i loc(#loc184)
    cir.store %40, %1 : !u64i, !cir.ptr<!u64i> loc(#loc261)
    cir.br ^bb7 loc(#loc256)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc171)
  ^bb13:  // pred: ^bb12
    %41 = cir.const #cir.int<0> : !s32i loc(#loc185)
    %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc185)
    %43 = cir.const #cir.int<50> : !s32i loc(#loc186)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc187)
    %45 = cir.binop(sub, %43, %44) nsw : !s32i loc(#loc186)
    %46 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc188)
    %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc188)
    cir.store %42, %47 : !s8i, !cir.ptr<!s8i> loc(#loc262)
    %48 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc189)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    cir.br ^bb14 loc(#loc165)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc136)
  } loc(#loc242)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":37:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":60:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":49:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":49:25)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":50:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":50:16)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":50:19)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":39:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":39:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":40:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":40:24)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":41:12)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":41:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":42:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":47:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":42:8)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":42:26)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":43:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":45:16)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":45:22)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":45:27)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":45:31)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":45:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":45:32)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":46:23)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":46:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":46:14)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":46:18)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":46:19)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":48:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":59:5)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":51:19)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":51:26)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":51:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":51:30)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":53:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":56:9)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":53:18)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":53:14)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":53:21)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":53:25)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":53:23)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":54:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":55:23)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":55:28)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":55:29)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":55:18)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":55:13)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":53:35)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":53:34)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":57:22)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":57:14)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":57:17)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":57:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":58:19)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":58:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":123:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":127:1)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":125:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":125:14)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":126:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":126:14)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":25:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":28:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":27:12)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":27:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":75:19)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":67:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":95:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":84:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":84:25)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":85:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":85:16)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":85:19)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":69:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":69:12)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":70:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":70:24)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":71:12)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":71:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":72:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":82:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":72:8)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":72:27)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":73:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":76:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":78:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":75:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":80:16)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":80:22)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":80:27)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":80:30)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":80:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":80:31)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":81:22)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":81:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":81:14)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":81:17)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":81:18)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":83:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":94:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":86:19)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":86:26)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":86:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":86:30)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":88:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":91:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":88:18)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":88:14)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":88:21)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":88:25)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":88:23)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":89:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":90:23)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":90:28)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":90:29)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":90:18)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":90:13)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":88:35)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":88:34)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":92:22)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":92:14)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":92:17)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":92:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":93:19)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":93:9)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":30:1)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":33:1)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":32:12)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":32:5)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":98:1)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":121:1)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":110:9)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":110:25)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":111:9)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":111:16)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":111:19)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":100:5)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":100:12)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":101:5)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":101:24)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":102:12)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":102:5)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":103:5)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":108:5)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":103:8)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":103:26)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":104:5)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":106:16)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":106:22)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":106:27)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":106:30)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":106:9)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":106:31)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":107:22)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":107:9)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":107:14)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":107:17)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":107:18)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":109:5)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":120:5)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":112:19)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":112:26)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":112:9)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":112:30)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":114:9)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":117:9)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":114:18)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":114:14)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":114:21)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":114:25)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":114:23)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":115:9)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":116:23)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":116:28)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":116:29)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":116:18)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":116:13)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":114:35)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":114:34)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":118:22)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":118:14)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":118:17)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":118:9)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":119:19)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_08.c":119:9)
#loc191 = loc(fused[#loc1, #loc2])
#loc192 = loc(fused[#loc3, #loc4])
#loc193 = loc(fused[#loc5, #loc6])
#loc194 = loc(fused[#loc7, #loc8])
#loc195 = loc(fused[#loc9, #loc10])
#loc196 = loc(fused[#loc9, #loc11])
#loc197 = loc(fused[#loc12, #loc13])
#loc198 = loc(fused[#loc14, #loc15])
#loc199 = loc(fused[#loc17, #loc16])
#loc200 = loc(fused[#loc18, #loc19])
#loc201 = loc(fused[#loc20, #loc21])
#loc202 = loc(fused[#loc22, #loc19])
#loc203 = loc(fused[#loc27, #loc28])
#loc204 = loc(fused[#loc30, #loc29])
#loc205 = loc(fused[#loc34, #loc35])
#loc206 = loc(fused[#loc38, #loc39])
#loc207 = loc(fused[#loc40, #loc41])
#loc208 = loc(fused[#loc43, #loc42])
#loc209 = loc(fused[#loc44, #loc45])
#loc210 = loc(fused[#loc47, #loc41])
#loc211 = loc(fused[#loc52, #loc50])
#loc212 = loc(fused[#loc54, #loc53])
#loc213 = loc(fused[#loc58, #loc55])
#loc214 = loc(fused[#loc61, #loc62])
#loc215 = loc(fused[#loc63, #loc64])
#loc216 = loc(fused[#loc65, #loc66])
#loc217 = loc(fused[#loc67, #loc68])
#loc218 = loc(fused[#loc70, #loc69])
#loc219 = loc(fused[#loc72, #loc73])
#loc220 = loc(fused[#loc74, #loc75])
#loc221 = loc(fused[#loc76, #loc77])
#loc222 = loc(fused[#loc76, #loc78])
#loc223 = loc(fused[#loc79, #loc80])
#loc224 = loc(fused[#loc81, #loc82])
#loc225 = loc(fused[#loc84, #loc83])
#loc226 = loc(fused[#loc85, #loc86])
#loc227 = loc(fused[#loc87, #loc88])
#loc228 = loc(fused[#loc89, #loc90, #loc91, #loc86])
#loc229 = loc(fused[#loc97, #loc98])
#loc230 = loc(fused[#loc100, #loc99])
#loc231 = loc(fused[#loc104, #loc105])
#loc232 = loc(fused[#loc108, #loc109])
#loc233 = loc(fused[#loc110, #loc111])
#loc234 = loc(fused[#loc113, #loc112])
#loc235 = loc(fused[#loc114, #loc115])
#loc236 = loc(fused[#loc117, #loc111])
#loc237 = loc(fused[#loc122, #loc120])
#loc238 = loc(fused[#loc124, #loc123])
#loc239 = loc(fused[#loc128, #loc125])
#loc240 = loc(fused[#loc131, #loc132])
#loc241 = loc(fused[#loc134, #loc133])
#loc242 = loc(fused[#loc135, #loc136])
#loc243 = loc(fused[#loc137, #loc138])
#loc244 = loc(fused[#loc139, #loc140])
#loc245 = loc(fused[#loc139, #loc141])
#loc246 = loc(fused[#loc142, #loc143])
#loc247 = loc(fused[#loc144, #loc145])
#loc248 = loc(fused[#loc147, #loc146])
#loc249 = loc(fused[#loc148, #loc149])
#loc250 = loc(fused[#loc150, #loc151])
#loc251 = loc(fused[#loc152, #loc149])
#loc252 = loc(fused[#loc157, #loc158])
#loc253 = loc(fused[#loc160, #loc159])
#loc254 = loc(fused[#loc164, #loc165])
#loc255 = loc(fused[#loc168, #loc169])
#loc256 = loc(fused[#loc170, #loc171])
#loc257 = loc(fused[#loc173, #loc172])
#loc258 = loc(fused[#loc174, #loc175])
#loc259 = loc(fused[#loc177, #loc171])
#loc260 = loc(fused[#loc182, #loc180])
#loc261 = loc(fused[#loc184, #loc183])
#loc262 = loc(fused[#loc188, #loc185])
