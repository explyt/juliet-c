!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":109:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_execl_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.goodG2B.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc204)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_execl_12_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc205)
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc206)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc207)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc208)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc13)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc210)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc211)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc212)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc213)
  cir.func private @close(!s32i) -> !s32i loc(#loc214)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc26)
  cir.func private @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc216)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc29)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc30)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_execl_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc218)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc219)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc220)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc221)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc222)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc223)
    %6 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc205)
    %7 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_execl_12_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc205)
    cir.copy %7 to %6 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc205)
    %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
    cir.store %8, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
    cir.br ^bb1 loc(#loc225)
  ^bb1:  // pred: ^bb0
    %9 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc226)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc226)
    %11 = cir.call %10() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc49)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc49)
    cir.brcond %12 ^bb2, ^bb44 loc(#loc227)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc228)
  ^bb3:  // pred: ^bb2
    %13 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc40)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc56)
    %16 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc56)
    cir.store %17, %4 : !u64i, !cir.ptr<!u64i> loc(#loc222)
    cir.br ^bb4 loc(#loc229)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc229)
  ^bb5:  // pred: ^bb36
    %18 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc60)
    cir.brcond %19 ^bb6, ^bb37 loc(#loc60)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc230)
  ^bb7:  // pred: ^bb6
    %20 = cir.const #cir.int<2> : !s32i loc(#loc63)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %22 = cir.const #cir.int<6> : !s32i loc(#loc65)
    %23 = cir.call @socket(%20, %21, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc66)
    cir.store %23, %3 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    cir.br ^bb8 loc(#loc232)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc72)
    %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc72)
    %27 = cir.cmp(eq, %24, %26) : !s32i, !cir.bool loc(#loc233)
    cir.brcond %27 ^bb9, ^bb10 loc(#loc234)
  ^bb9:  // pred: ^bb8
    cir.br ^bb37 loc(#loc74)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc70)
  ^bb11:  // pred: ^bb10
    %28 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc235)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %30 = cir.const #cir.int<16> : !u64i loc(#loc236)
    cir.libc.memset %30 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc237)
    %31 = cir.const #cir.int<2> : !s32i loc(#loc82)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc82)
    %33 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc238)
    %34 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc13)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc13)
    %36 = cir.call @inet_addr(%35) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc85)
    %37 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc86)
    %38 = cir.get_member %37[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc87)
    cir.store %36, %38 : !u32i, !cir.ptr<!u32i> loc(#loc239)
    %39 = cir.const #cir.int<27015> : !s32i loc(#loc90)
    %40 = cir.cast(integral, %39 : !s32i), !u16i loc(#loc90)
    %41 = cir.call @htons(%40) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc91)
    %42 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc92)
    cir.store %41, %42 : !u16i, !cir.ptr<!u16i> loc(#loc240)
    cir.br ^bb12 loc(#loc241)
  ^bb12:  // pred: ^bb11
    %43 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %44 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc242)
    %45 = cir.const #cir.int<16> : !u64i loc(#loc243)
    %46 = cir.cast(integral, %45 : !u64i), !u32i loc(#loc243)
    %47 = cir.call @connect(%43, %44, %46) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc102)
    %48 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %49 = cir.unary(minus, %48) nsw : !s32i, !s32i loc(#loc103)
    %50 = cir.cmp(eq, %47, %49) : !s32i, !cir.bool loc(#loc244)
    cir.brcond %50 ^bb13, ^bb14 loc(#loc245)
  ^bb13:  // pred: ^bb12
    cir.br ^bb37 loc(#loc105)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc96)
  ^bb15:  // pred: ^bb14
    %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %52 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %53 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc108)
    %54 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %53 : !u64i), !cir.ptr<!s8i> loc(#loc109)
    %55 = cir.cast(bitcast, %54 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc246)
    %56 = cir.const #cir.int<1> : !u64i loc(#loc247)
    %57 = cir.const #cir.int<100> : !s32i loc(#loc114)
    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc114)
    %59 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %60 = cir.binop(sub, %58, %59) : !u64i loc(#loc248)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc116)
    %63 = cir.binop(sub, %60, %62) : !u64i loc(#loc249)
    %64 = cir.binop(mul, %56, %63) : !u64i loc(#loc250)
    %65 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %66 = cir.call @recv(%51, %55, %64, %65) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc119)
    %67 = cir.cast(integral, %66 : !s64i), !s32i loc(#loc119)
    cir.store %67, %0 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    cir.br ^bb16 loc(#loc252)
  ^bb16:  // pred: ^bb15
    %68 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %69 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc125)
    %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc253)
    cir.brcond %71 ^bb17, ^bb18 loc(#loc126)
  ^bb17:  // pred: ^bb16
    %72 = cir.const #true loc(#loc126)
    cir.br ^bb23(%72 : !cir.bool) loc(#loc126)
  ^bb18:  // pred: ^bb16
    %73 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %74 = cir.const #cir.int<0> : !s32i loc(#loc128)
    %75 = cir.cmp(eq, %73, %74) : !s32i, !cir.bool loc(#loc254)
    cir.brcond %75 ^bb19, ^bb20 loc(#loc126)
  ^bb19:  // pred: ^bb18
    %76 = cir.const #true loc(#loc126)
    cir.br ^bb21(%76 : !cir.bool) loc(#loc126)
  ^bb20:  // pred: ^bb18
    %77 = cir.const #false loc(#loc126)
    cir.br ^bb21(%77 : !cir.bool) loc(#loc126)
  ^bb21(%78: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":109:48)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc126)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23(%78 : !cir.bool) loc(#loc126)
  ^bb23(%79: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":109:48)):  // 2 preds: ^bb17, ^bb22
    cir.br ^bb24 loc(#loc126)
  ^bb24:  // pred: ^bb23
    cir.brcond %79 ^bb25, ^bb26 loc(#loc255)
  ^bb25:  // pred: ^bb24
    cir.br ^bb37 loc(#loc130)
  ^bb26:  // pred: ^bb24
    cir.br ^bb27 loc(#loc123)
  ^bb27:  // pred: ^bb26
    %80 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %81 = cir.cast(integral, %80 : !s32i), !s8i loc(#loc131)
    %82 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
    %83 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc133)
    %84 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %85 = cir.cast(integral, %84 : !s32i), !u64i loc(#loc134)
    %86 = cir.const #cir.int<1> : !u64i loc(#loc256)
    %87 = cir.binop(div, %85, %86) : !u64i loc(#loc257)
    %88 = cir.binop(add, %83, %87) : !u64i loc(#loc258)
    %89 = cir.ptr_stride(%82 : !cir.ptr<!s8i>, %88 : !u64i), !cir.ptr<!s8i> loc(#loc137)
    cir.store %81, %89 : !s8i, !cir.ptr<!s8i> loc(#loc259)
    %90 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
    %91 = cir.const #cir.int<13> : !s32i loc(#loc139)
    %92 = cir.call @strchr(%90, %91) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc140)
    cir.store %92, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc260)
    cir.br ^bb28 loc(#loc261)
  ^bb28:  // pred: ^bb27
    %93 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
    %94 = cir.cast(ptr_to_bool, %93 : !cir.ptr<!s8i>), !cir.bool loc(#loc145)
    cir.brcond %94 ^bb29, ^bb30 loc(#loc262)
  ^bb29:  // pred: ^bb28
    %95 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %96 = cir.cast(integral, %95 : !s32i), !s8i loc(#loc147)
    %97 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
    cir.store %96, %97 : !s8i, !cir.ptr<!s8i> loc(#loc263)
    cir.br ^bb30 loc(#loc144)
  ^bb30:  // 2 preds: ^bb28, ^bb29
    cir.br ^bb31 loc(#loc144)
  ^bb31:  // pred: ^bb30
    %98 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    %99 = cir.const #cir.int<10> : !s32i loc(#loc151)
    %100 = cir.call @strchr(%98, %99) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc152)
    cir.store %100, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc264)
    cir.br ^bb32 loc(#loc265)
  ^bb32:  // pred: ^bb31
    %101 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    %102 = cir.cast(ptr_to_bool, %101 : !cir.ptr<!s8i>), !cir.bool loc(#loc157)
    cir.brcond %102 ^bb33, ^bb34 loc(#loc266)
  ^bb33:  // pred: ^bb32
    %103 = cir.const #cir.int<0> : !s32i loc(#loc159)
    %104 = cir.cast(integral, %103 : !s32i), !s8i loc(#loc159)
    %105 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
    cir.store %104, %105 : !s8i, !cir.ptr<!s8i> loc(#loc267)
    cir.br ^bb34 loc(#loc156)
  ^bb34:  // 2 preds: ^bb32, ^bb33
    cir.br ^bb35 loc(#loc156)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc62)
  ^bb36:  // pred: ^bb35
    cir.br ^bb5 loc(#loc59)
  ^bb37:  // 4 preds: ^bb5, ^bb9, ^bb13, ^bb25
    cir.br ^bb38 loc(#loc59)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc268)
  ^bb39:  // pred: ^bb38
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc164)
    %107 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %108 = cir.unary(minus, %107) nsw : !s32i, !s32i loc(#loc165)
    %109 = cir.cmp(ne, %106, %108) : !s32i, !cir.bool loc(#loc269)
    cir.brcond %109 ^bb40, ^bb41 loc(#loc270)
  ^bb40:  // pred: ^bb39
    %110 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    %111 = cir.call @close(%110) : (!s32i) -> !s32i loc(#loc168)
    cir.br ^bb41 loc(#loc163)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc163)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc55)
  ^bb43:  // pred: ^bb42
    cir.br ^bb45 loc(#loc52)
  ^bb44:  // pred: ^bb1
    %112 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc169)
    %113 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
    %114 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc26)
    %115 = cir.cast(array_to_ptrdecay, %114 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc26)
    %116 = cir.call @strcat(%113, %115) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc169)
    cir.br ^bb45 loc(#loc48)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc48)
  ^bb46:  // pred: ^bb45
    %117 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc29)
    %118 = cir.cast(array_to_ptrdecay, %117 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc29)
    %119 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc171)
    %120 = cir.cast(array_to_ptrdecay, %119 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc171)
    %121 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc30)
    %122 = cir.cast(array_to_ptrdecay, %121 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc30)
    %123 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
    %124 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc173)
    %125 = cir.call @execl(%118, %120, %122, %123, %124) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc174)
    cir.return loc(#loc32)
  } loc(#loc217)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_execl_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc272)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc177)
    cir.return loc(#loc176)
  } loc(#loc271)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc274)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc204)
    %2 = cir.get_global @__const.goodG2B.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc204)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc204)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc183)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc275)
    cir.br ^bb1 loc(#loc276)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc277)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc277)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc187)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc187)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc278)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc192)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc193)
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc194)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc194)
    %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc192)
    cir.br ^bb4 loc(#loc190)
  ^bb3:  // pred: ^bb1
    %13 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc195)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc197)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc197)
    %17 = cir.call @strcat(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc195)
    cir.br ^bb4 loc(#loc186)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc186)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc198)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc198)
    %20 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc199)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc199)
    %22 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc200)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc200)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
    %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc202)
    %26 = cir.call @execl(%19, %21, %23, %24, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc203)
    cir.return loc(#loc180)
  } loc(#loc273)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":159:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":159:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":68:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":68:28)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc11 = loc("/usr/include/arpa/inet.h":34:1)
#loc12 = loc("/usr/include/arpa/inet.h":34:47)
#loc13 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":99:53)
#loc14 = loc("/usr/include/netinet/in.h":402:1)
#loc15 = loc("/usr/include/netinet/in.h":403:40)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc20 = loc("/usr/include/string.h":246:1)
#loc21 = loc("/usr/include/string.h":247:33)
#loc22 = loc("/usr/include/unistd.h":358:1)
#loc23 = loc("/usr/include/unistd.h":358:27)
#loc24 = loc("/usr/include/string.h":149:1)
#loc25 = loc("/usr/include/string.h":150:14)
#loc26 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":143:22)
#loc27 = loc("/usr/include/unistd.h":594:1)
#loc28 = loc("/usr/include/unistd.h":595:14)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":147:11)
#loc30 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":147:47)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":65:1)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":148:1)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":77:13)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":77:17)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":78:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":78:32)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":79:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":79:19)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":80:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":80:36)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":81:13)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":81:41)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":67:5)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":67:12)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":69:12)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":69:5)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":70:5)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":144:5)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":70:8)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":70:33)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":71:5)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":139:5)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":141:5)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":72:9)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":138:9)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":81:30)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":81:37)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":82:13)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":127:21)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":127:20)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":83:13)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":126:13)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":92:40)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":92:49)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":92:62)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":92:33)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":92:17)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":92:73)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":93:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":96:17)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":93:21)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":93:38)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":94:17)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":95:21)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":97:24)
#loc76 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":97:25)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":97:34)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":97:37)
#loc79 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":97:51)
#loc80 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":97:17)
#loc81 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":97:52)
#loc82 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":98:38)
#loc83 = loc("/usr/include/netinet/in.h":249:5)
#loc84 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":98:17)
#loc85 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":99:43)
#loc86 = loc("/usr/include/netinet/in.h":251:20)
#loc87 = loc("/usr/include/netinet/in.h":33:15)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":99:17)
#loc89 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":99:63)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":100:42)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":100:36)
#loc92 = loc("/usr/include/netinet/in.h":250:15)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":100:17)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":100:50)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":101:17)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":104:17)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":101:29)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":101:62)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":101:63)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":101:72)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":101:86)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":101:21)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":101:92)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":102:17)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":103:21)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":108:35)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":108:59)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":108:66)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":108:64)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":108:50)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":108:73)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":108:76)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":108:87)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":108:92)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":108:98)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":108:108)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":108:109)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":108:112)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":108:30)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":108:17)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":108:113)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":109:17)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":112:17)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":109:21)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":109:35)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":109:51)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":109:65)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":110:17)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":111:21)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":114:61)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":114:17)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":114:22)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":114:32)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":114:45)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":114:56)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":114:57)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":116:34)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":116:40)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":116:27)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":116:17)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":116:44)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":117:17)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":120:17)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":117:21)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":118:17)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":119:32)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":119:22)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":119:21)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":121:34)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":121:40)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":121:27)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":121:17)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":121:44)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":122:17)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":125:17)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":122:21)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":123:17)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":124:32)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":124:22)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":124:21)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":128:13)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":131:13)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":128:17)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":128:34)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":129:13)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":130:30)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":130:17)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":143:9)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":143:16)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":147:29)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":147:61)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":147:75)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":147:5)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":176:1)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":179:1)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":178:5)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":178:13)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":156:1)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":174:1)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":158:5)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":158:12)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":160:12)
#loc184 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":160:5)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":161:5)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":170:5)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":161:8)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":161:33)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":162:5)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":165:5)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":167:5)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":164:9)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":164:16)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":164:22)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":169:9)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":169:16)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":169:22)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":173:11)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":173:29)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":173:47)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":173:61)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":173:75)
#loc203 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_12.c":173:5)
#loc204 = loc(fused[#loc1, #loc2])
#loc205 = loc(fused[#loc3, #loc4])
#loc206 = loc(fused[#loc5, #loc6])
#loc207 = loc(fused[#loc7, #loc8])
#loc208 = loc(fused[#loc9, #loc10])
#loc209 = loc(fused[#loc11, #loc12])
#loc210 = loc(fused[#loc14, #loc15])
#loc211 = loc(fused[#loc16, #loc17])
#loc212 = loc(fused[#loc18, #loc19])
#loc213 = loc(fused[#loc20, #loc21])
#loc214 = loc(fused[#loc22, #loc23])
#loc215 = loc(fused[#loc24, #loc25])
#loc216 = loc(fused[#loc27, #loc28])
#loc217 = loc(fused[#loc31, #loc32])
#loc218 = loc(fused[#loc33, #loc34])
#loc219 = loc(fused[#loc35, #loc36])
#loc220 = loc(fused[#loc37, #loc38])
#loc221 = loc(fused[#loc39, #loc40])
#loc222 = loc(fused[#loc41, #loc42])
#loc223 = loc(fused[#loc43, #loc44])
#loc224 = loc(fused[#loc46, #loc45])
#loc225 = loc(fused[#loc47, #loc48])
#loc226 = loc(fused[#loc49, #loc50])
#loc227 = loc(fused[#loc51, #loc52, #loc53, #loc48])
#loc228 = loc(fused[#loc54, #loc55])
#loc229 = loc(fused[#loc58, #loc59])
#loc230 = loc(fused[#loc61, #loc62])
#loc231 = loc(fused[#loc67, #loc68])
#loc232 = loc(fused[#loc69, #loc70])
#loc233 = loc(fused[#loc71, #loc72])
#loc234 = loc(fused[#loc73, #loc70])
#loc235 = loc(fused[#loc75, #loc76])
#loc236 = loc(fused[#loc78, #loc79])
#loc237 = loc(fused[#loc80, #loc81])
#loc238 = loc(fused[#loc84, #loc82])
#loc239 = loc(fused[#loc88, #loc89])
#loc240 = loc(fused[#loc93, #loc94])
#loc241 = loc(fused[#loc95, #loc96])
#loc242 = loc(fused[#loc98, #loc99])
#loc243 = loc(fused[#loc100, #loc101])
#loc244 = loc(fused[#loc102, #loc103])
#loc245 = loc(fused[#loc104, #loc96])
#loc246 = loc(fused[#loc110, #loc111])
#loc247 = loc(fused[#loc112, #loc113])
#loc248 = loc(fused[#loc114, #loc115])
#loc249 = loc(fused[#loc114, #loc116])
#loc250 = loc(fused[#loc112, #loc117])
#loc251 = loc(fused[#loc120, #loc121])
#loc252 = loc(fused[#loc122, #loc123])
#loc253 = loc(fused[#loc124, #loc125])
#loc254 = loc(fused[#loc127, #loc128])
#loc255 = loc(fused[#loc129, #loc123])
#loc256 = loc(fused[#loc135, #loc136])
#loc257 = loc(fused[#loc134, #loc136])
#loc258 = loc(fused[#loc133, #loc136])
#loc259 = loc(fused[#loc132, #loc131])
#loc260 = loc(fused[#loc141, #loc142])
#loc261 = loc(fused[#loc143, #loc144])
#loc262 = loc(fused[#loc146, #loc144])
#loc263 = loc(fused[#loc149, #loc147])
#loc264 = loc(fused[#loc153, #loc154])
#loc265 = loc(fused[#loc155, #loc156])
#loc266 = loc(fused[#loc158, #loc156])
#loc267 = loc(fused[#loc161, #loc159])
#loc268 = loc(fused[#loc162, #loc163])
#loc269 = loc(fused[#loc164, #loc165])
#loc270 = loc(fused[#loc166, #loc163])
#loc271 = loc(fused[#loc175, #loc176])
#loc272 = loc(fused[#loc177, #loc178])
#loc273 = loc(fused[#loc179, #loc180])
#loc274 = loc(fused[#loc181, #loc182])
#loc275 = loc(fused[#loc184, #loc183])
#loc276 = loc(fused[#loc185, #loc186])
#loc277 = loc(fused[#loc187, #loc188])
#loc278 = loc(fused[#loc189, #loc190, #loc191, #loc186])
