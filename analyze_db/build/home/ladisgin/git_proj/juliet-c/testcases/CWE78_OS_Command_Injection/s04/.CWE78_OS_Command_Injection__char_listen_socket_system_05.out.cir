!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc220 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":221:10)
#loc221 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":221:14)
#loc222 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":221:20)
#loc223 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":221:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc380 = loc(fused[#loc220, #loc221])
#loc381 = loc(fused[#loc222, #loc223])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_system_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc292)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc293)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_listen_socket_system_05_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc294)
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc295)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc296)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc297)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc298)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc299)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc300)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc301)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc302)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc303)
  cir.func private @close(!s32i) -> !s32i loc(#loc304)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc305)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc306)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc31)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc307)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_system_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc309)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc294)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_listen_socket_system_05_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc294)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc294)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc310)
    cir.scope {
      %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc295)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc42)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc42)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc314)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc315)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc316)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc317)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc318)
          %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc319)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc53)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc53)
          cir.store %14, %10 : !s32i, !cir.ptr<!s32i> loc(#loc317)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc55)
          %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc55)
          cir.store %16, %11 : !s32i, !cir.ptr<!s32i> loc(#loc318)
          %17 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc58)
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
          %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc58)
          cir.store %19, %12 : !u64i, !cir.ptr<!u64i> loc(#loc319)
          cir.scope {
            cir.do {
              %20 = cir.const #cir.int<2> : !s32i loc(#loc62)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc63)
              %22 = cir.const #cir.int<6> : !s32i loc(#loc64)
              %23 = cir.call @socket(%20, %21, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc65)
              cir.store %23, %10 : !s32i, !cir.ptr<!s32i> loc(#loc321)
              cir.scope {
                %77 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc70)
                %78 = cir.const #cir.int<1> : !s32i loc(#loc71)
                %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc71)
                %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc323)
                cir.if %80 {
                  cir.break loc(#loc73)
                } loc(#loc324)
              } loc(#loc322)
              %24 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc325)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc76)
              %26 = cir.const #cir.int<16> : !u64i loc(#loc326)
              cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc327)
              %27 = cir.const #cir.int<2> : !s32i loc(#loc81)
              %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc81)
              %29 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
              cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc328)
              %30 = cir.const #cir.int<0> : !s32i loc(#loc84)
              %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc84)
              %32 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc85)
              %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc86)
              cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc329)
              %34 = cir.const #cir.int<27015> : !s32i loc(#loc88)
              %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc88)
              %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc89)
              %37 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc90)
              cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc330)
              cir.scope {
                %77 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc95)
                %78 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc332)
                %79 = cir.const #cir.int<16> : !u64i loc(#loc333)
                %80 = cir.cast(integral, %79 : !u64i), !u32i loc(#loc333)
                %81 = cir.call @bind(%77, %78, %80) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc100)
                %82 = cir.const #cir.int<1> : !s32i loc(#loc101)
                %83 = cir.unary(minus, %82) : !s32i, !s32i loc(#loc101)
                %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc334)
                cir.if %84 {
                  cir.break loc(#loc103)
                } loc(#loc335)
              } loc(#loc331)
              cir.scope {
                %77 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                %78 = cir.const #cir.int<5> : !s32i loc(#loc107)
                %79 = cir.call @listen(%77, %78) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc108)
                %80 = cir.const #cir.int<1> : !s32i loc(#loc109)
                %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc109)
                %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc337)
                cir.if %82 {
                  cir.break loc(#loc111)
                } loc(#loc338)
              } loc(#loc336)
              %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc112)
              %39 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc113)
              %40 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc114)
              %41 = cir.call @accept(%38, %39, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc115)
              cir.store %41, %11 : !s32i, !cir.ptr<!s32i> loc(#loc339)
              cir.scope {
                %77 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                %78 = cir.const #cir.int<1> : !s32i loc(#loc121)
                %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc121)
                %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc341)
                cir.if %80 {
                  cir.break loc(#loc123)
                } loc(#loc342)
              } loc(#loc340)
              %42 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc124)
              %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
              %44 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc126)
              %45 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc127)
              %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc343)
              %47 = cir.const #cir.int<1> : !u64i loc(#loc344)
              %48 = cir.const #cir.int<100> : !s32i loc(#loc132)
              %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc132)
              %50 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc133)
              %51 = cir.binop(sub, %49, %50) : !u64i loc(#loc345)
              %52 = cir.const #cir.int<1> : !s32i loc(#loc134)
              %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc134)
              %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc346)
              %55 = cir.binop(mul, %47, %54) : !u64i loc(#loc347)
              %56 = cir.const #cir.int<0> : !s32i loc(#loc136)
              %57 = cir.call @recv(%42, %46, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc137)
              %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc137)
              cir.store %58, %7 : !s32i, !cir.ptr<!s32i> loc(#loc348)
              cir.scope {
                %77 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc142)
                %78 = cir.const #cir.int<1> : !s32i loc(#loc143)
                %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc143)
                %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc350)
                %81 = cir.ternary(%80, true {
                  %82 = cir.const #true loc(#loc144)
                  cir.yield %82 : !cir.bool loc(#loc144)
                }, false {
                  %82 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc145)
                  %83 = cir.const #cir.int<0> : !s32i loc(#loc146)
                  %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc351)
                  %85 = cir.ternary(%84, true {
                    %86 = cir.const #true loc(#loc144)
                    cir.yield %86 : !cir.bool loc(#loc144)
                  }, false {
                    %86 = cir.const #false loc(#loc144)
                    cir.yield %86 : !cir.bool loc(#loc144)
                  }) : (!cir.bool) -> !cir.bool loc(#loc144)
                  cir.yield %85 : !cir.bool loc(#loc144)
                }) : (!cir.bool) -> !cir.bool loc(#loc144)
                cir.if %81 {
                  cir.break loc(#loc148)
                } loc(#loc352)
              } loc(#loc349)
              %59 = cir.const #cir.int<0> : !s32i loc(#loc149)
              %60 = cir.cast(integral, %59 : !s32i), !s8i loc(#loc149)
              %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
              %62 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc151)
              %63 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc152)
              %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc152)
              %65 = cir.const #cir.int<1> : !u64i loc(#loc353)
              %66 = cir.binop(div, %64, %65) : !u64i loc(#loc354)
              %67 = cir.binop(add, %62, %66) : !u64i loc(#loc355)
              %68 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %67 : !u64i), !cir.ptr<!s8i> loc(#loc155)
              cir.store %60, %68 : !s8i, !cir.ptr<!s8i> loc(#loc356)
              %69 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc156)
              %70 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
              %71 = cir.const #cir.int<13> : !s32i loc(#loc158)
              %72 = cir.call @strchr(%70, %71) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc156)
              cir.store %72, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc357)
              cir.scope {
                %77 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
                %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc163)
                cir.if %78 {
                  %79 = cir.const #cir.int<0> : !s32i loc(#loc165)
                  %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc165)
                  %81 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
                  cir.store %80, %81 : !s8i, !cir.ptr<!s8i> loc(#loc360)
                } loc(#loc359)
              } loc(#loc358)
              %73 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc168)
              %74 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
              %75 = cir.const #cir.int<10> : !s32i loc(#loc170)
              %76 = cir.call @strchr(%74, %75) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc168)
              cir.store %76, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc361)
              cir.scope {
                %77 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
                %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc175)
                cir.if %78 {
                  %79 = cir.const #cir.int<0> : !s32i loc(#loc177)
                  %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc177)
                  %81 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
                  cir.store %80, %81 : !s8i, !cir.ptr<!s8i> loc(#loc364)
                } loc(#loc363)
              } loc(#loc362)
              cir.yield loc(#loc61)
            } while {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc180)
              %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc180)
              cir.condition(%21) loc(#loc180)
            } loc(#loc320)
          } loc(#loc320)
          cir.scope {
            %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc183)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc184)
            %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc184)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc366)
            cir.if %23 {
              %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc186)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc187)
            } loc(#loc367)
          } loc(#loc365)
          cir.scope {
            %20 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc190)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc191)
            %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc191)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc369)
            cir.if %23 {
              %24 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc193)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc194)
            } loc(#loc370)
          } loc(#loc368)
        } loc(#loc313)
      } loc(#loc312)
    } loc(#loc311)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc197)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc198)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc199)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc372)
      cir.if %7 {
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc31)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc31)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc201)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc202)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc203)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc202)
      } loc(#loc373)
    } loc(#loc371)
    cir.return loc(#loc35)
  } loc(#loc308)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_system_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc375)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc206)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc376)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc208)
    cir.return loc(#loc205)
  } loc(#loc374)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc377)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc378)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc214)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc216)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc217)
  cir.func @main(%arg0: !s32i loc(fused[#loc220, #loc221]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc222, #loc223])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc380)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc381)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc219)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc224)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc225)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc226)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc226)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc227)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc214)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc214)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc228)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_listen_socket_system_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc382)
    cir.call @CWE78_OS_Command_Injection__char_listen_socket_system_05_good() : () -> () loc(#loc229)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc215)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc215)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc231)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc216)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc216)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc232)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_listen_socket_system_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc383)
    cir.call @CWE78_OS_Command_Injection__char_listen_socket_system_05_bad() : () -> () loc(#loc233)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc217)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc217)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc235)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc236)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc384)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc384)
    cir.return %17 : !s32i loc(#loc384)
  } loc(#loc379)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc385)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc240)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc386)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc243)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc388)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc293)
    %2 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc293)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc293)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc248)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc389)
    cir.scope {
      %4 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc385)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc252)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc252)
      cir.if %6 {
        %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc240)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc240)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc256)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc257)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc258)
        %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc243)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc243)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc257)
      } loc(#loc391)
    } loc(#loc390)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc261)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc262)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc263)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc393)
      cir.if %7 {
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc265)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc265)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc266)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc267)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc268)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc267)
      } loc(#loc394)
    } loc(#loc392)
    cir.return loc(#loc245)
  } loc(#loc387)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc396)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc292)
    %2 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc292)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc292)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc273)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc397)
    cir.scope {
      %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc295)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc277)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc277)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc279)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc280)
        %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc281)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc281)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc279)
      } loc(#loc399)
    } loc(#loc398)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc284)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc285)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc286)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc401)
      cir.if %7 {
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc288)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc288)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc289)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc290)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc291)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc290)
      } loc(#loc402)
    } loc(#loc400)
    cir.return loc(#loc270)
  } loc(#loc395)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_system_05.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":190:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":190:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":166:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":166:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":66:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":66:26)
#loc7 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":58:1)
#loc8 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":58:25)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("/usr/include/sys/socket.h":102:1)
#loc12 = loc("/usr/include/sys/socket.h":102:62)
#loc13 = loc("/usr/include/netinet/in.h":404:1)
#loc14 = loc("/usr/include/netinet/in.h":405:40)
#loc15 = loc("/usr/include/sys/socket.h":112:1)
#loc16 = loc("/usr/include/sys/socket.h":113:6)
#loc17 = loc("/usr/include/sys/socket.h":296:1)
#loc18 = loc("/usr/include/sys/socket.h":296:39)
#loc19 = loc("/usr/include/sys/socket.h":306:1)
#loc20 = loc("/usr/include/sys/socket.h":307:38)
#loc21 = loc("/usr/include/sys/socket.h":145:1)
#loc22 = loc("/usr/include/sys/socket.h":145:68)
#loc23 = loc("/usr/include/string.h":246:1)
#loc24 = loc("/usr/include/string.h":247:33)
#loc25 = loc("/usr/include/unistd.h":358:1)
#loc26 = loc("/usr/include/unistd.h":358:27)
#loc27 = loc("/usr/include/stdlib.h":923:1)
#loc28 = loc("/usr/include/stdlib.h":923:41)
#loc29 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc31 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":153:19)
#loc32 = loc("/usr/include/stdlib.h":756:1)
#loc33 = loc("/usr/include/stdlib.h":756:70)
#loc34 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":63:1)
#loc35 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":156:1)
#loc36 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":65:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":65:12)
#loc38 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":67:12)
#loc39 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":67:5)
#loc40 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":68:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":149:5)
#loc42 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":68:8)
#loc43 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":69:5)
#loc44 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":70:9)
#loc45 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":148:9)
#loc46 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":75:13)
#loc47 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":75:17)
#loc48 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":76:13)
#loc49 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":76:32)
#loc50 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":77:13)
#loc51 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":77:19)
#loc52 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":78:13)
#loc53 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":78:35)
#loc54 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":79:13)
#loc55 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":79:35)
#loc56 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":80:13)
#loc57 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":80:41)
#loc58 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":80:30)
#loc59 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":80:37)
#loc60 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":81:13)
#loc61 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":133:21)
#loc62 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":91:39)
#loc63 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":91:48)
#loc64 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":91:61)
#loc65 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":91:32)
#loc66 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":91:17)
#loc67 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":91:72)
#loc68 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":92:17)
#loc69 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":95:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":92:21)
#loc71 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":92:37)
#loc72 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":93:17)
#loc73 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":94:21)
#loc74 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":96:24)
#loc75 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":96:25)
#loc76 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":96:34)
#loc77 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":96:37)
#loc78 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":96:51)
#loc79 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":96:17)
#loc80 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":96:52)
#loc81 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":97:38)
#loc82 = loc("/usr/include/netinet/in.h":249:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":97:17)
#loc84 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":98:43)
#loc85 = loc("/usr/include/netinet/in.h":251:20)
#loc86 = loc("/usr/include/netinet/in.h":33:15)
#loc87 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":98:17)
#loc88 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":99:42)
#loc89 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":99:36)
#loc90 = loc("/usr/include/netinet/in.h":250:15)
#loc91 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":99:17)
#loc92 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":99:50)
#loc93 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":100:17)
#loc94 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":103:17)
#loc95 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":100:26)
#loc96 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":100:58)
#loc97 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":100:59)
#loc98 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":100:68)
#loc99 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":100:82)
#loc100 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":100:21)
#loc101 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":100:88)
#loc102 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":101:17)
#loc103 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":102:21)
#loc104 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":104:17)
#loc105 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":107:17)
#loc106 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":104:28)
#loc107 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":104:42)
#loc108 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":104:21)
#loc109 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":104:61)
#loc110 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":105:17)
#loc111 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":106:21)
#loc112 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":108:39)
#loc113 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":108:53)
#loc114 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":108:59)
#loc115 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":108:32)
#loc116 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":108:17)
#loc117 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":108:63)
#loc118 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":109:17)
#loc119 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":112:17)
#loc120 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":109:21)
#loc121 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":109:37)
#loc122 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":110:17)
#loc123 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":111:21)
#loc124 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":114:35)
#loc125 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":114:58)
#loc126 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":114:65)
#loc127 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":114:63)
#loc128 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":114:49)
#loc129 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":114:72)
#loc130 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":114:75)
#loc131 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":114:86)
#loc132 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":114:91)
#loc133 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":114:97)
#loc134 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":114:107)
#loc135 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":114:108)
#loc136 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":114:111)
#loc137 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":114:30)
#loc138 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":114:17)
#loc139 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":114:112)
#loc140 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":115:17)
#loc141 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":118:17)
#loc142 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":115:21)
#loc143 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":115:35)
#loc144 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":115:48)
#loc145 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":115:51)
#loc146 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":115:65)
#loc147 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":116:17)
#loc148 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":117:21)
#loc149 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":120:61)
#loc150 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":120:17)
#loc151 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":120:22)
#loc152 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":120:32)
#loc153 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":120:45)
#loc154 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":120:56)
#loc155 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":120:57)
#loc156 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":122:27)
#loc157 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":122:34)
#loc158 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":122:40)
#loc159 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":122:17)
#loc160 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":122:44)
#loc161 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":123:17)
#loc162 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":126:17)
#loc163 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":123:21)
#loc164 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":124:17)
#loc165 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":125:32)
#loc166 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":125:22)
#loc167 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":125:21)
#loc168 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":127:27)
#loc169 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":127:34)
#loc170 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":127:40)
#loc171 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":127:17)
#loc172 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":127:44)
#loc173 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":128:17)
#loc174 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":131:17)
#loc175 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":128:21)
#loc176 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":129:17)
#loc177 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":130:32)
#loc178 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":130:22)
#loc179 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":130:21)
#loc180 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":133:20)
#loc181 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":134:13)
#loc182 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":137:13)
#loc183 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":134:17)
#loc184 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":134:33)
#loc185 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":135:13)
#loc186 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":136:30)
#loc187 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":136:17)
#loc188 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":138:13)
#loc189 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":141:13)
#loc190 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":138:17)
#loc191 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":138:33)
#loc192 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":139:13)
#loc193 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":140:30)
#loc194 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":140:17)
#loc195 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":151:5)
#loc196 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":155:5)
#loc197 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":151:16)
#loc198 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":151:9)
#loc199 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":151:25)
#loc200 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":152:5)
#loc201 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":153:9)
#loc202 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":154:9)
#loc203 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":154:14)
#loc204 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":205:1)
#loc205 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":209:1)
#loc206 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":207:5)
#loc207 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":207:14)
#loc208 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":208:5)
#loc209 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":208:14)
#loc210 = loc("/usr/include/stdlib.h":575:1)
#loc211 = loc("/usr/include/stdlib.h":575:41)
#loc212 = loc("/usr/include/time.h":76:1)
#loc213 = loc("/usr/include/time.h":76:38)
#loc214 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":226:15)
#loc215 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":228:15)
#loc216 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":231:15)
#loc217 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":233:15)
#loc218 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":221:1)
#loc219 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":236:1)
#loc224 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":222:1)
#loc225 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":224:27)
#loc226 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":224:22)
#loc227 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":224:5)
#loc228 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":226:5)
#loc229 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":227:5)
#loc230 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":227:67)
#loc231 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":228:5)
#loc232 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":231:5)
#loc233 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":232:5)
#loc234 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":232:66)
#loc235 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":233:5)
#loc236 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":235:12)
#loc237 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":235:5)
#loc238 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":59:1)
#loc239 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":59:26)
#loc240 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":171:19)
#loc241 = loc("/usr/include/string.h":149:1)
#loc242 = loc("/usr/include/string.h":150:14)
#loc243 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":176:22)
#loc244 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":163:1)
#loc245 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":184:1)
#loc246 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":165:5)
#loc247 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":165:12)
#loc248 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":167:12)
#loc249 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":167:5)
#loc250 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":168:5)
#loc251 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":177:5)
#loc252 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":168:8)
#loc253 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":169:5)
#loc254 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":172:5)
#loc255 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":174:5)
#loc256 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":171:9)
#loc257 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":176:9)
#loc258 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":176:16)
#loc259 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":179:5)
#loc260 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":183:5)
#loc261 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":179:16)
#loc262 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":179:9)
#loc263 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":179:25)
#loc264 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":180:5)
#loc265 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":181:19)
#loc266 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":181:9)
#loc267 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":182:9)
#loc268 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":182:14)
#loc269 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":187:1)
#loc270 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":203:1)
#loc271 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":189:5)
#loc272 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":189:12)
#loc273 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":191:12)
#loc274 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":191:5)
#loc275 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":192:5)
#loc276 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":196:5)
#loc277 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":192:8)
#loc278 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":193:5)
#loc279 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":195:9)
#loc280 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":195:16)
#loc281 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":195:22)
#loc282 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":198:5)
#loc283 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":202:5)
#loc284 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":198:16)
#loc285 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":198:9)
#loc286 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":198:25)
#loc287 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":199:5)
#loc288 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":200:19)
#loc289 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":200:9)
#loc290 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":201:9)
#loc291 = loc("CWE78_OS_Command_Injection__char_listen_socket_system_05.c":201:14)
#loc292 = loc(fused[#loc1, #loc2])
#loc293 = loc(fused[#loc3, #loc4])
#loc294 = loc(fused[#loc5, #loc6])
#loc295 = loc(fused[#loc7, #loc8])
#loc296 = loc(fused[#loc9, #loc10])
#loc297 = loc(fused[#loc11, #loc12])
#loc298 = loc(fused[#loc13, #loc14])
#loc299 = loc(fused[#loc15, #loc16])
#loc300 = loc(fused[#loc17, #loc18])
#loc301 = loc(fused[#loc19, #loc20])
#loc302 = loc(fused[#loc21, #loc22])
#loc303 = loc(fused[#loc23, #loc24])
#loc304 = loc(fused[#loc25, #loc26])
#loc305 = loc(fused[#loc27, #loc28])
#loc306 = loc(fused[#loc29, #loc30])
#loc307 = loc(fused[#loc32, #loc33])
#loc308 = loc(fused[#loc34, #loc35])
#loc309 = loc(fused[#loc36, #loc37])
#loc310 = loc(fused[#loc39, #loc38])
#loc311 = loc(fused[#loc40, #loc41])
#loc312 = loc(fused[#loc43, #loc41])
#loc313 = loc(fused[#loc44, #loc45])
#loc314 = loc(fused[#loc46, #loc47])
#loc315 = loc(fused[#loc48, #loc49])
#loc316 = loc(fused[#loc50, #loc51])
#loc317 = loc(fused[#loc52, #loc53])
#loc318 = loc(fused[#loc54, #loc55])
#loc319 = loc(fused[#loc56, #loc57])
#loc320 = loc(fused[#loc60, #loc61])
#loc321 = loc(fused[#loc66, #loc67])
#loc322 = loc(fused[#loc68, #loc69])
#loc323 = loc(fused[#loc70, #loc71])
#loc324 = loc(fused[#loc72, #loc69])
#loc325 = loc(fused[#loc74, #loc75])
#loc326 = loc(fused[#loc77, #loc78])
#loc327 = loc(fused[#loc79, #loc80])
#loc328 = loc(fused[#loc83, #loc81])
#loc329 = loc(fused[#loc87, #loc84])
#loc330 = loc(fused[#loc91, #loc92])
#loc331 = loc(fused[#loc93, #loc94])
#loc332 = loc(fused[#loc96, #loc97])
#loc333 = loc(fused[#loc98, #loc99])
#loc334 = loc(fused[#loc100, #loc101])
#loc335 = loc(fused[#loc102, #loc94])
#loc336 = loc(fused[#loc104, #loc105])
#loc337 = loc(fused[#loc108, #loc109])
#loc338 = loc(fused[#loc110, #loc105])
#loc339 = loc(fused[#loc116, #loc117])
#loc340 = loc(fused[#loc118, #loc119])
#loc341 = loc(fused[#loc120, #loc121])
#loc342 = loc(fused[#loc122, #loc119])
#loc343 = loc(fused[#loc128, #loc129])
#loc344 = loc(fused[#loc130, #loc131])
#loc345 = loc(fused[#loc132, #loc133])
#loc346 = loc(fused[#loc132, #loc134])
#loc347 = loc(fused[#loc130, #loc135])
#loc348 = loc(fused[#loc138, #loc139])
#loc349 = loc(fused[#loc140, #loc141])
#loc350 = loc(fused[#loc142, #loc143])
#loc351 = loc(fused[#loc145, #loc146])
#loc352 = loc(fused[#loc147, #loc141])
#loc353 = loc(fused[#loc153, #loc154])
#loc354 = loc(fused[#loc152, #loc154])
#loc355 = loc(fused[#loc151, #loc154])
#loc356 = loc(fused[#loc150, #loc149])
#loc357 = loc(fused[#loc159, #loc160])
#loc358 = loc(fused[#loc161, #loc162])
#loc359 = loc(fused[#loc164, #loc162])
#loc360 = loc(fused[#loc167, #loc165])
#loc361 = loc(fused[#loc171, #loc172])
#loc362 = loc(fused[#loc173, #loc174])
#loc363 = loc(fused[#loc176, #loc174])
#loc364 = loc(fused[#loc179, #loc177])
#loc365 = loc(fused[#loc181, #loc182])
#loc366 = loc(fused[#loc183, #loc184])
#loc367 = loc(fused[#loc185, #loc182])
#loc368 = loc(fused[#loc188, #loc189])
#loc369 = loc(fused[#loc190, #loc191])
#loc370 = loc(fused[#loc192, #loc189])
#loc371 = loc(fused[#loc195, #loc196])
#loc372 = loc(fused[#loc198, #loc199])
#loc373 = loc(fused[#loc200, #loc196])
#loc374 = loc(fused[#loc204, #loc205])
#loc375 = loc(fused[#loc206, #loc207])
#loc376 = loc(fused[#loc208, #loc209])
#loc377 = loc(fused[#loc210, #loc211])
#loc378 = loc(fused[#loc212, #loc213])
#loc379 = loc(fused[#loc218, #loc219])
#loc382 = loc(fused[#loc229, #loc230])
#loc383 = loc(fused[#loc233, #loc234])
#loc384 = loc(fused[#loc237, #loc236])
#loc385 = loc(fused[#loc238, #loc239])
#loc386 = loc(fused[#loc241, #loc242])
#loc387 = loc(fused[#loc244, #loc245])
#loc388 = loc(fused[#loc246, #loc247])
#loc389 = loc(fused[#loc249, #loc248])
#loc390 = loc(fused[#loc250, #loc251])
#loc391 = loc(fused[#loc253, #loc254, #loc255, #loc251])
#loc392 = loc(fused[#loc259, #loc260])
#loc393 = loc(fused[#loc262, #loc263])
#loc394 = loc(fused[#loc264, #loc260])
#loc395 = loc(fused[#loc269, #loc270])
#loc396 = loc(fused[#loc271, #loc272])
#loc397 = loc(fused[#loc274, #loc273])
#loc398 = loc(fused[#loc275, #loc276])
#loc399 = loc(fused[#loc278, #loc276])
#loc400 = loc(fused[#loc282, #loc283])
#loc401 = loc(fused[#loc285, #loc286])
#loc402 = loc(fused[#loc287, #loc283])
