!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":88:48)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":283:10)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":283:14)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":283:20)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":283:32)
#loc341 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":223:48)
#loc372 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":252:27)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc465 = loc(fused[#loc178, #loc179])
#loc466 = loc(fused[#loc180, #loc181])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc396)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc397)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc398)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc399)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc400)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc401)
  cir.func private @close(!s32i) -> !s32i loc(#loc402)
  cir.func private @printIntLine(!s32i) loc(#loc403)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc404)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc406)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc407)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc408)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc409)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc410)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc411)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc412)
    %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc413)
    %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc414)
    %9 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc415)
    %10 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc416)
    cir.store %8, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc415)
    cir.store %8, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc416)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc46)
    cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc417)
    cir.br ^bb1 loc(#loc418)
  ^bb1:  // pred: ^bb0
    %13 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc24)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc406)
    cir.br ^bb2 loc(#loc419)
  ^bb2:  // pred: ^bb1
    %15 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc30)
    cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc409)
    cir.br ^bb3 loc(#loc420)
  ^bb3:  // pred: ^bb2
    cir.br ^bb5 loc(#loc420)
  ^bb4:  // pred: ^bb25
    %17 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc55)
    cir.brcond %18 ^bb5, ^bb26 loc(#loc55)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    %19 = cir.const #cir.int<2> : !s32i loc(#loc56)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %21 = cir.const #cir.int<6> : !s32i loc(#loc58)
    %22 = cir.call @socket(%19, %20, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc59)
    cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc421)
    cir.br ^bb6 loc(#loc422)
  ^bb6:  // pred: ^bb5
    %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc65)
    %26 = cir.cmp(eq, %23, %25) : !s32i, !cir.bool loc(#loc423)
    cir.brcond %26 ^bb7, ^bb8 loc(#loc424)
  ^bb7:  // pred: ^bb6
    cir.br ^bb26 loc(#loc67)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc63)
  ^bb9:  // pred: ^bb8
    %27 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc425)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %29 = cir.const #cir.int<16> : !u64i loc(#loc426)
    cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc427)
    %30 = cir.const #cir.int<2> : !s32i loc(#loc75)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc75)
    %32 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc428)
    %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %35 = cir.call @inet_addr(%34) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc78)
    %36 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
    %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
    cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc429)
    %38 = cir.const #cir.int<27015> : !s32i loc(#loc83)
    %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc83)
    %40 = cir.call @htons(%39) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc84)
    %41 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
    cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc430)
    cir.br ^bb10 loc(#loc431)
  ^bb10:  // pred: ^bb9
    %42 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %43 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc432)
    %44 = cir.const #cir.int<16> : !u64i loc(#loc433)
    %45 = cir.cast(integral, %44 : !u64i), !u32i loc(#loc433)
    %46 = cir.call @connect(%42, %43, %45) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc95)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc96)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc434)
    cir.brcond %49 ^bb11, ^bb12 loc(#loc435)
  ^bb11:  // pred: ^bb10
    cir.br ^bb26 loc(#loc98)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc89)
  ^bb13:  // pred: ^bb12
    %50 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %51 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc100)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc100)
    %53 = cir.const #cir.int<3> : !s32i loc(#loc101)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc101)
    %55 = cir.const #cir.int<4> : !u64i loc(#loc101)
    %56 = cir.binop(mul, %54, %55) : !u64i loc(#loc101)
    %57 = cir.const #cir.int<2> : !s32i loc(#loc101)
    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc101)
    %59 = cir.binop(add, %56, %58) : !u64i loc(#loc101)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc102)
    %62 = cir.binop(sub, %59, %61) : !u64i loc(#loc436)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %64 = cir.call @recv(%50, %52, %62, %63) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc104)
    %65 = cir.cast(integral, %64 : !s64i), !s32i loc(#loc104)
    cir.store %65, %1 : !s32i, !cir.ptr<!s32i> loc(#loc437)
    cir.br ^bb14 loc(#loc438)
  ^bb14:  // pred: ^bb13
    %66 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %67 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %68 = cir.unary(minus, %67) : !s32i, !s32i loc(#loc110)
    %69 = cir.cmp(eq, %66, %68) : !s32i, !cir.bool loc(#loc439)
    cir.brcond %69 ^bb15, ^bb16 loc(#loc111)
  ^bb15:  // pred: ^bb14
    %70 = cir.const #true loc(#loc111)
    cir.br ^bb21(%70 : !cir.bool) loc(#loc111)
  ^bb16:  // pred: ^bb14
    %71 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %73 = cir.cmp(eq, %71, %72) : !s32i, !cir.bool loc(#loc440)
    cir.brcond %73 ^bb17, ^bb18 loc(#loc111)
  ^bb17:  // pred: ^bb16
    %74 = cir.const #true loc(#loc111)
    cir.br ^bb19(%74 : !cir.bool) loc(#loc111)
  ^bb18:  // pred: ^bb16
    %75 = cir.const #false loc(#loc111)
    cir.br ^bb19(%75 : !cir.bool) loc(#loc111)
  ^bb19(%76: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":88:48)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc111)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%76 : !cir.bool) loc(#loc111)
  ^bb21(%77: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":88:48)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc111)
  ^bb22:  // pred: ^bb21
    cir.brcond %77 ^bb23, ^bb24 loc(#loc441)
  ^bb23:  // pred: ^bb22
    cir.br ^bb26 loc(#loc115)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc108)
  ^bb25:  // pred: ^bb24
    %78 = cir.const #cir.int<0> : !s32i loc(#loc116)
    %79 = cir.cast(integral, %78 : !s32i), !s8i loc(#loc116)
    %80 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %81 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
    %82 = cir.ptr_stride(%81 : !cir.ptr<!s8i>, %80 : !s32i), !cir.ptr<!s8i> loc(#loc118)
    cir.store %79, %82 : !s8i, !cir.ptr<!s8i> loc(#loc442)
    %83 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc119)
    %84 = cir.call @atoi(%83) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc120)
    cir.store %84, %0 : !s32i, !cir.ptr<!s32i> loc(#loc443)
    cir.br ^bb4 loc(#loc54)
  ^bb26:  // 4 preds: ^bb4, ^bb7, ^bb11, ^bb23
    cir.br ^bb27 loc(#loc54)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc444)
  ^bb28:  // pred: ^bb27
    %85 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %86 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %87 = cir.unary(minus, %86) : !s32i, !s32i loc(#loc126)
    %88 = cir.cmp(ne, %85, %87) : !s32i, !cir.bool loc(#loc445)
    cir.brcond %88 ^bb29, ^bb30 loc(#loc446)
  ^bb29:  // pred: ^bb28
    %89 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %90 = cir.call @close(%89) : (!s32i) -> !s32i loc(#loc129)
    cir.br ^bb30 loc(#loc124)
  ^bb30:  // 2 preds: ^bb28, ^bb29
    cir.br ^bb31 loc(#loc124)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc52)
  ^bb32:  // pred: ^bb31
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %92 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc131)
    cir.store %91, %92 : !s32i, !cir.ptr<!s32i> loc(#loc447)
    cir.br ^bb33 loc(#loc49)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc448)
  ^bb34:  // pred: ^bb33
    %93 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
    %94 = cir.load %93 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    cir.store %94, %5 : !s32i, !cir.ptr<!s32i> loc(#loc411)
    cir.br ^bb35 loc(#loc449)
  ^bb35:  // pred: ^bb34
    %95 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc413)
    cir.store %95, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc413)
    cir.br ^bb36 loc(#loc450)
  ^bb36:  // pred: ^bb35
    %96 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %97 = cir.const #cir.int<0> : !s32i loc(#loc141)
    %98 = cir.cmp(ge, %96, %97) : !s32i, !cir.bool loc(#loc451)
    cir.brcond %98 ^bb37, ^bb46 loc(#loc452)
  ^bb37:  // pred: ^bb36
    %99 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %100 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %101 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc147)
    %102 = cir.ptr_stride(%101 : !cir.ptr<!s32i>, %100 : !s32i), !cir.ptr<!s32i> loc(#loc147)
    cir.store %99, %102 : !s32i, !cir.ptr<!s32i> loc(#loc453)
    cir.br ^bb38 loc(#loc454)
  ^bb38:  // pred: ^bb37
    %103 = cir.const #cir.int<0> : !s32i loc(#loc150)
    cir.store %103, %6 : !s32i, !cir.ptr<!s32i> loc(#loc455)
    cir.br ^bb39 loc(#loc454)
  ^bb39:  // 2 preds: ^bb38, ^bb43
    %104 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %105 = cir.const #cir.int<10> : !s32i loc(#loc153)
    %106 = cir.cmp(lt, %104, %105) : !s32i, !cir.bool loc(#loc456)
    cir.brcond %106 ^bb40, ^bb44 loc(#loc154)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc457)
  ^bb41:  // pred: ^bb40
    %107 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    %108 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc157)
    %109 = cir.ptr_stride(%108 : !cir.ptr<!s32i>, %107 : !s32i), !cir.ptr<!s32i> loc(#loc157)
    %110 = cir.load %109 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    cir.call @printIntLine(%110) : (!s32i) -> () loc(#loc158)
    cir.br ^bb42 loc(#loc149)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc149)
  ^bb43:  // pred: ^bb42
    %111 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %112 = cir.unary(inc, %111) : !s32i, !s32i loc(#loc160)
    cir.store %112, %6 : !s32i, !cir.ptr<!s32i> loc(#loc458)
    cir.br ^bb39 loc(#loc454)
  ^bb44:  // pred: ^bb39
    cir.br ^bb45 loc(#loc149)
  ^bb45:  // pred: ^bb44
    cir.br ^bb47 loc(#loc143)
  ^bb46:  // pred: ^bb36
    %113 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc20)
    %114 = cir.cast(array_to_ptrdecay, %113 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc20)
    cir.call @printLine(%114) : (!cir.ptr<!s8i>) -> () loc(#loc161)
    cir.br ^bb47 loc(#loc139)
  ^bb47:  // 2 preds: ^bb45, ^bb46
    cir.br ^bb48 loc(#loc139)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc137)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc134)
  ^bb50:  // pred: ^bb49
    cir.return loc(#loc22)
  } loc(#loc405)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc460)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc164)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc461)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc166)
    cir.return loc(#loc163)
  } loc(#loc459)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc462)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc463)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc175)
  cir.func @main(%arg0: !s32i loc(fused[#loc178, #loc179]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc180, #loc181])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc465)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc466)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc177)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc182)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc183)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc184)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc184)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc185)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc172)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc186)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc467)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32_good() : () -> () loc(#loc187)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc173)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc173)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc189)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc174)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc174)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc468)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32_bad() : () -> () loc(#loc191)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc175)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc193)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc194)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc469)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc469)
    cir.return %17 : !s32i loc(#loc469)
  } loc(#loc464)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc471)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc472)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc473)
    %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc474)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc475)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc476)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc477)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc476)
    cir.store %4, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc477)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc212)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc213)
    cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc478)
    cir.br ^bb1 loc(#loc479)
  ^bb1:  // pred: ^bb0
    %9 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc199)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc471)
    %11 = cir.const #cir.int<7> : !s32i loc(#loc218)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc480)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc220)
    %13 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc221)
    cir.store %12, %13 : !s32i, !cir.ptr<!s32i> loc(#loc481)
    cir.br ^bb2 loc(#loc216)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc482)
  ^bb3:  // pred: ^bb2
    %14 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc201)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc225)
    cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc472)
    cir.br ^bb4 loc(#loc483)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc474)
    cir.store %16, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc474)
    cir.br ^bb5 loc(#loc484)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc230)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc231)
    %19 = cir.cmp(ge, %17, %18) : !s32i, !cir.bool loc(#loc485)
    cir.brcond %19 ^bb6, ^bb15 loc(#loc486)
  ^bb6:  // pred: ^bb5
    %20 = cir.const #cir.int<1> : !s32i loc(#loc235)
    %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc236)
    %22 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc237)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc237)
    cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc487)
    cir.br ^bb7 loc(#loc488)
  ^bb7:  // pred: ^bb6
    %24 = cir.const #cir.int<0> : !s32i loc(#loc240)
    cir.store %24, %2 : !s32i, !cir.ptr<!s32i> loc(#loc489)
    cir.br ^bb8 loc(#loc488)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %25 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc242)
    %26 = cir.const #cir.int<10> : !s32i loc(#loc243)
    %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc490)
    cir.brcond %27 ^bb9, ^bb13 loc(#loc244)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc491)
  ^bb10:  // pred: ^bb9
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    %29 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc247)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %28 : !s32i), !cir.ptr<!s32i> loc(#loc247)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc247)
    cir.call @printIntLine(%31) : (!s32i) -> () loc(#loc248)
    cir.br ^bb11 loc(#loc239)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc239)
  ^bb12:  // pred: ^bb11
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    %33 = cir.unary(inc, %32) : !s32i, !s32i loc(#loc250)
    cir.store %33, %2 : !s32i, !cir.ptr<!s32i> loc(#loc492)
    cir.br ^bb8 loc(#loc488)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc239)
  ^bb14:  // pred: ^bb13
    cir.br ^bb16 loc(#loc233)
  ^bb15:  // pred: ^bb5
    %34 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc251)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc251)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc252)
    cir.br ^bb16 loc(#loc229)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc229)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc227)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc224)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc197)
  } loc(#loc470)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc253)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc494)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc495)
    %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc496)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc497)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc498)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc499)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc500)
    %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc501)
    %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc502)
    %9 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc503)
    %10 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc504)
    cir.store %8, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc503)
    cir.store %8, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc504)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc278)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc279)
    cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc505)
    cir.br ^bb1 loc(#loc506)
  ^bb1:  // pred: ^bb0
    %13 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc257)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc283)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc494)
    cir.br ^bb2 loc(#loc507)
  ^bb2:  // pred: ^bb1
    %15 = cir.const #cir.int<1> : !s32i loc(#loc263)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc263)
    cir.store %16, %3 : !s32i, !cir.ptr<!s32i> loc(#loc497)
    cir.br ^bb3 loc(#loc508)
  ^bb3:  // pred: ^bb2
    cir.br ^bb5 loc(#loc508)
  ^bb4:  // pred: ^bb25
    %17 = cir.const #cir.int<0> : !s32i loc(#loc288)
    %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc288)
    cir.brcond %18 ^bb5, ^bb26 loc(#loc288)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    %19 = cir.const #cir.int<2> : !s32i loc(#loc289)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc290)
    %21 = cir.const #cir.int<6> : !s32i loc(#loc291)
    %22 = cir.call @socket(%19, %20, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc292)
    cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc509)
    cir.br ^bb6 loc(#loc510)
  ^bb6:  // pred: ^bb5
    %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc298)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc298)
    %26 = cir.cmp(eq, %23, %25) : !s32i, !cir.bool loc(#loc511)
    cir.brcond %26 ^bb7, ^bb8 loc(#loc512)
  ^bb7:  // pred: ^bb6
    cir.br ^bb26 loc(#loc300)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc296)
  ^bb9:  // pred: ^bb8
    %27 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc513)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc303)
    %29 = cir.const #cir.int<16> : !u64i loc(#loc514)
    cir.libc.memset %29 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc515)
    %30 = cir.const #cir.int<2> : !s32i loc(#loc308)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc308)
    %32 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
    cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc516)
    %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc310)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc310)
    %35 = cir.call @inet_addr(%34) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc311)
    %36 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
    %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
    cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc517)
    %38 = cir.const #cir.int<27015> : !s32i loc(#loc314)
    %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc314)
    %40 = cir.call @htons(%39) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc315)
    %41 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
    cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc518)
    cir.br ^bb10 loc(#loc519)
  ^bb10:  // pred: ^bb9
    %42 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc320)
    %43 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc520)
    %44 = cir.const #cir.int<16> : !u64i loc(#loc521)
    %45 = cir.cast(integral, %44 : !u64i), !u32i loc(#loc521)
    %46 = cir.call @connect(%42, %43, %45) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc325)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc326)
    %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc326)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc522)
    cir.brcond %49 ^bb11, ^bb12 loc(#loc523)
  ^bb11:  // pred: ^bb10
    cir.br ^bb26 loc(#loc328)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc319)
  ^bb13:  // pred: ^bb12
    %50 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc329)
    %51 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc330)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc330)
    %53 = cir.const #cir.int<3> : !s32i loc(#loc331)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc331)
    %55 = cir.const #cir.int<4> : !u64i loc(#loc331)
    %56 = cir.binop(mul, %54, %55) : !u64i loc(#loc331)
    %57 = cir.const #cir.int<2> : !s32i loc(#loc331)
    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc331)
    %59 = cir.binop(add, %56, %58) : !u64i loc(#loc331)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc332)
    %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc332)
    %62 = cir.binop(sub, %59, %61) : !u64i loc(#loc524)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc333)
    %64 = cir.call @recv(%50, %52, %62, %63) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc334)
    %65 = cir.cast(integral, %64 : !s64i), !s32i loc(#loc334)
    cir.store %65, %1 : !s32i, !cir.ptr<!s32i> loc(#loc525)
    cir.br ^bb14 loc(#loc526)
  ^bb14:  // pred: ^bb13
    %66 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc339)
    %67 = cir.const #cir.int<1> : !s32i loc(#loc340)
    %68 = cir.unary(minus, %67) : !s32i, !s32i loc(#loc340)
    %69 = cir.cmp(eq, %66, %68) : !s32i, !cir.bool loc(#loc527)
    cir.brcond %69 ^bb15, ^bb16 loc(#loc341)
  ^bb15:  // pred: ^bb14
    %70 = cir.const #true loc(#loc341)
    cir.br ^bb21(%70 : !cir.bool) loc(#loc341)
  ^bb16:  // pred: ^bb14
    %71 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc342)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc343)
    %73 = cir.cmp(eq, %71, %72) : !s32i, !cir.bool loc(#loc528)
    cir.brcond %73 ^bb17, ^bb18 loc(#loc341)
  ^bb17:  // pred: ^bb16
    %74 = cir.const #true loc(#loc341)
    cir.br ^bb19(%74 : !cir.bool) loc(#loc341)
  ^bb18:  // pred: ^bb16
    %75 = cir.const #false loc(#loc341)
    cir.br ^bb19(%75 : !cir.bool) loc(#loc341)
  ^bb19(%76: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":223:48)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc341)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%76 : !cir.bool) loc(#loc341)
  ^bb21(%77: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":223:48)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc341)
  ^bb22:  // pred: ^bb21
    cir.brcond %77 ^bb23, ^bb24 loc(#loc529)
  ^bb23:  // pred: ^bb22
    cir.br ^bb26 loc(#loc345)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc338)
  ^bb25:  // pred: ^bb24
    %78 = cir.const #cir.int<0> : !s32i loc(#loc346)
    %79 = cir.cast(integral, %78 : !s32i), !s8i loc(#loc346)
    %80 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc347)
    %81 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc348)
    %82 = cir.ptr_stride(%81 : !cir.ptr<!s8i>, %80 : !s32i), !cir.ptr<!s8i> loc(#loc348)
    cir.store %79, %82 : !s8i, !cir.ptr<!s8i> loc(#loc530)
    %83 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc349)
    %84 = cir.call @atoi(%83) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc350)
    cir.store %84, %0 : !s32i, !cir.ptr<!s32i> loc(#loc531)
    cir.br ^bb4 loc(#loc287)
  ^bb26:  // 4 preds: ^bb4, ^bb7, ^bb11, ^bb23
    cir.br ^bb27 loc(#loc287)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc532)
  ^bb28:  // pred: ^bb27
    %85 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc355)
    %86 = cir.const #cir.int<1> : !s32i loc(#loc356)
    %87 = cir.unary(minus, %86) : !s32i, !s32i loc(#loc356)
    %88 = cir.cmp(ne, %85, %87) : !s32i, !cir.bool loc(#loc533)
    cir.brcond %88 ^bb29, ^bb30 loc(#loc534)
  ^bb29:  // pred: ^bb28
    %89 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc358)
    %90 = cir.call @close(%89) : (!s32i) -> !s32i loc(#loc359)
    cir.br ^bb30 loc(#loc354)
  ^bb30:  // 2 preds: ^bb28, ^bb29
    cir.br ^bb31 loc(#loc354)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc285)
  ^bb32:  // pred: ^bb31
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc360)
    %92 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc361)
    cir.store %91, %92 : !s32i, !cir.ptr<!s32i> loc(#loc535)
    cir.br ^bb33 loc(#loc282)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc536)
  ^bb34:  // pred: ^bb33
    %93 = cir.load deref %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc267)
    %94 = cir.load %93 : !cir.ptr<!s32i>, !s32i loc(#loc365)
    cir.store %94, %5 : !s32i, !cir.ptr<!s32i> loc(#loc499)
    cir.br ^bb35 loc(#loc537)
  ^bb35:  // pred: ^bb34
    %95 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc501)
    cir.store %95, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc501)
    cir.br ^bb36 loc(#loc538)
  ^bb36:  // pred: ^bb35
    %96 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc370)
    %97 = cir.const #cir.int<0> : !s32i loc(#loc371)
    %98 = cir.cmp(ge, %96, %97) : !s32i, !cir.bool loc(#loc539)
    cir.brcond %98 ^bb37, ^bb42 loc(#loc372)
  ^bb37:  // pred: ^bb36
    %99 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc373)
    %100 = cir.const #cir.int<10> : !s32i loc(#loc374)
    %101 = cir.cmp(lt, %99, %100) : !s32i, !cir.bool loc(#loc540)
    cir.brcond %101 ^bb38, ^bb39 loc(#loc372)
  ^bb38:  // pred: ^bb37
    %102 = cir.const #true loc(#loc372)
    cir.br ^bb40(%102 : !cir.bool) loc(#loc372)
  ^bb39:  // pred: ^bb37
    %103 = cir.const #false loc(#loc372)
    cir.br ^bb40(%103 : !cir.bool) loc(#loc372)
  ^bb40(%104: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":252:27)):  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc372)
  ^bb41:  // pred: ^bb40
    cir.br ^bb43(%104 : !cir.bool) loc(#loc372)
  ^bb42:  // pred: ^bb36
    %105 = cir.const #false loc(#loc372)
    cir.br ^bb43(%105 : !cir.bool) loc(#loc372)
  ^bb43(%106: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":252:27)):  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc372)
  ^bb44:  // pred: ^bb43
    cir.brcond %106 ^bb45, ^bb54 loc(#loc541)
  ^bb45:  // pred: ^bb44
    %107 = cir.const #cir.int<1> : !s32i loc(#loc379)
    %108 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc380)
    %109 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc381)
    %110 = cir.ptr_stride(%109 : !cir.ptr<!s32i>, %108 : !s32i), !cir.ptr<!s32i> loc(#loc381)
    cir.store %107, %110 : !s32i, !cir.ptr<!s32i> loc(#loc542)
    cir.br ^bb46 loc(#loc543)
  ^bb46:  // pred: ^bb45
    %111 = cir.const #cir.int<0> : !s32i loc(#loc384)
    cir.store %111, %6 : !s32i, !cir.ptr<!s32i> loc(#loc544)
    cir.br ^bb47 loc(#loc543)
  ^bb47:  // 2 preds: ^bb46, ^bb51
    %112 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc386)
    %113 = cir.const #cir.int<10> : !s32i loc(#loc387)
    %114 = cir.cmp(lt, %112, %113) : !s32i, !cir.bool loc(#loc545)
    cir.brcond %114 ^bb48, ^bb52 loc(#loc388)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc546)
  ^bb49:  // pred: ^bb48
    %115 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc390)
    %116 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc391)
    %117 = cir.ptr_stride(%116 : !cir.ptr<!s32i>, %115 : !s32i), !cir.ptr<!s32i> loc(#loc391)
    %118 = cir.load %117 : !cir.ptr<!s32i>, !s32i loc(#loc391)
    cir.call @printIntLine(%118) : (!s32i) -> () loc(#loc392)
    cir.br ^bb50 loc(#loc383)
  ^bb50:  // pred: ^bb49
    cir.br ^bb51 loc(#loc383)
  ^bb51:  // pred: ^bb50
    %119 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc393)
    %120 = cir.unary(inc, %119) : !s32i, !s32i loc(#loc394)
    cir.store %120, %6 : !s32i, !cir.ptr<!s32i> loc(#loc547)
    cir.br ^bb47 loc(#loc543)
  ^bb52:  // pred: ^bb47
    cir.br ^bb53 loc(#loc383)
  ^bb53:  // pred: ^bb52
    cir.br ^bb55 loc(#loc377)
  ^bb54:  // pred: ^bb44
    %121 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc253)
    %122 = cir.cast(array_to_ptrdecay, %121 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc253)
    cir.call @printLine(%122) : (!cir.ptr<!s8i>) -> () loc(#loc395)
    cir.br ^bb55 loc(#loc369)
  ^bb55:  // 2 preds: ^bb53, ^bb54
    cir.br ^bb56 loc(#loc369)
  ^bb56:  // pred: ^bb55
    cir.br ^bb57 loc(#loc367)
  ^bb57:  // pred: ^bb56
    cir.br ^bb58 loc(#loc364)
  ^bb58:  // pred: ^bb57
    cir.return loc(#loc255)
  } loc(#loc493)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":79:53)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":129:27)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":44:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":133:1)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":52:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":52:21)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":58:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":58:17)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":59:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":59:32)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":60:13)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":60:36)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":61:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":61:45)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":112:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":112:21)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":114:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":114:17)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":115:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":115:34)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":46:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":46:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":47:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":47:22)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":48:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":48:22)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":50:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":50:12)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":50:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":51:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":110:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":52:20)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":53:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":108:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":62:13)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":97:21)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":97:20)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":72:40)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":72:49)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":72:62)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":72:33)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":72:17)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":72:73)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":73:17)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":76:17)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":73:21)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":73:38)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":74:17)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":75:21)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":77:24)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":77:25)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":77:34)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":77:37)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":77:51)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":77:17)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":77:52)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":78:38)
#loc76 = loc("/usr/include/netinet/in.h":249:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":78:17)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":79:43)
#loc79 = loc("/usr/include/netinet/in.h":251:20)
#loc80 = loc("/usr/include/netinet/in.h":33:15)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":79:17)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":79:63)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":80:42)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":80:36)
#loc85 = loc("/usr/include/netinet/in.h":250:15)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":80:17)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":80:50)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":81:17)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":84:17)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":81:29)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":81:62)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":81:63)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":81:72)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":81:86)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":81:21)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":81:92)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":82:17)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":83:21)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":87:35)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":87:50)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":87:63)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":87:81)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":87:84)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":87:30)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":87:17)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":87:85)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":88:17)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":91:17)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":88:21)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":88:35)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":88:51)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":88:65)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":89:17)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":90:21)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":93:43)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":93:29)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":93:17)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":95:29)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":95:24)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":95:17)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":95:40)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":98:13)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":101:13)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":98:17)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":98:34)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":99:13)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":100:30)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":100:17)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":109:21)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":109:10)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":109:9)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":111:5)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":132:5)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":112:20)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":113:9)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":131:9)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":118:13)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":130:13)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":118:17)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":118:25)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":119:13)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":126:13)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":128:13)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":120:32)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":120:24)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":120:17)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":122:17)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":125:17)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":122:25)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":122:21)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":122:28)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":122:32)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":122:30)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":123:17)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":124:41)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":124:34)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":124:21)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":122:37)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":122:36)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":129:17)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":269:1)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":273:1)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":271:5)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":271:13)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":272:5)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":272:13)
#loc168 = loc("/usr/include/stdlib.h":575:1)
#loc169 = loc("/usr/include/stdlib.h":575:41)
#loc170 = loc("/usr/include/time.h":76:1)
#loc171 = loc("/usr/include/time.h":76:38)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":288:15)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":290:15)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":293:15)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":295:15)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":283:1)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":298:1)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":284:1)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":286:27)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":286:22)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":286:5)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":288:5)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":289:5)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":289:71)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":290:5)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":293:5)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":294:5)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":294:70)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":295:5)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":297:12)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":297:5)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":140:1)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":176:1)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":148:9)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":148:21)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":155:9)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":155:21)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":157:13)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":157:17)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":158:13)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":158:34)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":142:5)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":142:9)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":143:5)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":143:22)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":144:5)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":144:22)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":146:13)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":146:12)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":146:5)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":147:5)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":153:5)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":148:20)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":151:16)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":151:9)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":152:21)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":152:10)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":152:9)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":154:5)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":175:5)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":155:20)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":156:9)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":174:9)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":161:13)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":173:13)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":161:17)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":161:25)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":162:13)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":169:13)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":171:13)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":163:32)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":163:24)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":163:17)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":165:17)
#loc239 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":168:17)
#loc240 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":165:25)
#loc241 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":165:21)
#loc242 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":165:28)
#loc243 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":165:32)
#loc244 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":165:30)
#loc245 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":166:17)
#loc246 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":167:41)
#loc247 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":167:34)
#loc248 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":167:21)
#loc249 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":165:37)
#loc250 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":165:36)
#loc251 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":172:27)
#loc252 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":172:17)
#loc253 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":263:27)
#loc254 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":179:1)
#loc255 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":267:1)
#loc256 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":187:9)
#loc257 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":187:21)
#loc258 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":193:13)
#loc259 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":193:17)
#loc260 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":194:13)
#loc261 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":194:32)
#loc262 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":195:13)
#loc263 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":195:36)
#loc264 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":196:13)
#loc265 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":196:45)
#loc266 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":247:9)
#loc267 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":247:21)
#loc268 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":249:13)
#loc269 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":249:17)
#loc270 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":250:13)
#loc271 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":250:34)
#loc272 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":181:5)
#loc273 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":181:9)
#loc274 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":182:5)
#loc275 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":182:22)
#loc276 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":183:5)
#loc277 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":183:22)
#loc278 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":185:13)
#loc279 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":185:12)
#loc280 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":185:5)
#loc281 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":186:5)
#loc282 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":245:5)
#loc283 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":187:20)
#loc284 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":188:9)
#loc285 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":243:9)
#loc286 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":197:13)
#loc287 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":232:21)
#loc288 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":232:20)
#loc289 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":207:40)
#loc290 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":207:49)
#loc291 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":207:62)
#loc292 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":207:33)
#loc293 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":207:17)
#loc294 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":207:73)
#loc295 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":208:17)
#loc296 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":211:17)
#loc297 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":208:21)
#loc298 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":208:38)
#loc299 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":209:17)
#loc300 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":210:21)
#loc301 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":212:24)
#loc302 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":212:25)
#loc303 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":212:34)
#loc304 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":212:37)
#loc305 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":212:51)
#loc306 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":212:17)
#loc307 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":212:52)
#loc308 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":213:38)
#loc309 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":213:17)
#loc310 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":214:53)
#loc311 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":214:43)
#loc312 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":214:17)
#loc313 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":214:63)
#loc314 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":215:42)
#loc315 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":215:36)
#loc316 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":215:17)
#loc317 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":215:50)
#loc318 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":216:17)
#loc319 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":219:17)
#loc320 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":216:29)
#loc321 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":216:62)
#loc322 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":216:63)
#loc323 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":216:72)
#loc324 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":216:86)
#loc325 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":216:21)
#loc326 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":216:92)
#loc327 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":217:17)
#loc328 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":218:21)
#loc329 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":222:35)
#loc330 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":222:50)
#loc331 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":222:63)
#loc332 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":222:81)
#loc333 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":222:84)
#loc334 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":222:30)
#loc335 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":222:17)
#loc336 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":222:85)
#loc337 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":223:17)
#loc338 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":226:17)
#loc339 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":223:21)
#loc340 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":223:35)
#loc342 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":223:51)
#loc343 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":223:65)
#loc344 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":224:17)
#loc345 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":225:21)
#loc346 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":228:43)
#loc347 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":228:29)
#loc348 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":228:17)
#loc349 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":230:29)
#loc350 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":230:24)
#loc351 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":230:17)
#loc352 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":230:40)
#loc353 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":233:13)
#loc354 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":236:13)
#loc355 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":233:17)
#loc356 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":233:34)
#loc357 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":234:13)
#loc358 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":235:30)
#loc359 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":235:17)
#loc360 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":244:21)
#loc361 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":244:10)
#loc362 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":244:9)
#loc363 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":246:5)
#loc364 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":266:5)
#loc365 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":247:20)
#loc366 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":248:9)
#loc367 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":265:9)
#loc368 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":252:13)
#loc369 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":264:13)
#loc370 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":252:17)
#loc371 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":252:25)
#loc373 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":252:30)
#loc374 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":252:38)
#loc375 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":252:40)
#loc376 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":253:13)
#loc377 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":260:13)
#loc378 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":262:13)
#loc379 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":254:32)
#loc380 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":254:24)
#loc381 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":254:17)
#loc382 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":256:17)
#loc383 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":259:17)
#loc384 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":256:25)
#loc385 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":256:21)
#loc386 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":256:28)
#loc387 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":256:32)
#loc388 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":256:30)
#loc389 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":257:17)
#loc390 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":258:41)
#loc391 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":258:34)
#loc392 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":258:21)
#loc393 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":256:37)
#loc394 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":256:36)
#loc395 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_32.c":263:17)
#loc396 = loc(fused[#loc1, #loc2])
#loc397 = loc(fused[#loc3, #loc4])
#loc398 = loc(fused[#loc6, #loc7])
#loc399 = loc(fused[#loc8, #loc9])
#loc400 = loc(fused[#loc10, #loc11])
#loc401 = loc(fused[#loc12, #loc13])
#loc402 = loc(fused[#loc14, #loc15])
#loc403 = loc(fused[#loc16, #loc17])
#loc404 = loc(fused[#loc18, #loc19])
#loc405 = loc(fused[#loc21, #loc22])
#loc406 = loc(fused[#loc23, #loc24])
#loc407 = loc(fused[#loc25, #loc26])
#loc408 = loc(fused[#loc27, #loc28])
#loc409 = loc(fused[#loc29, #loc30])
#loc410 = loc(fused[#loc31, #loc32])
#loc411 = loc(fused[#loc33, #loc34])
#loc412 = loc(fused[#loc35, #loc36])
#loc413 = loc(fused[#loc37, #loc38])
#loc414 = loc(fused[#loc39, #loc40])
#loc415 = loc(fused[#loc41, #loc42])
#loc416 = loc(fused[#loc43, #loc44])
#loc417 = loc(fused[#loc47, #loc45])
#loc418 = loc(fused[#loc48, #loc49])
#loc419 = loc(fused[#loc51, #loc52])
#loc420 = loc(fused[#loc53, #loc54])
#loc421 = loc(fused[#loc60, #loc61])
#loc422 = loc(fused[#loc62, #loc63])
#loc423 = loc(fused[#loc64, #loc65])
#loc424 = loc(fused[#loc66, #loc63])
#loc425 = loc(fused[#loc68, #loc69])
#loc426 = loc(fused[#loc71, #loc72])
#loc427 = loc(fused[#loc73, #loc74])
#loc428 = loc(fused[#loc77, #loc75])
#loc429 = loc(fused[#loc81, #loc82])
#loc430 = loc(fused[#loc86, #loc87])
#loc431 = loc(fused[#loc88, #loc89])
#loc432 = loc(fused[#loc91, #loc92])
#loc433 = loc(fused[#loc93, #loc94])
#loc434 = loc(fused[#loc95, #loc96])
#loc435 = loc(fused[#loc97, #loc89])
#loc436 = loc(fused[#loc101, #loc102])
#loc437 = loc(fused[#loc105, #loc106])
#loc438 = loc(fused[#loc107, #loc108])
#loc439 = loc(fused[#loc109, #loc110])
#loc440 = loc(fused[#loc112, #loc113])
#loc441 = loc(fused[#loc114, #loc108])
#loc442 = loc(fused[#loc118, #loc116])
#loc443 = loc(fused[#loc121, #loc122])
#loc444 = loc(fused[#loc123, #loc124])
#loc445 = loc(fused[#loc125, #loc126])
#loc446 = loc(fused[#loc127, #loc124])
#loc447 = loc(fused[#loc132, #loc130])
#loc448 = loc(fused[#loc133, #loc134])
#loc449 = loc(fused[#loc136, #loc137])
#loc450 = loc(fused[#loc138, #loc139])
#loc451 = loc(fused[#loc140, #loc141])
#loc452 = loc(fused[#loc142, #loc143, #loc144, #loc139])
#loc453 = loc(fused[#loc147, #loc145])
#loc454 = loc(fused[#loc148, #loc149])
#loc455 = loc(fused[#loc151, #loc150])
#loc456 = loc(fused[#loc152, #loc153])
#loc457 = loc(fused[#loc155, #loc149])
#loc458 = loc(fused[#loc160, #loc159])
#loc459 = loc(fused[#loc162, #loc163])
#loc460 = loc(fused[#loc164, #loc165])
#loc461 = loc(fused[#loc166, #loc167])
#loc462 = loc(fused[#loc168, #loc169])
#loc463 = loc(fused[#loc170, #loc171])
#loc464 = loc(fused[#loc176, #loc177])
#loc467 = loc(fused[#loc187, #loc188])
#loc468 = loc(fused[#loc191, #loc192])
#loc469 = loc(fused[#loc195, #loc194])
#loc470 = loc(fused[#loc196, #loc197])
#loc471 = loc(fused[#loc198, #loc199])
#loc472 = loc(fused[#loc200, #loc201])
#loc473 = loc(fused[#loc202, #loc203])
#loc474 = loc(fused[#loc204, #loc205])
#loc475 = loc(fused[#loc206, #loc207])
#loc476 = loc(fused[#loc208, #loc209])
#loc477 = loc(fused[#loc210, #loc211])
#loc478 = loc(fused[#loc214, #loc212])
#loc479 = loc(fused[#loc215, #loc216])
#loc480 = loc(fused[#loc219, #loc218])
#loc481 = loc(fused[#loc222, #loc220])
#loc482 = loc(fused[#loc223, #loc224])
#loc483 = loc(fused[#loc226, #loc227])
#loc484 = loc(fused[#loc228, #loc229])
#loc485 = loc(fused[#loc230, #loc231])
#loc486 = loc(fused[#loc232, #loc233, #loc234, #loc229])
#loc487 = loc(fused[#loc237, #loc235])
#loc488 = loc(fused[#loc238, #loc239])
#loc489 = loc(fused[#loc241, #loc240])
#loc490 = loc(fused[#loc242, #loc243])
#loc491 = loc(fused[#loc245, #loc239])
#loc492 = loc(fused[#loc250, #loc249])
#loc493 = loc(fused[#loc254, #loc255])
#loc494 = loc(fused[#loc256, #loc257])
#loc495 = loc(fused[#loc258, #loc259])
#loc496 = loc(fused[#loc260, #loc261])
#loc497 = loc(fused[#loc262, #loc263])
#loc498 = loc(fused[#loc264, #loc265])
#loc499 = loc(fused[#loc266, #loc267])
#loc500 = loc(fused[#loc268, #loc269])
#loc501 = loc(fused[#loc270, #loc271])
#loc502 = loc(fused[#loc272, #loc273])
#loc503 = loc(fused[#loc274, #loc275])
#loc504 = loc(fused[#loc276, #loc277])
#loc505 = loc(fused[#loc280, #loc278])
#loc506 = loc(fused[#loc281, #loc282])
#loc507 = loc(fused[#loc284, #loc285])
#loc508 = loc(fused[#loc286, #loc287])
#loc509 = loc(fused[#loc293, #loc294])
#loc510 = loc(fused[#loc295, #loc296])
#loc511 = loc(fused[#loc297, #loc298])
#loc512 = loc(fused[#loc299, #loc296])
#loc513 = loc(fused[#loc301, #loc302])
#loc514 = loc(fused[#loc304, #loc305])
#loc515 = loc(fused[#loc306, #loc307])
#loc516 = loc(fused[#loc309, #loc308])
#loc517 = loc(fused[#loc312, #loc313])
#loc518 = loc(fused[#loc316, #loc317])
#loc519 = loc(fused[#loc318, #loc319])
#loc520 = loc(fused[#loc321, #loc322])
#loc521 = loc(fused[#loc323, #loc324])
#loc522 = loc(fused[#loc325, #loc326])
#loc523 = loc(fused[#loc327, #loc319])
#loc524 = loc(fused[#loc331, #loc332])
#loc525 = loc(fused[#loc335, #loc336])
#loc526 = loc(fused[#loc337, #loc338])
#loc527 = loc(fused[#loc339, #loc340])
#loc528 = loc(fused[#loc342, #loc343])
#loc529 = loc(fused[#loc344, #loc338])
#loc530 = loc(fused[#loc348, #loc346])
#loc531 = loc(fused[#loc351, #loc352])
#loc532 = loc(fused[#loc353, #loc354])
#loc533 = loc(fused[#loc355, #loc356])
#loc534 = loc(fused[#loc357, #loc354])
#loc535 = loc(fused[#loc362, #loc360])
#loc536 = loc(fused[#loc363, #loc364])
#loc537 = loc(fused[#loc366, #loc367])
#loc538 = loc(fused[#loc368, #loc369])
#loc539 = loc(fused[#loc370, #loc371])
#loc540 = loc(fused[#loc373, #loc375])
#loc541 = loc(fused[#loc376, #loc377, #loc378, #loc369])
#loc542 = loc(fused[#loc381, #loc379])
#loc543 = loc(fused[#loc382, #loc383])
#loc544 = loc(fused[#loc385, #loc384])
#loc545 = loc(fused[#loc386, #loc387])
#loc546 = loc(fused[#loc389, #loc383])
#loc547 = loc(fused[#loc394, #loc393])
