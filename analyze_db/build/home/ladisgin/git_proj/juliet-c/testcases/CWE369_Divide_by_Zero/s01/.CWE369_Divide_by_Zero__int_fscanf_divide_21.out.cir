!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc12 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":25:21)
#loc13 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":25:25)
#loc55 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":152:10)
#loc56 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":152:14)
#loc57 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":152:20)
#loc58 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":152:32)
#loc79 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":55:26)
#loc80 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":55:30)
#loc118 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":88:26)
#loc119 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":88:30)
#loc155 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":116:25)
#loc156 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":116:29)
#loc183 = loc(fused[#loc12, #loc13])
#loc199 = loc(fused[#loc55, #loc56])
#loc200 = loc(fused[#loc57, #loc58])
#loc206 = loc(fused[#loc79, #loc80])
#loc219 = loc(fused[#loc118, #loc119])
#loc232 = loc(fused[#loc155, #loc156])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fscanf_divide_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc178)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc179)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc180)
  cir.func private @printIntLine(!s32i) loc(#loc181)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc12, #loc13])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc183)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc14)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc180)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc17)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc17)
      cir.if %3 {
        %4 = cir.const #cir.int<100> : !s32i loc(#loc19)
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
        %6 = cir.binop(div, %4, %5) : !s32i loc(#loc186)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc21)
      } loc(#loc185)
    } loc(#loc184)
    cir.return loc(#loc11)
  } loc(#loc182)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fscanf_divide_21_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc188)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc27)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc29)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc179)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc29)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %10 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc180)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    cir.call @badSink(%11) : (!s32i) -> () loc(#loc34)
    cir.return loc(#loc23)
  } loc(#loc187)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fscanf_divide_21_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc194)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc36)
  } loc(#loc191)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc195)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc196)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc197)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc52)
  cir.func @main(%arg0: !s32i loc(fused[#loc55, #loc56]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc57, #loc58])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc199)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc200)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc54)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc59)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc59)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc60)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc61)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc61)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc62)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc49)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_fscanf_divide_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call @CWE369_Divide_by_Zero__int_fscanf_divide_21_good() : () -> () loc(#loc64)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc50)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc51)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_fscanf_divide_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc202)
    cir.call @CWE369_Divide_by_Zero__int_fscanf_divide_21_bad() : () -> () loc(#loc68)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc52)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc71)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc203)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    cir.return %17 : !s32i loc(#loc203)
  } loc(#loc198)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc76)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc79, #loc80])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc206)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc81)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc204)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc84)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc84)
      cir.if %3 {
        %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc75)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc75)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc88)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc91)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc92)
          %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc210)
          cir.if %6 {
            %7 = cir.const #cir.int<100> : !s32i loc(#loc96)
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc97)
            %9 = cir.binop(div, %7, %8) : !s32i loc(#loc212)
            cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc98)
          } else {
            %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc76)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc76)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc99)
          } loc(#loc211)
        } loc(#loc209)
      } loc(#loc208)
    } loc(#loc207)
    cir.return loc(#loc78)
  } loc(#loc205)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc214)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc105)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc107)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc179)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc108)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc109)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc109)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc107)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %10 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc204)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    cir.call @goodB2G1Sink(%11) : (!s32i) -> () loc(#loc113)
    cir.return loc(#loc101)
  } loc(#loc213)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc217)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc118, #loc119])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc219)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc217)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc123)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc123)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc128)
          %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc223)
          cir.if %6 {
            %7 = cir.const #cir.int<100> : !s32i loc(#loc132)
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc133)
            %9 = cir.binop(div, %7, %8) : !s32i loc(#loc225)
            cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc134)
          } else {
            %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc135)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc135)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc136)
          } loc(#loc224)
        } loc(#loc222)
      } loc(#loc221)
    } loc(#loc220)
    cir.return loc(#loc117)
  } loc(#loc218)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc227)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc141)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc142)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc144)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc179)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc145)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc146)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc146)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc144)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc147)
    %10 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc217)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc229)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    cir.call @goodB2G2Sink(%11) : (!s32i) -> () loc(#loc150)
    cir.return loc(#loc138)
  } loc(#loc226)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc230)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc155, #loc156])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc232)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc230)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc160)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc160)
      cir.if %3 {
        %4 = cir.const #cir.int<100> : !s32i loc(#loc162)
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc163)
        %6 = cir.binop(div, %4, %5) : !s32i loc(#loc235)
        cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc164)
      } loc(#loc234)
    } loc(#loc233)
    cir.return loc(#loc154)
  } loc(#loc231)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc237)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc170)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc172)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc230)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc177)
    cir.return loc(#loc166)
  } loc(#loc236)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fscanf_divide_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":40:19)
#loc6 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":23:1)
#loc7 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":23:24)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":25:1)
#loc11 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":32:1)
#loc14 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":26:1)
#loc15 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":27:5)
#loc16 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":31:5)
#loc17 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":27:8)
#loc18 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":28:5)
#loc19 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":30:22)
#loc20 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":30:28)
#loc21 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":30:9)
#loc22 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":34:1)
#loc23 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":43:1)
#loc24 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":36:5)
#loc25 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":36:9)
#loc26 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":38:13)
#loc27 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":38:12)
#loc28 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":38:5)
#loc29 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":40:5)
#loc30 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":40:12)
#loc31 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":41:17)
#loc32 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":41:5)
#loc33 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":42:13)
#loc34 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":42:5)
#loc35 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":136:1)
#loc36 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":141:1)
#loc37 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":138:5)
#loc38 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":138:14)
#loc39 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":139:5)
#loc40 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":139:14)
#loc41 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":140:5)
#loc42 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":140:13)
#loc43 = loc("/usr/include/stdlib.h":575:1)
#loc44 = loc("/usr/include/stdlib.h":575:41)
#loc45 = loc("/usr/include/time.h":76:1)
#loc46 = loc("/usr/include/time.h":76:38)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc49 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":157:15)
#loc50 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":159:15)
#loc51 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":162:15)
#loc52 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":164:15)
#loc53 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":152:1)
#loc54 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":167:1)
#loc59 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":153:1)
#loc60 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":155:27)
#loc61 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":155:22)
#loc62 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":155:5)
#loc63 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":157:5)
#loc64 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":158:5)
#loc65 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":158:54)
#loc66 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":159:5)
#loc67 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":162:5)
#loc68 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":163:5)
#loc69 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":163:53)
#loc70 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":164:5)
#loc71 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":166:12)
#loc72 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":166:5)
#loc73 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":50:1)
#loc74 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":50:29)
#loc75 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":60:19)
#loc76 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":71:23)
#loc77 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":55:1)
#loc78 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":74:1)
#loc81 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":56:1)
#loc82 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":57:5)
#loc83 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":73:5)
#loc84 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":57:8)
#loc85 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":58:5)
#loc86 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":61:5)
#loc87 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":63:5)
#loc88 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":60:9)
#loc89 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":65:9)
#loc90 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":72:9)
#loc91 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":65:13)
#loc92 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":65:21)
#loc93 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":66:9)
#loc94 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":68:9)
#loc95 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":70:9)
#loc96 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":67:26)
#loc97 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":67:32)
#loc98 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":67:13)
#loc99 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":71:13)
#loc100 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":76:1)
#loc101 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":85:1)
#loc102 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":78:5)
#loc103 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":78:9)
#loc104 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":80:13)
#loc105 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":80:12)
#loc106 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":80:5)
#loc107 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":82:5)
#loc108 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":82:12)
#loc109 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":82:19)
#loc110 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":83:22)
#loc111 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":83:5)
#loc112 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":84:18)
#loc113 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":84:5)
#loc114 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":51:1)
#loc115 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":51:29)
#loc116 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":88:1)
#loc117 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":102:1)
#loc120 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":89:1)
#loc121 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":90:5)
#loc122 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":101:5)
#loc123 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":90:8)
#loc124 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":91:5)
#loc125 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":93:9)
#loc126 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":100:9)
#loc127 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":93:13)
#loc128 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":93:21)
#loc129 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":94:9)
#loc130 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":96:9)
#loc131 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":98:9)
#loc132 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":95:26)
#loc133 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":95:32)
#loc134 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":95:13)
#loc135 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":99:23)
#loc136 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":99:13)
#loc137 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":104:1)
#loc138 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":113:1)
#loc139 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":106:5)
#loc140 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":106:9)
#loc141 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":108:13)
#loc142 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":108:12)
#loc143 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":108:5)
#loc144 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":110:5)
#loc145 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":110:12)
#loc146 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":110:19)
#loc147 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":111:22)
#loc148 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":111:5)
#loc149 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":112:18)
#loc150 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":112:5)
#loc151 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":52:1)
#loc152 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":52:28)
#loc153 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":116:1)
#loc154 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":123:1)
#loc157 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":117:1)
#loc158 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":118:5)
#loc159 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":122:5)
#loc160 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":118:8)
#loc161 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":119:5)
#loc162 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":121:22)
#loc163 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":121:28)
#loc164 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":121:9)
#loc165 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":125:1)
#loc166 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":134:1)
#loc167 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":127:5)
#loc168 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":127:9)
#loc169 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":129:13)
#loc170 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":129:12)
#loc171 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":129:5)
#loc172 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":131:12)
#loc173 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":131:5)
#loc174 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":132:21)
#loc175 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":132:5)
#loc176 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":133:17)
#loc177 = loc("CWE369_Divide_by_Zero__int_fscanf_divide_21.c":133:5)
#loc178 = loc(fused[#loc1, #loc2])
#loc179 = loc(fused[#loc3, #loc4])
#loc180 = loc(fused[#loc6, #loc7])
#loc181 = loc(fused[#loc8, #loc9])
#loc182 = loc(fused[#loc10, #loc11])
#loc184 = loc(fused[#loc15, #loc16])
#loc185 = loc(fused[#loc18, #loc16])
#loc186 = loc(fused[#loc19, #loc20])
#loc187 = loc(fused[#loc22, #loc23])
#loc188 = loc(fused[#loc24, #loc25])
#loc189 = loc(fused[#loc28, #loc26])
#loc190 = loc(fused[#loc32, #loc31])
#loc191 = loc(fused[#loc35, #loc36])
#loc192 = loc(fused[#loc37, #loc38])
#loc193 = loc(fused[#loc39, #loc40])
#loc194 = loc(fused[#loc41, #loc42])
#loc195 = loc(fused[#loc43, #loc44])
#loc196 = loc(fused[#loc45, #loc46])
#loc197 = loc(fused[#loc47, #loc48])
#loc198 = loc(fused[#loc53, #loc54])
#loc201 = loc(fused[#loc64, #loc65])
#loc202 = loc(fused[#loc68, #loc69])
#loc203 = loc(fused[#loc72, #loc71])
#loc204 = loc(fused[#loc73, #loc74])
#loc205 = loc(fused[#loc77, #loc78])
#loc207 = loc(fused[#loc82, #loc83])
#loc208 = loc(fused[#loc85, #loc86, #loc87, #loc83])
#loc209 = loc(fused[#loc89, #loc90])
#loc210 = loc(fused[#loc91, #loc92])
#loc211 = loc(fused[#loc93, #loc94, #loc95, #loc90])
#loc212 = loc(fused[#loc96, #loc97])
#loc213 = loc(fused[#loc100, #loc101])
#loc214 = loc(fused[#loc102, #loc103])
#loc215 = loc(fused[#loc106, #loc104])
#loc216 = loc(fused[#loc111, #loc110])
#loc217 = loc(fused[#loc114, #loc115])
#loc218 = loc(fused[#loc116, #loc117])
#loc220 = loc(fused[#loc121, #loc122])
#loc221 = loc(fused[#loc124, #loc122])
#loc222 = loc(fused[#loc125, #loc126])
#loc223 = loc(fused[#loc127, #loc128])
#loc224 = loc(fused[#loc129, #loc130, #loc131, #loc126])
#loc225 = loc(fused[#loc132, #loc133])
#loc226 = loc(fused[#loc137, #loc138])
#loc227 = loc(fused[#loc139, #loc140])
#loc228 = loc(fused[#loc143, #loc141])
#loc229 = loc(fused[#loc148, #loc147])
#loc230 = loc(fused[#loc151, #loc152])
#loc231 = loc(fused[#loc153, #loc154])
#loc233 = loc(fused[#loc158, #loc159])
#loc234 = loc(fused[#loc161, #loc159])
#loc235 = loc(fused[#loc162, #loc163])
#loc236 = loc(fused[#loc165, #loc166])
#loc237 = loc(fused[#loc167, #loc168])
#loc238 = loc(fused[#loc171, #loc169])
#loc239 = loc(fused[#loc173, #loc172])
#loc240 = loc(fused[#loc175, #loc174])
