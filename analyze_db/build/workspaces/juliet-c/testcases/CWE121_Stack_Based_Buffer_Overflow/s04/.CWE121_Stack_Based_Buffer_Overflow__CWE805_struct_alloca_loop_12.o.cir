!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc143)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc144)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc146)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc148)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc150)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc16)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc16)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc16)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc16)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
    %10 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc151)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
    cir.store %12, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc150)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc18)
    %15 = cir.const #cir.int<8> : !u64i loc(#loc18)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc18)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc18)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc18)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
    cir.store %19, %10 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc151)
    cir.br ^bb1 loc(#loc152)
  ^bb1:  // pred: ^bb0
    %20 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc153)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc153)
    %22 = cir.call %21() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc21)
    %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %23 ^bb2, ^bb3 loc(#loc154)
  ^bb2:  // pred: ^bb1
    %24 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
    cir.store %24, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc155)
    cir.br ^bb4 loc(#loc24)
  ^bb3:  // pred: ^bb1
    %25 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
    cir.store %25, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc156)
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc20)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc157)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc158)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc159)
  ^bb8:  // pred: ^bb7
    %26 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc36)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc160)
    cir.br ^bb9 loc(#loc159)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc39)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc39)
    %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc161)
    cir.brcond %31 ^bb10, ^bb14 loc(#loc40)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc162)
  ^bb11:  // pred: ^bb10
    %32 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!ty__twoIntsStruct>, %33 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
    %36 = cir.get_member %35[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc45)
    cir.store %32, %36 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!ty__twoIntsStruct>, %38 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
    %41 = cir.get_member %40[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc49)
    cir.store %37, %41 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.br ^bb12 loc(#loc35)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc35)
  ^bb13:  // pred: ^bb12
    %42 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc50)
    %43 = cir.unary(inc, %42) : !u64i, !u64i loc(#loc51)
    cir.store %43, %1 : !u64i, !cir.ptr<!u64i> loc(#loc165)
    cir.br ^bb9 loc(#loc159)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc35)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc33)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc166)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc167)
  ^bb18:  // pred: ^bb17
    %44 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc56)
    cir.store %45, %2 : !u64i, !cir.ptr<!u64i> loc(#loc168)
    cir.br ^bb19 loc(#loc167)
  ^bb19:  // 2 preds: ^bb18, ^bb23
    %46 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc58)
    %47 = cir.const #cir.int<100> : !s32i loc(#loc59)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc59)
    %49 = cir.cmp(lt, %46, %48) : !u64i, !cir.bool loc(#loc169)
    cir.brcond %49 ^bb20, ^bb24 loc(#loc60)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc170)
  ^bb21:  // pred: ^bb20
    %50 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
    %51 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc63)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!ty__twoIntsStruct>, %51 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
    %53 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    %54 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc66)
    %55 = cir.ptr_stride(%54 : !cir.ptr<!ty__twoIntsStruct>, %53 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc66)
    cir.copy %55 to %52 : !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
    cir.br ^bb22 loc(#loc55)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc55)
  ^bb23:  // pred: ^bb22
    %56 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc67)
    %57 = cir.unary(inc, %56) : !u64i, !u64i loc(#loc68)
    cir.store %57, %2 : !u64i, !cir.ptr<!u64i> loc(#loc171)
    cir.br ^bb19 loc(#loc167)
  ^bb24:  // pred: ^bb19
    cir.br ^bb25 loc(#loc55)
  ^bb25:  // pred: ^bb24
    %58 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %60 = cir.ptr_stride(%58 : !cir.ptr<!ty__twoIntsStruct>, %59 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
    cir.call @printStructLine(%60) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc72)
    cir.br ^bb26 loc(#loc53)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc31)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc6)
  } loc(#loc145)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc173)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc75)
    cir.return loc(#loc74)
  } loc(#loc172)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc175)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc176)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc177)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc178)
    %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc179)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc88)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc88)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc88)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc88)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc88)
    %10 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc180)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc88)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
    cir.store %12, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc179)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc90)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc90)
    %15 = cir.const #cir.int<8> : !u64i loc(#loc90)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc90)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc90)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc90)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc90)
    cir.store %19, %10 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc180)
    cir.br ^bb1 loc(#loc181)
  ^bb1:  // pred: ^bb0
    %20 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc182)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc182)
    %22 = cir.call %21() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc93)
    %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc93)
    cir.brcond %23 ^bb2, ^bb3 loc(#loc183)
  ^bb2:  // pred: ^bb1
    %24 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
    cir.store %24, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc184)
    cir.br ^bb4 loc(#loc96)
  ^bb3:  // pred: ^bb1
    %25 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
    cir.store %25, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc185)
    cir.br ^bb4 loc(#loc92)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc92)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc186)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc187)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc188)
  ^bb8:  // pred: ^bb7
    %26 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc108)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc189)
    cir.br ^bb9 loc(#loc188)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc110)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc111)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc111)
    %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc190)
    cir.brcond %31 ^bb10, ^bb14 loc(#loc112)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc191)
  ^bb11:  // pred: ^bb10
    %32 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc115)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!ty__twoIntsStruct>, %33 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
    %36 = cir.get_member %35[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc45)
    cir.store %32, %36 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc118)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!ty__twoIntsStruct>, %38 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
    %41 = cir.get_member %40[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc49)
    cir.store %37, %41 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.br ^bb12 loc(#loc107)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc107)
  ^bb13:  // pred: ^bb12
    %42 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc120)
    %43 = cir.unary(inc, %42) : !u64i, !u64i loc(#loc121)
    cir.store %43, %1 : !u64i, !cir.ptr<!u64i> loc(#loc194)
    cir.br ^bb9 loc(#loc188)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc107)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc105)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc195)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc196)
  ^bb18:  // pred: ^bb17
    %44 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc126)
    cir.store %45, %2 : !u64i, !cir.ptr<!u64i> loc(#loc197)
    cir.br ^bb19 loc(#loc196)
  ^bb19:  // 2 preds: ^bb18, ^bb23
    %46 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc128)
    %47 = cir.const #cir.int<100> : !s32i loc(#loc129)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc129)
    %49 = cir.cmp(lt, %46, %48) : !u64i, !cir.bool loc(#loc198)
    cir.brcond %49 ^bb20, ^bb24 loc(#loc130)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc199)
  ^bb21:  // pred: ^bb20
    %50 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
    %51 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc133)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!ty__twoIntsStruct>, %51 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
    %53 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc135)
    %54 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
    %55 = cir.ptr_stride(%54 : !cir.ptr<!ty__twoIntsStruct>, %53 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc136)
    cir.copy %55 to %52 : !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
    cir.br ^bb22 loc(#loc125)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc125)
  ^bb23:  // pred: ^bb22
    %56 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc137)
    %57 = cir.unary(inc, %56) : !u64i, !u64i loc(#loc138)
    cir.store %57, %2 : !u64i, !cir.ptr<!u64i> loc(#loc200)
    cir.br ^bb19 loc(#loc196)
  ^bb24:  // pred: ^bb19
    cir.br ^bb25 loc(#loc125)
  ^bb25:  // pred: ^bb24
    %58 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc140)
    %60 = cir.ptr_stride(%58 : !cir.ptr<!ty__twoIntsStruct>, %59 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
    cir.call @printStructLine(%60) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc142)
    cir.br ^bb26 loc(#loc123)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc103)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc78)
  } loc(#loc174)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":21:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":58:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":38:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":38:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":40:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":40:20)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":49:13)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":49:20)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":23:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":23:21)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":24:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":24:54)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":25:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":25:55)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":26:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":36:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":26:8)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":26:33)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":27:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":31:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":33:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":30:16)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":30:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":35:16)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":35:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":37:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":57:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":39:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":47:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":42:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":46:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":42:22)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":42:18)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":42:25)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":42:29)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":42:27)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":43:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":44:36)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":44:24)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":44:17)
#loc45 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":45:36)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":45:24)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":45:17)
#loc49 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":42:35)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":42:34)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":48:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":56:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":51:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":54:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":51:22)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":51:18)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":51:25)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":51:29)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":51:27)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":52:13)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":53:17)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":53:22)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":53:23)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":53:34)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":53:27)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":51:35)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":51:34)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":55:30)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":55:35)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":55:36)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":55:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":104:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":107:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":106:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":106:13)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":66:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":102:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":82:9)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":82:33)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":84:13)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":84:20)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":93:13)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":93:20)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":68:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":68:21)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":69:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":69:54)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":70:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":70:55)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":71:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":80:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":71:8)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":71:33)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":72:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":75:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":77:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":74:16)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":74:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":79:16)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":79:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":81:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":101:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":83:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":91:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":86:13)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":90:13)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":86:22)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":86:18)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":86:25)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":86:29)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":86:27)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":87:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":88:36)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":88:24)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":88:17)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":89:36)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":89:24)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":89:17)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":86:35)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":86:34)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":92:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":100:9)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":95:13)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":98:13)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":95:22)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":95:18)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":95:25)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":95:29)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":95:27)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":96:13)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":97:17)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":97:22)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":97:23)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":97:34)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":97:27)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":95:35)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":95:34)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":99:30)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":99:35)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":99:36)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_12.c":99:13)
#loc143 = loc(fused[#loc1, #loc2])
#loc144 = loc(fused[#loc3, #loc4])
#loc145 = loc(fused[#loc5, #loc6])
#loc146 = loc(fused[#loc7, #loc8])
#loc147 = loc(fused[#loc9, #loc10])
#loc148 = loc(fused[#loc11, #loc12])
#loc149 = loc(fused[#loc13, #loc14])
#loc150 = loc(fused[#loc15, #loc16])
#loc151 = loc(fused[#loc17, #loc18])
#loc152 = loc(fused[#loc19, #loc20])
#loc153 = loc(fused[#loc21, #loc22])
#loc154 = loc(fused[#loc23, #loc24, #loc25, #loc20])
#loc155 = loc(fused[#loc27, #loc26])
#loc156 = loc(fused[#loc29, #loc28])
#loc157 = loc(fused[#loc30, #loc31])
#loc158 = loc(fused[#loc32, #loc33])
#loc159 = loc(fused[#loc34, #loc35])
#loc160 = loc(fused[#loc37, #loc36])
#loc161 = loc(fused[#loc38, #loc39])
#loc162 = loc(fused[#loc41, #loc35])
#loc163 = loc(fused[#loc44, #loc42])
#loc164 = loc(fused[#loc48, #loc46])
#loc165 = loc(fused[#loc51, #loc50])
#loc166 = loc(fused[#loc52, #loc53])
#loc167 = loc(fused[#loc54, #loc55])
#loc168 = loc(fused[#loc57, #loc56])
#loc169 = loc(fused[#loc58, #loc59])
#loc170 = loc(fused[#loc61, #loc55])
#loc171 = loc(fused[#loc68, #loc67])
#loc172 = loc(fused[#loc73, #loc74])
#loc173 = loc(fused[#loc75, #loc76])
#loc174 = loc(fused[#loc77, #loc78])
#loc175 = loc(fused[#loc79, #loc80])
#loc176 = loc(fused[#loc81, #loc82])
#loc177 = loc(fused[#loc83, #loc84])
#loc178 = loc(fused[#loc85, #loc86])
#loc179 = loc(fused[#loc87, #loc88])
#loc180 = loc(fused[#loc89, #loc90])
#loc181 = loc(fused[#loc91, #loc92])
#loc182 = loc(fused[#loc93, #loc94])
#loc183 = loc(fused[#loc95, #loc96, #loc97, #loc92])
#loc184 = loc(fused[#loc99, #loc98])
#loc185 = loc(fused[#loc101, #loc100])
#loc186 = loc(fused[#loc102, #loc103])
#loc187 = loc(fused[#loc104, #loc105])
#loc188 = loc(fused[#loc106, #loc107])
#loc189 = loc(fused[#loc109, #loc108])
#loc190 = loc(fused[#loc110, #loc111])
#loc191 = loc(fused[#loc113, #loc107])
#loc192 = loc(fused[#loc116, #loc114])
#loc193 = loc(fused[#loc119, #loc117])
#loc194 = loc(fused[#loc121, #loc120])
#loc195 = loc(fused[#loc122, #loc123])
#loc196 = loc(fused[#loc124, #loc125])
#loc197 = loc(fused[#loc127, #loc126])
#loc198 = loc(fused[#loc128, #loc129])
#loc199 = loc(fused[#loc131, #loc125])
#loc200 = loc(fused[#loc138, #loc137])
