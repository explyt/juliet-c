!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc122 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":100:48)
#loc178 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":384:10)
#loc179 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":384:14)
#loc180 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":384:20)
#loc181 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":384:32)
#loc295 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":189:48)
#loc437 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":286:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc600 = loc(fused[#loc178, #loc179])
#loc601 = loc(fused[#loc180, #loc181])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc528)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc529)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc530)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc531)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc532)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc533)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc534)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc535)
  cir.func private @close(!s32i) -> !s32i loc(#loc536)
  cir.func private @printIntLine(!s32i) loc(#loc537)
  cir.func no_proto @CWE369_Divide_by_Zero__int_listen_socket_modulo_07_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc539)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc540)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc541)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc542)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc543)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc544)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc36)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc545)
    cir.br ^bb1 loc(#loc546)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc528)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc41)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc547)
    cir.brcond %11 ^bb2, ^bb46 loc(#loc548)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc549)
  ^bb3:  // pred: ^bb2
    %12 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc28)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc541)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc30)
    cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc542)
    cir.br ^bb4 loc(#loc550)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc550)
  ^bb5:  // pred: ^bb34
    %16 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc47)
    cir.brcond %17 ^bb6, ^bb35 loc(#loc47)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %18 = cir.const #cir.int<2> : !s32i loc(#loc48)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %20 = cir.const #cir.int<6> : !s32i loc(#loc50)
    %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
    cir.store %21, %2 : !s32i, !cir.ptr<!s32i> loc(#loc551)
    cir.br ^bb7 loc(#loc552)
  ^bb7:  // pred: ^bb6
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc57)
    %25 = cir.cmp(eq, %22, %24) : !s32i, !cir.bool loc(#loc553)
    cir.brcond %25 ^bb8, ^bb9 loc(#loc554)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc59)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc55)
  ^bb10:  // pred: ^bb9
    %26 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc555)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %28 = cir.const #cir.int<16> : !u64i loc(#loc556)
    cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc557)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc67)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc67)
    %31 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
    cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc558)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc70)
    %34 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc559)
    %36 = cir.const #cir.int<27015> : !s32i loc(#loc74)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc74)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc75)
    %39 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc560)
    cir.br ^bb11 loc(#loc561)
  ^bb11:  // pred: ^bb10
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %41 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc562)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc563)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc563)
    %44 = cir.call @bind(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc86)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %46 = cir.unary(minus, %45) : !s32i, !s32i loc(#loc87)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc564)
    cir.brcond %47 ^bb12, ^bb13 loc(#loc565)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc89)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc80)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc566)
  ^bb15:  // pred: ^bb14
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %49 = cir.const #cir.int<5> : !s32i loc(#loc93)
    %50 = cir.call @listen(%48, %49) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc94)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc95)
    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc567)
    cir.brcond %53 ^bb16, ^bb17 loc(#loc568)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc97)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc91)
  ^bb18:  // pred: ^bb17
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc99)
    %56 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc100)
    %57 = cir.call @accept(%54, %55, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc101)
    cir.store %57, %3 : !s32i, !cir.ptr<!s32i> loc(#loc569)
    cir.br ^bb19 loc(#loc570)
  ^bb19:  // pred: ^bb18
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc107)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc571)
    cir.brcond %61 ^bb20, ^bb21 loc(#loc572)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc109)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc105)
  ^bb22:  // pred: ^bb21
    %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %63 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
    %65 = cir.const #cir.int<3> : !s32i loc(#loc112)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc112)
    %67 = cir.const #cir.int<4> : !u64i loc(#loc112)
    %68 = cir.binop(mul, %66, %67) : !u64i loc(#loc112)
    %69 = cir.const #cir.int<2> : !s32i loc(#loc112)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc112)
    %71 = cir.binop(add, %68, %70) : !u64i loc(#loc112)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %73 = cir.cast(integral, %72 : !s32i), !u64i loc(#loc113)
    %74 = cir.binop(sub, %71, %73) : !u64i loc(#loc573)
    %75 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %76 = cir.call @recv(%62, %64, %74, %75) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc115)
    %77 = cir.cast(integral, %76 : !s64i), !s32i loc(#loc115)
    cir.store %77, %0 : !s32i, !cir.ptr<!s32i> loc(#loc574)
    cir.br ^bb23 loc(#loc575)
  ^bb23:  // pred: ^bb22
    %78 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc121)
    %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc576)
    cir.brcond %81 ^bb24, ^bb25 loc(#loc122)
  ^bb24:  // pred: ^bb23
    %82 = cir.const #true loc(#loc122)
    cir.br ^bb30(%82 : !cir.bool) loc(#loc122)
  ^bb25:  // pred: ^bb23
    %83 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %84 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc577)
    cir.brcond %85 ^bb26, ^bb27 loc(#loc122)
  ^bb26:  // pred: ^bb25
    %86 = cir.const #true loc(#loc122)
    cir.br ^bb28(%86 : !cir.bool) loc(#loc122)
  ^bb27:  // pred: ^bb25
    %87 = cir.const #false loc(#loc122)
    cir.br ^bb28(%87 : !cir.bool) loc(#loc122)
  ^bb28(%88: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":100:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc122)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%88 : !cir.bool) loc(#loc122)
  ^bb30(%89: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":100:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc122)
  ^bb31:  // pred: ^bb30
    cir.brcond %89 ^bb32, ^bb33 loc(#loc578)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc126)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc119)
  ^bb34:  // pred: ^bb33
    %90 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %91 = cir.cast(integral, %90 : !s32i), !s8i loc(#loc127)
    %92 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %93 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
    %94 = cir.ptr_stride(%93 : !cir.ptr<!s8i>, %92 : !s32i), !cir.ptr<!s8i> loc(#loc129)
    cir.store %91, %94 : !s8i, !cir.ptr<!s8i> loc(#loc579)
    %95 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc130)
    %96 = cir.call @atoi(%95) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc131)
    cir.store %96, %5 : !s32i, !cir.ptr<!s32i> loc(#loc580)
    cir.br ^bb5 loc(#loc46)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc46)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc581)
  ^bb37:  // pred: ^bb36
    %97 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %98 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %99 = cir.unary(minus, %98) : !s32i, !s32i loc(#loc137)
    %100 = cir.cmp(ne, %97, %99) : !s32i, !cir.bool loc(#loc582)
    cir.brcond %100 ^bb38, ^bb39 loc(#loc583)
  ^bb38:  // pred: ^bb37
    %101 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %102 = cir.call @close(%101) : (!s32i) -> !s32i loc(#loc140)
    cir.br ^bb39 loc(#loc135)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc135)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc584)
  ^bb41:  // pred: ^bb40
    %103 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %104 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %105 = cir.unary(minus, %104) : !s32i, !s32i loc(#loc144)
    %106 = cir.cmp(ne, %103, %105) : !s32i, !cir.bool loc(#loc585)
    cir.brcond %106 ^bb42, ^bb43 loc(#loc586)
  ^bb42:  // pred: ^bb41
    %107 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %108 = cir.call @close(%107) : (!s32i) -> !s32i loc(#loc147)
    cir.br ^bb43 loc(#loc142)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc142)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc44)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc39)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc39)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc587)
  ^bb48:  // pred: ^bb47
    %109 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc528)
    %110 = cir.load %109 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %111 = cir.const #cir.int<5> : !s32i loc(#loc151)
    %112 = cir.cmp(eq, %110, %111) : !s32i, !cir.bool loc(#loc588)
    cir.brcond %112 ^bb49, ^bb50 loc(#loc589)
  ^bb49:  // pred: ^bb48
    %113 = cir.const #cir.int<100> : !s32i loc(#loc153)
    %114 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %115 = cir.binop(rem, %113, %114) : !s32i loc(#loc590)
    cir.call @printIntLine(%115) : (!s32i) -> () loc(#loc155)
    cir.br ^bb50 loc(#loc149)
  ^bb50:  // 2 preds: ^bb48, ^bb49
    cir.br ^bb51 loc(#loc149)
  ^bb51:  // pred: ^bb50
    cir.return loc(#loc22)
  } loc(#loc538)
  cir.func no_proto @CWE369_Divide_by_Zero__int_listen_socket_modulo_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc592)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc158)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc593)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc160)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc594)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc162)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc595)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc164)
    cir.return loc(#loc157)
  } loc(#loc591)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc596)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc597)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc598)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc175)
  cir.func @main(%arg0: !s32i loc(fused[#loc178, #loc179]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc180, #loc181])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc600)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc601)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc177)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc182)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc183)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc184)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc184)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc185)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc172)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc186)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_listen_socket_modulo_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc602)
    cir.call @CWE369_Divide_by_Zero__int_listen_socket_modulo_07_good() : () -> () loc(#loc187)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc173)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc173)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc189)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc174)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc174)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_listen_socket_modulo_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc603)
    cir.call @CWE369_Divide_by_Zero__int_listen_socket_modulo_07_bad() : () -> () loc(#loc191)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc175)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc193)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc194)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc604)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc604)
    cir.return %17 : !s32i loc(#loc604)
  } loc(#loc599)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc196)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc197)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc606)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc607)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc608)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc609)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc610)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc611)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc212)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc213)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc612)
    cir.br ^bb1 loc(#loc613)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc528)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc218)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc614)
    cir.brcond %11 ^bb2, ^bb46 loc(#loc615)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc616)
  ^bb3:  // pred: ^bb2
    %12 = cir.const #cir.int<1> : !s32i loc(#loc205)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc205)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc608)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc207)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc207)
    cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc609)
    cir.br ^bb4 loc(#loc617)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc617)
  ^bb5:  // pred: ^bb34
    %16 = cir.const #cir.int<0> : !s32i loc(#loc224)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc224)
    cir.brcond %17 ^bb6, ^bb35 loc(#loc224)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %18 = cir.const #cir.int<2> : !s32i loc(#loc225)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc226)
    %20 = cir.const #cir.int<6> : !s32i loc(#loc227)
    %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc228)
    cir.store %21, %2 : !s32i, !cir.ptr<!s32i> loc(#loc618)
    cir.br ^bb7 loc(#loc619)
  ^bb7:  // pred: ^bb6
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc233)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc234)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc234)
    %25 = cir.cmp(eq, %22, %24) : !s32i, !cir.bool loc(#loc620)
    cir.brcond %25 ^bb8, ^bb9 loc(#loc621)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc236)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc232)
  ^bb10:  // pred: ^bb9
    %26 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc622)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc239)
    %28 = cir.const #cir.int<16> : !u64i loc(#loc623)
    cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc624)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc244)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc244)
    %31 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
    cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc625)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc246)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc246)
    %34 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc626)
    %36 = cir.const #cir.int<27015> : !s32i loc(#loc248)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc248)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc249)
    %39 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc627)
    cir.br ^bb11 loc(#loc628)
  ^bb11:  // pred: ^bb10
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc254)
    %41 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc629)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc630)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc630)
    %44 = cir.call @bind(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc259)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc260)
    %46 = cir.unary(minus, %45) : !s32i, !s32i loc(#loc260)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc631)
    cir.brcond %47 ^bb12, ^bb13 loc(#loc632)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc262)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc253)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc633)
  ^bb15:  // pred: ^bb14
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %49 = cir.const #cir.int<5> : !s32i loc(#loc266)
    %50 = cir.call @listen(%48, %49) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc267)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc268)
    %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc268)
    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc634)
    cir.brcond %53 ^bb16, ^bb17 loc(#loc635)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc270)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc264)
  ^bb18:  // pred: ^bb17
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc272)
    %56 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc273)
    %57 = cir.call @accept(%54, %55, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc274)
    cir.store %57, %3 : !s32i, !cir.ptr<!s32i> loc(#loc636)
    cir.br ^bb19 loc(#loc637)
  ^bb19:  // pred: ^bb18
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc279)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc280)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc280)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc638)
    cir.brcond %61 ^bb20, ^bb21 loc(#loc639)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc282)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc278)
  ^bb22:  // pred: ^bb21
    %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc283)
    %63 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc284)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc284)
    %65 = cir.const #cir.int<3> : !s32i loc(#loc285)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc285)
    %67 = cir.const #cir.int<4> : !u64i loc(#loc285)
    %68 = cir.binop(mul, %66, %67) : !u64i loc(#loc285)
    %69 = cir.const #cir.int<2> : !s32i loc(#loc285)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc285)
    %71 = cir.binop(add, %68, %70) : !u64i loc(#loc285)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc286)
    %73 = cir.cast(integral, %72 : !s32i), !u64i loc(#loc286)
    %74 = cir.binop(sub, %71, %73) : !u64i loc(#loc640)
    %75 = cir.const #cir.int<0> : !s32i loc(#loc287)
    %76 = cir.call @recv(%62, %64, %74, %75) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc288)
    %77 = cir.cast(integral, %76 : !s64i), !s32i loc(#loc288)
    cir.store %77, %0 : !s32i, !cir.ptr<!s32i> loc(#loc641)
    cir.br ^bb23 loc(#loc642)
  ^bb23:  // pred: ^bb22
    %78 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc293)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc294)
    %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc294)
    %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc643)
    cir.brcond %81 ^bb24, ^bb25 loc(#loc295)
  ^bb24:  // pred: ^bb23
    %82 = cir.const #true loc(#loc295)
    cir.br ^bb30(%82 : !cir.bool) loc(#loc295)
  ^bb25:  // pred: ^bb23
    %83 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc296)
    %84 = cir.const #cir.int<0> : !s32i loc(#loc297)
    %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc644)
    cir.brcond %85 ^bb26, ^bb27 loc(#loc295)
  ^bb26:  // pred: ^bb25
    %86 = cir.const #true loc(#loc295)
    cir.br ^bb28(%86 : !cir.bool) loc(#loc295)
  ^bb27:  // pred: ^bb25
    %87 = cir.const #false loc(#loc295)
    cir.br ^bb28(%87 : !cir.bool) loc(#loc295)
  ^bb28(%88: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":189:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc295)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%88 : !cir.bool) loc(#loc295)
  ^bb30(%89: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":189:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc295)
  ^bb31:  // pred: ^bb30
    cir.brcond %89 ^bb32, ^bb33 loc(#loc645)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc299)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc292)
  ^bb34:  // pred: ^bb33
    %90 = cir.const #cir.int<0> : !s32i loc(#loc300)
    %91 = cir.cast(integral, %90 : !s32i), !s8i loc(#loc300)
    %92 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc301)
    %93 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc302)
    %94 = cir.ptr_stride(%93 : !cir.ptr<!s8i>, %92 : !s32i), !cir.ptr<!s8i> loc(#loc302)
    cir.store %91, %94 : !s8i, !cir.ptr<!s8i> loc(#loc646)
    %95 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc303)
    %96 = cir.call @atoi(%95) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc304)
    cir.store %96, %5 : !s32i, !cir.ptr<!s32i> loc(#loc647)
    cir.br ^bb5 loc(#loc223)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc223)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc648)
  ^bb37:  // pred: ^bb36
    %97 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc309)
    %98 = cir.const #cir.int<1> : !s32i loc(#loc310)
    %99 = cir.unary(minus, %98) : !s32i, !s32i loc(#loc310)
    %100 = cir.cmp(ne, %97, %99) : !s32i, !cir.bool loc(#loc649)
    cir.brcond %100 ^bb38, ^bb39 loc(#loc650)
  ^bb38:  // pred: ^bb37
    %101 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc312)
    %102 = cir.call @close(%101) : (!s32i) -> !s32i loc(#loc313)
    cir.br ^bb39 loc(#loc308)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc308)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc651)
  ^bb41:  // pred: ^bb40
    %103 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc316)
    %104 = cir.const #cir.int<1> : !s32i loc(#loc317)
    %105 = cir.unary(minus, %104) : !s32i, !s32i loc(#loc317)
    %106 = cir.cmp(ne, %103, %105) : !s32i, !cir.bool loc(#loc652)
    cir.brcond %106 ^bb42, ^bb43 loc(#loc653)
  ^bb42:  // pred: ^bb41
    %107 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc319)
    %108 = cir.call @close(%107) : (!s32i) -> !s32i loc(#loc320)
    cir.br ^bb43 loc(#loc315)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc315)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc221)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc216)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc216)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc654)
  ^bb48:  // pred: ^bb47
    %109 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc528)
    %110 = cir.load %109 : !cir.ptr<!s32i>, !s32i loc(#loc323)
    %111 = cir.const #cir.int<5> : !s32i loc(#loc324)
    %112 = cir.cmp(ne, %110, %111) : !s32i, !cir.bool loc(#loc655)
    cir.brcond %112 ^bb49, ^bb50 loc(#loc656)
  ^bb49:  // pred: ^bb48
    %113 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc196)
    %114 = cir.cast(array_to_ptrdecay, %113 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc196)
    cir.call @printLine(%114) : (!cir.ptr<!s8i>) -> () loc(#loc328)
    cir.br ^bb56 loc(#loc326)
  ^bb50:  // pred: ^bb48
    cir.br ^bb51 loc(#loc657)
  ^bb51:  // pred: ^bb50
    %115 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc331)
    %116 = cir.const #cir.int<0> : !s32i loc(#loc332)
    %117 = cir.cmp(ne, %115, %116) : !s32i, !cir.bool loc(#loc658)
    cir.brcond %117 ^bb52, ^bb53 loc(#loc659)
  ^bb52:  // pred: ^bb51
    %118 = cir.const #cir.int<100> : !s32i loc(#loc336)
    %119 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc337)
    %120 = cir.binop(rem, %118, %119) : !s32i loc(#loc660)
    cir.call @printIntLine(%120) : (!s32i) -> () loc(#loc338)
    cir.br ^bb54 loc(#loc334)
  ^bb53:  // pred: ^bb51
    %121 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc197)
    %122 = cir.cast(array_to_ptrdecay, %121 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc197)
    cir.call @printLine(%122) : (!cir.ptr<!s8i>) -> () loc(#loc339)
    cir.br ^bb54 loc(#loc330)
  ^bb54:  // 2 preds: ^bb52, ^bb53
    cir.br ^bb55 loc(#loc330)
  ^bb55:  // pred: ^bb54
    cir.br ^bb56 loc(#loc322)
  ^bb56:  // 2 preds: ^bb49, ^bb55
    cir.br ^bb57 loc(#loc322)
  ^bb57:  // pred: ^bb56
    cir.return loc(#loc199)
  } loc(#loc605)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc662)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc663)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc664)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc665)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc666)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc667)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc354)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc355)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc668)
    cir.br ^bb1 loc(#loc669)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc528)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc359)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc360)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc670)
    cir.brcond %11 ^bb2, ^bb46 loc(#loc671)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc672)
  ^bb3:  // pred: ^bb2
    %12 = cir.const #cir.int<1> : !s32i loc(#loc347)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc347)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc664)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc349)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc349)
    cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc665)
    cir.br ^bb4 loc(#loc673)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc673)
  ^bb5:  // pred: ^bb34
    %16 = cir.const #cir.int<0> : !s32i loc(#loc366)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc366)
    cir.brcond %17 ^bb6, ^bb35 loc(#loc366)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %18 = cir.const #cir.int<2> : !s32i loc(#loc367)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc368)
    %20 = cir.const #cir.int<6> : !s32i loc(#loc369)
    %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc370)
    cir.store %21, %2 : !s32i, !cir.ptr<!s32i> loc(#loc674)
    cir.br ^bb7 loc(#loc675)
  ^bb7:  // pred: ^bb6
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc375)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc376)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc376)
    %25 = cir.cmp(eq, %22, %24) : !s32i, !cir.bool loc(#loc676)
    cir.brcond %25 ^bb8, ^bb9 loc(#loc677)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc378)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc374)
  ^bb10:  // pred: ^bb9
    %26 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc678)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc381)
    %28 = cir.const #cir.int<16> : !u64i loc(#loc679)
    cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc680)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc386)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc386)
    %31 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
    cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc681)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc388)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc388)
    %34 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc682)
    %36 = cir.const #cir.int<27015> : !s32i loc(#loc390)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc390)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc391)
    %39 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc683)
    cir.br ^bb11 loc(#loc684)
  ^bb11:  // pred: ^bb10
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc396)
    %41 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc685)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc686)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc686)
    %44 = cir.call @bind(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc401)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc402)
    %46 = cir.unary(minus, %45) : !s32i, !s32i loc(#loc402)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc687)
    cir.brcond %47 ^bb12, ^bb13 loc(#loc688)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc404)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc395)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc689)
  ^bb15:  // pred: ^bb14
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc407)
    %49 = cir.const #cir.int<5> : !s32i loc(#loc408)
    %50 = cir.call @listen(%48, %49) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc409)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc410)
    %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc410)
    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc690)
    cir.brcond %53 ^bb16, ^bb17 loc(#loc691)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc412)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc406)
  ^bb18:  // pred: ^bb17
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc413)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc414)
    %56 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc415)
    %57 = cir.call @accept(%54, %55, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc416)
    cir.store %57, %3 : !s32i, !cir.ptr<!s32i> loc(#loc692)
    cir.br ^bb19 loc(#loc693)
  ^bb19:  // pred: ^bb18
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc421)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc422)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc422)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc694)
    cir.brcond %61 ^bb20, ^bb21 loc(#loc695)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc424)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc420)
  ^bb22:  // pred: ^bb21
    %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc425)
    %63 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc426)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc426)
    %65 = cir.const #cir.int<3> : !s32i loc(#loc427)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc427)
    %67 = cir.const #cir.int<4> : !u64i loc(#loc427)
    %68 = cir.binop(mul, %66, %67) : !u64i loc(#loc427)
    %69 = cir.const #cir.int<2> : !s32i loc(#loc427)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc427)
    %71 = cir.binop(add, %68, %70) : !u64i loc(#loc427)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc428)
    %73 = cir.cast(integral, %72 : !s32i), !u64i loc(#loc428)
    %74 = cir.binop(sub, %71, %73) : !u64i loc(#loc696)
    %75 = cir.const #cir.int<0> : !s32i loc(#loc429)
    %76 = cir.call @recv(%62, %64, %74, %75) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc430)
    %77 = cir.cast(integral, %76 : !s64i), !s32i loc(#loc430)
    cir.store %77, %0 : !s32i, !cir.ptr<!s32i> loc(#loc697)
    cir.br ^bb23 loc(#loc698)
  ^bb23:  // pred: ^bb22
    %78 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc435)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc436)
    %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc436)
    %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc699)
    cir.brcond %81 ^bb24, ^bb25 loc(#loc437)
  ^bb24:  // pred: ^bb23
    %82 = cir.const #true loc(#loc437)
    cir.br ^bb30(%82 : !cir.bool) loc(#loc437)
  ^bb25:  // pred: ^bb23
    %83 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc438)
    %84 = cir.const #cir.int<0> : !s32i loc(#loc439)
    %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc700)
    cir.brcond %85 ^bb26, ^bb27 loc(#loc437)
  ^bb26:  // pred: ^bb25
    %86 = cir.const #true loc(#loc437)
    cir.br ^bb28(%86 : !cir.bool) loc(#loc437)
  ^bb27:  // pred: ^bb25
    %87 = cir.const #false loc(#loc437)
    cir.br ^bb28(%87 : !cir.bool) loc(#loc437)
  ^bb28(%88: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":286:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc437)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%88 : !cir.bool) loc(#loc437)
  ^bb30(%89: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":286:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc437)
  ^bb31:  // pred: ^bb30
    cir.brcond %89 ^bb32, ^bb33 loc(#loc701)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc441)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc434)
  ^bb34:  // pred: ^bb33
    %90 = cir.const #cir.int<0> : !s32i loc(#loc442)
    %91 = cir.cast(integral, %90 : !s32i), !s8i loc(#loc442)
    %92 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc443)
    %93 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc444)
    %94 = cir.ptr_stride(%93 : !cir.ptr<!s8i>, %92 : !s32i), !cir.ptr<!s8i> loc(#loc444)
    cir.store %91, %94 : !s8i, !cir.ptr<!s8i> loc(#loc702)
    %95 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc445)
    %96 = cir.call @atoi(%95) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc446)
    cir.store %96, %5 : !s32i, !cir.ptr<!s32i> loc(#loc703)
    cir.br ^bb5 loc(#loc365)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc365)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc704)
  ^bb37:  // pred: ^bb36
    %97 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc451)
    %98 = cir.const #cir.int<1> : !s32i loc(#loc452)
    %99 = cir.unary(minus, %98) : !s32i, !s32i loc(#loc452)
    %100 = cir.cmp(ne, %97, %99) : !s32i, !cir.bool loc(#loc705)
    cir.brcond %100 ^bb38, ^bb39 loc(#loc706)
  ^bb38:  // pred: ^bb37
    %101 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc454)
    %102 = cir.call @close(%101) : (!s32i) -> !s32i loc(#loc455)
    cir.br ^bb39 loc(#loc450)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc450)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc707)
  ^bb41:  // pred: ^bb40
    %103 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc458)
    %104 = cir.const #cir.int<1> : !s32i loc(#loc459)
    %105 = cir.unary(minus, %104) : !s32i, !s32i loc(#loc459)
    %106 = cir.cmp(ne, %103, %105) : !s32i, !cir.bool loc(#loc708)
    cir.brcond %106 ^bb42, ^bb43 loc(#loc709)
  ^bb42:  // pred: ^bb41
    %107 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc461)
    %108 = cir.call @close(%107) : (!s32i) -> !s32i loc(#loc462)
    cir.br ^bb43 loc(#loc457)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc457)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc363)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc358)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc358)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc710)
  ^bb48:  // pred: ^bb47
    %109 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc528)
    %110 = cir.load %109 : !cir.ptr<!s32i>, !s32i loc(#loc465)
    %111 = cir.const #cir.int<5> : !s32i loc(#loc466)
    %112 = cir.cmp(eq, %110, %111) : !s32i, !cir.bool loc(#loc711)
    cir.brcond %112 ^bb49, ^bb55 loc(#loc712)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc713)
  ^bb50:  // pred: ^bb49
    %113 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc470)
    %114 = cir.const #cir.int<0> : !s32i loc(#loc471)
    %115 = cir.cmp(ne, %113, %114) : !s32i, !cir.bool loc(#loc714)
    cir.brcond %115 ^bb51, ^bb52 loc(#loc715)
  ^bb51:  // pred: ^bb50
    %116 = cir.const #cir.int<100> : !s32i loc(#loc475)
    %117 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc476)
    %118 = cir.binop(rem, %116, %117) : !s32i loc(#loc716)
    cir.call @printIntLine(%118) : (!s32i) -> () loc(#loc477)
    cir.br ^bb53 loc(#loc473)
  ^bb52:  // pred: ^bb50
    %119 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc478)
    %120 = cir.cast(array_to_ptrdecay, %119 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc478)
    cir.call @printLine(%120) : (!cir.ptr<!s8i>) -> () loc(#loc479)
    cir.br ^bb53 loc(#loc469)
  ^bb53:  // 2 preds: ^bb51, ^bb52
    cir.br ^bb54 loc(#loc469)
  ^bb54:  // pred: ^bb53
    cir.br ^bb55 loc(#loc464)
  ^bb55:  // 2 preds: ^bb48, ^bb54
    cir.br ^bb56 loc(#loc464)
  ^bb56:  // pred: ^bb55
    cir.return loc(#loc341)
  } loc(#loc661)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc718)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc484)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc485)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc719)
    cir.br ^bb1 loc(#loc720)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc528)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc489)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc490)
    %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc721)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc722)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc494)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc494)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc495)
    cir.br ^bb4 loc(#loc492)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<7> : !s32i loc(#loc496)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc723)
    cir.br ^bb4 loc(#loc488)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc488)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc724)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc528)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc500)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc501)
    %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc725)
    cir.brcond %13 ^bb7, ^bb8 loc(#loc726)
  ^bb7:  // pred: ^bb6
    %14 = cir.const #cir.int<100> : !s32i loc(#loc503)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc504)
    %16 = cir.binop(rem, %14, %15) : !s32i loc(#loc727)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc505)
    cir.br ^bb8 loc(#loc499)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc499)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc481)
  } loc(#loc717)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc729)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc510)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc511)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc730)
    cir.br ^bb1 loc(#loc731)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc528)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc515)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc516)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc732)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc733)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<7> : !s32i loc(#loc518)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc734)
    cir.br ^bb3 loc(#loc514)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc514)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc735)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc528)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc522)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc523)
    %11 = cir.cmp(eq, %9, %10) : !s32i, !cir.bool loc(#loc736)
    cir.brcond %11 ^bb6, ^bb7 loc(#loc737)
  ^bb6:  // pred: ^bb5
    %12 = cir.const #cir.int<100> : !s32i loc(#loc525)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc526)
    %14 = cir.binop(rem, %12, %13) : !s32i loc(#loc738)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc527)
    cir.br ^bb7 loc(#loc521)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc521)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc507)
  } loc(#loc728)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":0:0)
#loc1 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":45:1)
#loc2 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":45:25)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":404:1)
#loc6 = loc("/usr/include/netinet/in.h":405:40)
#loc7 = loc("/usr/include/sys/socket.h":112:1)
#loc8 = loc("/usr/include/sys/socket.h":113:6)
#loc9 = loc("/usr/include/sys/socket.h":296:1)
#loc10 = loc("/usr/include/sys/socket.h":296:39)
#loc11 = loc("/usr/include/sys/socket.h":306:1)
#loc12 = loc("/usr/include/sys/socket.h":307:38)
#loc13 = loc("/usr/include/sys/socket.h":145:1)
#loc14 = loc("/usr/include/sys/socket.h":145:68)
#loc15 = loc("/usr/include/stdlib.h":105:1)
#loc16 = loc("/usr/include/stdlib.h":106:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":49:1)
#loc22 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":131:1)
#loc23 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":61:13)
#loc24 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":61:17)
#loc25 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":62:13)
#loc26 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":62:32)
#loc27 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":63:13)
#loc28 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":63:35)
#loc29 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":64:13)
#loc30 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":64:35)
#loc31 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":65:13)
#loc32 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":65:45)
#loc33 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":51:5)
#loc34 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":51:9)
#loc35 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":53:13)
#loc36 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":53:12)
#loc37 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":53:5)
#loc38 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":54:5)
#loc39 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":125:5)
#loc40 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":54:8)
#loc41 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":54:20)
#loc42 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":55:5)
#loc43 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":56:9)
#loc44 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":124:9)
#loc45 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":66:13)
#loc46 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":109:21)
#loc47 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":109:20)
#loc48 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":76:39)
#loc49 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":76:48)
#loc50 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":76:61)
#loc51 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":76:32)
#loc52 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":76:17)
#loc53 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":76:72)
#loc54 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":77:17)
#loc55 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":80:17)
#loc56 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":77:21)
#loc57 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":77:37)
#loc58 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":78:17)
#loc59 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":79:21)
#loc60 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":81:24)
#loc61 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":81:25)
#loc62 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":81:34)
#loc63 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":81:37)
#loc64 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":81:51)
#loc65 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":81:17)
#loc66 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":81:52)
#loc67 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":82:38)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":82:17)
#loc70 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":83:43)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":83:17)
#loc74 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":84:42)
#loc75 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":84:36)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":84:17)
#loc78 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":84:50)
#loc79 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":85:17)
#loc80 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":88:17)
#loc81 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":85:26)
#loc82 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":85:58)
#loc83 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":85:59)
#loc84 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":85:68)
#loc85 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":85:82)
#loc86 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":85:21)
#loc87 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":85:88)
#loc88 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":86:17)
#loc89 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":87:21)
#loc90 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":89:17)
#loc91 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":92:17)
#loc92 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":89:28)
#loc93 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":89:42)
#loc94 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":89:21)
#loc95 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":89:61)
#loc96 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":90:17)
#loc97 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":91:21)
#loc98 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":93:39)
#loc99 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":93:53)
#loc100 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":93:59)
#loc101 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":93:32)
#loc102 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":93:17)
#loc103 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":93:63)
#loc104 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":94:17)
#loc105 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":97:17)
#loc106 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":94:21)
#loc107 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":94:37)
#loc108 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":95:17)
#loc109 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":96:21)
#loc110 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":99:35)
#loc111 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":99:49)
#loc112 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":99:62)
#loc113 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":99:80)
#loc114 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":99:83)
#loc115 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":99:30)
#loc116 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":99:17)
#loc117 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":99:84)
#loc118 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":100:17)
#loc119 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":103:17)
#loc120 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":100:21)
#loc121 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":100:35)
#loc123 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":100:51)
#loc124 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":100:65)
#loc125 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":101:17)
#loc126 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":102:21)
#loc127 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":105:43)
#loc128 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":105:29)
#loc129 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":105:17)
#loc130 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":107:29)
#loc131 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":107:24)
#loc132 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":107:17)
#loc133 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":107:40)
#loc134 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":110:13)
#loc135 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":113:13)
#loc136 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":110:17)
#loc137 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":110:33)
#loc138 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":111:13)
#loc139 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":112:30)
#loc140 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":112:17)
#loc141 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":114:13)
#loc142 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":117:13)
#loc143 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":114:17)
#loc144 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":114:33)
#loc145 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":115:13)
#loc146 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":116:30)
#loc147 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":116:17)
#loc148 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":126:5)
#loc149 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":130:5)
#loc150 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":126:8)
#loc151 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":126:20)
#loc152 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":127:5)
#loc153 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":129:22)
#loc154 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":129:28)
#loc155 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":129:9)
#loc156 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":367:1)
#loc157 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":373:1)
#loc158 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":369:5)
#loc159 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":369:14)
#loc160 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":370:5)
#loc161 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":370:14)
#loc162 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":371:5)
#loc163 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":371:14)
#loc164 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":372:5)
#loc165 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":372:14)
#loc166 = loc("/usr/include/stdlib.h":575:1)
#loc167 = loc("/usr/include/stdlib.h":575:41)
#loc168 = loc("/usr/include/time.h":76:1)
#loc169 = loc("/usr/include/time.h":76:38)
#loc170 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc171 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc172 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":389:15)
#loc173 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":391:15)
#loc174 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":394:15)
#loc175 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":396:15)
#loc176 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":384:1)
#loc177 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":399:1)
#loc182 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":385:1)
#loc183 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":387:27)
#loc184 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":387:22)
#loc185 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":387:5)
#loc186 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":389:5)
#loc187 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":390:5)
#loc188 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":390:61)
#loc189 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":391:5)
#loc190 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":394:5)
#loc191 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":395:5)
#loc192 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":395:60)
#loc193 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":396:5)
#loc194 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":398:12)
#loc195 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":398:5)
#loc196 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":218:19)
#loc197 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":229:23)
#loc198 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":138:1)
#loc199 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":232:1)
#loc200 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":150:13)
#loc201 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":150:17)
#loc202 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":151:13)
#loc203 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":151:32)
#loc204 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":152:13)
#loc205 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":152:35)
#loc206 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":153:13)
#loc207 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":153:35)
#loc208 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":154:13)
#loc209 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":154:45)
#loc210 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":140:5)
#loc211 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":140:9)
#loc212 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":142:13)
#loc213 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":142:12)
#loc214 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":142:5)
#loc215 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":143:5)
#loc216 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":214:5)
#loc217 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":143:8)
#loc218 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":143:20)
#loc219 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":144:5)
#loc220 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":145:9)
#loc221 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":213:9)
#loc222 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":155:13)
#loc223 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":198:21)
#loc224 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":198:20)
#loc225 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":165:39)
#loc226 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":165:48)
#loc227 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":165:61)
#loc228 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":165:32)
#loc229 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":165:17)
#loc230 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":165:72)
#loc231 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":166:17)
#loc232 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":169:17)
#loc233 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":166:21)
#loc234 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":166:37)
#loc235 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":167:17)
#loc236 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":168:21)
#loc237 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":170:24)
#loc238 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":170:25)
#loc239 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":170:34)
#loc240 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":170:37)
#loc241 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":170:51)
#loc242 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":170:17)
#loc243 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":170:52)
#loc244 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":171:38)
#loc245 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":171:17)
#loc246 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":172:43)
#loc247 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":172:17)
#loc248 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":173:42)
#loc249 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":173:36)
#loc250 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":173:17)
#loc251 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":173:50)
#loc252 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":174:17)
#loc253 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":177:17)
#loc254 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":174:26)
#loc255 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":174:58)
#loc256 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":174:59)
#loc257 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":174:68)
#loc258 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":174:82)
#loc259 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":174:21)
#loc260 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":174:88)
#loc261 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":175:17)
#loc262 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":176:21)
#loc263 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":178:17)
#loc264 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":181:17)
#loc265 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":178:28)
#loc266 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":178:42)
#loc267 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":178:21)
#loc268 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":178:61)
#loc269 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":179:17)
#loc270 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":180:21)
#loc271 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":182:39)
#loc272 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":182:53)
#loc273 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":182:59)
#loc274 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":182:32)
#loc275 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":182:17)
#loc276 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":182:63)
#loc277 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":183:17)
#loc278 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":186:17)
#loc279 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":183:21)
#loc280 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":183:37)
#loc281 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":184:17)
#loc282 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":185:21)
#loc283 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":188:35)
#loc284 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":188:49)
#loc285 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":188:62)
#loc286 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":188:80)
#loc287 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":188:83)
#loc288 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":188:30)
#loc289 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":188:17)
#loc290 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":188:84)
#loc291 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":189:17)
#loc292 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":192:17)
#loc293 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":189:21)
#loc294 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":189:35)
#loc296 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":189:51)
#loc297 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":189:65)
#loc298 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":190:17)
#loc299 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":191:21)
#loc300 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":194:43)
#loc301 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":194:29)
#loc302 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":194:17)
#loc303 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":196:29)
#loc304 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":196:24)
#loc305 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":196:17)
#loc306 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":196:40)
#loc307 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":199:13)
#loc308 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":202:13)
#loc309 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":199:17)
#loc310 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":199:33)
#loc311 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":200:13)
#loc312 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":201:30)
#loc313 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":201:17)
#loc314 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":203:13)
#loc315 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":206:13)
#loc316 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":203:17)
#loc317 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":203:33)
#loc318 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":204:13)
#loc319 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":205:30)
#loc320 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":205:17)
#loc321 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":215:5)
#loc322 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":231:5)
#loc323 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":215:8)
#loc324 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":215:20)
#loc325 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":216:5)
#loc326 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":219:5)
#loc327 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":221:5)
#loc328 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":218:9)
#loc329 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":223:9)
#loc330 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":230:9)
#loc331 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":223:13)
#loc332 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":223:21)
#loc333 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":224:9)
#loc334 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":226:9)
#loc335 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":228:9)
#loc336 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":225:26)
#loc337 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":225:32)
#loc338 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":225:13)
#loc339 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":229:13)
#loc340 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":235:1)
#loc341 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":324:1)
#loc342 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":247:13)
#loc343 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":247:17)
#loc344 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":248:13)
#loc345 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":248:32)
#loc346 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":249:13)
#loc347 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":249:35)
#loc348 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":250:13)
#loc349 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":250:35)
#loc350 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":251:13)
#loc351 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":251:45)
#loc352 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":237:5)
#loc353 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":237:9)
#loc354 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":239:13)
#loc355 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":239:12)
#loc356 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":239:5)
#loc357 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":240:5)
#loc358 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":311:5)
#loc359 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":240:8)
#loc360 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":240:20)
#loc361 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":241:5)
#loc362 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":242:9)
#loc363 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":310:9)
#loc364 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":252:13)
#loc365 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":295:21)
#loc366 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":295:20)
#loc367 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":262:39)
#loc368 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":262:48)
#loc369 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":262:61)
#loc370 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":262:32)
#loc371 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":262:17)
#loc372 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":262:72)
#loc373 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":263:17)
#loc374 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":266:17)
#loc375 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":263:21)
#loc376 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":263:37)
#loc377 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":264:17)
#loc378 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":265:21)
#loc379 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":267:24)
#loc380 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":267:25)
#loc381 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":267:34)
#loc382 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":267:37)
#loc383 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":267:51)
#loc384 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":267:17)
#loc385 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":267:52)
#loc386 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":268:38)
#loc387 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":268:17)
#loc388 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":269:43)
#loc389 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":269:17)
#loc390 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":270:42)
#loc391 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":270:36)
#loc392 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":270:17)
#loc393 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":270:50)
#loc394 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":271:17)
#loc395 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":274:17)
#loc396 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":271:26)
#loc397 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":271:58)
#loc398 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":271:59)
#loc399 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":271:68)
#loc400 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":271:82)
#loc401 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":271:21)
#loc402 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":271:88)
#loc403 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":272:17)
#loc404 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":273:21)
#loc405 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":275:17)
#loc406 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":278:17)
#loc407 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":275:28)
#loc408 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":275:42)
#loc409 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":275:21)
#loc410 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":275:61)
#loc411 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":276:17)
#loc412 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":277:21)
#loc413 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":279:39)
#loc414 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":279:53)
#loc415 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":279:59)
#loc416 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":279:32)
#loc417 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":279:17)
#loc418 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":279:63)
#loc419 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":280:17)
#loc420 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":283:17)
#loc421 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":280:21)
#loc422 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":280:37)
#loc423 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":281:17)
#loc424 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":282:21)
#loc425 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":285:35)
#loc426 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":285:49)
#loc427 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":285:62)
#loc428 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":285:80)
#loc429 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":285:83)
#loc430 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":285:30)
#loc431 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":285:17)
#loc432 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":285:84)
#loc433 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":286:17)
#loc434 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":289:17)
#loc435 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":286:21)
#loc436 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":286:35)
#loc438 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":286:51)
#loc439 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":286:65)
#loc440 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":287:17)
#loc441 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":288:21)
#loc442 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":291:43)
#loc443 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":291:29)
#loc444 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":291:17)
#loc445 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":293:29)
#loc446 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":293:24)
#loc447 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":293:17)
#loc448 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":293:40)
#loc449 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":296:13)
#loc450 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":299:13)
#loc451 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":296:17)
#loc452 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":296:33)
#loc453 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":297:13)
#loc454 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":298:30)
#loc455 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":298:17)
#loc456 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":300:13)
#loc457 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":303:13)
#loc458 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":300:17)
#loc459 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":300:33)
#loc460 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":301:13)
#loc461 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":302:30)
#loc462 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":302:17)
#loc463 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":312:5)
#loc464 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":323:5)
#loc465 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":312:8)
#loc466 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":312:20)
#loc467 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":313:5)
#loc468 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":315:9)
#loc469 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":322:9)
#loc470 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":315:13)
#loc471 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":315:21)
#loc472 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":316:9)
#loc473 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":318:9)
#loc474 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":320:9)
#loc475 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":317:26)
#loc476 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":317:32)
#loc477 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":317:13)
#loc478 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":321:23)
#loc479 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":321:13)
#loc480 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":327:1)
#loc481 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":347:1)
#loc482 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":329:5)
#loc483 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":329:9)
#loc484 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":331:13)
#loc485 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":331:12)
#loc486 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":331:5)
#loc487 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":332:5)
#loc488 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":341:5)
#loc489 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":332:8)
#loc490 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":332:20)
#loc491 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":333:5)
#loc492 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":336:5)
#loc493 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":338:5)
#loc494 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":335:19)
#loc495 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":335:9)
#loc496 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":340:16)
#loc497 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":340:9)
#loc498 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":342:5)
#loc499 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":346:5)
#loc500 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":342:8)
#loc501 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":342:20)
#loc502 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":343:5)
#loc503 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":345:22)
#loc504 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":345:28)
#loc505 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":345:9)
#loc506 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":350:1)
#loc507 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":365:1)
#loc508 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":352:5)
#loc509 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":352:9)
#loc510 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":354:13)
#loc511 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":354:12)
#loc512 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":354:5)
#loc513 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":355:5)
#loc514 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":359:5)
#loc515 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":355:8)
#loc516 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":355:20)
#loc517 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":356:5)
#loc518 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":358:16)
#loc519 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":358:9)
#loc520 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":360:5)
#loc521 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":364:5)
#loc522 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":360:8)
#loc523 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":360:20)
#loc524 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":361:5)
#loc525 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":363:22)
#loc526 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":363:28)
#loc527 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_07.c":363:9)
#loc528 = loc(fused[#loc1, #loc2])
#loc529 = loc(fused[#loc3, #loc4])
#loc530 = loc(fused[#loc5, #loc6])
#loc531 = loc(fused[#loc7, #loc8])
#loc532 = loc(fused[#loc9, #loc10])
#loc533 = loc(fused[#loc11, #loc12])
#loc534 = loc(fused[#loc13, #loc14])
#loc535 = loc(fused[#loc15, #loc16])
#loc536 = loc(fused[#loc17, #loc18])
#loc537 = loc(fused[#loc19, #loc20])
#loc538 = loc(fused[#loc21, #loc22])
#loc539 = loc(fused[#loc23, #loc24])
#loc540 = loc(fused[#loc25, #loc26])
#loc541 = loc(fused[#loc27, #loc28])
#loc542 = loc(fused[#loc29, #loc30])
#loc543 = loc(fused[#loc31, #loc32])
#loc544 = loc(fused[#loc33, #loc34])
#loc545 = loc(fused[#loc37, #loc35])
#loc546 = loc(fused[#loc38, #loc39])
#loc547 = loc(fused[#loc40, #loc41])
#loc548 = loc(fused[#loc42, #loc39])
#loc549 = loc(fused[#loc43, #loc44])
#loc550 = loc(fused[#loc45, #loc46])
#loc551 = loc(fused[#loc52, #loc53])
#loc552 = loc(fused[#loc54, #loc55])
#loc553 = loc(fused[#loc56, #loc57])
#loc554 = loc(fused[#loc58, #loc55])
#loc555 = loc(fused[#loc60, #loc61])
#loc556 = loc(fused[#loc63, #loc64])
#loc557 = loc(fused[#loc65, #loc66])
#loc558 = loc(fused[#loc69, #loc67])
#loc559 = loc(fused[#loc73, #loc70])
#loc560 = loc(fused[#loc77, #loc78])
#loc561 = loc(fused[#loc79, #loc80])
#loc562 = loc(fused[#loc82, #loc83])
#loc563 = loc(fused[#loc84, #loc85])
#loc564 = loc(fused[#loc86, #loc87])
#loc565 = loc(fused[#loc88, #loc80])
#loc566 = loc(fused[#loc90, #loc91])
#loc567 = loc(fused[#loc94, #loc95])
#loc568 = loc(fused[#loc96, #loc91])
#loc569 = loc(fused[#loc102, #loc103])
#loc570 = loc(fused[#loc104, #loc105])
#loc571 = loc(fused[#loc106, #loc107])
#loc572 = loc(fused[#loc108, #loc105])
#loc573 = loc(fused[#loc112, #loc113])
#loc574 = loc(fused[#loc116, #loc117])
#loc575 = loc(fused[#loc118, #loc119])
#loc576 = loc(fused[#loc120, #loc121])
#loc577 = loc(fused[#loc123, #loc124])
#loc578 = loc(fused[#loc125, #loc119])
#loc579 = loc(fused[#loc129, #loc127])
#loc580 = loc(fused[#loc132, #loc133])
#loc581 = loc(fused[#loc134, #loc135])
#loc582 = loc(fused[#loc136, #loc137])
#loc583 = loc(fused[#loc138, #loc135])
#loc584 = loc(fused[#loc141, #loc142])
#loc585 = loc(fused[#loc143, #loc144])
#loc586 = loc(fused[#loc145, #loc142])
#loc587 = loc(fused[#loc148, #loc149])
#loc588 = loc(fused[#loc150, #loc151])
#loc589 = loc(fused[#loc152, #loc149])
#loc590 = loc(fused[#loc153, #loc154])
#loc591 = loc(fused[#loc156, #loc157])
#loc592 = loc(fused[#loc158, #loc159])
#loc593 = loc(fused[#loc160, #loc161])
#loc594 = loc(fused[#loc162, #loc163])
#loc595 = loc(fused[#loc164, #loc165])
#loc596 = loc(fused[#loc166, #loc167])
#loc597 = loc(fused[#loc168, #loc169])
#loc598 = loc(fused[#loc170, #loc171])
#loc599 = loc(fused[#loc176, #loc177])
#loc602 = loc(fused[#loc187, #loc188])
#loc603 = loc(fused[#loc191, #loc192])
#loc604 = loc(fused[#loc195, #loc194])
#loc605 = loc(fused[#loc198, #loc199])
#loc606 = loc(fused[#loc200, #loc201])
#loc607 = loc(fused[#loc202, #loc203])
#loc608 = loc(fused[#loc204, #loc205])
#loc609 = loc(fused[#loc206, #loc207])
#loc610 = loc(fused[#loc208, #loc209])
#loc611 = loc(fused[#loc210, #loc211])
#loc612 = loc(fused[#loc214, #loc212])
#loc613 = loc(fused[#loc215, #loc216])
#loc614 = loc(fused[#loc217, #loc218])
#loc615 = loc(fused[#loc219, #loc216])
#loc616 = loc(fused[#loc220, #loc221])
#loc617 = loc(fused[#loc222, #loc223])
#loc618 = loc(fused[#loc229, #loc230])
#loc619 = loc(fused[#loc231, #loc232])
#loc620 = loc(fused[#loc233, #loc234])
#loc621 = loc(fused[#loc235, #loc232])
#loc622 = loc(fused[#loc237, #loc238])
#loc623 = loc(fused[#loc240, #loc241])
#loc624 = loc(fused[#loc242, #loc243])
#loc625 = loc(fused[#loc245, #loc244])
#loc626 = loc(fused[#loc247, #loc246])
#loc627 = loc(fused[#loc250, #loc251])
#loc628 = loc(fused[#loc252, #loc253])
#loc629 = loc(fused[#loc255, #loc256])
#loc630 = loc(fused[#loc257, #loc258])
#loc631 = loc(fused[#loc259, #loc260])
#loc632 = loc(fused[#loc261, #loc253])
#loc633 = loc(fused[#loc263, #loc264])
#loc634 = loc(fused[#loc267, #loc268])
#loc635 = loc(fused[#loc269, #loc264])
#loc636 = loc(fused[#loc275, #loc276])
#loc637 = loc(fused[#loc277, #loc278])
#loc638 = loc(fused[#loc279, #loc280])
#loc639 = loc(fused[#loc281, #loc278])
#loc640 = loc(fused[#loc285, #loc286])
#loc641 = loc(fused[#loc289, #loc290])
#loc642 = loc(fused[#loc291, #loc292])
#loc643 = loc(fused[#loc293, #loc294])
#loc644 = loc(fused[#loc296, #loc297])
#loc645 = loc(fused[#loc298, #loc292])
#loc646 = loc(fused[#loc302, #loc300])
#loc647 = loc(fused[#loc305, #loc306])
#loc648 = loc(fused[#loc307, #loc308])
#loc649 = loc(fused[#loc309, #loc310])
#loc650 = loc(fused[#loc311, #loc308])
#loc651 = loc(fused[#loc314, #loc315])
#loc652 = loc(fused[#loc316, #loc317])
#loc653 = loc(fused[#loc318, #loc315])
#loc654 = loc(fused[#loc321, #loc322])
#loc655 = loc(fused[#loc323, #loc324])
#loc656 = loc(fused[#loc325, #loc326, #loc327, #loc322])
#loc657 = loc(fused[#loc329, #loc330])
#loc658 = loc(fused[#loc331, #loc332])
#loc659 = loc(fused[#loc333, #loc334, #loc335, #loc330])
#loc660 = loc(fused[#loc336, #loc337])
#loc661 = loc(fused[#loc340, #loc341])
#loc662 = loc(fused[#loc342, #loc343])
#loc663 = loc(fused[#loc344, #loc345])
#loc664 = loc(fused[#loc346, #loc347])
#loc665 = loc(fused[#loc348, #loc349])
#loc666 = loc(fused[#loc350, #loc351])
#loc667 = loc(fused[#loc352, #loc353])
#loc668 = loc(fused[#loc356, #loc354])
#loc669 = loc(fused[#loc357, #loc358])
#loc670 = loc(fused[#loc359, #loc360])
#loc671 = loc(fused[#loc361, #loc358])
#loc672 = loc(fused[#loc362, #loc363])
#loc673 = loc(fused[#loc364, #loc365])
#loc674 = loc(fused[#loc371, #loc372])
#loc675 = loc(fused[#loc373, #loc374])
#loc676 = loc(fused[#loc375, #loc376])
#loc677 = loc(fused[#loc377, #loc374])
#loc678 = loc(fused[#loc379, #loc380])
#loc679 = loc(fused[#loc382, #loc383])
#loc680 = loc(fused[#loc384, #loc385])
#loc681 = loc(fused[#loc387, #loc386])
#loc682 = loc(fused[#loc389, #loc388])
#loc683 = loc(fused[#loc392, #loc393])
#loc684 = loc(fused[#loc394, #loc395])
#loc685 = loc(fused[#loc397, #loc398])
#loc686 = loc(fused[#loc399, #loc400])
#loc687 = loc(fused[#loc401, #loc402])
#loc688 = loc(fused[#loc403, #loc395])
#loc689 = loc(fused[#loc405, #loc406])
#loc690 = loc(fused[#loc409, #loc410])
#loc691 = loc(fused[#loc411, #loc406])
#loc692 = loc(fused[#loc417, #loc418])
#loc693 = loc(fused[#loc419, #loc420])
#loc694 = loc(fused[#loc421, #loc422])
#loc695 = loc(fused[#loc423, #loc420])
#loc696 = loc(fused[#loc427, #loc428])
#loc697 = loc(fused[#loc431, #loc432])
#loc698 = loc(fused[#loc433, #loc434])
#loc699 = loc(fused[#loc435, #loc436])
#loc700 = loc(fused[#loc438, #loc439])
#loc701 = loc(fused[#loc440, #loc434])
#loc702 = loc(fused[#loc444, #loc442])
#loc703 = loc(fused[#loc447, #loc448])
#loc704 = loc(fused[#loc449, #loc450])
#loc705 = loc(fused[#loc451, #loc452])
#loc706 = loc(fused[#loc453, #loc450])
#loc707 = loc(fused[#loc456, #loc457])
#loc708 = loc(fused[#loc458, #loc459])
#loc709 = loc(fused[#loc460, #loc457])
#loc710 = loc(fused[#loc463, #loc464])
#loc711 = loc(fused[#loc465, #loc466])
#loc712 = loc(fused[#loc467, #loc464])
#loc713 = loc(fused[#loc468, #loc469])
#loc714 = loc(fused[#loc470, #loc471])
#loc715 = loc(fused[#loc472, #loc473, #loc474, #loc469])
#loc716 = loc(fused[#loc475, #loc476])
#loc717 = loc(fused[#loc480, #loc481])
#loc718 = loc(fused[#loc482, #loc483])
#loc719 = loc(fused[#loc486, #loc484])
#loc720 = loc(fused[#loc487, #loc488])
#loc721 = loc(fused[#loc489, #loc490])
#loc722 = loc(fused[#loc491, #loc492, #loc493, #loc488])
#loc723 = loc(fused[#loc497, #loc496])
#loc724 = loc(fused[#loc498, #loc499])
#loc725 = loc(fused[#loc500, #loc501])
#loc726 = loc(fused[#loc502, #loc499])
#loc727 = loc(fused[#loc503, #loc504])
#loc728 = loc(fused[#loc506, #loc507])
#loc729 = loc(fused[#loc508, #loc509])
#loc730 = loc(fused[#loc512, #loc510])
#loc731 = loc(fused[#loc513, #loc514])
#loc732 = loc(fused[#loc515, #loc516])
#loc733 = loc(fused[#loc517, #loc514])
#loc734 = loc(fused[#loc519, #loc518])
#loc735 = loc(fused[#loc520, #loc521])
#loc736 = loc(fused[#loc522, #loc523])
#loc737 = loc(fused[#loc524, #loc521])
#loc738 = loc(fused[#loc525, #loc526])
