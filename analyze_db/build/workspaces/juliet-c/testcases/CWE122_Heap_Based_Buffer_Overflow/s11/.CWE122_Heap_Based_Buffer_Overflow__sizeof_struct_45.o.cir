!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc89)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc90)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_badData = #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> {alignment = 8 : i64} loc(#loc91)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc93)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc94)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc13)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc95)
    %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc13)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
    cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc97)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc20)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
      %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc99)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc23)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc25)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc23)
      } loc(#loc100)
    } loc(#loc98)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
    %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc28)
    cir.store %6, %8 : !s32i, !cir.ptr<!s32i> loc(#loc101)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc29)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    %11 = cir.get_member %10[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
    cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc102)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_badData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc91)
    cir.store %12, %13 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc103)
    %14 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc104)
    cir.call %14() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc34)
    cir.return loc(#loc8)
  } loc(#loc92)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc106)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    cir.return loc(#loc37)
  } loc(#loc105)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc107)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc108)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc110)
    %1 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_badData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc91)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc110)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
    cir.call @printStructLine(%3) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc49)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc50)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc51)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc50)
    cir.return loc(#loc45)
  } loc(#loc109)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> {alignment = 8 : i64} loc(#loc111)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc113)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc114)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc60)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc115)
    %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc60)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
    cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc117)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc68)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
      %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc119)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc70)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc71)
        %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc72)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc70)
      } loc(#loc120)
    } loc(#loc118)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
    %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc28)
    cir.store %6, %8 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc75)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
    %11 = cir.get_member %10[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
    cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_goodG2BData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc111)
    cir.store %12, %13 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc123)
    %14 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc124)
    cir.call %14() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc79)
    cir.return loc(#loc55)
  } loc(#loc112)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc126)
    %1 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_goodG2BData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc111)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc126)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
    cir.call @printStructLine(%3) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc86)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc87)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc88)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc87)
    cir.return loc(#loc82)
  } loc(#loc125)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":19:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":19:24)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":32:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":45:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":34:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":34:21)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":36:12)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":36:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":39:29)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":39:36)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":39:47)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":39:48)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":39:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":40:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":40:33)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":40:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":40:17)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":40:23)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":40:24)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":40:30)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":40:29)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":41:20)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":41:5)
#loc28 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":42:20)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":42:5)
#loc31 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":43:67)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":43:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":44:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":44:13)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":74:1)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":77:1)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":76:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":76:13)
#loc40 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc42 = loc("/usr/include/stdlib.h":687:1)
#loc43 = loc("/usr/include/stdlib.h":687:32)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":24:1)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":30:1)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":26:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":26:28)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":28:21)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":28:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":29:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":29:10)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":20:1)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":20:24)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":60:1)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":72:1)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":62:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":62:21)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":64:12)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":64:5)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":66:29)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":66:36)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":66:48)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":66:49)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":66:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":67:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":67:33)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":67:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":67:17)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":67:23)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":67:24)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":67:30)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":67:29)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":68:20)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":68:5)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":69:20)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":69:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":70:71)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":70:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":71:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":71:17)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":52:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":58:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":54:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":54:28)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":56:21)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":56:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":57:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":57:10)
#loc89 = loc(fused[#loc1, #loc2])
#loc90 = loc(fused[#loc3, #loc4])
#loc91 = loc(fused[#loc5, #loc6])
#loc92 = loc(fused[#loc7, #loc8])
#loc93 = loc(fused[#loc9, #loc10])
#loc94 = loc(fused[#loc12, #loc11])
#loc95 = loc(fused[#loc14, #loc15])
#loc96 = loc(fused[#loc13, #loc16])
#loc97 = loc(fused[#loc17, #loc16])
#loc98 = loc(fused[#loc18, #loc19])
#loc99 = loc(fused[#loc20, #loc21])
#loc100 = loc(fused[#loc22, #loc19])
#loc101 = loc(fused[#loc27, #loc26])
#loc102 = loc(fused[#loc30, #loc29])
#loc103 = loc(fused[#loc33, #loc32])
#loc104 = loc(fused[#loc34, #loc35])
#loc105 = loc(fused[#loc36, #loc37])
#loc106 = loc(fused[#loc38, #loc39])
#loc107 = loc(fused[#loc40, #loc41])
#loc108 = loc(fused[#loc42, #loc43])
#loc109 = loc(fused[#loc44, #loc45])
#loc110 = loc(fused[#loc46, #loc47])
#loc111 = loc(fused[#loc52, #loc53])
#loc112 = loc(fused[#loc54, #loc55])
#loc113 = loc(fused[#loc56, #loc57])
#loc114 = loc(fused[#loc59, #loc58])
#loc115 = loc(fused[#loc61, #loc62])
#loc116 = loc(fused[#loc60, #loc63])
#loc117 = loc(fused[#loc64, #loc63])
#loc118 = loc(fused[#loc65, #loc66])
#loc119 = loc(fused[#loc67, #loc68])
#loc120 = loc(fused[#loc69, #loc66])
#loc121 = loc(fused[#loc74, #loc73])
#loc122 = loc(fused[#loc76, #loc75])
#loc123 = loc(fused[#loc78, #loc77])
#loc124 = loc(fused[#loc79, #loc80])
#loc125 = loc(fused[#loc81, #loc82])
#loc126 = loc(fused[#loc83, #loc84])
