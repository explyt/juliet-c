!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":260:10)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":260:14)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":260:20)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":260:32)
#true = #cir.bool<true> : !cir.bool
#loc476 = loc(fused[#loc103, #loc104])
#loc477 = loc(fused[#loc105, #loc106])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc431)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc3)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc432)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc433)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc434)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc11)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc435)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc437)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc19)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc438)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc440)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc23)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc23)
      cir.if %5 {
        %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %8 = cir.binop(and, %6, %7) : !s32i loc(#loc26)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc26)
        %10 = cir.ternary(%9, true {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc26)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc26)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc26)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc26)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc26)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc26)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc26)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc26)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc26)
          cir.yield %23 : !u32i loc(#loc26)
        }, false {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc26)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc26)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc26)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc26)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc26)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc26)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc26)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc26)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc26)
          %24 = cir.unary(minus, %23) : !u32i, !u32i loc(#loc26)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc26)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc26)
          %27 = cir.binop(sub, %24, %26) : !u32i loc(#loc26)
          cir.yield %27 : !u32i loc(#loc26)
        }) : (!cir.bool) -> !u32i loc(#loc26)
        %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc26)
        cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc442)
      } loc(#loc441)
    } loc(#loc439)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc444)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc30)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc30)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc447)
          %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc448)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc449)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc36)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc36)
          cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc447)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc38)
          cir.store %11, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc448)
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc3)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc3)
          cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc449)
          %14 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc40)
          %15 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
          %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
          %18 = cir.call @fopen(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc40)
          cir.store %18, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc450)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc46)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc47)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc452)
            cir.if %22 {
              %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc49)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc50)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc49)
            } loc(#loc453)
          } loc(#loc451)
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc53)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc53)
            cir.store %20, %6 : !u64i, !cir.ptr<!u64i> loc(#loc455)
            cir.for : cond {
              %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc55)
              %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc56)
              %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc456)
              cir.condition(%24) loc(#loc57)
            } body {
              cir.scope {
                cir.scope {
                  %21 = cir.const #cir.int<50> : !u64i loc(#loc459)
                  %22 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc63)
                  %23 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc11)
                  %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc11)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
                  %26 = cir.const #cir.int<1> : !u64i loc(#loc460)
                  %27 = cir.const #cir.int<50> : !u64i loc(#loc461)
                  %28 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc68)
                  %29 = cir.call @fwrite(%25, %26, %27, %28) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc63)
                  %30 = cir.cmp(ne, %21, %29) : !u64i, !cir.bool loc(#loc462)
                  cir.if %30 {
                    %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc71)
                    %32 = cir.const #cir.int<1> : !s32i loc(#loc72)
                    cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc71)
                  } loc(#loc463)
                } loc(#loc458)
              } loc(#loc457)
              cir.yield loc(#loc52)
            } step {
              %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc73)
              %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc74)
              cir.store %22, %6 : !u64i, !cir.ptr<!u64i> loc(#loc464)
              cir.yield loc(#loc454)
            } loc(#loc454)
          } loc(#loc454)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc77)
            %20 = cir.cast(ptr_to_bool, %19 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc77)
            cir.if %20 {
              %21 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc79)
              %22 = cir.call @fclose(%21) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc80)
            } loc(#loc466)
          } loc(#loc465)
        } loc(#loc446)
      } loc(#loc445)
    } loc(#loc443)
    cir.return loc(#loc15)
  } loc(#loc436)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc468)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc83)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc469)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc85)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc470)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc87)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc471)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc89)
    cir.return loc(#loc82)
  } loc(#loc467)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc472)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc473)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc474)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc100)
  cir.func @main(%arg0: !s32i loc(fused[#loc103, #loc104]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc105, #loc106])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc476)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc477)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc102)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc107)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc108)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc109)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc109)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc110)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc97)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__rand_fwrite_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc478)
    cir.call @CWE400_Resource_Exhaustion__rand_fwrite_08_good() : () -> () loc(#loc112)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc98)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc99)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__rand_fwrite_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc479)
    cir.call @CWE400_Resource_Exhaustion__rand_fwrite_08_bad() : () -> () loc(#loc116)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc100)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc119)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc480)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc480)
    cir.return %17 : !s32i loc(#loc480)
  } loc(#loc475)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc122)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc123)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc482)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc482)
    cir.return %2 : !s32i loc(#loc482)
  } loc(#loc481)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc125)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc126)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc484)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc132)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc485)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc487)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc136)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc136)
      cir.if %5 {
        %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc139)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc139)
        %8 = cir.binop(and, %6, %7) : !s32i loc(#loc139)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc139)
        %10 = cir.ternary(%9, true {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc139)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc139)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc139)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc139)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc139)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc139)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc139)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc139)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc139)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc139)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc139)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc139)
          cir.yield %23 : !u32i loc(#loc139)
        }, false {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc139)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc139)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc139)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc139)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc139)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc139)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc139)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc139)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc139)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc139)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc139)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc139)
          %24 = cir.unary(minus, %23) : !u32i, !u32i loc(#loc139)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc139)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc139)
          %27 = cir.binop(sub, %24, %26) : !u32i loc(#loc139)
          cir.yield %27 : !u32i loc(#loc139)
        }) : (!cir.bool) -> !u32i loc(#loc139)
        %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc139)
        cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc489)
      } loc(#loc488)
    } loc(#loc486)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc491)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc143)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc143)
      cir.if %5 {
        %6 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc125)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc125)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc148)
      } else {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc494)
          %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc495)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc496)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc152)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc152)
          cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc494)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc154)
          cir.store %11, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc495)
          %12 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc126)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc126)
          cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc496)
          cir.scope {
            %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc158)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc159)
            %16 = cir.cmp(gt, %14, %15) : !s32i, !cir.bool loc(#loc498)
            %17 = cir.ternary(%16, true {
              %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
              %19 = cir.const #cir.int<20> : !s32i loc(#loc162)
              %20 = cir.cmp(le, %18, %19) : !s32i, !cir.bool loc(#loc499)
              %21 = cir.ternary(%20, true {
                %22 = cir.const #true loc(#loc160)
                cir.yield %22 : !cir.bool loc(#loc160)
              }, false {
                %22 = cir.const #false loc(#loc160)
                cir.yield %22 : !cir.bool loc(#loc160)
              }) : (!cir.bool) -> !cir.bool loc(#loc160)
              cir.yield %21 : !cir.bool loc(#loc160)
            }, false {
              %18 = cir.const #false loc(#loc160)
              cir.yield %18 : !cir.bool loc(#loc160)
            }) : (!cir.bool) -> !cir.bool loc(#loc160)
            cir.if %17 {
              %18 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc164)
              %19 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
              %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc166)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc166)
              %22 = cir.call @fopen(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc164)
              cir.store %22, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc501)
              cir.scope {
                %23 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc171)
                %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc172)
                %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc172)
                %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc503)
                cir.if %26 {
                  %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc174)
                  %28 = cir.const #cir.int<1> : !s32i loc(#loc175)
                  cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc174)
                } loc(#loc504)
              } loc(#loc502)
              cir.scope {
                %23 = cir.const #cir.int<0> : !s32i loc(#loc178)
                %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc178)
                cir.store %24, %6 : !u64i, !cir.ptr<!u64i> loc(#loc506)
                cir.for : cond {
                  %25 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc180)
                  %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc181)
                  %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc181)
                  %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc507)
                  cir.condition(%28) loc(#loc182)
                } body {
                  cir.scope {
                    cir.scope {
                      %25 = cir.const #cir.int<50> : !u64i loc(#loc510)
                      %26 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc188)
                      %27 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc189)
                      %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc189)
                      %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc189)
                      %30 = cir.const #cir.int<1> : !u64i loc(#loc511)
                      %31 = cir.const #cir.int<50> : !u64i loc(#loc512)
                      %32 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc194)
                      %33 = cir.call @fwrite(%29, %30, %31, %32) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc188)
                      %34 = cir.cmp(ne, %25, %33) : !u64i, !cir.bool loc(#loc513)
                      cir.if %34 {
                        %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc196)
                        %36 = cir.const #cir.int<1> : !s32i loc(#loc197)
                        cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc196)
                      } loc(#loc514)
                    } loc(#loc509)
                  } loc(#loc508)
                  cir.yield loc(#loc177)
                } step {
                  %25 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc198)
                  %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc199)
                  cir.store %26, %6 : !u64i, !cir.ptr<!u64i> loc(#loc515)
                  cir.yield loc(#loc505)
                } loc(#loc505)
              } loc(#loc505)
              cir.scope {
                %23 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc202)
                %24 = cir.cast(ptr_to_bool, %23 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc202)
                cir.if %24 {
                  %25 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc204)
                  %26 = cir.call @fclose(%25) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc205)
                } loc(#loc517)
              } loc(#loc516)
            } loc(#loc500)
          } loc(#loc497)
        } loc(#loc493)
      } loc(#loc492)
    } loc(#loc490)
    cir.return loc(#loc128)
  } loc(#loc483)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc207)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc208)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc519)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc519)
    cir.return %2 : !s32i loc(#loc519)
  } loc(#loc518)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc521)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc214)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc215)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc522)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc524)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc219)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc219)
      cir.if %5 {
        %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc222)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc222)
        %8 = cir.binop(and, %6, %7) : !s32i loc(#loc222)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc222)
        %10 = cir.ternary(%9, true {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc222)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc222)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc222)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc222)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc222)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc222)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc222)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc222)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc222)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc222)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc222)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc222)
          cir.yield %23 : !u32i loc(#loc222)
        }, false {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc222)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc222)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc222)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc222)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc222)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc222)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc222)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc222)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc222)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc222)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc222)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc222)
          %24 = cir.unary(minus, %23) : !u32i, !u32i loc(#loc222)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc222)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc222)
          %27 = cir.binop(sub, %24, %26) : !u32i loc(#loc222)
          cir.yield %27 : !u32i loc(#loc222)
        }) : (!cir.bool) -> !u32i loc(#loc222)
        %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc222)
        cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc526)
      } loc(#loc525)
    } loc(#loc523)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc528)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc226)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc226)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc531)
          %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc532)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc533)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc232)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc232)
          cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc531)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc234)
          cir.store %11, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc532)
          %12 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc236)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc236)
          cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc533)
          cir.scope {
            %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc239)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc240)
            %16 = cir.cmp(gt, %14, %15) : !s32i, !cir.bool loc(#loc535)
            %17 = cir.ternary(%16, true {
              %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc242)
              %19 = cir.const #cir.int<20> : !s32i loc(#loc243)
              %20 = cir.cmp(le, %18, %19) : !s32i, !cir.bool loc(#loc536)
              %21 = cir.ternary(%20, true {
                %22 = cir.const #true loc(#loc241)
                cir.yield %22 : !cir.bool loc(#loc241)
              }, false {
                %22 = cir.const #false loc(#loc241)
                cir.yield %22 : !cir.bool loc(#loc241)
              }) : (!cir.bool) -> !cir.bool loc(#loc241)
              cir.yield %21 : !cir.bool loc(#loc241)
            }, false {
              %18 = cir.const #false loc(#loc241)
              cir.yield %18 : !cir.bool loc(#loc241)
            }) : (!cir.bool) -> !cir.bool loc(#loc241)
            cir.if %17 {
              %18 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc245)
              %19 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc246)
              %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc247)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc247)
              %22 = cir.call @fopen(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc245)
              cir.store %22, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc538)
              cir.scope {
                %23 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc252)
                %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc253)
                %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc253)
                %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc540)
                cir.if %26 {
                  %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc255)
                  %28 = cir.const #cir.int<1> : !s32i loc(#loc256)
                  cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc255)
                } loc(#loc541)
              } loc(#loc539)
              cir.scope {
                %23 = cir.const #cir.int<0> : !s32i loc(#loc259)
                %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc259)
                cir.store %24, %6 : !u64i, !cir.ptr<!u64i> loc(#loc543)
                cir.for : cond {
                  %25 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc261)
                  %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc262)
                  %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc262)
                  %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc544)
                  cir.condition(%28) loc(#loc263)
                } body {
                  cir.scope {
                    cir.scope {
                      %25 = cir.const #cir.int<50> : !u64i loc(#loc547)
                      %26 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc269)
                      %27 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc270)
                      %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc270)
                      %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc270)
                      %30 = cir.const #cir.int<1> : !u64i loc(#loc548)
                      %31 = cir.const #cir.int<50> : !u64i loc(#loc549)
                      %32 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc275)
                      %33 = cir.call @fwrite(%29, %30, %31, %32) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc269)
                      %34 = cir.cmp(ne, %25, %33) : !u64i, !cir.bool loc(#loc550)
                      cir.if %34 {
                        %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc277)
                        %36 = cir.const #cir.int<1> : !s32i loc(#loc278)
                        cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc277)
                      } loc(#loc551)
                    } loc(#loc546)
                  } loc(#loc545)
                  cir.yield loc(#loc258)
                } step {
                  %25 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc279)
                  %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc280)
                  cir.store %26, %6 : !u64i, !cir.ptr<!u64i> loc(#loc552)
                  cir.yield loc(#loc542)
                } loc(#loc542)
              } loc(#loc542)
              cir.scope {
                %23 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc283)
                %24 = cir.cast(ptr_to_bool, %23 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc283)
                cir.if %24 {
                  %25 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc285)
                  %26 = cir.call @fclose(%25) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc286)
                } loc(#loc554)
              } loc(#loc553)
            } loc(#loc537)
          } loc(#loc534)
        } loc(#loc530)
      } loc(#loc529)
    } loc(#loc527)
    cir.return loc(#loc211)
  } loc(#loc520)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc556)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc291)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc292)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc557)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc559)
      %4 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc296)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc296)
      cir.if %5 {
        %6 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc301)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc301)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc302)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc303)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc561)
      } loc(#loc560)
    } loc(#loc558)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc563)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc307)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc307)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc566)
          %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc567)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc568)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc313)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc313)
          cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc566)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc315)
          cir.store %11, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc567)
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc317)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc317)
          cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc568)
          %14 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc318)
          %15 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc319)
          %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc320)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc320)
          %18 = cir.call @fopen(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc318)
          cir.store %18, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc569)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc325)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc326)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc326)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc571)
            cir.if %22 {
              %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc328)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc329)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc328)
            } loc(#loc572)
          } loc(#loc570)
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc332)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc332)
            cir.store %20, %6 : !u64i, !cir.ptr<!u64i> loc(#loc574)
            cir.for : cond {
              %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc334)
              %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc335)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc335)
              %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc575)
              cir.condition(%24) loc(#loc336)
            } body {
              cir.scope {
                cir.scope {
                  %21 = cir.const #cir.int<50> : !u64i loc(#loc578)
                  %22 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc342)
                  %23 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc343)
                  %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc343)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc343)
                  %26 = cir.const #cir.int<1> : !u64i loc(#loc579)
                  %27 = cir.const #cir.int<50> : !u64i loc(#loc580)
                  %28 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc348)
                  %29 = cir.call @fwrite(%25, %26, %27, %28) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc342)
                  %30 = cir.cmp(ne, %21, %29) : !u64i, !cir.bool loc(#loc581)
                  cir.if %30 {
                    %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc351)
                    %32 = cir.const #cir.int<1> : !s32i loc(#loc352)
                    cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc351)
                  } loc(#loc582)
                } loc(#loc577)
              } loc(#loc576)
              cir.yield loc(#loc331)
            } step {
              %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc353)
              %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc354)
              cir.store %22, %6 : !u64i, !cir.ptr<!u64i> loc(#loc583)
              cir.yield loc(#loc573)
            } loc(#loc573)
          } loc(#loc573)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc357)
            %20 = cir.cast(ptr_to_bool, %19 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc357)
            cir.if %20 {
              %21 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc359)
              %22 = cir.call @fclose(%21) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc360)
            } loc(#loc585)
          } loc(#loc584)
        } loc(#loc565)
      } loc(#loc564)
    } loc(#loc562)
    cir.return loc(#loc288)
  } loc(#loc555)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc587)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc365)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc366)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc588)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc590)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc370)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc370)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc373)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc592)
      } loc(#loc591)
    } loc(#loc589)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc594)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc377)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc377)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc597)
          %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc598)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc599)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc383)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc383)
          cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc597)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc385)
          cir.store %11, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc598)
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc387)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc387)
          cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc599)
          %14 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc388)
          %15 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc389)
          %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc390)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc390)
          %18 = cir.call @fopen(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc388)
          cir.store %18, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc600)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc395)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc396)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc396)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc602)
            cir.if %22 {
              %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc398)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc399)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc398)
            } loc(#loc603)
          } loc(#loc601)
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc402)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc402)
            cir.store %20, %6 : !u64i, !cir.ptr<!u64i> loc(#loc605)
            cir.for : cond {
              %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc404)
              %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc405)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc405)
              %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc606)
              cir.condition(%24) loc(#loc406)
            } body {
              cir.scope {
                cir.scope {
                  %21 = cir.const #cir.int<50> : !u64i loc(#loc609)
                  %22 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc412)
                  %23 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc413)
                  %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc413)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc413)
                  %26 = cir.const #cir.int<1> : !u64i loc(#loc610)
                  %27 = cir.const #cir.int<50> : !u64i loc(#loc611)
                  %28 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc418)
                  %29 = cir.call @fwrite(%25, %26, %27, %28) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc412)
                  %30 = cir.cmp(ne, %21, %29) : !u64i, !cir.bool loc(#loc612)
                  cir.if %30 {
                    %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc421)
                    %32 = cir.const #cir.int<1> : !s32i loc(#loc422)
                    cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc421)
                  } loc(#loc613)
                } loc(#loc608)
              } loc(#loc607)
              cir.yield loc(#loc401)
            } step {
              %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc423)
              %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc424)
              cir.store %22, %6 : !u64i, !cir.ptr<!u64i> loc(#loc614)
              cir.yield loc(#loc604)
            } loc(#loc604)
          } loc(#loc604)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc427)
            %20 = cir.cast(ptr_to_bool, %19 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc427)
            cir.if %20 {
              %21 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc429)
              %22 = cir.call @fclose(%21) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc430)
            } loc(#loc616)
          } loc(#loc615)
        } loc(#loc596)
      } loc(#loc595)
    } loc(#loc593)
    cir.return loc(#loc362)
  } loc(#loc586)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_08.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":52:36)
#loc4 = loc("/usr/include/stdio.h":264:1)
#loc5 = loc("/usr/include/stdio.h":266:3)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":53:37)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/stdio.h":735:1)
#loc10 = loc("/usr/include/stdio.h":736:43)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:48)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":37:1)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":73:1)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":39:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":39:9)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":41:14)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":41:13)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":41:5)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":42:5)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":46:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":42:8)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":42:26)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":43:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":45:17)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":45:9)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":47:5)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":72:5)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":47:8)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":47:26)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":48:5)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":49:9)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":71:9)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":50:13)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":50:24)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":51:13)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":51:27)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":52:13)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":53:21)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":53:27)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":53:13)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":53:41)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":54:13)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":57:13)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":54:17)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":54:26)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":55:13)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":56:17)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":56:22)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":60:13)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":66:13)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":60:22)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":60:18)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":60:25)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":60:37)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":60:27)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":61:13)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:17)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":65:17)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:21)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:36)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:41)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:58)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:69)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:72)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:87)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:90)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:95)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":63:17)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":64:21)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":64:26)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":60:45)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":60:44)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":67:13)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":70:13)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":67:17)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":68:13)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":69:24)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":69:17)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":243:1)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":249:1)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":245:5)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":245:14)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":246:5)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":246:14)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":247:5)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":247:14)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":248:5)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":248:14)
#loc91 = loc("/usr/include/stdlib.h":575:1)
#loc92 = loc("/usr/include/stdlib.h":575:41)
#loc93 = loc("/usr/include/time.h":76:1)
#loc94 = loc("/usr/include/time.h":76:38)
#loc95 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc96 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":265:15)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":267:15)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":270:15)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":272:15)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":260:1)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":275:1)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":261:1)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":263:27)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":263:22)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":263:5)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":265:5)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":266:5)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":266:53)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":267:5)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":270:5)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":271:5)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":271:52)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":272:5)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":274:12)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":274:5)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":25:1)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":28:1)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":27:12)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":27:5)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":93:19)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":100:36)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":80:1)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":120:1)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":82:5)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":82:9)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":84:14)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":84:13)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":84:5)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":85:5)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":89:5)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":85:8)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":85:26)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":86:5)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":88:17)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":88:9)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":90:5)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":119:5)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":90:8)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":90:27)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":91:5)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":94:5)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":96:5)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":93:9)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":97:9)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":118:9)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":98:13)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":98:24)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":99:13)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":99:27)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":100:13)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":102:13)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":117:13)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":102:17)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":102:25)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":102:27)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":102:30)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":102:39)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":103:13)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":104:25)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":104:31)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":104:41)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":104:17)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":104:45)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":105:17)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":108:17)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":105:21)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":105:30)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":106:17)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":107:21)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":107:26)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":109:17)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":112:17)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":109:26)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":109:22)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":109:29)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":109:41)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":109:31)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":110:17)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:21)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:108)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:25)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:40)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:45)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:52)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:62)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:73)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:76)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:91)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:94)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:99)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:102)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:107)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":109:49)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":109:48)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":113:17)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":116:17)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":113:21)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":114:17)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":115:28)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":115:21)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":30:1)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":33:1)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":32:12)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":32:5)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":123:1)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":158:1)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":125:5)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":125:9)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":127:14)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":127:13)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":127:5)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":128:5)
#loc218 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":132:5)
#loc219 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":128:8)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":128:26)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":129:5)
#loc222 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":131:17)
#loc223 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":131:9)
#loc224 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":133:5)
#loc225 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":157:5)
#loc226 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":133:8)
#loc227 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":133:26)
#loc228 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":134:5)
#loc229 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":135:9)
#loc230 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":156:9)
#loc231 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":136:13)
#loc232 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":136:24)
#loc233 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":137:13)
#loc234 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":137:27)
#loc235 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":138:13)
#loc236 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":138:36)
#loc237 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":140:13)
#loc238 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":155:13)
#loc239 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":140:17)
#loc240 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":140:25)
#loc241 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":140:27)
#loc242 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":140:30)
#loc243 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":140:39)
#loc244 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":141:13)
#loc245 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":142:25)
#loc246 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":142:31)
#loc247 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":142:41)
#loc248 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":142:17)
#loc249 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":142:45)
#loc250 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":143:17)
#loc251 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":146:17)
#loc252 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":143:21)
#loc253 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":143:30)
#loc254 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":144:17)
#loc255 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":145:21)
#loc256 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":145:26)
#loc257 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":147:17)
#loc258 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":150:17)
#loc259 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":147:26)
#loc260 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":147:22)
#loc261 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":147:29)
#loc262 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":147:41)
#loc263 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":147:31)
#loc264 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":148:17)
#loc265 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:21)
#loc266 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:108)
#loc267 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:25)
#loc268 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:40)
#loc269 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:45)
#loc270 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:52)
#loc271 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:62)
#loc272 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:73)
#loc273 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:76)
#loc274 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:91)
#loc275 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:94)
#loc276 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:99)
#loc277 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:102)
#loc278 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:107)
#loc279 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":147:49)
#loc280 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":147:48)
#loc281 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":151:17)
#loc282 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":154:17)
#loc283 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":151:21)
#loc284 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":152:17)
#loc285 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":153:28)
#loc286 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":153:21)
#loc287 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":161:1)
#loc288 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":202:1)
#loc289 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":163:5)
#loc290 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":163:9)
#loc291 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":165:14)
#loc292 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":165:13)
#loc293 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":165:5)
#loc294 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":166:5)
#loc295 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":175:5)
#loc296 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":166:8)
#loc297 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":166:27)
#loc298 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":167:5)
#loc299 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":170:5)
#loc300 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":172:5)
#loc301 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":169:19)
#loc302 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":169:9)
#loc303 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":174:17)
#loc304 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":174:9)
#loc305 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":176:5)
#loc306 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":201:5)
#loc307 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":176:8)
#loc308 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":176:26)
#loc309 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":177:5)
#loc310 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":178:9)
#loc311 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":200:9)
#loc312 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":179:13)
#loc313 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":179:24)
#loc314 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":180:13)
#loc315 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":180:27)
#loc316 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":181:13)
#loc317 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":181:36)
#loc318 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":182:21)
#loc319 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":182:27)
#loc320 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":182:37)
#loc321 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":182:13)
#loc322 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":182:41)
#loc323 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":183:13)
#loc324 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":186:13)
#loc325 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":183:17)
#loc326 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":183:26)
#loc327 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":184:13)
#loc328 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":185:17)
#loc329 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":185:22)
#loc330 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":189:13)
#loc331 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":195:13)
#loc332 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":189:22)
#loc333 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":189:18)
#loc334 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":189:25)
#loc335 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":189:37)
#loc336 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":189:27)
#loc337 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":190:13)
#loc338 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:17)
#loc339 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":194:17)
#loc340 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:21)
#loc341 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:36)
#loc342 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:41)
#loc343 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:48)
#loc344 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:58)
#loc345 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:69)
#loc346 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:72)
#loc347 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:87)
#loc348 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:90)
#loc349 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:95)
#loc350 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":192:17)
#loc351 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":193:21)
#loc352 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":193:26)
#loc353 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":189:45)
#loc354 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":189:44)
#loc355 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":196:13)
#loc356 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":199:13)
#loc357 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":196:17)
#loc358 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":197:13)
#loc359 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":198:24)
#loc360 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":198:17)
#loc361 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":205:1)
#loc362 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":241:1)
#loc363 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":207:5)
#loc364 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":207:9)
#loc365 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":209:14)
#loc366 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":209:13)
#loc367 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":209:5)
#loc368 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":210:5)
#loc369 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":214:5)
#loc370 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":210:8)
#loc371 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":210:26)
#loc372 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":211:5)
#loc373 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":213:17)
#loc374 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":213:9)
#loc375 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":215:5)
#loc376 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":240:5)
#loc377 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":215:8)
#loc378 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":215:26)
#loc379 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":216:5)
#loc380 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":217:9)
#loc381 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":239:9)
#loc382 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":218:13)
#loc383 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":218:24)
#loc384 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":219:13)
#loc385 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":219:27)
#loc386 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":220:13)
#loc387 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":220:36)
#loc388 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":221:21)
#loc389 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":221:27)
#loc390 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":221:37)
#loc391 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":221:13)
#loc392 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":221:41)
#loc393 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":222:13)
#loc394 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":225:13)
#loc395 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":222:17)
#loc396 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":222:26)
#loc397 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":223:13)
#loc398 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":224:17)
#loc399 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":224:22)
#loc400 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":228:13)
#loc401 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":234:13)
#loc402 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":228:22)
#loc403 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":228:18)
#loc404 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":228:25)
#loc405 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":228:37)
#loc406 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":228:27)
#loc407 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":229:13)
#loc408 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:17)
#loc409 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":233:17)
#loc410 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:21)
#loc411 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:36)
#loc412 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:41)
#loc413 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:48)
#loc414 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:58)
#loc415 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:69)
#loc416 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:72)
#loc417 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:87)
#loc418 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:90)
#loc419 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:95)
#loc420 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":231:17)
#loc421 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":232:21)
#loc422 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":232:26)
#loc423 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":228:45)
#loc424 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":228:44)
#loc425 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":235:13)
#loc426 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":238:13)
#loc427 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":235:17)
#loc428 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":236:13)
#loc429 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":237:24)
#loc430 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":237:17)
#loc431 = loc(fused[#loc1, #loc2])
#loc432 = loc(fused[#loc4, #loc5])
#loc433 = loc(fused[#loc7, #loc8])
#loc434 = loc(fused[#loc9, #loc10])
#loc435 = loc(fused[#loc12, #loc13])
#loc436 = loc(fused[#loc14, #loc15])
#loc437 = loc(fused[#loc16, #loc17])
#loc438 = loc(fused[#loc20, #loc18])
#loc439 = loc(fused[#loc21, #loc22])
#loc440 = loc(fused[#loc23, #loc24])
#loc441 = loc(fused[#loc25, #loc22])
#loc442 = loc(fused[#loc27, #loc26])
#loc443 = loc(fused[#loc28, #loc29])
#loc444 = loc(fused[#loc30, #loc31])
#loc445 = loc(fused[#loc32, #loc29])
#loc446 = loc(fused[#loc33, #loc34])
#loc447 = loc(fused[#loc35, #loc36])
#loc448 = loc(fused[#loc37, #loc38])
#loc449 = loc(fused[#loc39, #loc3])
#loc450 = loc(fused[#loc42, #loc43])
#loc451 = loc(fused[#loc44, #loc45])
#loc452 = loc(fused[#loc46, #loc47])
#loc453 = loc(fused[#loc48, #loc45])
#loc454 = loc(fused[#loc51, #loc52])
#loc455 = loc(fused[#loc54, #loc53])
#loc456 = loc(fused[#loc55, #loc56])
#loc457 = loc(fused[#loc58, #loc52])
#loc458 = loc(fused[#loc59, #loc60])
#loc459 = loc(fused[#loc61, #loc62])
#loc460 = loc(fused[#loc64, #loc65])
#loc461 = loc(fused[#loc66, #loc67])
#loc462 = loc(fused[#loc61, #loc69])
#loc463 = loc(fused[#loc70, #loc60])
#loc464 = loc(fused[#loc74, #loc73])
#loc465 = loc(fused[#loc75, #loc76])
#loc466 = loc(fused[#loc78, #loc76])
#loc467 = loc(fused[#loc81, #loc82])
#loc468 = loc(fused[#loc83, #loc84])
#loc469 = loc(fused[#loc85, #loc86])
#loc470 = loc(fused[#loc87, #loc88])
#loc471 = loc(fused[#loc89, #loc90])
#loc472 = loc(fused[#loc91, #loc92])
#loc473 = loc(fused[#loc93, #loc94])
#loc474 = loc(fused[#loc95, #loc96])
#loc475 = loc(fused[#loc101, #loc102])
#loc478 = loc(fused[#loc112, #loc113])
#loc479 = loc(fused[#loc116, #loc117])
#loc480 = loc(fused[#loc120, #loc119])
#loc481 = loc(fused[#loc121, #loc122])
#loc482 = loc(fused[#loc124, #loc123])
#loc483 = loc(fused[#loc127, #loc128])
#loc484 = loc(fused[#loc129, #loc130])
#loc485 = loc(fused[#loc133, #loc131])
#loc486 = loc(fused[#loc134, #loc135])
#loc487 = loc(fused[#loc136, #loc137])
#loc488 = loc(fused[#loc138, #loc135])
#loc489 = loc(fused[#loc140, #loc139])
#loc490 = loc(fused[#loc141, #loc142])
#loc491 = loc(fused[#loc143, #loc144])
#loc492 = loc(fused[#loc145, #loc146, #loc147, #loc142])
#loc493 = loc(fused[#loc149, #loc150])
#loc494 = loc(fused[#loc151, #loc152])
#loc495 = loc(fused[#loc153, #loc154])
#loc496 = loc(fused[#loc155, #loc126])
#loc497 = loc(fused[#loc156, #loc157])
#loc498 = loc(fused[#loc158, #loc159])
#loc499 = loc(fused[#loc161, #loc162])
#loc500 = loc(fused[#loc163, #loc157])
#loc501 = loc(fused[#loc167, #loc168])
#loc502 = loc(fused[#loc169, #loc170])
#loc503 = loc(fused[#loc171, #loc172])
#loc504 = loc(fused[#loc173, #loc170])
#loc505 = loc(fused[#loc176, #loc177])
#loc506 = loc(fused[#loc179, #loc178])
#loc507 = loc(fused[#loc180, #loc181])
#loc508 = loc(fused[#loc183, #loc177])
#loc509 = loc(fused[#loc184, #loc185])
#loc510 = loc(fused[#loc186, #loc187])
#loc511 = loc(fused[#loc190, #loc191])
#loc512 = loc(fused[#loc192, #loc193])
#loc513 = loc(fused[#loc186, #loc195])
#loc514 = loc(fused[#loc196, #loc185])
#loc515 = loc(fused[#loc199, #loc198])
#loc516 = loc(fused[#loc200, #loc201])
#loc517 = loc(fused[#loc203, #loc201])
#loc518 = loc(fused[#loc206, #loc207])
#loc519 = loc(fused[#loc209, #loc208])
#loc520 = loc(fused[#loc210, #loc211])
#loc521 = loc(fused[#loc212, #loc213])
#loc522 = loc(fused[#loc216, #loc214])
#loc523 = loc(fused[#loc217, #loc218])
#loc524 = loc(fused[#loc219, #loc220])
#loc525 = loc(fused[#loc221, #loc218])
#loc526 = loc(fused[#loc223, #loc222])
#loc527 = loc(fused[#loc224, #loc225])
#loc528 = loc(fused[#loc226, #loc227])
#loc529 = loc(fused[#loc228, #loc225])
#loc530 = loc(fused[#loc229, #loc230])
#loc531 = loc(fused[#loc231, #loc232])
#loc532 = loc(fused[#loc233, #loc234])
#loc533 = loc(fused[#loc235, #loc236])
#loc534 = loc(fused[#loc237, #loc238])
#loc535 = loc(fused[#loc239, #loc240])
#loc536 = loc(fused[#loc242, #loc243])
#loc537 = loc(fused[#loc244, #loc238])
#loc538 = loc(fused[#loc248, #loc249])
#loc539 = loc(fused[#loc250, #loc251])
#loc540 = loc(fused[#loc252, #loc253])
#loc541 = loc(fused[#loc254, #loc251])
#loc542 = loc(fused[#loc257, #loc258])
#loc543 = loc(fused[#loc260, #loc259])
#loc544 = loc(fused[#loc261, #loc262])
#loc545 = loc(fused[#loc264, #loc258])
#loc546 = loc(fused[#loc265, #loc266])
#loc547 = loc(fused[#loc267, #loc268])
#loc548 = loc(fused[#loc271, #loc272])
#loc549 = loc(fused[#loc273, #loc274])
#loc550 = loc(fused[#loc267, #loc276])
#loc551 = loc(fused[#loc277, #loc266])
#loc552 = loc(fused[#loc280, #loc279])
#loc553 = loc(fused[#loc281, #loc282])
#loc554 = loc(fused[#loc284, #loc282])
#loc555 = loc(fused[#loc287, #loc288])
#loc556 = loc(fused[#loc289, #loc290])
#loc557 = loc(fused[#loc293, #loc291])
#loc558 = loc(fused[#loc294, #loc295])
#loc559 = loc(fused[#loc296, #loc297])
#loc560 = loc(fused[#loc298, #loc299, #loc300, #loc295])
#loc561 = loc(fused[#loc304, #loc303])
#loc562 = loc(fused[#loc305, #loc306])
#loc563 = loc(fused[#loc307, #loc308])
#loc564 = loc(fused[#loc309, #loc306])
#loc565 = loc(fused[#loc310, #loc311])
#loc566 = loc(fused[#loc312, #loc313])
#loc567 = loc(fused[#loc314, #loc315])
#loc568 = loc(fused[#loc316, #loc317])
#loc569 = loc(fused[#loc321, #loc322])
#loc570 = loc(fused[#loc323, #loc324])
#loc571 = loc(fused[#loc325, #loc326])
#loc572 = loc(fused[#loc327, #loc324])
#loc573 = loc(fused[#loc330, #loc331])
#loc574 = loc(fused[#loc333, #loc332])
#loc575 = loc(fused[#loc334, #loc335])
#loc576 = loc(fused[#loc337, #loc331])
#loc577 = loc(fused[#loc338, #loc339])
#loc578 = loc(fused[#loc340, #loc341])
#loc579 = loc(fused[#loc344, #loc345])
#loc580 = loc(fused[#loc346, #loc347])
#loc581 = loc(fused[#loc340, #loc349])
#loc582 = loc(fused[#loc350, #loc339])
#loc583 = loc(fused[#loc354, #loc353])
#loc584 = loc(fused[#loc355, #loc356])
#loc585 = loc(fused[#loc358, #loc356])
#loc586 = loc(fused[#loc361, #loc362])
#loc587 = loc(fused[#loc363, #loc364])
#loc588 = loc(fused[#loc367, #loc365])
#loc589 = loc(fused[#loc368, #loc369])
#loc590 = loc(fused[#loc370, #loc371])
#loc591 = loc(fused[#loc372, #loc369])
#loc592 = loc(fused[#loc374, #loc373])
#loc593 = loc(fused[#loc375, #loc376])
#loc594 = loc(fused[#loc377, #loc378])
#loc595 = loc(fused[#loc379, #loc376])
#loc596 = loc(fused[#loc380, #loc381])
#loc597 = loc(fused[#loc382, #loc383])
#loc598 = loc(fused[#loc384, #loc385])
#loc599 = loc(fused[#loc386, #loc387])
#loc600 = loc(fused[#loc391, #loc392])
#loc601 = loc(fused[#loc393, #loc394])
#loc602 = loc(fused[#loc395, #loc396])
#loc603 = loc(fused[#loc397, #loc394])
#loc604 = loc(fused[#loc400, #loc401])
#loc605 = loc(fused[#loc403, #loc402])
#loc606 = loc(fused[#loc404, #loc405])
#loc607 = loc(fused[#loc407, #loc401])
#loc608 = loc(fused[#loc408, #loc409])
#loc609 = loc(fused[#loc410, #loc411])
#loc610 = loc(fused[#loc414, #loc415])
#loc611 = loc(fused[#loc416, #loc417])
#loc612 = loc(fused[#loc410, #loc419])
#loc613 = loc(fused[#loc420, #loc409])
#loc614 = loc(fused[#loc424, #loc423])
#loc615 = loc(fused[#loc425, #loc426])
#loc616 = loc(fused[#loc428, #loc426])
