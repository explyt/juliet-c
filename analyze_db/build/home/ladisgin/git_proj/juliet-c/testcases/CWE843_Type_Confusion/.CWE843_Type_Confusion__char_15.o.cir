!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc83)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printIntLine(!s32i) loc(#loc84)
  cir.func no_proto @CWE843_Type_Confusion__char_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charBuffer", init] {alignment = 1 : i64} loc(#loc86)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc87)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc12)
    cir.store %2, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc88)
    cir.br ^bb1 loc(#loc89)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc16)
    cir.br ^bb2 loc(#loc14)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb7 [
      6: ^bb4
    ] loc(#loc14)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc90)
  ^bb5:  // pred: ^bb4
    %4 = cir.const #cir.int<97> : !s32i loc(#loc9)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc9)
    cir.store %5, %0 : !s8i, !cir.ptr<!s8i> loc(#loc86)
    %6 = cir.cast(bitcast, %0 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
    cir.store %6, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc92)
    cir.br ^bb6 loc(#loc19)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc23)
  ^bb7:  // pred: ^bb2
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc24)
    cir.br ^bb8 loc(#loc25)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc15)
  ^bb9:  // pred: ^bb8
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc26)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc26)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc28)
    cir.return loc(#loc7)
  } loc(#loc85)
  cir.func no_proto @CWE843_Type_Confusion__char_15_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc94)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc95)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    cir.return loc(#loc30)
  } loc(#loc93)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBuffer", init] {alignment = 4 : i64} loc(#loc97)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc98)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
    cir.store %2, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc99)
    cir.br ^bb1 loc(#loc100)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc45)
    cir.br ^bb2 loc(#loc43)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc43)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc46)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc47)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    cir.br ^bb8 loc(#loc49)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc101)
  ^bb6:  // pred: ^bb5
    %6 = cir.const #cir.int<8> : !s32i loc(#loc38)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc97)
    %7 = cir.cast(bitcast, %0 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc102)
    cir.store %7, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc103)
    cir.br ^bb7 loc(#loc51)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc55)
  ^bb8:  // 2 preds: ^bb4, ^bb7
    cir.br ^bb9 loc(#loc44)
  ^bb9:  // pred: ^bb8
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc56)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc56)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc58)
    cir.return loc(#loc36)
  } loc(#loc96)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBuffer", init] {alignment = 4 : i64} loc(#loc105)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc106)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc65)
    cir.store %2, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc107)
    cir.br ^bb1 loc(#loc108)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc69)
    cir.br ^bb2 loc(#loc67)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb7 [
      6: ^bb4
    ] loc(#loc67)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc70)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc109)
  ^bb5:  // pred: ^bb4
    %4 = cir.const #cir.int<8> : !s32i loc(#loc62)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    %5 = cir.cast(bitcast, %0 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc110)
    cir.store %5, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc111)
    cir.br ^bb6 loc(#loc72)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc76)
  ^bb7:  // pred: ^bb2
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc77)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    cir.br ^bb8 loc(#loc79)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc68)
  ^bb9:  // pred: ^bb8
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc80)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc80)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc82)
    cir.return loc(#loc60)
  } loc(#loc104)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_15.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE843_Type_Confusion__char_15.c":37:19)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("CWE843_Type_Confusion__char_15.c":21:1)
#loc7 = loc("CWE843_Type_Confusion__char_15.c":42:1)
#loc8 = loc("CWE843_Type_Confusion__char_15.c":31:9)
#loc9 = loc("CWE843_Type_Confusion__char_15.c":31:27)
#loc10 = loc("CWE843_Type_Confusion__char_15.c":23:5)
#loc11 = loc("CWE843_Type_Confusion__char_15.c":23:12)
#loc12 = loc("CWE843_Type_Confusion__char_15.c":25:12)
#loc13 = loc("CWE843_Type_Confusion__char_15.c":25:5)
#loc14 = loc("CWE843_Type_Confusion__char_15.c":26:5)
#loc15 = loc("CWE843_Type_Confusion__char_15.c":39:5)
#loc16 = loc("CWE843_Type_Confusion__char_15.c":26:12)
#loc17 = loc("CWE843_Type_Confusion__char_15.c":28:5)
#loc18 = loc("CWE843_Type_Confusion__char_15.c":29:5)
#loc19 = loc("CWE843_Type_Confusion__char_15.c":33:5)
#loc20 = loc("CWE843_Type_Confusion__char_15.c":32:16)
#loc21 = loc("CWE843_Type_Confusion__char_15.c":32:17)
#loc22 = loc("CWE843_Type_Confusion__char_15.c":32:9)
#loc23 = loc("CWE843_Type_Confusion__char_15.c":34:5)
#loc24 = loc("CWE843_Type_Confusion__char_15.c":37:9)
#loc25 = loc("CWE843_Type_Confusion__char_15.c":38:9)
#loc26 = loc("CWE843_Type_Confusion__char_15.c":41:26)
#loc27 = loc("CWE843_Type_Confusion__char_15.c":41:18)
#loc28 = loc("CWE843_Type_Confusion__char_15.c":41:5)
#loc29 = loc("CWE843_Type_Confusion__char_15.c":96:1)
#loc30 = loc("CWE843_Type_Confusion__char_15.c":100:1)
#loc31 = loc("CWE843_Type_Confusion__char_15.c":98:5)
#loc32 = loc("CWE843_Type_Confusion__char_15.c":98:14)
#loc33 = loc("CWE843_Type_Confusion__char_15.c":99:5)
#loc34 = loc("CWE843_Type_Confusion__char_15.c":99:14)
#loc35 = loc("CWE843_Type_Confusion__char_15.c":49:1)
#loc36 = loc("CWE843_Type_Confusion__char_15.c":70:1)
#loc37 = loc("CWE843_Type_Confusion__char_15.c":63:9)
#loc38 = loc("CWE843_Type_Confusion__char_15.c":63:25)
#loc39 = loc("CWE843_Type_Confusion__char_15.c":51:5)
#loc40 = loc("CWE843_Type_Confusion__char_15.c":51:12)
#loc41 = loc("CWE843_Type_Confusion__char_15.c":53:12)
#loc42 = loc("CWE843_Type_Confusion__char_15.c":53:5)
#loc43 = loc("CWE843_Type_Confusion__char_15.c":54:5)
#loc44 = loc("CWE843_Type_Confusion__char_15.c":67:5)
#loc45 = loc("CWE843_Type_Confusion__char_15.c":54:12)
#loc46 = loc("CWE843_Type_Confusion__char_15.c":56:5)
#loc47 = loc("CWE843_Type_Confusion__char_15.c":58:19)
#loc48 = loc("CWE843_Type_Confusion__char_15.c":58:9)
#loc49 = loc("CWE843_Type_Confusion__char_15.c":59:9)
#loc50 = loc("CWE843_Type_Confusion__char_15.c":61:5)
#loc51 = loc("CWE843_Type_Confusion__char_15.c":65:5)
#loc52 = loc("CWE843_Type_Confusion__char_15.c":64:16)
#loc53 = loc("CWE843_Type_Confusion__char_15.c":64:17)
#loc54 = loc("CWE843_Type_Confusion__char_15.c":64:9)
#loc55 = loc("CWE843_Type_Confusion__char_15.c":66:5)
#loc56 = loc("CWE843_Type_Confusion__char_15.c":69:26)
#loc57 = loc("CWE843_Type_Confusion__char_15.c":69:18)
#loc58 = loc("CWE843_Type_Confusion__char_15.c":69:5)
#loc59 = loc("CWE843_Type_Confusion__char_15.c":73:1)
#loc60 = loc("CWE843_Type_Confusion__char_15.c":94:1)
#loc61 = loc("CWE843_Type_Confusion__char_15.c":83:9)
#loc62 = loc("CWE843_Type_Confusion__char_15.c":83:25)
#loc63 = loc("CWE843_Type_Confusion__char_15.c":75:5)
#loc64 = loc("CWE843_Type_Confusion__char_15.c":75:12)
#loc65 = loc("CWE843_Type_Confusion__char_15.c":77:12)
#loc66 = loc("CWE843_Type_Confusion__char_15.c":77:5)
#loc67 = loc("CWE843_Type_Confusion__char_15.c":78:5)
#loc68 = loc("CWE843_Type_Confusion__char_15.c":91:5)
#loc69 = loc("CWE843_Type_Confusion__char_15.c":78:12)
#loc70 = loc("CWE843_Type_Confusion__char_15.c":80:5)
#loc71 = loc("CWE843_Type_Confusion__char_15.c":81:5)
#loc72 = loc("CWE843_Type_Confusion__char_15.c":85:5)
#loc73 = loc("CWE843_Type_Confusion__char_15.c":84:16)
#loc74 = loc("CWE843_Type_Confusion__char_15.c":84:17)
#loc75 = loc("CWE843_Type_Confusion__char_15.c":84:9)
#loc76 = loc("CWE843_Type_Confusion__char_15.c":86:5)
#loc77 = loc("CWE843_Type_Confusion__char_15.c":89:19)
#loc78 = loc("CWE843_Type_Confusion__char_15.c":89:9)
#loc79 = loc("CWE843_Type_Confusion__char_15.c":90:9)
#loc80 = loc("CWE843_Type_Confusion__char_15.c":93:26)
#loc81 = loc("CWE843_Type_Confusion__char_15.c":93:18)
#loc82 = loc("CWE843_Type_Confusion__char_15.c":93:5)
#loc83 = loc(fused[#loc1, #loc2])
#loc84 = loc(fused[#loc4, #loc5])
#loc85 = loc(fused[#loc6, #loc7])
#loc86 = loc(fused[#loc8, #loc9])
#loc87 = loc(fused[#loc10, #loc11])
#loc88 = loc(fused[#loc13, #loc12])
#loc89 = loc(fused[#loc14, #loc15])
#loc90 = loc(fused[#loc18, #loc19])
#loc91 = loc(fused[#loc20, #loc21])
#loc92 = loc(fused[#loc22, #loc21])
#loc93 = loc(fused[#loc29, #loc30])
#loc94 = loc(fused[#loc31, #loc32])
#loc95 = loc(fused[#loc33, #loc34])
#loc96 = loc(fused[#loc35, #loc36])
#loc97 = loc(fused[#loc37, #loc38])
#loc98 = loc(fused[#loc39, #loc40])
#loc99 = loc(fused[#loc42, #loc41])
#loc100 = loc(fused[#loc43, #loc44])
#loc101 = loc(fused[#loc50, #loc51])
#loc102 = loc(fused[#loc52, #loc53])
#loc103 = loc(fused[#loc54, #loc53])
#loc104 = loc(fused[#loc59, #loc60])
#loc105 = loc(fused[#loc61, #loc62])
#loc106 = loc(fused[#loc63, #loc64])
#loc107 = loc(fused[#loc66, #loc65])
#loc108 = loc(fused[#loc67, #loc68])
#loc109 = loc(fused[#loc71, #loc72])
#loc110 = loc(fused[#loc73, #loc74])
#loc111 = loc(fused[#loc75, #loc74])
