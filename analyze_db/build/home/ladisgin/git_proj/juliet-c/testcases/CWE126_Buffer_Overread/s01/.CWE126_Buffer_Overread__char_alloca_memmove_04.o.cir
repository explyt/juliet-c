!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memmove_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc207)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc208)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memmove_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc210)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc211)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc212)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc12)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc12)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc12)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc213)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc212)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc14)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc14)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc213)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc15)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc16)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc17)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc17)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc17)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc214)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc21)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc23)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc23)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc215)
    %32 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
    %34 = cir.const #cir.int<65> : !s32i loc(#loc27)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc28)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc28)
    cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc216)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc32)
    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc34)
    %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc217)
    cir.br ^bb1 loc(#loc218)
  ^bb1:  // pred: ^bb0
    %46 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %47 = cir.cast(int_to_bool, %46 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %47 ^bb2, ^bb3 loc(#loc219)
  ^bb2:  // pred: ^bb1
    %48 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    cir.store %48, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
    cir.br ^bb3 loc(#loc38)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc38)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc221)
  ^bb5:  // pred: ^bb4
    %49 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
    %51 = cir.const #cir.int<67> : !s32i loc(#loc46)
    %52 = cir.const #cir.int<100> : !s32i loc(#loc47)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %54 = cir.binop(sub, %52, %53) nsw : !s32i loc(#loc47)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc47)
    cir.libc.memset %55 bytes from %50 set to %51 : !cir.ptr<!void>, !s32i, !u64i loc(#loc222)
    %56 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %57 = cir.cast(integral, %56 : !s32i), !s8i loc(#loc51)
    %58 = cir.const #cir.int<100> : !s32i loc(#loc52)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %60 = cir.binop(sub, %58, %59) nsw : !s32i loc(#loc52)
    %61 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
    %62 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %60 : !s32i), !cir.ptr<!s8i> loc(#loc54)
    cir.store %57, %62 : !s8i, !cir.ptr<!s8i> loc(#loc223)
    %63 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
    %65 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %66 = cir.cast(bitcast, %65 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
    %67 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc57)
    %68 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
    %69 = cir.call @strlen(%68) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc57)
    %70 = cir.const #cir.int<1> : !u64i loc(#loc224)
    %71 = cir.binop(mul, %69, %70) : !u64i loc(#loc225)
    cir.libc.memmove %71 bytes from %66 to %64 : !cir.ptr<!void>, !u64i loc(#loc226)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc63)
    %74 = cir.const #cir.int<100> : !s32i loc(#loc64)
    %75 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %76 = cir.binop(sub, %74, %75) nsw : !s32i loc(#loc64)
    %77 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
    %78 = cir.ptr_stride(%77 : !cir.ptr<!s8i>, %76 : !s32i), !cir.ptr<!s8i> loc(#loc66)
    cir.store %73, %78 : !s8i, !cir.ptr<!s8i> loc(#loc227)
    %79 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%79) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    cir.br ^bb6 loc(#loc44)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc209)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memmove_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc229)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc230)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    cir.return loc(#loc70)
  } loc(#loc228)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc75)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc232)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc233)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc234)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc83)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc83)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc83)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc83)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc83)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc235)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc83)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc83)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc234)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc85)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc85)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc85)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc85)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc85)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc85)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc85)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc235)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc87)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc88)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc88)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc88)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc236)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc92)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc94)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc94)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc96)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc237)
    %32 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
    %34 = cir.const #cir.int<65> : !s32i loc(#loc98)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc99)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc99)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc99)
    cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc238)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc103)
    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc105)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc105)
    %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc107)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc239)
    cir.br ^bb1 loc(#loc240)
  ^bb1:  // pred: ^bb0
    %46 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %47 = cir.cast(int_to_bool, %46 : !s32i), !cir.bool loc(#loc110)
    cir.brcond %47 ^bb2, ^bb3 loc(#loc241)
  ^bb2:  // pred: ^bb1
    %48 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc75)
    %49 = cir.cast(array_to_ptrdecay, %48 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    cir.br ^bb4 loc(#loc112)
  ^bb3:  // pred: ^bb1
    %50 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    cir.store %50, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc242)
    cir.br ^bb4 loc(#loc109)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc109)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc243)
  ^bb6:  // pred: ^bb5
    %51 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc119)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
    %53 = cir.const #cir.int<67> : !s32i loc(#loc120)
    %54 = cir.const #cir.int<100> : !s32i loc(#loc121)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %56 = cir.binop(sub, %54, %55) nsw : !s32i loc(#loc121)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc121)
    cir.libc.memset %57 bytes from %52 set to %53 : !cir.ptr<!void>, !s32i, !u64i loc(#loc244)
    %58 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %59 = cir.cast(integral, %58 : !s32i), !s8i loc(#loc125)
    %60 = cir.const #cir.int<100> : !s32i loc(#loc126)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc126)
    %63 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc128)
    %64 = cir.ptr_stride(%63 : !cir.ptr<!s8i>, %62 : !s32i), !cir.ptr<!s8i> loc(#loc128)
    cir.store %59, %64 : !s8i, !cir.ptr<!s8i> loc(#loc245)
    %65 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc129)
    %66 = cir.cast(bitcast, %65 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc129)
    %67 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    %68 = cir.cast(bitcast, %67 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
    %69 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc131)
    %70 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc132)
    %71 = cir.call @strlen(%70) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc131)
    %72 = cir.const #cir.int<1> : !u64i loc(#loc246)
    %73 = cir.binop(mul, %71, %72) : !u64i loc(#loc247)
    cir.libc.memmove %73 bytes from %68 to %66 : !cir.ptr<!void>, !u64i loc(#loc248)
    %74 = cir.const #cir.int<0> : !s32i loc(#loc137)
    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc137)
    %76 = cir.const #cir.int<100> : !s32i loc(#loc138)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc139)
    %78 = cir.binop(sub, %76, %77) nsw : !s32i loc(#loc138)
    %79 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc140)
    %80 = cir.ptr_stride(%79 : !cir.ptr<!s8i>, %78 : !s32i), !cir.ptr<!s8i> loc(#loc140)
    cir.store %75, %80 : !s8i, !cir.ptr<!s8i> loc(#loc249)
    %81 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%81) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    cir.br ^bb7 loc(#loc118)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc77)
  } loc(#loc231)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc251)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc252)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc253)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc150)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc150)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc150)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc150)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc150)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc254)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc150)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc150)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc253)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc152)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc152)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc152)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc152)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc152)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc152)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc152)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc254)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc153)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc154)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc155)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc155)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc155)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc255)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc159)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc159)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc161)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc161)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc163)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc256)
    %32 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc164)
    %34 = cir.const #cir.int<65> : !s32i loc(#loc165)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc166)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc166)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc166)
    cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc257)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc170)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc170)
    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc172)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc173)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc172)
    %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc174)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc258)
    cir.br ^bb1 loc(#loc259)
  ^bb1:  // pred: ^bb0
    %46 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %47 = cir.cast(int_to_bool, %46 : !s32i), !cir.bool loc(#loc177)
    cir.brcond %47 ^bb2, ^bb3 loc(#loc260)
  ^bb2:  // pred: ^bb1
    %48 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
    cir.store %48, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc261)
    cir.br ^bb3 loc(#loc176)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc176)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc262)
  ^bb5:  // pred: ^bb4
    %49 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc183)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc183)
    %51 = cir.const #cir.int<67> : !s32i loc(#loc184)
    %52 = cir.const #cir.int<100> : !s32i loc(#loc185)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc186)
    %54 = cir.binop(sub, %52, %53) nsw : !s32i loc(#loc185)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc185)
    cir.libc.memset %55 bytes from %50 set to %51 : !cir.ptr<!void>, !s32i, !u64i loc(#loc263)
    %56 = cir.const #cir.int<0> : !s32i loc(#loc189)
    %57 = cir.cast(integral, %56 : !s32i), !s8i loc(#loc189)
    %58 = cir.const #cir.int<100> : !s32i loc(#loc190)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc191)
    %60 = cir.binop(sub, %58, %59) nsw : !s32i loc(#loc190)
    %61 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc192)
    %62 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %60 : !s32i), !cir.ptr<!s8i> loc(#loc192)
    cir.store %57, %62 : !s8i, !cir.ptr<!s8i> loc(#loc264)
    %63 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc193)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc193)
    %65 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc194)
    %66 = cir.cast(bitcast, %65 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc194)
    %67 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc195)
    %68 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc196)
    %69 = cir.call @strlen(%68) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc195)
    %70 = cir.const #cir.int<1> : !u64i loc(#loc265)
    %71 = cir.binop(mul, %69, %70) : !u64i loc(#loc266)
    cir.libc.memmove %71 bytes from %66 to %64 : !cir.ptr<!void>, !u64i loc(#loc267)
    %72 = cir.const #cir.int<0> : !s32i loc(#loc201)
    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc201)
    %74 = cir.const #cir.int<100> : !s32i loc(#loc202)
    %75 = cir.const #cir.int<1> : !s32i loc(#loc203)
    %76 = cir.binop(sub, %74, %75) nsw : !s32i loc(#loc202)
    %77 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc204)
    %78 = cir.ptr_stride(%77 : !cir.ptr<!s8i>, %76 : !s32i), !cir.ptr<!s8i> loc(#loc204)
    cir.store %73, %78 : !s8i, !cir.ptr<!s8i> loc(#loc268)
    %79 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc205)
    cir.call @printLine(%79) : (!cir.ptr<!s8i>) -> () loc(#loc206)
    cir.br ^bb6 loc(#loc182)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc144)
  } loc(#loc250)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memmove_04.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":30:1)
#loc6 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":54:1)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":45:9)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":45:22)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":32:5)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":32:12)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":33:5)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":33:36)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":34:5)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":34:37)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":35:12)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":35:27)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":35:32)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":35:35)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":35:5)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":35:36)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":36:27)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":36:5)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":36:19)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":36:22)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":36:23)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":37:12)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":37:28)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":37:33)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":37:37)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":37:5)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":37:38)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":38:29)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":38:5)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":38:20)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":38:24)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":38:25)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":39:5)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":43:5)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":39:8)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":40:5)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":42:16)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":42:9)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":44:5)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":53:5)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":46:16)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":46:22)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":46:27)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":46:31)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":46:9)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":46:32)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":47:23)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":47:14)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":47:18)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":47:9)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":50:17)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":50:23)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":50:29)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":50:36)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":50:42)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":50:53)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":50:9)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":50:54)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":51:23)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":51:14)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":51:18)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":51:9)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":52:19)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":52:9)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":119:1)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":123:1)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":121:5)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":121:14)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":122:5)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":122:14)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":73:19)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":61:1)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":90:1)
#loc78 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":81:9)
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":81:22)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":63:5)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":63:12)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":64:5)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":64:36)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":65:5)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":65:37)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":66:12)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":66:27)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":66:32)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":66:35)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":66:5)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":66:36)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":67:27)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":67:5)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":67:19)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":67:22)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":67:23)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":68:12)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":68:28)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":68:33)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":68:37)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":68:5)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":68:38)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":69:29)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":69:5)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":69:20)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":69:24)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":69:25)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":70:5)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":79:5)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":70:8)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":71:5)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":74:5)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":76:5)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":73:9)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":78:16)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":78:9)
#loc117 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":80:5)
#loc118 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":89:5)
#loc119 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":82:16)
#loc120 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":82:22)
#loc121 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":82:27)
#loc122 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":82:31)
#loc123 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":82:9)
#loc124 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":82:32)
#loc125 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":83:23)
#loc126 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":83:14)
#loc127 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":83:18)
#loc128 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":83:9)
#loc129 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":86:17)
#loc130 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":86:23)
#loc131 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":86:29)
#loc132 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":86:36)
#loc133 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":86:42)
#loc134 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":86:53)
#loc135 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":86:9)
#loc136 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":86:54)
#loc137 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":87:23)
#loc138 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":87:14)
#loc139 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":87:18)
#loc140 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":87:9)
#loc141 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":88:19)
#loc142 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":88:9)
#loc143 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":93:1)
#loc144 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":117:1)
#loc145 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":108:9)
#loc146 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":108:22)
#loc147 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":95:5)
#loc148 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":95:12)
#loc149 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":96:5)
#loc150 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":96:36)
#loc151 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":97:5)
#loc152 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":97:37)
#loc153 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":98:12)
#loc154 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":98:27)
#loc155 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":98:32)
#loc156 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":98:35)
#loc157 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":98:5)
#loc158 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":98:36)
#loc159 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":99:27)
#loc160 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":99:5)
#loc161 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":99:19)
#loc162 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":99:22)
#loc163 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":99:23)
#loc164 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":100:12)
#loc165 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":100:28)
#loc166 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":100:33)
#loc167 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":100:37)
#loc168 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":100:5)
#loc169 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":100:38)
#loc170 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":101:29)
#loc171 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":101:5)
#loc172 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":101:20)
#loc173 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":101:24)
#loc174 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":101:25)
#loc175 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":102:5)
#loc176 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":106:5)
#loc177 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":102:8)
#loc178 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":103:5)
#loc179 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":105:16)
#loc180 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":105:9)
#loc181 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":107:5)
#loc182 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":116:5)
#loc183 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":109:16)
#loc184 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":109:22)
#loc185 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":109:27)
#loc186 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":109:31)
#loc187 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":109:9)
#loc188 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":109:32)
#loc189 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":110:23)
#loc190 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":110:14)
#loc191 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":110:18)
#loc192 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":110:9)
#loc193 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":113:17)
#loc194 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":113:23)
#loc195 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":113:29)
#loc196 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":113:36)
#loc197 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":113:42)
#loc198 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":113:53)
#loc199 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":113:9)
#loc200 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":113:54)
#loc201 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":114:23)
#loc202 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":114:14)
#loc203 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":114:18)
#loc204 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":114:9)
#loc205 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":115:19)
#loc206 = loc("CWE126_Buffer_Overread__char_alloca_memmove_04.c":115:9)
#loc207 = loc(fused[#loc1, #loc2])
#loc208 = loc(fused[#loc3, #loc4])
#loc209 = loc(fused[#loc5, #loc6])
#loc210 = loc(fused[#loc7, #loc8])
#loc211 = loc(fused[#loc9, #loc10])
#loc212 = loc(fused[#loc11, #loc12])
#loc213 = loc(fused[#loc13, #loc14])
#loc214 = loc(fused[#loc19, #loc20])
#loc215 = loc(fused[#loc22, #loc21])
#loc216 = loc(fused[#loc30, #loc31])
#loc217 = loc(fused[#loc33, #loc32])
#loc218 = loc(fused[#loc37, #loc38])
#loc219 = loc(fused[#loc40, #loc38])
#loc220 = loc(fused[#loc42, #loc41])
#loc221 = loc(fused[#loc43, #loc44])
#loc222 = loc(fused[#loc49, #loc50])
#loc223 = loc(fused[#loc54, #loc51])
#loc224 = loc(fused[#loc59, #loc60])
#loc225 = loc(fused[#loc57, #loc60])
#loc226 = loc(fused[#loc61, #loc62])
#loc227 = loc(fused[#loc66, #loc63])
#loc228 = loc(fused[#loc69, #loc70])
#loc229 = loc(fused[#loc71, #loc72])
#loc230 = loc(fused[#loc73, #loc74])
#loc231 = loc(fused[#loc76, #loc77])
#loc232 = loc(fused[#loc78, #loc79])
#loc233 = loc(fused[#loc80, #loc81])
#loc234 = loc(fused[#loc82, #loc83])
#loc235 = loc(fused[#loc84, #loc85])
#loc236 = loc(fused[#loc90, #loc91])
#loc237 = loc(fused[#loc93, #loc92])
#loc238 = loc(fused[#loc101, #loc102])
#loc239 = loc(fused[#loc104, #loc103])
#loc240 = loc(fused[#loc108, #loc109])
#loc241 = loc(fused[#loc111, #loc112, #loc113, #loc109])
#loc242 = loc(fused[#loc116, #loc115])
#loc243 = loc(fused[#loc117, #loc118])
#loc244 = loc(fused[#loc123, #loc124])
#loc245 = loc(fused[#loc128, #loc125])
#loc246 = loc(fused[#loc133, #loc134])
#loc247 = loc(fused[#loc131, #loc134])
#loc248 = loc(fused[#loc135, #loc136])
#loc249 = loc(fused[#loc140, #loc137])
#loc250 = loc(fused[#loc143, #loc144])
#loc251 = loc(fused[#loc145, #loc146])
#loc252 = loc(fused[#loc147, #loc148])
#loc253 = loc(fused[#loc149, #loc150])
#loc254 = loc(fused[#loc151, #loc152])
#loc255 = loc(fused[#loc157, #loc158])
#loc256 = loc(fused[#loc160, #loc159])
#loc257 = loc(fused[#loc168, #loc169])
#loc258 = loc(fused[#loc171, #loc170])
#loc259 = loc(fused[#loc175, #loc176])
#loc260 = loc(fused[#loc178, #loc176])
#loc261 = loc(fused[#loc180, #loc179])
#loc262 = loc(fused[#loc181, #loc182])
#loc263 = loc(fused[#loc187, #loc188])
#loc264 = loc(fused[#loc192, #loc189])
#loc265 = loc(fused[#loc197, #loc198])
#loc266 = loc(fused[#loc195, #loc198])
#loc267 = loc(fused[#loc199, #loc200])
#loc268 = loc(fused[#loc204, #loc201])
