!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc100 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":90:44)
#loc151 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":234:8)
#loc152 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":234:14)
#loc239 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":186:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc337 = loc(fused[#loc151, #loc152])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc277)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc278)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc279)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc280)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc281)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc282)
  cir.func private @close(!s32i) -> !s32i loc(#loc283)
  cir.func private @printIntLine(!s32i) loc(#loc284)
  cir.func @_ZN46CWE369_Divide_by_Zero__float_connect_socket_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc286)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc287)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc288)
    %3 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc289)
    %4 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc290)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc291)
    %6 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc292)
    %7 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc293)
    cir.store %6, %7 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc35)
    %8 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc36)
    cir.store %8, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc294)
    cir.br ^bb1 loc(#loc295)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc25)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    cir.br ^bb2 loc(#loc296)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc296)
  ^bb3:  // pred: ^bb26
    %11 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc42)
    cir.brcond %12 ^bb4, ^bb27 loc(#loc42)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc297)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<2> : !s32i loc(#loc45)
    %14 = cir.const #cir.int<1> : !u32i loc(#loc46)
    %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc46)
    %16 = cir.const #cir.int<6> : !u32i loc(#loc47)
    %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc47)
    %18 = cir.call @socket(%13, %15, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc48)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc298)
    cir.br ^bb6 loc(#loc299)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc54)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc300)
    cir.brcond %22 ^bb7, ^bb8 loc(#loc301)
  ^bb7:  // pred: ^bb6
    cir.br ^bb27 loc(#loc56)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc52)
  ^bb9:  // pred: ^bb8
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc302)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc303)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc304)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc64)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc64)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc305)
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %31 = cir.call @inet_addr(%30) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc67)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc306)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc72)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc72)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc73)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc307)
    cir.br ^bb10 loc(#loc308)
  ^bb10:  // pred: ^bb9
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc309)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc310)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc310)
    %42 = cir.call @connect(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc84)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %44 = cir.unary(minus, %43) nsw : !s32i, !s32i loc(#loc85)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc311)
    cir.brcond %45 ^bb11, ^bb12 loc(#loc312)
  ^bb11:  // pred: ^bb10
    cir.br ^bb27 loc(#loc87)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc78)
  ^bb13:  // pred: ^bb12
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %47 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc89)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
    %49 = cir.const #cir.int<20> : !s32i loc(#loc90)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc90)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc90)
    %53 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %54 = cir.call @recv(%46, %48, %52, %53) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc93)
    %55 = cir.cast(integral, %54 : !s64i), !s32i loc(#loc93)
    cir.store %55, %0 : !s32i, !cir.ptr<!s32i> loc(#loc313)
    cir.br ^bb14 loc(#loc314)
  ^bb14:  // pred: ^bb13
    %56 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc99)
    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc315)
    cir.brcond %59 ^bb15, ^bb16 loc(#loc100)
  ^bb15:  // pred: ^bb14
    %60 = cir.const #true loc(#loc100)
    cir.br ^bb21(%60 : !cir.bool) loc(#loc100)
  ^bb16:  // pred: ^bb14
    %61 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %62 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %63 = cir.cmp(eq, %61, %62) : !s32i, !cir.bool loc(#loc316)
    cir.brcond %63 ^bb17, ^bb18 loc(#loc100)
  ^bb17:  // pred: ^bb16
    %64 = cir.const #true loc(#loc100)
    cir.br ^bb19(%64 : !cir.bool) loc(#loc100)
  ^bb18:  // pred: ^bb16
    %65 = cir.const #false loc(#loc100)
    cir.br ^bb19(%65 : !cir.bool) loc(#loc100)
  ^bb19(%66: !cir.bool loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":90:44)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc100)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%66 : !cir.bool) loc(#loc100)
  ^bb21(%67: !cir.bool loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":90:44)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc100)
  ^bb22:  // pred: ^bb21
    cir.brcond %67 ^bb23, ^bb24 loc(#loc317)
  ^bb23:  // pred: ^bb22
    cir.br ^bb27 loc(#loc104)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc97)
  ^bb25:  // pred: ^bb24
    %68 = cir.const #cir.int<0> : !s8i loc(#loc105)
    %69 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %70 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc107)
    %71 = cir.ptr_stride(%70 : !cir.ptr<!s8i>, %69 : !s32i), !cir.ptr<!s8i> loc(#loc107)
    cir.store %68, %71 : !s8i, !cir.ptr<!s8i> loc(#loc318)
    %72 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc108)
    %73 = cir.call @atof(%72) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc109)
    %74 = cir.cast(floating, %73 : !cir.double), !cir.float loc(#loc109)
    cir.store %74, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc319)
    cir.br ^bb26 loc(#loc44)
  ^bb26:  // pred: ^bb25
    cir.br ^bb3 loc(#loc41)
  ^bb27:  // 4 preds: ^bb3, ^bb7, ^bb11, ^bb23
    cir.br ^bb28 loc(#loc41)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc320)
  ^bb29:  // pred: ^bb28
    %75 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %76 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc115)
    %78 = cir.cmp(ne, %75, %77) : !s32i, !cir.bool loc(#loc321)
    cir.brcond %78 ^bb30, ^bb31 loc(#loc322)
  ^bb30:  // pred: ^bb29
    %79 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %80 = cir.call @close(%79) : (!s32i) -> !s32i loc(#loc118)
    cir.br ^bb31 loc(#loc113)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc113)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc39)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc323)
  ^bb34:  // pred: ^bb33
    %81 = cir.load %7 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc29)
    %82 = cir.load %81 : !cir.ptr<!cir.float>, !cir.float loc(#loc29)
    cir.store %82, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc290)
    cir.br ^bb35 loc(#loc324)
  ^bb35:  // pred: ^bb34
    %83 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc123)
    %84 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc124)
    %85 = cir.cast(floating, %84 : !cir.float), !cir.double loc(#loc124)
    %86 = cir.binop(div, %83, %85) : !cir.double loc(#loc325)
    %87 = cir.cast(float_to_int, %86 : !cir.double), !s32i loc(#loc325)
    cir.store %87, %5 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    %88 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    cir.call @printIntLine(%88) : (!s32i) -> () loc(#loc126)
    cir.br ^bb36 loc(#loc122)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc120)
  ^bb37:  // pred: ^bb36
    cir.return loc(#loc19)
  } loc(#loc285)
  cir.func internal private @_ZN46CWE369_Divide_by_Zero__float_connect_socket_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc327)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc328)
    %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc329)
    %3 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc330)
    cir.store %2, %3 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc136)
    %4 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc137)
    cir.store %4, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc331)
    %5 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc139)
    cir.store %5, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc332)
    cir.br ^bb1 loc(#loc333)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc130)
    %7 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc130)
    cir.store %7, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc327)
    cir.br ^bb2 loc(#loc334)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc145)
    %9 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc146)
    %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc146)
    %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc335)
    %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc335)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc328)
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc148)
    cir.br ^bb3 loc(#loc144)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc142)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc128)
  } loc(#loc326)
  cir.func linkonce_odr @_ZSt4fabsf(%arg0: !cir.float loc(fused[#loc151, #loc152])) -> !cir.float extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__x", init] {alignment = 4 : i64} loc(#loc337)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc150)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc153)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc154)
    %3 = cir.fabs %2 : !cir.float loc(#loc154)
    cir.store %3, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc338)
    %4 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc338)
    cir.return %4 : !cir.float loc(#loc338)
  } loc(#loc336)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc339)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc159)
  cir.func internal private @_ZN46CWE369_Divide_by_Zero__float_connect_socket_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc341)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc342)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc343)
    %3 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc344)
    %4 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc345)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc346)
    %6 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc347)
    %7 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc348)
    cir.store %6, %7 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc177)
    %8 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc178)
    cir.store %8, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc349)
    cir.br ^bb1 loc(#loc350)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc167)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc343)
    cir.br ^bb2 loc(#loc351)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc351)
  ^bb3:  // pred: ^bb26
    %11 = cir.const #cir.int<0> : !s32i loc(#loc184)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc184)
    cir.brcond %12 ^bb4, ^bb27 loc(#loc184)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc352)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<2> : !s32i loc(#loc187)
    %14 = cir.const #cir.int<1> : !u32i loc(#loc188)
    %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc188)
    %16 = cir.const #cir.int<6> : !u32i loc(#loc189)
    %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc189)
    %18 = cir.call @socket(%13, %15, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc190)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    cir.br ^bb6 loc(#loc354)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc195)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc196)
    %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc196)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc355)
    cir.brcond %22 ^bb7, ^bb8 loc(#loc356)
  ^bb7:  // pred: ^bb6
    cir.br ^bb27 loc(#loc198)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc194)
  ^bb9:  // pred: ^bb8
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc357)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc201)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc358)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc359)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc206)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc206)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc360)
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc208)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc208)
    %31 = cir.call @inet_addr(%30) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc209)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc361)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc212)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc212)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc213)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc362)
    cir.br ^bb10 loc(#loc363)
  ^bb10:  // pred: ^bb9
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc218)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc364)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc365)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc365)
    %42 = cir.call @connect(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc223)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc224)
    %44 = cir.unary(minus, %43) nsw : !s32i, !s32i loc(#loc224)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc366)
    cir.brcond %45 ^bb11, ^bb12 loc(#loc367)
  ^bb11:  // pred: ^bb10
    cir.br ^bb27 loc(#loc226)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc217)
  ^bb13:  // pred: ^bb12
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    %47 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc228)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc228)
    %49 = cir.const #cir.int<20> : !s32i loc(#loc229)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc230)
    %51 = cir.binop(sub, %49, %50) nsw : !s32i loc(#loc229)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc229)
    %53 = cir.const #cir.int<0> : !s32i loc(#loc231)
    %54 = cir.call @recv(%46, %48, %52, %53) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc232)
    %55 = cir.cast(integral, %54 : !s64i), !s32i loc(#loc232)
    cir.store %55, %0 : !s32i, !cir.ptr<!s32i> loc(#loc368)
    cir.br ^bb14 loc(#loc369)
  ^bb14:  // pred: ^bb13
    %56 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc237)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc238)
    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc238)
    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc370)
    cir.brcond %59 ^bb15, ^bb16 loc(#loc239)
  ^bb15:  // pred: ^bb14
    %60 = cir.const #true loc(#loc239)
    cir.br ^bb21(%60 : !cir.bool) loc(#loc239)
  ^bb16:  // pred: ^bb14
    %61 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc240)
    %62 = cir.const #cir.int<0> : !s32i loc(#loc241)
    %63 = cir.cmp(eq, %61, %62) : !s32i, !cir.bool loc(#loc371)
    cir.brcond %63 ^bb17, ^bb18 loc(#loc239)
  ^bb17:  // pred: ^bb16
    %64 = cir.const #true loc(#loc239)
    cir.br ^bb19(%64 : !cir.bool) loc(#loc239)
  ^bb18:  // pred: ^bb16
    %65 = cir.const #false loc(#loc239)
    cir.br ^bb19(%65 : !cir.bool) loc(#loc239)
  ^bb19(%66: !cir.bool loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":186:44)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc239)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%66 : !cir.bool) loc(#loc239)
  ^bb21(%67: !cir.bool loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":186:44)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc239)
  ^bb22:  // pred: ^bb21
    cir.brcond %67 ^bb23, ^bb24 loc(#loc372)
  ^bb23:  // pred: ^bb22
    cir.br ^bb27 loc(#loc243)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc236)
  ^bb25:  // pred: ^bb24
    %68 = cir.const #cir.int<0> : !s8i loc(#loc244)
    %69 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc245)
    %70 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc246)
    %71 = cir.ptr_stride(%70 : !cir.ptr<!s8i>, %69 : !s32i), !cir.ptr<!s8i> loc(#loc246)
    cir.store %68, %71 : !s8i, !cir.ptr<!s8i> loc(#loc373)
    %72 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc247)
    %73 = cir.call @atof(%72) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc248)
    %74 = cir.cast(floating, %73 : !cir.double), !cir.float loc(#loc248)
    cir.store %74, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc374)
    cir.br ^bb26 loc(#loc186)
  ^bb26:  // pred: ^bb25
    cir.br ^bb3 loc(#loc183)
  ^bb27:  // 4 preds: ^bb3, ^bb7, ^bb11, ^bb23
    cir.br ^bb28 loc(#loc183)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc375)
  ^bb29:  // pred: ^bb28
    %75 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc253)
    %76 = cir.const #cir.int<1> : !s32i loc(#loc254)
    %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc254)
    %78 = cir.cmp(ne, %75, %77) : !s32i, !cir.bool loc(#loc376)
    cir.brcond %78 ^bb30, ^bb31 loc(#loc377)
  ^bb30:  // pred: ^bb29
    %79 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc256)
    %80 = cir.call @close(%79) : (!s32i) -> !s32i loc(#loc257)
    cir.br ^bb31 loc(#loc252)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc252)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc181)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc378)
  ^bb34:  // pred: ^bb33
    %81 = cir.load %7 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc171)
    %82 = cir.load %81 : !cir.ptr<!cir.float>, !cir.float loc(#loc171)
    cir.store %82, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc345)
    cir.br ^bb35 loc(#loc379)
  ^bb35:  // pred: ^bb34
    %83 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc262)
    %84 = cir.call @_ZSt4fabsf(%83) : (!cir.float) -> !cir.float loc(#loc263)
    %85 = cir.cast(floating, %84 : !cir.float), !cir.double loc(#loc263)
    %86 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc264)
    %87 = cir.cmp(gt, %85, %86) : !cir.double, !cir.bool loc(#loc380)
    cir.brcond %87 ^bb36, ^bb37 loc(#loc381)
  ^bb36:  // pred: ^bb35
    %88 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc268)
    %89 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc269)
    %90 = cir.cast(floating, %89 : !cir.float), !cir.double loc(#loc269)
    %91 = cir.binop(div, %88, %90) : !cir.double loc(#loc382)
    %92 = cir.cast(float_to_int, %91 : !cir.double), !s32i loc(#loc382)
    cir.store %92, %5 : !s32i, !cir.ptr<!s32i> loc(#loc346)
    %93 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    cir.call @printIntLine(%93) : (!s32i) -> () loc(#loc271)
    cir.br ^bb38 loc(#loc266)
  ^bb37:  // pred: ^bb35
    %94 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc159)
    %95 = cir.cast(array_to_ptrdecay, %94 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc159)
    cir.call @printLine(%95) : (!cir.ptr<!s8i>) -> () loc(#loc272)
    cir.br ^bb38 loc(#loc261)
  ^bb38:  // 2 preds: ^bb36, ^bb37
    cir.br ^bb39 loc(#loc261)
  ^bb39:  // pred: ^bb38
    cir.br ^bb40 loc(#loc259)
  ^bb40:  // pred: ^bb39
    cir.return loc(#loc161)
  } loc(#loc340)
  cir.func @_ZN46CWE369_Divide_by_Zero__float_connect_socket_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN46CWE369_Divide_by_Zero__float_connect_socket_33L7goodG2BEv() : () -> () loc(#loc275)
    cir.call @_ZN46CWE369_Divide_by_Zero__float_connect_socket_33L7goodB2GEv() : () -> () loc(#loc276)
    cir.return loc(#loc274)
  } loc(#loc383)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_33.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":80:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":102:1)
#loc13 = loc("/usr/include/stdlib.h":103:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":49:1)
#loc19 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":119:1)
#loc20 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":60:9)
#loc21 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":60:13)
#loc22 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":61:9)
#loc23 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":61:28)
#loc24 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":62:9)
#loc25 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":62:32)
#loc26 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":63:9)
#loc27 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":63:41)
#loc28 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":112:9)
#loc29 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":112:22)
#loc30 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":115:13)
#loc31 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":115:44)
#loc32 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":51:5)
#loc33 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":51:11)
#loc34 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":52:5)
#loc35 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":52:22)
#loc36 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":54:12)
#loc37 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":54:5)
#loc38 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":55:5)
#loc39 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":110:5)
#loc40 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":64:9)
#loc41 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":99:17)
#loc42 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":99:16)
#loc43 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":65:9)
#loc44 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":98:9)
#loc45 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":73:36)
#loc46 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":73:45)
#loc47 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":73:58)
#loc48 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":73:29)
#loc49 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":73:13)
#loc50 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":73:69)
#loc51 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":74:13)
#loc52 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":77:13)
#loc53 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":74:17)
#loc54 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":74:34)
#loc55 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":75:13)
#loc56 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":76:17)
#loc57 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":78:20)
#loc58 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":78:21)
#loc59 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":78:30)
#loc60 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":78:33)
#loc61 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":78:47)
#loc62 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":78:13)
#loc63 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":78:48)
#loc64 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":79:34)
#loc65 = loc("/usr/include/netinet/in.h":249:5)
#loc66 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":79:13)
#loc67 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":80:39)
#loc68 = loc("/usr/include/netinet/in.h":251:20)
#loc69 = loc("/usr/include/netinet/in.h":33:15)
#loc70 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":80:13)
#loc71 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":80:59)
#loc72 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":81:38)
#loc73 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":81:32)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":81:13)
#loc76 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":81:46)
#loc77 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":82:13)
#loc78 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":85:13)
#loc79 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":82:25)
#loc80 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":82:58)
#loc81 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":82:59)
#loc82 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":82:68)
#loc83 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":82:82)
#loc84 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":82:17)
#loc85 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":82:88)
#loc86 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":83:13)
#loc87 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":84:17)
#loc88 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":89:31)
#loc89 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":89:46)
#loc90 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":89:59)
#loc91 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":89:77)
#loc92 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":89:80)
#loc93 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":89:26)
#loc94 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":89:13)
#loc95 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":89:81)
#loc96 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":90:13)
#loc97 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":93:13)
#loc98 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":90:17)
#loc99 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":90:31)
#loc101 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":90:47)
#loc102 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":90:61)
#loc103 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":91:13)
#loc104 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":92:17)
#loc105 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":95:39)
#loc106 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":95:25)
#loc107 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":95:13)
#loc108 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":97:32)
#loc109 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":97:27)
#loc110 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":97:13)
#loc111 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":97:43)
#loc112 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":100:9)
#loc113 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":103:9)
#loc114 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":100:13)
#loc115 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":100:30)
#loc116 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":101:9)
#loc117 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":102:26)
#loc118 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":102:13)
#loc119 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":111:5)
#loc120 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":118:5)
#loc121 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":113:9)
#loc122 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":117:9)
#loc123 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":115:32)
#loc124 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":115:40)
#loc125 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":116:26)
#loc126 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":116:13)
#loc127 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":126:1)
#loc128 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":142:1)
#loc129 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":135:9)
#loc130 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":135:22)
#loc131 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":138:13)
#loc132 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":138:44)
#loc133 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":128:5)
#loc134 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":128:11)
#loc135 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":129:5)
#loc136 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":129:22)
#loc137 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":131:12)
#loc138 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":131:5)
#loc139 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":133:12)
#loc140 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":133:5)
#loc141 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":134:5)
#loc142 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":141:5)
#loc143 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":136:9)
#loc144 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":140:9)
#loc145 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":138:32)
#loc146 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":138:40)
#loc147 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":139:26)
#loc148 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":139:13)
#loc149 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":233:3)
#loc150 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:34)
#loc153 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:3)
#loc154 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:28)
#loc155 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:5)
#loc156 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:31)
#loc157 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc158 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc159 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":217:23)
#loc160 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":145:1)
#loc161 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":220:1)
#loc162 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":156:9)
#loc163 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":156:13)
#loc164 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":157:9)
#loc165 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":157:28)
#loc166 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":158:9)
#loc167 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":158:32)
#loc168 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":159:9)
#loc169 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":159:41)
#loc170 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":208:9)
#loc171 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":208:22)
#loc172 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":212:13)
#loc173 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":212:44)
#loc174 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":147:5)
#loc175 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":147:11)
#loc176 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":148:5)
#loc177 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":148:22)
#loc178 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":150:12)
#loc179 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":150:5)
#loc180 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":151:5)
#loc181 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":206:5)
#loc182 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":160:9)
#loc183 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":195:17)
#loc184 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":195:16)
#loc185 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":161:9)
#loc186 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":194:9)
#loc187 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":169:36)
#loc188 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":169:45)
#loc189 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":169:58)
#loc190 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":169:29)
#loc191 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":169:13)
#loc192 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":169:69)
#loc193 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":170:13)
#loc194 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":173:13)
#loc195 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":170:17)
#loc196 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":170:34)
#loc197 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":171:13)
#loc198 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":172:17)
#loc199 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":174:20)
#loc200 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":174:21)
#loc201 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":174:30)
#loc202 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":174:33)
#loc203 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":174:47)
#loc204 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":174:13)
#loc205 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":174:48)
#loc206 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":175:34)
#loc207 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":175:13)
#loc208 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":176:49)
#loc209 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":176:39)
#loc210 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":176:13)
#loc211 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":176:59)
#loc212 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":177:38)
#loc213 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":177:32)
#loc214 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":177:13)
#loc215 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":177:46)
#loc216 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":178:13)
#loc217 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":181:13)
#loc218 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":178:25)
#loc219 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":178:58)
#loc220 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":178:59)
#loc221 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":178:68)
#loc222 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":178:82)
#loc223 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":178:17)
#loc224 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":178:88)
#loc225 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":179:13)
#loc226 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":180:17)
#loc227 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":185:31)
#loc228 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":185:46)
#loc229 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":185:59)
#loc230 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":185:77)
#loc231 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":185:80)
#loc232 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":185:26)
#loc233 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":185:13)
#loc234 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":185:81)
#loc235 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":186:13)
#loc236 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":189:13)
#loc237 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":186:17)
#loc238 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":186:31)
#loc240 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":186:47)
#loc241 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":186:61)
#loc242 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":187:13)
#loc243 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":188:17)
#loc244 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":191:39)
#loc245 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":191:25)
#loc246 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":191:13)
#loc247 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":193:32)
#loc248 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":193:27)
#loc249 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":193:13)
#loc250 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":193:43)
#loc251 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":196:9)
#loc252 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":199:9)
#loc253 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":196:13)
#loc254 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":196:30)
#loc255 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":197:9)
#loc256 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":198:26)
#loc257 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":198:13)
#loc258 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":207:5)
#loc259 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":219:5)
#loc260 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":210:9)
#loc261 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":218:9)
#loc262 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":210:17)
#loc263 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":210:12)
#loc264 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":210:25)
#loc265 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":211:9)
#loc266 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":214:9)
#loc267 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":216:9)
#loc268 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":212:32)
#loc269 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":212:40)
#loc270 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":213:26)
#loc271 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":213:13)
#loc272 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":217:13)
#loc273 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":222:1)
#loc274 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":226:1)
#loc275 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":224:5)
#loc276 = loc("CWE369_Divide_by_Zero__float_connect_socket_33.cpp":225:5)
#loc277 = loc(fused[#loc1, #loc2])
#loc278 = loc(fused[#loc3, #loc4])
#loc279 = loc(fused[#loc6, #loc7])
#loc280 = loc(fused[#loc8, #loc9])
#loc281 = loc(fused[#loc10, #loc11])
#loc282 = loc(fused[#loc12, #loc13])
#loc283 = loc(fused[#loc14, #loc15])
#loc284 = loc(fused[#loc16, #loc17])
#loc285 = loc(fused[#loc18, #loc19])
#loc286 = loc(fused[#loc20, #loc21])
#loc287 = loc(fused[#loc22, #loc23])
#loc288 = loc(fused[#loc24, #loc25])
#loc289 = loc(fused[#loc26, #loc27])
#loc290 = loc(fused[#loc28, #loc29])
#loc291 = loc(fused[#loc30, #loc31])
#loc292 = loc(fused[#loc32, #loc33])
#loc293 = loc(fused[#loc34, #loc35])
#loc294 = loc(fused[#loc37, #loc36])
#loc295 = loc(fused[#loc38, #loc39])
#loc296 = loc(fused[#loc40, #loc41])
#loc297 = loc(fused[#loc43, #loc44])
#loc298 = loc(fused[#loc49, #loc50])
#loc299 = loc(fused[#loc51, #loc52])
#loc300 = loc(fused[#loc53, #loc54])
#loc301 = loc(fused[#loc55, #loc52])
#loc302 = loc(fused[#loc57, #loc58])
#loc303 = loc(fused[#loc60, #loc61])
#loc304 = loc(fused[#loc62, #loc63])
#loc305 = loc(fused[#loc66, #loc64])
#loc306 = loc(fused[#loc70, #loc71])
#loc307 = loc(fused[#loc75, #loc76])
#loc308 = loc(fused[#loc77, #loc78])
#loc309 = loc(fused[#loc80, #loc81])
#loc310 = loc(fused[#loc82, #loc83])
#loc311 = loc(fused[#loc84, #loc85])
#loc312 = loc(fused[#loc86, #loc78])
#loc313 = loc(fused[#loc94, #loc95])
#loc314 = loc(fused[#loc96, #loc97])
#loc315 = loc(fused[#loc98, #loc99])
#loc316 = loc(fused[#loc101, #loc102])
#loc317 = loc(fused[#loc103, #loc97])
#loc318 = loc(fused[#loc107, #loc105])
#loc319 = loc(fused[#loc110, #loc111])
#loc320 = loc(fused[#loc112, #loc113])
#loc321 = loc(fused[#loc114, #loc115])
#loc322 = loc(fused[#loc116, #loc113])
#loc323 = loc(fused[#loc119, #loc120])
#loc324 = loc(fused[#loc121, #loc122])
#loc325 = loc(fused[#loc123, #loc124])
#loc326 = loc(fused[#loc127, #loc128])
#loc327 = loc(fused[#loc129, #loc130])
#loc328 = loc(fused[#loc131, #loc132])
#loc329 = loc(fused[#loc133, #loc134])
#loc330 = loc(fused[#loc135, #loc136])
#loc331 = loc(fused[#loc138, #loc137])
#loc332 = loc(fused[#loc140, #loc139])
#loc333 = loc(fused[#loc141, #loc142])
#loc334 = loc(fused[#loc143, #loc144])
#loc335 = loc(fused[#loc145, #loc146])
#loc336 = loc(fused[#loc149, #loc150])
#loc338 = loc(fused[#loc155, #loc156])
#loc339 = loc(fused[#loc157, #loc158])
#loc340 = loc(fused[#loc160, #loc161])
#loc341 = loc(fused[#loc162, #loc163])
#loc342 = loc(fused[#loc164, #loc165])
#loc343 = loc(fused[#loc166, #loc167])
#loc344 = loc(fused[#loc168, #loc169])
#loc345 = loc(fused[#loc170, #loc171])
#loc346 = loc(fused[#loc172, #loc173])
#loc347 = loc(fused[#loc174, #loc175])
#loc348 = loc(fused[#loc176, #loc177])
#loc349 = loc(fused[#loc179, #loc178])
#loc350 = loc(fused[#loc180, #loc181])
#loc351 = loc(fused[#loc182, #loc183])
#loc352 = loc(fused[#loc185, #loc186])
#loc353 = loc(fused[#loc191, #loc192])
#loc354 = loc(fused[#loc193, #loc194])
#loc355 = loc(fused[#loc195, #loc196])
#loc356 = loc(fused[#loc197, #loc194])
#loc357 = loc(fused[#loc199, #loc200])
#loc358 = loc(fused[#loc202, #loc203])
#loc359 = loc(fused[#loc204, #loc205])
#loc360 = loc(fused[#loc207, #loc206])
#loc361 = loc(fused[#loc210, #loc211])
#loc362 = loc(fused[#loc214, #loc215])
#loc363 = loc(fused[#loc216, #loc217])
#loc364 = loc(fused[#loc219, #loc220])
#loc365 = loc(fused[#loc221, #loc222])
#loc366 = loc(fused[#loc223, #loc224])
#loc367 = loc(fused[#loc225, #loc217])
#loc368 = loc(fused[#loc233, #loc234])
#loc369 = loc(fused[#loc235, #loc236])
#loc370 = loc(fused[#loc237, #loc238])
#loc371 = loc(fused[#loc240, #loc241])
#loc372 = loc(fused[#loc242, #loc236])
#loc373 = loc(fused[#loc246, #loc244])
#loc374 = loc(fused[#loc249, #loc250])
#loc375 = loc(fused[#loc251, #loc252])
#loc376 = loc(fused[#loc253, #loc254])
#loc377 = loc(fused[#loc255, #loc252])
#loc378 = loc(fused[#loc258, #loc259])
#loc379 = loc(fused[#loc260, #loc261])
#loc380 = loc(fused[#loc263, #loc264])
#loc381 = loc(fused[#loc265, #loc266, #loc267, #loc261])
#loc382 = loc(fused[#loc268, #loc269])
#loc383 = loc(fused[#loc273, #loc274])
