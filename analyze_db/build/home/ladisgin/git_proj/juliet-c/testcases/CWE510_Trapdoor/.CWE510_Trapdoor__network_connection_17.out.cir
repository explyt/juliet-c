!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc95 = loc("CWE510_Trapdoor__network_connection_17.c":100:10)
#loc96 = loc("CWE510_Trapdoor__network_connection_17.c":100:14)
#loc97 = loc("CWE510_Trapdoor__network_connection_17.c":100:20)
#loc98 = loc("CWE510_Trapdoor__network_connection_17.c":100:32)
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc147 = loc(fused[#loc95, #loc96])
#loc148 = loc(fused[#loc97, #loc98])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__network_connection_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc109)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"123.123.123.123\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc111)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc112)
  cir.func private @close(!s32i) -> !s32i loc(#loc113)
  cir.func no_proto @CWE510_Trapdoor__network_connection_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc115)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc18)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc117)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc21)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc118)
        cir.condition(%4) loc(#loc22)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc121)
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc122)
            %4 = cir.const #cir.int<1> : !s32i loc(#loc29)
            %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc29)
            cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc122)
            cir.scope {
              cir.do {
                %6 = cir.const #cir.int<2> : !s32i loc(#loc32)
                %7 = cir.const #cir.int<1> : !s32i loc(#loc33)
                %8 = cir.const #cir.int<6> : !s32i loc(#loc34)
                %9 = cir.call @socket(%6, %7, %8) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc35)
                cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc124)
                cir.scope {
                  %25 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc40)
                  %26 = cir.const #cir.int<1> : !s32i loc(#loc41)
                  %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc41)
                  %28 = cir.cmp(eq, %25, %27) : !s32i, !cir.bool loc(#loc126)
                  cir.if %28 {
                    cir.break loc(#loc43)
                  } loc(#loc127)
                } loc(#loc125)
                %10 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc128)
                %11 = cir.const #cir.int<0> : !s32i loc(#loc46)
                %12 = cir.const #cir.int<16> : !u64i loc(#loc129)
                cir.libc.memset %12 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc130)
                %13 = cir.const #cir.int<2> : !s32i loc(#loc51)
                %14 = cir.cast(integral, %13 : !s32i), !u16i loc(#loc51)
                %15 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc52)
                cir.store %14, %15 : !u16i, !cir.ptr<!u16i> loc(#loc131)
                %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc5)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc5)
                %18 = cir.call @inet_addr(%17) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc54)
                %19 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc55)
                %20 = cir.get_member %19[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc56)
                cir.store %18, %20 : !u32i, !cir.ptr<!u32i> loc(#loc132)
                %21 = cir.const #cir.int<80> : !s32i loc(#loc59)
                %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc59)
                %23 = cir.call @htons(%22) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc60)
                %24 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc61)
                cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc133)
                cir.scope {
                  %25 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc66)
                  %26 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc135)
                  %27 = cir.const #cir.int<16> : !u64i loc(#loc136)
                  %28 = cir.cast(integral, %27 : !u64i), !u32i loc(#loc136)
                  %29 = cir.call @connect(%25, %26, %28) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc71)
                  %30 = cir.const #cir.int<1> : !s32i loc(#loc72)
                  %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc72)
                  %32 = cir.cmp(eq, %29, %31) : !s32i, !cir.bool loc(#loc137)
                  cir.if %32 {
                    cir.break loc(#loc74)
                  } loc(#loc138)
                } loc(#loc134)
                cir.yield loc(#loc31)
              } while {
                %6 = cir.const #cir.int<0> : !s32i loc(#loc75)
                %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc75)
                cir.condition(%7) loc(#loc75)
              } loc(#loc123)
            } loc(#loc123)
            cir.scope {
              %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc78)
              %7 = cir.const #cir.int<1> : !s32i loc(#loc79)
              %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc79)
              %9 = cir.cmp(ne, %6, %8) : !s32i, !cir.bool loc(#loc140)
              cir.if %9 {
                %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc81)
                %11 = cir.call @close(%10) : (!s32i) -> !s32i loc(#loc82)
              } loc(#loc141)
            } loc(#loc139)
          } loc(#loc120)
        } loc(#loc119)
        cir.yield loc(#loc17)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc84)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc142)
        cir.yield loc(#loc116)
      } loc(#loc116)
    } loc(#loc116)
    cir.return loc(#loc13)
  } loc(#loc114)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc143)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc144)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc92)
  cir.func @main(%arg0: !s32i loc(fused[#loc95, #loc96]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc97, #loc98])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc148)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc94)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc99)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc100)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc101)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc101)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc102)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc91)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %8 = cir.get_global @CWE510_Trapdoor__network_connection_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call @CWE510_Trapdoor__network_connection_17_bad() : () -> () loc(#loc104)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc92)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc107)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    cir.return %12 : !s32i loc(#loc150)
  } loc(#loc146)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__network_connection_17.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE510_Trapdoor__network_connection_17.c":67:53)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/unistd.h":358:1)
#loc11 = loc("/usr/include/unistd.h":358:27)
#loc12 = loc("CWE510_Trapdoor__network_connection_17.c":39:1)
#loc13 = loc("CWE510_Trapdoor__network_connection_17.c":89:1)
#loc14 = loc("CWE510_Trapdoor__network_connection_17.c":41:5)
#loc15 = loc("CWE510_Trapdoor__network_connection_17.c":41:9)
#loc16 = loc("CWE510_Trapdoor__network_connection_17.c":42:5)
#loc17 = loc("CWE510_Trapdoor__network_connection_17.c":88:5)
#loc18 = loc("CWE510_Trapdoor__network_connection_17.c":42:13)
#loc19 = loc("CWE510_Trapdoor__network_connection_17.c":42:9)
#loc20 = loc("CWE510_Trapdoor__network_connection_17.c":42:16)
#loc21 = loc("CWE510_Trapdoor__network_connection_17.c":42:20)
#loc22 = loc("CWE510_Trapdoor__network_connection_17.c":42:18)
#loc23 = loc("CWE510_Trapdoor__network_connection_17.c":43:5)
#loc24 = loc("CWE510_Trapdoor__network_connection_17.c":44:9)
#loc25 = loc("CWE510_Trapdoor__network_connection_17.c":87:9)
#loc26 = loc("CWE510_Trapdoor__network_connection_17.c":49:13)
#loc27 = loc("CWE510_Trapdoor__network_connection_17.c":49:32)
#loc28 = loc("CWE510_Trapdoor__network_connection_17.c":50:13)
#loc29 = loc("CWE510_Trapdoor__network_connection_17.c":50:36)
#loc30 = loc("CWE510_Trapdoor__network_connection_17.c":51:13)
#loc31 = loc("CWE510_Trapdoor__network_connection_17.c":76:21)
#loc32 = loc("CWE510_Trapdoor__network_connection_17.c":60:40)
#loc33 = loc("CWE510_Trapdoor__network_connection_17.c":60:49)
#loc34 = loc("CWE510_Trapdoor__network_connection_17.c":60:62)
#loc35 = loc("CWE510_Trapdoor__network_connection_17.c":60:33)
#loc36 = loc("CWE510_Trapdoor__network_connection_17.c":60:17)
#loc37 = loc("CWE510_Trapdoor__network_connection_17.c":60:73)
#loc38 = loc("CWE510_Trapdoor__network_connection_17.c":61:17)
#loc39 = loc("CWE510_Trapdoor__network_connection_17.c":64:17)
#loc40 = loc("CWE510_Trapdoor__network_connection_17.c":61:21)
#loc41 = loc("CWE510_Trapdoor__network_connection_17.c":61:38)
#loc42 = loc("CWE510_Trapdoor__network_connection_17.c":62:17)
#loc43 = loc("CWE510_Trapdoor__network_connection_17.c":63:21)
#loc44 = loc("CWE510_Trapdoor__network_connection_17.c":65:24)
#loc45 = loc("CWE510_Trapdoor__network_connection_17.c":65:25)
#loc46 = loc("CWE510_Trapdoor__network_connection_17.c":65:34)
#loc47 = loc("CWE510_Trapdoor__network_connection_17.c":65:37)
#loc48 = loc("CWE510_Trapdoor__network_connection_17.c":65:51)
#loc49 = loc("CWE510_Trapdoor__network_connection_17.c":65:17)
#loc50 = loc("CWE510_Trapdoor__network_connection_17.c":65:52)
#loc51 = loc("CWE510_Trapdoor__network_connection_17.c":66:38)
#loc52 = loc("/usr/include/netinet/in.h":249:5)
#loc53 = loc("CWE510_Trapdoor__network_connection_17.c":66:17)
#loc54 = loc("CWE510_Trapdoor__network_connection_17.c":67:43)
#loc55 = loc("/usr/include/netinet/in.h":251:20)
#loc56 = loc("/usr/include/netinet/in.h":33:15)
#loc57 = loc("CWE510_Trapdoor__network_connection_17.c":67:17)
#loc58 = loc("CWE510_Trapdoor__network_connection_17.c":67:63)
#loc59 = loc("CWE510_Trapdoor__network_connection_17.c":68:42)
#loc60 = loc("CWE510_Trapdoor__network_connection_17.c":68:36)
#loc61 = loc("/usr/include/netinet/in.h":250:15)
#loc62 = loc("CWE510_Trapdoor__network_connection_17.c":68:17)
#loc63 = loc("CWE510_Trapdoor__network_connection_17.c":68:44)
#loc64 = loc("CWE510_Trapdoor__network_connection_17.c":70:17)
#loc65 = loc("CWE510_Trapdoor__network_connection_17.c":73:17)
#loc66 = loc("CWE510_Trapdoor__network_connection_17.c":70:29)
#loc67 = loc("CWE510_Trapdoor__network_connection_17.c":70:62)
#loc68 = loc("CWE510_Trapdoor__network_connection_17.c":70:63)
#loc69 = loc("CWE510_Trapdoor__network_connection_17.c":70:72)
#loc70 = loc("CWE510_Trapdoor__network_connection_17.c":70:86)
#loc71 = loc("CWE510_Trapdoor__network_connection_17.c":70:21)
#loc72 = loc("CWE510_Trapdoor__network_connection_17.c":70:92)
#loc73 = loc("CWE510_Trapdoor__network_connection_17.c":71:17)
#loc74 = loc("CWE510_Trapdoor__network_connection_17.c":72:21)
#loc75 = loc("CWE510_Trapdoor__network_connection_17.c":76:20)
#loc76 = loc("CWE510_Trapdoor__network_connection_17.c":77:13)
#loc77 = loc("CWE510_Trapdoor__network_connection_17.c":80:13)
#loc78 = loc("CWE510_Trapdoor__network_connection_17.c":77:17)
#loc79 = loc("CWE510_Trapdoor__network_connection_17.c":77:34)
#loc80 = loc("CWE510_Trapdoor__network_connection_17.c":78:13)
#loc81 = loc("CWE510_Trapdoor__network_connection_17.c":79:30)
#loc82 = loc("CWE510_Trapdoor__network_connection_17.c":79:17)
#loc83 = loc("CWE510_Trapdoor__network_connection_17.c":42:24)
#loc84 = loc("CWE510_Trapdoor__network_connection_17.c":42:23)
#loc85 = loc("/usr/include/stdlib.h":575:1)
#loc86 = loc("/usr/include/stdlib.h":575:41)
#loc87 = loc("/usr/include/time.h":76:1)
#loc88 = loc("/usr/include/time.h":76:38)
#loc89 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc90 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc91 = loc("CWE510_Trapdoor__network_connection_17.c":105:15)
#loc92 = loc("CWE510_Trapdoor__network_connection_17.c":107:15)
#loc93 = loc("CWE510_Trapdoor__network_connection_17.c":100:1)
#loc94 = loc("CWE510_Trapdoor__network_connection_17.c":110:1)
#loc99 = loc("CWE510_Trapdoor__network_connection_17.c":101:1)
#loc100 = loc("CWE510_Trapdoor__network_connection_17.c":103:27)
#loc101 = loc("CWE510_Trapdoor__network_connection_17.c":103:22)
#loc102 = loc("CWE510_Trapdoor__network_connection_17.c":103:5)
#loc103 = loc("CWE510_Trapdoor__network_connection_17.c":105:5)
#loc104 = loc("CWE510_Trapdoor__network_connection_17.c":106:5)
#loc105 = loc("CWE510_Trapdoor__network_connection_17.c":106:48)
#loc106 = loc("CWE510_Trapdoor__network_connection_17.c":107:5)
#loc107 = loc("CWE510_Trapdoor__network_connection_17.c":109:12)
#loc108 = loc("CWE510_Trapdoor__network_connection_17.c":109:5)
#loc109 = loc(fused[#loc1, #loc2])
#loc110 = loc(fused[#loc3, #loc4])
#loc111 = loc(fused[#loc6, #loc7])
#loc112 = loc(fused[#loc8, #loc9])
#loc113 = loc(fused[#loc10, #loc11])
#loc114 = loc(fused[#loc12, #loc13])
#loc115 = loc(fused[#loc14, #loc15])
#loc116 = loc(fused[#loc16, #loc17])
#loc117 = loc(fused[#loc19, #loc18])
#loc118 = loc(fused[#loc20, #loc21])
#loc119 = loc(fused[#loc23, #loc17])
#loc120 = loc(fused[#loc24, #loc25])
#loc121 = loc(fused[#loc26, #loc27])
#loc122 = loc(fused[#loc28, #loc29])
#loc123 = loc(fused[#loc30, #loc31])
#loc124 = loc(fused[#loc36, #loc37])
#loc125 = loc(fused[#loc38, #loc39])
#loc126 = loc(fused[#loc40, #loc41])
#loc127 = loc(fused[#loc42, #loc39])
#loc128 = loc(fused[#loc44, #loc45])
#loc129 = loc(fused[#loc47, #loc48])
#loc130 = loc(fused[#loc49, #loc50])
#loc131 = loc(fused[#loc53, #loc51])
#loc132 = loc(fused[#loc57, #loc58])
#loc133 = loc(fused[#loc62, #loc63])
#loc134 = loc(fused[#loc64, #loc65])
#loc135 = loc(fused[#loc67, #loc68])
#loc136 = loc(fused[#loc69, #loc70])
#loc137 = loc(fused[#loc71, #loc72])
#loc138 = loc(fused[#loc73, #loc65])
#loc139 = loc(fused[#loc76, #loc77])
#loc140 = loc(fused[#loc78, #loc79])
#loc141 = loc(fused[#loc80, #loc77])
#loc142 = loc(fused[#loc84, #loc83])
#loc143 = loc(fused[#loc85, #loc86])
#loc144 = loc(fused[#loc87, #loc88])
#loc145 = loc(fused[#loc89, #loc90])
#loc146 = loc(fused[#loc93, #loc94])
#loc149 = loc(fused[#loc104, #loc105])
#loc150 = loc(fused[#loc108, #loc107])
