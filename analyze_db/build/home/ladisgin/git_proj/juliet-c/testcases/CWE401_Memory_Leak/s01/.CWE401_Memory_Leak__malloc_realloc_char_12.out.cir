!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":136:10)
#loc125 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":136:14)
#loc126 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":136:20)
#loc127 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":136:32)
#loc289 = loc(fused[#loc124, #loc125])
#loc290 = loc(fused[#loc126, #loc127])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc241)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc242)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc243)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc244)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc245)
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc246)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"New String\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc14)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc247)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_char_12_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc250)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc250)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc21)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc21)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc253)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc30)
          %6 = cir.const #cir.int<100> : !s32i loc(#loc31)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc31)
          %8 = cir.const #cir.int<1> : !u64i loc(#loc254)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc255)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc30)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc256)
          cir.store %11, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc253)
          cir.scope {
            %27 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc37)
            %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc258)
            cir.if %30 {
              %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc39)
              %32 = cir.const #cir.int<1> : !s32i loc(#loc40)
              %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc41)
              cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc39)
            } loc(#loc259)
          } loc(#loc257)
          %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc42)
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc9)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc9)
          %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc42)
          %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc45)
          %18 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc46)
          %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
          %21 = cir.const #cir.int<130000> : !s32i loc(#loc48)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc48)
          %23 = cir.const #cir.int<1> : !u64i loc(#loc260)
          %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc261)
          %25 = cir.call @realloc(%20, %24) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc46)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc262)
          cir.store %26, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc263)
          cir.scope {
            %27 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc57)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc57)
            %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc265)
            cir.if %30 {
              %31 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc59)
              %32 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
              %33 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc14)
              %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc14)
              %35 = cir.call @strcpy(%32, %34) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc59)
              %36 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
              cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc62)
              %37 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc63)
              %38 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
              %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc64)
              cir.call @free(%39) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc63)
            } loc(#loc266)
          } loc(#loc264)
        } loc(#loc252)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc268)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc269)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc71)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc72)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc72)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc270)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc271)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc71)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc272)
          cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc268)
          cir.scope {
            %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc78)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc78)
            %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc274)
            cir.if %34 {
              %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc80)
              %36 = cir.const #cir.int<1> : !s32i loc(#loc81)
              %37 = cir.unary(minus, %36) : !s32i, !s32i loc(#loc82)
              cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc80)
            } loc(#loc275)
          } loc(#loc273)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc83)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc85)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc85)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc83)
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc87)
          %19 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc88)
          %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
          %22 = cir.const #cir.int<130000> : !s32i loc(#loc90)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc90)
          %24 = cir.const #cir.int<1> : !u64i loc(#loc276)
          %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc277)
          %26 = cir.call @realloc(%21, %25) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc88)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc278)
          cir.store %27, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc279)
          cir.scope {
            %31 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc99)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc99)
            %34 = cir.cmp(ne, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc281)
            cir.if %34 {
              %35 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
              cir.store %35, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc283)
              %36 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc103)
              %37 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
              %38 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc105)
              %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc105)
              %40 = cir.call @strcpy(%37, %39) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc103)
              %41 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
              cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc107)
            } loc(#loc282)
          } loc(#loc280)
          %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc108)
          %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
          cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc108)
        } loc(#loc267)
      } loc(#loc251)
    } loc(#loc249)
    cir.return loc(#loc18)
  } loc(#loc248)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_char_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc285)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc112)
    cir.return loc(#loc111)
  } loc(#loc284)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc286)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc287)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc121)
  cir.func @main(%arg0: !s32i loc(fused[#loc124, #loc125]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc126, #loc127])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc289)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc290)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc123)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc128)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc129)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc130)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc130)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc131)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc118)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    %8 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_char_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc291)
    cir.call @CWE401_Memory_Leak__malloc_realloc_char_12_good() : () -> () loc(#loc133)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc119)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc120)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc120)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    %13 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_char_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc292)
    cir.call @CWE401_Memory_Leak__malloc_realloc_char_12_bad() : () -> () loc(#loc137)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc121)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc140)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc293)
    cir.return %17 : !s32i loc(#loc293)
  } loc(#loc288)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc296)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc296)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc146)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc146)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc299)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc300)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc157)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc158)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc158)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc301)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc302)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc157)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc303)
          cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc299)
          cir.scope {
            %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc164)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc164)
            %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc305)
            cir.if %34 {
              %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc166)
              %36 = cir.const #cir.int<1> : !s32i loc(#loc167)
              %37 = cir.unary(minus, %36) : !s32i, !s32i loc(#loc168)
              cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc166)
            } loc(#loc306)
          } loc(#loc304)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc169)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc171)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc171)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc169)
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc173)
          %19 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc174)
          %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc175)
          %22 = cir.const #cir.int<130000> : !s32i loc(#loc176)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc176)
          %24 = cir.const #cir.int<1> : !u64i loc(#loc307)
          %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc308)
          %26 = cir.call @realloc(%21, %25) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc174)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc309)
          cir.store %27, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc310)
          cir.scope {
            %31 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc184)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc185)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc185)
            %34 = cir.cmp(ne, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc312)
            cir.if %34 {
              %35 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc187)
              cir.store %35, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc314)
              %36 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc189)
              %37 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
              %38 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc191)
              %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc191)
              %40 = cir.call @strcpy(%37, %39) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc189)
              %41 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
              cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc193)
            } loc(#loc313)
          } loc(#loc311)
          %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc194)
          %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc195)
          cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc194)
        } loc(#loc298)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc316)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc317)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc202)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc203)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc203)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc318)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc319)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc202)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc320)
          cir.store %12, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc316)
          cir.scope {
            %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc208)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc209)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc209)
            %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc322)
            cir.if %34 {
              %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc211)
              %36 = cir.const #cir.int<1> : !s32i loc(#loc212)
              %37 = cir.unary(minus, %36) : !s32i, !s32i loc(#loc213)
              cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc211)
            } loc(#loc323)
          } loc(#loc321)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc214)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc215)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc216)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc216)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc214)
          %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc217)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc218)
          %19 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc219)
          %20 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc220)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc220)
          %22 = cir.const #cir.int<130000> : !s32i loc(#loc221)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc221)
          %24 = cir.const #cir.int<1> : !u64i loc(#loc324)
          %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc325)
          %26 = cir.call @realloc(%21, %25) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc219)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc326)
          cir.store %27, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc327)
          cir.scope {
            %31 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc229)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc230)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc230)
            %34 = cir.cmp(ne, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc329)
            cir.if %34 {
              %35 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc232)
              cir.store %35, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc331)
              %36 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc234)
              %37 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc235)
              %38 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc236)
              %39 = cir.cast(array_to_ptrdecay, %38 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc236)
              %40 = cir.call @strcpy(%37, %39) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc234)
              %41 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc237)
              cir.call @printLine(%41) : (!cir.ptr<!s8i>) -> () loc(#loc238)
            } loc(#loc330)
          } loc(#loc328)
          %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc239)
          %29 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc240)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc240)
          cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc239)
        } loc(#loc315)
      } loc(#loc297)
    } loc(#loc295)
    cir.return loc(#loc143)
  } loc(#loc294)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":32:26)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":683:1)
#loc13 = loc("/usr/include/stdlib.h":684:14)
#loc14 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":39:30)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":24:1)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":67:1)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":26:5)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":66:5)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":26:8)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":26:33)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":27:5)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":44:5)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":46:5)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":28:9)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":43:9)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":29:13)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":29:58)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":29:35)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":29:42)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":29:46)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":29:57)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":30:13)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":30:41)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":30:17)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":30:25)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":30:31)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":30:32)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":30:38)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":30:37)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":32:13)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":32:20)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":33:23)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":33:13)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":35:28)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":35:36)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":35:43)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":35:51)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":35:62)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":35:42)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":35:63)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":35:13)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":36:13)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":42:13)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":36:17)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":36:25)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":37:13)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":39:17)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":39:24)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":40:27)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":40:17)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":41:17)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":41:22)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":47:9)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":65:9)
#loc67 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":48:13)
#loc68 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":48:58)
#loc69 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":50:13)
#loc70 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":50:20)
#loc71 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":48:35)
#loc72 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":48:42)
#loc73 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":48:46)
#loc74 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":48:57)
#loc75 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":49:13)
#loc76 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":49:41)
#loc77 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":49:17)
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":49:25)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":49:31)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":49:32)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":49:38)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":49:37)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":52:13)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":52:20)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":52:26)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":53:23)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":53:13)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":54:31)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":54:39)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":54:46)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":54:54)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":54:65)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":54:45)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":54:66)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":54:13)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":57:13)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":63:13)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":57:17)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":57:28)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":58:13)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":59:24)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":59:17)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":61:17)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":61:24)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":61:30)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":62:27)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":62:17)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":64:13)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":64:18)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":122:1)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":125:1)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":124:5)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":124:11)
#loc114 = loc("/usr/include/stdlib.h":575:1)
#loc115 = loc("/usr/include/stdlib.h":575:41)
#loc116 = loc("/usr/include/time.h":76:1)
#loc117 = loc("/usr/include/time.h":76:38)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":141:15)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":143:15)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":146:15)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":148:15)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":136:1)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":151:1)
#loc128 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":137:1)
#loc129 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":139:27)
#loc130 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":139:22)
#loc131 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":139:5)
#loc132 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":141:5)
#loc133 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":142:5)
#loc134 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":142:53)
#loc135 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":143:5)
#loc136 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":146:5)
#loc137 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":147:5)
#loc138 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":147:52)
#loc139 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":148:5)
#loc140 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":150:12)
#loc141 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":150:5)
#loc142 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":74:1)
#loc143 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":120:1)
#loc144 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":76:5)
#loc145 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":119:5)
#loc146 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":76:8)
#loc147 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":76:33)
#loc148 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":77:5)
#loc149 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":97:5)
#loc150 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":99:5)
#loc151 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":78:9)
#loc152 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":96:9)
#loc153 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":79:13)
#loc154 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":79:58)
#loc155 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":81:13)
#loc156 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":81:20)
#loc157 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":79:35)
#loc158 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":79:42)
#loc159 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":79:46)
#loc160 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":79:57)
#loc161 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":80:13)
#loc162 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":80:41)
#loc163 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":80:17)
#loc164 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":80:25)
#loc165 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":80:31)
#loc166 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":80:32)
#loc167 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":80:38)
#loc168 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":80:37)
#loc169 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":83:13)
#loc170 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":83:20)
#loc171 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":83:26)
#loc172 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":84:23)
#loc173 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":84:13)
#loc174 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":85:31)
#loc175 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":85:39)
#loc176 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":85:46)
#loc177 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":85:54)
#loc178 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":85:65)
#loc179 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":85:45)
#loc180 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":85:66)
#loc181 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":85:13)
#loc182 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":88:13)
#loc183 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":94:13)
#loc184 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":88:17)
#loc185 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":88:28)
#loc186 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":89:13)
#loc187 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":90:24)
#loc188 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":90:17)
#loc189 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":92:17)
#loc190 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":92:24)
#loc191 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":92:30)
#loc192 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":93:27)
#loc193 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":93:17)
#loc194 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":95:13)
#loc195 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":95:18)
#loc196 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":100:9)
#loc197 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":118:9)
#loc198 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":101:13)
#loc199 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":101:58)
#loc200 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":103:13)
#loc201 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":103:20)
#loc202 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":101:35)
#loc203 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":101:42)
#loc204 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":101:46)
#loc205 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":101:57)
#loc206 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":102:13)
#loc207 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":102:41)
#loc208 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":102:17)
#loc209 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":102:25)
#loc210 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":102:31)
#loc211 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":102:32)
#loc212 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":102:38)
#loc213 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":102:37)
#loc214 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":105:13)
#loc215 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":105:20)
#loc216 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":105:26)
#loc217 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":106:23)
#loc218 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":106:13)
#loc219 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":107:31)
#loc220 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":107:39)
#loc221 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":107:46)
#loc222 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":107:54)
#loc223 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":107:65)
#loc224 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":107:45)
#loc225 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":107:66)
#loc226 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":107:13)
#loc227 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":110:13)
#loc228 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":116:13)
#loc229 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":110:17)
#loc230 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":110:28)
#loc231 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":111:13)
#loc232 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":112:24)
#loc233 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":112:17)
#loc234 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":114:17)
#loc235 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":114:24)
#loc236 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":114:30)
#loc237 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":115:27)
#loc238 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":115:17)
#loc239 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":117:13)
#loc240 = loc("CWE401_Memory_Leak__malloc_realloc_char_12.c":117:18)
#loc241 = loc(fused[#loc1, #loc2])
#loc242 = loc(fused[#loc3, #loc4])
#loc243 = loc(fused[#loc5, #loc6])
#loc244 = loc(fused[#loc7, #loc8])
#loc245 = loc(fused[#loc10, #loc11])
#loc246 = loc(fused[#loc12, #loc13])
#loc247 = loc(fused[#loc15, #loc16])
#loc248 = loc(fused[#loc17, #loc18])
#loc249 = loc(fused[#loc19, #loc20])
#loc250 = loc(fused[#loc21, #loc22])
#loc251 = loc(fused[#loc23, #loc24, #loc25, #loc20])
#loc252 = loc(fused[#loc26, #loc27])
#loc253 = loc(fused[#loc28, #loc29])
#loc254 = loc(fused[#loc32, #loc33])
#loc255 = loc(fused[#loc31, #loc33])
#loc256 = loc(fused[#loc30, #loc29])
#loc257 = loc(fused[#loc34, #loc35])
#loc258 = loc(fused[#loc36, #loc37])
#loc259 = loc(fused[#loc38, #loc35])
#loc260 = loc(fused[#loc49, #loc50])
#loc261 = loc(fused[#loc51, #loc50])
#loc262 = loc(fused[#loc46, #loc52])
#loc263 = loc(fused[#loc53, #loc52])
#loc264 = loc(fused[#loc54, #loc55])
#loc265 = loc(fused[#loc56, #loc57])
#loc266 = loc(fused[#loc58, #loc55])
#loc267 = loc(fused[#loc65, #loc66])
#loc268 = loc(fused[#loc67, #loc68])
#loc269 = loc(fused[#loc69, #loc70])
#loc270 = loc(fused[#loc73, #loc74])
#loc271 = loc(fused[#loc72, #loc74])
#loc272 = loc(fused[#loc71, #loc68])
#loc273 = loc(fused[#loc75, #loc76])
#loc274 = loc(fused[#loc77, #loc78])
#loc275 = loc(fused[#loc79, #loc76])
#loc276 = loc(fused[#loc91, #loc92])
#loc277 = loc(fused[#loc93, #loc92])
#loc278 = loc(fused[#loc88, #loc94])
#loc279 = loc(fused[#loc95, #loc94])
#loc280 = loc(fused[#loc96, #loc97])
#loc281 = loc(fused[#loc98, #loc99])
#loc282 = loc(fused[#loc100, #loc97])
#loc283 = loc(fused[#loc102, #loc101])
#loc284 = loc(fused[#loc110, #loc111])
#loc285 = loc(fused[#loc112, #loc113])
#loc286 = loc(fused[#loc114, #loc115])
#loc287 = loc(fused[#loc116, #loc117])
#loc288 = loc(fused[#loc122, #loc123])
#loc291 = loc(fused[#loc133, #loc134])
#loc292 = loc(fused[#loc137, #loc138])
#loc293 = loc(fused[#loc141, #loc140])
#loc294 = loc(fused[#loc142, #loc143])
#loc295 = loc(fused[#loc144, #loc145])
#loc296 = loc(fused[#loc146, #loc147])
#loc297 = loc(fused[#loc148, #loc149, #loc150, #loc145])
#loc298 = loc(fused[#loc151, #loc152])
#loc299 = loc(fused[#loc153, #loc154])
#loc300 = loc(fused[#loc155, #loc156])
#loc301 = loc(fused[#loc159, #loc160])
#loc302 = loc(fused[#loc158, #loc160])
#loc303 = loc(fused[#loc157, #loc154])
#loc304 = loc(fused[#loc161, #loc162])
#loc305 = loc(fused[#loc163, #loc164])
#loc306 = loc(fused[#loc165, #loc162])
#loc307 = loc(fused[#loc177, #loc178])
#loc308 = loc(fused[#loc179, #loc178])
#loc309 = loc(fused[#loc174, #loc180])
#loc310 = loc(fused[#loc181, #loc180])
#loc311 = loc(fused[#loc182, #loc183])
#loc312 = loc(fused[#loc184, #loc185])
#loc313 = loc(fused[#loc186, #loc183])
#loc314 = loc(fused[#loc188, #loc187])
#loc315 = loc(fused[#loc196, #loc197])
#loc316 = loc(fused[#loc198, #loc199])
#loc317 = loc(fused[#loc200, #loc201])
#loc318 = loc(fused[#loc204, #loc205])
#loc319 = loc(fused[#loc203, #loc205])
#loc320 = loc(fused[#loc202, #loc199])
#loc321 = loc(fused[#loc206, #loc207])
#loc322 = loc(fused[#loc208, #loc209])
#loc323 = loc(fused[#loc210, #loc207])
#loc324 = loc(fused[#loc222, #loc223])
#loc325 = loc(fused[#loc224, #loc223])
#loc326 = loc(fused[#loc219, #loc225])
#loc327 = loc(fused[#loc226, #loc225])
#loc328 = loc(fused[#loc227, #loc228])
#loc329 = loc(fused[#loc229, #loc230])
#loc330 = loc(fused[#loc231, #loc228])
#loc331 = loc(fused[#loc233, #loc232])
