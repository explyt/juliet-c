!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc12 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":24:22)
#loc13 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":24:26)
#loc65 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":83:26)
#loc66 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":83:30)
#loc119 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":61:26)
#loc120 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":61:30)
#loc149 = loc(fused[#loc12, #loc13])
#loc169 = loc(fused[#loc65, #loc66])
#loc187 = loc(fused[#loc119, #loc120])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_fgets_postinc_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc144)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc145)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc146)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc147)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func internal private  @badSource(%arg0: !s32i loc(fused[#loc12, #loc13])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc149)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc11)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc14)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc151)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc151)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc151)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc21)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc22)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc22)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc22)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc22)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc22)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc22)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc22)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc22)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc145)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc24)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc25)
        %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc153)
        %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc26)
        cir.if %21 {
          %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc30)
          %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc31)
          cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc155)
        } else {
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc34)
        } loc(#loc154)
      } loc(#loc152)
    } loc(#loc150)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.return %3 : !s32i loc(#loc156)
  } loc(#loc148)
  cir.func private  @printIntLine(!s32i) loc(#loc157)
  cir.func no_proto  @CWE190_Integer_Overflow__int_fgets_postinc_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc159)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc43)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    %3 = cir.call @badSource(%2) : (!s32i) -> !s32i loc(#loc46)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc163)
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc53)
      %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc54)
      cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
      %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc52)
      cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc163)
      %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc55)
      cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc56)
    } loc(#loc162)
    cir.return loc(#loc40)
  } loc(#loc158)
  cir.func no_proto  @CWE190_Integer_Overflow__int_fgets_postinc_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    cir.return loc(#loc58)
  } loc(#loc165)
  cir.func internal private  @goodB2GSource(%arg0: !s32i loc(fused[#loc65, #loc66])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc169)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc64)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc67)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc171)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc171)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc171)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc74)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc75)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc75)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc75)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc75)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc75)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc75)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc75)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc75)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc145)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc76)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc77)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc78)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc78)
        %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc173)
        %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc79)
        cir.if %21 {
          %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc83)
          %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc84)
          cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc175)
        } else {
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc87)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc87)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc88)
        } loc(#loc174)
      } loc(#loc172)
    } loc(#loc170)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    cir.return %3 : !s32i loc(#loc176)
  } loc(#loc168)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc91)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc178)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc96)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %3 = cir.call @goodB2GSource(%2) : (!s32i) -> !s32i loc(#loc99)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc104)
      %5 = cir.const #cir.int<2147483647> : !s32i loc(#loc105)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !s32i loc(#loc182)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc106)
      cir.if %7 {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc184)
        %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
        %10 = cir.unary(inc, %9) : !s32i, !s32i loc(#loc113)
        cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc185)
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
        cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc184)
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc114)
        cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc115)
      } else {
        %8 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc91)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc91)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc116)
      } loc(#loc183)
    } loc(#loc181)
    cir.return loc(#loc93)
  } loc(#loc177)
  cir.func internal private  @goodG2BSource(%arg0: !s32i loc(fused[#loc119, #loc120])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc187)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc118)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc122)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc189)
    cir.return %4 : !s32i loc(#loc189)
  } loc(#loc186)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc191)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc130)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %3 = cir.call @goodG2BSource(%2) : (!s32i) -> !s32i loc(#loc133)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc195)
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc140)
      %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc141)
      cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc196)
      %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
      cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc195)
      %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc142)
      cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc143)
    } loc(#loc194)
    cir.return loc(#loc127)
  } loc(#loc190)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_fgets_postinc_42.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":36:23)
#loc10 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":24:1)
#loc11 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":40:1)
#loc14 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":25:1)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":26:5)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":38:5)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":27:9)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":27:45)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":29:9)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":37:9)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":29:19)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":29:32)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":29:49)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":29:13)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":29:59)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":29:56)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":30:9)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":33:9)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":35:9)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":32:25)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":32:20)
#loc32 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":32:13)
#loc33 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":32:36)
#loc34 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":36:13)
#loc35 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":39:12)
#loc36 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":39:5)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc39 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":42:1)
#loc40 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":54:1)
#loc41 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":44:5)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":44:9)
#loc43 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":46:12)
#loc44 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":46:5)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":47:22)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":47:12)
#loc47 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":47:5)
#loc48 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":47:26)
#loc49 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":48:5)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":53:5)
#loc51 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":51:9)
#loc52 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":51:22)
#loc53 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":50:13)
#loc54 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":50:9)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":52:22)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":52:9)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":120:1)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":124:1)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":122:5)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":122:13)
#loc61 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":123:5)
#loc62 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":123:13)
#loc63 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":83:1)
#loc64 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":99:1)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":84:1)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":85:5)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":97:5)
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":86:9)
#loc71 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":86:45)
#loc72 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":88:9)
#loc73 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":96:9)
#loc74 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":88:19)
#loc75 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":88:32)
#loc76 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":88:49)
#loc77 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":88:13)
#loc78 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":88:59)
#loc79 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":88:56)
#loc80 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":89:9)
#loc81 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":92:9)
#loc82 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":94:9)
#loc83 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":91:25)
#loc84 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":91:20)
#loc85 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":91:13)
#loc86 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":91:36)
#loc87 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":95:23)
#loc88 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":95:13)
#loc89 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":98:12)
#loc90 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":98:5)
#loc91 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":116:19)
#loc92 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":101:1)
#loc93 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":118:1)
#loc94 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":103:5)
#loc95 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":103:9)
#loc96 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":105:12)
#loc97 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":105:5)
#loc98 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":106:26)
#loc99 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":106:12)
#loc100 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":106:5)
#loc101 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":106:30)
#loc102 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":108:5)
#loc103 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":117:5)
#loc104 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":108:9)
#loc105 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":108:16)
#loc106 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":108:14)
#loc107 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":109:5)
#loc108 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":113:5)
#loc109 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":115:5)
#loc110 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":111:9)
#loc111 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":111:22)
#loc112 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":110:13)
#loc113 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":110:9)
#loc114 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":112:22)
#loc115 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":112:9)
#loc116 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":116:9)
#loc117 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":61:1)
#loc118 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":66:1)
#loc121 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":62:1)
#loc122 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":64:12)
#loc123 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":64:5)
#loc124 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":65:12)
#loc125 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":65:5)
#loc126 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":68:1)
#loc127 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":80:1)
#loc128 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":70:5)
#loc129 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":70:9)
#loc130 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":72:12)
#loc131 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":72:5)
#loc132 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":73:26)
#loc133 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":73:12)
#loc134 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":73:5)
#loc135 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":73:30)
#loc136 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":74:5)
#loc137 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":79:5)
#loc138 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":77:9)
#loc139 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":77:22)
#loc140 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":76:13)
#loc141 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":76:9)
#loc142 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":78:22)
#loc143 = loc("CWE190_Integer_Overflow__int_fgets_postinc_42.c":78:9)
#loc144 = loc(fused[#loc1, #loc2])
#loc145 = loc(fused[#loc3, #loc4])
#loc146 = loc(fused[#loc5, #loc6])
#loc147 = loc(fused[#loc7, #loc8])
#loc148 = loc(fused[#loc10, #loc11])
#loc150 = loc(fused[#loc15, #loc16])
#loc151 = loc(fused[#loc17, #loc18])
#loc152 = loc(fused[#loc19, #loc20])
#loc153 = loc(fused[#loc24, #loc25])
#loc154 = loc(fused[#loc27, #loc28, #loc29, #loc20])
#loc155 = loc(fused[#loc32, #loc33])
#loc156 = loc(fused[#loc36, #loc35])
#loc157 = loc(fused[#loc37, #loc38])
#loc158 = loc(fused[#loc39, #loc40])
#loc159 = loc(fused[#loc41, #loc42])
#loc160 = loc(fused[#loc44, #loc43])
#loc161 = loc(fused[#loc47, #loc48])
#loc162 = loc(fused[#loc49, #loc50])
#loc163 = loc(fused[#loc51, #loc52])
#loc164 = loc(fused[#loc54, #loc53])
#loc165 = loc(fused[#loc57, #loc58])
#loc166 = loc(fused[#loc59, #loc60])
#loc167 = loc(fused[#loc61, #loc62])
#loc168 = loc(fused[#loc63, #loc64])
#loc170 = loc(fused[#loc68, #loc69])
#loc171 = loc(fused[#loc70, #loc71])
#loc172 = loc(fused[#loc72, #loc73])
#loc173 = loc(fused[#loc77, #loc78])
#loc174 = loc(fused[#loc80, #loc81, #loc82, #loc73])
#loc175 = loc(fused[#loc85, #loc86])
#loc176 = loc(fused[#loc90, #loc89])
#loc177 = loc(fused[#loc92, #loc93])
#loc178 = loc(fused[#loc94, #loc95])
#loc179 = loc(fused[#loc97, #loc96])
#loc180 = loc(fused[#loc100, #loc101])
#loc181 = loc(fused[#loc102, #loc103])
#loc182 = loc(fused[#loc104, #loc105])
#loc183 = loc(fused[#loc107, #loc108, #loc109, #loc103])
#loc184 = loc(fused[#loc110, #loc111])
#loc185 = loc(fused[#loc113, #loc112])
#loc186 = loc(fused[#loc117, #loc118])
#loc188 = loc(fused[#loc123, #loc122])
#loc189 = loc(fused[#loc125, #loc124])
#loc190 = loc(fused[#loc126, #loc127])
#loc191 = loc(fused[#loc128, #loc129])
#loc192 = loc(fused[#loc131, #loc130])
#loc193 = loc(fused[#loc134, #loc135])
#loc194 = loc(fused[#loc136, #loc137])
#loc195 = loc(fused[#loc138, #loc139])
#loc196 = loc(fused[#loc141, #loc140])
