!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_calloc_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc100)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc101)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Initialize\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc102)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc103)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__char_calloc_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc105)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc16)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc17)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc17)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc107)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc108)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
    cir.scope {
      %8 = cir.const #cir.int<1> : !s32i loc(#loc24)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc24)
      cir.if %9 {
        %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc26)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
        %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc5)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc5)
        %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc26)
        %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
        cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc29)
        %16 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc30)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
        cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc30)
      } loc(#loc111)
    } loc(#loc110)
    cir.return loc(#loc11)
  } loc(#loc104)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__char_calloc_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc113)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc114)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc33)
  } loc(#loc112)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc38)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc116)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc43)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc45)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc46)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc46)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc118)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc45)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc119)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    cir.scope {
      %8 = cir.const #cir.int<0> : !s32i loc(#loc53)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc53)
      cir.if %9 {
        %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc38)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc38)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc57)
      } else {
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc61)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc61)
          %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!s8i>, !s32i loc(#loc124)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc62)
          cir.if %14 {
            %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc64)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
            %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc66)
            %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc66)
            %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc64)
            %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
            cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc68)
            %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc69)
            %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc70)
            cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc69)
          } loc(#loc125)
        } loc(#loc123)
      } loc(#loc122)
    } loc(#loc121)
    cir.return loc(#loc40)
  } loc(#loc115)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc75)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc77)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc78)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc78)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc129)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc77)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc130)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    cir.scope {
      %8 = cir.const #cir.int<1> : !s32i loc(#loc85)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc85)
      cir.if %9 {
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc90)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc90)
          %13 = cir.cmp(ne, %10, %12) : !cir.ptr<!s8i>, !s32i loc(#loc135)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc91)
          cir.if %14 {
            %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc93)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
            %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc95)
            %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc95)
            %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc93)
            %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
            cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc97)
            %21 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc98)
            %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc99)
            cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc98)
          } loc(#loc136)
        } loc(#loc134)
      } loc(#loc133)
    } loc(#loc132)
    cir.return loc(#loc72)
  } loc(#loc126)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_calloc_04.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":38:22)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":29:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":42:1)
#loc12 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":31:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":31:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":32:12)
#loc15 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":32:5)
#loc16 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":34:20)
#loc17 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":34:27)
#loc18 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":34:31)
#loc19 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":34:42)
#loc20 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":34:43)
#loc21 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":34:5)
#loc22 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":35:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":41:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":35:8)
#loc25 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":36:5)
#loc26 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":38:9)
#loc27 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":38:16)
#loc28 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":39:19)
#loc29 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":39:9)
#loc30 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":40:9)
#loc31 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":40:14)
#loc32 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":91:1)
#loc33 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":95:1)
#loc34 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":93:5)
#loc35 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":93:14)
#loc36 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":94:5)
#loc37 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":94:14)
#loc38 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":58:19)
#loc39 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":49:1)
#loc40 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":70:1)
#loc41 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":51:5)
#loc42 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":51:12)
#loc43 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":52:12)
#loc44 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":52:5)
#loc45 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":54:20)
#loc46 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":54:27)
#loc47 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":54:31)
#loc48 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":54:42)
#loc49 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":54:43)
#loc50 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":54:5)
#loc51 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":55:5)
#loc52 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":69:5)
#loc53 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":55:8)
#loc54 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":56:5)
#loc55 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":59:5)
#loc56 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":61:5)
#loc57 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":58:9)
#loc58 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":63:9)
#loc59 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":68:9)
#loc60 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":63:13)
#loc61 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":63:21)
#loc62 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":63:18)
#loc63 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":64:9)
#loc64 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":65:13)
#loc65 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":65:20)
#loc66 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":65:26)
#loc67 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":66:23)
#loc68 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":66:13)
#loc69 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":67:13)
#loc70 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":67:18)
#loc71 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":73:1)
#loc72 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":89:1)
#loc73 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":75:5)
#loc74 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":75:12)
#loc75 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":76:12)
#loc76 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":76:5)
#loc77 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":78:20)
#loc78 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":78:27)
#loc79 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":78:31)
#loc80 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":78:42)
#loc81 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":78:43)
#loc82 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":78:5)
#loc83 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":79:5)
#loc84 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":88:5)
#loc85 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":79:8)
#loc86 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":80:5)
#loc87 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":82:9)
#loc88 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":87:9)
#loc89 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":82:13)
#loc90 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":82:21)
#loc91 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":82:18)
#loc92 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":83:9)
#loc93 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":84:13)
#loc94 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":84:20)
#loc95 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":84:26)
#loc96 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":85:23)
#loc97 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":85:13)
#loc98 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":86:13)
#loc99 = loc("CWE690_NULL_Deref_From_Return__char_calloc_04.c":86:18)
#loc100 = loc(fused[#loc1, #loc2])
#loc101 = loc(fused[#loc3, #loc4])
#loc102 = loc(fused[#loc6, #loc7])
#loc103 = loc(fused[#loc8, #loc9])
#loc104 = loc(fused[#loc10, #loc11])
#loc105 = loc(fused[#loc12, #loc13])
#loc106 = loc(fused[#loc15, #loc14])
#loc107 = loc(fused[#loc18, #loc19])
#loc108 = loc(fused[#loc16, #loc20])
#loc109 = loc(fused[#loc21, #loc20])
#loc110 = loc(fused[#loc22, #loc23])
#loc111 = loc(fused[#loc25, #loc23])
#loc112 = loc(fused[#loc32, #loc33])
#loc113 = loc(fused[#loc34, #loc35])
#loc114 = loc(fused[#loc36, #loc37])
#loc115 = loc(fused[#loc39, #loc40])
#loc116 = loc(fused[#loc41, #loc42])
#loc117 = loc(fused[#loc44, #loc43])
#loc118 = loc(fused[#loc47, #loc48])
#loc119 = loc(fused[#loc45, #loc49])
#loc120 = loc(fused[#loc50, #loc49])
#loc121 = loc(fused[#loc51, #loc52])
#loc122 = loc(fused[#loc54, #loc55, #loc56, #loc52])
#loc123 = loc(fused[#loc58, #loc59])
#loc124 = loc(fused[#loc60, #loc61])
#loc125 = loc(fused[#loc63, #loc59])
#loc126 = loc(fused[#loc71, #loc72])
#loc127 = loc(fused[#loc73, #loc74])
#loc128 = loc(fused[#loc76, #loc75])
#loc129 = loc(fused[#loc79, #loc80])
#loc130 = loc(fused[#loc77, #loc81])
#loc131 = loc(fused[#loc82, #loc81])
#loc132 = loc(fused[#loc83, #loc84])
#loc133 = loc(fused[#loc86, #loc84])
#loc134 = loc(fused[#loc87, #loc88])
#loc135 = loc(fused[#loc89, #loc90])
#loc136 = loc(fused[#loc92, #loc88])
