!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc153 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":366:10)
#loc154 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":366:14)
#loc155 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":366:20)
#loc156 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":366:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc534 = loc(fused[#loc153, #loc154])
#loc535 = loc(fused[#loc155, #loc156])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_connect_socket_multiply_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc473)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc474)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc475)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc476)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc477)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc478)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc479)
  cir.func private @close(!s32i) -> !s32i loc(#loc480)
  cir.func private @printIntLine(!s32i) loc(#loc481)
  cir.func no_proto @CWE191_Integer_Underflow__int_connect_socket_multiply_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc483)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc24)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc484)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc473)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc28)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc28)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc488)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc489)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc490)
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc491)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc37)
          %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc37)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc490)
          cir.scope {
            cir.do {
              %11 = cir.const #cir.int<2> : !s32i loc(#loc42)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc43)
              %13 = cir.const #cir.int<6> : !s32i loc(#loc44)
              %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc45)
              cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc493)
              cir.scope {
                %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc50)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc51)
                %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc51)
                %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc495)
                cir.if %56 {
                  cir.break loc(#loc53)
                } loc(#loc496)
              } loc(#loc494)
              %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc497)
              %16 = cir.const #cir.int<0> : !s32i loc(#loc56)
              %17 = cir.const #cir.int<16> : !u64i loc(#loc498)
              cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc499)
              %18 = cir.const #cir.int<2> : !s32i loc(#loc61)
              %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc61)
              %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
              cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc500)
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
              %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc64)
              %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
              %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
              cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc501)
              %26 = cir.const #cir.int<27015> : !s32i loc(#loc69)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc69)
              %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc70)
              %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
              cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc502)
              cir.scope {
                %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc76)
                %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc504)
                %55 = cir.const #cir.int<16> : !u64i loc(#loc505)
                %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc505)
                %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc81)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc82)
                %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc82)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc506)
                cir.if %60 {
                  cir.break loc(#loc84)
                } loc(#loc507)
              } loc(#loc503)
              %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc85)
              %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc86)
              %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
              %33 = cir.const #cir.int<3> : !s32i loc(#loc87)
              %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc87)
              %35 = cir.const #cir.int<4> : !u64i loc(#loc87)
              %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc87)
              %37 = cir.const #cir.int<2> : !s32i loc(#loc87)
              %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc87)
              %39 = cir.binop(add, %36, %38) : !u64i loc(#loc87)
              %40 = cir.const #cir.int<1> : !s32i loc(#loc88)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc88)
              %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc508)
              %43 = cir.const #cir.int<0> : !s32i loc(#loc89)
              %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc90)
              %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc90)
              cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc509)
              cir.scope {
                %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc95)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc96)
                %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc96)
                %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc511)
                %57 = cir.ternary(%56, true {
                  %58 = cir.const #true loc(#loc97)
                  cir.yield %58 : !cir.bool loc(#loc97)
                }, false {
                  %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                  %59 = cir.const #cir.int<0> : !s32i loc(#loc99)
                  %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc512)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc97)
                    cir.yield %62 : !cir.bool loc(#loc97)
                  }, false {
                    %62 = cir.const #false loc(#loc97)
                    cir.yield %62 : !cir.bool loc(#loc97)
                  }) : (!cir.bool) -> !cir.bool loc(#loc97)
                  cir.yield %61 : !cir.bool loc(#loc97)
                }) : (!cir.bool) -> !cir.bool loc(#loc97)
                cir.if %57 {
                  cir.break loc(#loc101)
                } loc(#loc513)
              } loc(#loc510)
              %46 = cir.const #cir.int<0> : !s32i loc(#loc102)
              %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc102)
              %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc103)
              %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc104)
              %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc104)
              cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc514)
              %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
              %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc106)
              cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc515)
              cir.yield loc(#loc41)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc109)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc109)
              cir.condition(%12) loc(#loc109)
            } loc(#loc492)
          } loc(#loc492)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc112)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc113)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc113)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc517)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc115)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc116)
            } loc(#loc518)
          } loc(#loc516)
        } loc(#loc487)
      } loc(#loc486)
    } loc(#loc485)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc473)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc119)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc119)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc124)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc522)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc524)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc127)
            %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc128)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc524)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc129)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc130)
          } loc(#loc523)
        } loc(#loc521)
      } loc(#loc520)
    } loc(#loc519)
    cir.return loc(#loc21)
  } loc(#loc482)
  cir.func no_proto @CWE191_Integer_Underflow__int_connect_socket_multiply_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc526)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc133)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc527)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc135)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc528)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc137)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc529)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc139)
    cir.return loc(#loc132)
  } loc(#loc525)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc530)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc531)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc532)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc149)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc150)
  cir.func @main(%arg0: !s32i loc(fused[#loc153, #loc154]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc155, #loc156])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc534)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc535)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc152)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc157)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc158)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc159)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc159)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc160)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc147)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc161)
    %8 = cir.get_global @CWE191_Integer_Underflow__int_connect_socket_multiply_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc536)
    cir.call @CWE191_Integer_Underflow__int_connect_socket_multiply_05_good() : () -> () loc(#loc162)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc148)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc148)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc164)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc149)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc149)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc165)
    %13 = cir.get_global @CWE191_Integer_Underflow__int_connect_socket_multiply_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc537)
    cir.call @CWE191_Integer_Underflow__int_connect_socket_multiply_05_bad() : () -> () loc(#loc166)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc150)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc150)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc168)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc169)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc538)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc538)
    cir.return %17 : !s32i loc(#loc538)
  } loc(#loc533)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc539)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc174)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc541)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc179)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc542)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc473)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc183)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc183)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc546)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc547)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc548)
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc549)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc192)
          %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc192)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc548)
          cir.scope {
            cir.do {
              %11 = cir.const #cir.int<2> : !s32i loc(#loc197)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc198)
              %13 = cir.const #cir.int<6> : !s32i loc(#loc199)
              %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc200)
              cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc551)
              cir.scope {
                %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc205)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc206)
                %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc206)
                %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc553)
                cir.if %56 {
                  cir.break loc(#loc208)
                } loc(#loc554)
              } loc(#loc552)
              %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc555)
              %16 = cir.const #cir.int<0> : !s32i loc(#loc211)
              %17 = cir.const #cir.int<16> : !u64i loc(#loc556)
              cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc557)
              %18 = cir.const #cir.int<2> : !s32i loc(#loc216)
              %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc216)
              %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
              cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc558)
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc218)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc218)
              %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc219)
              %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
              %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
              cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc559)
              %26 = cir.const #cir.int<27015> : !s32i loc(#loc222)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc222)
              %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc223)
              %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
              cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc560)
              cir.scope {
                %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc228)
                %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc562)
                %55 = cir.const #cir.int<16> : !u64i loc(#loc563)
                %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc563)
                %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc233)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc234)
                %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc234)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc564)
                cir.if %60 {
                  cir.break loc(#loc236)
                } loc(#loc565)
              } loc(#loc561)
              %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc237)
              %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc238)
              %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc238)
              %33 = cir.const #cir.int<3> : !s32i loc(#loc239)
              %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc239)
              %35 = cir.const #cir.int<4> : !u64i loc(#loc239)
              %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc239)
              %37 = cir.const #cir.int<2> : !s32i loc(#loc239)
              %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc239)
              %39 = cir.binop(add, %36, %38) : !u64i loc(#loc239)
              %40 = cir.const #cir.int<1> : !s32i loc(#loc240)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc240)
              %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc566)
              %43 = cir.const #cir.int<0> : !s32i loc(#loc241)
              %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc242)
              %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc242)
              cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc567)
              cir.scope {
                %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc247)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc248)
                %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc248)
                %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc569)
                %57 = cir.ternary(%56, true {
                  %58 = cir.const #true loc(#loc249)
                  cir.yield %58 : !cir.bool loc(#loc249)
                }, false {
                  %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc250)
                  %59 = cir.const #cir.int<0> : !s32i loc(#loc251)
                  %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc570)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc249)
                    cir.yield %62 : !cir.bool loc(#loc249)
                  }, false {
                    %62 = cir.const #false loc(#loc249)
                    cir.yield %62 : !cir.bool loc(#loc249)
                  }) : (!cir.bool) -> !cir.bool loc(#loc249)
                  cir.yield %61 : !cir.bool loc(#loc249)
                }) : (!cir.bool) -> !cir.bool loc(#loc249)
                cir.if %57 {
                  cir.break loc(#loc253)
                } loc(#loc571)
              } loc(#loc568)
              %46 = cir.const #cir.int<0> : !s32i loc(#loc254)
              %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc254)
              %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc255)
              %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc256)
              %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc256)
              cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc572)
              %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc257)
              %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc258)
              cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc573)
              cir.yield loc(#loc196)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc261)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc261)
              cir.condition(%12) loc(#loc261)
            } loc(#loc550)
          } loc(#loc550)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc264)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc265)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc265)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc575)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc267)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc268)
            } loc(#loc576)
          } loc(#loc574)
        } loc(#loc545)
      } loc(#loc544)
    } loc(#loc543)
    cir.scope {
      %2 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc539)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc271)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc271)
      cir.if %4 {
        %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc173)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc173)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc275)
      } else {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc278)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc279)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc580)
          cir.if %7 {
            cir.scope {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc283)
              %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc284)
              %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc284)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc284)
              %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc284)
              %13 = cir.const #cir.int<2> : !s32i loc(#loc285)
              %14 = cir.binop(div, %12, %13) : !s32i loc(#loc583)
              %15 = cir.cmp(gt, %8, %14) : !s32i, !cir.bool loc(#loc584)
              cir.if %15 {
                %16 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc586)
                %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc292)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc291)
                %19 = cir.binop(mul, %17, %18) nsw : !s32i loc(#loc292)
                cir.store %19, %16 : !s32i, !cir.ptr<!s32i> loc(#loc586)
                %20 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc293)
                cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc294)
              } else {
                %16 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc174)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc174)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc295)
              } loc(#loc585)
            } loc(#loc582)
          } loc(#loc581)
        } loc(#loc579)
      } loc(#loc578)
    } loc(#loc577)
    cir.return loc(#loc176)
  } loc(#loc540)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc588)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc300)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc589)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc473)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc304)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc304)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc593)
          %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc594)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc595)
          %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc596)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc313)
          %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc313)
          cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc595)
          cir.scope {
            cir.do {
              %11 = cir.const #cir.int<2> : !s32i loc(#loc318)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc319)
              %13 = cir.const #cir.int<6> : !s32i loc(#loc320)
              %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc321)
              cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc598)
              cir.scope {
                %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc326)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc327)
                %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc327)
                %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc600)
                cir.if %56 {
                  cir.break loc(#loc329)
                } loc(#loc601)
              } loc(#loc599)
              %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc602)
              %16 = cir.const #cir.int<0> : !s32i loc(#loc332)
              %17 = cir.const #cir.int<16> : !u64i loc(#loc603)
              cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc604)
              %18 = cir.const #cir.int<2> : !s32i loc(#loc337)
              %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc337)
              %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
              cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc605)
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc339)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc339)
              %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc340)
              %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
              %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
              cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc606)
              %26 = cir.const #cir.int<27015> : !s32i loc(#loc343)
              %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc343)
              %28 = cir.call @htons(%27) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc344)
              %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
              cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc607)
              cir.scope {
                %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc349)
                %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc609)
                %55 = cir.const #cir.int<16> : !u64i loc(#loc610)
                %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc610)
                %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc354)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc355)
                %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc355)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc611)
                cir.if %60 {
                  cir.break loc(#loc357)
                } loc(#loc612)
              } loc(#loc608)
              %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc358)
              %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc359)
              %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc359)
              %33 = cir.const #cir.int<3> : !s32i loc(#loc360)
              %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc360)
              %35 = cir.const #cir.int<4> : !u64i loc(#loc360)
              %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc360)
              %37 = cir.const #cir.int<2> : !s32i loc(#loc360)
              %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc360)
              %39 = cir.binop(add, %36, %38) : !u64i loc(#loc360)
              %40 = cir.const #cir.int<1> : !s32i loc(#loc361)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc361)
              %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc613)
              %43 = cir.const #cir.int<0> : !s32i loc(#loc362)
              %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc363)
              %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc363)
              cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc614)
              cir.scope {
                %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc368)
                %54 = cir.const #cir.int<1> : !s32i loc(#loc369)
                %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc369)
                %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc616)
                %57 = cir.ternary(%56, true {
                  %58 = cir.const #true loc(#loc370)
                  cir.yield %58 : !cir.bool loc(#loc370)
                }, false {
                  %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc371)
                  %59 = cir.const #cir.int<0> : !s32i loc(#loc372)
                  %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc617)
                  %61 = cir.ternary(%60, true {
                    %62 = cir.const #true loc(#loc370)
                    cir.yield %62 : !cir.bool loc(#loc370)
                  }, false {
                    %62 = cir.const #false loc(#loc370)
                    cir.yield %62 : !cir.bool loc(#loc370)
                  }) : (!cir.bool) -> !cir.bool loc(#loc370)
                  cir.yield %61 : !cir.bool loc(#loc370)
                }) : (!cir.bool) -> !cir.bool loc(#loc370)
                cir.if %57 {
                  cir.break loc(#loc374)
                } loc(#loc618)
              } loc(#loc615)
              %46 = cir.const #cir.int<0> : !s32i loc(#loc375)
              %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc375)
              %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc376)
              %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc377)
              %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc377)
              cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc619)
              %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc378)
              %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc379)
              cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc620)
              cir.yield loc(#loc317)
            } while {
              %11 = cir.const #cir.int<0> : !s32i loc(#loc382)
              %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc382)
              cir.condition(%12) loc(#loc382)
            } loc(#loc597)
          } loc(#loc597)
          cir.scope {
            %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc385)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc386)
            %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc386)
            %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc622)
            cir.if %14 {
              %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc388)
              %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc389)
            } loc(#loc623)
          } loc(#loc621)
        } loc(#loc592)
      } loc(#loc591)
    } loc(#loc590)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc473)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc392)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc392)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc396)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc397)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc627)
          cir.if %7 {
            cir.scope {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc401)
              %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc402)
              %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc402)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc402)
              %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc402)
              %13 = cir.const #cir.int<2> : !s32i loc(#loc403)
              %14 = cir.binop(div, %12, %13) : !s32i loc(#loc630)
              %15 = cir.cmp(gt, %8, %14) : !s32i, !cir.bool loc(#loc631)
              cir.if %15 {
                %16 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc633)
                %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc410)
                %18 = cir.const #cir.int<2> : !s32i loc(#loc409)
                %19 = cir.binop(mul, %17, %18) nsw : !s32i loc(#loc410)
                cir.store %19, %16 : !s32i, !cir.ptr<!s32i> loc(#loc633)
                %20 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc411)
                cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc412)
              } else {
                %16 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc413)
                %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc413)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc414)
              } loc(#loc632)
            } loc(#loc629)
          } loc(#loc628)
        } loc(#loc626)
      } loc(#loc625)
    } loc(#loc624)
    cir.return loc(#loc297)
  } loc(#loc587)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc635)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc419)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc636)
    cir.scope {
      %2 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc539)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc423)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc423)
      cir.if %4 {
        %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc427)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc427)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc428)
      } else {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc429)
        %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc430)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc639)
      } loc(#loc638)
    } loc(#loc637)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc473)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc434)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc434)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc438)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc439)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc643)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc645)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc443)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc442)
            %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc443)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc645)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc444)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc445)
          } loc(#loc644)
        } loc(#loc642)
      } loc(#loc641)
    } loc(#loc640)
    cir.return loc(#loc416)
  } loc(#loc634)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc647)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc450)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc648)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc473)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc454)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc454)
      cir.if %4 {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc456)
        %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc457)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc651)
      } loc(#loc650)
    } loc(#loc649)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc473)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc461)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc461)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc465)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc466)
          %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc655)
          cir.if %7 {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc657)
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc470)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc469)
            %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc470)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc657)
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc471)
            cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc472)
          } loc(#loc656)
        } loc(#loc654)
      } loc(#loc653)
    } loc(#loc652)
    cir.return loc(#loc447)
  } loc(#loc646)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":0:0)
#loc1 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":45:1)
#loc2 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":45:25)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":83:53)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":50:1)
#loc21 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":123:1)
#loc22 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":52:5)
#loc23 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":52:9)
#loc24 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":54:12)
#loc25 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":54:5)
#loc26 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":55:5)
#loc27 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":113:5)
#loc28 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":55:8)
#loc29 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":56:5)
#loc30 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":57:9)
#loc31 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":112:9)
#loc32 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":62:13)
#loc33 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":62:17)
#loc34 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":63:13)
#loc35 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":63:32)
#loc36 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":64:13)
#loc37 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":64:36)
#loc38 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":65:13)
#loc39 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":65:45)
#loc40 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":66:13)
#loc41 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":101:21)
#loc42 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":76:40)
#loc43 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":76:49)
#loc44 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":76:62)
#loc45 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":76:33)
#loc46 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":76:17)
#loc47 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":76:73)
#loc48 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":77:17)
#loc49 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":80:17)
#loc50 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":77:21)
#loc51 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":77:38)
#loc52 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":78:17)
#loc53 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":79:21)
#loc54 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":81:24)
#loc55 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":81:25)
#loc56 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":81:34)
#loc57 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":81:37)
#loc58 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":81:51)
#loc59 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":81:17)
#loc60 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":81:52)
#loc61 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":82:38)
#loc62 = loc("/usr/include/netinet/in.h":249:5)
#loc63 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":82:17)
#loc64 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":83:43)
#loc65 = loc("/usr/include/netinet/in.h":251:20)
#loc66 = loc("/usr/include/netinet/in.h":33:15)
#loc67 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":83:17)
#loc68 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":83:63)
#loc69 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":84:42)
#loc70 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":84:36)
#loc71 = loc("/usr/include/netinet/in.h":250:15)
#loc72 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":84:17)
#loc73 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":84:50)
#loc74 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":85:17)
#loc75 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":88:17)
#loc76 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":85:29)
#loc77 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":85:62)
#loc78 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":85:63)
#loc79 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":85:72)
#loc80 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":85:86)
#loc81 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":85:21)
#loc82 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":85:92)
#loc83 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":86:17)
#loc84 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":87:21)
#loc85 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":91:35)
#loc86 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":91:50)
#loc87 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":91:63)
#loc88 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":91:81)
#loc89 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":91:84)
#loc90 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":91:30)
#loc91 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":91:17)
#loc92 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":91:85)
#loc93 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":92:17)
#loc94 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":95:17)
#loc95 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":92:21)
#loc96 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":92:35)
#loc97 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":92:48)
#loc98 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":92:51)
#loc99 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":92:65)
#loc100 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":93:17)
#loc101 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":94:21)
#loc102 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":97:43)
#loc103 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":97:29)
#loc104 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":97:17)
#loc105 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":99:29)
#loc106 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":99:24)
#loc107 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":99:17)
#loc108 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":99:40)
#loc109 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":101:20)
#loc110 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":102:13)
#loc111 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":105:13)
#loc112 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":102:17)
#loc113 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":102:34)
#loc114 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":103:13)
#loc115 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":104:30)
#loc116 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":104:17)
#loc117 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":114:5)
#loc118 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":122:5)
#loc119 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":114:8)
#loc120 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":115:5)
#loc121 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":116:9)
#loc122 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":121:9)
#loc123 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":116:12)
#loc124 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":116:19)
#loc125 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":117:9)
#loc126 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":119:13)
#loc127 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":119:33)
#loc128 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":119:26)
#loc129 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":120:26)
#loc130 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":120:13)
#loc131 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":349:1)
#loc132 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":355:1)
#loc133 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":351:5)
#loc134 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":351:14)
#loc135 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":352:5)
#loc136 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":352:14)
#loc137 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":353:5)
#loc138 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":353:14)
#loc139 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":354:5)
#loc140 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":354:14)
#loc141 = loc("/usr/include/stdlib.h":575:1)
#loc142 = loc("/usr/include/stdlib.h":575:41)
#loc143 = loc("/usr/include/time.h":76:1)
#loc144 = loc("/usr/include/time.h":76:38)
#loc145 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc146 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc147 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":371:15)
#loc148 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":373:15)
#loc149 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":376:15)
#loc150 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":378:15)
#loc151 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":366:1)
#loc152 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":381:1)
#loc157 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":367:1)
#loc158 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":369:27)
#loc159 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":369:22)
#loc160 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":369:5)
#loc161 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":371:5)
#loc162 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":372:5)
#loc163 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":372:67)
#loc164 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":373:5)
#loc165 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":376:5)
#loc166 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":377:5)
#loc167 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":377:66)
#loc168 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":378:5)
#loc169 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":380:12)
#loc170 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":380:5)
#loc171 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":46:1)
#loc172 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":46:26)
#loc173 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":197:19)
#loc174 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":211:27)
#loc175 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":130:1)
#loc176 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":215:1)
#loc177 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":132:5)
#loc178 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":132:9)
#loc179 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":134:12)
#loc180 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":134:5)
#loc181 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":135:5)
#loc182 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":193:5)
#loc183 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":135:8)
#loc184 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":136:5)
#loc185 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":137:9)
#loc186 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":192:9)
#loc187 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":142:13)
#loc188 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":142:17)
#loc189 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":143:13)
#loc190 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":143:32)
#loc191 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":144:13)
#loc192 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":144:36)
#loc193 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":145:13)
#loc194 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":145:45)
#loc195 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":146:13)
#loc196 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":181:21)
#loc197 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":156:40)
#loc198 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":156:49)
#loc199 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":156:62)
#loc200 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":156:33)
#loc201 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":156:17)
#loc202 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":156:73)
#loc203 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":157:17)
#loc204 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":160:17)
#loc205 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":157:21)
#loc206 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":157:38)
#loc207 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":158:17)
#loc208 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":159:21)
#loc209 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":161:24)
#loc210 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":161:25)
#loc211 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":161:34)
#loc212 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":161:37)
#loc213 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":161:51)
#loc214 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":161:17)
#loc215 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":161:52)
#loc216 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":162:38)
#loc217 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":162:17)
#loc218 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":163:53)
#loc219 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":163:43)
#loc220 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":163:17)
#loc221 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":163:63)
#loc222 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":164:42)
#loc223 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":164:36)
#loc224 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":164:17)
#loc225 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":164:50)
#loc226 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":165:17)
#loc227 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":168:17)
#loc228 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":165:29)
#loc229 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":165:62)
#loc230 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":165:63)
#loc231 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":165:72)
#loc232 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":165:86)
#loc233 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":165:21)
#loc234 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":165:92)
#loc235 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":166:17)
#loc236 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":167:21)
#loc237 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":171:35)
#loc238 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":171:50)
#loc239 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":171:63)
#loc240 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":171:81)
#loc241 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":171:84)
#loc242 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":171:30)
#loc243 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":171:17)
#loc244 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":171:85)
#loc245 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":172:17)
#loc246 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":175:17)
#loc247 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":172:21)
#loc248 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":172:35)
#loc249 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":172:48)
#loc250 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":172:51)
#loc251 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":172:65)
#loc252 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":173:17)
#loc253 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":174:21)
#loc254 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":177:43)
#loc255 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":177:29)
#loc256 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":177:17)
#loc257 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":179:29)
#loc258 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":179:24)
#loc259 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":179:17)
#loc260 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":179:40)
#loc261 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":181:20)
#loc262 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":182:13)
#loc263 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":185:13)
#loc264 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":182:17)
#loc265 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":182:34)
#loc266 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":183:13)
#loc267 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":184:30)
#loc268 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":184:17)
#loc269 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":194:5)
#loc270 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":214:5)
#loc271 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":194:8)
#loc272 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":195:5)
#loc273 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":198:5)
#loc274 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":200:5)
#loc275 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":197:9)
#loc276 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":201:9)
#loc277 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":213:9)
#loc278 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":201:12)
#loc279 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":201:19)
#loc280 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":202:9)
#loc281 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":204:13)
#loc282 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":212:13)
#loc283 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":204:17)
#loc284 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":204:25)
#loc285 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":204:33)
#loc286 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":204:34)
#loc287 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":205:13)
#loc288 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":208:13)
#loc289 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":210:13)
#loc290 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":206:17)
#loc291 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":206:37)
#loc292 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":206:30)
#loc293 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":207:30)
#loc294 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":207:17)
#loc295 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":211:17)
#loc296 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":218:1)
#loc297 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":298:1)
#loc298 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":220:5)
#loc299 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":220:9)
#loc300 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":222:12)
#loc301 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":222:5)
#loc302 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":223:5)
#loc303 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":281:5)
#loc304 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":223:8)
#loc305 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":224:5)
#loc306 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":225:9)
#loc307 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":280:9)
#loc308 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":230:13)
#loc309 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":230:17)
#loc310 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":231:13)
#loc311 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":231:32)
#loc312 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":232:13)
#loc313 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":232:36)
#loc314 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":233:13)
#loc315 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":233:45)
#loc316 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":234:13)
#loc317 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":269:21)
#loc318 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":244:40)
#loc319 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":244:49)
#loc320 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":244:62)
#loc321 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":244:33)
#loc322 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":244:17)
#loc323 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":244:73)
#loc324 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":245:17)
#loc325 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":248:17)
#loc326 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":245:21)
#loc327 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":245:38)
#loc328 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":246:17)
#loc329 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":247:21)
#loc330 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":249:24)
#loc331 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":249:25)
#loc332 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":249:34)
#loc333 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":249:37)
#loc334 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":249:51)
#loc335 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":249:17)
#loc336 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":249:52)
#loc337 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":250:38)
#loc338 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":250:17)
#loc339 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":251:53)
#loc340 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":251:43)
#loc341 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":251:17)
#loc342 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":251:63)
#loc343 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":252:42)
#loc344 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":252:36)
#loc345 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":252:17)
#loc346 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":252:50)
#loc347 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":253:17)
#loc348 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":256:17)
#loc349 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":253:29)
#loc350 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":253:62)
#loc351 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":253:63)
#loc352 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":253:72)
#loc353 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":253:86)
#loc354 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":253:21)
#loc355 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":253:92)
#loc356 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":254:17)
#loc357 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":255:21)
#loc358 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":259:35)
#loc359 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":259:50)
#loc360 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":259:63)
#loc361 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":259:81)
#loc362 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":259:84)
#loc363 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":259:30)
#loc364 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":259:17)
#loc365 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":259:85)
#loc366 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":260:17)
#loc367 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":263:17)
#loc368 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":260:21)
#loc369 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":260:35)
#loc370 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":260:48)
#loc371 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":260:51)
#loc372 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":260:65)
#loc373 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":261:17)
#loc374 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":262:21)
#loc375 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":265:43)
#loc376 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":265:29)
#loc377 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":265:17)
#loc378 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":267:29)
#loc379 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":267:24)
#loc380 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":267:17)
#loc381 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":267:40)
#loc382 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":269:20)
#loc383 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":270:13)
#loc384 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":273:13)
#loc385 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":270:17)
#loc386 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":270:34)
#loc387 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":271:13)
#loc388 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":272:30)
#loc389 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":272:17)
#loc390 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":282:5)
#loc391 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":297:5)
#loc392 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":282:8)
#loc393 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":283:5)
#loc394 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":284:9)
#loc395 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":296:9)
#loc396 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":284:12)
#loc397 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":284:19)
#loc398 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":285:9)
#loc399 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":287:13)
#loc400 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":295:13)
#loc401 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":287:17)
#loc402 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":287:25)
#loc403 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":287:33)
#loc404 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":287:34)
#loc405 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":288:13)
#loc406 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":291:13)
#loc407 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":293:13)
#loc408 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":289:17)
#loc409 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":289:37)
#loc410 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":289:30)
#loc411 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":290:30)
#loc412 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":290:17)
#loc413 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":294:27)
#loc414 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":294:17)
#loc415 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":301:1)
#loc416 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":325:1)
#loc417 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":303:5)
#loc418 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":303:9)
#loc419 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":305:12)
#loc420 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":305:5)
#loc421 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":306:5)
#loc422 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":315:5)
#loc423 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":306:8)
#loc424 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":307:5)
#loc425 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":310:5)
#loc426 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":312:5)
#loc427 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":309:19)
#loc428 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":309:9)
#loc429 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":314:17)
#loc430 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":314:16)
#loc431 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":314:9)
#loc432 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":316:5)
#loc433 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":324:5)
#loc434 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":316:8)
#loc435 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":317:5)
#loc436 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":318:9)
#loc437 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":323:9)
#loc438 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":318:12)
#loc439 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":318:19)
#loc440 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":319:9)
#loc441 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":321:13)
#loc442 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":321:33)
#loc443 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":321:26)
#loc444 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":322:26)
#loc445 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":322:13)
#loc446 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":328:1)
#loc447 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":347:1)
#loc448 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":330:5)
#loc449 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":330:9)
#loc450 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":332:12)
#loc451 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":332:5)
#loc452 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":333:5)
#loc453 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":337:5)
#loc454 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":333:8)
#loc455 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":334:5)
#loc456 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":336:17)
#loc457 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":336:16)
#loc458 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":336:9)
#loc459 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":338:5)
#loc460 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":346:5)
#loc461 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":338:8)
#loc462 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":339:5)
#loc463 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":340:9)
#loc464 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":345:9)
#loc465 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":340:12)
#loc466 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":340:19)
#loc467 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":341:9)
#loc468 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":343:13)
#loc469 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":343:33)
#loc470 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":343:26)
#loc471 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":344:26)
#loc472 = loc("CWE191_Integer_Underflow__int_connect_socket_multiply_05.c":344:13)
#loc473 = loc(fused[#loc1, #loc2])
#loc474 = loc(fused[#loc3, #loc4])
#loc475 = loc(fused[#loc5, #loc6])
#loc476 = loc(fused[#loc8, #loc9])
#loc477 = loc(fused[#loc10, #loc11])
#loc478 = loc(fused[#loc12, #loc13])
#loc479 = loc(fused[#loc14, #loc15])
#loc480 = loc(fused[#loc16, #loc17])
#loc481 = loc(fused[#loc18, #loc19])
#loc482 = loc(fused[#loc20, #loc21])
#loc483 = loc(fused[#loc22, #loc23])
#loc484 = loc(fused[#loc25, #loc24])
#loc485 = loc(fused[#loc26, #loc27])
#loc486 = loc(fused[#loc29, #loc27])
#loc487 = loc(fused[#loc30, #loc31])
#loc488 = loc(fused[#loc32, #loc33])
#loc489 = loc(fused[#loc34, #loc35])
#loc490 = loc(fused[#loc36, #loc37])
#loc491 = loc(fused[#loc38, #loc39])
#loc492 = loc(fused[#loc40, #loc41])
#loc493 = loc(fused[#loc46, #loc47])
#loc494 = loc(fused[#loc48, #loc49])
#loc495 = loc(fused[#loc50, #loc51])
#loc496 = loc(fused[#loc52, #loc49])
#loc497 = loc(fused[#loc54, #loc55])
#loc498 = loc(fused[#loc57, #loc58])
#loc499 = loc(fused[#loc59, #loc60])
#loc500 = loc(fused[#loc63, #loc61])
#loc501 = loc(fused[#loc67, #loc68])
#loc502 = loc(fused[#loc72, #loc73])
#loc503 = loc(fused[#loc74, #loc75])
#loc504 = loc(fused[#loc77, #loc78])
#loc505 = loc(fused[#loc79, #loc80])
#loc506 = loc(fused[#loc81, #loc82])
#loc507 = loc(fused[#loc83, #loc75])
#loc508 = loc(fused[#loc87, #loc88])
#loc509 = loc(fused[#loc91, #loc92])
#loc510 = loc(fused[#loc93, #loc94])
#loc511 = loc(fused[#loc95, #loc96])
#loc512 = loc(fused[#loc98, #loc99])
#loc513 = loc(fused[#loc100, #loc94])
#loc514 = loc(fused[#loc104, #loc102])
#loc515 = loc(fused[#loc107, #loc108])
#loc516 = loc(fused[#loc110, #loc111])
#loc517 = loc(fused[#loc112, #loc113])
#loc518 = loc(fused[#loc114, #loc111])
#loc519 = loc(fused[#loc117, #loc118])
#loc520 = loc(fused[#loc120, #loc118])
#loc521 = loc(fused[#loc121, #loc122])
#loc522 = loc(fused[#loc123, #loc124])
#loc523 = loc(fused[#loc125, #loc122])
#loc524 = loc(fused[#loc126, #loc127])
#loc525 = loc(fused[#loc131, #loc132])
#loc526 = loc(fused[#loc133, #loc134])
#loc527 = loc(fused[#loc135, #loc136])
#loc528 = loc(fused[#loc137, #loc138])
#loc529 = loc(fused[#loc139, #loc140])
#loc530 = loc(fused[#loc141, #loc142])
#loc531 = loc(fused[#loc143, #loc144])
#loc532 = loc(fused[#loc145, #loc146])
#loc533 = loc(fused[#loc151, #loc152])
#loc536 = loc(fused[#loc162, #loc163])
#loc537 = loc(fused[#loc166, #loc167])
#loc538 = loc(fused[#loc170, #loc169])
#loc539 = loc(fused[#loc171, #loc172])
#loc540 = loc(fused[#loc175, #loc176])
#loc541 = loc(fused[#loc177, #loc178])
#loc542 = loc(fused[#loc180, #loc179])
#loc543 = loc(fused[#loc181, #loc182])
#loc544 = loc(fused[#loc184, #loc182])
#loc545 = loc(fused[#loc185, #loc186])
#loc546 = loc(fused[#loc187, #loc188])
#loc547 = loc(fused[#loc189, #loc190])
#loc548 = loc(fused[#loc191, #loc192])
#loc549 = loc(fused[#loc193, #loc194])
#loc550 = loc(fused[#loc195, #loc196])
#loc551 = loc(fused[#loc201, #loc202])
#loc552 = loc(fused[#loc203, #loc204])
#loc553 = loc(fused[#loc205, #loc206])
#loc554 = loc(fused[#loc207, #loc204])
#loc555 = loc(fused[#loc209, #loc210])
#loc556 = loc(fused[#loc212, #loc213])
#loc557 = loc(fused[#loc214, #loc215])
#loc558 = loc(fused[#loc217, #loc216])
#loc559 = loc(fused[#loc220, #loc221])
#loc560 = loc(fused[#loc224, #loc225])
#loc561 = loc(fused[#loc226, #loc227])
#loc562 = loc(fused[#loc229, #loc230])
#loc563 = loc(fused[#loc231, #loc232])
#loc564 = loc(fused[#loc233, #loc234])
#loc565 = loc(fused[#loc235, #loc227])
#loc566 = loc(fused[#loc239, #loc240])
#loc567 = loc(fused[#loc243, #loc244])
#loc568 = loc(fused[#loc245, #loc246])
#loc569 = loc(fused[#loc247, #loc248])
#loc570 = loc(fused[#loc250, #loc251])
#loc571 = loc(fused[#loc252, #loc246])
#loc572 = loc(fused[#loc256, #loc254])
#loc573 = loc(fused[#loc259, #loc260])
#loc574 = loc(fused[#loc262, #loc263])
#loc575 = loc(fused[#loc264, #loc265])
#loc576 = loc(fused[#loc266, #loc263])
#loc577 = loc(fused[#loc269, #loc270])
#loc578 = loc(fused[#loc272, #loc273, #loc274, #loc270])
#loc579 = loc(fused[#loc276, #loc277])
#loc580 = loc(fused[#loc278, #loc279])
#loc581 = loc(fused[#loc280, #loc277])
#loc582 = loc(fused[#loc281, #loc282])
#loc583 = loc(fused[#loc284, #loc285])
#loc584 = loc(fused[#loc283, #loc286])
#loc585 = loc(fused[#loc287, #loc288, #loc289, #loc282])
#loc586 = loc(fused[#loc290, #loc291])
#loc587 = loc(fused[#loc296, #loc297])
#loc588 = loc(fused[#loc298, #loc299])
#loc589 = loc(fused[#loc301, #loc300])
#loc590 = loc(fused[#loc302, #loc303])
#loc591 = loc(fused[#loc305, #loc303])
#loc592 = loc(fused[#loc306, #loc307])
#loc593 = loc(fused[#loc308, #loc309])
#loc594 = loc(fused[#loc310, #loc311])
#loc595 = loc(fused[#loc312, #loc313])
#loc596 = loc(fused[#loc314, #loc315])
#loc597 = loc(fused[#loc316, #loc317])
#loc598 = loc(fused[#loc322, #loc323])
#loc599 = loc(fused[#loc324, #loc325])
#loc600 = loc(fused[#loc326, #loc327])
#loc601 = loc(fused[#loc328, #loc325])
#loc602 = loc(fused[#loc330, #loc331])
#loc603 = loc(fused[#loc333, #loc334])
#loc604 = loc(fused[#loc335, #loc336])
#loc605 = loc(fused[#loc338, #loc337])
#loc606 = loc(fused[#loc341, #loc342])
#loc607 = loc(fused[#loc345, #loc346])
#loc608 = loc(fused[#loc347, #loc348])
#loc609 = loc(fused[#loc350, #loc351])
#loc610 = loc(fused[#loc352, #loc353])
#loc611 = loc(fused[#loc354, #loc355])
#loc612 = loc(fused[#loc356, #loc348])
#loc613 = loc(fused[#loc360, #loc361])
#loc614 = loc(fused[#loc364, #loc365])
#loc615 = loc(fused[#loc366, #loc367])
#loc616 = loc(fused[#loc368, #loc369])
#loc617 = loc(fused[#loc371, #loc372])
#loc618 = loc(fused[#loc373, #loc367])
#loc619 = loc(fused[#loc377, #loc375])
#loc620 = loc(fused[#loc380, #loc381])
#loc621 = loc(fused[#loc383, #loc384])
#loc622 = loc(fused[#loc385, #loc386])
#loc623 = loc(fused[#loc387, #loc384])
#loc624 = loc(fused[#loc390, #loc391])
#loc625 = loc(fused[#loc393, #loc391])
#loc626 = loc(fused[#loc394, #loc395])
#loc627 = loc(fused[#loc396, #loc397])
#loc628 = loc(fused[#loc398, #loc395])
#loc629 = loc(fused[#loc399, #loc400])
#loc630 = loc(fused[#loc402, #loc403])
#loc631 = loc(fused[#loc401, #loc404])
#loc632 = loc(fused[#loc405, #loc406, #loc407, #loc400])
#loc633 = loc(fused[#loc408, #loc409])
#loc634 = loc(fused[#loc415, #loc416])
#loc635 = loc(fused[#loc417, #loc418])
#loc636 = loc(fused[#loc420, #loc419])
#loc637 = loc(fused[#loc421, #loc422])
#loc638 = loc(fused[#loc424, #loc425, #loc426, #loc422])
#loc639 = loc(fused[#loc431, #loc429])
#loc640 = loc(fused[#loc432, #loc433])
#loc641 = loc(fused[#loc435, #loc433])
#loc642 = loc(fused[#loc436, #loc437])
#loc643 = loc(fused[#loc438, #loc439])
#loc644 = loc(fused[#loc440, #loc437])
#loc645 = loc(fused[#loc441, #loc442])
#loc646 = loc(fused[#loc446, #loc447])
#loc647 = loc(fused[#loc448, #loc449])
#loc648 = loc(fused[#loc451, #loc450])
#loc649 = loc(fused[#loc452, #loc453])
#loc650 = loc(fused[#loc455, #loc453])
#loc651 = loc(fused[#loc458, #loc456])
#loc652 = loc(fused[#loc459, #loc460])
#loc653 = loc(fused[#loc462, #loc460])
#loc654 = loc(fused[#loc463, #loc464])
#loc655 = loc(fused[#loc465, #loc466])
#loc656 = loc(fused[#loc467, #loc464])
#loc657 = loc(fused[#loc468, #loc469])
