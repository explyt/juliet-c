!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_new_use_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @globalReturnsTrueOrFalse() -> !s32i loc(#loc103)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc104)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc105)
  cir.func private @printHexCharLine(!s8i) loc(#loc106)
  cir.func @_ZN42CWE758_Undefined_Behavior__char_new_use_123badEv() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc13)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc109)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc112)
          %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc113)
          %4 = cir.const #cir.int<1> : !u64i loc(#loc114)
          %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc112)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc114)
          cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
          %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
          %8 = cir.load %7 : !cir.ptr<!s8i>, !s8i loc(#loc25)
          cir.store %8, %3 : !s8i, !cir.ptr<!s8i> loc(#loc113)
          %9 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc26)
          cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc27)
          %11 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc28)
          cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc29)
        } loc(#loc111)
      } else {
        cir.scope {
          %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc116)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc117)
          %4 = cir.const #cir.int<5> : !s32i loc(#loc36)
          %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc36)
          cir.store %5, %2 : !s8i, !cir.ptr<!s8i> loc(#loc118)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc119)
          %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc117)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc119)
          cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
          %9 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc39)
          %10 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
          cir.store %9, %10 : !s8i, !cir.ptr<!s8i> loc(#loc120)
          cir.scope {
            %13 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc122)
            %14 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
            %15 = cir.load %14 : !cir.ptr<!s8i>, !s8i loc(#loc46)
            cir.store %15, %13 : !s8i, !cir.ptr<!s8i> loc(#loc122)
            %16 = cir.load %13 : !cir.ptr<!s8i>, !s8i loc(#loc47)
            cir.call @printHexCharLine(%16) : (!s8i) -> () loc(#loc48)
          } loc(#loc121)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc49)
          cir.call @_ZdlPv(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc27)
        } loc(#loc115)
      } loc(#loc110)
    } loc(#loc108)
    cir.return loc(#loc10)
  } loc(#loc107)
  cir.func internal private @_ZN42CWE758_Undefined_Behavior__char_new_use_12L5good1Ev() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc54)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc125)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc128)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc129)
          %4 = cir.const #cir.int<5> : !s32i loc(#loc65)
          %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc65)
          cir.store %5, %2 : !s8i, !cir.ptr<!s8i> loc(#loc130)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc131)
          %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc129)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc131)
          cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
          %9 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc68)
          %10 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
          cir.store %9, %10 : !s8i, !cir.ptr<!s8i> loc(#loc132)
          cir.scope {
            %13 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc134)
            %14 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
            %15 = cir.load %14 : !cir.ptr<!s8i>, !s8i loc(#loc75)
            cir.store %15, %13 : !s8i, !cir.ptr<!s8i> loc(#loc134)
            %16 = cir.load %13 : !cir.ptr<!s8i>, !s8i loc(#loc76)
            cir.call @printHexCharLine(%16) : (!s8i) -> () loc(#loc77)
          } loc(#loc133)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
          cir.call @_ZdlPv(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc79)
        } loc(#loc127)
      } else {
        cir.scope {
          %2 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc136)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc137)
          %4 = cir.const #cir.int<5> : !s32i loc(#loc86)
          %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc86)
          cir.store %5, %2 : !s8i, !cir.ptr<!s8i> loc(#loc138)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc139)
          %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc137)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc139)
          cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
          %9 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc89)
          %10 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
          cir.store %9, %10 : !s8i, !cir.ptr<!s8i> loc(#loc140)
          cir.scope {
            %13 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc142)
            %14 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
            %15 = cir.load %14 : !cir.ptr<!s8i>, !s8i loc(#loc96)
            cir.store %15, %13 : !s8i, !cir.ptr<!s8i> loc(#loc142)
            %16 = cir.load %13 : !cir.ptr<!s8i>, !s8i loc(#loc97)
            cir.call @printHexCharLine(%16) : (!s8i) -> () loc(#loc98)
          } loc(#loc141)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc99)
          cir.call @_ZdlPv(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc79)
        } loc(#loc135)
      } loc(#loc126)
    } loc(#loc124)
    cir.return loc(#loc51)
  } loc(#loc123)
  cir.func @_ZN42CWE758_Undefined_Behavior__char_new_use_124goodEv() extra(#fn_attr1) {
    cir.call @_ZN42CWE758_Undefined_Behavior__char_new_use_12L5good1Ev() : () -> () loc(#loc102)
    cir.return loc(#loc101)
  } loc(#loc143)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_new_use_12.cpp":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc9 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":23:1)
#loc10 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":48:1)
#loc11 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":25:5)
#loc12 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":47:5)
#loc13 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":25:8)
#loc14 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":25:33)
#loc15 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":26:5)
#loc16 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":33:5)
#loc17 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":35:5)
#loc18 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":27:9)
#loc19 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":32:9)
#loc20 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":28:13)
#loc21 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":28:34)
#loc22 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":29:13)
#loc23 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":29:26)
#loc24 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":28:30)
#loc25 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":29:25)
#loc26 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":30:20)
#loc27 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":23:6)
#loc28 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":31:30)
#loc29 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":31:13)
#loc30 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":36:9)
#loc31 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":46:9)
#loc32 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":37:13)
#loc33 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":37:18)
#loc34 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":39:13)
#loc35 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":39:34)
#loc36 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":38:20)
#loc37 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":38:13)
#loc38 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":39:30)
#loc39 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":40:24)
#loc40 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":40:14)
#loc41 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":40:13)
#loc42 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":41:13)
#loc43 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":44:13)
#loc44 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":42:17)
#loc45 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":42:30)
#loc46 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":42:29)
#loc47 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":43:34)
#loc48 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":43:17)
#loc49 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":45:20)
#loc50 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":55:1)
#loc51 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":85:1)
#loc52 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":57:5)
#loc53 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":84:5)
#loc54 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":57:8)
#loc55 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":57:33)
#loc56 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":58:5)
#loc57 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":70:5)
#loc58 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":72:5)
#loc59 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":59:9)
#loc60 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":69:9)
#loc61 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":60:13)
#loc62 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":60:18)
#loc63 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":62:13)
#loc64 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":62:34)
#loc65 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":61:20)
#loc66 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":61:13)
#loc67 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":62:30)
#loc68 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":63:24)
#loc69 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":63:14)
#loc70 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":63:13)
#loc71 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":64:13)
#loc72 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":67:13)
#loc73 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":65:17)
#loc74 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":65:30)
#loc75 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":65:29)
#loc76 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":66:34)
#loc77 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":66:17)
#loc78 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":68:20)
#loc79 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":55:13)
#loc80 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":73:9)
#loc81 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":83:9)
#loc82 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":74:13)
#loc83 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":74:18)
#loc84 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":76:13)
#loc85 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":76:34)
#loc86 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":75:20)
#loc87 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":75:13)
#loc88 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":76:30)
#loc89 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":77:24)
#loc90 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":77:14)
#loc91 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":77:13)
#loc92 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":78:13)
#loc93 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":81:13)
#loc94 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":79:17)
#loc95 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":79:30)
#loc96 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":79:29)
#loc97 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":80:34)
#loc98 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":80:17)
#loc99 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":82:20)
#loc100 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":87:1)
#loc101 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":90:1)
#loc102 = loc("CWE758_Undefined_Behavior__char_new_use_12.cpp":89:5)
#loc103 = loc(fused[#loc1, #loc2])
#loc104 = loc(fused[#loc3, #loc4])
#loc105 = loc(fused[#loc5, #loc6])
#loc106 = loc(fused[#loc7, #loc8])
#loc107 = loc(fused[#loc9, #loc10])
#loc108 = loc(fused[#loc11, #loc12])
#loc109 = loc(fused[#loc13, #loc14])
#loc110 = loc(fused[#loc15, #loc16, #loc17, #loc12])
#loc111 = loc(fused[#loc18, #loc19])
#loc112 = loc(fused[#loc20, #loc21])
#loc113 = loc(fused[#loc22, #loc23])
#loc114 = loc(fused[#loc24, #loc21])
#loc115 = loc(fused[#loc30, #loc31])
#loc116 = loc(fused[#loc32, #loc33])
#loc117 = loc(fused[#loc34, #loc35])
#loc118 = loc(fused[#loc37, #loc36])
#loc119 = loc(fused[#loc38, #loc35])
#loc120 = loc(fused[#loc41, #loc39])
#loc121 = loc(fused[#loc42, #loc43])
#loc122 = loc(fused[#loc44, #loc45])
#loc123 = loc(fused[#loc50, #loc51])
#loc124 = loc(fused[#loc52, #loc53])
#loc125 = loc(fused[#loc54, #loc55])
#loc126 = loc(fused[#loc56, #loc57, #loc58, #loc53])
#loc127 = loc(fused[#loc59, #loc60])
#loc128 = loc(fused[#loc61, #loc62])
#loc129 = loc(fused[#loc63, #loc64])
#loc130 = loc(fused[#loc66, #loc65])
#loc131 = loc(fused[#loc67, #loc64])
#loc132 = loc(fused[#loc70, #loc68])
#loc133 = loc(fused[#loc71, #loc72])
#loc134 = loc(fused[#loc73, #loc74])
#loc135 = loc(fused[#loc80, #loc81])
#loc136 = loc(fused[#loc82, #loc83])
#loc137 = loc(fused[#loc84, #loc85])
#loc138 = loc(fused[#loc87, #loc86])
#loc139 = loc(fused[#loc88, #loc85])
#loc140 = loc(fused[#loc91, #loc89])
#loc141 = loc(fused[#loc92, #loc93])
#loc142 = loc(fused[#loc94, #loc95])
#loc143 = loc(fused[#loc100, #loc101])
