!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc26 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":53:21)
#loc27 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":53:25)
#loc179 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":151:26)
#loc180 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":151:30)
#loc331 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":252:26)
#loc332 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":252:30)
#loc482 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":348:25)
#loc483 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":348:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc518 = loc(fused[#loc26, #loc27])
#loc575 = loc(fused[#loc179, #loc180])
#loc632 = loc(fused[#loc331, #loc332])
#loc689 = loc(fused[#loc482, #loc483])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__listen_socket_sleep_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc506)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc507)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc508)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc509)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc510)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc511)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc512)
  cir.func private @close(!s32i) -> !s32i loc(#loc513)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc514)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc515)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc516)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc23)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc26, #loc27])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc518)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc28)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc514)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc31)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc31)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
        %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc33)
        %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc34)
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc23)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc23)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc35)
      } loc(#loc520)
    } loc(#loc519)
    cir.return loc(#loc25)
  } loc(#loc517)
  cir.func no_proto @CWE400_Resource_Exhaustion__listen_socket_sleep_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc522)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc41)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc523)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc525)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc526)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc527)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc528)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc529)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc50)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc50)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc527)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc52)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc52)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc528)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc59)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc60)
            %17 = cir.const #cir.int<6> : !s32i loc(#loc61)
            %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc62)
            cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc532)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc67)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc68)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc68)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc534)
              cir.if %63 {
                cir.break loc(#loc70)
              } loc(#loc535)
            } loc(#loc533)
            %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc536)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc73)
            %21 = cir.const #cir.int<16> : !u64i loc(#loc537)
            cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc538)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc78)
            %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc78)
            %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
            cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc539)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc81)
            %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc81)
            %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc82)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc83)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc540)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc85)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc85)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc86)
            %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc541)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc92)
              %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc543)
              %62 = cir.const #cir.int<16> : !u64i loc(#loc544)
              %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc544)
              %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc97)
              %65 = cir.const #cir.int<1> : !s32i loc(#loc98)
              %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc98)
              %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc545)
              cir.if %67 {
                cir.break loc(#loc100)
              } loc(#loc546)
            } loc(#loc542)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc103)
              %61 = cir.const #cir.int<5> : !s32i loc(#loc104)
              %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc105)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc106)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc106)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc548)
              cir.if %65 {
                cir.break loc(#loc108)
              } loc(#loc549)
            } loc(#loc547)
            %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc109)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc110)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc111)
            %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc112)
            cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc550)
            cir.scope {
              %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc117)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc118)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc118)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc552)
              cir.if %63 {
                cir.break loc(#loc120)
              } loc(#loc553)
            } loc(#loc551)
            %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc121)
            %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc122)
            %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc122)
            %40 = cir.const #cir.int<3> : !s32i loc(#loc123)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc123)
            %42 = cir.const #cir.int<4> : !u64i loc(#loc123)
            %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc123)
            %44 = cir.const #cir.int<2> : !s32i loc(#loc123)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc123)
            %46 = cir.binop(add, %43, %45) : !u64i loc(#loc123)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc124)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc124)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc554)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc125)
            %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc126)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc126)
            cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc555)
            cir.scope {
              %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc131)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc132)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc132)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc557)
              %64 = cir.ternary(%63, true {
                %65 = cir.const #true loc(#loc133)
                cir.yield %65 : !cir.bool loc(#loc133)
              }, false {
                %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc134)
                %66 = cir.const #cir.int<0> : !s32i loc(#loc135)
                %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc558)
                %68 = cir.ternary(%67, true {
                  %69 = cir.const #true loc(#loc133)
                  cir.yield %69 : !cir.bool loc(#loc133)
                }, false {
                  %69 = cir.const #false loc(#loc133)
                  cir.yield %69 : !cir.bool loc(#loc133)
                }) : (!cir.bool) -> !cir.bool loc(#loc133)
                cir.yield %68 : !cir.bool loc(#loc133)
              }) : (!cir.bool) -> !cir.bool loc(#loc133)
              cir.if %64 {
                cir.break loc(#loc137)
              } loc(#loc559)
            } loc(#loc556)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc138)
            %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc138)
            %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc139)
            %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc140)
            %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc140)
            cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc560)
            %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc141)
            %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc142)
            cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc561)
          } loc(#loc531)
          cir.yield loc(#loc56)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc145)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc145)
          cir.condition(%16) loc(#loc145)
        } loc(#loc530)
      } loc(#loc530)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc148)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc149)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc149)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc563)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc151)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc152)
        } loc(#loc564)
      } loc(#loc562)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc155)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc156)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc156)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc566)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc158)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc159)
        } loc(#loc567)
      } loc(#loc565)
    } loc(#loc524)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc160)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc514)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc568)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    cir.call @badSink(%5) : (!s32i) -> () loc(#loc163)
    cir.return loc(#loc37)
  } loc(#loc521)
  cir.func no_proto @CWE400_Resource_Exhaustion__listen_socket_sleep_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc570)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc166)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc571)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc168)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc572)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc170)
    cir.return loc(#loc165)
  } loc(#loc569)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc573)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc176)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc179, #loc180])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc575)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc573)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc184)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc184)
      cir.if %3 {
        %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc174)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc174)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc188)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc191)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc192)
          %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc579)
          %7 = cir.ternary(%6, true {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc194)
            %9 = cir.const #cir.int<2000> : !s32i loc(#loc195)
            %10 = cir.cmp(le, %8, %9) : !s32i, !cir.bool loc(#loc580)
            %11 = cir.ternary(%10, true {
              %12 = cir.const #true loc(#loc193)
              cir.yield %12 : !cir.bool loc(#loc193)
            }, false {
              %12 = cir.const #false loc(#loc193)
              cir.yield %12 : !cir.bool loc(#loc193)
            }) : (!cir.bool) -> !cir.bool loc(#loc193)
            cir.yield %11 : !cir.bool loc(#loc193)
          }, false {
            %8 = cir.const #false loc(#loc193)
            cir.yield %8 : !cir.bool loc(#loc193)
          }) : (!cir.bool) -> !cir.bool loc(#loc193)
          cir.if %7 {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc199)
            %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc199)
            %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc200)
            %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc175)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc175)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc201)
          } else {
            %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc176)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc176)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc202)
          } loc(#loc581)
        } loc(#loc578)
      } loc(#loc577)
    } loc(#loc576)
    cir.return loc(#loc178)
  } loc(#loc574)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc583)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc207)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc208)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc584)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc586)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc587)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc588)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc589)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc590)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc217)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc217)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc588)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc219)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc219)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc589)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc226)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc227)
            %17 = cir.const #cir.int<6> : !s32i loc(#loc228)
            %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc229)
            cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc593)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc234)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc235)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc235)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc595)
              cir.if %63 {
                cir.break loc(#loc237)
              } loc(#loc596)
            } loc(#loc594)
            %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc597)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc240)
            %21 = cir.const #cir.int<16> : !u64i loc(#loc598)
            cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc599)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc245)
            %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc245)
            %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
            cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc600)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc247)
            %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc247)
            %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc82)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc83)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc601)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc249)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc249)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc250)
            %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc602)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc255)
              %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc604)
              %62 = cir.const #cir.int<16> : !u64i loc(#loc605)
              %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc605)
              %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc260)
              %65 = cir.const #cir.int<1> : !s32i loc(#loc261)
              %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc261)
              %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc606)
              cir.if %67 {
                cir.break loc(#loc263)
              } loc(#loc607)
            } loc(#loc603)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc266)
              %61 = cir.const #cir.int<5> : !s32i loc(#loc267)
              %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc268)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc269)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc269)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc609)
              cir.if %65 {
                cir.break loc(#loc271)
              } loc(#loc610)
            } loc(#loc608)
            %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc272)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc273)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc274)
            %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc275)
            cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc611)
            cir.scope {
              %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc280)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc281)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc281)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc613)
              cir.if %63 {
                cir.break loc(#loc283)
              } loc(#loc614)
            } loc(#loc612)
            %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc284)
            %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc285)
            %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc285)
            %40 = cir.const #cir.int<3> : !s32i loc(#loc286)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc286)
            %42 = cir.const #cir.int<4> : !u64i loc(#loc286)
            %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc286)
            %44 = cir.const #cir.int<2> : !s32i loc(#loc286)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc286)
            %46 = cir.binop(add, %43, %45) : !u64i loc(#loc286)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc287)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc287)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc615)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc288)
            %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc289)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc289)
            cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc616)
            cir.scope {
              %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc294)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc295)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc295)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc618)
              %64 = cir.ternary(%63, true {
                %65 = cir.const #true loc(#loc296)
                cir.yield %65 : !cir.bool loc(#loc296)
              }, false {
                %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc297)
                %66 = cir.const #cir.int<0> : !s32i loc(#loc298)
                %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc619)
                %68 = cir.ternary(%67, true {
                  %69 = cir.const #true loc(#loc296)
                  cir.yield %69 : !cir.bool loc(#loc296)
                }, false {
                  %69 = cir.const #false loc(#loc296)
                  cir.yield %69 : !cir.bool loc(#loc296)
                }) : (!cir.bool) -> !cir.bool loc(#loc296)
                cir.yield %68 : !cir.bool loc(#loc296)
              }) : (!cir.bool) -> !cir.bool loc(#loc296)
              cir.if %64 {
                cir.break loc(#loc300)
              } loc(#loc620)
            } loc(#loc617)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc301)
            %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc301)
            %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc302)
            %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc303)
            %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc303)
            cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc621)
            %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc304)
            %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc305)
            cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc622)
          } loc(#loc592)
          cir.yield loc(#loc223)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc308)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc308)
          cir.condition(%16) loc(#loc308)
        } loc(#loc591)
      } loc(#loc591)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc311)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc312)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc312)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc624)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc314)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc315)
        } loc(#loc625)
      } loc(#loc623)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc318)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc319)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc319)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc627)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc321)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc322)
        } loc(#loc628)
      } loc(#loc626)
    } loc(#loc585)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc323)
    %4 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc573)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc629)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc325)
    cir.call @goodB2G1Sink(%5) : (!s32i) -> () loc(#loc326)
    cir.return loc(#loc204)
  } loc(#loc582)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc630)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc331, #loc332])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc632)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc333)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc630)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc336)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc336)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc340)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc341)
          %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc636)
          %7 = cir.ternary(%6, true {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc343)
            %9 = cir.const #cir.int<2000> : !s32i loc(#loc344)
            %10 = cir.cmp(le, %8, %9) : !s32i, !cir.bool loc(#loc637)
            %11 = cir.ternary(%10, true {
              %12 = cir.const #true loc(#loc342)
              cir.yield %12 : !cir.bool loc(#loc342)
            }, false {
              %12 = cir.const #false loc(#loc342)
              cir.yield %12 : !cir.bool loc(#loc342)
            }) : (!cir.bool) -> !cir.bool loc(#loc342)
            cir.yield %11 : !cir.bool loc(#loc342)
          }, false {
            %8 = cir.const #false loc(#loc342)
            cir.yield %8 : !cir.bool loc(#loc342)
          }) : (!cir.bool) -> !cir.bool loc(#loc342)
          cir.if %7 {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc348)
            %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc348)
            %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc349)
            %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc350)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc350)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc351)
          } else {
            %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc352)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc352)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc353)
          } loc(#loc638)
        } loc(#loc635)
      } loc(#loc634)
    } loc(#loc633)
    cir.return loc(#loc330)
  } loc(#loc631)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc640)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc358)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc359)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc641)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc643)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc644)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc645)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc646)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc647)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc368)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc368)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc645)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc370)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc370)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc646)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc377)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc378)
            %17 = cir.const #cir.int<6> : !s32i loc(#loc379)
            %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc380)
            cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc650)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc385)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc386)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc386)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc652)
              cir.if %63 {
                cir.break loc(#loc388)
              } loc(#loc653)
            } loc(#loc651)
            %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc654)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc391)
            %21 = cir.const #cir.int<16> : !u64i loc(#loc655)
            cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc656)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc396)
            %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc396)
            %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
            cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc657)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc398)
            %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc398)
            %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc82)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc83)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc658)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc400)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc400)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc401)
            %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc659)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc406)
              %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc661)
              %62 = cir.const #cir.int<16> : !u64i loc(#loc662)
              %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc662)
              %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc411)
              %65 = cir.const #cir.int<1> : !s32i loc(#loc412)
              %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc412)
              %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc663)
              cir.if %67 {
                cir.break loc(#loc414)
              } loc(#loc664)
            } loc(#loc660)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc417)
              %61 = cir.const #cir.int<5> : !s32i loc(#loc418)
              %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc419)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc420)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc420)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc666)
              cir.if %65 {
                cir.break loc(#loc422)
              } loc(#loc667)
            } loc(#loc665)
            %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc423)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc424)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc425)
            %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc426)
            cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc668)
            cir.scope {
              %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc431)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc432)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc432)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc670)
              cir.if %63 {
                cir.break loc(#loc434)
              } loc(#loc671)
            } loc(#loc669)
            %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc435)
            %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc436)
            %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc436)
            %40 = cir.const #cir.int<3> : !s32i loc(#loc437)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc437)
            %42 = cir.const #cir.int<4> : !u64i loc(#loc437)
            %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc437)
            %44 = cir.const #cir.int<2> : !s32i loc(#loc437)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc437)
            %46 = cir.binop(add, %43, %45) : !u64i loc(#loc437)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc438)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc438)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc672)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc439)
            %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc440)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc440)
            cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc673)
            cir.scope {
              %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc445)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc446)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc446)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc675)
              %64 = cir.ternary(%63, true {
                %65 = cir.const #true loc(#loc447)
                cir.yield %65 : !cir.bool loc(#loc447)
              }, false {
                %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc448)
                %66 = cir.const #cir.int<0> : !s32i loc(#loc449)
                %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc676)
                %68 = cir.ternary(%67, true {
                  %69 = cir.const #true loc(#loc447)
                  cir.yield %69 : !cir.bool loc(#loc447)
                }, false {
                  %69 = cir.const #false loc(#loc447)
                  cir.yield %69 : !cir.bool loc(#loc447)
                }) : (!cir.bool) -> !cir.bool loc(#loc447)
                cir.yield %68 : !cir.bool loc(#loc447)
              }) : (!cir.bool) -> !cir.bool loc(#loc447)
              cir.if %64 {
                cir.break loc(#loc451)
              } loc(#loc677)
            } loc(#loc674)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc452)
            %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc452)
            %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc453)
            %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc454)
            %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc454)
            cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc678)
            %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc455)
            %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc456)
            cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc679)
          } loc(#loc649)
          cir.yield loc(#loc374)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc459)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc459)
          cir.condition(%16) loc(#loc459)
        } loc(#loc648)
      } loc(#loc648)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc462)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc463)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc463)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc681)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc465)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc466)
        } loc(#loc682)
      } loc(#loc680)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc469)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc470)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc470)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc684)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc472)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc473)
        } loc(#loc685)
      } loc(#loc683)
    } loc(#loc642)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc474)
    %4 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc630)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc686)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc476)
    cir.call @goodB2G2Sink(%5) : (!s32i) -> () loc(#loc477)
    cir.return loc(#loc355)
  } loc(#loc639)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc687)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc482, #loc483])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc689)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc484)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc687)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc487)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc487)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc489)
        %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc489)
        %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc490)
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc491)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc491)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc492)
      } loc(#loc691)
    } loc(#loc690)
    cir.return loc(#loc481)
  } loc(#loc688)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc693)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc497)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc498)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc694)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc500)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc695)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc502)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc687)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc696)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc504)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc505)
    cir.return loc(#loc494)
  } loc(#loc692)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":51:1)
#loc18 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":51:24)
#loc19 = loc("/usr/include/unistd.h":480:1)
#loc20 = loc("/usr/include/unistd.h":480:43)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":59:19)
#loc24 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":53:1)
#loc25 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":61:1)
#loc28 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":54:1)
#loc29 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":55:5)
#loc30 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":60:5)
#loc31 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":55:8)
#loc32 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":56:5)
#loc33 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":58:15)
#loc34 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":58:9)
#loc35 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":59:9)
#loc36 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":63:1)
#loc37 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":139:1)
#loc38 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":65:5)
#loc39 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":65:9)
#loc40 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":67:14)
#loc41 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":67:13)
#loc42 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":67:5)
#loc43 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":68:5)
#loc44 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":136:5)
#loc45 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":73:9)
#loc46 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":73:13)
#loc47 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":74:9)
#loc48 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":74:28)
#loc49 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":75:9)
#loc50 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":75:31)
#loc51 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":76:9)
#loc52 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":76:31)
#loc53 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":77:9)
#loc54 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":77:41)
#loc55 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":78:9)
#loc56 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":121:17)
#loc57 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":79:9)
#loc58 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":120:9)
#loc59 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":88:35)
#loc60 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":88:44)
#loc61 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":88:57)
#loc62 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":88:28)
#loc63 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":88:13)
#loc64 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":88:68)
#loc65 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":89:13)
#loc66 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":92:13)
#loc67 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":89:17)
#loc68 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":89:33)
#loc69 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":90:13)
#loc70 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":91:17)
#loc71 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":93:20)
#loc72 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":93:21)
#loc73 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":93:30)
#loc74 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":93:33)
#loc75 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":93:47)
#loc76 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":93:13)
#loc77 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":93:48)
#loc78 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":94:34)
#loc79 = loc("/usr/include/netinet/in.h":249:5)
#loc80 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":94:13)
#loc81 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":95:39)
#loc82 = loc("/usr/include/netinet/in.h":251:20)
#loc83 = loc("/usr/include/netinet/in.h":33:15)
#loc84 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":95:13)
#loc85 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":96:38)
#loc86 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":96:32)
#loc87 = loc("/usr/include/netinet/in.h":250:15)
#loc88 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":96:13)
#loc89 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":96:46)
#loc90 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":97:13)
#loc91 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":100:13)
#loc92 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":97:22)
#loc93 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":97:54)
#loc94 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":97:55)
#loc95 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":97:64)
#loc96 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":97:78)
#loc97 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":97:17)
#loc98 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":97:84)
#loc99 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":98:13)
#loc100 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":99:17)
#loc101 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":101:13)
#loc102 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":104:13)
#loc103 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":101:24)
#loc104 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":101:38)
#loc105 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":101:17)
#loc106 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":101:57)
#loc107 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":102:13)
#loc108 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":103:17)
#loc109 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":105:35)
#loc110 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":105:49)
#loc111 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":105:55)
#loc112 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":105:28)
#loc113 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":105:13)
#loc114 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":105:59)
#loc115 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":106:13)
#loc116 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":109:13)
#loc117 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":106:17)
#loc118 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":106:33)
#loc119 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":107:13)
#loc120 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":108:17)
#loc121 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":111:31)
#loc122 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":111:45)
#loc123 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":111:58)
#loc124 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":111:76)
#loc125 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":111:79)
#loc126 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":111:26)
#loc127 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":111:13)
#loc128 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":111:80)
#loc129 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":112:13)
#loc130 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":115:13)
#loc131 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":112:17)
#loc132 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":112:31)
#loc133 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":112:44)
#loc134 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":112:47)
#loc135 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":112:61)
#loc136 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":113:13)
#loc137 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":114:17)
#loc138 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":117:39)
#loc139 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":117:25)
#loc140 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":117:13)
#loc141 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":119:26)
#loc142 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":119:21)
#loc143 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":119:13)
#loc144 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":119:37)
#loc145 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":121:16)
#loc146 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":122:9)
#loc147 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":125:9)
#loc148 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":122:13)
#loc149 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":122:29)
#loc150 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":123:9)
#loc151 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":124:26)
#loc152 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":124:13)
#loc153 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":126:9)
#loc154 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":129:9)
#loc155 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":126:13)
#loc156 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":126:29)
#loc157 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":127:9)
#loc158 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":128:26)
#loc159 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":128:13)
#loc160 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":137:17)
#loc161 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":137:5)
#loc162 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":138:13)
#loc163 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":138:5)
#loc164 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":369:1)
#loc165 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":374:1)
#loc166 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":371:5)
#loc167 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":371:14)
#loc168 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":372:5)
#loc169 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":372:14)
#loc170 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":373:5)
#loc171 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":373:13)
#loc172 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":146:1)
#loc173 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":146:29)
#loc174 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":156:19)
#loc175 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":164:23)
#loc176 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":168:23)
#loc177 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":151:1)
#loc178 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":171:1)
#loc181 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":152:1)
#loc182 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":153:5)
#loc183 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":170:5)
#loc184 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":153:8)
#loc185 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":154:5)
#loc186 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":157:5)
#loc187 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":159:5)
#loc188 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":156:9)
#loc189 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":161:9)
#loc190 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":169:9)
#loc191 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":161:13)
#loc192 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":161:21)
#loc193 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":161:23)
#loc194 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":161:26)
#loc195 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":161:35)
#loc196 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":162:9)
#loc197 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":165:9)
#loc198 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":167:9)
#loc199 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":163:19)
#loc200 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":163:13)
#loc201 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":164:13)
#loc202 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":168:13)
#loc203 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":173:1)
#loc204 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":249:1)
#loc205 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":175:5)
#loc206 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":175:9)
#loc207 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":177:14)
#loc208 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":177:13)
#loc209 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":177:5)
#loc210 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":178:5)
#loc211 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":246:5)
#loc212 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":183:9)
#loc213 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":183:13)
#loc214 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":184:9)
#loc215 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":184:28)
#loc216 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":185:9)
#loc217 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":185:31)
#loc218 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":186:9)
#loc219 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":186:31)
#loc220 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":187:9)
#loc221 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":187:41)
#loc222 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":188:9)
#loc223 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":231:17)
#loc224 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":189:9)
#loc225 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":230:9)
#loc226 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":198:35)
#loc227 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":198:44)
#loc228 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":198:57)
#loc229 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":198:28)
#loc230 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":198:13)
#loc231 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":198:68)
#loc232 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":199:13)
#loc233 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":202:13)
#loc234 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":199:17)
#loc235 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":199:33)
#loc236 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":200:13)
#loc237 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":201:17)
#loc238 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":203:20)
#loc239 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":203:21)
#loc240 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":203:30)
#loc241 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":203:33)
#loc242 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":203:47)
#loc243 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":203:13)
#loc244 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":203:48)
#loc245 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":204:34)
#loc246 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":204:13)
#loc247 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":205:39)
#loc248 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":205:13)
#loc249 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":206:38)
#loc250 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":206:32)
#loc251 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":206:13)
#loc252 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":206:46)
#loc253 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":207:13)
#loc254 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":210:13)
#loc255 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":207:22)
#loc256 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":207:54)
#loc257 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":207:55)
#loc258 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":207:64)
#loc259 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":207:78)
#loc260 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":207:17)
#loc261 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":207:84)
#loc262 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":208:13)
#loc263 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":209:17)
#loc264 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":211:13)
#loc265 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":214:13)
#loc266 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":211:24)
#loc267 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":211:38)
#loc268 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":211:17)
#loc269 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":211:57)
#loc270 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":212:13)
#loc271 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":213:17)
#loc272 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":215:35)
#loc273 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":215:49)
#loc274 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":215:55)
#loc275 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":215:28)
#loc276 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":215:13)
#loc277 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":215:59)
#loc278 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":216:13)
#loc279 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":219:13)
#loc280 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":216:17)
#loc281 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":216:33)
#loc282 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":217:13)
#loc283 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":218:17)
#loc284 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":221:31)
#loc285 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":221:45)
#loc286 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":221:58)
#loc287 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":221:76)
#loc288 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":221:79)
#loc289 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":221:26)
#loc290 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":221:13)
#loc291 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":221:80)
#loc292 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":222:13)
#loc293 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":225:13)
#loc294 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":222:17)
#loc295 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":222:31)
#loc296 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":222:44)
#loc297 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":222:47)
#loc298 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":222:61)
#loc299 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":223:13)
#loc300 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":224:17)
#loc301 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":227:39)
#loc302 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":227:25)
#loc303 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":227:13)
#loc304 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":229:26)
#loc305 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":229:21)
#loc306 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":229:13)
#loc307 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":229:37)
#loc308 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":231:16)
#loc309 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":232:9)
#loc310 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":235:9)
#loc311 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":232:13)
#loc312 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":232:29)
#loc313 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":233:9)
#loc314 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":234:26)
#loc315 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":234:13)
#loc316 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":236:9)
#loc317 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":239:9)
#loc318 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":236:13)
#loc319 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":236:29)
#loc320 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":237:9)
#loc321 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":238:26)
#loc322 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":238:13)
#loc323 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":247:22)
#loc324 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":247:5)
#loc325 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":248:18)
#loc326 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":248:5)
#loc327 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":147:1)
#loc328 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":147:29)
#loc329 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":252:1)
#loc330 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":267:1)
#loc333 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":253:1)
#loc334 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":254:5)
#loc335 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":266:5)
#loc336 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":254:8)
#loc337 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":255:5)
#loc338 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":257:9)
#loc339 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":265:9)
#loc340 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":257:13)
#loc341 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":257:21)
#loc342 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":257:23)
#loc343 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":257:26)
#loc344 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":257:35)
#loc345 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":258:9)
#loc346 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":261:9)
#loc347 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":263:9)
#loc348 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":259:19)
#loc349 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":259:13)
#loc350 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":260:23)
#loc351 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":260:13)
#loc352 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":264:23)
#loc353 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":264:13)
#loc354 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":269:1)
#loc355 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":345:1)
#loc356 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":271:5)
#loc357 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":271:9)
#loc358 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":273:14)
#loc359 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":273:13)
#loc360 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":273:5)
#loc361 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":274:5)
#loc362 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":342:5)
#loc363 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":279:9)
#loc364 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":279:13)
#loc365 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":280:9)
#loc366 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":280:28)
#loc367 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":281:9)
#loc368 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":281:31)
#loc369 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":282:9)
#loc370 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":282:31)
#loc371 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":283:9)
#loc372 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":283:41)
#loc373 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":284:9)
#loc374 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":327:17)
#loc375 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":285:9)
#loc376 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":326:9)
#loc377 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":294:35)
#loc378 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":294:44)
#loc379 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":294:57)
#loc380 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":294:28)
#loc381 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":294:13)
#loc382 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":294:68)
#loc383 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":295:13)
#loc384 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":298:13)
#loc385 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":295:17)
#loc386 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":295:33)
#loc387 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":296:13)
#loc388 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":297:17)
#loc389 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":299:20)
#loc390 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":299:21)
#loc391 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":299:30)
#loc392 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":299:33)
#loc393 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":299:47)
#loc394 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":299:13)
#loc395 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":299:48)
#loc396 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":300:34)
#loc397 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":300:13)
#loc398 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":301:39)
#loc399 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":301:13)
#loc400 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":302:38)
#loc401 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":302:32)
#loc402 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":302:13)
#loc403 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":302:46)
#loc404 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":303:13)
#loc405 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":306:13)
#loc406 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":303:22)
#loc407 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":303:54)
#loc408 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":303:55)
#loc409 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":303:64)
#loc410 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":303:78)
#loc411 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":303:17)
#loc412 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":303:84)
#loc413 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":304:13)
#loc414 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":305:17)
#loc415 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":307:13)
#loc416 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":310:13)
#loc417 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":307:24)
#loc418 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":307:38)
#loc419 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":307:17)
#loc420 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":307:57)
#loc421 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":308:13)
#loc422 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":309:17)
#loc423 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":311:35)
#loc424 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":311:49)
#loc425 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":311:55)
#loc426 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":311:28)
#loc427 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":311:13)
#loc428 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":311:59)
#loc429 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":312:13)
#loc430 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":315:13)
#loc431 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":312:17)
#loc432 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":312:33)
#loc433 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":313:13)
#loc434 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":314:17)
#loc435 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":317:31)
#loc436 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":317:45)
#loc437 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":317:58)
#loc438 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":317:76)
#loc439 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":317:79)
#loc440 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":317:26)
#loc441 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":317:13)
#loc442 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":317:80)
#loc443 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":318:13)
#loc444 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":321:13)
#loc445 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":318:17)
#loc446 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":318:31)
#loc447 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":318:44)
#loc448 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":318:47)
#loc449 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":318:61)
#loc450 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":319:13)
#loc451 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":320:17)
#loc452 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":323:39)
#loc453 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":323:25)
#loc454 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":323:13)
#loc455 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":325:26)
#loc456 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":325:21)
#loc457 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":325:13)
#loc458 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":325:37)
#loc459 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":327:16)
#loc460 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":328:9)
#loc461 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":331:9)
#loc462 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":328:13)
#loc463 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":328:29)
#loc464 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":329:9)
#loc465 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":330:26)
#loc466 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":330:13)
#loc467 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":332:9)
#loc468 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":335:9)
#loc469 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":332:13)
#loc470 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":332:29)
#loc471 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":333:9)
#loc472 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":334:26)
#loc473 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":334:13)
#loc474 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":343:22)
#loc475 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":343:5)
#loc476 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":344:18)
#loc477 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":344:5)
#loc478 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":148:1)
#loc479 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":148:28)
#loc480 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":348:1)
#loc481 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":356:1)
#loc484 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":349:1)
#loc485 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":350:5)
#loc486 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":355:5)
#loc487 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":350:8)
#loc488 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":351:5)
#loc489 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":353:15)
#loc490 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":353:9)
#loc491 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":354:19)
#loc492 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":354:9)
#loc493 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":358:1)
#loc494 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":367:1)
#loc495 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":360:5)
#loc496 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":360:9)
#loc497 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":362:14)
#loc498 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":362:13)
#loc499 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":362:5)
#loc500 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":364:13)
#loc501 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":364:5)
#loc502 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":365:21)
#loc503 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":365:5)
#loc504 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":366:17)
#loc505 = loc("CWE400_Resource_Exhaustion__listen_socket_sleep_21.c":366:5)
#loc506 = loc(fused[#loc1, #loc2])
#loc507 = loc(fused[#loc3, #loc4])
#loc508 = loc(fused[#loc5, #loc6])
#loc509 = loc(fused[#loc7, #loc8])
#loc510 = loc(fused[#loc9, #loc10])
#loc511 = loc(fused[#loc11, #loc12])
#loc512 = loc(fused[#loc13, #loc14])
#loc513 = loc(fused[#loc15, #loc16])
#loc514 = loc(fused[#loc17, #loc18])
#loc515 = loc(fused[#loc19, #loc20])
#loc516 = loc(fused[#loc21, #loc22])
#loc517 = loc(fused[#loc24, #loc25])
#loc519 = loc(fused[#loc29, #loc30])
#loc520 = loc(fused[#loc32, #loc30])
#loc521 = loc(fused[#loc36, #loc37])
#loc522 = loc(fused[#loc38, #loc39])
#loc523 = loc(fused[#loc42, #loc40])
#loc524 = loc(fused[#loc43, #loc44])
#loc525 = loc(fused[#loc45, #loc46])
#loc526 = loc(fused[#loc47, #loc48])
#loc527 = loc(fused[#loc49, #loc50])
#loc528 = loc(fused[#loc51, #loc52])
#loc529 = loc(fused[#loc53, #loc54])
#loc530 = loc(fused[#loc55, #loc56])
#loc531 = loc(fused[#loc57, #loc58])
#loc532 = loc(fused[#loc63, #loc64])
#loc533 = loc(fused[#loc65, #loc66])
#loc534 = loc(fused[#loc67, #loc68])
#loc535 = loc(fused[#loc69, #loc66])
#loc536 = loc(fused[#loc71, #loc72])
#loc537 = loc(fused[#loc74, #loc75])
#loc538 = loc(fused[#loc76, #loc77])
#loc539 = loc(fused[#loc80, #loc78])
#loc540 = loc(fused[#loc84, #loc81])
#loc541 = loc(fused[#loc88, #loc89])
#loc542 = loc(fused[#loc90, #loc91])
#loc543 = loc(fused[#loc93, #loc94])
#loc544 = loc(fused[#loc95, #loc96])
#loc545 = loc(fused[#loc97, #loc98])
#loc546 = loc(fused[#loc99, #loc91])
#loc547 = loc(fused[#loc101, #loc102])
#loc548 = loc(fused[#loc105, #loc106])
#loc549 = loc(fused[#loc107, #loc102])
#loc550 = loc(fused[#loc113, #loc114])
#loc551 = loc(fused[#loc115, #loc116])
#loc552 = loc(fused[#loc117, #loc118])
#loc553 = loc(fused[#loc119, #loc116])
#loc554 = loc(fused[#loc123, #loc124])
#loc555 = loc(fused[#loc127, #loc128])
#loc556 = loc(fused[#loc129, #loc130])
#loc557 = loc(fused[#loc131, #loc132])
#loc558 = loc(fused[#loc134, #loc135])
#loc559 = loc(fused[#loc136, #loc130])
#loc560 = loc(fused[#loc140, #loc138])
#loc561 = loc(fused[#loc143, #loc144])
#loc562 = loc(fused[#loc146, #loc147])
#loc563 = loc(fused[#loc148, #loc149])
#loc564 = loc(fused[#loc150, #loc147])
#loc565 = loc(fused[#loc153, #loc154])
#loc566 = loc(fused[#loc155, #loc156])
#loc567 = loc(fused[#loc157, #loc154])
#loc568 = loc(fused[#loc161, #loc160])
#loc569 = loc(fused[#loc164, #loc165])
#loc570 = loc(fused[#loc166, #loc167])
#loc571 = loc(fused[#loc168, #loc169])
#loc572 = loc(fused[#loc170, #loc171])
#loc573 = loc(fused[#loc172, #loc173])
#loc574 = loc(fused[#loc177, #loc178])
#loc576 = loc(fused[#loc182, #loc183])
#loc577 = loc(fused[#loc185, #loc186, #loc187, #loc183])
#loc578 = loc(fused[#loc189, #loc190])
#loc579 = loc(fused[#loc191, #loc192])
#loc580 = loc(fused[#loc194, #loc195])
#loc581 = loc(fused[#loc196, #loc197, #loc198, #loc190])
#loc582 = loc(fused[#loc203, #loc204])
#loc583 = loc(fused[#loc205, #loc206])
#loc584 = loc(fused[#loc209, #loc207])
#loc585 = loc(fused[#loc210, #loc211])
#loc586 = loc(fused[#loc212, #loc213])
#loc587 = loc(fused[#loc214, #loc215])
#loc588 = loc(fused[#loc216, #loc217])
#loc589 = loc(fused[#loc218, #loc219])
#loc590 = loc(fused[#loc220, #loc221])
#loc591 = loc(fused[#loc222, #loc223])
#loc592 = loc(fused[#loc224, #loc225])
#loc593 = loc(fused[#loc230, #loc231])
#loc594 = loc(fused[#loc232, #loc233])
#loc595 = loc(fused[#loc234, #loc235])
#loc596 = loc(fused[#loc236, #loc233])
#loc597 = loc(fused[#loc238, #loc239])
#loc598 = loc(fused[#loc241, #loc242])
#loc599 = loc(fused[#loc243, #loc244])
#loc600 = loc(fused[#loc246, #loc245])
#loc601 = loc(fused[#loc248, #loc247])
#loc602 = loc(fused[#loc251, #loc252])
#loc603 = loc(fused[#loc253, #loc254])
#loc604 = loc(fused[#loc256, #loc257])
#loc605 = loc(fused[#loc258, #loc259])
#loc606 = loc(fused[#loc260, #loc261])
#loc607 = loc(fused[#loc262, #loc254])
#loc608 = loc(fused[#loc264, #loc265])
#loc609 = loc(fused[#loc268, #loc269])
#loc610 = loc(fused[#loc270, #loc265])
#loc611 = loc(fused[#loc276, #loc277])
#loc612 = loc(fused[#loc278, #loc279])
#loc613 = loc(fused[#loc280, #loc281])
#loc614 = loc(fused[#loc282, #loc279])
#loc615 = loc(fused[#loc286, #loc287])
#loc616 = loc(fused[#loc290, #loc291])
#loc617 = loc(fused[#loc292, #loc293])
#loc618 = loc(fused[#loc294, #loc295])
#loc619 = loc(fused[#loc297, #loc298])
#loc620 = loc(fused[#loc299, #loc293])
#loc621 = loc(fused[#loc303, #loc301])
#loc622 = loc(fused[#loc306, #loc307])
#loc623 = loc(fused[#loc309, #loc310])
#loc624 = loc(fused[#loc311, #loc312])
#loc625 = loc(fused[#loc313, #loc310])
#loc626 = loc(fused[#loc316, #loc317])
#loc627 = loc(fused[#loc318, #loc319])
#loc628 = loc(fused[#loc320, #loc317])
#loc629 = loc(fused[#loc324, #loc323])
#loc630 = loc(fused[#loc327, #loc328])
#loc631 = loc(fused[#loc329, #loc330])
#loc633 = loc(fused[#loc334, #loc335])
#loc634 = loc(fused[#loc337, #loc335])
#loc635 = loc(fused[#loc338, #loc339])
#loc636 = loc(fused[#loc340, #loc341])
#loc637 = loc(fused[#loc343, #loc344])
#loc638 = loc(fused[#loc345, #loc346, #loc347, #loc339])
#loc639 = loc(fused[#loc354, #loc355])
#loc640 = loc(fused[#loc356, #loc357])
#loc641 = loc(fused[#loc360, #loc358])
#loc642 = loc(fused[#loc361, #loc362])
#loc643 = loc(fused[#loc363, #loc364])
#loc644 = loc(fused[#loc365, #loc366])
#loc645 = loc(fused[#loc367, #loc368])
#loc646 = loc(fused[#loc369, #loc370])
#loc647 = loc(fused[#loc371, #loc372])
#loc648 = loc(fused[#loc373, #loc374])
#loc649 = loc(fused[#loc375, #loc376])
#loc650 = loc(fused[#loc381, #loc382])
#loc651 = loc(fused[#loc383, #loc384])
#loc652 = loc(fused[#loc385, #loc386])
#loc653 = loc(fused[#loc387, #loc384])
#loc654 = loc(fused[#loc389, #loc390])
#loc655 = loc(fused[#loc392, #loc393])
#loc656 = loc(fused[#loc394, #loc395])
#loc657 = loc(fused[#loc397, #loc396])
#loc658 = loc(fused[#loc399, #loc398])
#loc659 = loc(fused[#loc402, #loc403])
#loc660 = loc(fused[#loc404, #loc405])
#loc661 = loc(fused[#loc407, #loc408])
#loc662 = loc(fused[#loc409, #loc410])
#loc663 = loc(fused[#loc411, #loc412])
#loc664 = loc(fused[#loc413, #loc405])
#loc665 = loc(fused[#loc415, #loc416])
#loc666 = loc(fused[#loc419, #loc420])
#loc667 = loc(fused[#loc421, #loc416])
#loc668 = loc(fused[#loc427, #loc428])
#loc669 = loc(fused[#loc429, #loc430])
#loc670 = loc(fused[#loc431, #loc432])
#loc671 = loc(fused[#loc433, #loc430])
#loc672 = loc(fused[#loc437, #loc438])
#loc673 = loc(fused[#loc441, #loc442])
#loc674 = loc(fused[#loc443, #loc444])
#loc675 = loc(fused[#loc445, #loc446])
#loc676 = loc(fused[#loc448, #loc449])
#loc677 = loc(fused[#loc450, #loc444])
#loc678 = loc(fused[#loc454, #loc452])
#loc679 = loc(fused[#loc457, #loc458])
#loc680 = loc(fused[#loc460, #loc461])
#loc681 = loc(fused[#loc462, #loc463])
#loc682 = loc(fused[#loc464, #loc461])
#loc683 = loc(fused[#loc467, #loc468])
#loc684 = loc(fused[#loc469, #loc470])
#loc685 = loc(fused[#loc471, #loc468])
#loc686 = loc(fused[#loc475, #loc474])
#loc687 = loc(fused[#loc478, #loc479])
#loc688 = loc(fused[#loc480, #loc481])
#loc690 = loc(fused[#loc485, #loc486])
#loc691 = loc(fused[#loc488, #loc486])
#loc692 = loc(fused[#loc493, #loc494])
#loc693 = loc(fused[#loc495, #loc496])
#loc694 = loc(fused[#loc499, #loc497])
#loc695 = loc(fused[#loc501, #loc500])
#loc696 = loc(fused[#loc503, #loc502])
