!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc26 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":47:21)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":47:25)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":155:26)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":155:30)
#loc347 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":258:26)
#loc348 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":258:30)
#loc502 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":356:25)
#loc503 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":356:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc550 = loc(fused[#loc26, #loc27])
#loc612 = loc(fused[#loc190, #loc191])
#loc671 = loc(fused[#loc347, #loc348])
#loc730 = loc(fused[#loc502, #loc503])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_listen_socket_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc538)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc539)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc540)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc541)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc542)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc543)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc544)
  cir.func private @close(!s32i) -> !s32i loc(#loc545)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc546)
  cir.func private @printIntLine(!s32i) loc(#loc547)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc548)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc23)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc26, #loc27])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc550)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc28)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc546)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc31)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc31)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc554)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc554)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc554)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc40)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc556)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc44)
              %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc45)
              %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc45)
              %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc45)
              cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc46)
            } else {
              %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc23)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc23)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc47)
            } loc(#loc557)
          } loc(#loc555)
        } loc(#loc553)
      } loc(#loc552)
    } loc(#loc551)
    cir.return loc(#loc25)
  } loc(#loc549)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_listen_socket_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc559)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc53)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc560)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc562)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc563)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc564)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc565)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc566)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc62)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc62)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc564)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc64)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc64)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc565)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc71)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc72)
            %17 = cir.const #cir.int<6> : !s32i loc(#loc73)
            %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc74)
            cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc569)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc79)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc80)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc80)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc571)
              cir.if %63 {
                cir.break loc(#loc82)
              } loc(#loc572)
            } loc(#loc570)
            %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc573)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc85)
            %21 = cir.const #cir.int<16> : !u64i loc(#loc574)
            cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc575)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc90)
            %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc90)
            %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc91)
            cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc576)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc93)
            %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc93)
            %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc94)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc95)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc577)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc97)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc97)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc98)
            %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc99)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc578)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc104)
              %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc580)
              %62 = cir.const #cir.int<16> : !u64i loc(#loc581)
              %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc581)
              %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc109)
              %65 = cir.const #cir.int<1> : !s32i loc(#loc110)
              %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc110)
              %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc582)
              cir.if %67 {
                cir.break loc(#loc112)
              } loc(#loc583)
            } loc(#loc579)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc115)
              %61 = cir.const #cir.int<5> : !s32i loc(#loc116)
              %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc117)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc118)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc118)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc585)
              cir.if %65 {
                cir.break loc(#loc120)
              } loc(#loc586)
            } loc(#loc584)
            %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc121)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc122)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc123)
            %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc124)
            cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc587)
            cir.scope {
              %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc129)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc130)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc130)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc589)
              cir.if %63 {
                cir.break loc(#loc132)
              } loc(#loc590)
            } loc(#loc588)
            %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc133)
            %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc134)
            %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc134)
            %40 = cir.const #cir.int<3> : !s32i loc(#loc135)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc135)
            %42 = cir.const #cir.int<4> : !u64i loc(#loc135)
            %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc135)
            %44 = cir.const #cir.int<2> : !s32i loc(#loc135)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc135)
            %46 = cir.binop(add, %43, %45) : !u64i loc(#loc135)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc136)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc136)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc591)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc137)
            %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc138)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc138)
            cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc592)
            cir.scope {
              %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc143)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc144)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc144)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc594)
              %64 = cir.ternary(%63, true {
                %65 = cir.const #true loc(#loc145)
                cir.yield %65 : !cir.bool loc(#loc145)
              }, false {
                %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc146)
                %66 = cir.const #cir.int<0> : !s32i loc(#loc147)
                %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc595)
                %68 = cir.ternary(%67, true {
                  %69 = cir.const #true loc(#loc145)
                  cir.yield %69 : !cir.bool loc(#loc145)
                }, false {
                  %69 = cir.const #false loc(#loc145)
                  cir.yield %69 : !cir.bool loc(#loc145)
                }) : (!cir.bool) -> !cir.bool loc(#loc145)
                cir.yield %68 : !cir.bool loc(#loc145)
              }) : (!cir.bool) -> !cir.bool loc(#loc145)
              cir.if %64 {
                cir.break loc(#loc149)
              } loc(#loc596)
            } loc(#loc593)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc150)
            %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc150)
            %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc151)
            %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc152)
            %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc152)
            cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc597)
            %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc153)
            %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc154)
            cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc598)
          } loc(#loc568)
          cir.yield loc(#loc68)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc157)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc157)
          cir.condition(%16) loc(#loc157)
        } loc(#loc567)
      } loc(#loc567)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc160)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc161)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc161)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc600)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc163)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc164)
        } loc(#loc601)
      } loc(#loc599)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc167)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc168)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc168)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc603)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc170)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc171)
        } loc(#loc604)
      } loc(#loc602)
    } loc(#loc561)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc172)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc546)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc605)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    cir.call @badSink(%5) : (!s32i) -> () loc(#loc175)
    cir.return loc(#loc49)
  } loc(#loc558)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_listen_socket_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc607)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc178)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc608)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc180)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc609)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc182)
    cir.return loc(#loc177)
  } loc(#loc606)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc610)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc187)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc190, #loc191])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc612)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc610)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc195)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc195)
      cir.if %3 {
        %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc186)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc186)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc199)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc616)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc616)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc616)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc206)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc207)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc618)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc209)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc210)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc619)
              %13 = cir.ternary(%12, true {
                %14 = cir.const #true loc(#loc208)
                cir.yield %14 : !cir.bool loc(#loc208)
              }, false {
                %14 = cir.const #false loc(#loc208)
                cir.yield %14 : !cir.bool loc(#loc208)
              }) : (!cir.bool) -> !cir.bool loc(#loc208)
              cir.yield %13 : !cir.bool loc(#loc208)
            }, false {
              %10 = cir.const #false loc(#loc208)
              cir.yield %10 : !cir.bool loc(#loc208)
            }) : (!cir.bool) -> !cir.bool loc(#loc208)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc215)
              %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc216)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc216)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc216)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc217)
            } else {
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc187)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc187)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc218)
            } loc(#loc620)
          } loc(#loc617)
        } loc(#loc615)
      } loc(#loc614)
    } loc(#loc613)
    cir.return loc(#loc189)
  } loc(#loc611)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc622)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc223)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc224)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc623)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc625)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc626)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc627)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc628)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc629)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc233)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc233)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc627)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc235)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc235)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc628)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc242)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc243)
            %17 = cir.const #cir.int<6> : !s32i loc(#loc244)
            %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc245)
            cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc632)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc250)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc251)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc251)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc634)
              cir.if %63 {
                cir.break loc(#loc253)
              } loc(#loc635)
            } loc(#loc633)
            %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc636)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc256)
            %21 = cir.const #cir.int<16> : !u64i loc(#loc637)
            cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc638)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc261)
            %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc261)
            %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc91)
            cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc639)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc263)
            %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc263)
            %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc94)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc95)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc640)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc265)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc265)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc266)
            %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc99)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc641)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc271)
              %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc643)
              %62 = cir.const #cir.int<16> : !u64i loc(#loc644)
              %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc644)
              %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc276)
              %65 = cir.const #cir.int<1> : !s32i loc(#loc277)
              %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc277)
              %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc645)
              cir.if %67 {
                cir.break loc(#loc279)
              } loc(#loc646)
            } loc(#loc642)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc282)
              %61 = cir.const #cir.int<5> : !s32i loc(#loc283)
              %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc284)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc285)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc285)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc648)
              cir.if %65 {
                cir.break loc(#loc287)
              } loc(#loc649)
            } loc(#loc647)
            %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc288)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc289)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc290)
            %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc291)
            cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc650)
            cir.scope {
              %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc296)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc297)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc297)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc652)
              cir.if %63 {
                cir.break loc(#loc299)
              } loc(#loc653)
            } loc(#loc651)
            %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc300)
            %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc301)
            %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc301)
            %40 = cir.const #cir.int<3> : !s32i loc(#loc302)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc302)
            %42 = cir.const #cir.int<4> : !u64i loc(#loc302)
            %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc302)
            %44 = cir.const #cir.int<2> : !s32i loc(#loc302)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc302)
            %46 = cir.binop(add, %43, %45) : !u64i loc(#loc302)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc303)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc303)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc654)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc304)
            %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc305)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc305)
            cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc655)
            cir.scope {
              %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc310)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc311)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc311)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc657)
              %64 = cir.ternary(%63, true {
                %65 = cir.const #true loc(#loc312)
                cir.yield %65 : !cir.bool loc(#loc312)
              }, false {
                %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc313)
                %66 = cir.const #cir.int<0> : !s32i loc(#loc314)
                %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc658)
                %68 = cir.ternary(%67, true {
                  %69 = cir.const #true loc(#loc312)
                  cir.yield %69 : !cir.bool loc(#loc312)
                }, false {
                  %69 = cir.const #false loc(#loc312)
                  cir.yield %69 : !cir.bool loc(#loc312)
                }) : (!cir.bool) -> !cir.bool loc(#loc312)
                cir.yield %68 : !cir.bool loc(#loc312)
              }) : (!cir.bool) -> !cir.bool loc(#loc312)
              cir.if %64 {
                cir.break loc(#loc316)
              } loc(#loc659)
            } loc(#loc656)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc317)
            %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc317)
            %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc318)
            %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc319)
            %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc319)
            cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc660)
            %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc320)
            %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc321)
            cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc661)
          } loc(#loc631)
          cir.yield loc(#loc239)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc324)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc324)
          cir.condition(%16) loc(#loc324)
        } loc(#loc630)
      } loc(#loc630)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc327)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc328)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc328)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc663)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc330)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc331)
        } loc(#loc664)
      } loc(#loc662)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc334)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc335)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc335)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc666)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc337)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc338)
        } loc(#loc667)
      } loc(#loc665)
    } loc(#loc624)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc339)
    %4 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc610)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc668)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc341)
    cir.call @goodB2G1Sink(%5) : (!s32i) -> () loc(#loc342)
    cir.return loc(#loc220)
  } loc(#loc621)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc669)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc347, #loc348])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc671)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc349)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc669)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc352)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc352)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc675)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc675)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc675)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc360)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc361)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc677)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc363)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc364)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc678)
              %13 = cir.ternary(%12, true {
                %14 = cir.const #true loc(#loc362)
                cir.yield %14 : !cir.bool loc(#loc362)
              }, false {
                %14 = cir.const #false loc(#loc362)
                cir.yield %14 : !cir.bool loc(#loc362)
              }) : (!cir.bool) -> !cir.bool loc(#loc362)
              cir.yield %13 : !cir.bool loc(#loc362)
            }, false {
              %10 = cir.const #false loc(#loc362)
              cir.yield %10 : !cir.bool loc(#loc362)
            }) : (!cir.bool) -> !cir.bool loc(#loc362)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc369)
              %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc370)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc370)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc370)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc371)
            } else {
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc372)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc372)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc373)
            } loc(#loc679)
          } loc(#loc676)
        } loc(#loc674)
      } loc(#loc673)
    } loc(#loc672)
    cir.return loc(#loc346)
  } loc(#loc670)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc681)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc378)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc379)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc682)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc684)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc685)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc686)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc687)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc688)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc388)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc388)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc686)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc390)
      %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc390)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc687)
      cir.scope {
        cir.do {
          cir.scope {
            %15 = cir.const #cir.int<2> : !s32i loc(#loc397)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc398)
            %17 = cir.const #cir.int<6> : !s32i loc(#loc399)
            %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc400)
            cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc691)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc405)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc406)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc406)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc693)
              cir.if %63 {
                cir.break loc(#loc408)
              } loc(#loc694)
            } loc(#loc692)
            %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc695)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc411)
            %21 = cir.const #cir.int<16> : !u64i loc(#loc696)
            cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc697)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc416)
            %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc416)
            %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc91)
            cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc698)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc418)
            %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc418)
            %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc94)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc95)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc699)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc420)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc420)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc421)
            %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc99)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc700)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc426)
              %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc702)
              %62 = cir.const #cir.int<16> : !u64i loc(#loc703)
              %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc703)
              %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc431)
              %65 = cir.const #cir.int<1> : !s32i loc(#loc432)
              %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc432)
              %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc704)
              cir.if %67 {
                cir.break loc(#loc434)
              } loc(#loc705)
            } loc(#loc701)
            cir.scope {
              %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc437)
              %61 = cir.const #cir.int<5> : !s32i loc(#loc438)
              %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc439)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc440)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc440)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc707)
              cir.if %65 {
                cir.break loc(#loc442)
              } loc(#loc708)
            } loc(#loc706)
            %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc443)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc444)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc445)
            %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc446)
            cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc709)
            cir.scope {
              %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc451)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc452)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc452)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc711)
              cir.if %63 {
                cir.break loc(#loc454)
              } loc(#loc712)
            } loc(#loc710)
            %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc455)
            %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc456)
            %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc456)
            %40 = cir.const #cir.int<3> : !s32i loc(#loc457)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc457)
            %42 = cir.const #cir.int<4> : !u64i loc(#loc457)
            %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc457)
            %44 = cir.const #cir.int<2> : !s32i loc(#loc457)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc457)
            %46 = cir.binop(add, %43, %45) : !u64i loc(#loc457)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc458)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc458)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc713)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc459)
            %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc460)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc460)
            cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc714)
            cir.scope {
              %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc465)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc466)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc466)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc716)
              %64 = cir.ternary(%63, true {
                %65 = cir.const #true loc(#loc467)
                cir.yield %65 : !cir.bool loc(#loc467)
              }, false {
                %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc468)
                %66 = cir.const #cir.int<0> : !s32i loc(#loc469)
                %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc717)
                %68 = cir.ternary(%67, true {
                  %69 = cir.const #true loc(#loc467)
                  cir.yield %69 : !cir.bool loc(#loc467)
                }, false {
                  %69 = cir.const #false loc(#loc467)
                  cir.yield %69 : !cir.bool loc(#loc467)
                }) : (!cir.bool) -> !cir.bool loc(#loc467)
                cir.yield %68 : !cir.bool loc(#loc467)
              }) : (!cir.bool) -> !cir.bool loc(#loc467)
              cir.if %64 {
                cir.break loc(#loc471)
              } loc(#loc718)
            } loc(#loc715)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc472)
            %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc472)
            %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc473)
            %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc474)
            %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc474)
            cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc719)
            %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc475)
            %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc476)
            cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc720)
          } loc(#loc690)
          cir.yield loc(#loc394)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc479)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc479)
          cir.condition(%16) loc(#loc479)
        } loc(#loc689)
      } loc(#loc689)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc482)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc483)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc483)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc722)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc485)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc486)
        } loc(#loc723)
      } loc(#loc721)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc489)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc490)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc490)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc725)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc492)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc493)
        } loc(#loc726)
      } loc(#loc724)
    } loc(#loc683)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc494)
    %4 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc669)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc727)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc496)
    cir.call @goodB2G2Sink(%5) : (!s32i) -> () loc(#loc497)
    cir.return loc(#loc375)
  } loc(#loc680)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc728)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc502, #loc503])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc730)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc504)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc728)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc507)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc507)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc734)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc734)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc734)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc515)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc516)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc736)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc520)
              %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc521)
              %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc521)
              %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc521)
              cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc522)
            } else {
              %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc523)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc523)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc524)
            } loc(#loc737)
          } loc(#loc735)
        } loc(#loc733)
      } loc(#loc732)
    } loc(#loc731)
    cir.return loc(#loc501)
  } loc(#loc729)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc739)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc529)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc530)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc740)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc532)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc741)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc534)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc728)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc742)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc536)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc537)
    cir.return loc(#loc526)
  } loc(#loc738)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_listen_socket_21.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":45:1)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":45:24)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":61:27)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":47:1)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":65:1)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":48:1)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":49:5)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":64:5)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":49:8)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":50:5)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":51:9)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":63:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":52:13)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":52:34)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":55:13)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":62:13)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":55:17)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":55:25)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":56:13)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":58:13)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":60:13)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":57:37)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":57:30)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":57:17)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":61:17)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":67:1)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":143:1)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":69:5)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":69:9)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":71:13)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":71:12)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":71:5)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":72:5)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":140:5)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":77:9)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":77:13)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":78:9)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":78:28)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":79:9)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":79:31)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":80:9)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":80:31)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":81:9)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":81:41)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":82:9)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":125:17)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":83:9)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":124:9)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":92:35)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":92:44)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":92:57)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":92:28)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":92:13)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":92:68)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":93:13)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":96:13)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":93:17)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":93:33)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":94:13)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":95:17)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":97:20)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":97:21)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":97:30)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":97:33)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":97:47)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":97:13)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":97:48)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":98:34)
#loc91 = loc("/usr/include/netinet/in.h":249:5)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":98:13)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":99:39)
#loc94 = loc("/usr/include/netinet/in.h":251:20)
#loc95 = loc("/usr/include/netinet/in.h":33:15)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":99:13)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":100:38)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":100:32)
#loc99 = loc("/usr/include/netinet/in.h":250:15)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":100:13)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":100:46)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":101:13)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":104:13)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":101:22)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":101:54)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":101:55)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":101:64)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":101:78)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":101:17)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":101:84)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":102:13)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":103:17)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":105:13)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":108:13)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":105:24)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":105:38)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":105:17)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":105:57)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":106:13)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":107:17)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":109:35)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":109:49)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":109:55)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":109:28)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":109:13)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":109:59)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":110:13)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":113:13)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":110:17)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":110:33)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":111:13)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":112:17)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":115:31)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":115:45)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":115:58)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":115:76)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":115:79)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":115:26)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":115:13)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":115:80)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":116:13)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":119:13)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":116:17)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":116:31)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":116:44)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":116:47)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":116:61)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":117:13)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":118:17)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":121:39)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":121:25)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":121:13)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":123:25)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":123:20)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":123:13)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":123:36)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":125:16)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":126:9)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":129:9)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":126:13)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":126:29)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":127:9)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":128:26)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":128:13)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":130:9)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":133:9)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":130:13)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":130:29)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":131:9)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":132:26)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":132:13)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":141:17)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":141:5)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":142:13)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":142:5)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":388:1)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":393:1)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":390:5)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":390:14)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":391:5)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":391:14)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":392:5)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":392:13)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":150:1)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":150:29)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":160:19)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":173:27)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":155:1)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":177:1)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":156:1)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":157:5)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":176:5)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":157:8)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":158:5)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":161:5)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":163:5)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":160:9)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":164:9)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":175:9)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":165:13)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":165:34)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":167:13)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":174:13)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":167:17)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":167:25)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":167:27)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":167:30)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":167:38)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":167:40)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":168:13)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":170:13)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":172:13)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":169:37)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":169:30)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":169:17)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":173:17)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":179:1)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":255:1)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":181:5)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":181:9)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":183:13)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":183:12)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":183:5)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":184:5)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":252:5)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":189:9)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":189:13)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":190:9)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":190:28)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":191:9)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":191:31)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":192:9)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":192:31)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":193:9)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":193:41)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":194:9)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":237:17)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":195:9)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":236:9)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":204:35)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":204:44)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":204:57)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":204:28)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":204:13)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":204:68)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":205:13)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":208:13)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":205:17)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":205:33)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":206:13)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":207:17)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":209:20)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":209:21)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":209:30)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":209:33)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":209:47)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":209:13)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":209:48)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":210:34)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":210:13)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":211:39)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":211:13)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":212:38)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":212:32)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":212:13)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":212:46)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":213:13)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":216:13)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":213:22)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":213:54)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":213:55)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":213:64)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":213:78)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":213:17)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":213:84)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":214:13)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":215:17)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":217:13)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":220:13)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":217:24)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":217:38)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":217:17)
#loc285 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":217:57)
#loc286 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":218:13)
#loc287 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":219:17)
#loc288 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":221:35)
#loc289 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":221:49)
#loc290 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":221:55)
#loc291 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":221:28)
#loc292 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":221:13)
#loc293 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":221:59)
#loc294 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":222:13)
#loc295 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":225:13)
#loc296 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":222:17)
#loc297 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":222:33)
#loc298 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":223:13)
#loc299 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":224:17)
#loc300 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":227:31)
#loc301 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":227:45)
#loc302 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":227:58)
#loc303 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":227:76)
#loc304 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":227:79)
#loc305 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":227:26)
#loc306 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":227:13)
#loc307 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":227:80)
#loc308 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":228:13)
#loc309 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":231:13)
#loc310 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":228:17)
#loc311 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":228:31)
#loc312 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":228:44)
#loc313 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":228:47)
#loc314 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":228:61)
#loc315 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":229:13)
#loc316 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":230:17)
#loc317 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":233:39)
#loc318 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":233:25)
#loc319 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":233:13)
#loc320 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":235:25)
#loc321 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":235:20)
#loc322 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":235:13)
#loc323 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":235:36)
#loc324 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":237:16)
#loc325 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":238:9)
#loc326 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":241:9)
#loc327 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":238:13)
#loc328 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":238:29)
#loc329 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":239:9)
#loc330 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":240:26)
#loc331 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":240:13)
#loc332 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":242:9)
#loc333 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":245:9)
#loc334 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":242:13)
#loc335 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":242:29)
#loc336 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":243:9)
#loc337 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":244:26)
#loc338 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":244:13)
#loc339 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":253:22)
#loc340 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":253:5)
#loc341 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":254:18)
#loc342 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":254:5)
#loc343 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":151:1)
#loc344 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":151:29)
#loc345 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":258:1)
#loc346 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":275:1)
#loc349 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":259:1)
#loc350 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":260:5)
#loc351 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":274:5)
#loc352 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":260:8)
#loc353 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":261:5)
#loc354 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":262:9)
#loc355 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":273:9)
#loc356 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":263:13)
#loc357 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":263:34)
#loc358 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":265:13)
#loc359 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":272:13)
#loc360 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":265:17)
#loc361 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":265:25)
#loc362 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":265:27)
#loc363 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":265:30)
#loc364 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":265:38)
#loc365 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":265:40)
#loc366 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":266:13)
#loc367 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":268:13)
#loc368 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":270:13)
#loc369 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":267:37)
#loc370 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":267:30)
#loc371 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":267:17)
#loc372 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":271:27)
#loc373 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":271:17)
#loc374 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":277:1)
#loc375 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":353:1)
#loc376 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":279:5)
#loc377 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":279:9)
#loc378 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":281:13)
#loc379 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":281:12)
#loc380 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":281:5)
#loc381 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":282:5)
#loc382 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":350:5)
#loc383 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":287:9)
#loc384 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":287:13)
#loc385 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":288:9)
#loc386 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":288:28)
#loc387 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":289:9)
#loc388 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":289:31)
#loc389 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":290:9)
#loc390 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":290:31)
#loc391 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":291:9)
#loc392 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":291:41)
#loc393 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":292:9)
#loc394 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":335:17)
#loc395 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":293:9)
#loc396 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":334:9)
#loc397 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":302:35)
#loc398 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":302:44)
#loc399 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":302:57)
#loc400 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":302:28)
#loc401 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":302:13)
#loc402 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":302:68)
#loc403 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":303:13)
#loc404 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":306:13)
#loc405 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":303:17)
#loc406 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":303:33)
#loc407 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":304:13)
#loc408 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":305:17)
#loc409 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":307:20)
#loc410 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":307:21)
#loc411 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":307:30)
#loc412 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":307:33)
#loc413 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":307:47)
#loc414 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":307:13)
#loc415 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":307:48)
#loc416 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":308:34)
#loc417 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":308:13)
#loc418 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":309:39)
#loc419 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":309:13)
#loc420 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":310:38)
#loc421 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":310:32)
#loc422 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":310:13)
#loc423 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":310:46)
#loc424 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":311:13)
#loc425 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":314:13)
#loc426 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":311:22)
#loc427 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":311:54)
#loc428 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":311:55)
#loc429 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":311:64)
#loc430 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":311:78)
#loc431 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":311:17)
#loc432 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":311:84)
#loc433 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":312:13)
#loc434 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":313:17)
#loc435 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":315:13)
#loc436 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":318:13)
#loc437 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":315:24)
#loc438 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":315:38)
#loc439 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":315:17)
#loc440 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":315:57)
#loc441 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":316:13)
#loc442 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":317:17)
#loc443 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":319:35)
#loc444 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":319:49)
#loc445 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":319:55)
#loc446 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":319:28)
#loc447 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":319:13)
#loc448 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":319:59)
#loc449 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":320:13)
#loc450 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":323:13)
#loc451 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":320:17)
#loc452 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":320:33)
#loc453 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":321:13)
#loc454 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":322:17)
#loc455 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":325:31)
#loc456 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":325:45)
#loc457 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":325:58)
#loc458 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":325:76)
#loc459 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":325:79)
#loc460 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":325:26)
#loc461 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":325:13)
#loc462 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":325:80)
#loc463 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":326:13)
#loc464 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":329:13)
#loc465 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":326:17)
#loc466 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":326:31)
#loc467 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":326:44)
#loc468 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":326:47)
#loc469 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":326:61)
#loc470 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":327:13)
#loc471 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":328:17)
#loc472 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":331:39)
#loc473 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":331:25)
#loc474 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":331:13)
#loc475 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":333:25)
#loc476 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":333:20)
#loc477 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":333:13)
#loc478 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":333:36)
#loc479 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":335:16)
#loc480 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":336:9)
#loc481 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":339:9)
#loc482 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":336:13)
#loc483 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":336:29)
#loc484 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":337:9)
#loc485 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":338:26)
#loc486 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":338:13)
#loc487 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":340:9)
#loc488 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":343:9)
#loc489 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":340:13)
#loc490 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":340:29)
#loc491 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":341:9)
#loc492 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":342:26)
#loc493 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":342:13)
#loc494 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":351:22)
#loc495 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":351:5)
#loc496 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":352:18)
#loc497 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":352:5)
#loc498 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":152:1)
#loc499 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":152:28)
#loc500 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":356:1)
#loc501 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":374:1)
#loc504 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":357:1)
#loc505 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":358:5)
#loc506 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":373:5)
#loc507 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":358:8)
#loc508 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":359:5)
#loc509 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":360:9)
#loc510 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":372:9)
#loc511 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":361:13)
#loc512 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":361:34)
#loc513 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":364:13)
#loc514 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":371:13)
#loc515 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":364:17)
#loc516 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":364:25)
#loc517 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":365:13)
#loc518 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":367:13)
#loc519 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":369:13)
#loc520 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":366:37)
#loc521 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":366:30)
#loc522 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":366:17)
#loc523 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":370:27)
#loc524 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":370:17)
#loc525 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":376:1)
#loc526 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":386:1)
#loc527 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":378:5)
#loc528 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":378:9)
#loc529 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":380:13)
#loc530 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":380:12)
#loc531 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":380:5)
#loc532 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":383:12)
#loc533 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":383:5)
#loc534 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":384:21)
#loc535 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":384:5)
#loc536 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":385:17)
#loc537 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_21.c":385:5)
#loc538 = loc(fused[#loc1, #loc2])
#loc539 = loc(fused[#loc3, #loc4])
#loc540 = loc(fused[#loc5, #loc6])
#loc541 = loc(fused[#loc7, #loc8])
#loc542 = loc(fused[#loc9, #loc10])
#loc543 = loc(fused[#loc11, #loc12])
#loc544 = loc(fused[#loc13, #loc14])
#loc545 = loc(fused[#loc15, #loc16])
#loc546 = loc(fused[#loc17, #loc18])
#loc547 = loc(fused[#loc19, #loc20])
#loc548 = loc(fused[#loc21, #loc22])
#loc549 = loc(fused[#loc24, #loc25])
#loc551 = loc(fused[#loc29, #loc30])
#loc552 = loc(fused[#loc32, #loc30])
#loc553 = loc(fused[#loc33, #loc34])
#loc554 = loc(fused[#loc35, #loc36])
#loc555 = loc(fused[#loc37, #loc38])
#loc556 = loc(fused[#loc39, #loc40])
#loc557 = loc(fused[#loc41, #loc42, #loc43, #loc38])
#loc558 = loc(fused[#loc48, #loc49])
#loc559 = loc(fused[#loc50, #loc51])
#loc560 = loc(fused[#loc54, #loc52])
#loc561 = loc(fused[#loc55, #loc56])
#loc562 = loc(fused[#loc57, #loc58])
#loc563 = loc(fused[#loc59, #loc60])
#loc564 = loc(fused[#loc61, #loc62])
#loc565 = loc(fused[#loc63, #loc64])
#loc566 = loc(fused[#loc65, #loc66])
#loc567 = loc(fused[#loc67, #loc68])
#loc568 = loc(fused[#loc69, #loc70])
#loc569 = loc(fused[#loc75, #loc76])
#loc570 = loc(fused[#loc77, #loc78])
#loc571 = loc(fused[#loc79, #loc80])
#loc572 = loc(fused[#loc81, #loc78])
#loc573 = loc(fused[#loc83, #loc84])
#loc574 = loc(fused[#loc86, #loc87])
#loc575 = loc(fused[#loc88, #loc89])
#loc576 = loc(fused[#loc92, #loc90])
#loc577 = loc(fused[#loc96, #loc93])
#loc578 = loc(fused[#loc100, #loc101])
#loc579 = loc(fused[#loc102, #loc103])
#loc580 = loc(fused[#loc105, #loc106])
#loc581 = loc(fused[#loc107, #loc108])
#loc582 = loc(fused[#loc109, #loc110])
#loc583 = loc(fused[#loc111, #loc103])
#loc584 = loc(fused[#loc113, #loc114])
#loc585 = loc(fused[#loc117, #loc118])
#loc586 = loc(fused[#loc119, #loc114])
#loc587 = loc(fused[#loc125, #loc126])
#loc588 = loc(fused[#loc127, #loc128])
#loc589 = loc(fused[#loc129, #loc130])
#loc590 = loc(fused[#loc131, #loc128])
#loc591 = loc(fused[#loc135, #loc136])
#loc592 = loc(fused[#loc139, #loc140])
#loc593 = loc(fused[#loc141, #loc142])
#loc594 = loc(fused[#loc143, #loc144])
#loc595 = loc(fused[#loc146, #loc147])
#loc596 = loc(fused[#loc148, #loc142])
#loc597 = loc(fused[#loc152, #loc150])
#loc598 = loc(fused[#loc155, #loc156])
#loc599 = loc(fused[#loc158, #loc159])
#loc600 = loc(fused[#loc160, #loc161])
#loc601 = loc(fused[#loc162, #loc159])
#loc602 = loc(fused[#loc165, #loc166])
#loc603 = loc(fused[#loc167, #loc168])
#loc604 = loc(fused[#loc169, #loc166])
#loc605 = loc(fused[#loc173, #loc172])
#loc606 = loc(fused[#loc176, #loc177])
#loc607 = loc(fused[#loc178, #loc179])
#loc608 = loc(fused[#loc180, #loc181])
#loc609 = loc(fused[#loc182, #loc183])
#loc610 = loc(fused[#loc184, #loc185])
#loc611 = loc(fused[#loc188, #loc189])
#loc613 = loc(fused[#loc193, #loc194])
#loc614 = loc(fused[#loc196, #loc197, #loc198, #loc194])
#loc615 = loc(fused[#loc200, #loc201])
#loc616 = loc(fused[#loc202, #loc203])
#loc617 = loc(fused[#loc204, #loc205])
#loc618 = loc(fused[#loc206, #loc207])
#loc619 = loc(fused[#loc209, #loc211])
#loc620 = loc(fused[#loc212, #loc213, #loc214, #loc205])
#loc621 = loc(fused[#loc219, #loc220])
#loc622 = loc(fused[#loc221, #loc222])
#loc623 = loc(fused[#loc225, #loc223])
#loc624 = loc(fused[#loc226, #loc227])
#loc625 = loc(fused[#loc228, #loc229])
#loc626 = loc(fused[#loc230, #loc231])
#loc627 = loc(fused[#loc232, #loc233])
#loc628 = loc(fused[#loc234, #loc235])
#loc629 = loc(fused[#loc236, #loc237])
#loc630 = loc(fused[#loc238, #loc239])
#loc631 = loc(fused[#loc240, #loc241])
#loc632 = loc(fused[#loc246, #loc247])
#loc633 = loc(fused[#loc248, #loc249])
#loc634 = loc(fused[#loc250, #loc251])
#loc635 = loc(fused[#loc252, #loc249])
#loc636 = loc(fused[#loc254, #loc255])
#loc637 = loc(fused[#loc257, #loc258])
#loc638 = loc(fused[#loc259, #loc260])
#loc639 = loc(fused[#loc262, #loc261])
#loc640 = loc(fused[#loc264, #loc263])
#loc641 = loc(fused[#loc267, #loc268])
#loc642 = loc(fused[#loc269, #loc270])
#loc643 = loc(fused[#loc272, #loc273])
#loc644 = loc(fused[#loc274, #loc275])
#loc645 = loc(fused[#loc276, #loc277])
#loc646 = loc(fused[#loc278, #loc270])
#loc647 = loc(fused[#loc280, #loc281])
#loc648 = loc(fused[#loc284, #loc285])
#loc649 = loc(fused[#loc286, #loc281])
#loc650 = loc(fused[#loc292, #loc293])
#loc651 = loc(fused[#loc294, #loc295])
#loc652 = loc(fused[#loc296, #loc297])
#loc653 = loc(fused[#loc298, #loc295])
#loc654 = loc(fused[#loc302, #loc303])
#loc655 = loc(fused[#loc306, #loc307])
#loc656 = loc(fused[#loc308, #loc309])
#loc657 = loc(fused[#loc310, #loc311])
#loc658 = loc(fused[#loc313, #loc314])
#loc659 = loc(fused[#loc315, #loc309])
#loc660 = loc(fused[#loc319, #loc317])
#loc661 = loc(fused[#loc322, #loc323])
#loc662 = loc(fused[#loc325, #loc326])
#loc663 = loc(fused[#loc327, #loc328])
#loc664 = loc(fused[#loc329, #loc326])
#loc665 = loc(fused[#loc332, #loc333])
#loc666 = loc(fused[#loc334, #loc335])
#loc667 = loc(fused[#loc336, #loc333])
#loc668 = loc(fused[#loc340, #loc339])
#loc669 = loc(fused[#loc343, #loc344])
#loc670 = loc(fused[#loc345, #loc346])
#loc672 = loc(fused[#loc350, #loc351])
#loc673 = loc(fused[#loc353, #loc351])
#loc674 = loc(fused[#loc354, #loc355])
#loc675 = loc(fused[#loc356, #loc357])
#loc676 = loc(fused[#loc358, #loc359])
#loc677 = loc(fused[#loc360, #loc361])
#loc678 = loc(fused[#loc363, #loc365])
#loc679 = loc(fused[#loc366, #loc367, #loc368, #loc359])
#loc680 = loc(fused[#loc374, #loc375])
#loc681 = loc(fused[#loc376, #loc377])
#loc682 = loc(fused[#loc380, #loc378])
#loc683 = loc(fused[#loc381, #loc382])
#loc684 = loc(fused[#loc383, #loc384])
#loc685 = loc(fused[#loc385, #loc386])
#loc686 = loc(fused[#loc387, #loc388])
#loc687 = loc(fused[#loc389, #loc390])
#loc688 = loc(fused[#loc391, #loc392])
#loc689 = loc(fused[#loc393, #loc394])
#loc690 = loc(fused[#loc395, #loc396])
#loc691 = loc(fused[#loc401, #loc402])
#loc692 = loc(fused[#loc403, #loc404])
#loc693 = loc(fused[#loc405, #loc406])
#loc694 = loc(fused[#loc407, #loc404])
#loc695 = loc(fused[#loc409, #loc410])
#loc696 = loc(fused[#loc412, #loc413])
#loc697 = loc(fused[#loc414, #loc415])
#loc698 = loc(fused[#loc417, #loc416])
#loc699 = loc(fused[#loc419, #loc418])
#loc700 = loc(fused[#loc422, #loc423])
#loc701 = loc(fused[#loc424, #loc425])
#loc702 = loc(fused[#loc427, #loc428])
#loc703 = loc(fused[#loc429, #loc430])
#loc704 = loc(fused[#loc431, #loc432])
#loc705 = loc(fused[#loc433, #loc425])
#loc706 = loc(fused[#loc435, #loc436])
#loc707 = loc(fused[#loc439, #loc440])
#loc708 = loc(fused[#loc441, #loc436])
#loc709 = loc(fused[#loc447, #loc448])
#loc710 = loc(fused[#loc449, #loc450])
#loc711 = loc(fused[#loc451, #loc452])
#loc712 = loc(fused[#loc453, #loc450])
#loc713 = loc(fused[#loc457, #loc458])
#loc714 = loc(fused[#loc461, #loc462])
#loc715 = loc(fused[#loc463, #loc464])
#loc716 = loc(fused[#loc465, #loc466])
#loc717 = loc(fused[#loc468, #loc469])
#loc718 = loc(fused[#loc470, #loc464])
#loc719 = loc(fused[#loc474, #loc472])
#loc720 = loc(fused[#loc477, #loc478])
#loc721 = loc(fused[#loc480, #loc481])
#loc722 = loc(fused[#loc482, #loc483])
#loc723 = loc(fused[#loc484, #loc481])
#loc724 = loc(fused[#loc487, #loc488])
#loc725 = loc(fused[#loc489, #loc490])
#loc726 = loc(fused[#loc491, #loc488])
#loc727 = loc(fused[#loc495, #loc494])
#loc728 = loc(fused[#loc498, #loc499])
#loc729 = loc(fused[#loc500, #loc501])
#loc731 = loc(fused[#loc505, #loc506])
#loc732 = loc(fused[#loc508, #loc506])
#loc733 = loc(fused[#loc509, #loc510])
#loc734 = loc(fused[#loc511, #loc512])
#loc735 = loc(fused[#loc513, #loc514])
#loc736 = loc(fused[#loc515, #loc516])
#loc737 = loc(fused[#loc517, #loc518, #loc519, #loc514])
#loc738 = loc(fused[#loc525, #loc526])
#loc739 = loc(fused[#loc527, #loc528])
#loc740 = loc(fused[#loc531, #loc529])
#loc741 = loc(fused[#loc533, #loc532])
#loc742 = loc(fused[#loc535, #loc534])
