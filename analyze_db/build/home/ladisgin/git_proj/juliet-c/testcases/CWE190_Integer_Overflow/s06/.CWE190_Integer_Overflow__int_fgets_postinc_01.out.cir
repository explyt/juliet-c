!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc61 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":117:10)
#loc62 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":117:14)
#loc63 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":117:20)
#loc64 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":117:32)
#loc159 = loc(fused[#loc61, #loc62])
#loc160 = loc(fused[#loc63, #loc64])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_fgets_postinc_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc136)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc137)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc138)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc140)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_postinc_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc142)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc16)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc145)
      %3 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc145)
      cir.store %3, %2 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc145)
      cir.scope {
        %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc24)
        %5 = cir.const #cir.int<3> : !s32i loc(#loc25)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc25)
        %7 = cir.const #cir.int<4> : !u64i loc(#loc25)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc25)
        %9 = cir.const #cir.int<2> : !s32i loc(#loc25)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc25)
        %11 = cir.binop(add, %8, %10) : !u64i loc(#loc25)
        %12 = cir.cast(integral, %11 : !u64i), !s32i loc(#loc25)
        %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc137)
        %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
        %15 = cir.call @fgets(%4, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc27)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
        %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc147)
        cir.if %18 {
          %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc32)
          %20 = cir.call @atoi(%19) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc33)
          cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc149)
        } else {
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc36)
        } loc(#loc148)
      } loc(#loc146)
    } loc(#loc144)
    cir.scope {
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc151)
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
      %4 = cir.unary(inc, %3) : !s32i, !s32i loc(#loc42)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc40)
      cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc151)
      %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc43)
      cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc44)
    } loc(#loc150)
    cir.return loc(#loc13)
  } loc(#loc141)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_postinc_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc155)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc46)
  } loc(#loc153)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc156)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc58)
  cir.func @main(%arg0: !s32i loc(fused[#loc61, #loc62]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc63, #loc64])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc159)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc160)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc65)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc66)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc67)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc67)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc68)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc55)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %8 = cir.get_global @CWE190_Integer_Overflow__int_fgets_postinc_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc161)
    cir.call @CWE190_Integer_Overflow__int_fgets_postinc_01_good() : () -> () loc(#loc70)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %13 = cir.get_global @CWE190_Integer_Overflow__int_fgets_postinc_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc162)
    cir.call @CWE190_Integer_Overflow__int_fgets_postinc_01_bad() : () -> () loc(#loc74)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc58)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    cir.return %17 : !s32i loc(#loc163)
  } loc(#loc158)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc165)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc83)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc85)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc169)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc91)
      %5 = cir.unary(inc, %4) : !s32i, !s32i loc(#loc92)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
      cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc169)
      %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc93)
      cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc94)
    } loc(#loc168)
    cir.return loc(#loc80)
  } loc(#loc164)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc95)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc172)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc100)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc175)
      %3 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc175)
      cir.store %3, %2 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc175)
      cir.scope {
        %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
        %5 = cir.const #cir.int<3> : !s32i loc(#loc109)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc109)
        %7 = cir.const #cir.int<4> : !u64i loc(#loc109)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc109)
        %9 = cir.const #cir.int<2> : !s32i loc(#loc109)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc109)
        %11 = cir.binop(add, %8, %10) : !u64i loc(#loc109)
        %12 = cir.cast(integral, %11 : !u64i), !s32i loc(#loc109)
        %13 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc137)
        %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc110)
        %15 = cir.call @fgets(%4, %12, %14) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc111)
        %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc112)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc112)
        %18 = cir.cmp(ne, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc177)
        cir.if %18 {
          %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc116)
          %20 = cir.call @atoi(%19) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc117)
          cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc179)
        } else {
          %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc120)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc120)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc121)
        } loc(#loc178)
      } loc(#loc176)
    } loc(#loc174)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
      %3 = cir.const #cir.int<2147483647> : !s32i loc(#loc125)
      %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc181)
      cir.if %4 {
        %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc183)
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc132)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc184)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
        cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc183)
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc133)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc134)
      } else {
        %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc95)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc95)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc135)
      } loc(#loc182)
    } loc(#loc180)
    cir.return loc(#loc97)
  } loc(#loc171)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int_fgets_postinc_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":39:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":24:1)
#loc13 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":48:1)
#loc14 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":26:5)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":26:9)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":28:12)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":28:5)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":29:5)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":41:5)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":30:9)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":30:45)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":32:9)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":40:9)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":32:19)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":32:32)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":32:49)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":32:13)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":32:59)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":33:9)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":36:9)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":38:9)
#loc32 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":35:25)
#loc33 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":35:20)
#loc34 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":35:13)
#loc35 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":35:36)
#loc36 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":39:13)
#loc37 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":42:5)
#loc38 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":47:5)
#loc39 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":45:9)
#loc40 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":45:22)
#loc41 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":44:13)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":44:9)
#loc43 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":46:22)
#loc44 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":46:9)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":102:1)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":106:1)
#loc47 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":104:5)
#loc48 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":104:13)
#loc49 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":105:5)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":105:13)
#loc51 = loc("/usr/include/stdlib.h":575:1)
#loc52 = loc("/usr/include/stdlib.h":575:41)
#loc53 = loc("/usr/include/time.h":76:1)
#loc54 = loc("/usr/include/time.h":76:38)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":122:15)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":124:15)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":127:15)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":129:15)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":117:1)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":132:1)
#loc65 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":118:1)
#loc66 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":120:27)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":120:22)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":120:5)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":122:5)
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":123:5)
#loc71 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":123:56)
#loc72 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":124:5)
#loc73 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":127:5)
#loc74 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":128:5)
#loc75 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":128:55)
#loc76 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":129:5)
#loc77 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":131:12)
#loc78 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":131:5)
#loc79 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":55:1)
#loc80 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":68:1)
#loc81 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":57:5)
#loc82 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":57:9)
#loc83 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":59:12)
#loc84 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":59:5)
#loc85 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":61:12)
#loc86 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":61:5)
#loc87 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":62:5)
#loc88 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":67:5)
#loc89 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":65:9)
#loc90 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":65:22)
#loc91 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":64:13)
#loc92 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":64:9)
#loc93 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":66:22)
#loc94 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":66:9)
#loc95 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":98:19)
#loc96 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":71:1)
#loc97 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":100:1)
#loc98 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":73:5)
#loc99 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":73:9)
#loc100 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":75:12)
#loc101 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":75:5)
#loc102 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":76:5)
#loc103 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":88:5)
#loc104 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":77:9)
#loc105 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":77:45)
#loc106 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":79:9)
#loc107 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":87:9)
#loc108 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":79:19)
#loc109 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":79:32)
#loc110 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":79:49)
#loc111 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":79:13)
#loc112 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":79:59)
#loc113 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":80:9)
#loc114 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":83:9)
#loc115 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":85:9)
#loc116 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":82:25)
#loc117 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":82:20)
#loc118 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":82:13)
#loc119 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":82:36)
#loc120 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":86:23)
#loc121 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":86:13)
#loc122 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":90:5)
#loc123 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":99:5)
#loc124 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":90:9)
#loc125 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":90:16)
#loc126 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":91:5)
#loc127 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":95:5)
#loc128 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":97:5)
#loc129 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":93:9)
#loc130 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":93:22)
#loc131 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":92:13)
#loc132 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":92:9)
#loc133 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":94:22)
#loc134 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":94:9)
#loc135 = loc("CWE190_Integer_Overflow__int_fgets_postinc_01.c":98:9)
#loc136 = loc(fused[#loc1, #loc2])
#loc137 = loc(fused[#loc3, #loc4])
#loc138 = loc(fused[#loc5, #loc6])
#loc139 = loc(fused[#loc7, #loc8])
#loc140 = loc(fused[#loc10, #loc11])
#loc141 = loc(fused[#loc12, #loc13])
#loc142 = loc(fused[#loc14, #loc15])
#loc143 = loc(fused[#loc17, #loc16])
#loc144 = loc(fused[#loc18, #loc19])
#loc145 = loc(fused[#loc20, #loc21])
#loc146 = loc(fused[#loc22, #loc23])
#loc147 = loc(fused[#loc27, #loc28])
#loc148 = loc(fused[#loc29, #loc30, #loc31, #loc23])
#loc149 = loc(fused[#loc34, #loc35])
#loc150 = loc(fused[#loc37, #loc38])
#loc151 = loc(fused[#loc39, #loc40])
#loc152 = loc(fused[#loc42, #loc41])
#loc153 = loc(fused[#loc45, #loc46])
#loc154 = loc(fused[#loc47, #loc48])
#loc155 = loc(fused[#loc49, #loc50])
#loc156 = loc(fused[#loc51, #loc52])
#loc157 = loc(fused[#loc53, #loc54])
#loc158 = loc(fused[#loc59, #loc60])
#loc161 = loc(fused[#loc70, #loc71])
#loc162 = loc(fused[#loc74, #loc75])
#loc163 = loc(fused[#loc78, #loc77])
#loc164 = loc(fused[#loc79, #loc80])
#loc165 = loc(fused[#loc81, #loc82])
#loc166 = loc(fused[#loc84, #loc83])
#loc167 = loc(fused[#loc86, #loc85])
#loc168 = loc(fused[#loc87, #loc88])
#loc169 = loc(fused[#loc89, #loc90])
#loc170 = loc(fused[#loc92, #loc91])
#loc171 = loc(fused[#loc96, #loc97])
#loc172 = loc(fused[#loc98, #loc99])
#loc173 = loc(fused[#loc101, #loc100])
#loc174 = loc(fused[#loc102, #loc103])
#loc175 = loc(fused[#loc104, #loc105])
#loc176 = loc(fused[#loc106, #loc107])
#loc177 = loc(fused[#loc111, #loc112])
#loc178 = loc(fused[#loc113, #loc114, #loc115, #loc107])
#loc179 = loc(fused[#loc118, #loc119])
#loc180 = loc(fused[#loc122, #loc123])
#loc181 = loc(fused[#loc124, #loc125])
#loc182 = loc(fused[#loc126, #loc127, #loc128, #loc123])
#loc183 = loc(fused[#loc129, #loc130])
#loc184 = loc(fused[#loc132, #loc131])
