!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_06L8goodG2B2Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc262)
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_06L8goodG2B1Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc263)
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_063badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc264)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc265)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc266)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc267)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc13)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc268)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc269)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc270)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc271)
  cir.func private @close(!s32i) -> !s32i loc(#loc272)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc273)
  cir.func @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_063badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc275)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc264)
    %2 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_063badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc264)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc264)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc30)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc276)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc34)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc35)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc278)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc281)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc282)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc283)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc284)
          %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc285)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc46)
          %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc46)
          cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc284)
          %14 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc49)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
          %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc49)
          cir.store %16, %11 : !u64i, !cir.ptr<!u64i> loc(#loc285)
          cir.scope {
            cir.do {
              cir.scope {
                %17 = cir.const #cir.int<2> : !s32i loc(#loc55)
                %18 = cir.const #cir.int<1> : !u32i loc(#loc56)
                %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc56)
                %20 = cir.const #cir.int<6> : !u32i loc(#loc57)
                %21 = cir.cast(integral, %20 : !u32i), !s32i loc(#loc57)
                %22 = cir.call @socket(%17, %19, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc58)
                cir.store %22, %10 : !s32i, !cir.ptr<!s32i> loc(#loc288)
                cir.scope {
                  %72 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc63)
                  %73 = cir.const #cir.int<1> : !s32i loc(#loc64)
                  %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc64)
                  %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc290)
                  cir.if %75 {
                    cir.break loc(#loc66)
                  } loc(#loc291)
                } loc(#loc289)
                %23 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc292)
                %24 = cir.const #cir.int<0> : !s32i loc(#loc69)
                %25 = cir.const #cir.int<16> : !u64i loc(#loc293)
                cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc294)
                %26 = cir.const #cir.int<2> : !s32i loc(#loc74)
                %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc74)
                %28 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
                cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc295)
                %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc13)
                %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc13)
                %31 = cir.call @inet_addr(%30) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc77)
                %32 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
                %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
                cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc296)
                %34 = cir.const #cir.int<27015> : !s32i loc(#loc82)
                %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc82)
                %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc83)
                %37 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
                cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc297)
                cir.scope {
                  %72 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc89)
                  %73 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc299)
                  %74 = cir.const #cir.int<16> : !u64i loc(#loc300)
                  %75 = cir.cast(integral, %74 : !u64i), !u32i loc(#loc300)
                  %76 = cir.call @connect(%72, %73, %75) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc94)
                  %77 = cir.const #cir.int<1> : !s32i loc(#loc95)
                  %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc95)
                  %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc301)
                  cir.if %79 {
                    cir.break loc(#loc97)
                  } loc(#loc302)
                } loc(#loc298)
                %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
                %40 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc100)
                %41 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc101)
                %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc303)
                %43 = cir.const #cir.int<1> : !u64i loc(#loc304)
                %44 = cir.const #cir.int<4096> : !s32i loc(#loc106)
                %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc106)
                %46 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc107)
                %47 = cir.binop(sub, %45, %46) : !u64i loc(#loc305)
                %48 = cir.const #cir.int<1> : !s32i loc(#loc108)
                %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc108)
                %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc306)
                %51 = cir.binop(mul, %43, %50) : !u64i loc(#loc307)
                %52 = cir.const #cir.int<0> : !s32i loc(#loc110)
                %53 = cir.call @recv(%38, %42, %51, %52) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc111)
                %54 = cir.cast(integral, %53 : !s64i), !s32i loc(#loc111)
                cir.store %54, %7 : !s32i, !cir.ptr<!s32i> loc(#loc308)
                cir.scope {
                  %72 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                  %73 = cir.const #cir.int<1> : !s32i loc(#loc117)
                  %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc117)
                  %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc310)
                  %76 = cir.ternary(%75, true {
                    %77 = cir.const #true loc(#loc118)
                    cir.yield %77 : !cir.bool loc(#loc118)
                  }, false {
                    %77 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc119)
                    %78 = cir.const #cir.int<0> : !s32i loc(#loc120)
                    %79 = cir.cmp(eq, %77, %78) : !s32i, !cir.bool loc(#loc311)
                    %80 = cir.ternary(%79, true {
                      %81 = cir.const #true loc(#loc118)
                      cir.yield %81 : !cir.bool loc(#loc118)
                    }, false {
                      %81 = cir.const #false loc(#loc118)
                      cir.yield %81 : !cir.bool loc(#loc118)
                    }) : (!cir.bool) -> !cir.bool loc(#loc118)
                    cir.yield %80 : !cir.bool loc(#loc118)
                  }) : (!cir.bool) -> !cir.bool loc(#loc118)
                  cir.if %76 {
                    cir.break loc(#loc122)
                  } loc(#loc312)
                } loc(#loc309)
                %55 = cir.const #cir.int<0> : !s8i loc(#loc123)
                %56 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
                %57 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc125)
                %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc126)
                %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc126)
                %60 = cir.const #cir.int<1> : !u64i loc(#loc313)
                %61 = cir.binop(div, %59, %60) : !u64i loc(#loc314)
                %62 = cir.binop(add, %57, %61) : !u64i loc(#loc315)
                %63 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc129)
                cir.store %55, %63 : !s8i, !cir.ptr<!s8i> loc(#loc316)
                %64 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
                %65 = cir.const #cir.int<13> : !s8i loc(#loc131)
                %66 = cir.cast(integral, %65 : !s8i), !s32i loc(#loc131)
                %67 = cir.call @strchr(%64, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc132)
                cir.store %67, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc317)
                cir.scope {
                  %72 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
                  %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc137)
                  cir.if %73 {
                    %74 = cir.const #cir.int<0> : !s8i loc(#loc139)
                    %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
                    cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc320)
                  } loc(#loc319)
                } loc(#loc318)
                %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
                %69 = cir.const #cir.int<10> : !s8i loc(#loc143)
                %70 = cir.cast(integral, %69 : !s8i), !s32i loc(#loc143)
                %71 = cir.call @strchr(%68, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc144)
                cir.store %71, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc321)
                cir.scope {
                  %72 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
                  %73 = cir.cast(ptr_to_bool, %72 : !cir.ptr<!s8i>), !cir.bool loc(#loc149)
                  cir.if %73 {
                    %74 = cir.const #cir.int<0> : !s8i loc(#loc151)
                    %75 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
                    cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc324)
                  } loc(#loc323)
                } loc(#loc322)
              } loc(#loc287)
              cir.yield loc(#loc52)
            } while {
              %17 = cir.const #cir.int<0> : !s32i loc(#loc154)
              %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc154)
              cir.condition(%18) loc(#loc154)
            } loc(#loc286)
          } loc(#loc286)
          cir.scope {
            %17 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc157)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc158)
            %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc158)
            %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc326)
            cir.if %20 {
              %21 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc160)
              %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc161)
            } loc(#loc327)
          } loc(#loc325)
        } loc(#loc280)
      } loc(#loc279)
    } loc(#loc277)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc329)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc167)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc168)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc330)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc169)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc170)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc331)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc171)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc332)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc176)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc177)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc178)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc334)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc180)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc181)
        } loc(#loc335)
      } loc(#loc333)
    } loc(#loc328)
    cir.return loc(#loc27)
  } loc(#loc274)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc336)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc184)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc337)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc187)
  cir.func internal private @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_06L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc339)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc263)
    %2 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_06L8goodG2B1Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc263)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc263)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc192)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc340)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc196)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc197)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc342)
      cir.if %6 {
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc184)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc184)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc201)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc202)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
        %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc187)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc187)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc202)
      } loc(#loc343)
    } loc(#loc341)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc345)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc208)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc209)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc210)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc346)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc211)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc212)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc347)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc213)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc348)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc218)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc219)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc220)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc350)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc222)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc223)
        } loc(#loc351)
      } loc(#loc349)
    } loc(#loc344)
    cir.return loc(#loc189)
  } loc(#loc338)
  cir.func internal private @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_06L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc353)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc262)
    %2 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_06L8goodG2B2Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc262)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc262)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc228)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc354)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc232)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc233)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc356)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc235)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc236)
        %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc237)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc237)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc235)
      } loc(#loc357)
    } loc(#loc355)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc359)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc242)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc243)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc244)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc360)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc245)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc246)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc361)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc247)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc362)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc252)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc253)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc254)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc364)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc256)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc257)
        } loc(#loc365)
      } loc(#loc363)
    } loc(#loc358)
    cir.return loc(#loc225)
  } loc(#loc352)
  cir.func @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_064goodEv() extra(#fn_attr1) {
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_06L8goodG2B1Ev() : () -> () loc(#loc260)
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_06L8goodG2B2Ev() : () -> () loc(#loc261)
    cir.return loc(#loc259)
  } loc(#loc366)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":186:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":186:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":159:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":159:37)
#loc5 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":68:5)
#loc6 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":68:37)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc11 = loc("/usr/include/arpa/inet.h":34:1)
#loc12 = loc("/usr/include/arpa/inet.h":34:47)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":99:53)
#loc14 = loc("/usr/include/netinet/in.h":402:1)
#loc15 = loc("/usr/include/netinet/in.h":403:40)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc20 = loc("/usr/include/string.h":226:1)
#loc21 = loc("/usr/include/string.h":227:50)
#loc22 = loc("/usr/include/unistd.h":358:1)
#loc23 = loc("/usr/include/unistd.h":358:27)
#loc24 = loc("/usr/include/fcntl.h":209:1)
#loc25 = loc("/usr/include/fcntl.h":209:56)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":65:1)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":149:1)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":67:5)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":67:12)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":69:12)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":69:5)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":70:5)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":139:5)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":70:8)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":70:27)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":71:5)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":72:9)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":138:9)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":77:13)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":77:17)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":78:13)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":78:32)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":79:13)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":79:19)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":80:13)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":80:36)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":81:13)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":81:41)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":81:30)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":81:37)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":82:13)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":127:21)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":83:13)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":126:13)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":92:40)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":92:49)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":92:62)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":92:33)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":92:17)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":92:73)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":93:17)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":96:17)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":93:21)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":93:38)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":94:17)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":95:21)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":97:24)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":97:25)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":97:34)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":97:37)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":97:51)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":97:17)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":97:52)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":98:38)
#loc75 = loc("/usr/include/netinet/in.h":249:5)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":98:17)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":99:43)
#loc78 = loc("/usr/include/netinet/in.h":251:20)
#loc79 = loc("/usr/include/netinet/in.h":33:15)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":99:17)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":99:63)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":100:42)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":100:36)
#loc84 = loc("/usr/include/netinet/in.h":250:15)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":100:17)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":100:50)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":101:17)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":104:17)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":101:29)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":101:62)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":101:63)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":101:72)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":101:86)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":101:21)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":101:92)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":102:17)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":103:21)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:35)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:59)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:66)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:64)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:50)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:73)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:76)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:87)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:92)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:107)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:117)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:118)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:121)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:30)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:17)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":108:122)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":109:17)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":112:17)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":109:21)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":109:35)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":109:48)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":109:51)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":109:65)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":110:17)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":111:21)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":114:61)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":114:17)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":114:22)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":114:32)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":114:45)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":114:56)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":114:57)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":116:34)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":116:40)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":116:27)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":116:17)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":116:44)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":117:17)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":120:17)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":117:21)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":118:17)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":119:32)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":119:22)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":119:21)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":121:34)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":121:40)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":121:27)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":121:17)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":121:44)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":122:17)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":125:17)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":122:21)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":123:17)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":124:32)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":124:22)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":124:21)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":127:20)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":128:13)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":131:13)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":128:17)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":128:34)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":129:13)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":130:30)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":130:17)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":140:5)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":148:5)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":141:9)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":141:13)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":143:25)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":143:31)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":143:38)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":143:47)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":143:55)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":143:20)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":143:9)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":143:63)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":144:9)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":147:9)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":144:13)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":144:26)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":144:25)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":145:9)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":146:19)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":146:13)
#loc182 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc183 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":164:19)
#loc185 = loc("/usr/include/string.h":149:1)
#loc186 = loc("/usr/include/string.h":150:14)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":169:22)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":156:1)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":180:1)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":158:5)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":158:12)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":160:12)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":160:5)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":161:5)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":170:5)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":161:8)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":161:27)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":162:5)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":165:5)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":167:5)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":164:9)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":169:9)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":169:16)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":171:5)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":179:5)
#loc206 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":172:9)
#loc207 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":172:13)
#loc208 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":174:25)
#loc209 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":174:31)
#loc210 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":174:38)
#loc211 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":174:47)
#loc212 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":174:55)
#loc213 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":174:20)
#loc214 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":174:9)
#loc215 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":174:63)
#loc216 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":175:9)
#loc217 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":178:9)
#loc218 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":175:13)
#loc219 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":175:26)
#loc220 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":175:25)
#loc221 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":176:9)
#loc222 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":177:19)
#loc223 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":177:13)
#loc224 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":183:1)
#loc225 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":202:1)
#loc226 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":185:5)
#loc227 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":185:12)
#loc228 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":187:12)
#loc229 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":187:5)
#loc230 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":188:5)
#loc231 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":192:5)
#loc232 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":188:8)
#loc233 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":188:27)
#loc234 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":189:5)
#loc235 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":191:9)
#loc236 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":191:16)
#loc237 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":191:22)
#loc238 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":193:5)
#loc239 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":201:5)
#loc240 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":194:9)
#loc241 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":194:13)
#loc242 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":196:25)
#loc243 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":196:31)
#loc244 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":196:38)
#loc245 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":196:47)
#loc246 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":196:55)
#loc247 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":196:20)
#loc248 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":196:9)
#loc249 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":196:63)
#loc250 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":197:9)
#loc251 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":200:9)
#loc252 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":197:13)
#loc253 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":197:26)
#loc254 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":197:25)
#loc255 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":198:9)
#loc256 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":199:19)
#loc257 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":199:13)
#loc258 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":204:1)
#loc259 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":208:1)
#loc260 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":206:5)
#loc261 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_06.cpp":207:5)
#loc262 = loc(fused[#loc1, #loc2])
#loc263 = loc(fused[#loc3, #loc4])
#loc264 = loc(fused[#loc5, #loc6])
#loc265 = loc(fused[#loc7, #loc8])
#loc266 = loc(fused[#loc9, #loc10])
#loc267 = loc(fused[#loc11, #loc12])
#loc268 = loc(fused[#loc14, #loc15])
#loc269 = loc(fused[#loc16, #loc17])
#loc270 = loc(fused[#loc18, #loc19])
#loc271 = loc(fused[#loc20, #loc21])
#loc272 = loc(fused[#loc22, #loc23])
#loc273 = loc(fused[#loc24, #loc25])
#loc274 = loc(fused[#loc26, #loc27])
#loc275 = loc(fused[#loc28, #loc29])
#loc276 = loc(fused[#loc31, #loc30])
#loc277 = loc(fused[#loc32, #loc33])
#loc278 = loc(fused[#loc34, #loc35])
#loc279 = loc(fused[#loc36, #loc33])
#loc280 = loc(fused[#loc37, #loc38])
#loc281 = loc(fused[#loc39, #loc40])
#loc282 = loc(fused[#loc41, #loc42])
#loc283 = loc(fused[#loc43, #loc44])
#loc284 = loc(fused[#loc45, #loc46])
#loc285 = loc(fused[#loc47, #loc48])
#loc286 = loc(fused[#loc51, #loc52])
#loc287 = loc(fused[#loc53, #loc54])
#loc288 = loc(fused[#loc59, #loc60])
#loc289 = loc(fused[#loc61, #loc62])
#loc290 = loc(fused[#loc63, #loc64])
#loc291 = loc(fused[#loc65, #loc62])
#loc292 = loc(fused[#loc67, #loc68])
#loc293 = loc(fused[#loc70, #loc71])
#loc294 = loc(fused[#loc72, #loc73])
#loc295 = loc(fused[#loc76, #loc74])
#loc296 = loc(fused[#loc80, #loc81])
#loc297 = loc(fused[#loc85, #loc86])
#loc298 = loc(fused[#loc87, #loc88])
#loc299 = loc(fused[#loc90, #loc91])
#loc300 = loc(fused[#loc92, #loc93])
#loc301 = loc(fused[#loc94, #loc95])
#loc302 = loc(fused[#loc96, #loc88])
#loc303 = loc(fused[#loc102, #loc103])
#loc304 = loc(fused[#loc104, #loc105])
#loc305 = loc(fused[#loc106, #loc107])
#loc306 = loc(fused[#loc106, #loc108])
#loc307 = loc(fused[#loc104, #loc109])
#loc308 = loc(fused[#loc112, #loc113])
#loc309 = loc(fused[#loc114, #loc115])
#loc310 = loc(fused[#loc116, #loc117])
#loc311 = loc(fused[#loc119, #loc120])
#loc312 = loc(fused[#loc121, #loc115])
#loc313 = loc(fused[#loc127, #loc128])
#loc314 = loc(fused[#loc126, #loc128])
#loc315 = loc(fused[#loc125, #loc128])
#loc316 = loc(fused[#loc124, #loc123])
#loc317 = loc(fused[#loc133, #loc134])
#loc318 = loc(fused[#loc135, #loc136])
#loc319 = loc(fused[#loc138, #loc136])
#loc320 = loc(fused[#loc141, #loc139])
#loc321 = loc(fused[#loc145, #loc146])
#loc322 = loc(fused[#loc147, #loc148])
#loc323 = loc(fused[#loc150, #loc148])
#loc324 = loc(fused[#loc153, #loc151])
#loc325 = loc(fused[#loc155, #loc156])
#loc326 = loc(fused[#loc157, #loc158])
#loc327 = loc(fused[#loc159, #loc156])
#loc328 = loc(fused[#loc162, #loc163])
#loc329 = loc(fused[#loc164, #loc165])
#loc330 = loc(fused[#loc167, #loc168])
#loc331 = loc(fused[#loc169, #loc170])
#loc332 = loc(fused[#loc172, #loc173])
#loc333 = loc(fused[#loc174, #loc175])
#loc334 = loc(fused[#loc176, #loc177])
#loc335 = loc(fused[#loc179, #loc175])
#loc336 = loc(fused[#loc182, #loc183])
#loc337 = loc(fused[#loc185, #loc186])
#loc338 = loc(fused[#loc188, #loc189])
#loc339 = loc(fused[#loc190, #loc191])
#loc340 = loc(fused[#loc193, #loc192])
#loc341 = loc(fused[#loc194, #loc195])
#loc342 = loc(fused[#loc196, #loc197])
#loc343 = loc(fused[#loc198, #loc199, #loc200, #loc195])
#loc344 = loc(fused[#loc204, #loc205])
#loc345 = loc(fused[#loc206, #loc207])
#loc346 = loc(fused[#loc209, #loc210])
#loc347 = loc(fused[#loc211, #loc212])
#loc348 = loc(fused[#loc214, #loc215])
#loc349 = loc(fused[#loc216, #loc217])
#loc350 = loc(fused[#loc218, #loc219])
#loc351 = loc(fused[#loc221, #loc217])
#loc352 = loc(fused[#loc224, #loc225])
#loc353 = loc(fused[#loc226, #loc227])
#loc354 = loc(fused[#loc229, #loc228])
#loc355 = loc(fused[#loc230, #loc231])
#loc356 = loc(fused[#loc232, #loc233])
#loc357 = loc(fused[#loc234, #loc231])
#loc358 = loc(fused[#loc238, #loc239])
#loc359 = loc(fused[#loc240, #loc241])
#loc360 = loc(fused[#loc243, #loc244])
#loc361 = loc(fused[#loc245, #loc246])
#loc362 = loc(fused[#loc248, #loc249])
#loc363 = loc(fused[#loc250, #loc251])
#loc364 = loc(fused[#loc252, #loc253])
#loc365 = loc(fused[#loc255, #loc251])
#loc366 = loc(fused[#loc258, #loc259])
