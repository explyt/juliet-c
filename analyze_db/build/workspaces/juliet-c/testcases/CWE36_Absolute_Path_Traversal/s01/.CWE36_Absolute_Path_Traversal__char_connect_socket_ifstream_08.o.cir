!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!ty___locale_data = !cir.record<struct "__locale_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty___pthread_internal_list = !cir.record<struct "__pthread_internal_list" {!cir.ptr<!cir.record<struct "__pthread_internal_list">>, !cir.ptr<!cir.record<struct "__pthread_internal_list">>} #cir.record.decl.ast>
!ty_anon2E0 = !cir.record<union "anon.0" {!u32i, !cir.array<!s8i x 4>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty_std3A3Aios_base3A3A_Words = !cir.record<struct "std::ios_base::_Words" {!cir.ptr<!void>, !s64i} #cir.record.decl.ast>
!ty___locale_struct = !cir.record<struct "__locale_struct" {!cir.array<!cir.ptr<!ty___locale_data> x 13>, !cir.ptr<!u16i>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.array<!cir.ptr<!s8i> x 13>} #cir.record.decl.ast>
!ty___mbstate_t = !cir.record<struct "__mbstate_t" {!s32i, !ty_anon2E0} #cir.record.decl.ast>
!ty___pthread_mutex_s = !cir.record<struct "__pthread_mutex_s" {!s32i, !u32i, !s32i, !u32i, !s32i, !s16i, !s16i, !ty___pthread_internal_list} #cir.record.decl.ast>
!ty_pthread_mutex_t = !cir.record<union "pthread_mutex_t" {!ty___pthread_mutex_s, !cir.array<!s8i x 40>, !s64i} #cir.record.decl.ast>
!ty_std3A3A__basic_file3Cchar3E = !cir.record<class "std::__basic_file<char>" packed padded {!cir.ptr<!ty__IO_FILE>, !cir.bool, !cir.array<!u8i x 7>} #cir.record.decl.ast>
!ty_std3A3Abasic_istream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase = !cir.record<class "std::basic_istream<char, std::char_traits<char>>.base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i} #cir.record.decl.ast>
!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ostream<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.record<class "std::basic_ios<char, std::char_traits<char>>" {!cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.record<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<(!u32i, !cir.ptr<!cir.record<class "std::ios_base">>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>, !cir.ptr<!cir.record<class "std::basic_ostream<char, std::char_traits<char>>">>, !s8i, !cir.bool, !cir.ptr<!cir.record<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::ctype<char>" packed padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>" padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>" padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>
!ty_std3A3Aios_base3A3A_Callback_list = !cir.record<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<(!u32i, !cir.ptr<!cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet = !cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet2Ebase = !cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>
!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase = !cir.record<class "std::__codecvt_abstract_base<char, char, __mbstate_t>.base" {!ty_std3A3Alocale3A3Afacet2Ebase} #cir.record.decl.ast>
!ty_std3A3Actype3Cchar3E = !cir.record<class "std::ctype<char>" packed padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>
!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E = !cir.record<class "std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>" padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E = !cir.record<class "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>" padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E = !cir.record<class "std::codecvt<char, char, __mbstate_t>" {!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase, !cir.ptr<!ty___locale_struct>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3A_Impl = !cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !u64i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>
!ty_std3A3Alocale = !cir.record<class "std::locale" {!cir.ptr<!ty_std3A3Alocale3A3A_Impl>} #cir.record.decl.ast>
!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Aios_base = !cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Callback_list>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_filebuf<char, std::char_traits<char>>" {!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_pthread_mutex_t, !ty_std3A3A__basic_file3Cchar3E, !s32i, !ty___mbstate_t, !ty___mbstate_t, !ty___mbstate_t, !cir.ptr<!s8i>, !u64i, !cir.bool, !cir.bool, !cir.bool, !s8i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.bool, !cir.ptr<!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E>, !cir.ptr<!s8i>, !s64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>} #cir.record.decl.ast>
!ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ios<char, std::char_traits<char>>" {!ty_std3A3Aios_base, !cir.ptr<!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !s8i, !cir.bool, !cir.ptr<!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!ty_std3A3Actype3Cchar3E>, !cir.ptr<!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E>, !cir.ptr<!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E>} #cir.record.decl.ast>
!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ifstream<char, std::char_traits<char>>" {!ty_std3A3Abasic_istream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase, !ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E}>
module @"/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func internal private @_ZL17staticReturnsTruev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc2)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc3)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    cir.return %2 : !s32i loc(#loc243)
  } loc(#loc242)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc244)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc245)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc246)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc11)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr1) loc(#loc247)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc248)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc249)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc250)
  cir.func private @close(!s32i) -> !s32i loc(#loc251)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc252)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) loc(#loc253)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc254)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) extra(#fn_attr1) loc(#loc255)
  cir.func @_ZN62CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_083badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc257)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc258)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc258)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc258)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc36)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc259)
    cir.scope {
      %4 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc40)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc261)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc264)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc265)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc266)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc267)
          %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc268)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc52)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc52)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc267)
          %13 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc55)
          %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
          %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr1) loc(#loc55)
          cir.store %15, %10 : !u64i, !cir.ptr<!u64i> loc(#loc268)
          cir.scope {
            cir.do {
              cir.scope {
                %16 = cir.const #cir.int<2> : !s32i loc(#loc61)
                %17 = cir.const #cir.int<1> : !u32i loc(#loc62)
                %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc62)
                %19 = cir.const #cir.int<6> : !u32i loc(#loc63)
                %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc63)
                %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr1) loc(#loc64)
                cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc271)
                cir.scope {
                  %71 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc69)
                  %72 = cir.const #cir.int<1> : !s32i loc(#loc70)
                  %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc70)
                  %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc273)
                  cir.if %74 {
                    cir.break loc(#loc72)
                  } loc(#loc274)
                } loc(#loc272)
                %22 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc275)
                %23 = cir.const #cir.int<0> : !s32i loc(#loc75)
                %24 = cir.const #cir.int<16> : !u64i loc(#loc276)
                cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc277)
                %25 = cir.const #cir.int<2> : !s32i loc(#loc80)
                %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc80)
                %27 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
                cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc278)
                %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc11)
                %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc11)
                %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr1) loc(#loc83)
                %31 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc84)
                %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc85)
                cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc279)
                %33 = cir.const #cir.int<27015> : !s32i loc(#loc88)
                %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc88)
                %35 = cir.call @htons(%34) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr1) loc(#loc89)
                %36 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc90)
                cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc280)
                cir.scope {
                  %71 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc95)
                  %72 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc282)
                  %73 = cir.const #cir.int<16> : !u64i loc(#loc283)
                  %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc283)
                  %75 = cir.call @connect(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc100)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc101)
                  %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc101)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc284)
                  cir.if %78 {
                    cir.break loc(#loc103)
                  } loc(#loc285)
                } loc(#loc281)
                %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
                %39 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc106)
                %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc107)
                %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc286)
                %42 = cir.const #cir.int<1> : !u64i loc(#loc287)
                %43 = cir.const #cir.int<4096> : !s32i loc(#loc112)
                %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc112)
                %45 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc113)
                %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc288)
                %47 = cir.const #cir.int<1> : !s32i loc(#loc114)
                %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc114)
                %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc289)
                %50 = cir.binop(mul, %42, %49) : !u64i loc(#loc290)
                %51 = cir.const #cir.int<0> : !s32i loc(#loc116)
                %52 = cir.call @recv(%37, %41, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc117)
                %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc117)
                cir.store %53, %6 : !s32i, !cir.ptr<!s32i> loc(#loc291)
                cir.scope {
                  %71 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc122)
                  %72 = cir.const #cir.int<1> : !s32i loc(#loc123)
                  %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc123)
                  %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc293)
                  %75 = cir.ternary(%74, true {
                    %76 = cir.const #true loc(#loc124)
                    cir.yield %76 : !cir.bool loc(#loc124)
                  }, false {
                    %76 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc125)
                    %77 = cir.const #cir.int<0> : !s32i loc(#loc126)
                    %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc294)
                    %79 = cir.ternary(%78, true {
                      %80 = cir.const #true loc(#loc124)
                      cir.yield %80 : !cir.bool loc(#loc124)
                    }, false {
                      %80 = cir.const #false loc(#loc124)
                      cir.yield %80 : !cir.bool loc(#loc124)
                    }) : (!cir.bool) -> !cir.bool loc(#loc124)
                    cir.yield %79 : !cir.bool loc(#loc124)
                  }) : (!cir.bool) -> !cir.bool loc(#loc124)
                  cir.if %75 {
                    cir.break loc(#loc128)
                  } loc(#loc295)
                } loc(#loc292)
                %54 = cir.const #cir.int<0> : !s8i loc(#loc129)
                %55 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
                %56 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc131)
                %57 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc132)
                %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc132)
                %59 = cir.const #cir.int<1> : !u64i loc(#loc296)
                %60 = cir.binop(div, %58, %59) : !u64i loc(#loc297)
                %61 = cir.binop(add, %56, %60) : !u64i loc(#loc298)
                %62 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %61 : !u64i), !cir.ptr<!s8i> loc(#loc135)
                cir.store %54, %62 : !s8i, !cir.ptr<!s8i> loc(#loc299)
                %63 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
                %64 = cir.const #cir.int<13> : !s8i loc(#loc137)
                %65 = cir.cast(integral, %64 : !s8i), !s32i loc(#loc137)
                %66 = cir.call @strchr(%63, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr1) loc(#loc138)
                cir.store %66, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc300)
                cir.scope {
                  %71 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
                  %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc143)
                  cir.if %72 {
                    %73 = cir.const #cir.int<0> : !s8i loc(#loc145)
                    %74 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
                    cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc303)
                  } loc(#loc302)
                } loc(#loc301)
                %67 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
                %68 = cir.const #cir.int<10> : !s8i loc(#loc149)
                %69 = cir.cast(integral, %68 : !s8i), !s32i loc(#loc149)
                %70 = cir.call @strchr(%67, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr1) loc(#loc150)
                cir.store %70, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc304)
                cir.scope {
                  %71 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
                  %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc155)
                  cir.if %72 {
                    %73 = cir.const #cir.int<0> : !s8i loc(#loc157)
                    %74 = cir.load deref %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
                    cir.store %73, %74 : !s8i, !cir.ptr<!s8i> loc(#loc307)
                  } loc(#loc306)
                } loc(#loc305)
              } loc(#loc270)
              cir.yield loc(#loc58)
            } while {
              %16 = cir.const #cir.int<0> : !s32i loc(#loc160)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc160)
              cir.condition(%17) loc(#loc160)
            } loc(#loc269)
          } loc(#loc269)
          cir.scope {
            %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc163)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc164)
            %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc164)
            %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc309)
            cir.if %19 {
              %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc166)
              %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc167)
            } loc(#loc310)
          } loc(#loc308)
        } loc(#loc263)
      } loc(#loc262)
    } loc(#loc260)
    cir.scope {
      %4 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc312)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc171)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
      %6 = cir.const #cir.int<8> : !s32i loc(#loc313)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%4, %5, %6) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr1) loc(#loc255)
          cir.yield loc(#loc176)
        } loc(#loc176)
        cir.yield loc(#loc175)
      } catch [#cir.unwind {
        cir.resume loc(#loc175)
      }] loc(#loc175)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr1) loc(#loc255)
          cir.yield loc(#loc177)
        } loc(#loc177)
        cir.yield loc(#loc175)
      } catch [#cir.unwind {
        cir.resume loc(#loc175)
      }] loc(#loc175)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr1) loc(#loc255)
    } loc(#loc311)
    cir.return loc(#loc31)
  } loc(#loc256)
  cir.func internal private @_ZL18staticReturnsFalsev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc179)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc180)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc315)
    cir.return %2 : !s32i loc(#loc315)
  } loc(#loc314)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc316)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc184)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc317)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc187)
  cir.func internal private @_ZN62CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc319)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc320)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc320)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc320)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc194)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc321)
    cir.scope {
      %4 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc198)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc323)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc184)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc184)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc203)
      } else {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc204)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc205)
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc187)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc187)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc204)
      } loc(#loc324)
    } loc(#loc322)
    cir.scope {
      %4 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc326)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc209)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc210)
      %6 = cir.const #cir.int<8> : !s32i loc(#loc313)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%4, %5, %6) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr1) loc(#loc255)
          cir.yield loc(#loc212)
        } loc(#loc212)
        cir.yield loc(#loc211)
      } catch [#cir.unwind {
        cir.resume loc(#loc211)
      }] loc(#loc211)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr1) loc(#loc255)
          cir.yield loc(#loc213)
        } loc(#loc213)
        cir.yield loc(#loc211)
      } catch [#cir.unwind {
        cir.resume loc(#loc211)
      }] loc(#loc211)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr1) loc(#loc255)
    } loc(#loc325)
    cir.return loc(#loc189)
  } loc(#loc318)
  cir.func internal private @_ZN62CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc328)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc329)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc329)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc329)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc220)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc330)
    cir.scope {
      %4 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc224)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc332)
      cir.if %5 {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc227)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc228)
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc229)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc229)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc227)
      } loc(#loc333)
    } loc(#loc331)
    cir.scope {
      %4 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc335)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc233)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc234)
      %6 = cir.const #cir.int<8> : !s32i loc(#loc313)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%4, %5, %6) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr1) loc(#loc255)
          cir.yield loc(#loc236)
        } loc(#loc236)
        cir.yield loc(#loc235)
      } catch [#cir.unwind {
        cir.resume loc(#loc235)
      }] loc(#loc235)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr1) loc(#loc255)
          cir.yield loc(#loc237)
        } loc(#loc237)
        cir.yield loc(#loc235)
      } catch [#cir.unwind {
        cir.resume loc(#loc235)
      }] loc(#loc235)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr1) loc(#loc255)
    } loc(#loc334)
    cir.return loc(#loc215)
  } loc(#loc327)
  cir.func @_ZN62CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_084goodEv() extra(#fn_attr) {
    cir.call @_ZN62CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08L8goodG2B1Ev() : () -> () loc(#loc240)
    cir.call @_ZN62CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08L8goodG2B2Ev() : () -> () loc(#loc241)
    cir.return loc(#loc239)
  } loc(#loc336)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":0:0)
#loc1 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":50:1)
#loc2 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":53:1)
#loc3 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":52:12)
#loc4 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":52:5)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc9 = loc("/usr/include/arpa/inet.h":34:1)
#loc10 = loc("/usr/include/arpa/inet.h":34:47)
#loc11 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":99:53)
#loc12 = loc("/usr/include/netinet/in.h":402:1)
#loc13 = loc("/usr/include/netinet/in.h":403:40)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc18 = loc("/usr/include/string.h":226:1)
#loc19 = loc("/usr/include/string.h":227:50)
#loc20 = loc("/usr/include/unistd.h":358:1)
#loc21 = loc("/usr/include/unistd.h":358:27)
#loc22 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":525:7)
#loc23 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":526:34)
#loc24 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":664:7)
#loc25 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":673:7)
#loc26 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":736:7)
#loc27 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":741:7)
#loc28 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":606:7)
#loc29 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":607:9)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":65:1)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":146:1)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":67:5)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":67:12)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":68:5)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":68:37)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":69:12)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":69:5)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":70:5)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":139:5)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":70:8)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":70:26)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":71:5)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":72:9)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":138:9)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":77:13)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":77:17)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":78:13)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":78:32)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":79:13)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":79:19)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":80:13)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":80:36)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":81:13)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":81:41)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":81:30)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":81:37)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":82:13)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":127:21)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":83:13)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":126:13)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":92:40)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":92:49)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":92:62)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":92:33)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":92:17)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":92:73)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":93:17)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":96:17)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":93:21)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":93:38)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":94:17)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":95:21)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":97:24)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":97:25)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":97:34)
#loc76 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":97:37)
#loc77 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":97:51)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":97:17)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":97:52)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":98:38)
#loc81 = loc("/usr/include/netinet/in.h":249:5)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":98:17)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":99:43)
#loc84 = loc("/usr/include/netinet/in.h":251:20)
#loc85 = loc("/usr/include/netinet/in.h":33:15)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":99:17)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":99:63)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":100:42)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":100:36)
#loc90 = loc("/usr/include/netinet/in.h":250:15)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":100:17)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":100:50)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":101:17)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":104:17)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":101:29)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":101:62)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":101:63)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":101:72)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":101:86)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":101:21)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":101:92)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":102:17)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":103:21)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":108:35)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":108:59)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":108:66)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":108:64)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":108:50)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":108:73)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":108:76)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":108:87)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":108:92)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":108:107)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":108:117)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":108:118)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":108:121)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":108:30)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":108:17)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":108:122)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":109:17)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":112:17)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":109:21)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":109:35)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":109:48)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":109:51)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":109:65)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":110:17)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":111:21)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":114:61)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":114:17)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":114:22)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":114:32)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":114:45)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":114:56)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":114:57)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":116:34)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":116:40)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":116:27)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":116:17)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":116:44)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":117:17)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":120:17)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":117:21)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":118:17)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":119:32)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":119:22)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":119:21)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":121:34)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":121:40)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":121:27)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":121:17)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":121:44)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":122:17)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":125:17)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":122:21)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":123:17)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":124:32)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":124:22)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":124:21)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":127:20)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":128:13)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":131:13)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":128:17)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":128:34)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":129:13)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":130:30)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":130:17)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":140:5)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":145:5)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":141:9)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":141:18)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":143:32)
#loc173 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":665:57)
#loc174 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":665:67)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":65:6)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":143:19)
#loc177 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":144:19)
#loc178 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":55:1)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":58:1)
#loc180 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":57:12)
#loc181 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":57:5)
#loc182 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc183 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":161:19)
#loc185 = loc("/usr/include/string.h":149:1)
#loc186 = loc("/usr/include/string.h":150:14)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":170:22)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":153:1)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":179:1)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":155:5)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":155:12)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":156:5)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":156:37)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":157:12)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":157:5)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":158:5)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":172:5)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":158:8)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":158:27)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":159:5)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":162:5)
#loc202 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":164:5)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":161:9)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":170:9)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":170:16)
#loc206 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":173:5)
#loc207 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":178:5)
#loc208 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":174:9)
#loc209 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":174:18)
#loc210 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":176:32)
#loc211 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":153:13)
#loc212 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":176:19)
#loc213 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":177:19)
#loc214 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":182:1)
#loc215 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":203:1)
#loc216 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":184:5)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":184:12)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":185:5)
#loc219 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":185:37)
#loc220 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":186:12)
#loc221 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":186:5)
#loc222 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":187:5)
#loc223 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":196:5)
#loc224 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":187:8)
#loc225 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":187:26)
#loc226 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":188:5)
#loc227 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":194:9)
#loc228 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":194:16)
#loc229 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":194:22)
#loc230 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":197:5)
#loc231 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":202:5)
#loc232 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":198:9)
#loc233 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":198:18)
#loc234 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":200:32)
#loc235 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":182:13)
#loc236 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":200:19)
#loc237 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":201:19)
#loc238 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":205:1)
#loc239 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":209:1)
#loc240 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":207:5)
#loc241 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_ifstream_08.cpp":208:5)
#loc242 = loc(fused[#loc1, #loc2])
#loc243 = loc(fused[#loc4, #loc3])
#loc244 = loc(fused[#loc5, #loc6])
#loc245 = loc(fused[#loc7, #loc8])
#loc246 = loc(fused[#loc9, #loc10])
#loc247 = loc(fused[#loc12, #loc13])
#loc248 = loc(fused[#loc14, #loc15])
#loc249 = loc(fused[#loc16, #loc17])
#loc250 = loc(fused[#loc18, #loc19])
#loc251 = loc(fused[#loc20, #loc21])
#loc252 = loc(fused[#loc22, #loc23])
#loc253 = loc(fused[#loc24, #loc25])
#loc254 = loc(fused[#loc26, #loc27])
#loc255 = loc(fused[#loc28, #loc29])
#loc256 = loc(fused[#loc30, #loc31])
#loc257 = loc(fused[#loc32, #loc33])
#loc258 = loc(fused[#loc34, #loc35])
#loc259 = loc(fused[#loc37, #loc36])
#loc260 = loc(fused[#loc38, #loc39])
#loc261 = loc(fused[#loc40, #loc41])
#loc262 = loc(fused[#loc42, #loc39])
#loc263 = loc(fused[#loc43, #loc44])
#loc264 = loc(fused[#loc45, #loc46])
#loc265 = loc(fused[#loc47, #loc48])
#loc266 = loc(fused[#loc49, #loc50])
#loc267 = loc(fused[#loc51, #loc52])
#loc268 = loc(fused[#loc53, #loc54])
#loc269 = loc(fused[#loc57, #loc58])
#loc270 = loc(fused[#loc59, #loc60])
#loc271 = loc(fused[#loc65, #loc66])
#loc272 = loc(fused[#loc67, #loc68])
#loc273 = loc(fused[#loc69, #loc70])
#loc274 = loc(fused[#loc71, #loc68])
#loc275 = loc(fused[#loc73, #loc74])
#loc276 = loc(fused[#loc76, #loc77])
#loc277 = loc(fused[#loc78, #loc79])
#loc278 = loc(fused[#loc82, #loc80])
#loc279 = loc(fused[#loc86, #loc87])
#loc280 = loc(fused[#loc91, #loc92])
#loc281 = loc(fused[#loc93, #loc94])
#loc282 = loc(fused[#loc96, #loc97])
#loc283 = loc(fused[#loc98, #loc99])
#loc284 = loc(fused[#loc100, #loc101])
#loc285 = loc(fused[#loc102, #loc94])
#loc286 = loc(fused[#loc108, #loc109])
#loc287 = loc(fused[#loc110, #loc111])
#loc288 = loc(fused[#loc112, #loc113])
#loc289 = loc(fused[#loc112, #loc114])
#loc290 = loc(fused[#loc110, #loc115])
#loc291 = loc(fused[#loc118, #loc119])
#loc292 = loc(fused[#loc120, #loc121])
#loc293 = loc(fused[#loc122, #loc123])
#loc294 = loc(fused[#loc125, #loc126])
#loc295 = loc(fused[#loc127, #loc121])
#loc296 = loc(fused[#loc133, #loc134])
#loc297 = loc(fused[#loc132, #loc134])
#loc298 = loc(fused[#loc131, #loc134])
#loc299 = loc(fused[#loc130, #loc129])
#loc300 = loc(fused[#loc139, #loc140])
#loc301 = loc(fused[#loc141, #loc142])
#loc302 = loc(fused[#loc144, #loc142])
#loc303 = loc(fused[#loc147, #loc145])
#loc304 = loc(fused[#loc151, #loc152])
#loc305 = loc(fused[#loc153, #loc154])
#loc306 = loc(fused[#loc156, #loc154])
#loc307 = loc(fused[#loc159, #loc157])
#loc308 = loc(fused[#loc161, #loc162])
#loc309 = loc(fused[#loc163, #loc164])
#loc310 = loc(fused[#loc165, #loc162])
#loc311 = loc(fused[#loc168, #loc169])
#loc312 = loc(fused[#loc170, #loc171])
#loc313 = loc(fused[#loc173, #loc174])
#loc314 = loc(fused[#loc178, #loc179])
#loc315 = loc(fused[#loc181, #loc180])
#loc316 = loc(fused[#loc182, #loc183])
#loc317 = loc(fused[#loc185, #loc186])
#loc318 = loc(fused[#loc188, #loc189])
#loc319 = loc(fused[#loc190, #loc191])
#loc320 = loc(fused[#loc192, #loc193])
#loc321 = loc(fused[#loc195, #loc194])
#loc322 = loc(fused[#loc196, #loc197])
#loc323 = loc(fused[#loc198, #loc199])
#loc324 = loc(fused[#loc200, #loc201, #loc202, #loc197])
#loc325 = loc(fused[#loc206, #loc207])
#loc326 = loc(fused[#loc208, #loc209])
#loc327 = loc(fused[#loc214, #loc215])
#loc328 = loc(fused[#loc216, #loc217])
#loc329 = loc(fused[#loc218, #loc219])
#loc330 = loc(fused[#loc221, #loc220])
#loc331 = loc(fused[#loc222, #loc223])
#loc332 = loc(fused[#loc224, #loc225])
#loc333 = loc(fused[#loc226, #loc223])
#loc334 = loc(fused[#loc230, #loc231])
#loc335 = loc(fused[#loc232, #loc233])
#loc336 = loc(fused[#loc238, #loc239])
