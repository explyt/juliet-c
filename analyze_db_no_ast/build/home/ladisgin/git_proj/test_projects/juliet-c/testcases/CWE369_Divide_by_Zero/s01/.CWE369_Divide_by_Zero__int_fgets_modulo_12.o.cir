!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func no_proto private  @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc199)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc200)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc201)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc202)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc203)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @printIntLine(!s32i) loc(#loc204)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto  @CWE369_Divide_by_Zero__int_fgets_modulo_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc206)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc20)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc209)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc209)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc24)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc24)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc212)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc212)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc212)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc35)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc36)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc36)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc36)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc36)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc36)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc36)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc36)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc36)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc201)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc37)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc38)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !s32i loc(#loc214)
            %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc40)
            cir.if %24 {
              %25 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc44)
              %26 = cir.call @atoi(%25) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc45)
              cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc216)
            } else {
              %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
              %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc48)
            } loc(#loc215)
          } loc(#loc213)
        } loc(#loc211)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc49)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc217)
      } loc(#loc210)
    } loc(#loc208)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc219)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc219)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc53)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc53)
      cir.if %6 {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc58)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
        %9 = cir.binop(rem, %7, %8) : !s32i loc(#loc221)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc60)
      } else {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc63)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc64)
          %9 = cir.cmp(ne, %7, %8) : !s32i, !s32i loc(#loc223)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc65)
          cir.if %10 {
            %11 = cir.const #cir.int<100> : !s32i loc(#loc69)
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc70)
            %13 = cir.binop(rem, %11, %12) : !s32i loc(#loc225)
            cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc71)
          } else {
            %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc14)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc14)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc72)
          } loc(#loc224)
        } loc(#loc222)
      } loc(#loc220)
    } loc(#loc218)
    cir.return loc(#loc16)
  } loc(#loc205)
  cir.func no_proto  @CWE369_Divide_by_Zero__int_fgets_modulo_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc227)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc75)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc228)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc77)
    cir.return loc(#loc74)
  } loc(#loc226)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc230)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc84)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc233)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc233)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc88)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc88)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc236)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc236)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc236)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc99)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc100)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc100)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc100)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc100)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc100)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc100)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc100)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc100)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc201)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc101)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc102)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc103)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !s32i loc(#loc238)
            %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc104)
            cir.if %24 {
              %25 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
              %26 = cir.call @atoi(%25) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc109)
              cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc240)
            } else {
              %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc112)
              %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc112)
              cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc113)
            } loc(#loc239)
          } loc(#loc237)
        } loc(#loc235)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc242)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc242)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc242)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc120)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc121)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc121)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc121)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc121)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc121)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc121)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc121)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc121)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc201)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc122)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc123)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc124)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc124)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !s32i loc(#loc244)
            %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc125)
            cir.if %24 {
              %25 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
              %26 = cir.call @atoi(%25) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc130)
              cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc246)
            } else {
              %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc133)
              %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc133)
              cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc134)
            } loc(#loc245)
          } loc(#loc243)
        } loc(#loc241)
      } loc(#loc234)
    } loc(#loc232)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc248)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc248)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc137)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc137)
      cir.if %6 {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc144)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc145)
          %9 = cir.cmp(ne, %7, %8) : !s32i, !s32i loc(#loc251)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc146)
          cir.if %10 {
            %11 = cir.const #cir.int<100> : !s32i loc(#loc150)
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc151)
            %13 = cir.binop(rem, %11, %12) : !s32i loc(#loc253)
            cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc152)
          } else {
            %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc153)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc153)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc154)
          } loc(#loc252)
        } loc(#loc250)
      } else {
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc158)
          %9 = cir.cmp(ne, %7, %8) : !s32i, !s32i loc(#loc255)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc159)
          cir.if %10 {
            %11 = cir.const #cir.int<100> : !s32i loc(#loc163)
            %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc164)
            %13 = cir.binop(rem, %11, %12) : !s32i loc(#loc257)
            cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc165)
          } else {
            %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc166)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc166)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc167)
          } loc(#loc256)
        } loc(#loc254)
      } loc(#loc249)
    } loc(#loc247)
    cir.return loc(#loc80)
  } loc(#loc229)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc259)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc172)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc173)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc262)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc262)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc177)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc177)
      cir.if %6 {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc182)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc264)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc184)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc265)
      } loc(#loc263)
    } loc(#loc261)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc267)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc267)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc188)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc188)
      cir.if %6 {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc193)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc194)
        %9 = cir.binop(rem, %7, %8) : !s32i loc(#loc269)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc195)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc196)
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
        %9 = cir.binop(rem, %7, %8) : !s32i loc(#loc270)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc198)
      } loc(#loc268)
    } loc(#loc266)
    cir.return loc(#loc169)
  } loc(#loc258)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":41:27)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":64:23)
#loc15 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":24:1)
#loc16 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":67:1)
#loc17 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":26:5)
#loc18 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":26:9)
#loc19 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":28:13)
#loc20 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":28:12)
#loc21 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":28:5)
#loc22 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":29:5)
#loc23 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":49:5)
#loc24 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":29:8)
#loc25 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":29:33)
#loc26 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":30:5)
#loc27 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":44:5)
#loc28 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":46:5)
#loc29 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":31:9)
#loc30 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":43:9)
#loc31 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":32:13)
#loc32 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":32:49)
#loc33 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":34:13)
#loc34 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":42:13)
#loc35 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":34:23)
#loc36 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":34:36)
#loc37 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":34:53)
#loc38 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":34:17)
#loc39 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":34:63)
#loc40 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":34:60)
#loc41 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":35:13)
#loc42 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":38:13)
#loc43 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":40:13)
#loc44 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":37:29)
#loc45 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":37:24)
#loc46 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":37:17)
#loc47 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":37:40)
#loc48 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":41:17)
#loc49 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":48:16)
#loc50 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":48:9)
#loc51 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":50:5)
#loc52 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":66:5)
#loc53 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":50:8)
#loc54 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":50:33)
#loc55 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":51:5)
#loc56 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":54:5)
#loc57 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":56:5)
#loc58 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":53:22)
#loc59 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":53:28)
#loc60 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":53:9)
#loc61 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":58:9)
#loc62 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":65:9)
#loc63 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":58:13)
#loc64 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":58:21)
#loc65 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":58:18)
#loc66 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":59:9)
#loc67 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":61:9)
#loc68 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":63:9)
#loc69 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":60:26)
#loc70 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":60:32)
#loc71 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":60:13)
#loc72 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":64:13)
#loc73 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":169:1)
#loc74 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":173:1)
#loc75 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":171:5)
#loc76 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":171:13)
#loc77 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":172:5)
#loc78 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":172:13)
#loc79 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":76:1)
#loc80 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":137:1)
#loc81 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":78:5)
#loc82 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":78:9)
#loc83 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":80:13)
#loc84 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":80:12)
#loc85 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":80:5)
#loc86 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":81:5)
#loc87 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":112:5)
#loc88 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":81:8)
#loc89 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":81:33)
#loc90 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":82:5)
#loc91 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":96:5)
#loc92 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":98:5)
#loc93 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":83:9)
#loc94 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":95:9)
#loc95 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":84:13)
#loc96 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":84:49)
#loc97 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":86:13)
#loc98 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":94:13)
#loc99 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":86:23)
#loc100 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":86:36)
#loc101 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":86:53)
#loc102 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":86:17)
#loc103 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":86:63)
#loc104 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":86:60)
#loc105 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":87:13)
#loc106 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":90:13)
#loc107 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":92:13)
#loc108 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":89:29)
#loc109 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":89:24)
#loc110 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":89:17)
#loc111 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":89:40)
#loc112 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":93:27)
#loc113 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":93:17)
#loc114 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":99:9)
#loc115 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":111:9)
#loc116 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":100:13)
#loc117 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":100:49)
#loc118 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":102:13)
#loc119 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":110:13)
#loc120 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":102:23)
#loc121 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":102:36)
#loc122 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":102:53)
#loc123 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":102:17)
#loc124 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":102:63)
#loc125 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":102:60)
#loc126 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":103:13)
#loc127 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":106:13)
#loc128 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":108:13)
#loc129 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":105:29)
#loc130 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":105:24)
#loc131 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":105:17)
#loc132 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":105:40)
#loc133 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":109:27)
#loc134 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":109:17)
#loc135 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":113:5)
#loc136 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":136:5)
#loc137 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":113:8)
#loc138 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":113:33)
#loc139 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":114:5)
#loc140 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":124:5)
#loc141 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":126:5)
#loc142 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":116:9)
#loc143 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":123:9)
#loc144 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":116:13)
#loc145 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":116:21)
#loc146 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":116:18)
#loc147 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":117:9)
#loc148 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":119:9)
#loc149 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":121:9)
#loc150 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":118:26)
#loc151 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":118:32)
#loc152 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":118:13)
#loc153 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":122:23)
#loc154 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":122:13)
#loc155 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":128:9)
#loc156 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":135:9)
#loc157 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":128:13)
#loc158 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":128:21)
#loc159 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":128:18)
#loc160 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":129:9)
#loc161 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":131:9)
#loc162 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":133:9)
#loc163 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":130:26)
#loc164 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":130:32)
#loc165 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":130:13)
#loc166 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":134:23)
#loc167 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":134:13)
#loc168 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":142:1)
#loc169 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":167:1)
#loc170 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":144:5)
#loc171 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":144:9)
#loc172 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":146:13)
#loc173 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":146:12)
#loc174 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":146:5)
#loc175 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":147:5)
#loc176 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":156:5)
#loc177 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":147:8)
#loc178 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":147:33)
#loc179 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":148:5)
#loc180 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":151:5)
#loc181 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":153:5)
#loc182 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":150:16)
#loc183 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":150:9)
#loc184 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":155:16)
#loc185 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":155:9)
#loc186 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":157:5)
#loc187 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":166:5)
#loc188 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":157:8)
#loc189 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":157:33)
#loc190 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":158:5)
#loc191 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":161:5)
#loc192 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":163:5)
#loc193 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":160:22)
#loc194 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":160:28)
#loc195 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":160:9)
#loc196 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":165:22)
#loc197 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":165:28)
#loc198 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":165:9)
#loc199 = loc(fused[#loc1, #loc2])
#loc200 = loc(fused[#loc3, #loc4])
#loc201 = loc(fused[#loc5, #loc6])
#loc202 = loc(fused[#loc7, #loc8])
#loc203 = loc(fused[#loc9, #loc10])
#loc204 = loc(fused[#loc12, #loc13])
#loc205 = loc(fused[#loc15, #loc16])
#loc206 = loc(fused[#loc17, #loc18])
#loc207 = loc(fused[#loc21, #loc19])
#loc208 = loc(fused[#loc22, #loc23])
#loc209 = loc(fused[#loc24, #loc25])
#loc210 = loc(fused[#loc26, #loc27, #loc28, #loc23])
#loc211 = loc(fused[#loc29, #loc30])
#loc212 = loc(fused[#loc31, #loc32])
#loc213 = loc(fused[#loc33, #loc34])
#loc214 = loc(fused[#loc38, #loc39])
#loc215 = loc(fused[#loc41, #loc42, #loc43, #loc34])
#loc216 = loc(fused[#loc46, #loc47])
#loc217 = loc(fused[#loc50, #loc49])
#loc218 = loc(fused[#loc51, #loc52])
#loc219 = loc(fused[#loc53, #loc54])
#loc220 = loc(fused[#loc55, #loc56, #loc57, #loc52])
#loc221 = loc(fused[#loc58, #loc59])
#loc222 = loc(fused[#loc61, #loc62])
#loc223 = loc(fused[#loc63, #loc64])
#loc224 = loc(fused[#loc66, #loc67, #loc68, #loc62])
#loc225 = loc(fused[#loc69, #loc70])
#loc226 = loc(fused[#loc73, #loc74])
#loc227 = loc(fused[#loc75, #loc76])
#loc228 = loc(fused[#loc77, #loc78])
#loc229 = loc(fused[#loc79, #loc80])
#loc230 = loc(fused[#loc81, #loc82])
#loc231 = loc(fused[#loc85, #loc83])
#loc232 = loc(fused[#loc86, #loc87])
#loc233 = loc(fused[#loc88, #loc89])
#loc234 = loc(fused[#loc90, #loc91, #loc92, #loc87])
#loc235 = loc(fused[#loc93, #loc94])
#loc236 = loc(fused[#loc95, #loc96])
#loc237 = loc(fused[#loc97, #loc98])
#loc238 = loc(fused[#loc102, #loc103])
#loc239 = loc(fused[#loc105, #loc106, #loc107, #loc98])
#loc240 = loc(fused[#loc110, #loc111])
#loc241 = loc(fused[#loc114, #loc115])
#loc242 = loc(fused[#loc116, #loc117])
#loc243 = loc(fused[#loc118, #loc119])
#loc244 = loc(fused[#loc123, #loc124])
#loc245 = loc(fused[#loc126, #loc127, #loc128, #loc119])
#loc246 = loc(fused[#loc131, #loc132])
#loc247 = loc(fused[#loc135, #loc136])
#loc248 = loc(fused[#loc137, #loc138])
#loc249 = loc(fused[#loc139, #loc140, #loc141, #loc136])
#loc250 = loc(fused[#loc142, #loc143])
#loc251 = loc(fused[#loc144, #loc145])
#loc252 = loc(fused[#loc147, #loc148, #loc149, #loc143])
#loc253 = loc(fused[#loc150, #loc151])
#loc254 = loc(fused[#loc155, #loc156])
#loc255 = loc(fused[#loc157, #loc158])
#loc256 = loc(fused[#loc160, #loc161, #loc162, #loc156])
#loc257 = loc(fused[#loc163, #loc164])
#loc258 = loc(fused[#loc168, #loc169])
#loc259 = loc(fused[#loc170, #loc171])
#loc260 = loc(fused[#loc174, #loc172])
#loc261 = loc(fused[#loc175, #loc176])
#loc262 = loc(fused[#loc177, #loc178])
#loc263 = loc(fused[#loc179, #loc180, #loc181, #loc176])
#loc264 = loc(fused[#loc183, #loc182])
#loc265 = loc(fused[#loc185, #loc184])
#loc266 = loc(fused[#loc186, #loc187])
#loc267 = loc(fused[#loc188, #loc189])
#loc268 = loc(fused[#loc190, #loc191, #loc192, #loc187])
#loc269 = loc(fused[#loc193, #loc194])
#loc270 = loc(fused[#loc196, #loc197])
