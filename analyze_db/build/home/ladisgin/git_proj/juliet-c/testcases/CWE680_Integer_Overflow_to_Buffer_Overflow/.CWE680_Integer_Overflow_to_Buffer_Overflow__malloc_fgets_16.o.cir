!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc145)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc146)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc147)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc149)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc150)
  cir.func private @printIntLine(!s32i) loc(#loc151)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc152)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc154)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc155)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc156)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc157)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc29)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    cir.br ^bb1 loc(#loc159)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc159)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc33)
    cir.brcond %7 ^bb3, ^bb11 loc(#loc33)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc160)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc154)
    cir.store %8, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc154)
    cir.br ^bb5 loc(#loc161)
  ^bb5:  // pred: ^bb4
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc38)
    %10 = cir.const #cir.int<3> : !s32i loc(#loc39)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc39)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc39)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc39)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc39)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc39)
    %16 = cir.binop(add, %13, %15) : !u64i loc(#loc39)
    %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc39)
    %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc146)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc40)
    %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc41)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc42)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc42)
    %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc162)
    cir.brcond %23 ^bb6, ^bb7 loc(#loc163)
  ^bb6:  // pred: ^bb5
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc46)
    %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc47)
    cir.store %25, %3 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.br ^bb8 loc(#loc44)
  ^bb7:  // pred: ^bb5
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    cir.br ^bb8 loc(#loc37)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc37)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc35)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc51)
  ^bb11:  // 2 preds: ^bb2, ^bb10
    cir.br ^bb12 loc(#loc32)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc165)
  ^bb13:  // pred: ^bb12
    %28 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc54)
    %29 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc55)
    %31 = cir.const #cir.int<4> : !u64i loc(#loc166)
    %32 = cir.binop(mul, %30, %31) : !u64i loc(#loc167)
    %33 = cir.call @malloc(%32) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc54)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc168)
    cir.store %34, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc169)
    cir.br ^bb14 loc(#loc170)
  ^bb14:  // pred: ^bb13
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc62)
    %36 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc63)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc63)
    %38 = cir.cmp(eq, %35, %37) : !cir.ptr<!s32i>, !cir.bool loc(#loc171)
    cir.brcond %38 ^bb15, ^bb16 loc(#loc172)
  ^bb15:  // pred: ^bb14
    %39 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc65)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %41 = cir.unary(minus, %40) : !s32i, !s32i loc(#loc67)
    cir.call @exit(%41) : (!s32i) -> () extra(#fn_attr) loc(#loc65)
    cir.br ^bb16 loc(#loc61)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc61)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc173)
  ^bb18:  // pred: ^bb17
    %42 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc70)
    cir.store %43, %1 : !u64i, !cir.ptr<!u64i> loc(#loc174)
    cir.br ^bb19 loc(#loc173)
  ^bb19:  // 2 preds: ^bb18, ^bb23
    %44 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc72)
    %45 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc73)
    %47 = cir.cmp(lt, %44, %46) : !u64i, !cir.bool loc(#loc175)
    cir.brcond %47 ^bb20, ^bb24 loc(#loc74)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc176)
  ^bb21:  // pred: ^bb20
    %48 = cir.const #cir.int<0> : !s32i loc(#loc76)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc77)
    %50 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc78)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!s32i>, %50 : !u64i), !cir.ptr<!s32i> loc(#loc79)
    cir.store %48, %51 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.br ^bb22 loc(#loc69)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc69)
  ^bb23:  // pred: ^bb22
    %52 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc80)
    %53 = cir.unary(inc, %52) : !u64i, !u64i loc(#loc81)
    cir.store %53, %1 : !u64i, !cir.ptr<!u64i> loc(#loc178)
    cir.br ^bb19 loc(#loc173)
  ^bb24:  // pred: ^bb19
    cir.br ^bb25 loc(#loc69)
  ^bb25:  // pred: ^bb24
    %54 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc82)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %56 = cir.ptr_stride(%54 : !cir.ptr<!s32i>, %55 : !s32i), !cir.ptr<!s32i> loc(#loc84)
    %57 = cir.load %56 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    cir.call @printIntLine(%57) : (!s32i) -> () loc(#loc85)
    %58 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc86)
    cir.call @free(%59) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc87)
    cir.br ^bb26 loc(#loc53)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc19)
  } loc(#loc153)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc90)
    cir.return loc(#loc89)
  } loc(#loc179)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc182)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc183)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc184)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc101)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    cir.br ^bb1 loc(#loc186)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc186)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc105)
    cir.brcond %6 ^bb3, ^bb4 loc(#loc105)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.int<20> : !s32i loc(#loc106)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc187)
    cir.br ^bb4 loc(#loc108)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc104)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc188)
  ^bb6:  // pred: ^bb5
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc111)
    %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc112)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc189)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc190)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc111)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc191)
    cir.store %14, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc192)
    cir.br ^bb7 loc(#loc193)
  ^bb7:  // pred: ^bb6
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc119)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc120)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc120)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s32i>, !cir.bool loc(#loc194)
    cir.brcond %18 ^bb8, ^bb9 loc(#loc195)
  ^bb8:  // pred: ^bb7
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc122)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc124)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc122)
    cir.br ^bb9 loc(#loc118)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc118)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc196)
  ^bb11:  // pred: ^bb10
    %22 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc127)
    cir.store %23, %0 : !u64i, !cir.ptr<!u64i> loc(#loc197)
    cir.br ^bb12 loc(#loc196)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %24 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc129)
    %25 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc130)
    %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc198)
    cir.brcond %27 ^bb13, ^bb17 loc(#loc131)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc199)
  ^bb14:  // pred: ^bb13
    %28 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc134)
    %30 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc135)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !u64i), !cir.ptr<!s32i> loc(#loc136)
    cir.store %28, %31 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    cir.br ^bb15 loc(#loc126)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc126)
  ^bb16:  // pred: ^bb15
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc137)
    %33 = cir.unary(inc, %32) : !u64i, !u64i loc(#loc138)
    cir.store %33, %0 : !u64i, !cir.ptr<!u64i> loc(#loc201)
    cir.br ^bb12 loc(#loc196)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc126)
  ^bb18:  // pred: ^bb17
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc140)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !s32i), !cir.ptr<!s32i> loc(#loc141)
    %37 = cir.load %36 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    cir.call @printIntLine(%37) : (!s32i) -> () loc(#loc142)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc143)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc143)
    cir.call @free(%39) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc144)
    cir.br ^bb19 loc(#loc110)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc93)
  } loc(#loc181)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":40:27)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("/usr/include/stdlib.h":687:1)
#loc17 = loc("/usr/include/stdlib.h":687:32)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":23:1)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":59:1)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":31:13)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":31:49)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":46:9)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":46:16)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":47:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":47:14)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":25:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":25:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":27:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":27:12)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":27:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":28:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":44:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":28:11)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":30:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":42:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":33:13)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":41:13)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":33:23)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":33:36)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":33:53)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":33:17)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":33:63)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":34:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":37:13)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":39:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":36:29)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":36:24)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":36:17)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":36:40)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":40:17)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":43:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":45:5)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":58:5)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":50:28)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":50:35)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":50:42)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":50:52)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":50:53)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":50:9)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":51:9)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":51:43)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":51:13)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":51:27)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":51:33)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":51:34)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":51:40)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":51:39)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":52:9)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":55:9)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":52:18)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":52:14)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":52:21)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":52:33)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":52:23)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":53:9)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":54:29)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":54:13)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":54:24)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":54:25)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":52:40)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":52:39)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":56:22)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":56:33)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":56:34)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":56:9)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":57:14)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":57:9)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":93:1)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":96:1)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":95:5)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":95:13)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":66:1)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":91:1)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":78:9)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":78:16)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":79:9)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":79:14)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":68:5)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":68:9)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":70:13)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":70:12)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":70:5)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":71:5)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":76:5)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":71:11)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":74:16)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":74:9)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":75:9)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":77:5)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":90:5)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":82:28)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":82:35)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":82:42)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":82:52)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":82:53)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":82:9)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":83:9)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":83:43)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":83:13)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":83:27)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":83:33)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":83:34)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":83:40)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":83:39)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":84:9)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":87:9)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":84:18)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":84:14)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":84:21)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":84:33)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":84:23)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":85:9)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":86:29)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":86:13)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":86:24)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":86:25)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":84:40)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":84:39)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":88:22)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":88:33)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":88:34)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":88:9)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":89:14)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_16.c":89:9)
#loc145 = loc(fused[#loc1, #loc2])
#loc146 = loc(fused[#loc3, #loc4])
#loc147 = loc(fused[#loc5, #loc6])
#loc148 = loc(fused[#loc7, #loc8])
#loc149 = loc(fused[#loc10, #loc11])
#loc150 = loc(fused[#loc12, #loc13])
#loc151 = loc(fused[#loc14, #loc15])
#loc152 = loc(fused[#loc16, #loc17])
#loc153 = loc(fused[#loc18, #loc19])
#loc154 = loc(fused[#loc20, #loc21])
#loc155 = loc(fused[#loc22, #loc23])
#loc156 = loc(fused[#loc24, #loc25])
#loc157 = loc(fused[#loc26, #loc27])
#loc158 = loc(fused[#loc30, #loc28])
#loc159 = loc(fused[#loc31, #loc32])
#loc160 = loc(fused[#loc34, #loc35])
#loc161 = loc(fused[#loc36, #loc37])
#loc162 = loc(fused[#loc41, #loc42])
#loc163 = loc(fused[#loc43, #loc44, #loc45, #loc37])
#loc164 = loc(fused[#loc48, #loc49])
#loc165 = loc(fused[#loc52, #loc53])
#loc166 = loc(fused[#loc56, #loc57])
#loc167 = loc(fused[#loc55, #loc57])
#loc168 = loc(fused[#loc54, #loc58])
#loc169 = loc(fused[#loc59, #loc58])
#loc170 = loc(fused[#loc60, #loc61])
#loc171 = loc(fused[#loc62, #loc63])
#loc172 = loc(fused[#loc64, #loc61])
#loc173 = loc(fused[#loc68, #loc69])
#loc174 = loc(fused[#loc71, #loc70])
#loc175 = loc(fused[#loc72, #loc73])
#loc176 = loc(fused[#loc75, #loc69])
#loc177 = loc(fused[#loc77, #loc76])
#loc178 = loc(fused[#loc81, #loc80])
#loc179 = loc(fused[#loc88, #loc89])
#loc180 = loc(fused[#loc90, #loc91])
#loc181 = loc(fused[#loc92, #loc93])
#loc182 = loc(fused[#loc94, #loc95])
#loc183 = loc(fused[#loc96, #loc97])
#loc184 = loc(fused[#loc98, #loc99])
#loc185 = loc(fused[#loc102, #loc100])
#loc186 = loc(fused[#loc103, #loc104])
#loc187 = loc(fused[#loc107, #loc106])
#loc188 = loc(fused[#loc109, #loc110])
#loc189 = loc(fused[#loc113, #loc114])
#loc190 = loc(fused[#loc112, #loc114])
#loc191 = loc(fused[#loc111, #loc115])
#loc192 = loc(fused[#loc116, #loc115])
#loc193 = loc(fused[#loc117, #loc118])
#loc194 = loc(fused[#loc119, #loc120])
#loc195 = loc(fused[#loc121, #loc118])
#loc196 = loc(fused[#loc125, #loc126])
#loc197 = loc(fused[#loc128, #loc127])
#loc198 = loc(fused[#loc129, #loc130])
#loc199 = loc(fused[#loc132, #loc126])
#loc200 = loc(fused[#loc134, #loc133])
#loc201 = loc(fused[#loc138, #loc137])
