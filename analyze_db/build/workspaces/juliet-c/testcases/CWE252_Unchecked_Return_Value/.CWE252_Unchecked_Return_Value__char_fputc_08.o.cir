!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fputc_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fputc(!s32i, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc67)
  cir.global "private" external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc68)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fputc_08_bad() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc70)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc71)
    %1 = cir.call %0() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc9)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc9)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc72)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<65> : !s32i loc(#loc12)
    %4 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc68)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc13)
    %6 = cir.call @fputc(%3, %5) : (!s32i, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc14)
    cir.br ^bb3 loc(#loc8)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc8)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc6)
  } loc(#loc69)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fputc_08_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc74)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc17)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc75)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc19)
    cir.return loc(#loc16)
  } loc(#loc73)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc22)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc23)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    cir.return %2 : !s32i loc(#loc77)
  } loc(#loc76)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc27)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fputc failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc28)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc80)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc81)
    %1 = cir.call %0() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc33)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc33)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc82)
  ^bb2:  // pred: ^bb1
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc27)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb8 loc(#loc36)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc83)
  ^bb4:  // pred: ^bb3
    %5 = cir.const #cir.int<65> : !s32i loc(#loc41)
    %6 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc68)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
    %8 = cir.call @fputc(%5, %7) : (!s32i, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc43)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc44)
    %11 = cir.cmp(eq, %8, %10) : !s32i, !cir.bool loc(#loc84)
    cir.brcond %11 ^bb5, ^bb6 loc(#loc85)
  ^bb5:  // pred: ^bb4
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc28)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc28)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb6 loc(#loc40)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc40)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc32)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc32)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc30)
  } loc(#loc79)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc48)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc49)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    cir.return %2 : !s32i loc(#loc87)
  } loc(#loc86)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc89)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc90)
    %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc55)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc55)
    cir.brcond %2 ^bb2, ^bb7 loc(#loc91)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc92)
  ^bb3:  // pred: ^bb2
    %3 = cir.const #cir.int<65> : !s32i loc(#loc60)
    %4 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc68)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc61)
    %6 = cir.call @fputc(%3, %5) : (!s32i, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc62)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc63)
    %9 = cir.cmp(eq, %6, %8) : !s32i, !cir.bool loc(#loc93)
    cir.brcond %9 ^bb4, ^bb5 loc(#loc94)
  ^bb4:  // pred: ^bb3
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc65)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    cir.br ^bb5 loc(#loc59)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc59)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc54)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc54)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc52)
  } loc(#loc88)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fputc_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":611:1)
#loc2 = loc("/usr/include/stdio.h":611:44)
#loc3 = loc("/usr/include/stdio.h":150:1)
#loc4 = loc("/usr/include/stdio.h":150:14)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":37:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":44:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":39:5)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":43:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":39:8)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":39:26)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":40:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":42:20)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":42:25)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":42:9)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":81:1)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":85:1)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":83:5)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":83:11)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":84:5)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":84:11)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":25:1)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":28:1)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":27:12)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":27:5)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":56:19)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":63:23)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":51:1)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":66:1)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":53:5)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":65:5)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":53:8)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":53:27)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":54:5)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":57:5)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":59:5)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":56:9)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":61:9)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":64:9)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":61:24)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":61:29)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":61:13)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":61:40)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":62:9)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":63:13)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":30:1)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":33:1)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":32:12)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":32:5)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":69:1)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":79:1)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":71:5)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":78:5)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":71:8)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":71:26)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":72:5)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":74:9)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":77:9)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":74:24)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":74:29)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":74:13)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":74:40)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":75:9)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":76:23)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fputc_08.c":76:13)
#loc67 = loc(fused[#loc1, #loc2])
#loc68 = loc(fused[#loc3, #loc4])
#loc69 = loc(fused[#loc5, #loc6])
#loc70 = loc(fused[#loc7, #loc8])
#loc71 = loc(fused[#loc9, #loc10])
#loc72 = loc(fused[#loc11, #loc8])
#loc73 = loc(fused[#loc15, #loc16])
#loc74 = loc(fused[#loc17, #loc18])
#loc75 = loc(fused[#loc19, #loc20])
#loc76 = loc(fused[#loc21, #loc22])
#loc77 = loc(fused[#loc24, #loc23])
#loc78 = loc(fused[#loc25, #loc26])
#loc79 = loc(fused[#loc29, #loc30])
#loc80 = loc(fused[#loc31, #loc32])
#loc81 = loc(fused[#loc33, #loc34])
#loc82 = loc(fused[#loc35, #loc36, #loc37, #loc32])
#loc83 = loc(fused[#loc39, #loc40])
#loc84 = loc(fused[#loc43, #loc44])
#loc85 = loc(fused[#loc45, #loc40])
#loc86 = loc(fused[#loc47, #loc48])
#loc87 = loc(fused[#loc50, #loc49])
#loc88 = loc(fused[#loc51, #loc52])
#loc89 = loc(fused[#loc53, #loc54])
#loc90 = loc(fused[#loc55, #loc56])
#loc91 = loc(fused[#loc57, #loc54])
#loc92 = loc(fused[#loc58, #loc59])
#loc93 = loc(fused[#loc62, #loc63])
#loc94 = loc(fused[#loc64, #loc59])
