!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__new_delete_int_17.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc120)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc121)
  cir.func private @printIntLine(!s32i) loc(#loc122)
  cir.func @_ZN40CWE416_Use_After_Free__new_delete_int_173badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc124)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc125)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc126)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc14)
    cir.store %3, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc127)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc18)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc129)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc21)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc130)
        cir.condition(%7) loc(#loc130)
      } body {
        cir.scope {
          %5 = cir.const #cir.int<4> : !u64i loc(#loc132)
          %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc25)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc132)
          cir.store %7, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc133)
          %8 = cir.const #cir.int<5> : !s32i loc(#loc27)
          %9 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
          cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc134)
          %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc30)
          cir.call @_ZdlPv(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc25)
        } loc(#loc131)
        cir.yield loc(#loc17)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc32)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc135)
        cir.yield loc(#loc128)
      } loc(#loc128)
    } loc(#loc128)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc35)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc137)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc37)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc38)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc138)
        cir.condition(%7) loc(#loc138)
      } body {
        cir.scope {
          %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc40)
          %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc41)
          cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc42)
        } loc(#loc139)
        cir.yield loc(#loc34)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc43)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc44)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc140)
        cir.yield loc(#loc136)
      } loc(#loc136)
    } loc(#loc136)
    cir.return loc(#loc8)
  } loc(#loc123)
  cir.func internal private @_ZN40CWE416_Use_After_Free__new_delete_int_17L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc142)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc143)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc52)
    cir.store %3, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc145)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc56)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc147)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc59)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc148)
        cir.condition(%7) loc(#loc148)
      } body {
        cir.scope {
          %5 = cir.const #cir.int<4> : !u64i loc(#loc150)
          %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc63)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc150)
          cir.store %7, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc151)
          %8 = cir.const #cir.int<5> : !s32i loc(#loc65)
          %9 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
          cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc152)
          %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc68)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc68)
          cir.call @_ZdlPv(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc63)
        } loc(#loc149)
        cir.yield loc(#loc55)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc69)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc70)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc153)
        cir.yield loc(#loc146)
      } loc(#loc146)
    } loc(#loc146)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc73)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc155)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc75)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc76)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc156)
        cir.condition(%7) loc(#loc156)
      } body {
        cir.yield loc(#loc72)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc77)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc78)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc157)
        cir.yield loc(#loc154)
      } loc(#loc154)
    } loc(#loc154)
    cir.return loc(#loc46)
  } loc(#loc141)
  cir.func internal private @_ZN40CWE416_Use_After_Free__new_delete_int_17L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc159)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc160)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc86)
    cir.store %3, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc162)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc90)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc92)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc93)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc165)
        cir.condition(%7) loc(#loc165)
      } body {
        cir.scope {
          %5 = cir.const #cir.int<4> : !u64i loc(#loc167)
          %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc97)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc167)
          cir.store %7, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc168)
          %8 = cir.const #cir.int<5> : !s32i loc(#loc99)
          %9 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc100)
          cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc169)
        } loc(#loc166)
        cir.yield loc(#loc89)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc102)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc103)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
        cir.yield loc(#loc163)
      } loc(#loc163)
    } loc(#loc163)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc106)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc172)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc108)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc109)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc173)
        cir.condition(%7) loc(#loc173)
      } body {
        cir.scope {
          %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc111)
          %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc112)
          cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc113)
        } loc(#loc174)
        cir.yield loc(#loc105)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc114)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc115)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc175)
        cir.yield loc(#loc171)
      } loc(#loc171)
    } loc(#loc171)
    cir.return loc(#loc80)
  } loc(#loc158)
  cir.func @_ZN40CWE416_Use_After_Free__new_delete_int_174goodEv() extra(#fn_attr1) {
    cir.call @_ZN40CWE416_Use_After_Free__new_delete_int_17L7goodB2GEv() : () -> () loc(#loc118)
    cir.call @_ZN40CWE416_Use_After_Free__new_delete_int_17L7goodG2BEv() : () -> () loc(#loc119)
    cir.return loc(#loc117)
  } loc(#loc176)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__new_delete_int_17.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":26:1)
#loc8 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":45:1)
#loc9 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":28:5)
#loc10 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":28:9)
#loc11 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":28:11)
#loc12 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":29:5)
#loc13 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":29:11)
#loc14 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":31:12)
#loc15 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":31:5)
#loc16 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":32:5)
#loc17 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":38:5)
#loc18 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":32:13)
#loc19 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":32:9)
#loc20 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":32:16)
#loc21 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":32:20)
#loc22 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":33:5)
#loc23 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":34:16)
#loc24 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":34:20)
#loc25 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":26:6)
#loc26 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":34:9)
#loc27 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":35:17)
#loc28 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":35:10)
#loc29 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":35:9)
#loc30 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":37:16)
#loc31 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":32:24)
#loc32 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":32:23)
#loc33 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":39:5)
#loc34 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":44:5)
#loc35 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":39:13)
#loc36 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":39:9)
#loc37 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":39:16)
#loc38 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":39:20)
#loc39 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":40:5)
#loc40 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":42:23)
#loc41 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":42:22)
#loc42 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":42:9)
#loc43 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":39:24)
#loc44 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":39:23)
#loc45 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":52:1)
#loc46 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":72:1)
#loc47 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":54:5)
#loc48 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":54:9)
#loc49 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":54:11)
#loc50 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":55:5)
#loc51 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":55:11)
#loc52 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":57:12)
#loc53 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":57:5)
#loc54 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":58:5)
#loc55 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":64:5)
#loc56 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":58:13)
#loc57 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":58:9)
#loc58 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":58:16)
#loc59 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":58:20)
#loc60 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":59:5)
#loc61 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":60:16)
#loc62 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":60:20)
#loc63 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":52:13)
#loc64 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":60:9)
#loc65 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":61:17)
#loc66 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":61:10)
#loc67 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":61:9)
#loc68 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":63:16)
#loc69 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":58:24)
#loc70 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":58:23)
#loc71 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":65:5)
#loc72 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":71:5)
#loc73 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":65:13)
#loc74 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":65:9)
#loc75 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":65:16)
#loc76 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":65:20)
#loc77 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":65:24)
#loc78 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":65:23)
#loc79 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":75:1)
#loc80 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":93:1)
#loc81 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":77:5)
#loc82 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":77:9)
#loc83 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":77:11)
#loc84 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":78:5)
#loc85 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":78:11)
#loc86 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":80:12)
#loc87 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":80:5)
#loc88 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":81:5)
#loc89 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":86:5)
#loc90 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":81:13)
#loc91 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":81:9)
#loc92 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":81:16)
#loc93 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":81:20)
#loc94 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":82:5)
#loc95 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":83:16)
#loc96 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":83:20)
#loc97 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":75:13)
#loc98 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":83:9)
#loc99 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":84:17)
#loc100 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":84:10)
#loc101 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":84:9)
#loc102 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":81:24)
#loc103 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":81:23)
#loc104 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":87:5)
#loc105 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":92:5)
#loc106 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":87:13)
#loc107 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":87:9)
#loc108 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":87:16)
#loc109 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":87:20)
#loc110 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":88:5)
#loc111 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":90:23)
#loc112 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":90:22)
#loc113 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":90:9)
#loc114 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":87:24)
#loc115 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":87:23)
#loc116 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":95:1)
#loc117 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":99:1)
#loc118 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":97:5)
#loc119 = loc("CWE416_Use_After_Free__new_delete_int_17.cpp":98:5)
#loc120 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc3, #loc4])
#loc122 = loc(fused[#loc5, #loc6])
#loc123 = loc(fused[#loc7, #loc8])
#loc124 = loc(fused[#loc9, #loc10])
#loc125 = loc(fused[#loc9, #loc11])
#loc126 = loc(fused[#loc12, #loc13])
#loc127 = loc(fused[#loc15, #loc14])
#loc128 = loc(fused[#loc16, #loc17])
#loc129 = loc(fused[#loc19, #loc18])
#loc130 = loc(fused[#loc20, #loc21])
#loc131 = loc(fused[#loc22, #loc17])
#loc132 = loc(fused[#loc23, #loc24])
#loc133 = loc(fused[#loc26, #loc24])
#loc134 = loc(fused[#loc29, #loc27])
#loc135 = loc(fused[#loc32, #loc31])
#loc136 = loc(fused[#loc33, #loc34])
#loc137 = loc(fused[#loc36, #loc35])
#loc138 = loc(fused[#loc37, #loc38])
#loc139 = loc(fused[#loc39, #loc34])
#loc140 = loc(fused[#loc44, #loc43])
#loc141 = loc(fused[#loc45, #loc46])
#loc142 = loc(fused[#loc47, #loc48])
#loc143 = loc(fused[#loc47, #loc49])
#loc144 = loc(fused[#loc50, #loc51])
#loc145 = loc(fused[#loc53, #loc52])
#loc146 = loc(fused[#loc54, #loc55])
#loc147 = loc(fused[#loc57, #loc56])
#loc148 = loc(fused[#loc58, #loc59])
#loc149 = loc(fused[#loc60, #loc55])
#loc150 = loc(fused[#loc61, #loc62])
#loc151 = loc(fused[#loc64, #loc62])
#loc152 = loc(fused[#loc67, #loc65])
#loc153 = loc(fused[#loc70, #loc69])
#loc154 = loc(fused[#loc71, #loc72])
#loc155 = loc(fused[#loc74, #loc73])
#loc156 = loc(fused[#loc75, #loc76])
#loc157 = loc(fused[#loc78, #loc77])
#loc158 = loc(fused[#loc79, #loc80])
#loc159 = loc(fused[#loc81, #loc82])
#loc160 = loc(fused[#loc81, #loc83])
#loc161 = loc(fused[#loc84, #loc85])
#loc162 = loc(fused[#loc87, #loc86])
#loc163 = loc(fused[#loc88, #loc89])
#loc164 = loc(fused[#loc91, #loc90])
#loc165 = loc(fused[#loc92, #loc93])
#loc166 = loc(fused[#loc94, #loc89])
#loc167 = loc(fused[#loc95, #loc96])
#loc168 = loc(fused[#loc98, #loc96])
#loc169 = loc(fused[#loc101, #loc99])
#loc170 = loc(fused[#loc103, #loc102])
#loc171 = loc(fused[#loc104, #loc105])
#loc172 = loc(fused[#loc107, #loc106])
#loc173 = loc(fused[#loc108, #loc109])
#loc174 = loc(fused[#loc110, #loc105])
#loc175 = loc(fused[#loc115, #loc114])
#loc176 = loc(fused[#loc116, #loc117])
