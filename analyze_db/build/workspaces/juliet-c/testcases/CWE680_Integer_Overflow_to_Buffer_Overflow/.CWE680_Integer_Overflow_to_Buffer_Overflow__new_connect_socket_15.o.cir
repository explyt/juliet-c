!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc269)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc270)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc271)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc272)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc273)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc274)
  cir.func private @close(!s32i) -> !s32i loc(#loc275)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc276)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc18)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc277)
  cir.func private @printIntLine(!s32i) loc(#loc278)
  cir.func @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc280)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc28)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc32)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc284)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc285)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc286)
            %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc287)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc41)
            %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc41)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc286)
            cir.scope {
              cir.do {
                cir.scope {
                  %10 = cir.const #cir.int<2> : !s32i loc(#loc48)
                  %11 = cir.const #cir.int<1> : !u32i loc(#loc49)
                  %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc49)
                  %13 = cir.const #cir.int<6> : !u32i loc(#loc50)
                  %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc50)
                  %15 = cir.call @socket(%10, %12, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
                  cir.store %15, %6 : !s32i, !cir.ptr<!s32i> loc(#loc290)
                  cir.scope {
                    %53 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc56)
                    %54 = cir.const #cir.int<1> : !s32i loc(#loc57)
                    %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc57)
                    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc292)
                    cir.if %56 {
                      cir.break loc(#loc59)
                    } loc(#loc293)
                  } loc(#loc291)
                  %16 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc294)
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc62)
                  %18 = cir.const #cir.int<16> : !u64i loc(#loc295)
                  cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc296)
                  %19 = cir.const #cir.int<2> : !s32i loc(#loc67)
                  %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc67)
                  %21 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
                  cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc297)
                  %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                  %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                  %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc70)
                  %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
                  %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
                  cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc298)
                  %27 = cir.const #cir.int<27015> : !s32i loc(#loc75)
                  %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc75)
                  %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc76)
                  %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
                  cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc299)
                  cir.scope {
                    %53 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc82)
                    %54 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc301)
                    %55 = cir.const #cir.int<16> : !u64i loc(#loc302)
                    %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc302)
                    %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc87)
                    %58 = cir.const #cir.int<1> : !s32i loc(#loc88)
                    %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc88)
                    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc303)
                    cir.if %60 {
                      cir.break loc(#loc90)
                    } loc(#loc304)
                  } loc(#loc300)
                  %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc91)
                  %32 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc92)
                  %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
                  %34 = cir.const #cir.int<3> : !s32i loc(#loc93)
                  %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc93)
                  %36 = cir.const #cir.int<4> : !u64i loc(#loc93)
                  %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc93)
                  %38 = cir.const #cir.int<2> : !s32i loc(#loc93)
                  %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc93)
                  %40 = cir.binop(add, %37, %39) : !u64i loc(#loc93)
                  %41 = cir.const #cir.int<1> : !s32i loc(#loc94)
                  %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc94)
                  %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc305)
                  %44 = cir.const #cir.int<0> : !s32i loc(#loc95)
                  %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc96)
                  %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc96)
                  cir.store %46, %4 : !s32i, !cir.ptr<!s32i> loc(#loc306)
                  cir.scope {
                    %53 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                    %54 = cir.const #cir.int<1> : !s32i loc(#loc102)
                    %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc102)
                    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc308)
                    %57 = cir.ternary(%56, true {
                      %58 = cir.const #true loc(#loc103)
                      cir.yield %58 : !cir.bool loc(#loc103)
                    }, false {
                      %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                      %59 = cir.const #cir.int<0> : !s32i loc(#loc105)
                      %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc309)
                      %61 = cir.ternary(%60, true {
                        %62 = cir.const #true loc(#loc103)
                        cir.yield %62 : !cir.bool loc(#loc103)
                      }, false {
                        %62 = cir.const #false loc(#loc103)
                        cir.yield %62 : !cir.bool loc(#loc103)
                      }) : (!cir.bool) -> !cir.bool loc(#loc103)
                      cir.yield %61 : !cir.bool loc(#loc103)
                    }) : (!cir.bool) -> !cir.bool loc(#loc103)
                    cir.if %57 {
                      cir.break loc(#loc107)
                    } loc(#loc310)
                  } loc(#loc307)
                  %47 = cir.const #cir.int<0> : !s8i loc(#loc108)
                  %48 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                  %49 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
                  %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc110)
                  cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc311)
                  %51 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
                  %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc112)
                  cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc312)
                } loc(#loc289)
                cir.yield loc(#loc45)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc115)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc115)
                cir.condition(%11) loc(#loc115)
              } loc(#loc288)
            } loc(#loc288)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc119)
              %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc119)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc314)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc122)
              } loc(#loc315)
            } loc(#loc313)
          } loc(#loc283)
          cir.break loc(#loc123)
        } loc(#loc33)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc18)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc18)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc125)
          cir.break loc(#loc126)
        } loc(#loc124)
        cir.yield loc(#loc30)
      } loc(#loc30)
    } loc(#loc282)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc317)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc318)
      %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc319)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc134)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc320)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc321)
      cir.store %9, %3 : !u64i, !cir.ptr<!u64i> loc(#loc322)
      %10 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc138)
      %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc139)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc323)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc323)
      cir.store %13, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc324)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc145)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc145)
        cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc326)
        cir.for : cond {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc147)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc148)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc327)
          cir.condition(%24) loc(#loc327)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc150)
            %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc151)
            %23 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc152)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc153)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc329)
          } loc(#loc328)
          cir.yield loc(#loc144)
        } step {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc154)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc155)
          cir.store %22, %4 : !u64i, !cir.ptr<!u64i> loc(#loc330)
          cir.yield loc(#loc325)
        } loc(#loc325)
      } loc(#loc325)
      %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc156)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc157)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc158)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc156)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc159)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc160)
      cir.delete.array %18 : <!s32i> loc(#loc160)
    } loc(#loc316)
    cir.return loc(#loc24)
  } loc(#loc279)
  cir.func internal private @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc332)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc166)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc333)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc170)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc172)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc172)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc173)
          cir.break loc(#loc174)
        } loc(#loc171)
        cir.case(default, []) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc176)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc335)
          cir.break loc(#loc178)
        } loc(#loc175)
        cir.yield loc(#loc168)
      } loc(#loc168)
    } loc(#loc334)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc337)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc338)
      %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc339)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc186)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc186)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc340)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc341)
      cir.store %9, %3 : !u64i, !cir.ptr<!u64i> loc(#loc342)
      %10 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc190)
      %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc191)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc343)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc343)
      cir.store %13, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc344)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc197)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc197)
        cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc346)
        cir.for : cond {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc199)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc200)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc200)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc347)
          cir.condition(%24) loc(#loc347)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc202)
            %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc203)
            %23 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc204)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc205)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc349)
          } loc(#loc348)
          cir.yield loc(#loc196)
        } step {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc206)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc207)
          cir.store %22, %4 : !u64i, !cir.ptr<!u64i> loc(#loc350)
          cir.yield loc(#loc345)
        } loc(#loc345)
      } loc(#loc345)
      %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc208)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc209)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc210)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc208)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc211)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc212)
      cir.delete.array %18 : <!s32i> loc(#loc212)
    } loc(#loc336)
    cir.return loc(#loc162)
  } loc(#loc331)
  cir.func internal private @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc352)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc217)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc218)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc353)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc222)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc224)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc355)
          cir.break loc(#loc226)
        } loc(#loc223)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc228)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc228)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc229)
          cir.break loc(#loc230)
        } loc(#loc227)
        cir.yield loc(#loc220)
      } loc(#loc220)
    } loc(#loc354)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc357)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc358)
      %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc359)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc238)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc238)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc360)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc361)
      cir.store %9, %3 : !u64i, !cir.ptr<!u64i> loc(#loc362)
      %10 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc242)
      %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc243)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc363)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc363)
      cir.store %13, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc364)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc249)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc249)
        cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc366)
        cir.for : cond {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc251)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc252)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc252)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc367)
          cir.condition(%24) loc(#loc367)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc254)
            %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc255)
            %23 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc256)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc257)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc369)
          } loc(#loc368)
          cir.yield loc(#loc248)
        } step {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc258)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc259)
          cir.store %22, %4 : !u64i, !cir.ptr<!u64i> loc(#loc370)
          cir.yield loc(#loc365)
        } loc(#loc365)
      } loc(#loc365)
      %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc260)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc261)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc262)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc260)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc263)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc264)
      cir.delete.array %18 : <!s32i> loc(#loc264)
    } loc(#loc356)
    cir.return loc(#loc214)
  } loc(#loc351)
  cir.func @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15L8goodG2B1Ev() : () -> () loc(#loc267)
    cir.call @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15L8goodG2B2Ev() : () -> () loc(#loc268)
    cir.return loc(#loc266)
  } loc(#loc371)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":80:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc17 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":113:19)
#loc19 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc20 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":46:1)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":129:1)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":48:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":48:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":50:13)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":50:12)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":50:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":51:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":115:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":51:12)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":53:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":54:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":109:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":59:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":59:13)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":60:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":60:28)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":61:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":61:32)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":62:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":62:41)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":63:9)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":98:17)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":64:9)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":97:9)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":73:36)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":73:45)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":73:58)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":73:29)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":73:13)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":73:69)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":74:13)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":77:13)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":74:17)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":74:34)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":75:13)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":76:17)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":78:20)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":78:21)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":78:30)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":78:33)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":78:47)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":78:13)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":78:48)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":79:34)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":79:13)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":80:39)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":80:13)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":80:59)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":81:38)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":81:32)
#loc77 = loc("/usr/include/netinet/in.h":250:15)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":81:13)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":81:46)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":82:13)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":85:13)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":82:25)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":82:58)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":82:59)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":82:68)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":82:82)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":82:17)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":82:88)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":83:13)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":84:17)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":88:31)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":88:46)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":88:59)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":88:77)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":88:80)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":88:26)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":88:13)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":88:81)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":89:13)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":92:13)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":89:17)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":89:31)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":89:44)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":89:47)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":89:61)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":90:13)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":91:17)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":94:39)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":94:25)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":94:13)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":96:25)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":96:20)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":96:13)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":96:36)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":98:16)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":99:9)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":102:9)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":99:13)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":99:30)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":100:9)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":101:26)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":101:13)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":110:5)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":111:5)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":113:9)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":114:9)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":116:5)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":128:5)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":117:9)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":117:16)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":117:26)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":118:9)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":118:14)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":120:21)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":120:28)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":120:38)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":120:9)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":121:37)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":46:6)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":121:28)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":121:46)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":121:9)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":122:9)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":125:9)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":122:18)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":122:14)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":122:21)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":122:33)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":123:9)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":124:29)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":124:13)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":124:24)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":124:25)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":122:40)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":122:39)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":126:22)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":126:33)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":126:34)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":126:9)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":127:19)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":136:1)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":165:1)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":138:5)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":138:9)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":140:13)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":140:12)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":140:5)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":141:5)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":151:5)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":141:12)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":143:5)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":145:19)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":145:9)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":146:9)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":147:5)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":149:16)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":149:9)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":150:9)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":152:5)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":164:5)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":153:9)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":153:16)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":153:26)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":154:9)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":154:14)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":156:21)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":156:28)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":156:38)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":156:9)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":157:37)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":136:13)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":157:28)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":157:46)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":157:9)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":158:9)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":161:9)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":158:18)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":158:14)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":158:21)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":158:33)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":159:9)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":160:29)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":160:13)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":160:24)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":160:25)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":158:40)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":158:39)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":162:22)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":162:33)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":162:34)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":162:9)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":163:19)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":168:1)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":197:1)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":170:5)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":170:9)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":172:13)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":172:12)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":172:5)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":173:5)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":183:5)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":173:12)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":175:5)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":177:16)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":177:9)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":178:9)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":179:5)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":181:19)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":181:9)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":182:9)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":184:5)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":196:5)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":185:9)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":185:16)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":185:26)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":186:9)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":186:14)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":188:21)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":188:28)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":188:38)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":188:9)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":189:37)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":168:13)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":189:28)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":189:46)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":189:9)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":190:9)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":193:9)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":190:18)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":190:14)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":190:21)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":190:33)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":191:9)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":192:29)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":192:13)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":192:24)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":192:25)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":190:40)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":190:39)
#loc260 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":194:22)
#loc261 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":194:33)
#loc262 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":194:34)
#loc263 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":194:9)
#loc264 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":195:19)
#loc265 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":199:1)
#loc266 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":203:1)
#loc267 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":201:5)
#loc268 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_15.cpp":202:5)
#loc269 = loc(fused[#loc1, #loc2])
#loc270 = loc(fused[#loc3, #loc4])
#loc271 = loc(fused[#loc6, #loc7])
#loc272 = loc(fused[#loc8, #loc9])
#loc273 = loc(fused[#loc10, #loc11])
#loc274 = loc(fused[#loc12, #loc13])
#loc275 = loc(fused[#loc14, #loc15])
#loc276 = loc(fused[#loc16, #loc17])
#loc277 = loc(fused[#loc19, #loc20])
#loc278 = loc(fused[#loc21, #loc22])
#loc279 = loc(fused[#loc23, #loc24])
#loc280 = loc(fused[#loc25, #loc26])
#loc281 = loc(fused[#loc29, #loc27])
#loc282 = loc(fused[#loc30, #loc31])
#loc283 = loc(fused[#loc34, #loc35])
#loc284 = loc(fused[#loc36, #loc37])
#loc285 = loc(fused[#loc38, #loc39])
#loc286 = loc(fused[#loc40, #loc41])
#loc287 = loc(fused[#loc42, #loc43])
#loc288 = loc(fused[#loc44, #loc45])
#loc289 = loc(fused[#loc46, #loc47])
#loc290 = loc(fused[#loc52, #loc53])
#loc291 = loc(fused[#loc54, #loc55])
#loc292 = loc(fused[#loc56, #loc57])
#loc293 = loc(fused[#loc58, #loc55])
#loc294 = loc(fused[#loc60, #loc61])
#loc295 = loc(fused[#loc63, #loc64])
#loc296 = loc(fused[#loc65, #loc66])
#loc297 = loc(fused[#loc69, #loc67])
#loc298 = loc(fused[#loc73, #loc74])
#loc299 = loc(fused[#loc78, #loc79])
#loc300 = loc(fused[#loc80, #loc81])
#loc301 = loc(fused[#loc83, #loc84])
#loc302 = loc(fused[#loc85, #loc86])
#loc303 = loc(fused[#loc87, #loc88])
#loc304 = loc(fused[#loc89, #loc81])
#loc305 = loc(fused[#loc93, #loc94])
#loc306 = loc(fused[#loc97, #loc98])
#loc307 = loc(fused[#loc99, #loc100])
#loc308 = loc(fused[#loc101, #loc102])
#loc309 = loc(fused[#loc104, #loc105])
#loc310 = loc(fused[#loc106, #loc100])
#loc311 = loc(fused[#loc110, #loc108])
#loc312 = loc(fused[#loc113, #loc114])
#loc313 = loc(fused[#loc116, #loc117])
#loc314 = loc(fused[#loc118, #loc119])
#loc315 = loc(fused[#loc120, #loc117])
#loc316 = loc(fused[#loc127, #loc128])
#loc317 = loc(fused[#loc129, #loc130])
#loc318 = loc(fused[#loc129, #loc131])
#loc319 = loc(fused[#loc132, #loc133])
#loc320 = loc(fused[#loc135, #loc136])
#loc321 = loc(fused[#loc134, #loc136])
#loc322 = loc(fused[#loc137, #loc136])
#loc323 = loc(fused[#loc140, #loc141])
#loc324 = loc(fused[#loc142, #loc141])
#loc325 = loc(fused[#loc143, #loc144])
#loc326 = loc(fused[#loc146, #loc145])
#loc327 = loc(fused[#loc147, #loc148])
#loc328 = loc(fused[#loc149, #loc144])
#loc329 = loc(fused[#loc151, #loc150])
#loc330 = loc(fused[#loc155, #loc154])
#loc331 = loc(fused[#loc161, #loc162])
#loc332 = loc(fused[#loc163, #loc164])
#loc333 = loc(fused[#loc167, #loc165])
#loc334 = loc(fused[#loc168, #loc169])
#loc335 = loc(fused[#loc177, #loc176])
#loc336 = loc(fused[#loc179, #loc180])
#loc337 = loc(fused[#loc181, #loc182])
#loc338 = loc(fused[#loc181, #loc183])
#loc339 = loc(fused[#loc184, #loc185])
#loc340 = loc(fused[#loc187, #loc188])
#loc341 = loc(fused[#loc186, #loc188])
#loc342 = loc(fused[#loc189, #loc188])
#loc343 = loc(fused[#loc192, #loc193])
#loc344 = loc(fused[#loc194, #loc193])
#loc345 = loc(fused[#loc195, #loc196])
#loc346 = loc(fused[#loc198, #loc197])
#loc347 = loc(fused[#loc199, #loc200])
#loc348 = loc(fused[#loc201, #loc196])
#loc349 = loc(fused[#loc203, #loc202])
#loc350 = loc(fused[#loc207, #loc206])
#loc351 = loc(fused[#loc213, #loc214])
#loc352 = loc(fused[#loc215, #loc216])
#loc353 = loc(fused[#loc219, #loc217])
#loc354 = loc(fused[#loc220, #loc221])
#loc355 = loc(fused[#loc225, #loc224])
#loc356 = loc(fused[#loc231, #loc232])
#loc357 = loc(fused[#loc233, #loc234])
#loc358 = loc(fused[#loc233, #loc235])
#loc359 = loc(fused[#loc236, #loc237])
#loc360 = loc(fused[#loc239, #loc240])
#loc361 = loc(fused[#loc238, #loc240])
#loc362 = loc(fused[#loc241, #loc240])
#loc363 = loc(fused[#loc244, #loc245])
#loc364 = loc(fused[#loc246, #loc245])
#loc365 = loc(fused[#loc247, #loc248])
#loc366 = loc(fused[#loc250, #loc249])
#loc367 = loc(fused[#loc251, #loc252])
#loc368 = loc(fused[#loc253, #loc248])
#loc369 = loc(fused[#loc255, #loc254])
#loc370 = loc(fused[#loc259, #loc258])
#loc371 = loc(fused[#loc265, #loc266])
