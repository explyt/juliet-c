!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":88:10)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":88:14)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":88:20)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":88:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc141 = loc(fused[#loc52, #loc53])
#loc142 = loc(fused[#loc54, #loc55])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc119)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc120)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_badData = #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> {alignment = 8 : i64} loc(#loc121)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc123)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc124)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc13)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc125)
    %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc13)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc126)
    cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc127)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc20)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
      %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc129)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc23)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc25)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc23)
      } loc(#loc130)
    } loc(#loc128)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
    %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc28)
    cir.store %6, %8 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc29)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    %11 = cir.get_member %10[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
    cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_badData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc121)
    cir.store %12, %13 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc133)
    %14 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call %14() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    cir.return loc(#loc8)
  } loc(#loc122)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    cir.return loc(#loc37)
  } loc(#loc135)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc137)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc138)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc49)
  cir.func @main(%arg0: !s32i loc(fused[#loc52, #loc53]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc54, #loc55])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc142)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc51)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc56)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc56)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc57)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc58)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc58)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc59)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc46)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_good() : () -> () loc(#loc61)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc47)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc48)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_bad() : () -> () loc(#loc65)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc49)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc68)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    cir.return %17 : !s32i loc(#loc145)
  } loc(#loc140)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc146)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc147)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_badData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc121)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc149)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc78)
    cir.call @printStructLine(%3) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc79)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc80)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc81)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc80)
    cir.return loc(#loc75)
  } loc(#loc148)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> {alignment = 8 : i64} loc(#loc150)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc153)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc90)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc154)
    %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc90)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc155)
    cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc156)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc97)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc98)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
      %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc158)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc100)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc101)
        %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc102)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc100)
      } loc(#loc159)
    } loc(#loc157)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
    %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc28)
    cir.store %6, %8 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc105)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
    %11 = cir.get_member %10[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
    cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_goodG2BData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc150)
    cir.store %12, %13 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc162)
    %14 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call %14() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc109)
    cir.return loc(#loc85)
  } loc(#loc151)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc165)
    %1 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45_goodG2BData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc150)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc165)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
    cir.call @printStructLine(%3) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc116)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc117)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc118)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc117)
    cir.return loc(#loc112)
  } loc(#loc164)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":19:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":19:24)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":32:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":45:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":34:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":34:21)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":36:12)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":36:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":39:29)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":39:36)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":39:47)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":39:48)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":39:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":40:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":40:33)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":40:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":40:17)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":40:23)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":40:24)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":40:30)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":40:29)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":41:20)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":41:5)
#loc28 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":42:20)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":42:5)
#loc31 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":43:67)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":43:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":44:5)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":44:13)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":74:1)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":77:1)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":76:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":76:13)
#loc40 = loc("/usr/include/stdlib.h":575:1)
#loc41 = loc("/usr/include/stdlib.h":575:41)
#loc42 = loc("/usr/include/time.h":76:1)
#loc43 = loc("/usr/include/time.h":76:38)
#loc44 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":93:15)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":95:15)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":98:15)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":100:15)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":88:1)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":103:1)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":89:1)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":91:27)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":91:22)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":91:5)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":93:5)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":94:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":94:62)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":95:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":98:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":99:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":99:61)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":100:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":102:12)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":102:5)
#loc70 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc71 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc72 = loc("/usr/include/stdlib.h":687:1)
#loc73 = loc("/usr/include/stdlib.h":687:32)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":24:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":30:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":26:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":26:28)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":28:21)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":28:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":29:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":29:10)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":20:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":20:24)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":60:1)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":72:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":62:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":62:21)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":64:12)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":64:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":66:29)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":66:36)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":66:48)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":66:49)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":66:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":67:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":67:33)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":67:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":67:17)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":67:23)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":67:24)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":67:30)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":67:29)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":68:20)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":68:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":69:20)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":69:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":70:71)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":70:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":71:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":71:17)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":52:1)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":58:1)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":54:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":54:28)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":56:21)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":56:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":57:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_45.c":57:10)
#loc119 = loc(fused[#loc1, #loc2])
#loc120 = loc(fused[#loc3, #loc4])
#loc121 = loc(fused[#loc5, #loc6])
#loc122 = loc(fused[#loc7, #loc8])
#loc123 = loc(fused[#loc9, #loc10])
#loc124 = loc(fused[#loc12, #loc11])
#loc125 = loc(fused[#loc14, #loc15])
#loc126 = loc(fused[#loc13, #loc16])
#loc127 = loc(fused[#loc17, #loc16])
#loc128 = loc(fused[#loc18, #loc19])
#loc129 = loc(fused[#loc20, #loc21])
#loc130 = loc(fused[#loc22, #loc19])
#loc131 = loc(fused[#loc27, #loc26])
#loc132 = loc(fused[#loc30, #loc29])
#loc133 = loc(fused[#loc33, #loc32])
#loc134 = loc(fused[#loc34, #loc35])
#loc135 = loc(fused[#loc36, #loc37])
#loc136 = loc(fused[#loc38, #loc39])
#loc137 = loc(fused[#loc40, #loc41])
#loc138 = loc(fused[#loc42, #loc43])
#loc139 = loc(fused[#loc44, #loc45])
#loc140 = loc(fused[#loc50, #loc51])
#loc143 = loc(fused[#loc61, #loc62])
#loc144 = loc(fused[#loc65, #loc66])
#loc145 = loc(fused[#loc69, #loc68])
#loc146 = loc(fused[#loc70, #loc71])
#loc147 = loc(fused[#loc72, #loc73])
#loc148 = loc(fused[#loc74, #loc75])
#loc149 = loc(fused[#loc76, #loc77])
#loc150 = loc(fused[#loc82, #loc83])
#loc151 = loc(fused[#loc84, #loc85])
#loc152 = loc(fused[#loc86, #loc87])
#loc153 = loc(fused[#loc89, #loc88])
#loc154 = loc(fused[#loc91, #loc92])
#loc155 = loc(fused[#loc90, #loc93])
#loc156 = loc(fused[#loc94, #loc93])
#loc157 = loc(fused[#loc95, #loc96])
#loc158 = loc(fused[#loc97, #loc98])
#loc159 = loc(fused[#loc99, #loc96])
#loc160 = loc(fused[#loc104, #loc103])
#loc161 = loc(fused[#loc106, #loc105])
#loc162 = loc(fused[#loc108, #loc107])
#loc163 = loc(fused[#loc109, #loc110])
#loc164 = loc(fused[#loc111, #loc112])
#loc165 = loc(fused[#loc113, #loc114])
