!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty_timespec = !cir.struct<struct "timespec" {!s64i, !s64i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_stat = !cir.struct<struct "stat" {!u64i, !u64i, !u64i, !u32i, !u32i, !u32i, !s32i, !u64i, !s64i, !s64i, !s64i, !ty_timespec, !ty_timespec, !ty_timespec, !cir.array<!s64i x 3>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc258)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc259)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc260)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc261)
  cir.func private @stat(!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc262)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc263)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc264)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc265)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc266)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto @CWE367_TOC_TOU__stat_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc268)
    %1 = cir.alloca !ty_stat, !cir.ptr<!ty_stat>, ["statBuffer"] {alignment = 8 : i64} loc(#loc269)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc270)
    cir.br ^bb1 loc(#loc271)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc32)
    cir.br ^bb2 loc(#loc30)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb31 [
      6: ^bb4
    ] loc(#loc30)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc33)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc272)
  ^bb5:  // pred: ^bb4
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc268)
    cir.store %4, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc268)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc36)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    cir.br ^bb6 loc(#loc273)
  ^bb6:  // pred: ^bb5
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc40)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc259)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
    %11 = cir.call @fgets(%7, %8, %10) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc42)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc43)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc274)
    cir.brcond %14 ^bb7, ^bb8 loc(#loc275)
  ^bb7:  // pred: ^bb6
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc46)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc48)
    cir.store %18, %21 : !s8i, !cir.ptr<!s8i> loc(#loc276)
    cir.br ^bb8 loc(#loc38)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc38)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc277)
  ^bb10:  // pred: ^bb9
    %22 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc51)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc52)
    %24 = cir.call @strlen(%23) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc51)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc53)
    %27 = cir.cmp(gt, %24, %26) : !u64i, !cir.bool loc(#loc278)
    cir.brcond %27 ^bb11, ^bb12 loc(#loc279)
  ^bb11:  // pred: ^bb10
    %28 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc55)
    %30 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc56)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
    %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc56)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc58)
    %35 = cir.binop(sub, %32, %34) : !u64i loc(#loc280)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc59)
    cir.store %29, %37 : !s8i, !cir.ptr<!s8i> loc(#loc281)
    cir.br ^bb12 loc(#loc50)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc50)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc282)
  ^bb14:  // pred: ^bb13
    %38 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
    %39 = cir.call @stat(%38, %1) : (!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc63)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %41 = cir.unary(minus, %40) : !s32i, !s32i loc(#loc65)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc283)
    cir.brcond %42 ^bb15, ^bb16 loc(#loc284)
  ^bb15:  // pred: ^bb14
    %43 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc67)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc68)
    cir.call @exit(%44) : (!s32i) -> () extra(#fn_attr) loc(#loc67)
    cir.br ^bb16 loc(#loc61)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc61)
  ^bb17:  // pred: ^bb16
    %45 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
    %46 = cir.const #cir.int<2> : !s32i loc(#loc70)
    %47 = cir.call @open(%45, %46) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc71)
    cir.store %47, %2 : !s32i, !cir.ptr<!s32i> loc(#loc285)
    cir.br ^bb18 loc(#loc286)
  ^bb18:  // pred: ^bb17
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %50 = cir.unary(minus, %49) : !s32i, !s32i loc(#loc78)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc287)
    cir.brcond %51 ^bb19, ^bb20 loc(#loc288)
  ^bb19:  // pred: ^bb18
    %52 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc80)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc81)
    cir.call @exit(%53) : (!s32i) -> () extra(#fn_attr) loc(#loc80)
    cir.br ^bb20 loc(#loc75)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc75)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc289)
  ^bb22:  // pred: ^bb21
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %55 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
    %56 = cir.cast(array_to_ptrdecay, %55 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
    %57 = cir.cast(bitcast, %56 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
    %58 = cir.const #cir.int<11> : !u64i loc(#loc290)
    %59 = cir.call @write(%54, %57, %58) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc87)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc89)
    %62 = cir.cast(integral, %61 : !s32i), !s64i loc(#loc89)
    %63 = cir.cmp(eq, %59, %62) : !s64i, !cir.bool loc(#loc291)
    cir.brcond %63 ^bb23, ^bb24 loc(#loc292)
  ^bb23:  // pred: ^bb22
    %64 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc91)
    %65 = cir.const #cir.int<1> : !s32i loc(#loc92)
    cir.call @exit(%65) : (!s32i) -> () extra(#fn_attr) loc(#loc91)
    cir.br ^bb24 loc(#loc83)
  ^bb24:  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc83)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc293)
  ^bb26:  // pred: ^bb25
    %66 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %67 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %68 = cir.unary(minus, %67) : !s32i, !s32i loc(#loc97)
    %69 = cir.cmp(ne, %66, %68) : !s32i, !cir.bool loc(#loc294)
    cir.brcond %69 ^bb27, ^bb28 loc(#loc295)
  ^bb27:  // pred: ^bb26
    %70 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %71 = cir.call @close(%70) : (!s32i) -> !s32i loc(#loc100)
    cir.br ^bb28 loc(#loc94)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc94)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc35)
  ^bb30:  // pred: ^bb29
    cir.br ^bb32 loc(#loc101)
  ^bb31:  // pred: ^bb2
    %72 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc21)
    %73 = cir.cast(array_to_ptrdecay, %72 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc21)
    cir.call @printLine(%73) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    cir.br ^bb32 loc(#loc103)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc31)
  ^bb33:  // pred: ^bb32
    cir.return loc(#loc23)
  } loc(#loc267)
  cir.func no_proto @CWE367_TOC_TOU__stat_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc297)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc106)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc298)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc108)
    cir.return loc(#loc105)
  } loc(#loc296)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc110)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc300)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc301)
    cir.br ^bb1 loc(#loc302)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc119)
    cir.br ^bb2 loc(#loc117)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc117)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc120)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %3 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc121)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    cir.br ^bb28 loc(#loc123)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc303)
  ^bb6:  // pred: ^bb5
    %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc300)
    cir.store %5, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc300)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc126)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc301)
    cir.br ^bb7 loc(#loc304)
  ^bb7:  // pred: ^bb6
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc129)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc130)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc259)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc131)
    %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc132)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc133)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc133)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc305)
    cir.brcond %15 ^bb8, ^bb9 loc(#loc306)
  ^bb8:  // pred: ^bb7
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc135)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc135)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc137)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc137)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc139)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc139)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc307)
    cir.br ^bb9 loc(#loc128)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc128)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc308)
  ^bb11:  // pred: ^bb10
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc142)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc143)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc142)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc144)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc144)
    %28 = cir.cmp(gt, %25, %27) : !u64i, !cir.bool loc(#loc309)
    cir.brcond %28 ^bb12, ^bb13 loc(#loc310)
  ^bb12:  // pred: ^bb11
    %29 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc146)
    %31 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc147)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc148)
    %33 = cir.call @strlen(%32) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc147)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc149)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc149)
    %36 = cir.binop(sub, %33, %35) : !u64i loc(#loc311)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc150)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc150)
    cir.store %30, %38 : !s8i, !cir.ptr<!s8i> loc(#loc312)
    cir.br ^bb13 loc(#loc141)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc141)
  ^bb14:  // pred: ^bb13
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc151)
    %40 = cir.const #cir.int<2> : !s32i loc(#loc152)
    %41 = cir.call @open(%39, %40) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc153)
    cir.store %41, %1 : !s32i, !cir.ptr<!s32i> loc(#loc313)
    cir.br ^bb15 loc(#loc314)
  ^bb15:  // pred: ^bb14
    %42 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc160)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc315)
    cir.brcond %45 ^bb16, ^bb17 loc(#loc316)
  ^bb16:  // pred: ^bb15
    %46 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc162)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc163)
    cir.call @exit(%47) : (!s32i) -> () extra(#fn_attr) loc(#loc162)
    cir.br ^bb17 loc(#loc157)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc157)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc317)
  ^bb19:  // pred: ^bb18
    %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %49 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc110)
    %50 = cir.cast(array_to_ptrdecay, %49 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc110)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
    %52 = cir.const #cir.int<12> : !u64i loc(#loc318)
    %53 = cir.call @write(%48, %51, %52) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc169)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc170)
    %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc171)
    %56 = cir.cast(integral, %55 : !s32i), !s64i loc(#loc171)
    %57 = cir.cmp(eq, %53, %56) : !s64i, !cir.bool loc(#loc319)
    cir.brcond %57 ^bb20, ^bb21 loc(#loc320)
  ^bb20:  // pred: ^bb19
    %58 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc173)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc174)
    cir.call @exit(%59) : (!s32i) -> () extra(#fn_attr) loc(#loc173)
    cir.br ^bb21 loc(#loc165)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc165)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc321)
  ^bb23:  // pred: ^bb22
    %60 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc177)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc178)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc179)
    %63 = cir.cmp(ne, %60, %62) : !s32i, !cir.bool loc(#loc322)
    cir.brcond %63 ^bb24, ^bb25 loc(#loc323)
  ^bb24:  // pred: ^bb23
    %64 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    %65 = cir.call @close(%64) : (!s32i) -> !s32i loc(#loc182)
    cir.br ^bb25 loc(#loc176)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc176)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc125)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc183)
  ^bb28:  // 2 preds: ^bb4, ^bb27
    cir.br ^bb29 loc(#loc118)
  ^bb29:  // pred: ^bb28
    cir.return loc(#loc112)
  } loc(#loc299)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc325)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc326)
    cir.br ^bb1 loc(#loc327)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc192)
    cir.br ^bb2 loc(#loc190)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb27 [
      6: ^bb4
    ] loc(#loc190)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc193)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc328)
  ^bb5:  // pred: ^bb4
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc325)
    cir.store %3, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc325)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc189)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc196)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc326)
    cir.br ^bb6 loc(#loc329)
  ^bb6:  // pred: ^bb5
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc199)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc200)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc259)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc201)
    %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc202)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc203)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc203)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc330)
    cir.brcond %13 ^bb7, ^bb8 loc(#loc331)
  ^bb7:  // pred: ^bb6
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc205)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc205)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc206)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc207)
    %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc207)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc208)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc209)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc209)
    cir.store %17, %20 : !s8i, !cir.ptr<!s8i> loc(#loc332)
    cir.br ^bb8 loc(#loc198)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc198)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc333)
  ^bb10:  // pred: ^bb9
    %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc212)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc213)
    %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc212)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc214)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc214)
    %26 = cir.cmp(gt, %23, %25) : !u64i, !cir.bool loc(#loc334)
    cir.brcond %26 ^bb11, ^bb12 loc(#loc335)
  ^bb11:  // pred: ^bb10
    %27 = cir.const #cir.int<0> : !s32i loc(#loc216)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc216)
    %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc217)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc218)
    %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc217)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc219)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc219)
    %34 = cir.binop(sub, %31, %33) : !u64i loc(#loc336)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc220)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc220)
    cir.store %28, %36 : !s8i, !cir.ptr<!s8i> loc(#loc337)
    cir.br ^bb12 loc(#loc211)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc211)
  ^bb13:  // pred: ^bb12
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc221)
    %38 = cir.const #cir.int<2> : !s32i loc(#loc222)
    %39 = cir.call @open(%37, %38) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc223)
    cir.store %39, %1 : !s32i, !cir.ptr<!s32i> loc(#loc338)
    cir.br ^bb14 loc(#loc339)
  ^bb14:  // pred: ^bb13
    %40 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc228)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc229)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc230)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc340)
    cir.brcond %43 ^bb15, ^bb16 loc(#loc341)
  ^bb15:  // pred: ^bb14
    %44 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc232)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc233)
    cir.call @exit(%45) : (!s32i) -> () extra(#fn_attr) loc(#loc232)
    cir.br ^bb16 loc(#loc227)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc227)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc342)
  ^bb18:  // pred: ^bb17
    %46 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc236)
    %47 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc237)
    %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc237)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc237)
    %50 = cir.const #cir.int<12> : !u64i loc(#loc343)
    %51 = cir.call @write(%46, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc240)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc241)
    %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc242)
    %54 = cir.cast(integral, %53 : !s32i), !s64i loc(#loc242)
    %55 = cir.cmp(eq, %51, %54) : !s64i, !cir.bool loc(#loc344)
    cir.brcond %55 ^bb19, ^bb20 loc(#loc345)
  ^bb19:  // pred: ^bb18
    %56 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc244)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc245)
    cir.call @exit(%57) : (!s32i) -> () extra(#fn_attr) loc(#loc244)
    cir.br ^bb20 loc(#loc235)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc235)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc346)
  ^bb22:  // pred: ^bb21
    %58 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc248)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc249)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc250)
    %61 = cir.cmp(ne, %58, %60) : !s32i, !cir.bool loc(#loc347)
    cir.brcond %61 ^bb23, ^bb24 loc(#loc348)
  ^bb23:  // pred: ^bb22
    %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    %63 = cir.call @close(%62) : (!s32i) -> !s32i loc(#loc253)
    cir.br ^bb24 loc(#loc247)
  ^bb24:  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc247)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc195)
  ^bb26:  // pred: ^bb25
    cir.br ^bb28 loc(#loc254)
  ^bb27:  // pred: ^bb2
    %64 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc255)
    %65 = cir.cast(array_to_ptrdecay, %64 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc255)
    cir.call @printLine(%65) : (!cir.ptr<!s8i>) -> () loc(#loc256)
    cir.br ^bb28 loc(#loc257)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc191)
  ^bb29:  // pred: ^bb28
    cir.return loc(#loc185)
  } loc(#loc324)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__stat_15.c":48:23)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/sys/stat.h":205:1)
#loc11 = loc("/usr/include/sys/stat.h":206:43)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__stat_15.c":66:29)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__stat_15.c":78:19)
#loc22 = loc("CWE367_TOC_TOU__stat_15.c":37:1)
#loc23 = loc("CWE367_TOC_TOU__stat_15.c":81:1)
#loc24 = loc("CWE367_TOC_TOU__stat_15.c":43:9)
#loc25 = loc("CWE367_TOC_TOU__stat_15.c":43:30)
#loc26 = loc("CWE367_TOC_TOU__stat_15.c":44:9)
#loc27 = loc("CWE367_TOC_TOU__stat_15.c":44:21)
#loc28 = loc("CWE367_TOC_TOU__stat_15.c":45:9)
#loc29 = loc("CWE367_TOC_TOU__stat_15.c":45:25)
#loc30 = loc("CWE367_TOC_TOU__stat_15.c":39:5)
#loc31 = loc("CWE367_TOC_TOU__stat_15.c":80:5)
#loc32 = loc("CWE367_TOC_TOU__stat_15.c":39:12)
#loc33 = loc("CWE367_TOC_TOU__stat_15.c":41:5)
#loc34 = loc("CWE367_TOC_TOU__stat_15.c":42:5)
#loc35 = loc("CWE367_TOC_TOU__stat_15.c":74:5)
#loc36 = loc("CWE367_TOC_TOU__stat_15.c":45:24)
#loc37 = loc("CWE367_TOC_TOU__stat_15.c":46:9)
#loc38 = loc("CWE367_TOC_TOU__stat_15.c":51:9)
#loc39 = loc("CWE367_TOC_TOU__stat_15.c":46:19)
#loc40 = loc("CWE367_TOC_TOU__stat_15.c":46:29)
#loc41 = loc("CWE367_TOC_TOU__stat_15.c":46:34)
#loc42 = loc("CWE367_TOC_TOU__stat_15.c":46:13)
#loc43 = loc("CWE367_TOC_TOU__stat_15.c":46:44)
#loc44 = loc("CWE367_TOC_TOU__stat_15.c":47:9)
#loc45 = loc("CWE367_TOC_TOU__stat_15.c":48:13)
#loc46 = loc("CWE367_TOC_TOU__stat_15.c":50:27)
#loc47 = loc("CWE367_TOC_TOU__stat_15.c":50:22)
#loc48 = loc("CWE367_TOC_TOU__stat_15.c":50:13)
#loc49 = loc("CWE367_TOC_TOU__stat_15.c":52:9)
#loc50 = loc("CWE367_TOC_TOU__stat_15.c":55:9)
#loc51 = loc("CWE367_TOC_TOU__stat_15.c":52:13)
#loc52 = loc("CWE367_TOC_TOU__stat_15.c":52:20)
#loc53 = loc("CWE367_TOC_TOU__stat_15.c":52:32)
#loc54 = loc("CWE367_TOC_TOU__stat_15.c":53:9)
#loc55 = loc("CWE367_TOC_TOU__stat_15.c":54:44)
#loc56 = loc("CWE367_TOC_TOU__stat_15.c":54:22)
#loc57 = loc("CWE367_TOC_TOU__stat_15.c":54:29)
#loc58 = loc("CWE367_TOC_TOU__stat_15.c":54:39)
#loc59 = loc("CWE367_TOC_TOU__stat_15.c":54:13)
#loc60 = loc("CWE367_TOC_TOU__stat_15.c":57:9)
#loc61 = loc("CWE367_TOC_TOU__stat_15.c":60:9)
#loc62 = loc("CWE367_TOC_TOU__stat_15.c":57:18)
#loc63 = loc("CWE367_TOC_TOU__stat_15.c":57:13)
#loc64 = loc("CWE367_TOC_TOU__stat_15.c":57:45)
#loc65 = loc("CWE367_TOC_TOU__stat_15.c":57:44)
#loc66 = loc("CWE367_TOC_TOU__stat_15.c":58:9)
#loc67 = loc("CWE367_TOC_TOU__stat_15.c":59:13)
#loc68 = loc("CWE367_TOC_TOU__stat_15.c":59:18)
#loc69 = loc("CWE367_TOC_TOU__stat_15.c":61:26)
#loc70 = loc("CWE367_TOC_TOU__stat_15.c":61:36)
#loc71 = loc("CWE367_TOC_TOU__stat_15.c":61:21)
#loc72 = loc("CWE367_TOC_TOU__stat_15.c":61:9)
#loc73 = loc("CWE367_TOC_TOU__stat_15.c":61:42)
#loc74 = loc("CWE367_TOC_TOU__stat_15.c":62:9)
#loc75 = loc("CWE367_TOC_TOU__stat_15.c":65:9)
#loc76 = loc("CWE367_TOC_TOU__stat_15.c":62:13)
#loc77 = loc("CWE367_TOC_TOU__stat_15.c":62:26)
#loc78 = loc("CWE367_TOC_TOU__stat_15.c":62:25)
#loc79 = loc("CWE367_TOC_TOU__stat_15.c":63:9)
#loc80 = loc("CWE367_TOC_TOU__stat_15.c":64:13)
#loc81 = loc("CWE367_TOC_TOU__stat_15.c":64:18)
#loc82 = loc("CWE367_TOC_TOU__stat_15.c":66:9)
#loc83 = loc("CWE367_TOC_TOU__stat_15.c":69:9)
#loc84 = loc("CWE367_TOC_TOU__stat_15.c":66:19)
#loc85 = loc("CWE367_TOC_TOU__stat_15.c":66:46)
#loc86 = loc("CWE367_TOC_TOU__stat_15.c":66:68)
#loc87 = loc("CWE367_TOC_TOU__stat_15.c":66:13)
#loc88 = loc("CWE367_TOC_TOU__stat_15.c":66:75)
#loc89 = loc("CWE367_TOC_TOU__stat_15.c":66:74)
#loc90 = loc("CWE367_TOC_TOU__stat_15.c":67:9)
#loc91 = loc("CWE367_TOC_TOU__stat_15.c":68:13)
#loc92 = loc("CWE367_TOC_TOU__stat_15.c":68:18)
#loc93 = loc("CWE367_TOC_TOU__stat_15.c":70:9)
#loc94 = loc("CWE367_TOC_TOU__stat_15.c":73:9)
#loc95 = loc("CWE367_TOC_TOU__stat_15.c":70:13)
#loc96 = loc("CWE367_TOC_TOU__stat_15.c":70:26)
#loc97 = loc("CWE367_TOC_TOU__stat_15.c":70:25)
#loc98 = loc("CWE367_TOC_TOU__stat_15.c":71:9)
#loc99 = loc("CWE367_TOC_TOU__stat_15.c":72:19)
#loc100 = loc("CWE367_TOC_TOU__stat_15.c":72:13)
#loc101 = loc("CWE367_TOC_TOU__stat_15.c":75:5)
#loc102 = loc("CWE367_TOC_TOU__stat_15.c":78:9)
#loc103 = loc("CWE367_TOC_TOU__stat_15.c":79:9)
#loc104 = loc("CWE367_TOC_TOU__stat_15.c":171:1)
#loc105 = loc("CWE367_TOC_TOU__stat_15.c":175:1)
#loc106 = loc("CWE367_TOC_TOU__stat_15.c":173:5)
#loc107 = loc("CWE367_TOC_TOU__stat_15.c":173:11)
#loc108 = loc("CWE367_TOC_TOU__stat_15.c":174:5)
#loc109 = loc("CWE367_TOC_TOU__stat_15.c":174:11)
#loc110 = loc("CWE367_TOC_TOU__stat_15.c":116:29)
#loc111 = loc("CWE367_TOC_TOU__stat_15.c":88:1)
#loc112 = loc("CWE367_TOC_TOU__stat_15.c":127:1)
#loc113 = loc("CWE367_TOC_TOU__stat_15.c":98:9)
#loc114 = loc("CWE367_TOC_TOU__stat_15.c":98:30)
#loc115 = loc("CWE367_TOC_TOU__stat_15.c":99:9)
#loc116 = loc("CWE367_TOC_TOU__stat_15.c":99:25)
#loc117 = loc("CWE367_TOC_TOU__stat_15.c":90:5)
#loc118 = loc("CWE367_TOC_TOU__stat_15.c":126:5)
#loc119 = loc("CWE367_TOC_TOU__stat_15.c":90:12)
#loc120 = loc("CWE367_TOC_TOU__stat_15.c":92:5)
#loc121 = loc("CWE367_TOC_TOU__stat_15.c":94:19)
#loc122 = loc("CWE367_TOC_TOU__stat_15.c":94:9)
#loc123 = loc("CWE367_TOC_TOU__stat_15.c":95:9)
#loc124 = loc("CWE367_TOC_TOU__stat_15.c":97:5)
#loc125 = loc("CWE367_TOC_TOU__stat_15.c":124:5)
#loc126 = loc("CWE367_TOC_TOU__stat_15.c":99:24)
#loc127 = loc("CWE367_TOC_TOU__stat_15.c":100:9)
#loc128 = loc("CWE367_TOC_TOU__stat_15.c":105:9)
#loc129 = loc("CWE367_TOC_TOU__stat_15.c":100:19)
#loc130 = loc("CWE367_TOC_TOU__stat_15.c":100:29)
#loc131 = loc("CWE367_TOC_TOU__stat_15.c":100:34)
#loc132 = loc("CWE367_TOC_TOU__stat_15.c":100:13)
#loc133 = loc("CWE367_TOC_TOU__stat_15.c":100:44)
#loc134 = loc("CWE367_TOC_TOU__stat_15.c":101:9)
#loc135 = loc("CWE367_TOC_TOU__stat_15.c":102:23)
#loc136 = loc("CWE367_TOC_TOU__stat_15.c":102:13)
#loc137 = loc("CWE367_TOC_TOU__stat_15.c":104:27)
#loc138 = loc("CWE367_TOC_TOU__stat_15.c":104:22)
#loc139 = loc("CWE367_TOC_TOU__stat_15.c":104:13)
#loc140 = loc("CWE367_TOC_TOU__stat_15.c":106:9)
#loc141 = loc("CWE367_TOC_TOU__stat_15.c":109:9)
#loc142 = loc("CWE367_TOC_TOU__stat_15.c":106:13)
#loc143 = loc("CWE367_TOC_TOU__stat_15.c":106:20)
#loc144 = loc("CWE367_TOC_TOU__stat_15.c":106:32)
#loc145 = loc("CWE367_TOC_TOU__stat_15.c":107:9)
#loc146 = loc("CWE367_TOC_TOU__stat_15.c":108:44)
#loc147 = loc("CWE367_TOC_TOU__stat_15.c":108:22)
#loc148 = loc("CWE367_TOC_TOU__stat_15.c":108:29)
#loc149 = loc("CWE367_TOC_TOU__stat_15.c":108:39)
#loc150 = loc("CWE367_TOC_TOU__stat_15.c":108:13)
#loc151 = loc("CWE367_TOC_TOU__stat_15.c":111:26)
#loc152 = loc("CWE367_TOC_TOU__stat_15.c":111:36)
#loc153 = loc("CWE367_TOC_TOU__stat_15.c":111:21)
#loc154 = loc("CWE367_TOC_TOU__stat_15.c":111:9)
#loc155 = loc("CWE367_TOC_TOU__stat_15.c":111:42)
#loc156 = loc("CWE367_TOC_TOU__stat_15.c":112:9)
#loc157 = loc("CWE367_TOC_TOU__stat_15.c":115:9)
#loc158 = loc("CWE367_TOC_TOU__stat_15.c":112:13)
#loc159 = loc("CWE367_TOC_TOU__stat_15.c":112:26)
#loc160 = loc("CWE367_TOC_TOU__stat_15.c":112:25)
#loc161 = loc("CWE367_TOC_TOU__stat_15.c":113:9)
#loc162 = loc("CWE367_TOC_TOU__stat_15.c":114:13)
#loc163 = loc("CWE367_TOC_TOU__stat_15.c":114:18)
#loc164 = loc("CWE367_TOC_TOU__stat_15.c":116:9)
#loc165 = loc("CWE367_TOC_TOU__stat_15.c":119:9)
#loc166 = loc("CWE367_TOC_TOU__stat_15.c":116:19)
#loc167 = loc("CWE367_TOC_TOU__stat_15.c":116:47)
#loc168 = loc("CWE367_TOC_TOU__stat_15.c":116:70)
#loc169 = loc("CWE367_TOC_TOU__stat_15.c":116:13)
#loc170 = loc("CWE367_TOC_TOU__stat_15.c":116:77)
#loc171 = loc("CWE367_TOC_TOU__stat_15.c":116:76)
#loc172 = loc("CWE367_TOC_TOU__stat_15.c":117:9)
#loc173 = loc("CWE367_TOC_TOU__stat_15.c":118:13)
#loc174 = loc("CWE367_TOC_TOU__stat_15.c":118:18)
#loc175 = loc("CWE367_TOC_TOU__stat_15.c":120:9)
#loc176 = loc("CWE367_TOC_TOU__stat_15.c":123:9)
#loc177 = loc("CWE367_TOC_TOU__stat_15.c":120:13)
#loc178 = loc("CWE367_TOC_TOU__stat_15.c":120:26)
#loc179 = loc("CWE367_TOC_TOU__stat_15.c":120:25)
#loc180 = loc("CWE367_TOC_TOU__stat_15.c":121:9)
#loc181 = loc("CWE367_TOC_TOU__stat_15.c":122:19)
#loc182 = loc("CWE367_TOC_TOU__stat_15.c":122:13)
#loc183 = loc("CWE367_TOC_TOU__stat_15.c":125:5)
#loc184 = loc("CWE367_TOC_TOU__stat_15.c":130:1)
#loc185 = loc("CWE367_TOC_TOU__stat_15.c":169:1)
#loc186 = loc("CWE367_TOC_TOU__stat_15.c":136:9)
#loc187 = loc("CWE367_TOC_TOU__stat_15.c":136:30)
#loc188 = loc("CWE367_TOC_TOU__stat_15.c":137:9)
#loc189 = loc("CWE367_TOC_TOU__stat_15.c":137:25)
#loc190 = loc("CWE367_TOC_TOU__stat_15.c":132:5)
#loc191 = loc("CWE367_TOC_TOU__stat_15.c":168:5)
#loc192 = loc("CWE367_TOC_TOU__stat_15.c":132:12)
#loc193 = loc("CWE367_TOC_TOU__stat_15.c":134:5)
#loc194 = loc("CWE367_TOC_TOU__stat_15.c":135:5)
#loc195 = loc("CWE367_TOC_TOU__stat_15.c":162:5)
#loc196 = loc("CWE367_TOC_TOU__stat_15.c":137:24)
#loc197 = loc("CWE367_TOC_TOU__stat_15.c":138:9)
#loc198 = loc("CWE367_TOC_TOU__stat_15.c":143:9)
#loc199 = loc("CWE367_TOC_TOU__stat_15.c":138:19)
#loc200 = loc("CWE367_TOC_TOU__stat_15.c":138:29)
#loc201 = loc("CWE367_TOC_TOU__stat_15.c":138:34)
#loc202 = loc("CWE367_TOC_TOU__stat_15.c":138:13)
#loc203 = loc("CWE367_TOC_TOU__stat_15.c":138:44)
#loc204 = loc("CWE367_TOC_TOU__stat_15.c":139:9)
#loc205 = loc("CWE367_TOC_TOU__stat_15.c":140:23)
#loc206 = loc("CWE367_TOC_TOU__stat_15.c":140:13)
#loc207 = loc("CWE367_TOC_TOU__stat_15.c":142:27)
#loc208 = loc("CWE367_TOC_TOU__stat_15.c":142:22)
#loc209 = loc("CWE367_TOC_TOU__stat_15.c":142:13)
#loc210 = loc("CWE367_TOC_TOU__stat_15.c":144:9)
#loc211 = loc("CWE367_TOC_TOU__stat_15.c":147:9)
#loc212 = loc("CWE367_TOC_TOU__stat_15.c":144:13)
#loc213 = loc("CWE367_TOC_TOU__stat_15.c":144:20)
#loc214 = loc("CWE367_TOC_TOU__stat_15.c":144:32)
#loc215 = loc("CWE367_TOC_TOU__stat_15.c":145:9)
#loc216 = loc("CWE367_TOC_TOU__stat_15.c":146:44)
#loc217 = loc("CWE367_TOC_TOU__stat_15.c":146:22)
#loc218 = loc("CWE367_TOC_TOU__stat_15.c":146:29)
#loc219 = loc("CWE367_TOC_TOU__stat_15.c":146:39)
#loc220 = loc("CWE367_TOC_TOU__stat_15.c":146:13)
#loc221 = loc("CWE367_TOC_TOU__stat_15.c":149:26)
#loc222 = loc("CWE367_TOC_TOU__stat_15.c":149:36)
#loc223 = loc("CWE367_TOC_TOU__stat_15.c":149:21)
#loc224 = loc("CWE367_TOC_TOU__stat_15.c":149:9)
#loc225 = loc("CWE367_TOC_TOU__stat_15.c":149:42)
#loc226 = loc("CWE367_TOC_TOU__stat_15.c":150:9)
#loc227 = loc("CWE367_TOC_TOU__stat_15.c":153:9)
#loc228 = loc("CWE367_TOC_TOU__stat_15.c":150:13)
#loc229 = loc("CWE367_TOC_TOU__stat_15.c":150:26)
#loc230 = loc("CWE367_TOC_TOU__stat_15.c":150:25)
#loc231 = loc("CWE367_TOC_TOU__stat_15.c":151:9)
#loc232 = loc("CWE367_TOC_TOU__stat_15.c":152:13)
#loc233 = loc("CWE367_TOC_TOU__stat_15.c":152:18)
#loc234 = loc("CWE367_TOC_TOU__stat_15.c":154:9)
#loc235 = loc("CWE367_TOC_TOU__stat_15.c":157:9)
#loc236 = loc("CWE367_TOC_TOU__stat_15.c":154:19)
#loc237 = loc("CWE367_TOC_TOU__stat_15.c":154:29)
#loc238 = loc("CWE367_TOC_TOU__stat_15.c":154:47)
#loc239 = loc("CWE367_TOC_TOU__stat_15.c":154:70)
#loc240 = loc("CWE367_TOC_TOU__stat_15.c":154:13)
#loc241 = loc("CWE367_TOC_TOU__stat_15.c":154:77)
#loc242 = loc("CWE367_TOC_TOU__stat_15.c":154:76)
#loc243 = loc("CWE367_TOC_TOU__stat_15.c":155:9)
#loc244 = loc("CWE367_TOC_TOU__stat_15.c":156:13)
#loc245 = loc("CWE367_TOC_TOU__stat_15.c":156:18)
#loc246 = loc("CWE367_TOC_TOU__stat_15.c":158:9)
#loc247 = loc("CWE367_TOC_TOU__stat_15.c":161:9)
#loc248 = loc("CWE367_TOC_TOU__stat_15.c":158:13)
#loc249 = loc("CWE367_TOC_TOU__stat_15.c":158:26)
#loc250 = loc("CWE367_TOC_TOU__stat_15.c":158:25)
#loc251 = loc("CWE367_TOC_TOU__stat_15.c":159:9)
#loc252 = loc("CWE367_TOC_TOU__stat_15.c":160:19)
#loc253 = loc("CWE367_TOC_TOU__stat_15.c":160:13)
#loc254 = loc("CWE367_TOC_TOU__stat_15.c":163:5)
#loc255 = loc("CWE367_TOC_TOU__stat_15.c":166:19)
#loc256 = loc("CWE367_TOC_TOU__stat_15.c":166:9)
#loc257 = loc("CWE367_TOC_TOU__stat_15.c":167:9)
#loc258 = loc(fused[#loc1, #loc2])
#loc259 = loc(fused[#loc3, #loc4])
#loc260 = loc(fused[#loc5, #loc6])
#loc261 = loc(fused[#loc8, #loc9])
#loc262 = loc(fused[#loc10, #loc11])
#loc263 = loc(fused[#loc12, #loc13])
#loc264 = loc(fused[#loc14, #loc15])
#loc265 = loc(fused[#loc16, #loc17])
#loc266 = loc(fused[#loc19, #loc20])
#loc267 = loc(fused[#loc22, #loc23])
#loc268 = loc(fused[#loc24, #loc25])
#loc269 = loc(fused[#loc26, #loc27])
#loc270 = loc(fused[#loc28, #loc29])
#loc271 = loc(fused[#loc30, #loc31])
#loc272 = loc(fused[#loc34, #loc35])
#loc273 = loc(fused[#loc37, #loc38])
#loc274 = loc(fused[#loc42, #loc43])
#loc275 = loc(fused[#loc44, #loc38])
#loc276 = loc(fused[#loc48, #loc46])
#loc277 = loc(fused[#loc49, #loc50])
#loc278 = loc(fused[#loc51, #loc53])
#loc279 = loc(fused[#loc54, #loc50])
#loc280 = loc(fused[#loc56, #loc58])
#loc281 = loc(fused[#loc59, #loc55])
#loc282 = loc(fused[#loc60, #loc61])
#loc283 = loc(fused[#loc63, #loc64])
#loc284 = loc(fused[#loc66, #loc61])
#loc285 = loc(fused[#loc72, #loc73])
#loc286 = loc(fused[#loc74, #loc75])
#loc287 = loc(fused[#loc76, #loc77])
#loc288 = loc(fused[#loc79, #loc75])
#loc289 = loc(fused[#loc82, #loc83])
#loc290 = loc(fused[#loc85, #loc86])
#loc291 = loc(fused[#loc87, #loc88])
#loc292 = loc(fused[#loc90, #loc83])
#loc293 = loc(fused[#loc93, #loc94])
#loc294 = loc(fused[#loc95, #loc96])
#loc295 = loc(fused[#loc98, #loc94])
#loc296 = loc(fused[#loc104, #loc105])
#loc297 = loc(fused[#loc106, #loc107])
#loc298 = loc(fused[#loc108, #loc109])
#loc299 = loc(fused[#loc111, #loc112])
#loc300 = loc(fused[#loc113, #loc114])
#loc301 = loc(fused[#loc115, #loc116])
#loc302 = loc(fused[#loc117, #loc118])
#loc303 = loc(fused[#loc124, #loc125])
#loc304 = loc(fused[#loc127, #loc128])
#loc305 = loc(fused[#loc132, #loc133])
#loc306 = loc(fused[#loc134, #loc128])
#loc307 = loc(fused[#loc139, #loc137])
#loc308 = loc(fused[#loc140, #loc141])
#loc309 = loc(fused[#loc142, #loc144])
#loc310 = loc(fused[#loc145, #loc141])
#loc311 = loc(fused[#loc147, #loc149])
#loc312 = loc(fused[#loc150, #loc146])
#loc313 = loc(fused[#loc154, #loc155])
#loc314 = loc(fused[#loc156, #loc157])
#loc315 = loc(fused[#loc158, #loc159])
#loc316 = loc(fused[#loc161, #loc157])
#loc317 = loc(fused[#loc164, #loc165])
#loc318 = loc(fused[#loc167, #loc168])
#loc319 = loc(fused[#loc169, #loc170])
#loc320 = loc(fused[#loc172, #loc165])
#loc321 = loc(fused[#loc175, #loc176])
#loc322 = loc(fused[#loc177, #loc178])
#loc323 = loc(fused[#loc180, #loc176])
#loc324 = loc(fused[#loc184, #loc185])
#loc325 = loc(fused[#loc186, #loc187])
#loc326 = loc(fused[#loc188, #loc189])
#loc327 = loc(fused[#loc190, #loc191])
#loc328 = loc(fused[#loc194, #loc195])
#loc329 = loc(fused[#loc197, #loc198])
#loc330 = loc(fused[#loc202, #loc203])
#loc331 = loc(fused[#loc204, #loc198])
#loc332 = loc(fused[#loc209, #loc207])
#loc333 = loc(fused[#loc210, #loc211])
#loc334 = loc(fused[#loc212, #loc214])
#loc335 = loc(fused[#loc215, #loc211])
#loc336 = loc(fused[#loc217, #loc219])
#loc337 = loc(fused[#loc220, #loc216])
#loc338 = loc(fused[#loc224, #loc225])
#loc339 = loc(fused[#loc226, #loc227])
#loc340 = loc(fused[#loc228, #loc229])
#loc341 = loc(fused[#loc231, #loc227])
#loc342 = loc(fused[#loc234, #loc235])
#loc343 = loc(fused[#loc238, #loc239])
#loc344 = loc(fused[#loc240, #loc241])
#loc345 = loc(fused[#loc243, #loc235])
#loc346 = loc(fused[#loc246, #loc247])
#loc347 = loc(fused[#loc248, #loc249])
#loc348 = loc(fused[#loc251, #loc247])
