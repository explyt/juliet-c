!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc184)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc185)
  cir.func private  @printIntLine(!s32i) loc(#loc186)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc11)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc12)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc12)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc189)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc190)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc11)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc191)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc192)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc19)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc20)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc20)
      %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s32i>, !s32i loc(#loc194)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc21)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc23)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc25)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc23)
      } loc(#loc195)
    } loc(#loc193)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc28)
        cir.condition(%9) loc(#loc28)
      } do {
        cir.break loc(#loc29)
      } loc(#loc196)
    } loc(#loc196)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc32)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc32)
        cir.condition(%9) loc(#loc32)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc199)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc39)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc201)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc41)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc42)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc202)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc43)
              cir.condition(%13) loc(#loc43)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc45)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc46)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc47)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc45)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc48)
              } loc(#loc203)
              cir.yield loc(#loc38)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc49)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc50)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc204)
              cir.yield loc(#loc200)
            } loc(#loc200)
          } loc(#loc200)
        } loc(#loc198)
        cir.break loc(#loc51)
      } loc(#loc197)
    } loc(#loc197)
    cir.return loc(#loc8)
  } loc(#loc187)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc207)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    cir.return loc(#loc53)
  } loc(#loc205)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc209)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc62)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc63)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc63)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc210)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc211)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc62)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc212)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc213)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc70)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc71)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc71)
      %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s32i>, !s32i loc(#loc215)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc72)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc74)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc75)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc76)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc74)
      } loc(#loc216)
    } loc(#loc214)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc79)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc79)
        cir.condition(%9) loc(#loc79)
      } do {
        cir.break loc(#loc80)
      } loc(#loc217)
    } loc(#loc217)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc83)
        cir.condition(%9) loc(#loc83)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc220)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc90)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc222)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc92)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc93)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc223)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc94)
              cir.condition(%13) loc(#loc94)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc97)
                %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc99)
                cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc225)
              } loc(#loc224)
              cir.yield loc(#loc89)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc100)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc101)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc226)
              cir.yield loc(#loc221)
            } loc(#loc221)
          } loc(#loc221)
        } loc(#loc219)
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc228)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc108)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc230)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc110)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc111)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc231)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc112)
              cir.condition(%13) loc(#loc112)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc114)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc115)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc116)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc117)
              } loc(#loc232)
              cir.yield loc(#loc107)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc119)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc233)
              cir.yield loc(#loc229)
            } loc(#loc229)
          } loc(#loc229)
        } loc(#loc227)
        cir.break loc(#loc120)
      } loc(#loc218)
    } loc(#loc218)
    cir.return loc(#loc59)
  } loc(#loc208)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc235)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc125)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc126)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc126)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc236)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc237)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc125)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc238)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc239)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc133)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc134)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc134)
      %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s32i>, !s32i loc(#loc241)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc135)
      cir.if %12 {
        %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc137)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc138)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc139)
        cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc137)
      } loc(#loc242)
    } loc(#loc240)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc142)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc142)
        cir.condition(%9) loc(#loc142)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc245)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc149)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc247)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc151)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc152)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc248)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc153)
              cir.condition(%13) loc(#loc153)
            } body {
              cir.scope {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc155)
                %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc156)
                %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc157)
                %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc158)
                cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc250)
              } loc(#loc249)
              cir.yield loc(#loc148)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc159)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc160)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc251)
              cir.yield loc(#loc246)
            } loc(#loc246)
          } loc(#loc246)
        } loc(#loc244)
        cir.break loc(#loc161)
      } loc(#loc243)
    } loc(#loc243)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc164)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc164)
        cir.condition(%9) loc(#loc164)
      } do {
        cir.scope {
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc254)
          cir.scope {
            %9 = cir.const #cir.int<0> : !s32i loc(#loc171)
            cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc256)
            cir.for : cond {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc173)
              %11 = cir.const #cir.int<10> : !s32i loc(#loc174)
              %12 = cir.cmp(lt, %10, %11) : !s32i, !s32i loc(#loc257)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc175)
              cir.condition(%13) loc(#loc175)
            } body {
              cir.scope {
                %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc177)
                %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc178)
                %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc179)
                %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc177)
                cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc180)
              } loc(#loc258)
              cir.yield loc(#loc170)
            } step {
              %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc181)
              %11 = cir.unary(inc, %10) : !s32i, !s32i loc(#loc182)
              cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc259)
              cir.yield loc(#loc255)
            } loc(#loc255)
          } loc(#loc255)
        } loc(#loc253)
        cir.break loc(#loc183)
      } loc(#loc252)
    } loc(#loc252)
    cir.return loc(#loc122)
  } loc(#loc234)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":22:1)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":45:1)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":24:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":24:11)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":25:19)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":25:26)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":25:29)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":25:39)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":25:40)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":25:5)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":26:5)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":26:33)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":26:9)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":26:17)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":26:14)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":26:23)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":26:24)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":26:30)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":26:29)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":27:5)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":32:5)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":27:11)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":31:9)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":33:5)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":44:5)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":33:11)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":36:9)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":42:9)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":37:13)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":37:17)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":38:13)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":41:13)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":38:19)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":38:17)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":38:22)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":38:24)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":38:23)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":39:13)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":40:30)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":40:35)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":40:36)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":40:17)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":38:29)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":38:28)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":43:9)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":116:1)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":120:1)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":118:5)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":118:13)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":119:5)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":119:13)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":52:1)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":82:1)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":54:5)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":54:11)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":55:19)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":55:26)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":55:29)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":55:39)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":55:40)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":55:5)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":56:5)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":56:33)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":56:9)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":56:17)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":56:14)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":56:23)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":56:24)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":56:30)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":56:29)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":57:5)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":62:5)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":57:11)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":61:9)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":63:5)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":81:5)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":63:11)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":66:9)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":72:9)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":67:13)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":67:17)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":68:13)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":71:13)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":68:19)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":68:17)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":68:22)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":68:24)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":68:23)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":69:13)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":70:27)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":70:17)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":70:22)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":70:23)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":68:29)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":68:28)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":73:9)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":79:9)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":74:13)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":74:17)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":75:13)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":78:13)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":75:19)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":75:17)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":75:22)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":75:24)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":75:23)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":76:13)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":77:30)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":77:35)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":77:36)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":77:17)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":75:29)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":75:28)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":80:9)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":85:1)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":114:1)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":87:5)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":87:11)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":88:19)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":88:26)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":88:29)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":88:39)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":88:40)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":88:5)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":89:5)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":89:33)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":89:9)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":89:17)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":89:14)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":89:23)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":89:24)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":89:30)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":89:29)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":90:5)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":101:5)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":90:11)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":93:9)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":99:9)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":94:13)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":94:17)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":95:13)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":98:13)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":95:19)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":95:17)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":95:22)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":95:24)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":95:23)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":96:13)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":97:27)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":97:17)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":97:22)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":97:23)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":95:29)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":95:28)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":100:9)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":102:5)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":113:5)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":102:11)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":105:9)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":111:9)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":106:13)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":106:17)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":107:13)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":110:13)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":107:19)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":107:17)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":107:22)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":107:24)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":107:23)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":108:13)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":109:30)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":109:35)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":109:36)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":109:17)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":107:29)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":107:28)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__int_array_malloc_no_init_16.c":112:9)
#loc184 = loc(fused[#loc1, #loc2])
#loc185 = loc(fused[#loc3, #loc4])
#loc186 = loc(fused[#loc5, #loc6])
#loc187 = loc(fused[#loc7, #loc8])
#loc188 = loc(fused[#loc9, #loc10])
#loc189 = loc(fused[#loc13, #loc14])
#loc190 = loc(fused[#loc12, #loc14])
#loc191 = loc(fused[#loc11, #loc15])
#loc192 = loc(fused[#loc16, #loc15])
#loc193 = loc(fused[#loc17, #loc18])
#loc194 = loc(fused[#loc19, #loc20])
#loc195 = loc(fused[#loc22, #loc18])
#loc196 = loc(fused[#loc26, #loc27])
#loc197 = loc(fused[#loc30, #loc31])
#loc198 = loc(fused[#loc33, #loc34])
#loc199 = loc(fused[#loc35, #loc36])
#loc200 = loc(fused[#loc37, #loc38])
#loc201 = loc(fused[#loc40, #loc39])
#loc202 = loc(fused[#loc41, #loc42])
#loc203 = loc(fused[#loc44, #loc38])
#loc204 = loc(fused[#loc50, #loc49])
#loc205 = loc(fused[#loc52, #loc53])
#loc206 = loc(fused[#loc54, #loc55])
#loc207 = loc(fused[#loc56, #loc57])
#loc208 = loc(fused[#loc58, #loc59])
#loc209 = loc(fused[#loc60, #loc61])
#loc210 = loc(fused[#loc64, #loc65])
#loc211 = loc(fused[#loc63, #loc65])
#loc212 = loc(fused[#loc62, #loc66])
#loc213 = loc(fused[#loc67, #loc66])
#loc214 = loc(fused[#loc68, #loc69])
#loc215 = loc(fused[#loc70, #loc71])
#loc216 = loc(fused[#loc73, #loc69])
#loc217 = loc(fused[#loc77, #loc78])
#loc218 = loc(fused[#loc81, #loc82])
#loc219 = loc(fused[#loc84, #loc85])
#loc220 = loc(fused[#loc86, #loc87])
#loc221 = loc(fused[#loc88, #loc89])
#loc222 = loc(fused[#loc91, #loc90])
#loc223 = loc(fused[#loc92, #loc93])
#loc224 = loc(fused[#loc95, #loc89])
#loc225 = loc(fused[#loc97, #loc96])
#loc226 = loc(fused[#loc101, #loc100])
#loc227 = loc(fused[#loc102, #loc103])
#loc228 = loc(fused[#loc104, #loc105])
#loc229 = loc(fused[#loc106, #loc107])
#loc230 = loc(fused[#loc109, #loc108])
#loc231 = loc(fused[#loc110, #loc111])
#loc232 = loc(fused[#loc113, #loc107])
#loc233 = loc(fused[#loc119, #loc118])
#loc234 = loc(fused[#loc121, #loc122])
#loc235 = loc(fused[#loc123, #loc124])
#loc236 = loc(fused[#loc127, #loc128])
#loc237 = loc(fused[#loc126, #loc128])
#loc238 = loc(fused[#loc125, #loc129])
#loc239 = loc(fused[#loc130, #loc129])
#loc240 = loc(fused[#loc131, #loc132])
#loc241 = loc(fused[#loc133, #loc134])
#loc242 = loc(fused[#loc136, #loc132])
#loc243 = loc(fused[#loc140, #loc141])
#loc244 = loc(fused[#loc143, #loc144])
#loc245 = loc(fused[#loc145, #loc146])
#loc246 = loc(fused[#loc147, #loc148])
#loc247 = loc(fused[#loc150, #loc149])
#loc248 = loc(fused[#loc151, #loc152])
#loc249 = loc(fused[#loc154, #loc148])
#loc250 = loc(fused[#loc156, #loc155])
#loc251 = loc(fused[#loc160, #loc159])
#loc252 = loc(fused[#loc162, #loc163])
#loc253 = loc(fused[#loc165, #loc166])
#loc254 = loc(fused[#loc167, #loc168])
#loc255 = loc(fused[#loc169, #loc170])
#loc256 = loc(fused[#loc172, #loc171])
#loc257 = loc(fused[#loc173, #loc174])
#loc258 = loc(fused[#loc176, #loc170])
#loc259 = loc(fused[#loc182, #loc181])
