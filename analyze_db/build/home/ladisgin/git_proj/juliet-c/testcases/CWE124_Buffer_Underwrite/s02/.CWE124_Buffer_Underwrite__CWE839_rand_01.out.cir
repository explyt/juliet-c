!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":28:12)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":127:10)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":127:14)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":127:20)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":127:32)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":91:12)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":96:23)
#true = #cir.bool<true> : !cir.bool
#loc190 = loc(fused[#loc63, #loc64])
#loc191 = loc(fused[#loc65, #loc66])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__CWE839_rand_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc165)
  cir.func private @printIntLine(!s32i) loc(#loc166)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_rand_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc169)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc170)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc171)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc17)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %7 = cir.binop(and, %5, %6) : !s32i loc(#loc19)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %8 ^bb1, ^bb2 loc(#loc19)
  ^bb1:  // pred: ^bb0
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc19)
    %11 = cir.const #cir.int<30> : !s32i loc(#loc19)
    %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc19)
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc19)
    %15 = cir.const #cir.int<15> : !s32i loc(#loc19)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc19)
    %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc19)
    %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc19)
    %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc19)
    cir.br ^bb3(%20 : !u32i) loc(#loc19)
  ^bb2:  // pred: ^bb0
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc19)
    %23 = cir.const #cir.int<30> : !s32i loc(#loc19)
    %24 = cir.shift(left, %22 : !u32i, %23 : !s32i) -> !u32i loc(#loc19)
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc19)
    %27 = cir.const #cir.int<15> : !s32i loc(#loc19)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc19)
    %29 = cir.binop(xor, %24, %28) : !u32i loc(#loc19)
    %30 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc19)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc19)
    %32 = cir.binop(xor, %29, %31) : !u32i loc(#loc19)
    %33 = cir.unary(minus, %32) : !u32i, !u32i loc(#loc19)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc19)
    %36 = cir.binop(sub, %33, %35) : !u32i loc(#loc19)
    cir.br ^bb3(%36 : !u32i) loc(#loc19)
  ^bb3(%37: !u32i loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":28:12)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc19)
  ^bb4:  // pred: ^bb3
    %38 = cir.cast(integral, %37 : !u32i), !s32i loc(#loc19)
    cir.store %38, %2 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.br ^bb5 loc(#loc174)
  ^bb5:  // pred: ^bb4
    %39 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc170)
    cir.store %39, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc170)
    cir.br ^bb6 loc(#loc175)
  ^bb6:  // pred: ^bb5
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %41 = cir.const #cir.int<10> : !s32i loc(#loc26)
    %42 = cir.cmp(lt, %40, %41) : !s32i, !cir.bool loc(#loc176)
    cir.brcond %42 ^bb7, ^bb16 loc(#loc177)
  ^bb7:  // pred: ^bb6
    %43 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    %45 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc32)
    %46 = cir.ptr_stride(%45 : !cir.ptr<!s32i>, %44 : !s32i), !cir.ptr<!s32i> loc(#loc32)
    cir.store %43, %46 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    cir.br ^bb8 loc(#loc179)
  ^bb8:  // pred: ^bb7
    %47 = cir.const #cir.int<0> : !s32i loc(#loc35)
    cir.store %47, %0 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.br ^bb9 loc(#loc179)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %48 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %49 = cir.const #cir.int<10> : !s32i loc(#loc38)
    %50 = cir.cmp(lt, %48, %49) : !s32i, !cir.bool loc(#loc181)
    cir.brcond %50 ^bb10, ^bb14 loc(#loc39)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc182)
  ^bb11:  // pred: ^bb10
    %51 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    %52 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc42)
    %53 = cir.ptr_stride(%52 : !cir.ptr<!s32i>, %51 : !s32i), !cir.ptr<!s32i> loc(#loc42)
    %54 = cir.load %53 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    cir.call @printIntLine(%54) : (!s32i) -> () loc(#loc43)
    cir.br ^bb12 loc(#loc34)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc34)
  ^bb13:  // pred: ^bb12
    %55 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    %56 = cir.unary(inc, %55) : !s32i, !s32i loc(#loc45)
    cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.br ^bb9 loc(#loc179)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc34)
  ^bb15:  // pred: ^bb14
    cir.br ^bb17 loc(#loc28)
  ^bb16:  // pred: ^bb6
    %57 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc7)
    %58 = cir.cast(array_to_ptrdecay, %57 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb17 loc(#loc24)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc24)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc22)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc9)
  } loc(#loc168)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_rand_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    cir.return loc(#loc48)
  } loc(#loc184)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc187)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc60)
  cir.func @main(%arg0: !s32i loc(fused[#loc63, #loc64]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc65, #loc66])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc190)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc191)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc62)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc67)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc67)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc68)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc69)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc69)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc70)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc57)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_rand_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call @CWE124_Buffer_Underwrite__CWE839_rand_01_good() : () -> () loc(#loc72)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc58)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc59)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_rand_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call @CWE124_Buffer_Underwrite__CWE839_rand_01_bad() : () -> () loc(#loc76)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc60)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc79)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    cir.return %17 : !s32i loc(#loc194)
  } loc(#loc189)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc196)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc197)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc198)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc90)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc92)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    cir.br ^bb1 loc(#loc201)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc197)
    cir.store %6, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc197)
    cir.br ^bb2 loc(#loc202)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc99)
    %9 = cir.cmp(lt, %7, %8) : !s32i, !cir.bool loc(#loc203)
    cir.brcond %9 ^bb3, ^bb12 loc(#loc204)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %12 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc105)
    %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc105)
    cir.store %10, %13 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    cir.br ^bb4 loc(#loc206)
  ^bb4:  // pred: ^bb3
    %14 = cir.const #cir.int<0> : !s32i loc(#loc108)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    cir.br ^bb5 loc(#loc206)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %16 = cir.const #cir.int<10> : !s32i loc(#loc111)
    %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc208)
    cir.brcond %17 ^bb6, ^bb10 loc(#loc112)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc209)
  ^bb7:  // pred: ^bb6
    %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %19 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc115)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc115)
    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc116)
    cir.br ^bb8 loc(#loc107)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc107)
  ^bb9:  // pred: ^bb8
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc118)
    cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    cir.br ^bb5 loc(#loc206)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc107)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc101)
  ^bb12:  // pred: ^bb2
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc119)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.br ^bb13 loc(#loc97)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc97)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc95)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc82)
  } loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc121)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc212)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc213)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc214)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc131)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc133)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %7 = cir.binop(and, %5, %6) : !s32i loc(#loc133)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc133)
    cir.brcond %8 ^bb1, ^bb2 loc(#loc133)
  ^bb1:  // pred: ^bb0
    %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc133)
    %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc133)
    %11 = cir.const #cir.int<30> : !s32i loc(#loc133)
    %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc133)
    %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc133)
    %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc133)
    %15 = cir.const #cir.int<15> : !s32i loc(#loc133)
    %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc133)
    %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc133)
    %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc133)
    %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc133)
    %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc133)
    cir.br ^bb3(%20 : !u32i) loc(#loc133)
  ^bb2:  // pred: ^bb0
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc133)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc133)
    %23 = cir.const #cir.int<30> : !s32i loc(#loc133)
    %24 = cir.shift(left, %22 : !u32i, %23 : !s32i) -> !u32i loc(#loc133)
    %25 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc133)
    %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc133)
    %27 = cir.const #cir.int<15> : !s32i loc(#loc133)
    %28 = cir.shift(left, %26 : !u32i, %27 : !s32i) -> !u32i loc(#loc133)
    %29 = cir.binop(xor, %24, %28) : !u32i loc(#loc133)
    %30 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc133)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc133)
    %32 = cir.binop(xor, %29, %31) : !u32i loc(#loc133)
    %33 = cir.unary(minus, %32) : !u32i, !u32i loc(#loc133)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc133)
    %36 = cir.binop(sub, %33, %35) : !u32i loc(#loc133)
    cir.br ^bb3(%36 : !u32i) loc(#loc133)
  ^bb3(%37: !u32i loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":91:12)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc133)
  ^bb4:  // pred: ^bb3
    %38 = cir.cast(integral, %37 : !u32i), !s32i loc(#loc133)
    cir.store %38, %2 : !s32i, !cir.ptr<!s32i> loc(#loc216)
    cir.br ^bb5 loc(#loc217)
  ^bb5:  // pred: ^bb4
    %39 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc213)
    cir.store %39, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc213)
    cir.br ^bb6 loc(#loc218)
  ^bb6:  // pred: ^bb5
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %41 = cir.const #cir.int<0> : !s32i loc(#loc140)
    %42 = cir.cmp(ge, %40, %41) : !s32i, !cir.bool loc(#loc219)
    cir.brcond %42 ^bb7, ^bb12 loc(#loc141)
  ^bb7:  // pred: ^bb6
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %44 = cir.const #cir.int<10> : !s32i loc(#loc143)
    %45 = cir.cmp(lt, %43, %44) : !s32i, !cir.bool loc(#loc220)
    cir.brcond %45 ^bb8, ^bb9 loc(#loc141)
  ^bb8:  // pred: ^bb7
    %46 = cir.const #true loc(#loc141)
    cir.br ^bb10(%46 : !cir.bool) loc(#loc141)
  ^bb9:  // pred: ^bb7
    %47 = cir.const #false loc(#loc141)
    cir.br ^bb10(%47 : !cir.bool) loc(#loc141)
  ^bb10(%48: !cir.bool loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":96:23)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc141)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13(%48 : !cir.bool) loc(#loc141)
  ^bb12:  // pred: ^bb6
    %49 = cir.const #false loc(#loc141)
    cir.br ^bb13(%49 : !cir.bool) loc(#loc141)
  ^bb13(%50: !cir.bool loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":96:23)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc141)
  ^bb14:  // pred: ^bb13
    cir.brcond %50 ^bb15, ^bb24 loc(#loc221)
  ^bb15:  // pred: ^bb14
    %51 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %53 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc150)
    %54 = cir.ptr_stride(%53 : !cir.ptr<!s32i>, %52 : !s32i), !cir.ptr<!s32i> loc(#loc150)
    cir.store %51, %54 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    cir.br ^bb16 loc(#loc223)
  ^bb16:  // pred: ^bb15
    %55 = cir.const #cir.int<0> : !s32i loc(#loc153)
    cir.store %55, %0 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    cir.br ^bb17 loc(#loc223)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %56 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    %57 = cir.const #cir.int<10> : !s32i loc(#loc156)
    %58 = cir.cmp(lt, %56, %57) : !s32i, !cir.bool loc(#loc225)
    cir.brcond %58 ^bb18, ^bb22 loc(#loc157)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc226)
  ^bb19:  // pred: ^bb18
    %59 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %60 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc160)
    %61 = cir.ptr_stride(%60 : !cir.ptr<!s32i>, %59 : !s32i), !cir.ptr<!s32i> loc(#loc160)
    %62 = cir.load %61 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    cir.call @printIntLine(%62) : (!s32i) -> () loc(#loc161)
    cir.br ^bb20 loc(#loc152)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc152)
  ^bb21:  // pred: ^bb20
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %64 = cir.unary(inc, %63) : !s32i, !s32i loc(#loc163)
    cir.store %64, %0 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    cir.br ^bb17 loc(#loc223)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc152)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc146)
  ^bb24:  // pred: ^bb14
    %65 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc121)
    %66 = cir.cast(array_to_ptrdecay, %65 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%66) : (!cir.ptr<!s8i>) -> () loc(#loc164)
    cir.br ^bb25 loc(#loc138)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc138)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc136)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc123)
  } loc(#loc211)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__CWE839_rand_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":45:23)
#loc8 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":22:1)
#loc9 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":48:1)
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":30:9)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":30:13)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":31:9)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":31:30)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":24:5)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":24:9)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":26:13)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":26:12)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":26:5)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":28:5)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":29:5)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":47:5)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":34:9)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":46:9)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":34:13)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":34:20)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":35:9)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":42:9)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":44:9)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":36:28)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":36:20)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":36:13)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":38:13)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":41:13)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":38:21)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":38:17)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":38:24)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":38:28)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":38:26)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":39:13)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":40:37)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":40:30)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":40:17)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":38:33)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":38:32)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":45:13)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":112:1)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":116:1)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":114:5)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":114:13)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":115:5)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":115:13)
#loc53 = loc("/usr/include/stdlib.h":575:1)
#loc54 = loc("/usr/include/stdlib.h":575:41)
#loc55 = loc("/usr/include/time.h":76:1)
#loc56 = loc("/usr/include/time.h":76:38)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":132:15)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":134:15)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":137:15)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":139:15)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":127:1)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":142:1)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":128:1)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":130:27)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":130:22)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":130:5)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":132:5)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":133:5)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":133:51)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":134:5)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":137:5)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":138:5)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":138:50)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":139:5)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":141:12)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":141:5)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":55:1)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":82:1)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":64:9)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":64:13)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":65:9)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":65:30)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":57:5)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":57:9)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":59:13)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":59:12)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":59:5)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":62:12)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":62:5)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":63:5)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":81:5)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":68:9)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":80:9)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":68:13)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":68:20)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":69:9)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":76:9)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":78:9)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":70:28)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":70:20)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":70:13)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":72:13)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":75:13)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":72:21)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":72:17)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":72:24)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":72:28)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":72:26)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":73:13)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":74:37)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":74:30)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":74:17)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":72:33)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":72:32)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":79:23)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":79:13)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":107:23)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":85:1)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":110:1)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":93:9)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":93:13)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":94:9)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":94:30)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":87:5)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":87:9)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":89:13)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":89:12)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":89:5)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":91:5)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":92:5)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":109:5)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":96:9)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":108:9)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":96:13)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":96:21)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":96:26)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":96:34)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":96:36)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":97:9)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":104:9)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":106:9)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":98:28)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":98:20)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":98:13)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":100:13)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":103:13)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":100:21)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":100:17)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":100:24)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":100:28)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":100:26)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":101:13)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":102:37)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":102:30)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":102:17)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":100:33)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":100:32)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_rand_01.c":107:13)
#loc165 = loc(fused[#loc1, #loc2])
#loc166 = loc(fused[#loc3, #loc4])
#loc167 = loc(fused[#loc5, #loc6])
#loc168 = loc(fused[#loc8, #loc9])
#loc169 = loc(fused[#loc10, #loc11])
#loc170 = loc(fused[#loc12, #loc13])
#loc171 = loc(fused[#loc14, #loc15])
#loc172 = loc(fused[#loc18, #loc16])
#loc173 = loc(fused[#loc20, #loc19])
#loc174 = loc(fused[#loc21, #loc22])
#loc175 = loc(fused[#loc23, #loc24])
#loc176 = loc(fused[#loc25, #loc26])
#loc177 = loc(fused[#loc27, #loc28, #loc29, #loc24])
#loc178 = loc(fused[#loc32, #loc30])
#loc179 = loc(fused[#loc33, #loc34])
#loc180 = loc(fused[#loc36, #loc35])
#loc181 = loc(fused[#loc37, #loc38])
#loc182 = loc(fused[#loc40, #loc34])
#loc183 = loc(fused[#loc45, #loc44])
#loc184 = loc(fused[#loc47, #loc48])
#loc185 = loc(fused[#loc49, #loc50])
#loc186 = loc(fused[#loc51, #loc52])
#loc187 = loc(fused[#loc53, #loc54])
#loc188 = loc(fused[#loc55, #loc56])
#loc189 = loc(fused[#loc61, #loc62])
#loc192 = loc(fused[#loc72, #loc73])
#loc193 = loc(fused[#loc76, #loc77])
#loc194 = loc(fused[#loc80, #loc79])
#loc195 = loc(fused[#loc81, #loc82])
#loc196 = loc(fused[#loc83, #loc84])
#loc197 = loc(fused[#loc85, #loc86])
#loc198 = loc(fused[#loc87, #loc88])
#loc199 = loc(fused[#loc91, #loc89])
#loc200 = loc(fused[#loc93, #loc92])
#loc201 = loc(fused[#loc94, #loc95])
#loc202 = loc(fused[#loc96, #loc97])
#loc203 = loc(fused[#loc98, #loc99])
#loc204 = loc(fused[#loc100, #loc101, #loc102, #loc97])
#loc205 = loc(fused[#loc105, #loc103])
#loc206 = loc(fused[#loc106, #loc107])
#loc207 = loc(fused[#loc109, #loc108])
#loc208 = loc(fused[#loc110, #loc111])
#loc209 = loc(fused[#loc113, #loc107])
#loc210 = loc(fused[#loc118, #loc117])
#loc211 = loc(fused[#loc122, #loc123])
#loc212 = loc(fused[#loc124, #loc125])
#loc213 = loc(fused[#loc126, #loc127])
#loc214 = loc(fused[#loc128, #loc129])
#loc215 = loc(fused[#loc132, #loc130])
#loc216 = loc(fused[#loc134, #loc133])
#loc217 = loc(fused[#loc135, #loc136])
#loc218 = loc(fused[#loc137, #loc138])
#loc219 = loc(fused[#loc139, #loc140])
#loc220 = loc(fused[#loc142, #loc144])
#loc221 = loc(fused[#loc145, #loc146, #loc147, #loc138])
#loc222 = loc(fused[#loc150, #loc148])
#loc223 = loc(fused[#loc151, #loc152])
#loc224 = loc(fused[#loc154, #loc153])
#loc225 = loc(fused[#loc155, #loc156])
#loc226 = loc(fused[#loc158, #loc152])
#loc227 = loc(fused[#loc163, #loc162])
