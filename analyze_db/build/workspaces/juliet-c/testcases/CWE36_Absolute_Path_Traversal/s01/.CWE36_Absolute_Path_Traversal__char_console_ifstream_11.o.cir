!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!ty___locale_data = !cir.record<struct "__locale_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty___pthread_internal_list = !cir.record<struct "__pthread_internal_list" {!cir.ptr<!cir.record<struct "__pthread_internal_list">>, !cir.ptr<!cir.record<struct "__pthread_internal_list">>} #cir.record.decl.ast>
!ty_anon2E0 = !cir.record<union "anon.0" {!u32i, !cir.array<!s8i x 4>} #cir.record.decl.ast>
!ty_std3A3Aios_base3A3A_Words = !cir.record<struct "std::ios_base::_Words" {!cir.ptr<!void>, !s64i} #cir.record.decl.ast>
!ty___locale_struct = !cir.record<struct "__locale_struct" {!cir.array<!cir.ptr<!ty___locale_data> x 13>, !cir.ptr<!u16i>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.array<!cir.ptr<!s8i> x 13>} #cir.record.decl.ast>
!ty___mbstate_t = !cir.record<struct "__mbstate_t" {!s32i, !ty_anon2E0} #cir.record.decl.ast>
!ty___pthread_mutex_s = !cir.record<struct "__pthread_mutex_s" {!s32i, !u32i, !s32i, !u32i, !s32i, !s16i, !s16i, !ty___pthread_internal_list} #cir.record.decl.ast>
!ty_pthread_mutex_t = !cir.record<union "pthread_mutex_t" {!ty___pthread_mutex_s, !cir.array<!s8i x 40>, !s64i} #cir.record.decl.ast>
!ty_std3A3A__basic_file3Cchar3E = !cir.record<class "std::__basic_file<char>" packed padded {!cir.ptr<!ty__IO_FILE>, !cir.bool, !cir.array<!u8i x 7>} #cir.record.decl.ast>
!ty_std3A3Abasic_istream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase = !cir.record<class "std::basic_istream<char, std::char_traits<char>>.base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i} #cir.record.decl.ast>
!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ostream<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.record<class "std::basic_ios<char, std::char_traits<char>>" {!cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.record<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<(!u32i, !cir.ptr<!cir.record<class "std::ios_base">>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>, !cir.ptr<!cir.record<class "std::basic_ostream<char, std::char_traits<char>>">>, !s8i, !cir.bool, !cir.ptr<!cir.record<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::ctype<char>" packed padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>" padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>, !cir.ptr<!cir.record<class "std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>" padded {!cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>, !cir.array<!u8i x 4>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>
!ty_std3A3Aios_base3A3A_Callback_list = !cir.record<struct "std::ios_base::_Callback_list" {!cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !cir.ptr<!cir.func<(!u32i, !cir.ptr<!cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!cir.record<struct "std::ios_base::_Callback_list">>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !cir.record<class "std::locale" {!cir.ptr<!cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !u64i, !cir.ptr<!cir.ptr<!cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>>} #cir.record.decl.ast>} #cir.record.decl.ast>>, !s32i)>>, !s32i, !s32i} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet = !cir.record<class "std::locale::facet" packed padded {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3Afacet2Ebase = !cir.record<class "std::locale::facet.base" packed {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s32i} #cir.record.decl.ast>
!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase = !cir.record<class "std::__codecvt_abstract_base<char, char, __mbstate_t>.base" {!ty_std3A3Alocale3A3Afacet2Ebase} #cir.record.decl.ast>
!ty_std3A3Actype3Cchar3E = !cir.record<class "std::ctype<char>" packed padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>, !cir.ptr<!ty___locale_struct>, !cir.bool, !cir.array<!u8i x 7>, !cir.ptr<!s32i>, !cir.ptr<!s32i>, !cir.ptr<!u16i>, !s8i, !cir.array<!s8i x 256>, !cir.array<!s8i x 256>, !s8i, !cir.array<!u8i x 6>} #cir.record.decl.ast>
!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E = !cir.record<class "std::num_get<char, std::istreambuf_iterator<char, std::char_traits<char>>>" padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E = !cir.record<class "std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char>>>" padded {!ty_std3A3Alocale3A3Afacet2Ebase, !cir.array<!u8i x 4>} #cir.record.decl.ast>
!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E = !cir.record<class "std::codecvt<char, char, __mbstate_t>" {!ty_std3A3A__codecvt_abstract_base3Cchar2C_char2C___mbstate_t3E2Ebase, !cir.ptr<!ty___locale_struct>} #cir.record.decl.ast>
!ty_std3A3Alocale3A3A_Impl = !cir.record<class "std::locale::_Impl" {!s32i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !u64i, !cir.ptr<!cir.ptr<!ty_std3A3Alocale3A3Afacet>>, !cir.ptr<!cir.ptr<!s8i>>} #cir.record.decl.ast>
!ty_std3A3Alocale = !cir.record<class "std::locale" {!cir.ptr<!ty_std3A3Alocale3A3A_Impl>} #cir.record.decl.ast>
!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_streambuf<char, std::char_traits<char>>" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Aios_base = !cir.record<class "std::ios_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !s64i, !s64i, !s32i, !s32i, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Callback_list>, !ty_std3A3Aios_base3A3A_Words, !cir.array<!ty_std3A3Aios_base3A3A_Words x 8>, !s32i, !cir.ptr<!ty_std3A3Aios_base3A3A_Words>, !ty_std3A3Alocale} #cir.record.decl.ast>
!ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_filebuf<char, std::char_traits<char>>" {!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_pthread_mutex_t, !ty_std3A3A__basic_file3Cchar3E, !s32i, !ty___mbstate_t, !ty___mbstate_t, !ty___mbstate_t, !cir.ptr<!s8i>, !u64i, !cir.bool, !cir.bool, !cir.bool, !s8i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.bool, !cir.ptr<!ty_std3A3Acodecvt3Cchar2C_char2C___mbstate_t3E>, !cir.ptr<!s8i>, !s64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>} #cir.record.decl.ast>
!ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ios<char, std::char_traits<char>>" {!ty_std3A3Aios_base, !cir.ptr<!ty_std3A3Abasic_ostream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !s8i, !cir.bool, !cir.ptr<!ty_std3A3Abasic_streambuf3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!ty_std3A3Actype3Cchar3E>, !cir.ptr<!ty_std3A3Anum_put3Cchar2C_std3A3Aostreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E>, !cir.ptr<!ty_std3A3Anum_get3Cchar2C_std3A3Aistreambuf_iterator3Cchar2C_std3A3Achar_traits3Cchar3E3E3E>} #cir.record.decl.ast>
!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E = !cir.record<class "std::basic_ifstream<char, std::char_traits<char>>" {!ty_std3A3Abasic_istream3Cchar2C_std3A3Achar_traits3Cchar3E3E2Ebase, !ty_std3A3Abasic_filebuf3Cchar2C_std3A3Achar_traits3Cchar3E3E, !ty_std3A3Abasic_ios3Cchar2C_std3A3Achar_traits3Cchar3E3E}>
module @"/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @globalReturnsTrue() -> !s32i loc(#loc153)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc154)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc155)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc156)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc158)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) loc(#loc159)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) loc(#loc160)
  cir.func private @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) extra(#fn_attr) loc(#loc161)
  cir.func @_ZN55CWE36_Absolute_Path_Traversal__char_console_ifstream_113badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc163)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc164)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc164)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc164)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    cir.scope {
      %4 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc30)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc167)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc170)
          %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc37)
          %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
          %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc37)
          cir.store %9, %6 : !u64i, !cir.ptr<!u64i> loc(#loc170)
          cir.scope {
            %10 = cir.const #cir.int<4096> : !s32i loc(#loc41)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc41)
            %12 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc42)
            %13 = cir.binop(sub, %11, %12) : !u64i loc(#loc172)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc43)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc43)
            %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc173)
            cir.if %16 {
              cir.scope {
                %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
                %18 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc48)
                %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc49)
                %20 = cir.const #cir.int<4096> : !s32i loc(#loc50)
                %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc50)
                %22 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc51)
                %23 = cir.binop(sub, %21, %22) : !u64i loc(#loc176)
                %24 = cir.cast(integral, %23 : !u64i), !s32i loc(#loc176)
                %25 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc156)
                %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc52)
                %27 = cir.call @fgets(%19, %24, %26) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc53)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc54)
                %29 = cir.cmp(ne, %27, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc177)
                cir.if %29 {
                  %30 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc58)
                  %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
                  %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc58)
                  cir.store %32, %6 : !u64i, !cir.ptr<!u64i> loc(#loc179)
                  cir.scope {
                    %33 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc64)
                    %34 = cir.const #cir.int<0> : !s32i loc(#loc65)
                    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc65)
                    %36 = cir.cmp(gt, %33, %35) : !u64i, !cir.bool loc(#loc181)
                    %37 = cir.ternary(%36, true {
                      %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
                      %39 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc68)
                      %40 = cir.const #cir.int<1> : !s32i loc(#loc69)
                      %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc69)
                      %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc182)
                      %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc70)
                      %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc67)
                      %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc67)
                      %46 = cir.const #cir.int<10> : !s8i loc(#loc71)
                      %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc71)
                      %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc183)
                      %49 = cir.ternary(%48, true {
                        %50 = cir.const #true loc(#loc66)
                        cir.yield %50 : !cir.bool loc(#loc66)
                      }, false {
                        %50 = cir.const #false loc(#loc66)
                        cir.yield %50 : !cir.bool loc(#loc66)
                      }) : (!cir.bool) -> !cir.bool loc(#loc66)
                      cir.yield %49 : !cir.bool loc(#loc66)
                    }, false {
                      %38 = cir.const #false loc(#loc66)
                      cir.yield %38 : !cir.bool loc(#loc66)
                    }) : (!cir.bool) -> !cir.bool loc(#loc66)
                    cir.if %37 {
                      %38 = cir.const #cir.int<0> : !s8i loc(#loc73)
                      %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
                      %40 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc75)
                      %41 = cir.const #cir.int<1> : !s32i loc(#loc76)
                      %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc76)
                      %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc185)
                      %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc77)
                      cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc186)
                    } loc(#loc184)
                  } loc(#loc180)
                } else {
                  %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
                  %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
                  cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc78)
                  %32 = cir.const #cir.int<0> : !s8i loc(#loc79)
                  %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
                  %34 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc81)
                  %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc82)
                  cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc187)
                } loc(#loc178)
              } loc(#loc175)
            } loc(#loc174)
          } loc(#loc171)
        } loc(#loc169)
      } loc(#loc168)
    } loc(#loc166)
    cir.scope {
      %4 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc189)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc86)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
      %6 = cir.const #cir.int<8> : !s32i loc(#loc190)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%4, %5, %6) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc161)
          cir.yield loc(#loc91)
        } loc(#loc91)
        cir.yield loc(#loc90)
      } catch [#cir.unwind {
        cir.resume loc(#loc90)
      }] loc(#loc90)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc161)
          cir.yield loc(#loc92)
        } loc(#loc92)
        cir.yield loc(#loc90)
      } catch [#cir.unwind {
        cir.resume loc(#loc90)
      }] loc(#loc90)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc161)
    } loc(#loc188)
    cir.return loc(#loc21)
  } loc(#loc162)
  cir.func private @globalReturnsFalse() -> !s32i loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc95)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc192)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc98)
  cir.func internal private @_ZN55CWE36_Absolute_Path_Traversal__char_console_ifstream_11L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc194)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc195)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc195)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc195)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc105)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
    cir.scope {
      %4 = cir.call @globalReturnsFalse() : () -> !s32i loc(#loc109)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc198)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc95)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc95)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc114)
      } else {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc115)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc98)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc98)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc115)
      } loc(#loc199)
    } loc(#loc197)
    cir.scope {
      %4 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc201)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc120)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
      %6 = cir.const #cir.int<8> : !s32i loc(#loc190)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%4, %5, %6) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc161)
          cir.yield loc(#loc123)
        } loc(#loc123)
        cir.yield loc(#loc122)
      } catch [#cir.unwind {
        cir.resume loc(#loc122)
      }] loc(#loc122)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc161)
          cir.yield loc(#loc124)
        } loc(#loc124)
        cir.yield loc(#loc122)
      } catch [#cir.unwind {
        cir.resume loc(#loc122)
      }] loc(#loc122)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc161)
    } loc(#loc200)
    cir.return loc(#loc100)
  } loc(#loc193)
  cir.func internal private @_ZN55CWE36_Absolute_Path_Traversal__char_console_ifstream_11L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc203)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc204)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc204)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc204)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc131)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc205)
    cir.scope {
      %4 = cir.call @globalReturnsTrue() : () -> !s32i loc(#loc135)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc207)
      cir.if %5 {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc138)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc140)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc140)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc138)
      } loc(#loc208)
    } loc(#loc206)
    cir.scope {
      %4 = cir.alloca !ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E, !cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, ["inputFile", init] {alignment = 8 : i64} loc(#loc210)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () loc(#loc144)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
      %6 = cir.const #cir.int<8> : !s32i loc(#loc190)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE4openEPKcSt13_Ios_Openmode(%4, %5, %6) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>, !cir.ptr<!s8i>, !s32i) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc161)
          cir.yield loc(#loc147)
        } loc(#loc147)
        cir.yield loc(#loc146)
      } catch [#cir.unwind {
        cir.resume loc(#loc146)
      }] loc(#loc146)
      cir.try synthetic cleanup {
        cir.call exception @_ZNSt14basic_ifstreamIcSt11char_traitsIcEE5closeEv(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () cleanup {
          cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc161)
          cir.yield loc(#loc148)
        } loc(#loc148)
        cir.yield loc(#loc146)
      } catch [#cir.unwind {
        cir.resume loc(#loc146)
      }] loc(#loc146)
      cir.call @_ZNSt14basic_ifstreamIcSt11char_traitsIcEED1Ev(%4) : (!cir.ptr<!ty_std3A3Abasic_ifstream3Cchar2C_std3A3Achar_traits3Cchar3E3E>) -> () extra(#fn_attr) loc(#loc161)
    } loc(#loc209)
    cir.return loc(#loc126)
  } loc(#loc202)
  cir.func @_ZN55CWE36_Absolute_Path_Traversal__char_console_ifstream_114goodEv() extra(#fn_attr1) {
    cir.call @_ZN55CWE36_Absolute_Path_Traversal__char_console_ifstream_11L8goodG2B1Ev() : () -> () loc(#loc151)
    cir.call @_ZN55CWE36_Absolute_Path_Traversal__char_console_ifstream_11L8goodG2B2Ev() : () -> () loc(#loc152)
    cir.return loc(#loc150)
  } loc(#loc211)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/stdio.h":654:1)
#loc6 = loc("/usr/include/stdio.h":655:59)
#loc7 = loc("/usr/include/stdio.h":149:1)
#loc8 = loc("/usr/include/stdio.h":149:14)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":57:31)
#loc12 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":525:7)
#loc13 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":526:34)
#loc14 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":664:7)
#loc15 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":673:7)
#loc16 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":736:7)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":741:7)
#loc18 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":606:7)
#loc19 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":607:9)
#loc20 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":31:1)
#loc21 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":70:1)
#loc22 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":33:5)
#loc23 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":33:12)
#loc24 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":34:5)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":34:37)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":35:12)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":35:5)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":36:5)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":63:5)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":36:8)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":36:26)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":37:5)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":38:9)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":62:9)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":40:13)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":40:41)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":40:30)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":40:37)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":42:13)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":61:13)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":42:17)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":42:30)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":42:40)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":43:13)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":45:17)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":60:17)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":45:27)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":45:32)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":45:31)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":45:47)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":45:60)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":45:70)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":45:21)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":45:80)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":46:17)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":54:17)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":56:17)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":49:31)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":49:38)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":49:21)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":49:42)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":50:21)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":53:21)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":50:25)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":50:35)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":50:37)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":50:40)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":50:45)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":50:53)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":50:54)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":50:59)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":51:21)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":52:43)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":52:25)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":52:30)
#loc76 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":52:38)
#loc77 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":52:39)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":57:21)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":59:37)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":59:21)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":59:26)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":59:33)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":64:5)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":69:5)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":65:9)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":65:18)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":67:32)
#loc88 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":665:57)
#loc89 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/fstream":665:67)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":31:6)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":67:19)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":68:19)
#loc93 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc94 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":85:19)
#loc96 = loc("/usr/include/string.h":149:1)
#loc97 = loc("/usr/include/string.h":150:14)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":94:22)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":77:1)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":103:1)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":79:5)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":79:12)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":80:5)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":80:37)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":81:12)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":81:5)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":82:5)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":96:5)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":82:8)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":82:27)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":83:5)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":86:5)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":88:5)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":85:9)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":94:9)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":94:16)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":97:5)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":102:5)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":98:9)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":98:18)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":100:32)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":77:13)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":100:19)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":101:19)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":106:1)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":127:1)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":108:5)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":108:12)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":109:5)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":109:37)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":110:12)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":110:5)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":111:5)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":120:5)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":111:8)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":111:26)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":112:5)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":118:9)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":118:16)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":118:22)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":121:5)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":126:5)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":122:9)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":122:18)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":124:32)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":106:13)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":124:19)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":125:19)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":129:1)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":133:1)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":131:5)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_console_ifstream_11.cpp":132:5)
#loc153 = loc(fused[#loc1, #loc2])
#loc154 = loc(fused[#loc3, #loc4])
#loc155 = loc(fused[#loc5, #loc6])
#loc156 = loc(fused[#loc7, #loc8])
#loc157 = loc(fused[#loc9, #loc10])
#loc158 = loc(fused[#loc12, #loc13])
#loc159 = loc(fused[#loc14, #loc15])
#loc160 = loc(fused[#loc16, #loc17])
#loc161 = loc(fused[#loc18, #loc19])
#loc162 = loc(fused[#loc20, #loc21])
#loc163 = loc(fused[#loc22, #loc23])
#loc164 = loc(fused[#loc24, #loc25])
#loc165 = loc(fused[#loc27, #loc26])
#loc166 = loc(fused[#loc28, #loc29])
#loc167 = loc(fused[#loc30, #loc31])
#loc168 = loc(fused[#loc32, #loc29])
#loc169 = loc(fused[#loc33, #loc34])
#loc170 = loc(fused[#loc35, #loc36])
#loc171 = loc(fused[#loc39, #loc40])
#loc172 = loc(fused[#loc41, #loc42])
#loc173 = loc(fused[#loc41, #loc43])
#loc174 = loc(fused[#loc44, #loc40])
#loc175 = loc(fused[#loc45, #loc46])
#loc176 = loc(fused[#loc50, #loc51])
#loc177 = loc(fused[#loc53, #loc54])
#loc178 = loc(fused[#loc55, #loc56, #loc57, #loc46])
#loc179 = loc(fused[#loc60, #loc61])
#loc180 = loc(fused[#loc62, #loc63])
#loc181 = loc(fused[#loc64, #loc65])
#loc182 = loc(fused[#loc68, #loc69])
#loc183 = loc(fused[#loc67, #loc71])
#loc184 = loc(fused[#loc72, #loc63])
#loc185 = loc(fused[#loc75, #loc76])
#loc186 = loc(fused[#loc74, #loc73])
#loc187 = loc(fused[#loc80, #loc79])
#loc188 = loc(fused[#loc83, #loc84])
#loc189 = loc(fused[#loc85, #loc86])
#loc190 = loc(fused[#loc88, #loc89])
#loc191 = loc(fused[#loc93, #loc94])
#loc192 = loc(fused[#loc96, #loc97])
#loc193 = loc(fused[#loc99, #loc100])
#loc194 = loc(fused[#loc101, #loc102])
#loc195 = loc(fused[#loc103, #loc104])
#loc196 = loc(fused[#loc106, #loc105])
#loc197 = loc(fused[#loc107, #loc108])
#loc198 = loc(fused[#loc109, #loc110])
#loc199 = loc(fused[#loc111, #loc112, #loc113, #loc108])
#loc200 = loc(fused[#loc117, #loc118])
#loc201 = loc(fused[#loc119, #loc120])
#loc202 = loc(fused[#loc125, #loc126])
#loc203 = loc(fused[#loc127, #loc128])
#loc204 = loc(fused[#loc129, #loc130])
#loc205 = loc(fused[#loc132, #loc131])
#loc206 = loc(fused[#loc133, #loc134])
#loc207 = loc(fused[#loc135, #loc136])
#loc208 = loc(fused[#loc137, #loc134])
#loc209 = loc(fused[#loc141, #loc142])
#loc210 = loc(fused[#loc143, #loc144])
#loc211 = loc(fused[#loc149, #loc150])
