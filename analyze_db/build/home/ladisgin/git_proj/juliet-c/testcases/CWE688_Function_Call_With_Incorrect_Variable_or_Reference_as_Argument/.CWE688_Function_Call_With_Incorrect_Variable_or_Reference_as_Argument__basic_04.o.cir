!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument/CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @sprintf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc70)
  cir.func no_proto @CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc72)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intFive", init] {alignment = 4 : i64} loc(#loc73)
    cir.br ^bb1 loc(#loc74)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %3 ^bb2, ^bb5 loc(#loc75)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc76)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<5> : !s32i loc(#loc11)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc73)
    %5 = cir.get_global @sprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc18)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc19)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc3)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc3)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    %10 = cir.call @sprintf(%6, %8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc18)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc22)
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc13)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc13)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc7)
  } loc(#loc71)
  cir.func no_proto @CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc78)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc79)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    cir.return loc(#loc24)
  } loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc29)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc30)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc81)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intFive", init] {alignment = 4 : i64} loc(#loc82)
    cir.br ^bb1 loc(#loc83)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc84)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc29)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc29)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb6 loc(#loc41)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc85)
  ^bb4:  // pred: ^bb3
    %6 = cir.const #cir.int<5> : !s32i loc(#loc36)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc82)
    %7 = cir.get_global @sprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc46)
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc30)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc30)
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %12 = cir.call @sprintf(%8, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc46)
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    cir.br ^bb5 loc(#loc45)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc38)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc38)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc32)
  } loc(#loc80)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc87)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intFive", init] {alignment = 4 : i64} loc(#loc88)
    cir.br ^bb1 loc(#loc89)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc59)
    cir.brcond %3 ^bb2, ^bb5 loc(#loc90)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc91)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<5> : !s32i loc(#loc56)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc88)
    %5 = cir.get_global @sprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc63)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
    %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc65)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc65)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %10 = cir.call @sprintf(%6, %8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc63)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    cir.br ^bb4 loc(#loc62)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc58)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc58)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc52)
  } loc(#loc86)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument/CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":0:0)
#loc1 = loc("/usr/include/stdio.h":365:1)
#loc2 = loc("/usr/include/stdio.h":366:45)
#loc3 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":36:27)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":28:1)
#loc7 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":40:1)
#loc8 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":33:13)
#loc9 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":33:32)
#loc10 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":34:13)
#loc11 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":34:27)
#loc12 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":30:5)
#loc13 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":39:5)
#loc14 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":30:8)
#loc15 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":31:5)
#loc16 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":32:9)
#loc17 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":38:9)
#loc18 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":36:13)
#loc19 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":36:21)
#loc20 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":36:33)
#loc21 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":37:23)
#loc22 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":37:13)
#loc23 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":81:1)
#loc24 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":85:1)
#loc25 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":83:5)
#loc26 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":83:11)
#loc27 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":84:5)
#loc28 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":84:11)
#loc29 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":52:19)
#loc30 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":60:27)
#loc31 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":47:1)
#loc32 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":64:1)
#loc33 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":57:13)
#loc34 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":57:32)
#loc35 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":58:13)
#loc36 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":58:27)
#loc37 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":49:5)
#loc38 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":63:5)
#loc39 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":49:8)
#loc40 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":50:5)
#loc41 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":53:5)
#loc42 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":55:5)
#loc43 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":52:9)
#loc44 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":56:9)
#loc45 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":62:9)
#loc46 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":60:13)
#loc47 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":60:21)
#loc48 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":60:33)
#loc49 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":61:23)
#loc50 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":61:13)
#loc51 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":67:1)
#loc52 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":79:1)
#loc53 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":72:13)
#loc54 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":72:32)
#loc55 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":73:13)
#loc56 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":73:27)
#loc57 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":69:5)
#loc58 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":78:5)
#loc59 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":69:8)
#loc60 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":70:5)
#loc61 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":71:9)
#loc62 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":77:9)
#loc63 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":75:13)
#loc64 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":75:21)
#loc65 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":75:27)
#loc66 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":75:33)
#loc67 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":76:23)
#loc68 = loc("CWE688_Function_Call_With_Incorrect_Variable_or_Reference_as_Argument__basic_04.c":76:13)
#loc69 = loc(fused[#loc1, #loc2])
#loc70 = loc(fused[#loc4, #loc5])
#loc71 = loc(fused[#loc6, #loc7])
#loc72 = loc(fused[#loc8, #loc9])
#loc73 = loc(fused[#loc10, #loc11])
#loc74 = loc(fused[#loc12, #loc13])
#loc75 = loc(fused[#loc15, #loc13])
#loc76 = loc(fused[#loc16, #loc17])
#loc77 = loc(fused[#loc23, #loc24])
#loc78 = loc(fused[#loc25, #loc26])
#loc79 = loc(fused[#loc27, #loc28])
#loc80 = loc(fused[#loc31, #loc32])
#loc81 = loc(fused[#loc33, #loc34])
#loc82 = loc(fused[#loc35, #loc36])
#loc83 = loc(fused[#loc37, #loc38])
#loc84 = loc(fused[#loc40, #loc41, #loc42, #loc38])
#loc85 = loc(fused[#loc44, #loc45])
#loc86 = loc(fused[#loc51, #loc52])
#loc87 = loc(fused[#loc53, #loc54])
#loc88 = loc(fused[#loc55, #loc56])
#loc89 = loc(fused[#loc57, #loc58])
#loc90 = loc(fused[#loc60, #loc58])
#loc91 = loc(fused[#loc61, #loc62])
