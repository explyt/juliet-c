!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc633)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc634)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc635)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc636)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc637)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc638)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc639)
  cir.func private @close(!s32i) -> !s32i loc(#loc640)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc641)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc19)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc642)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc643)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc24)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc25)
  cir.func @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc645)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc30)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc646)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc34)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc649)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc650)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc651)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc652)
            %8 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc653)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc43)
            %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc43)
            cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc651)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc45)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc45)
            cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc652)
            cir.scope {
              cir.do {
                cir.scope {
                  %13 = cir.const #cir.int<2> : !s32i loc(#loc52)
                  %14 = cir.const #cir.int<1> : !u32i loc(#loc53)
                  %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc53)
                  %16 = cir.const #cir.int<6> : !u32i loc(#loc54)
                  %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc54)
                  %18 = cir.call @socket(%13, %15, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc55)
                  cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc656)
                  cir.scope {
                    %62 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc60)
                    %63 = cir.const #cir.int<1> : !s32i loc(#loc61)
                    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc61)
                    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc658)
                    cir.if %65 {
                      cir.break loc(#loc63)
                    } loc(#loc659)
                  } loc(#loc657)
                  %19 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc660)
                  %20 = cir.const #cir.int<0> : !s32i loc(#loc66)
                  %21 = cir.const #cir.int<16> : !u64i loc(#loc661)
                  cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc662)
                  %22 = cir.const #cir.int<2> : !s32i loc(#loc71)
                  %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc71)
                  %24 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
                  cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc663)
                  %25 = cir.const #cir.int<0> : !s32i loc(#loc74)
                  %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc74)
                  %27 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
                  %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
                  cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc664)
                  %29 = cir.const #cir.int<27015> : !s32i loc(#loc78)
                  %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc78)
                  %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc79)
                  %32 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
                  cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc665)
                  cir.scope {
                    %62 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc85)
                    %63 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc667)
                    %64 = cir.const #cir.int<16> : !u64i loc(#loc668)
                    %65 = cir.cast(integral, %64 : !u64i), !u32i loc(#loc668)
                    %66 = cir.call @bind(%62, %63, %65) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc90)
                    %67 = cir.const #cir.int<1> : !s32i loc(#loc91)
                    %68 = cir.unary(minus, %67) nsw : !s32i, !s32i loc(#loc91)
                    %69 = cir.cmp(eq, %66, %68) : !s32i, !cir.bool loc(#loc669)
                    cir.if %69 {
                      cir.break loc(#loc93)
                    } loc(#loc670)
                  } loc(#loc666)
                  cir.scope {
                    %62 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                    %63 = cir.const #cir.int<5> : !s32i loc(#loc97)
                    %64 = cir.call @listen(%62, %63) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc98)
                    %65 = cir.const #cir.int<1> : !s32i loc(#loc99)
                    %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc99)
                    %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc672)
                    cir.if %67 {
                      cir.break loc(#loc101)
                    } loc(#loc673)
                  } loc(#loc671)
                  %33 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                  %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc103)
                  %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc104)
                  %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc105)
                  cir.store %36, %7 : !s32i, !cir.ptr<!s32i> loc(#loc674)
                  cir.scope {
                    %62 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc110)
                    %63 = cir.const #cir.int<1> : !s32i loc(#loc111)
                    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc111)
                    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc676)
                    cir.if %65 {
                      cir.break loc(#loc113)
                    } loc(#loc677)
                  } loc(#loc675)
                  %37 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                  %38 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc115)
                  %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
                  %40 = cir.const #cir.int<3> : !s32i loc(#loc116)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc116)
                  %42 = cir.const #cir.int<8> : !u64i loc(#loc116)
                  %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc116)
                  %44 = cir.const #cir.int<2> : !s32i loc(#loc116)
                  %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc116)
                  %46 = cir.binop(add, %43, %45) : !u64i loc(#loc116)
                  %47 = cir.const #cir.int<1> : !s32i loc(#loc117)
                  %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc117)
                  %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc678)
                  %50 = cir.const #cir.int<0> : !s32i loc(#loc118)
                  %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc119)
                  %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc119)
                  cir.store %52, %4 : !s32i, !cir.ptr<!s32i> loc(#loc679)
                  cir.scope {
                    %62 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc124)
                    %63 = cir.const #cir.int<1> : !s32i loc(#loc125)
                    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc125)
                    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc681)
                    %66 = cir.ternary(%65, true {
                      %67 = cir.const #true loc(#loc126)
                      cir.yield %67 : !cir.bool loc(#loc126)
                    }, false {
                      %67 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc127)
                      %68 = cir.const #cir.int<0> : !s32i loc(#loc128)
                      %69 = cir.cmp(eq, %67, %68) : !s32i, !cir.bool loc(#loc682)
                      %70 = cir.ternary(%69, true {
                        %71 = cir.const #true loc(#loc126)
                        cir.yield %71 : !cir.bool loc(#loc126)
                      }, false {
                        %71 = cir.const #false loc(#loc126)
                        cir.yield %71 : !cir.bool loc(#loc126)
                      }) : (!cir.bool) -> !cir.bool loc(#loc126)
                      cir.yield %70 : !cir.bool loc(#loc126)
                    }) : (!cir.bool) -> !cir.bool loc(#loc126)
                    cir.if %66 {
                      cir.break loc(#loc130)
                    } loc(#loc683)
                  } loc(#loc680)
                  %53 = cir.const #cir.int<0> : !s8i loc(#loc131)
                  %54 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc132)
                  %55 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc133)
                  %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc133)
                  cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc684)
                  %57 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc134)
                  %58 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc135)
                  %59 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
                  %60 = cir.const #cir.int<0> : !s32i loc(#loc137)
                  %61 = cir.call @__isoc23_strtoul(%58, %59, %60) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc134)
                  cir.store %61, %0 : !u64i, !cir.ptr<!u64i> loc(#loc685)
                } loc(#loc655)
                cir.yield loc(#loc49)
              } while {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc140)
                %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc140)
                cir.condition(%14) loc(#loc140)
              } loc(#loc654)
            } loc(#loc654)
            cir.scope {
              %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc143)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc144)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc144)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc687)
              cir.if %16 {
                %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc146)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc147)
              } loc(#loc688)
            } loc(#loc686)
            cir.scope {
              %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc150)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc151)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc151)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc690)
              cir.if %16 {
                %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc153)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc154)
              } loc(#loc691)
            } loc(#loc689)
          } loc(#loc648)
          cir.break loc(#loc155)
        } loc(#loc35)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc19)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc19)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc157)
          cir.break loc(#loc158)
        } loc(#loc156)
        cir.yield loc(#loc32)
      } loc(#loc32)
    } loc(#loc647)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc161)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc694)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc169)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc696)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc697)
              cir.if %7 {
                %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc175)
                %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc176)
                %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc699)
                cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc700)
                %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc180)
                %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
                %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc24)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc24)
                %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc180)
                %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc182)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc183)
                %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc184)
                cir.delete.array %17 : <!s8i> loc(#loc184)
              } else {
                %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc25)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc25)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc185)
              } loc(#loc698)
            } loc(#loc695)
          } loc(#loc693)
          cir.break loc(#loc186)
        } loc(#loc162)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc188)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc188)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc189)
          cir.break loc(#loc190)
        } loc(#loc187)
        cir.yield loc(#loc159)
      } loc(#loc159)
    } loc(#loc692)
    cir.return loc(#loc27)
  } loc(#loc644)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc191)
  cir.func internal private @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc702)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc196)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc196)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc703)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc200)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc706)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc707)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc708)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc709)
            %8 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc710)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc209)
            %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc209)
            cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc708)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc211)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc211)
            cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc709)
            cir.scope {
              cir.do {
                cir.scope {
                  %13 = cir.const #cir.int<2> : !s32i loc(#loc218)
                  %14 = cir.const #cir.int<1> : !u32i loc(#loc219)
                  %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc219)
                  %16 = cir.const #cir.int<6> : !u32i loc(#loc220)
                  %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc220)
                  %18 = cir.call @socket(%13, %15, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc221)
                  cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc713)
                  cir.scope {
                    %62 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc226)
                    %63 = cir.const #cir.int<1> : !s32i loc(#loc227)
                    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc227)
                    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc715)
                    cir.if %65 {
                      cir.break loc(#loc229)
                    } loc(#loc716)
                  } loc(#loc714)
                  %19 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc717)
                  %20 = cir.const #cir.int<0> : !s32i loc(#loc232)
                  %21 = cir.const #cir.int<16> : !u64i loc(#loc718)
                  cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc719)
                  %22 = cir.const #cir.int<2> : !s32i loc(#loc237)
                  %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc237)
                  %24 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
                  cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc720)
                  %25 = cir.const #cir.int<0> : !s32i loc(#loc239)
                  %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc239)
                  %27 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
                  %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
                  cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc721)
                  %29 = cir.const #cir.int<27015> : !s32i loc(#loc241)
                  %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc241)
                  %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc242)
                  %32 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
                  cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc722)
                  cir.scope {
                    %62 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc247)
                    %63 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc724)
                    %64 = cir.const #cir.int<16> : !u64i loc(#loc725)
                    %65 = cir.cast(integral, %64 : !u64i), !u32i loc(#loc725)
                    %66 = cir.call @bind(%62, %63, %65) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc252)
                    %67 = cir.const #cir.int<1> : !s32i loc(#loc253)
                    %68 = cir.unary(minus, %67) nsw : !s32i, !s32i loc(#loc253)
                    %69 = cir.cmp(eq, %66, %68) : !s32i, !cir.bool loc(#loc726)
                    cir.if %69 {
                      cir.break loc(#loc255)
                    } loc(#loc727)
                  } loc(#loc723)
                  cir.scope {
                    %62 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc258)
                    %63 = cir.const #cir.int<5> : !s32i loc(#loc259)
                    %64 = cir.call @listen(%62, %63) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc260)
                    %65 = cir.const #cir.int<1> : !s32i loc(#loc261)
                    %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc261)
                    %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc729)
                    cir.if %67 {
                      cir.break loc(#loc263)
                    } loc(#loc730)
                  } loc(#loc728)
                  %33 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc264)
                  %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc265)
                  %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc266)
                  %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc267)
                  cir.store %36, %7 : !s32i, !cir.ptr<!s32i> loc(#loc731)
                  cir.scope {
                    %62 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc272)
                    %63 = cir.const #cir.int<1> : !s32i loc(#loc273)
                    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc273)
                    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc733)
                    cir.if %65 {
                      cir.break loc(#loc275)
                    } loc(#loc734)
                  } loc(#loc732)
                  %37 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc276)
                  %38 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc277)
                  %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc277)
                  %40 = cir.const #cir.int<3> : !s32i loc(#loc278)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc278)
                  %42 = cir.const #cir.int<8> : !u64i loc(#loc278)
                  %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc278)
                  %44 = cir.const #cir.int<2> : !s32i loc(#loc278)
                  %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc278)
                  %46 = cir.binop(add, %43, %45) : !u64i loc(#loc278)
                  %47 = cir.const #cir.int<1> : !s32i loc(#loc279)
                  %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc279)
                  %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc735)
                  %50 = cir.const #cir.int<0> : !s32i loc(#loc280)
                  %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc281)
                  %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc281)
                  cir.store %52, %4 : !s32i, !cir.ptr<!s32i> loc(#loc736)
                  cir.scope {
                    %62 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc286)
                    %63 = cir.const #cir.int<1> : !s32i loc(#loc287)
                    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc287)
                    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc738)
                    %66 = cir.ternary(%65, true {
                      %67 = cir.const #true loc(#loc288)
                      cir.yield %67 : !cir.bool loc(#loc288)
                    }, false {
                      %67 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc289)
                      %68 = cir.const #cir.int<0> : !s32i loc(#loc290)
                      %69 = cir.cmp(eq, %67, %68) : !s32i, !cir.bool loc(#loc739)
                      %70 = cir.ternary(%69, true {
                        %71 = cir.const #true loc(#loc288)
                        cir.yield %71 : !cir.bool loc(#loc288)
                      }, false {
                        %71 = cir.const #false loc(#loc288)
                        cir.yield %71 : !cir.bool loc(#loc288)
                      }) : (!cir.bool) -> !cir.bool loc(#loc288)
                      cir.yield %70 : !cir.bool loc(#loc288)
                    }) : (!cir.bool) -> !cir.bool loc(#loc288)
                    cir.if %66 {
                      cir.break loc(#loc292)
                    } loc(#loc740)
                  } loc(#loc737)
                  %53 = cir.const #cir.int<0> : !s8i loc(#loc293)
                  %54 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc294)
                  %55 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc295)
                  %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc295)
                  cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc741)
                  %57 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc296)
                  %58 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc297)
                  %59 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc298)
                  %60 = cir.const #cir.int<0> : !s32i loc(#loc299)
                  %61 = cir.call @__isoc23_strtoul(%58, %59, %60) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc296)
                  cir.store %61, %0 : !u64i, !cir.ptr<!u64i> loc(#loc742)
                } loc(#loc712)
                cir.yield loc(#loc215)
              } while {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc302)
                %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc302)
                cir.condition(%14) loc(#loc302)
              } loc(#loc711)
            } loc(#loc711)
            cir.scope {
              %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc305)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc306)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc306)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc744)
              cir.if %16 {
                %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc308)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc309)
              } loc(#loc745)
            } loc(#loc743)
            cir.scope {
              %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc312)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc313)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc313)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc747)
              cir.if %16 {
                %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc315)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc316)
              } loc(#loc748)
            } loc(#loc746)
          } loc(#loc705)
          cir.break loc(#loc317)
        } loc(#loc201)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc319)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc319)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc320)
          cir.break loc(#loc321)
        } loc(#loc318)
        cir.yield loc(#loc198)
      } loc(#loc198)
    } loc(#loc704)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc324)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc326)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc326)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc327)
          cir.break loc(#loc328)
        } loc(#loc325)
        cir.case(default, []) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc751)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc336)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc753)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc754)
              %8 = cir.ternary(%7, true {
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc340)
                %10 = cir.const #cir.int<100> : !s32i loc(#loc341)
                %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc341)
                %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc755)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc339)
                  cir.yield %14 : !cir.bool loc(#loc339)
                }, false {
                  %14 = cir.const #false loc(#loc339)
                  cir.yield %14 : !cir.bool loc(#loc339)
                }) : (!cir.bool) -> !cir.bool loc(#loc339)
                cir.yield %13 : !cir.bool loc(#loc339)
              }, false {
                %9 = cir.const #false loc(#loc339)
                cir.yield %9 : !cir.bool loc(#loc339)
              }) : (!cir.bool) -> !cir.bool loc(#loc339)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc345)
                %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc346)
                %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc757)
                cir.store %11, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc758)
                %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc350)
                %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc351)
                %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc352)
                %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc352)
                %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc350)
                %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc353)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc354)
                %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc355)
                cir.delete.array %18 : <!s8i> loc(#loc355)
              } else {
                %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc191)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc191)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc356)
              } loc(#loc756)
            } loc(#loc752)
          } loc(#loc750)
          cir.break loc(#loc357)
        } loc(#loc329)
        cir.yield loc(#loc322)
      } loc(#loc322)
    } loc(#loc749)
    cir.return loc(#loc193)
  } loc(#loc701)
  cir.func internal private @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc760)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc362)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc362)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc761)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc366)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc764)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc765)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc766)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc767)
            %8 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc768)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc375)
            %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc375)
            cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc766)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc377)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc377)
            cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc767)
            cir.scope {
              cir.do {
                cir.scope {
                  %13 = cir.const #cir.int<2> : !s32i loc(#loc384)
                  %14 = cir.const #cir.int<1> : !u32i loc(#loc385)
                  %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc385)
                  %16 = cir.const #cir.int<6> : !u32i loc(#loc386)
                  %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc386)
                  %18 = cir.call @socket(%13, %15, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc387)
                  cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc771)
                  cir.scope {
                    %62 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc392)
                    %63 = cir.const #cir.int<1> : !s32i loc(#loc393)
                    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc393)
                    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc773)
                    cir.if %65 {
                      cir.break loc(#loc395)
                    } loc(#loc774)
                  } loc(#loc772)
                  %19 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc775)
                  %20 = cir.const #cir.int<0> : !s32i loc(#loc398)
                  %21 = cir.const #cir.int<16> : !u64i loc(#loc776)
                  cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc777)
                  %22 = cir.const #cir.int<2> : !s32i loc(#loc403)
                  %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc403)
                  %24 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
                  cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc778)
                  %25 = cir.const #cir.int<0> : !s32i loc(#loc405)
                  %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc405)
                  %27 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
                  %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
                  cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc779)
                  %29 = cir.const #cir.int<27015> : !s32i loc(#loc407)
                  %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc407)
                  %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc408)
                  %32 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
                  cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc780)
                  cir.scope {
                    %62 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc413)
                    %63 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc782)
                    %64 = cir.const #cir.int<16> : !u64i loc(#loc783)
                    %65 = cir.cast(integral, %64 : !u64i), !u32i loc(#loc783)
                    %66 = cir.call @bind(%62, %63, %65) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc418)
                    %67 = cir.const #cir.int<1> : !s32i loc(#loc419)
                    %68 = cir.unary(minus, %67) nsw : !s32i, !s32i loc(#loc419)
                    %69 = cir.cmp(eq, %66, %68) : !s32i, !cir.bool loc(#loc784)
                    cir.if %69 {
                      cir.break loc(#loc421)
                    } loc(#loc785)
                  } loc(#loc781)
                  cir.scope {
                    %62 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc424)
                    %63 = cir.const #cir.int<5> : !s32i loc(#loc425)
                    %64 = cir.call @listen(%62, %63) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc426)
                    %65 = cir.const #cir.int<1> : !s32i loc(#loc427)
                    %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc427)
                    %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc787)
                    cir.if %67 {
                      cir.break loc(#loc429)
                    } loc(#loc788)
                  } loc(#loc786)
                  %33 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc430)
                  %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc431)
                  %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc432)
                  %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc433)
                  cir.store %36, %7 : !s32i, !cir.ptr<!s32i> loc(#loc789)
                  cir.scope {
                    %62 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc438)
                    %63 = cir.const #cir.int<1> : !s32i loc(#loc439)
                    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc439)
                    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc791)
                    cir.if %65 {
                      cir.break loc(#loc441)
                    } loc(#loc792)
                  } loc(#loc790)
                  %37 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc442)
                  %38 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc443)
                  %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc443)
                  %40 = cir.const #cir.int<3> : !s32i loc(#loc444)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc444)
                  %42 = cir.const #cir.int<8> : !u64i loc(#loc444)
                  %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc444)
                  %44 = cir.const #cir.int<2> : !s32i loc(#loc444)
                  %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc444)
                  %46 = cir.binop(add, %43, %45) : !u64i loc(#loc444)
                  %47 = cir.const #cir.int<1> : !s32i loc(#loc445)
                  %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc445)
                  %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc793)
                  %50 = cir.const #cir.int<0> : !s32i loc(#loc446)
                  %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc447)
                  %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc447)
                  cir.store %52, %4 : !s32i, !cir.ptr<!s32i> loc(#loc794)
                  cir.scope {
                    %62 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc452)
                    %63 = cir.const #cir.int<1> : !s32i loc(#loc453)
                    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc453)
                    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc796)
                    %66 = cir.ternary(%65, true {
                      %67 = cir.const #true loc(#loc454)
                      cir.yield %67 : !cir.bool loc(#loc454)
                    }, false {
                      %67 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc455)
                      %68 = cir.const #cir.int<0> : !s32i loc(#loc456)
                      %69 = cir.cmp(eq, %67, %68) : !s32i, !cir.bool loc(#loc797)
                      %70 = cir.ternary(%69, true {
                        %71 = cir.const #true loc(#loc454)
                        cir.yield %71 : !cir.bool loc(#loc454)
                      }, false {
                        %71 = cir.const #false loc(#loc454)
                        cir.yield %71 : !cir.bool loc(#loc454)
                      }) : (!cir.bool) -> !cir.bool loc(#loc454)
                      cir.yield %70 : !cir.bool loc(#loc454)
                    }) : (!cir.bool) -> !cir.bool loc(#loc454)
                    cir.if %66 {
                      cir.break loc(#loc458)
                    } loc(#loc798)
                  } loc(#loc795)
                  %53 = cir.const #cir.int<0> : !s8i loc(#loc459)
                  %54 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc460)
                  %55 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc461)
                  %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc461)
                  cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc799)
                  %57 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc462)
                  %58 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc463)
                  %59 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc464)
                  %60 = cir.const #cir.int<0> : !s32i loc(#loc465)
                  %61 = cir.call @__isoc23_strtoul(%58, %59, %60) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc462)
                  cir.store %61, %0 : !u64i, !cir.ptr<!u64i> loc(#loc800)
                } loc(#loc770)
                cir.yield loc(#loc381)
              } while {
                %13 = cir.const #cir.int<0> : !s32i loc(#loc468)
                %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc468)
                cir.condition(%14) loc(#loc468)
              } loc(#loc769)
            } loc(#loc769)
            cir.scope {
              %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc471)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc472)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc472)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc802)
              cir.if %16 {
                %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc474)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc475)
              } loc(#loc803)
            } loc(#loc801)
            cir.scope {
              %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc478)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc479)
              %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc479)
              %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc805)
              cir.if %16 {
                %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc481)
                %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc482)
              } loc(#loc806)
            } loc(#loc804)
          } loc(#loc763)
          cir.break loc(#loc483)
        } loc(#loc367)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc485)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc485)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc486)
          cir.break loc(#loc487)
        } loc(#loc484)
        cir.yield loc(#loc364)
      } loc(#loc364)
    } loc(#loc762)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc490)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc809)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc498)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc811)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc812)
              %8 = cir.ternary(%7, true {
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc502)
                %10 = cir.const #cir.int<100> : !s32i loc(#loc503)
                %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc503)
                %12 = cir.cmp(lt, %9, %11) : !u64i, !cir.bool loc(#loc813)
                %13 = cir.ternary(%12, true {
                  %14 = cir.const #true loc(#loc501)
                  cir.yield %14 : !cir.bool loc(#loc501)
                }, false {
                  %14 = cir.const #false loc(#loc501)
                  cir.yield %14 : !cir.bool loc(#loc501)
                }) : (!cir.bool) -> !cir.bool loc(#loc501)
                cir.yield %13 : !cir.bool loc(#loc501)
              }, false {
                %9 = cir.const #false loc(#loc501)
                cir.yield %9 : !cir.bool loc(#loc501)
              }) : (!cir.bool) -> !cir.bool loc(#loc501)
              cir.if %8 {
                %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc507)
                %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc508)
                %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc815)
                cir.store %11, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc816)
                %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc512)
                %13 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc513)
                %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc514)
                %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc514)
                %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc512)
                %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc515)
                cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc516)
                %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc517)
                cir.delete.array %18 : <!s8i> loc(#loc517)
              } else {
                %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc518)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc518)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc519)
              } loc(#loc814)
            } loc(#loc810)
          } loc(#loc808)
          cir.break loc(#loc520)
        } loc(#loc491)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc522)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc522)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc523)
          cir.break loc(#loc524)
        } loc(#loc521)
        cir.yield loc(#loc488)
      } loc(#loc488)
    } loc(#loc807)
    cir.return loc(#loc359)
  } loc(#loc759)
  cir.func internal private @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc818)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc529)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc529)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc819)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc533)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc535)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc535)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc536)
          cir.break loc(#loc537)
        } loc(#loc534)
        cir.case(default, []) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc539)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc539)
          cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc821)
          cir.break loc(#loc541)
        } loc(#loc538)
        cir.yield loc(#loc531)
      } loc(#loc531)
    } loc(#loc820)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc544)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc824)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc552)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc826)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc827)
              cir.if %7 {
                %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc558)
                %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc559)
                %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc829)
                cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc830)
                %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc563)
                %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc564)
                %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc565)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc565)
                %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc563)
                %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc566)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc567)
                %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc568)
                cir.delete.array %17 : <!s8i> loc(#loc568)
              } else {
                %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc569)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc569)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc570)
              } loc(#loc828)
            } loc(#loc825)
          } loc(#loc823)
          cir.break loc(#loc571)
        } loc(#loc545)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc573)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc573)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc574)
          cir.break loc(#loc575)
        } loc(#loc572)
        cir.yield loc(#loc542)
      } loc(#loc542)
    } loc(#loc822)
    cir.return loc(#loc526)
  } loc(#loc817)
  cir.func internal private @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc832)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc580)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc580)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc833)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc584)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc586)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc586)
          cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc835)
          cir.break loc(#loc588)
        } loc(#loc585)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc590)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc590)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc591)
          cir.break loc(#loc592)
        } loc(#loc589)
        cir.yield loc(#loc582)
      } loc(#loc582)
    } loc(#loc834)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc595)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc838)
            cir.scope {
              %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc603)
              %6 = cir.const #cir.int<5> : !u64i loc(#loc840)
              %7 = cir.cmp(gt, %5, %6) : !u64i, !cir.bool loc(#loc841)
              cir.if %7 {
                %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc609)
                %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc610)
                %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc843)
                cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc844)
                %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc614)
                %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc615)
                %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc616)
                %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc616)
                %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc614)
                %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc617)
                cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc618)
                %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc619)
                cir.delete.array %17 : <!s8i> loc(#loc619)
              } else {
                %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc620)
                %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc620)
                cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc621)
              } loc(#loc842)
            } loc(#loc839)
          } loc(#loc837)
          cir.break loc(#loc622)
        } loc(#loc596)
        cir.case(default, []) {
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc624)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc624)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc625)
          cir.break loc(#loc626)
        } loc(#loc623)
        cir.yield loc(#loc593)
      } loc(#loc593)
    } loc(#loc836)
    cir.return loc(#loc577)
  } loc(#loc831)
  cir.func @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15L8goodB2G1Ev() : () -> () loc(#loc629)
    cir.call @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15L8goodB2G2Ev() : () -> () loc(#loc630)
    cir.call @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15L8goodG2B1Ev() : () -> () loc(#loc631)
    cir.call @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15L8goodG2B2Ev() : () -> () loc(#loc632)
    cir.return loc(#loc628)
  } loc(#loc845)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":219:1)
#loc14 = loc("/usr/include/stdlib.h":223:6)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":132:19)
#loc20 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc21 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc22 = loc("/usr/include/string.h":141:1)
#loc23 = loc("/usr/include/string.h":142:14)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":147:30)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":153:23)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":52:1)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":162:1)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":54:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":54:12)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":56:12)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":56:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":57:5)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":134:5)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":57:12)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":59:5)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":60:5)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":128:5)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":65:9)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":65:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":66:9)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":66:28)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":67:9)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":67:31)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":68:9)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":68:31)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":69:9)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":69:41)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":70:9)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":113:17)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":71:9)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":112:9)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":80:35)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":80:44)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":80:57)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":80:28)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":80:13)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":80:68)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":81:13)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":84:13)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":81:17)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":81:33)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":82:13)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":83:17)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":85:20)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":85:21)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":85:30)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":85:33)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":85:47)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":85:13)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":85:48)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":86:34)
#loc72 = loc("/usr/include/netinet/in.h":249:5)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":86:13)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":87:39)
#loc75 = loc("/usr/include/netinet/in.h":251:20)
#loc76 = loc("/usr/include/netinet/in.h":33:15)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":87:13)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":88:38)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":88:32)
#loc80 = loc("/usr/include/netinet/in.h":250:15)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":88:13)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":88:46)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":89:13)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":92:13)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":89:22)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":89:54)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":89:55)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":89:64)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":89:78)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":89:17)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":89:84)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":90:13)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":91:17)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":93:13)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":96:13)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":93:24)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":93:38)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":93:17)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":93:57)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":94:13)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":95:17)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":97:35)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":97:49)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":97:55)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":97:28)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":97:13)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":97:59)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":98:13)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":101:13)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":98:17)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":98:33)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":99:13)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":100:17)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":103:31)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":103:45)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":103:58)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":103:76)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":103:79)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":103:26)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":103:13)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":103:80)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":104:13)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":107:13)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":104:17)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":104:31)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":104:44)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":104:47)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":104:61)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":105:13)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":106:17)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":109:39)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":109:25)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":109:13)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":111:20)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":111:28)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":111:41)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":111:47)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":111:13)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":111:48)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":113:16)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":114:9)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":117:9)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":114:13)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":114:29)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":115:9)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":116:26)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":116:13)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":118:9)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":121:9)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":118:13)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":118:29)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":119:9)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":120:26)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":120:13)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":129:5)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":130:5)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":132:9)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":133:9)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":135:5)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":161:5)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":135:12)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":137:5)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":138:5)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":155:5)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":139:9)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":139:16)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":143:9)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":154:9)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":143:13)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":143:20)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":143:39)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":144:9)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":150:9)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":152:9)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":145:33)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":52:6)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":145:24)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":145:37)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":145:13)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":147:13)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":147:20)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":148:23)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":148:13)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":149:23)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":153:13)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":156:5)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":157:5)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":159:19)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":159:9)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":160:9)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":274:23)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":169:1)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":279:1)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":171:5)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":171:12)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":173:12)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":173:5)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":174:5)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":251:5)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":174:12)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":176:5)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":177:5)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":245:5)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":182:9)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":182:13)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":183:9)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":183:28)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":184:9)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":184:31)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":185:9)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":185:31)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":186:9)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":186:41)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":187:9)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":230:17)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":188:9)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":229:9)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":197:35)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":197:44)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":197:57)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":197:28)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":197:13)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":197:68)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":198:13)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":201:13)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":198:17)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":198:33)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":199:13)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":200:17)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":202:20)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":202:21)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":202:30)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":202:33)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":202:47)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":202:13)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":202:48)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":203:34)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":203:13)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":204:39)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":204:13)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":205:38)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":205:32)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":205:13)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":205:46)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":206:13)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":209:13)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":206:22)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":206:54)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":206:55)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":206:64)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":206:78)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":206:17)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":206:84)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":207:13)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":208:17)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":210:13)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":213:13)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":210:24)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":210:38)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":210:17)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":210:57)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":211:13)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":212:17)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":214:35)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":214:49)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":214:55)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":214:28)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":214:13)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":214:59)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":215:13)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":218:13)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":215:17)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":215:33)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":216:13)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":217:17)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":220:31)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":220:45)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":220:58)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":220:76)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":220:79)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":220:26)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":220:13)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":220:80)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":221:13)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":224:13)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":221:17)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":221:31)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":221:44)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":221:47)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":221:61)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":222:13)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":223:17)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":226:39)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":226:25)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":226:13)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":228:20)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":228:28)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":228:41)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":228:47)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":228:13)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":228:48)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":230:16)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":231:9)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":234:9)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":231:13)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":231:29)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":232:9)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":233:26)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":233:13)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":235:9)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":238:9)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":235:13)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":235:29)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":236:9)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":237:26)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":237:13)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":246:5)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":247:5)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":249:19)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":249:9)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":250:9)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":252:5)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":278:5)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":252:12)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":254:5)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":256:19)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":256:9)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":257:9)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":258:5)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":259:5)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":276:5)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":260:9)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":260:16)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":264:9)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":275:9)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":264:13)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":264:20)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":264:39)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":264:41)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":264:44)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":264:51)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":265:9)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":271:9)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":273:9)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":266:33)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":169:13)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":266:24)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":266:37)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":266:13)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":268:13)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":268:20)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":268:30)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":269:23)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":269:13)
#loc355 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":270:23)
#loc356 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":274:13)
#loc357 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":277:5)
#loc358 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":282:1)
#loc359 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":392:1)
#loc360 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":284:5)
#loc361 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":284:12)
#loc362 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":286:12)
#loc363 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":286:5)
#loc364 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":287:5)
#loc365 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":364:5)
#loc366 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":287:12)
#loc367 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":289:5)
#loc368 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":290:5)
#loc369 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":358:5)
#loc370 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":295:9)
#loc371 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":295:13)
#loc372 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":296:9)
#loc373 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":296:28)
#loc374 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":297:9)
#loc375 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":297:31)
#loc376 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":298:9)
#loc377 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":298:31)
#loc378 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":299:9)
#loc379 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":299:41)
#loc380 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":300:9)
#loc381 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":343:17)
#loc382 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":301:9)
#loc383 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":342:9)
#loc384 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":310:35)
#loc385 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":310:44)
#loc386 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":310:57)
#loc387 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":310:28)
#loc388 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":310:13)
#loc389 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":310:68)
#loc390 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":311:13)
#loc391 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":314:13)
#loc392 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":311:17)
#loc393 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":311:33)
#loc394 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":312:13)
#loc395 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":313:17)
#loc396 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":315:20)
#loc397 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":315:21)
#loc398 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":315:30)
#loc399 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":315:33)
#loc400 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":315:47)
#loc401 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":315:13)
#loc402 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":315:48)
#loc403 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":316:34)
#loc404 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":316:13)
#loc405 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":317:39)
#loc406 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":317:13)
#loc407 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":318:38)
#loc408 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":318:32)
#loc409 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":318:13)
#loc410 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":318:46)
#loc411 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":319:13)
#loc412 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":322:13)
#loc413 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":319:22)
#loc414 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":319:54)
#loc415 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":319:55)
#loc416 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":319:64)
#loc417 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":319:78)
#loc418 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":319:17)
#loc419 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":319:84)
#loc420 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":320:13)
#loc421 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":321:17)
#loc422 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":323:13)
#loc423 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":326:13)
#loc424 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":323:24)
#loc425 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":323:38)
#loc426 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":323:17)
#loc427 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":323:57)
#loc428 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":324:13)
#loc429 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":325:17)
#loc430 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":327:35)
#loc431 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":327:49)
#loc432 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":327:55)
#loc433 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":327:28)
#loc434 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":327:13)
#loc435 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":327:59)
#loc436 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":328:13)
#loc437 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":331:13)
#loc438 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":328:17)
#loc439 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":328:33)
#loc440 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":329:13)
#loc441 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":330:17)
#loc442 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":333:31)
#loc443 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":333:45)
#loc444 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":333:58)
#loc445 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":333:76)
#loc446 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":333:79)
#loc447 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":333:26)
#loc448 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":333:13)
#loc449 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":333:80)
#loc450 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":334:13)
#loc451 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":337:13)
#loc452 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":334:17)
#loc453 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":334:31)
#loc454 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":334:44)
#loc455 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":334:47)
#loc456 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":334:61)
#loc457 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":335:13)
#loc458 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":336:17)
#loc459 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":339:39)
#loc460 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":339:25)
#loc461 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":339:13)
#loc462 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":341:20)
#loc463 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":341:28)
#loc464 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":341:41)
#loc465 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":341:47)
#loc466 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":341:13)
#loc467 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":341:48)
#loc468 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":343:16)
#loc469 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":344:9)
#loc470 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":347:9)
#loc471 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":344:13)
#loc472 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":344:29)
#loc473 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":345:9)
#loc474 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":346:26)
#loc475 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":346:13)
#loc476 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":348:9)
#loc477 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":351:9)
#loc478 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":348:13)
#loc479 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":348:29)
#loc480 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":349:9)
#loc481 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":350:26)
#loc482 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":350:13)
#loc483 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":359:5)
#loc484 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":360:5)
#loc485 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":362:19)
#loc486 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":362:9)
#loc487 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":363:9)
#loc488 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":365:5)
#loc489 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":391:5)
#loc490 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":365:12)
#loc491 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":367:5)
#loc492 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":368:5)
#loc493 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":385:5)
#loc494 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":369:9)
#loc495 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":369:16)
#loc496 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":373:9)
#loc497 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":384:9)
#loc498 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":373:13)
#loc499 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":373:20)
#loc500 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":373:39)
#loc501 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":373:41)
#loc502 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":373:44)
#loc503 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":373:51)
#loc504 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":374:9)
#loc505 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":380:9)
#loc506 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":382:9)
#loc507 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":375:33)
#loc508 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":282:13)
#loc509 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":375:24)
#loc510 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":375:37)
#loc511 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":375:13)
#loc512 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":377:13)
#loc513 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":377:20)
#loc514 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":377:30)
#loc515 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":378:23)
#loc516 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":378:13)
#loc517 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":379:23)
#loc518 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":383:23)
#loc519 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":383:13)
#loc520 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":386:5)
#loc521 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":387:5)
#loc522 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":389:19)
#loc523 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":389:9)
#loc524 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":390:9)
#loc525 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":395:1)
#loc526 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":438:1)
#loc527 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":397:5)
#loc528 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":397:12)
#loc529 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":399:12)
#loc530 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":399:5)
#loc531 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":400:5)
#loc532 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":410:5)
#loc533 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":400:12)
#loc534 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":402:5)
#loc535 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":404:19)
#loc536 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":404:9)
#loc537 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":405:9)
#loc538 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":406:5)
#loc539 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":408:16)
#loc540 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":408:9)
#loc541 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":409:9)
#loc542 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":411:5)
#loc543 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":437:5)
#loc544 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":411:12)
#loc545 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":413:5)
#loc546 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":414:5)
#loc547 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":431:5)
#loc548 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":415:9)
#loc549 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":415:16)
#loc550 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":419:9)
#loc551 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":430:9)
#loc552 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":419:13)
#loc553 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":419:20)
#loc554 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":419:39)
#loc555 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":420:9)
#loc556 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":426:9)
#loc557 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":428:9)
#loc558 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":421:33)
#loc559 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":395:13)
#loc560 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":421:24)
#loc561 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":421:37)
#loc562 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":421:13)
#loc563 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":423:13)
#loc564 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":423:20)
#loc565 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":423:30)
#loc566 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":424:23)
#loc567 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":424:13)
#loc568 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":425:23)
#loc569 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":429:23)
#loc570 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":429:13)
#loc571 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":432:5)
#loc572 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":433:5)
#loc573 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":435:19)
#loc574 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":435:9)
#loc575 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":436:9)
#loc576 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":441:1)
#loc577 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":484:1)
#loc578 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":443:5)
#loc579 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":443:12)
#loc580 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":445:12)
#loc581 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":445:5)
#loc582 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":446:5)
#loc583 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":456:5)
#loc584 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":446:12)
#loc585 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":448:5)
#loc586 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":450:16)
#loc587 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":450:9)
#loc588 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":451:9)
#loc589 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":452:5)
#loc590 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":454:19)
#loc591 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":454:9)
#loc592 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":455:9)
#loc593 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":457:5)
#loc594 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":483:5)
#loc595 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":457:12)
#loc596 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":459:5)
#loc597 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":460:5)
#loc598 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":477:5)
#loc599 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":461:9)
#loc600 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":461:16)
#loc601 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":465:9)
#loc602 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":476:9)
#loc603 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":465:13)
#loc604 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":465:20)
#loc605 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":465:39)
#loc606 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":466:9)
#loc607 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":472:9)
#loc608 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":474:9)
#loc609 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":467:33)
#loc610 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":441:13)
#loc611 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":467:24)
#loc612 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":467:37)
#loc613 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":467:13)
#loc614 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":469:13)
#loc615 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":469:20)
#loc616 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":469:30)
#loc617 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":470:23)
#loc618 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":470:13)
#loc619 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":471:23)
#loc620 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":475:23)
#loc621 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":475:13)
#loc622 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":478:5)
#loc623 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":479:5)
#loc624 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":481:19)
#loc625 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":481:9)
#loc626 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":482:9)
#loc627 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":486:1)
#loc628 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":492:1)
#loc629 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":488:5)
#loc630 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":489:5)
#loc631 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":490:5)
#loc632 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_15.cpp":491:5)
#loc633 = loc(fused[#loc1, #loc2])
#loc634 = loc(fused[#loc3, #loc4])
#loc635 = loc(fused[#loc5, #loc6])
#loc636 = loc(fused[#loc7, #loc8])
#loc637 = loc(fused[#loc9, #loc10])
#loc638 = loc(fused[#loc11, #loc12])
#loc639 = loc(fused[#loc13, #loc14])
#loc640 = loc(fused[#loc15, #loc16])
#loc641 = loc(fused[#loc17, #loc18])
#loc642 = loc(fused[#loc20, #loc21])
#loc643 = loc(fused[#loc22, #loc23])
#loc644 = loc(fused[#loc26, #loc27])
#loc645 = loc(fused[#loc28, #loc29])
#loc646 = loc(fused[#loc31, #loc30])
#loc647 = loc(fused[#loc32, #loc33])
#loc648 = loc(fused[#loc36, #loc37])
#loc649 = loc(fused[#loc38, #loc39])
#loc650 = loc(fused[#loc40, #loc41])
#loc651 = loc(fused[#loc42, #loc43])
#loc652 = loc(fused[#loc44, #loc45])
#loc653 = loc(fused[#loc46, #loc47])
#loc654 = loc(fused[#loc48, #loc49])
#loc655 = loc(fused[#loc50, #loc51])
#loc656 = loc(fused[#loc56, #loc57])
#loc657 = loc(fused[#loc58, #loc59])
#loc658 = loc(fused[#loc60, #loc61])
#loc659 = loc(fused[#loc62, #loc59])
#loc660 = loc(fused[#loc64, #loc65])
#loc661 = loc(fused[#loc67, #loc68])
#loc662 = loc(fused[#loc69, #loc70])
#loc663 = loc(fused[#loc73, #loc71])
#loc664 = loc(fused[#loc77, #loc74])
#loc665 = loc(fused[#loc81, #loc82])
#loc666 = loc(fused[#loc83, #loc84])
#loc667 = loc(fused[#loc86, #loc87])
#loc668 = loc(fused[#loc88, #loc89])
#loc669 = loc(fused[#loc90, #loc91])
#loc670 = loc(fused[#loc92, #loc84])
#loc671 = loc(fused[#loc94, #loc95])
#loc672 = loc(fused[#loc98, #loc99])
#loc673 = loc(fused[#loc100, #loc95])
#loc674 = loc(fused[#loc106, #loc107])
#loc675 = loc(fused[#loc108, #loc109])
#loc676 = loc(fused[#loc110, #loc111])
#loc677 = loc(fused[#loc112, #loc109])
#loc678 = loc(fused[#loc116, #loc117])
#loc679 = loc(fused[#loc120, #loc121])
#loc680 = loc(fused[#loc122, #loc123])
#loc681 = loc(fused[#loc124, #loc125])
#loc682 = loc(fused[#loc127, #loc128])
#loc683 = loc(fused[#loc129, #loc123])
#loc684 = loc(fused[#loc133, #loc131])
#loc685 = loc(fused[#loc138, #loc139])
#loc686 = loc(fused[#loc141, #loc142])
#loc687 = loc(fused[#loc143, #loc144])
#loc688 = loc(fused[#loc145, #loc142])
#loc689 = loc(fused[#loc148, #loc149])
#loc690 = loc(fused[#loc150, #loc151])
#loc691 = loc(fused[#loc152, #loc149])
#loc692 = loc(fused[#loc159, #loc160])
#loc693 = loc(fused[#loc163, #loc164])
#loc694 = loc(fused[#loc165, #loc166])
#loc695 = loc(fused[#loc167, #loc168])
#loc696 = loc(fused[#loc170, #loc171])
#loc697 = loc(fused[#loc169, #loc171])
#loc698 = loc(fused[#loc172, #loc173, #loc174, #loc168])
#loc699 = loc(fused[#loc177, #loc178])
#loc700 = loc(fused[#loc179, #loc178])
#loc701 = loc(fused[#loc192, #loc193])
#loc702 = loc(fused[#loc194, #loc195])
#loc703 = loc(fused[#loc197, #loc196])
#loc704 = loc(fused[#loc198, #loc199])
#loc705 = loc(fused[#loc202, #loc203])
#loc706 = loc(fused[#loc204, #loc205])
#loc707 = loc(fused[#loc206, #loc207])
#loc708 = loc(fused[#loc208, #loc209])
#loc709 = loc(fused[#loc210, #loc211])
#loc710 = loc(fused[#loc212, #loc213])
#loc711 = loc(fused[#loc214, #loc215])
#loc712 = loc(fused[#loc216, #loc217])
#loc713 = loc(fused[#loc222, #loc223])
#loc714 = loc(fused[#loc224, #loc225])
#loc715 = loc(fused[#loc226, #loc227])
#loc716 = loc(fused[#loc228, #loc225])
#loc717 = loc(fused[#loc230, #loc231])
#loc718 = loc(fused[#loc233, #loc234])
#loc719 = loc(fused[#loc235, #loc236])
#loc720 = loc(fused[#loc238, #loc237])
#loc721 = loc(fused[#loc240, #loc239])
#loc722 = loc(fused[#loc243, #loc244])
#loc723 = loc(fused[#loc245, #loc246])
#loc724 = loc(fused[#loc248, #loc249])
#loc725 = loc(fused[#loc250, #loc251])
#loc726 = loc(fused[#loc252, #loc253])
#loc727 = loc(fused[#loc254, #loc246])
#loc728 = loc(fused[#loc256, #loc257])
#loc729 = loc(fused[#loc260, #loc261])
#loc730 = loc(fused[#loc262, #loc257])
#loc731 = loc(fused[#loc268, #loc269])
#loc732 = loc(fused[#loc270, #loc271])
#loc733 = loc(fused[#loc272, #loc273])
#loc734 = loc(fused[#loc274, #loc271])
#loc735 = loc(fused[#loc278, #loc279])
#loc736 = loc(fused[#loc282, #loc283])
#loc737 = loc(fused[#loc284, #loc285])
#loc738 = loc(fused[#loc286, #loc287])
#loc739 = loc(fused[#loc289, #loc290])
#loc740 = loc(fused[#loc291, #loc285])
#loc741 = loc(fused[#loc295, #loc293])
#loc742 = loc(fused[#loc300, #loc301])
#loc743 = loc(fused[#loc303, #loc304])
#loc744 = loc(fused[#loc305, #loc306])
#loc745 = loc(fused[#loc307, #loc304])
#loc746 = loc(fused[#loc310, #loc311])
#loc747 = loc(fused[#loc312, #loc313])
#loc748 = loc(fused[#loc314, #loc311])
#loc749 = loc(fused[#loc322, #loc323])
#loc750 = loc(fused[#loc330, #loc331])
#loc751 = loc(fused[#loc332, #loc333])
#loc752 = loc(fused[#loc334, #loc335])
#loc753 = loc(fused[#loc337, #loc338])
#loc754 = loc(fused[#loc336, #loc338])
#loc755 = loc(fused[#loc340, #loc341])
#loc756 = loc(fused[#loc342, #loc343, #loc344, #loc335])
#loc757 = loc(fused[#loc347, #loc348])
#loc758 = loc(fused[#loc349, #loc348])
#loc759 = loc(fused[#loc358, #loc359])
#loc760 = loc(fused[#loc360, #loc361])
#loc761 = loc(fused[#loc363, #loc362])
#loc762 = loc(fused[#loc364, #loc365])
#loc763 = loc(fused[#loc368, #loc369])
#loc764 = loc(fused[#loc370, #loc371])
#loc765 = loc(fused[#loc372, #loc373])
#loc766 = loc(fused[#loc374, #loc375])
#loc767 = loc(fused[#loc376, #loc377])
#loc768 = loc(fused[#loc378, #loc379])
#loc769 = loc(fused[#loc380, #loc381])
#loc770 = loc(fused[#loc382, #loc383])
#loc771 = loc(fused[#loc388, #loc389])
#loc772 = loc(fused[#loc390, #loc391])
#loc773 = loc(fused[#loc392, #loc393])
#loc774 = loc(fused[#loc394, #loc391])
#loc775 = loc(fused[#loc396, #loc397])
#loc776 = loc(fused[#loc399, #loc400])
#loc777 = loc(fused[#loc401, #loc402])
#loc778 = loc(fused[#loc404, #loc403])
#loc779 = loc(fused[#loc406, #loc405])
#loc780 = loc(fused[#loc409, #loc410])
#loc781 = loc(fused[#loc411, #loc412])
#loc782 = loc(fused[#loc414, #loc415])
#loc783 = loc(fused[#loc416, #loc417])
#loc784 = loc(fused[#loc418, #loc419])
#loc785 = loc(fused[#loc420, #loc412])
#loc786 = loc(fused[#loc422, #loc423])
#loc787 = loc(fused[#loc426, #loc427])
#loc788 = loc(fused[#loc428, #loc423])
#loc789 = loc(fused[#loc434, #loc435])
#loc790 = loc(fused[#loc436, #loc437])
#loc791 = loc(fused[#loc438, #loc439])
#loc792 = loc(fused[#loc440, #loc437])
#loc793 = loc(fused[#loc444, #loc445])
#loc794 = loc(fused[#loc448, #loc449])
#loc795 = loc(fused[#loc450, #loc451])
#loc796 = loc(fused[#loc452, #loc453])
#loc797 = loc(fused[#loc455, #loc456])
#loc798 = loc(fused[#loc457, #loc451])
#loc799 = loc(fused[#loc461, #loc459])
#loc800 = loc(fused[#loc466, #loc467])
#loc801 = loc(fused[#loc469, #loc470])
#loc802 = loc(fused[#loc471, #loc472])
#loc803 = loc(fused[#loc473, #loc470])
#loc804 = loc(fused[#loc476, #loc477])
#loc805 = loc(fused[#loc478, #loc479])
#loc806 = loc(fused[#loc480, #loc477])
#loc807 = loc(fused[#loc488, #loc489])
#loc808 = loc(fused[#loc492, #loc493])
#loc809 = loc(fused[#loc494, #loc495])
#loc810 = loc(fused[#loc496, #loc497])
#loc811 = loc(fused[#loc499, #loc500])
#loc812 = loc(fused[#loc498, #loc500])
#loc813 = loc(fused[#loc502, #loc503])
#loc814 = loc(fused[#loc504, #loc505, #loc506, #loc497])
#loc815 = loc(fused[#loc509, #loc510])
#loc816 = loc(fused[#loc511, #loc510])
#loc817 = loc(fused[#loc525, #loc526])
#loc818 = loc(fused[#loc527, #loc528])
#loc819 = loc(fused[#loc530, #loc529])
#loc820 = loc(fused[#loc531, #loc532])
#loc821 = loc(fused[#loc540, #loc539])
#loc822 = loc(fused[#loc542, #loc543])
#loc823 = loc(fused[#loc546, #loc547])
#loc824 = loc(fused[#loc548, #loc549])
#loc825 = loc(fused[#loc550, #loc551])
#loc826 = loc(fused[#loc553, #loc554])
#loc827 = loc(fused[#loc552, #loc554])
#loc828 = loc(fused[#loc555, #loc556, #loc557, #loc551])
#loc829 = loc(fused[#loc560, #loc561])
#loc830 = loc(fused[#loc562, #loc561])
#loc831 = loc(fused[#loc576, #loc577])
#loc832 = loc(fused[#loc578, #loc579])
#loc833 = loc(fused[#loc581, #loc580])
#loc834 = loc(fused[#loc582, #loc583])
#loc835 = loc(fused[#loc587, #loc586])
#loc836 = loc(fused[#loc593, #loc594])
#loc837 = loc(fused[#loc597, #loc598])
#loc838 = loc(fused[#loc599, #loc600])
#loc839 = loc(fused[#loc601, #loc602])
#loc840 = loc(fused[#loc604, #loc605])
#loc841 = loc(fused[#loc603, #loc605])
#loc842 = loc(fused[#loc606, #loc607, #loc608, #loc602])
#loc843 = loc(fused[#loc611, #loc612])
#loc844 = loc(fused[#loc613, #loc612])
#loc845 = loc(fused[#loc627, #loc628])
