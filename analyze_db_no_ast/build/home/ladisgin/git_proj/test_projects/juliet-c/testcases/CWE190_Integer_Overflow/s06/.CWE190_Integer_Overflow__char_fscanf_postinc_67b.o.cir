!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":27:63)
#loc6 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":27:122)
#loc21 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":43:67)
#loc22 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":43:126)
#loc39 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":55:67)
#loc40 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":55:126)
!ty__CWE190_Integer_Overflow__char_fscanf_postinc_67_structType = !cir.struct<struct "_CWE190_Integer_Overflow__char_fscanf_postinc_67_structType" {!s8i}>
#loc61 = loc(fused[#loc5, #loc6])
#loc67 = loc(fused[#loc21, #loc22])
#loc74 = loc(fused[#loc39, #loc40])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_fscanf_postinc_67b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printHexCharLine(!s8i) loc(#loc59)
  cir.func  @CWE190_Integer_Overflow__char_fscanf_postinc_67b_badSink(%arg0: !ty__CWE190_Integer_Overflow__char_fscanf_postinc_67_structType loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !ty__CWE190_Integer_Overflow__char_fscanf_postinc_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__char_fscanf_postinc_67_structType>, ["myStruct", init] {alignment = 1 : i64} loc(#loc61)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc62)
    cir.store %arg0, %0 : !ty__CWE190_Integer_Overflow__char_fscanf_postinc_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__char_fscanf_postinc_67_structType> loc(#loc9)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE190_Integer_Overflow__char_fscanf_postinc_67_structType> -> !cir.ptr<!s8i> loc(#loc10)
    %3 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc8)
    cir.store %3, %1 : !s8i, !cir.ptr<!s8i> loc(#loc62)
    cir.scope {
      %4 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc64)
      %5 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc15)
      %6 = cir.unary(inc, %5) : !s8i, !s8i loc(#loc16)
      cir.store %6, %1 : !s8i, !cir.ptr<!s8i> loc(#loc65)
      %7 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc14)
      cir.store %7, %4 : !s8i, !cir.ptr<!s8i> loc(#loc64)
      %8 = cir.load %4 : !cir.ptr<!s8i>, !s8i loc(#loc17)
      cir.call @printHexCharLine(%8) : (!s8i) -> () loc(#loc18)
    } loc(#loc63)
    cir.return loc(#loc4)
  } loc(#loc60)
  cir.func  @CWE190_Integer_Overflow__char_fscanf_postinc_67b_goodG2BSink(%arg0: !ty__CWE190_Integer_Overflow__char_fscanf_postinc_67_structType loc(fused[#loc21, #loc22])) extra(#fn_attr) {
    %0 = cir.alloca !ty__CWE190_Integer_Overflow__char_fscanf_postinc_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__char_fscanf_postinc_67_structType>, ["myStruct", init] {alignment = 1 : i64} loc(#loc67)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc68)
    cir.store %arg0, %0 : !ty__CWE190_Integer_Overflow__char_fscanf_postinc_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__char_fscanf_postinc_67_structType> loc(#loc25)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE190_Integer_Overflow__char_fscanf_postinc_67_structType> -> !cir.ptr<!s8i> loc(#loc10)
    %3 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc24)
    cir.store %3, %1 : !s8i, !cir.ptr<!s8i> loc(#loc68)
    cir.scope {
      %4 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc70)
      %5 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc30)
      %6 = cir.unary(inc, %5) : !s8i, !s8i loc(#loc31)
      cir.store %6, %1 : !s8i, !cir.ptr<!s8i> loc(#loc71)
      %7 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc29)
      cir.store %7, %4 : !s8i, !cir.ptr<!s8i> loc(#loc70)
      %8 = cir.load %4 : !cir.ptr<!s8i>, !s8i loc(#loc32)
      cir.call @printHexCharLine(%8) : (!s8i) -> () loc(#loc33)
    } loc(#loc69)
    cir.return loc(#loc20)
  } loc(#loc66)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc72)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc36)
  cir.func  @CWE190_Integer_Overflow__char_fscanf_postinc_67b_goodB2GSink(%arg0: !ty__CWE190_Integer_Overflow__char_fscanf_postinc_67_structType loc(fused[#loc39, #loc40])) extra(#fn_attr) {
    %0 = cir.alloca !ty__CWE190_Integer_Overflow__char_fscanf_postinc_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__char_fscanf_postinc_67_structType>, ["myStruct", init] {alignment = 1 : i64} loc(#loc74)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc75)
    cir.store %arg0, %0 : !ty__CWE190_Integer_Overflow__char_fscanf_postinc_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__char_fscanf_postinc_67_structType> loc(#loc43)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE190_Integer_Overflow__char_fscanf_postinc_67_structType> -> !cir.ptr<!s8i> loc(#loc10)
    %3 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc42)
    cir.store %3, %1 : !s8i, !cir.ptr<!s8i> loc(#loc75)
    cir.scope {
      %4 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc46)
      %5 = cir.cast(integral, %4 : !s8i), !s32i loc(#loc46)
      %6 = cir.const #cir.int<127> : !s32i loc(#loc47)
      %7 = cir.cmp(lt, %5, %6) : !s32i, !s32i loc(#loc77)
      %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc48)
      cir.if %8 {
        %9 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc79)
        %10 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc54)
        %11 = cir.unary(inc, %10) : !s8i, !s8i loc(#loc55)
        cir.store %11, %1 : !s8i, !cir.ptr<!s8i> loc(#loc80)
        %12 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc53)
        cir.store %12, %9 : !s8i, !cir.ptr<!s8i> loc(#loc79)
        %13 = cir.load %9 : !cir.ptr<!s8i>, !s8i loc(#loc56)
        cir.call @printHexCharLine(%13) : (!s8i) -> () loc(#loc57)
      } else {
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc36)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc36)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc58)
      } loc(#loc78)
    } loc(#loc76)
    cir.return loc(#loc38)
  } loc(#loc73)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":27:1)
#loc4 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":36:1)
#loc7 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":29:5)
#loc8 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":29:26)
#loc9 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":28:1)
#loc10 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":22:10)
#loc11 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":30:5)
#loc12 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":35:5)
#loc13 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":33:9)
#loc14 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":33:23)
#loc15 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":32:13)
#loc16 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":32:9)
#loc17 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":34:26)
#loc18 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":34:9)
#loc19 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":43:1)
#loc20 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":52:1)
#loc23 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":45:5)
#loc24 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":45:26)
#loc25 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":44:1)
#loc26 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":46:5)
#loc27 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":51:5)
#loc28 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":49:9)
#loc29 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":49:23)
#loc30 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":48:13)
#loc31 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":48:9)
#loc32 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":50:26)
#loc33 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":50:9)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":67:19)
#loc37 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":55:1)
#loc38 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":69:1)
#loc41 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":57:5)
#loc42 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":57:26)
#loc43 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":56:1)
#loc44 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":59:5)
#loc45 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":68:5)
#loc46 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":59:9)
#loc47 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":59:16)
#loc48 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":59:14)
#loc49 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":60:5)
#loc50 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":64:5)
#loc51 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":66:5)
#loc52 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":62:9)
#loc53 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":62:23)
#loc54 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":61:13)
#loc55 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":61:9)
#loc56 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":63:26)
#loc57 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":63:9)
#loc58 = loc("CWE190_Integer_Overflow__char_fscanf_postinc_67b.c":67:9)
#loc59 = loc(fused[#loc1, #loc2])
#loc60 = loc(fused[#loc3, #loc4])
#loc62 = loc(fused[#loc7, #loc8])
#loc63 = loc(fused[#loc11, #loc12])
#loc64 = loc(fused[#loc13, #loc14])
#loc65 = loc(fused[#loc16, #loc15])
#loc66 = loc(fused[#loc19, #loc20])
#loc68 = loc(fused[#loc23, #loc24])
#loc69 = loc(fused[#loc26, #loc27])
#loc70 = loc(fused[#loc28, #loc29])
#loc71 = loc(fused[#loc31, #loc30])
#loc72 = loc(fused[#loc34, #loc35])
#loc73 = loc(fused[#loc37, #loc38])
#loc75 = loc(fused[#loc41, #loc42])
#loc76 = loc(fused[#loc44, #loc45])
#loc77 = loc(fused[#loc46, #loc47])
#loc78 = loc(fused[#loc49, #loc50, #loc51, #loc45])
#loc79 = loc(fused[#loc52, #loc53])
#loc80 = loc(fused[#loc55, #loc54])
