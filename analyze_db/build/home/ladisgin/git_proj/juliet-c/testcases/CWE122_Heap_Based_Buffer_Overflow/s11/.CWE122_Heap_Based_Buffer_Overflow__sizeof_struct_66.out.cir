!s32i = !cir.int<s, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":21:67)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":21:93)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":35:71)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":35:97)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc34 = loc(fused[#loc7, #loc8])
#loc37 = loc(fused[#loc20, #loc21])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc31)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc32)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b_badSink(%arg0: !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc34)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc35)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc11)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc12)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc13)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, %3 : !s32i), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc10)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc12)
    cir.store %5, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc35)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.call @printStructLine(%6) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc15)
    %7 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc16)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc17)
    cir.call @free(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc16)
    cir.return loc(#loc6)
  } loc(#loc33)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b_goodG2BSink(%arg0: !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(fused[#loc20, #loc21])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc37)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc38)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc24)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc25)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc26)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, %3 : !s32i), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc23)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc25)
    cir.store %5, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc38)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
    cir.call @printStructLine(%6) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc28)
    %7 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc29)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc30)
    cir.call @free(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc29)
    cir.return loc(#loc19)
  } loc(#loc36)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":21:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":28:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":24:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":24:39)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":22:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":24:28)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":24:38)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":26:21)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":26:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":27:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":27:10)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":35:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":41:1)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":37:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":37:39)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":36:1)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":37:28)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":37:38)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":39:21)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":39:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":40:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_66b.c":40:10)
#loc31 = loc(fused[#loc1, #loc2])
#loc32 = loc(fused[#loc3, #loc4])
#loc33 = loc(fused[#loc5, #loc6])
#loc35 = loc(fused[#loc9, #loc10])
#loc36 = loc(fused[#loc18, #loc19])
#loc38 = loc(fused[#loc22, #loc23])
