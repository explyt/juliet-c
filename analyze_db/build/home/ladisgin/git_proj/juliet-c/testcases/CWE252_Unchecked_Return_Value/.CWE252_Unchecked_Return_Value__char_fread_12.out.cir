!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":104:10)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":104:14)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":104:20)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":104:32)
#loc162 = loc(fused[#loc67, #loc68])
#loc163 = loc(fused[#loc69, #loc70])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc136)
  cir.func private @fread(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc137)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc138)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fread failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fread_12_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc142)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc142)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc14)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc14)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc145)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc146)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc145)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc145)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
          %8 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc25)
          %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc147)
          %11 = cir.const #cir.int<1> : !u64i loc(#loc148)
          %12 = cir.const #cir.int<100> : !s32i loc(#loc30)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc31)
          %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc30)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc30)
          %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc138)
          %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
          %18 = cir.call @fread(%10, %11, %15, %17) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc25)
        } loc(#loc144)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc150)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc151)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc150)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc150)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
          cir.scope {
            %8 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc41)
            %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc153)
            %11 = cir.const #cir.int<1> : !u64i loc(#loc154)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc46)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc47)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc46)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc46)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc138)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc48)
            %18 = cir.call @fread(%10, %11, %15, %17) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc41)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc49)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc50)
            %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc49)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc49)
            %23 = cir.cmp(ne, %18, %22) : !u64i, !cir.bool loc(#loc155)
            cir.if %23 {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc9)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc52)
            } loc(#loc156)
          } loc(#loc152)
        } loc(#loc149)
      } loc(#loc143)
    } loc(#loc141)
    cir.return loc(#loc11)
  } loc(#loc140)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fread_12_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    cir.return loc(#loc54)
  } loc(#loc157)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc159)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc64)
  cir.func @main(%arg0: !s32i loc(fused[#loc67, #loc68]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc69, #loc70])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc66)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc71)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc71)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc72)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc73)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc73)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc74)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc61)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %8 = cir.get_global @CWE252_Unchecked_Return_Value__char_fread_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call @CWE252_Unchecked_Return_Value__char_fread_12_good() : () -> () loc(#loc76)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc62)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc63)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %13 = cir.get_global @CWE252_Unchecked_Return_Value__char_fread_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call @CWE252_Unchecked_Return_Value__char_fread_12_bad() : () -> () loc(#loc80)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc64)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc83)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    cir.return %17 : !s32i loc(#loc166)
  } loc(#loc161)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc169)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc169)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc89)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc89)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc172)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc173)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc172)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc172)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc99)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
          cir.scope {
            %8 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc102)
            %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc175)
            %11 = cir.const #cir.int<1> : !u64i loc(#loc176)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc107)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc108)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc107)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc107)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc138)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc109)
            %18 = cir.call @fread(%10, %11, %15, %17) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc102)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc110)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc111)
            %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc110)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc110)
            %23 = cir.cmp(ne, %18, %22) : !u64i, !cir.bool loc(#loc177)
            cir.if %23 {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc113)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc114)
            } loc(#loc178)
          } loc(#loc174)
        } loc(#loc171)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc180)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc181)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc180)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc180)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc120)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
          cir.scope {
            %8 = cir.get_global @fread : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc123)
            %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc183)
            %11 = cir.const #cir.int<1> : !u64i loc(#loc184)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc128)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc129)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc128)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc128)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc138)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc130)
            %18 = cir.call @fread(%10, %11, %15, %17) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc123)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc131)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc132)
            %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc131)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc131)
            %23 = cir.cmp(ne, %18, %22) : !u64i, !cir.bool loc(#loc185)
            cir.if %23 {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc134)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc134)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc135)
            } loc(#loc186)
          } loc(#loc182)
        } loc(#loc179)
      } loc(#loc170)
    } loc(#loc168)
    cir.return loc(#loc86)
  } loc(#loc167)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":728:1)
#loc4 = loc("/usr/include/stdio.h":730:3)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":47:27)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":24:1)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":51:1)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":26:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":50:5)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":26:8)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":26:33)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":27:5)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":36:5)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":38:5)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":28:9)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":35:9)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":31:13)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":31:36)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":32:13)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":32:27)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:13)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:27)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:19)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:33)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:44)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:56)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:60)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:64)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":39:9)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":49:9)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":42:13)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":42:36)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":43:13)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":43:27)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:13)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":48:13)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:17)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:31)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:23)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:37)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:48)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:60)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:64)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:68)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:78)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:82)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":46:13)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":47:17)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":90:1)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":93:1)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":92:5)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":92:11)
#loc57 = loc("/usr/include/stdlib.h":575:1)
#loc58 = loc("/usr/include/stdlib.h":575:41)
#loc59 = loc("/usr/include/time.h":76:1)
#loc60 = loc("/usr/include/time.h":76:38)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":109:15)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":111:15)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":114:15)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":116:15)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":104:1)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":119:1)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":105:1)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":107:27)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":107:22)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":107:5)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":109:5)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":110:5)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":110:55)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":111:5)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":114:5)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":115:5)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":115:54)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":116:5)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":118:12)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":118:5)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":58:1)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":88:1)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":60:5)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":87:5)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":60:8)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":60:33)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":61:5)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":73:5)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":75:5)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":62:9)
#loc95 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":72:9)
#loc96 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":65:13)
#loc97 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":65:36)
#loc98 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":66:13)
#loc99 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":66:27)
#loc100 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:13)
#loc101 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":71:13)
#loc102 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:17)
#loc103 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:31)
#loc104 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:23)
#loc105 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:37)
#loc106 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:48)
#loc107 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:60)
#loc108 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:64)
#loc109 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:68)
#loc110 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:78)
#loc111 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:82)
#loc112 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":69:13)
#loc113 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":70:27)
#loc114 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":70:17)
#loc115 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":76:9)
#loc116 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":86:9)
#loc117 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":79:13)
#loc118 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":79:36)
#loc119 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":80:13)
#loc120 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":80:27)
#loc121 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:13)
#loc122 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":85:13)
#loc123 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:17)
#loc124 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:31)
#loc125 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:23)
#loc126 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:37)
#loc127 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:48)
#loc128 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:60)
#loc129 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:64)
#loc130 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:68)
#loc131 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:78)
#loc132 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:82)
#loc133 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":83:13)
#loc134 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":84:27)
#loc135 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":84:17)
#loc136 = loc(fused[#loc1, #loc2])
#loc137 = loc(fused[#loc3, #loc4])
#loc138 = loc(fused[#loc5, #loc6])
#loc139 = loc(fused[#loc7, #loc8])
#loc140 = loc(fused[#loc10, #loc11])
#loc141 = loc(fused[#loc12, #loc13])
#loc142 = loc(fused[#loc14, #loc15])
#loc143 = loc(fused[#loc16, #loc17, #loc18, #loc13])
#loc144 = loc(fused[#loc19, #loc20])
#loc145 = loc(fused[#loc21, #loc22])
#loc146 = loc(fused[#loc23, #loc24])
#loc147 = loc(fused[#loc27, #loc26])
#loc148 = loc(fused[#loc28, #loc29])
#loc149 = loc(fused[#loc33, #loc34])
#loc150 = loc(fused[#loc35, #loc36])
#loc151 = loc(fused[#loc37, #loc38])
#loc152 = loc(fused[#loc39, #loc40])
#loc153 = loc(fused[#loc43, #loc42])
#loc154 = loc(fused[#loc44, #loc45])
#loc155 = loc(fused[#loc41, #loc50])
#loc156 = loc(fused[#loc51, #loc40])
#loc157 = loc(fused[#loc53, #loc54])
#loc158 = loc(fused[#loc55, #loc56])
#loc159 = loc(fused[#loc57, #loc58])
#loc160 = loc(fused[#loc59, #loc60])
#loc161 = loc(fused[#loc65, #loc66])
#loc164 = loc(fused[#loc76, #loc77])
#loc165 = loc(fused[#loc80, #loc81])
#loc166 = loc(fused[#loc84, #loc83])
#loc167 = loc(fused[#loc85, #loc86])
#loc168 = loc(fused[#loc87, #loc88])
#loc169 = loc(fused[#loc89, #loc90])
#loc170 = loc(fused[#loc91, #loc92, #loc93, #loc88])
#loc171 = loc(fused[#loc94, #loc95])
#loc172 = loc(fused[#loc96, #loc97])
#loc173 = loc(fused[#loc98, #loc99])
#loc174 = loc(fused[#loc100, #loc101])
#loc175 = loc(fused[#loc104, #loc103])
#loc176 = loc(fused[#loc105, #loc106])
#loc177 = loc(fused[#loc102, #loc111])
#loc178 = loc(fused[#loc112, #loc101])
#loc179 = loc(fused[#loc115, #loc116])
#loc180 = loc(fused[#loc117, #loc118])
#loc181 = loc(fused[#loc119, #loc120])
#loc182 = loc(fused[#loc121, #loc122])
#loc183 = loc(fused[#loc125, #loc124])
#loc184 = loc(fused[#loc126, #loc127])
#loc185 = loc(fused[#loc123, #loc132])
#loc186 = loc(fused[#loc133, #loc122])
