!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc163)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc164)
  cir.func private  @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc165)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc166)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printIntLine(!s32i) loc(#loc167)
  cir.func no_proto  @CWE369_Divide_by_Zero__float_fgets_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc169)
    %1 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc170)
    %2 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc171)
    cir.store %0, %1 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc170)
    cir.store %0, %2 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc171)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc20)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc172)
    cir.scope {
      %4 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc174)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc25)
      %6 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc26)
      cir.store %6, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc174)
      cir.scope {
        %9 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc176)
        cir.scope {
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc33)
          %11 = cir.const #cir.int<20> : !s32i loc(#loc34)
          %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc164)
          %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc35)
          %14 = cir.call @fgets(%10, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc36)
          %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc37)
          %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!s8i>, !s32i loc(#loc178)
          %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc38)
          cir.if %18 {
            %19 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc42)
            %20 = cir.call @atof(%19) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc43)
            %21 = cir.cast(floating, %20 : !cir.double), !cir.float loc(#loc43)
            cir.store %21, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc180)
          } else {
            %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
            cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc46)
          } loc(#loc179)
        } loc(#loc177)
      } loc(#loc175)
      %7 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc47)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc48)
      cir.store %7, %8 : !cir.float, !cir.ptr<!cir.float> loc(#loc181)
    } loc(#loc173)
    cir.scope {
      %4 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc183)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc53)
      %6 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc54)
      cir.store %6, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc183)
      cir.scope {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc185)
        %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc59)
        %9 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc60)
        %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc60)
        %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc186)
        %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc186)
        cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc185)
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc61)
        cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc62)
      } loc(#loc184)
    } loc(#loc182)
    cir.return loc(#loc13)
  } loc(#loc168)
  cir.func no_proto  @CWE369_Divide_by_Zero__float_fgets_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc188)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc189)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc64)
  } loc(#loc187)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc191)
    %1 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc192)
    %2 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc193)
    cir.store %0, %1 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc192)
    cir.store %0, %2 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc193)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc77)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc194)
    cir.scope {
      %4 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc196)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc82)
      %6 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc83)
      cir.store %6, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc196)
      %7 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc84)
      cir.store %7, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc197)
      %8 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc86)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc87)
      cir.store %8, %9 : !cir.float, !cir.ptr<!cir.float> loc(#loc198)
    } loc(#loc195)
    cir.scope {
      %4 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc200)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc92)
      %6 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc93)
      cir.store %6, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc200)
      cir.scope {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc202)
        %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc98)
        %9 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc99)
        %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc99)
        %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc203)
        %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc203)
        cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc202)
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc100)
        cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc101)
      } loc(#loc201)
    } loc(#loc199)
    cir.return loc(#loc70)
  } loc(#loc190)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc102)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc205)
    %1 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc206)
    %2 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc207)
    cir.store %0, %1 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc206)
    cir.store %0, %2 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc207)
    %3 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc111)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc208)
    cir.scope {
      %4 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc210)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc116)
      %6 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc117)
      cir.store %6, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc210)
      cir.scope {
        %9 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc212)
        cir.scope {
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc124)
          %11 = cir.const #cir.int<20> : !s32i loc(#loc125)
          %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc164)
          %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc126)
          %14 = cir.call @fgets(%10, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc127)
          %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc128)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc128)
          %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!s8i>, !s32i loc(#loc214)
          %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc129)
          cir.if %18 {
            %19 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc133)
            %20 = cir.call @atof(%19) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc134)
            %21 = cir.cast(floating, %20 : !cir.double), !cir.float loc(#loc134)
            cir.store %21, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc216)
          } else {
            %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc137)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc137)
            cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc138)
          } loc(#loc215)
        } loc(#loc213)
      } loc(#loc211)
      %7 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc139)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc140)
      cir.store %7, %8 : !cir.float, !cir.ptr<!cir.float> loc(#loc217)
    } loc(#loc209)
    cir.scope {
      %4 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc219)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc145)
      %6 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc146)
      cir.store %6, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc219)
      cir.scope {
        %7 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc149)
        %8 = cir.cast(floating, %7 : !cir.float), !cir.double loc(#loc149)
        %9 = cir.fabs %8 : !cir.double loc(#loc149)
        %10 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc150)
        %11 = cir.cmp(gt, %9, %10) : !cir.double, !s32i loc(#loc221)
        %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc152)
        cir.if %12 {
          %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc223)
          %14 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc158)
          %15 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc159)
          %16 = cir.cast(floating, %15 : !cir.float), !cir.double loc(#loc159)
          %17 = cir.binop(div, %14, %16) : !cir.double loc(#loc224)
          %18 = cir.cast(float_to_int, %17 : !cir.double), !s32i loc(#loc224)
          cir.store %18, %13 : !s32i, !cir.ptr<!s32i> loc(#loc223)
          %19 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc160)
          cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc161)
        } else {
          %13 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc102)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc102)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc162)
        } loc(#loc222)
      } loc(#loc220)
    } loc(#loc218)
    cir.return loc(#loc104)
  } loc(#loc204)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_32.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":102:1)
#loc6 = loc("/usr/include/stdlib.h":103:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":45:27)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":26:1)
#loc13 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":58:1)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":28:5)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":28:11)
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":29:5)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":29:24)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":30:5)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":30:24)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":32:12)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":32:5)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":33:5)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":49:5)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":34:9)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":34:23)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":34:22)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":35:9)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":47:9)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":36:13)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":36:45)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":38:13)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":46:13)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":38:23)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":38:36)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":38:53)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":38:17)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":38:63)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":38:60)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":39:13)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":42:13)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":44:13)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":41:36)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":41:31)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":41:17)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":41:47)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":45:17)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":48:21)
#loc48 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":48:10)
#loc49 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":48:9)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":50:5)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":57:5)
#loc52 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":51:9)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":51:23)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":51:22)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":52:9)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":56:9)
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":54:13)
#loc58 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":54:44)
#loc59 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":54:32)
#loc60 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":54:40)
#loc61 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":55:26)
#loc62 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":55:13)
#loc63 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":128:1)
#loc64 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":132:1)
#loc65 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":130:5)
#loc66 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":130:13)
#loc67 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":131:5)
#loc68 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":131:13)
#loc69 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":65:1)
#loc70 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":86:1)
#loc71 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":67:5)
#loc72 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":67:11)
#loc73 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":68:5)
#loc74 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":68:24)
#loc75 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":69:5)
#loc76 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":69:24)
#loc77 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":71:12)
#loc78 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":71:5)
#loc79 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":72:5)
#loc80 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":77:5)
#loc81 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":73:9)
#loc82 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":73:23)
#loc83 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":73:22)
#loc84 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":75:16)
#loc85 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":75:9)
#loc86 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":76:21)
#loc87 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":76:10)
#loc88 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":76:9)
#loc89 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":78:5)
#loc90 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":85:5)
#loc91 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":79:9)
#loc92 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":79:23)
#loc93 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":79:22)
#loc94 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":80:9)
#loc95 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":84:9)
#loc96 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":82:13)
#loc97 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":82:44)
#loc98 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":82:32)
#loc99 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":82:40)
#loc100 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":83:26)
#loc101 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":83:13)
#loc102 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":123:23)
#loc103 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":89:1)
#loc104 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":126:1)
#loc105 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":91:5)
#loc106 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":91:11)
#loc107 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":92:5)
#loc108 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":92:24)
#loc109 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":93:5)
#loc110 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":93:24)
#loc111 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":95:12)
#loc112 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":95:5)
#loc113 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":96:5)
#loc114 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":112:5)
#loc115 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":97:9)
#loc116 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":97:23)
#loc117 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":97:22)
#loc118 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":98:9)
#loc119 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":110:9)
#loc120 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":99:13)
#loc121 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":99:45)
#loc122 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":101:13)
#loc123 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":109:13)
#loc124 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":101:23)
#loc125 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":101:36)
#loc126 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":101:53)
#loc127 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":101:17)
#loc128 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":101:63)
#loc129 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":101:60)
#loc130 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":102:13)
#loc131 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":105:13)
#loc132 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":107:13)
#loc133 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":104:36)
#loc134 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":104:31)
#loc135 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":104:17)
#loc136 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":104:47)
#loc137 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":108:27)
#loc138 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":108:17)
#loc139 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":111:21)
#loc140 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":111:10)
#loc141 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":111:9)
#loc142 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":113:5)
#loc143 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":125:5)
#loc144 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":114:9)
#loc145 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":114:23)
#loc146 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":114:22)
#loc147 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":116:9)
#loc148 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":124:9)
#loc149 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":116:17)
#loc150 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":116:25)
#loc151 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":116:12)
#loc152 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":116:23)
#loc153 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":117:9)
#loc154 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":120:9)
#loc155 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":122:9)
#loc156 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":118:13)
#loc157 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":118:44)
#loc158 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":118:32)
#loc159 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":118:40)
#loc160 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":119:26)
#loc161 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":119:13)
#loc162 = loc("CWE369_Divide_by_Zero__float_fgets_32.c":123:13)
#loc163 = loc(fused[#loc1, #loc2])
#loc164 = loc(fused[#loc3, #loc4])
#loc165 = loc(fused[#loc5, #loc6])
#loc166 = loc(fused[#loc7, #loc8])
#loc167 = loc(fused[#loc10, #loc11])
#loc168 = loc(fused[#loc12, #loc13])
#loc169 = loc(fused[#loc14, #loc15])
#loc170 = loc(fused[#loc16, #loc17])
#loc171 = loc(fused[#loc18, #loc19])
#loc172 = loc(fused[#loc21, #loc20])
#loc173 = loc(fused[#loc22, #loc23])
#loc174 = loc(fused[#loc24, #loc25])
#loc175 = loc(fused[#loc27, #loc28])
#loc176 = loc(fused[#loc29, #loc30])
#loc177 = loc(fused[#loc31, #loc32])
#loc178 = loc(fused[#loc36, #loc37])
#loc179 = loc(fused[#loc39, #loc40, #loc41, #loc32])
#loc180 = loc(fused[#loc44, #loc45])
#loc181 = loc(fused[#loc49, #loc47])
#loc182 = loc(fused[#loc50, #loc51])
#loc183 = loc(fused[#loc52, #loc53])
#loc184 = loc(fused[#loc55, #loc56])
#loc185 = loc(fused[#loc57, #loc58])
#loc186 = loc(fused[#loc59, #loc60])
#loc187 = loc(fused[#loc63, #loc64])
#loc188 = loc(fused[#loc65, #loc66])
#loc189 = loc(fused[#loc67, #loc68])
#loc190 = loc(fused[#loc69, #loc70])
#loc191 = loc(fused[#loc71, #loc72])
#loc192 = loc(fused[#loc73, #loc74])
#loc193 = loc(fused[#loc75, #loc76])
#loc194 = loc(fused[#loc78, #loc77])
#loc195 = loc(fused[#loc79, #loc80])
#loc196 = loc(fused[#loc81, #loc82])
#loc197 = loc(fused[#loc85, #loc84])
#loc198 = loc(fused[#loc88, #loc86])
#loc199 = loc(fused[#loc89, #loc90])
#loc200 = loc(fused[#loc91, #loc92])
#loc201 = loc(fused[#loc94, #loc95])
#loc202 = loc(fused[#loc96, #loc97])
#loc203 = loc(fused[#loc98, #loc99])
#loc204 = loc(fused[#loc103, #loc104])
#loc205 = loc(fused[#loc105, #loc106])
#loc206 = loc(fused[#loc107, #loc108])
#loc207 = loc(fused[#loc109, #loc110])
#loc208 = loc(fused[#loc112, #loc111])
#loc209 = loc(fused[#loc113, #loc114])
#loc210 = loc(fused[#loc115, #loc116])
#loc211 = loc(fused[#loc118, #loc119])
#loc212 = loc(fused[#loc120, #loc121])
#loc213 = loc(fused[#loc122, #loc123])
#loc214 = loc(fused[#loc127, #loc128])
#loc215 = loc(fused[#loc130, #loc131, #loc132, #loc123])
#loc216 = loc(fused[#loc135, #loc136])
#loc217 = loc(fused[#loc141, #loc139])
#loc218 = loc(fused[#loc142, #loc143])
#loc219 = loc(fused[#loc144, #loc145])
#loc220 = loc(fused[#loc147, #loc148])
#loc221 = loc(fused[#loc151, #loc150])
#loc222 = loc(fused[#loc153, #loc154, #loc155, #loc148])
#loc223 = loc(fused[#loc156, #loc157])
#loc224 = loc(fused[#loc158, #loc159])
