!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_snprintf_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc87)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\0A\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_snprintf_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc89)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc90)
    cir.br ^bb1 loc(#loc91)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc13)
    cir.brcond %3 ^bb2, ^bb5 loc(#loc92)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc93)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc89)
    cir.store %4, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc89)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc90)
    %6 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc17)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc19)
    %10 = cir.const #cir.int<6> : !u64i loc(#loc94)
    %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc95)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc22)
    %14 = cir.binop(sub, %11, %13) : !u64i loc(#loc96)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc3)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc3)
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc4)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc4)
    %19 = cir.call @snprintf(%7, %14, %16, %18) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc17)
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc12)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc12)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc88)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_snprintf_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc98)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc99)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    cir.return loc(#loc24)
  } loc(#loc97)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc31)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"snprintf failed!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc32)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc102)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc103)
    cir.br ^bb1 loc(#loc104)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc41)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc105)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc31)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    cir.br ^bb10 loc(#loc43)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc106)
  ^bb4:  // pred: ^bb3
    %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc102)
    cir.store %6, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc102)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
    cir.br ^bb5 loc(#loc107)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc50)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc52)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc52)
    %12 = cir.const #cir.int<6> : !u64i loc(#loc108)
    %13 = cir.binop(sub, %11, %12) : !u64i loc(#loc109)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc55)
    %16 = cir.binop(sub, %13, %15) : !u64i loc(#loc110)
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc56)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc56)
    %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc57)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc57)
    %21 = cir.call @snprintf(%9, %16, %18, %20) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc50)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc111)
    cir.brcond %23 ^bb6, ^bb7 loc(#loc112)
  ^bb6:  // pred: ^bb5
    %24 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc32)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    cir.br ^bb7 loc(#loc49)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc49)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc47)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc40)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc40)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc34)
  } loc(#loc101)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc114)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc115)
    cir.br ^bb1 loc(#loc116)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc69)
    cir.brcond %3 ^bb2, ^bb9 loc(#loc117)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc118)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc114)
    cir.store %4, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc114)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    cir.br ^bb4 loc(#loc119)
  ^bb4:  // pred: ^bb3
    %6 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc75)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc77)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc77)
    %10 = cir.const #cir.int<6> : !u64i loc(#loc120)
    %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc121)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc80)
    %14 = cir.binop(sub, %11, %13) : !u64i loc(#loc122)
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc81)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc81)
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc82)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc82)
    %19 = cir.call @snprintf(%7, %14, %16, %18) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc75)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc123)
    cir.brcond %21 ^bb5, ^bb6 loc(#loc124)
  ^bb5:  // pred: ^bb4
    %22 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc85)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    cir.br ^bb6 loc(#loc74)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc74)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc72)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc68)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc68)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc62)
  } loc(#loc113)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_snprintf_04.c":0:0)
#loc1 = loc("/usr/include/stdio.h":385:1)
#loc2 = loc("/usr/include/stdio.h":387:62)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":48:46)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":48:54)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":38:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":51:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":45:13)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":45:36)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":46:13)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":46:27)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":40:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":50:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":40:8)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":41:5)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":42:9)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":49:9)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":48:13)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":48:22)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":48:27)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":48:31)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":48:41)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":48:43)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":100:1)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":104:1)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":102:5)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":102:11)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":103:5)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":103:11)
#loc29 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":63:19)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":75:27)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":58:1)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":79:1)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":70:13)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":70:36)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":71:13)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":71:27)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":60:5)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":78:5)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":60:8)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":61:5)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":64:5)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":66:5)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":63:9)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":67:9)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":77:9)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":73:13)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":76:13)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":73:17)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":73:26)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":73:31)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":73:35)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":73:45)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":73:47)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":73:50)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":73:58)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":73:65)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":74:13)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":75:17)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":82:1)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":98:1)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":89:13)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":89:36)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":90:13)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":90:27)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":84:5)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":97:5)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":84:8)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":85:5)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":86:9)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":96:9)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":92:13)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":95:13)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":92:17)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":92:26)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":92:31)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":92:35)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":92:45)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":92:47)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":92:50)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":92:58)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":92:65)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":93:13)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":94:27)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_snprintf_04.c":94:17)
#loc87 = loc(fused[#loc1, #loc2])
#loc88 = loc(fused[#loc5, #loc6])
#loc89 = loc(fused[#loc7, #loc8])
#loc90 = loc(fused[#loc9, #loc10])
#loc91 = loc(fused[#loc11, #loc12])
#loc92 = loc(fused[#loc14, #loc12])
#loc93 = loc(fused[#loc15, #loc16])
#loc94 = loc(fused[#loc20, #loc21])
#loc95 = loc(fused[#loc19, #loc21])
#loc96 = loc(fused[#loc19, #loc22])
#loc97 = loc(fused[#loc23, #loc24])
#loc98 = loc(fused[#loc25, #loc26])
#loc99 = loc(fused[#loc27, #loc28])
#loc100 = loc(fused[#loc29, #loc30])
#loc101 = loc(fused[#loc33, #loc34])
#loc102 = loc(fused[#loc35, #loc36])
#loc103 = loc(fused[#loc37, #loc38])
#loc104 = loc(fused[#loc39, #loc40])
#loc105 = loc(fused[#loc42, #loc43, #loc44, #loc40])
#loc106 = loc(fused[#loc46, #loc47])
#loc107 = loc(fused[#loc48, #loc49])
#loc108 = loc(fused[#loc53, #loc54])
#loc109 = loc(fused[#loc52, #loc54])
#loc110 = loc(fused[#loc52, #loc55])
#loc111 = loc(fused[#loc50, #loc58])
#loc112 = loc(fused[#loc59, #loc49])
#loc113 = loc(fused[#loc61, #loc62])
#loc114 = loc(fused[#loc63, #loc64])
#loc115 = loc(fused[#loc65, #loc66])
#loc116 = loc(fused[#loc67, #loc68])
#loc117 = loc(fused[#loc70, #loc68])
#loc118 = loc(fused[#loc71, #loc72])
#loc119 = loc(fused[#loc73, #loc74])
#loc120 = loc(fused[#loc78, #loc79])
#loc121 = loc(fused[#loc77, #loc79])
#loc122 = loc(fused[#loc77, #loc80])
#loc123 = loc(fused[#loc75, #loc83])
#loc124 = loc(fused[#loc84, #loc74])
