!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc102)
  cir.func @_ZN64CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_333badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc104)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc105)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc106)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc8)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc10)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc10)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc10)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc107)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc12)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc12)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc107)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    cir.store %18, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
    %19 = cir.const #cir.int<0> : !s8i loc(#loc15)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc18)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc109)
    cir.scope {
      %23 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc111)
      %24 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc22)
      %25 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
      cir.store %25, %23 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
      cir.scope {
        %26 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc113)
        %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
        %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
        %29 = cir.const #cir.int<67> : !s8i loc(#loc28)
        %30 = cir.cast(integral, %29 : !s8i), !s32i loc(#loc28)
        %31 = cir.const #cir.int<100> : !s32i loc(#loc29)
        %32 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc29)
        %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc29)
        cir.libc.memset %34 bytes from %28 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc114)
        %35 = cir.const #cir.int<0> : !s8i loc(#loc33)
        %36 = cir.const #cir.int<100> : !s32i loc(#loc34)
        %37 = cir.const #cir.int<1> : !s32i loc(#loc35)
        %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc34)
        %39 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
        %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc36)
        cir.store %35, %40 : !s8i, !cir.ptr<!s8i> loc(#loc115)
        %41 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
        %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
        %43 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
        %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
        %45 = cir.const #cir.int<100> : !s32i loc(#loc39)
        %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc39)
        %47 = cir.const #cir.int<1> : !u64i loc(#loc116)
        %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc117)
        cir.libc.memcpy %48 bytes from %44 to %42 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc118)
        %49 = cir.const #cir.int<0> : !s8i loc(#loc44)
        %50 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
        %51 = cir.const #cir.int<100> : !s32i loc(#loc46)
        %52 = cir.const #cir.int<1> : !s32i loc(#loc47)
        %53 = cir.binop(sub, %51, %52) nsw : !s32i loc(#loc46)
        %54 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc48)
        cir.store %49, %54 : !s8i, !cir.ptr<!s8i> loc(#loc119)
        %55 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
        cir.call @printLine(%55) : (!cir.ptr<!s8i>) -> () loc(#loc50)
      } loc(#loc112)
    } loc(#loc110)
    cir.return loc(#loc4)
  } loc(#loc103)
  cir.func internal private @_ZN64CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc122)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc123)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc56)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc58)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc58)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc58)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc58)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc58)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc124)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc58)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc58)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc60)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc60)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc60)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc60)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc60)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc60)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc60)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    %18 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    cir.store %18, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    %19 = cir.const #cir.int<0> : !s8i loc(#loc63)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc66)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc126)
    cir.scope {
      %23 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc128)
      %24 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc70)
      %25 = cir.load %24 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
      cir.store %25, %23 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
      cir.scope {
        %26 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc130)
        %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc75)
        %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc75)
        %29 = cir.const #cir.int<67> : !s8i loc(#loc76)
        %30 = cir.cast(integral, %29 : !s8i), !s32i loc(#loc76)
        %31 = cir.const #cir.int<100> : !s32i loc(#loc77)
        %32 = cir.const #cir.int<1> : !s32i loc(#loc78)
        %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc77)
        %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc77)
        cir.libc.memset %34 bytes from %28 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc131)
        %35 = cir.const #cir.int<0> : !s8i loc(#loc81)
        %36 = cir.const #cir.int<100> : !s32i loc(#loc82)
        %37 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %38 = cir.binop(sub, %36, %37) nsw : !s32i loc(#loc82)
        %39 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc84)
        %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !s32i), !cir.ptr<!s8i> loc(#loc84)
        cir.store %35, %40 : !s8i, !cir.ptr<!s8i> loc(#loc132)
        %41 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
        %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
        %43 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc86)
        %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
        %45 = cir.const #cir.int<100> : !s32i loc(#loc87)
        %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc87)
        %47 = cir.const #cir.int<1> : !u64i loc(#loc133)
        %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc134)
        cir.libc.memcpy %48 bytes from %44 to %42 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc135)
        %49 = cir.const #cir.int<0> : !s8i loc(#loc92)
        %50 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
        %51 = cir.const #cir.int<100> : !s32i loc(#loc94)
        %52 = cir.const #cir.int<1> : !s32i loc(#loc95)
        %53 = cir.binop(sub, %51, %52) nsw : !s32i loc(#loc94)
        %54 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc96)
        cir.store %49, %54 : !s8i, !cir.ptr<!s8i> loc(#loc136)
        %55 = cir.load %23 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
        cir.call @printLine(%55) : (!cir.ptr<!s8i>) -> () loc(#loc98)
      } loc(#loc129)
    } loc(#loc127)
    cir.return loc(#loc52)
  } loc(#loc120)
  cir.func @_ZN64CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_334goodEv() extra(#fn_attr) {
    cir.call @_ZN64CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33L7goodG2BEv() : () -> () loc(#loc101)
    cir.return loc(#loc100)
  } loc(#loc137)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":26:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":48:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":28:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":28:12)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":29:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":29:23)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":30:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":30:36)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":31:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":31:37)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":34:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":34:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":35:15)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":35:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":35:10)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":35:11)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":36:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":47:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":37:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":37:23)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":38:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":46:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":39:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":39:28)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":40:20)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":40:28)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":40:33)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":40:37)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":40:13)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":40:38)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":41:29)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":41:20)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":41:24)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":41:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":43:20)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":43:26)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":43:34)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":43:38)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":43:49)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":43:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":43:50)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":44:27)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":44:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":44:18)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":44:22)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":44:23)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":45:23)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":45:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":55:1)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":76:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":57:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":57:12)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":58:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":58:23)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":59:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":59:36)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":60:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":60:37)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":62:12)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":62:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":63:15)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":63:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":63:10)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":63:11)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":64:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":75:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":65:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":65:23)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":66:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":74:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":67:13)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":67:28)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":68:20)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":68:28)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":68:33)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":68:37)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":68:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":68:38)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":69:29)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":69:20)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":69:24)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":69:13)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":71:20)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":71:26)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":71:34)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":71:38)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":71:49)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":71:13)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":71:50)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":72:27)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":72:13)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":72:18)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":72:22)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":72:23)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":73:23)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":73:13)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":78:1)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":81:1)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_33.cpp":80:5)
#loc102 = loc(fused[#loc1, #loc2])
#loc103 = loc(fused[#loc3, #loc4])
#loc104 = loc(fused[#loc5, #loc6])
#loc105 = loc(fused[#loc7, #loc8])
#loc106 = loc(fused[#loc9, #loc10])
#loc107 = loc(fused[#loc11, #loc12])
#loc108 = loc(fused[#loc14, #loc13])
#loc109 = loc(fused[#loc16, #loc15])
#loc110 = loc(fused[#loc19, #loc20])
#loc111 = loc(fused[#loc21, #loc22])
#loc112 = loc(fused[#loc23, #loc24])
#loc113 = loc(fused[#loc25, #loc26])
#loc114 = loc(fused[#loc31, #loc32])
#loc115 = loc(fused[#loc36, #loc33])
#loc116 = loc(fused[#loc40, #loc41])
#loc117 = loc(fused[#loc39, #loc41])
#loc118 = loc(fused[#loc42, #loc43])
#loc119 = loc(fused[#loc45, #loc44])
#loc120 = loc(fused[#loc51, #loc52])
#loc121 = loc(fused[#loc53, #loc54])
#loc122 = loc(fused[#loc55, #loc56])
#loc123 = loc(fused[#loc57, #loc58])
#loc124 = loc(fused[#loc59, #loc60])
#loc125 = loc(fused[#loc62, #loc61])
#loc126 = loc(fused[#loc64, #loc63])
#loc127 = loc(fused[#loc67, #loc68])
#loc128 = loc(fused[#loc69, #loc70])
#loc129 = loc(fused[#loc71, #loc72])
#loc130 = loc(fused[#loc73, #loc74])
#loc131 = loc(fused[#loc79, #loc80])
#loc132 = loc(fused[#loc84, #loc81])
#loc133 = loc(fused[#loc88, #loc89])
#loc134 = loc(fused[#loc87, #loc89])
#loc135 = loc(fused[#loc90, #loc91])
#loc136 = loc(fused[#loc93, #loc92])
#loc137 = loc(fused[#loc99, #loc100])
