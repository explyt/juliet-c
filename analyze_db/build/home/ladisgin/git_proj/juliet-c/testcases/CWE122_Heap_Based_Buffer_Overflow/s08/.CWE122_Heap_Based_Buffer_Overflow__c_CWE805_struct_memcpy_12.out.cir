!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":110:10)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":110:14)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":110:20)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":110:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc248 = loc(fused[#loc107, #loc108])
#loc249 = loc(fused[#loc109, #loc110])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc203)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc204)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc205)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc206)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc207)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc209)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc210)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc211)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc19)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc212)
    cir.br ^bb1 loc(#loc213)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc214)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc214)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc23)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %7 ^bb2, ^bb7 loc(#loc215)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc28)
    %9 = cir.const #cir.int<50> : !s32i loc(#loc29)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc29)
    %11 = cir.const #cir.int<8> : !u64i loc(#loc216)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc217)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc28)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc218)
    cir.store %14, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc219)
    cir.br ^bb3 loc(#loc220)
  ^bb3:  // pred: ^bb2
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc221)
    cir.brcond %18 ^bb4, ^bb5 loc(#loc222)
  ^bb4:  // pred: ^bb3
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc39)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc41)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc39)
    cir.br ^bb5 loc(#loc35)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc35)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc26)
  ^bb7:  // pred: ^bb1
    %22 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc42)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc43)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc43)
    %25 = cir.const #cir.int<8> : !u64i loc(#loc223)
    %26 = cir.binop(mul, %24, %25) : !u64i loc(#loc224)
    %27 = cir.call @malloc(%26) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc42)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc225)
    cir.store %28, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc226)
    cir.br ^bb8 loc(#loc227)
  ^bb8:  // pred: ^bb7
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc51)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
    %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc228)
    cir.brcond %32 ^bb9, ^bb10 loc(#loc229)
  ^bb9:  // pred: ^bb8
    %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc53)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc55)
    cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc53)
    cir.br ^bb10 loc(#loc49)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc49)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc22)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc22)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc230)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc231)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc232)
  ^bb16:  // pred: ^bb15
    %36 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc62)
    cir.store %37, %1 : !u64i, !cir.ptr<!u64i> loc(#loc233)
    cir.br ^bb17 loc(#loc232)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc65)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc65)
    %41 = cir.cmp(lt, %38, %40) : !u64i, !cir.bool loc(#loc234)
    cir.brcond %41 ^bb18, ^bb22 loc(#loc66)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc235)
  ^bb19:  // pred: ^bb18
    %42 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %43 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc69)
    %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
    %45 = cir.ptr_stride(%44 : !cir.ptr<!ty__twoIntsStruct>, %43 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
    %46 = cir.get_member %45[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc71)
    cir.store %42, %46 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    %47 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %48 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc73)
    %49 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
    %50 = cir.ptr_stride(%49 : !cir.ptr<!ty__twoIntsStruct>, %48 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
    %51 = cir.get_member %50[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc75)
    cir.store %47, %51 : !s32i, !cir.ptr<!s32i> loc(#loc237)
    cir.br ^bb20 loc(#loc61)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc61)
  ^bb21:  // pred: ^bb20
    %52 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc76)
    %53 = cir.unary(inc, %52) : !u64i, !u64i loc(#loc77)
    cir.store %53, %1 : !u64i, !cir.ptr<!u64i> loc(#loc238)
    cir.br ^bb17 loc(#loc232)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc61)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc59)
  ^bb24:  // pred: ^bb23
    %54 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc78)
    %55 = cir.cast(bitcast, %54 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc78)
    %56 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc79)
    %57 = cir.cast(bitcast, %56 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc79)
    %58 = cir.const #cir.int<100> : !s32i loc(#loc80)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc80)
    %60 = cir.const #cir.int<8> : !u64i loc(#loc239)
    %61 = cir.binop(mul, %59, %60) : !u64i loc(#loc240)
    cir.libc.memcpy %61 bytes from %57 to %55 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc241)
    %62 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %64 = cir.ptr_stride(%62 : !cir.ptr<!ty__twoIntsStruct>, %63 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
    cir.call @printStructLine(%64) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc88)
    %65 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
    %66 = cir.cast(bitcast, %65 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc89)
    cir.call @free(%66) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc90)
    cir.br ^bb25 loc(#loc57)
  ^bb25:  // pred: ^bb24
    cir.return loc(#loc12)
  } loc(#loc208)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc243)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc93)
    cir.return loc(#loc92)
  } loc(#loc242)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc244)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc245)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc246)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc104)
  cir.func @main(%arg0: !s32i loc(fused[#loc107, #loc108]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc109, #loc110])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc248)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc249)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc106)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc111)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc111)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc112)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc113)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc113)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc114)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc101)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc250)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12_good() : () -> () loc(#loc116)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc102)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc103)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc251)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12_bad() : () -> () loc(#loc120)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc104)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc123)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    cir.return %17 : !s32i loc(#loc252)
  } loc(#loc247)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc254)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc255)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc256)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc257)
    cir.br ^bb1 loc(#loc258)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc259)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc259)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc137)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc137)
    cir.brcond %7 ^bb2, ^bb7 loc(#loc260)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc142)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc143)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc143)
    %11 = cir.const #cir.int<8> : !u64i loc(#loc261)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc262)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc142)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc263)
    cir.store %14, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc264)
    cir.br ^bb3 loc(#loc265)
  ^bb3:  // pred: ^bb2
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc150)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc151)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc151)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc266)
    cir.brcond %18 ^bb4, ^bb5 loc(#loc267)
  ^bb4:  // pred: ^bb3
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc153)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc155)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc153)
    cir.br ^bb5 loc(#loc149)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc149)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc140)
  ^bb7:  // pred: ^bb1
    %22 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc156)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc157)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc157)
    %25 = cir.const #cir.int<8> : !u64i loc(#loc268)
    %26 = cir.binop(mul, %24, %25) : !u64i loc(#loc269)
    %27 = cir.call @malloc(%26) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc156)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc270)
    cir.store %28, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc271)
    cir.br ^bb8 loc(#loc272)
  ^bb8:  // pred: ^bb7
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc164)
    %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc165)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc165)
    %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc273)
    cir.brcond %32 ^bb9, ^bb10 loc(#loc274)
  ^bb9:  // pred: ^bb8
    %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc167)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc169)
    cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc167)
    cir.br ^bb10 loc(#loc163)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc163)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc136)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc136)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc275)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc276)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc277)
  ^bb16:  // pred: ^bb15
    %36 = cir.const #cir.int<0> : !s32i loc(#loc176)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc176)
    cir.store %37, %1 : !u64i, !cir.ptr<!u64i> loc(#loc278)
    cir.br ^bb17 loc(#loc277)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc178)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc179)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc179)
    %41 = cir.cmp(lt, %38, %40) : !u64i, !cir.bool loc(#loc279)
    cir.brcond %41 ^bb18, ^bb22 loc(#loc180)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc280)
  ^bb19:  // pred: ^bb18
    %42 = cir.const #cir.int<0> : !s32i loc(#loc182)
    %43 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc183)
    %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc184)
    %45 = cir.ptr_stride(%44 : !cir.ptr<!ty__twoIntsStruct>, %43 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc184)
    %46 = cir.get_member %45[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc71)
    cir.store %42, %46 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    %47 = cir.const #cir.int<0> : !s32i loc(#loc185)
    %48 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc186)
    %49 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc187)
    %50 = cir.ptr_stride(%49 : !cir.ptr<!ty__twoIntsStruct>, %48 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc187)
    %51 = cir.get_member %50[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc75)
    cir.store %47, %51 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    cir.br ^bb20 loc(#loc175)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc175)
  ^bb21:  // pred: ^bb20
    %52 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc188)
    %53 = cir.unary(inc, %52) : !u64i, !u64i loc(#loc189)
    cir.store %53, %1 : !u64i, !cir.ptr<!u64i> loc(#loc283)
    cir.br ^bb17 loc(#loc277)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc175)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc173)
  ^bb24:  // pred: ^bb23
    %54 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc190)
    %55 = cir.cast(bitcast, %54 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc190)
    %56 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc191)
    %57 = cir.cast(bitcast, %56 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc191)
    %58 = cir.const #cir.int<100> : !s32i loc(#loc192)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc192)
    %60 = cir.const #cir.int<8> : !u64i loc(#loc284)
    %61 = cir.binop(mul, %59, %60) : !u64i loc(#loc285)
    cir.libc.memcpy %61 bytes from %57 to %55 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc286)
    %62 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc197)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc198)
    %64 = cir.ptr_stride(%62 : !cir.ptr<!ty__twoIntsStruct>, %63 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc199)
    cir.call @printStructLine(%64) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc200)
    %65 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc201)
    %66 = cir.cast(bitcast, %65 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc201)
    cir.call @free(%66) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc202)
    cir.br ^bb25 loc(#loc171)
  ^bb25:  // pred: ^bb24
    cir.return loc(#loc126)
  } loc(#loc253)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":21:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":53:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":38:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":38:33)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":40:13)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":40:20)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":23:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":23:21)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":24:12)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":24:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":25:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":36:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":25:8)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":25:33)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":26:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":30:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":32:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":28:33)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":28:40)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":28:43)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":28:63)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":28:64)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":28:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":29:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":29:37)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":29:13)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":29:21)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":29:27)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":29:28)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":29:34)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":29:33)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":34:33)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":34:40)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":34:44)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":34:64)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":34:65)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":34:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":35:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":35:37)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":35:13)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":35:21)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":35:27)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":35:28)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":35:34)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":35:33)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":37:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":52:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":39:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":47:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":42:13)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":46:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":42:22)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":42:18)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":42:25)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":42:29)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":42:27)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":43:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":44:36)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":44:24)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":44:17)
#loc71 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":45:36)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":45:24)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":45:17)
#loc75 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":42:35)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":42:34)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":49:16)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":49:22)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":49:30)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":49:34)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":49:54)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":49:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":49:55)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":50:26)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":50:31)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":50:32)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":50:9)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":51:14)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":51:9)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":95:1)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":98:1)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":97:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":97:13)
#loc95 = loc("/usr/include/stdlib.h":575:1)
#loc96 = loc("/usr/include/stdlib.h":575:41)
#loc97 = loc("/usr/include/time.h":76:1)
#loc98 = loc("/usr/include/time.h":76:38)
#loc99 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc100 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":115:15)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":117:15)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":120:15)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":122:15)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":110:1)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":125:1)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":111:1)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":113:27)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":113:22)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":113:5)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":115:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":116:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":116:71)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":117:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":120:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":121:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":121:70)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":122:5)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":124:12)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":124:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":61:1)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":93:1)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":78:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":78:33)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":80:13)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":80:20)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":63:5)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":63:21)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":64:12)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":64:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":65:5)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":76:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":65:8)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":65:33)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":66:5)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":70:5)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":72:5)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":68:33)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":68:40)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":68:44)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":68:64)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":68:65)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":68:9)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":69:9)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":69:37)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":69:13)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":69:21)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":69:27)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":69:28)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":69:34)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":69:33)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":74:33)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":74:40)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":74:44)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":74:64)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":74:65)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":74:9)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":75:9)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":75:37)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":75:13)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":75:21)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":75:27)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":75:28)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":75:34)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":75:33)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":77:5)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":92:5)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":79:9)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":87:9)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":82:13)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":86:13)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":82:22)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":82:18)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":82:25)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":82:29)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":82:27)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":83:13)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":84:36)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":84:24)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":84:17)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":85:36)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":85:24)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":85:17)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":82:35)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":82:34)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":89:16)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":89:22)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":89:30)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":89:34)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":89:54)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":89:9)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":89:55)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":90:26)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":90:31)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":90:32)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":90:9)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":91:14)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_12.c":91:9)
#loc203 = loc(fused[#loc1, #loc2])
#loc204 = loc(fused[#loc3, #loc4])
#loc205 = loc(fused[#loc5, #loc6])
#loc206 = loc(fused[#loc7, #loc8])
#loc207 = loc(fused[#loc9, #loc10])
#loc208 = loc(fused[#loc11, #loc12])
#loc209 = loc(fused[#loc13, #loc14])
#loc210 = loc(fused[#loc15, #loc16])
#loc211 = loc(fused[#loc17, #loc18])
#loc212 = loc(fused[#loc20, #loc19])
#loc213 = loc(fused[#loc21, #loc22])
#loc214 = loc(fused[#loc23, #loc24])
#loc215 = loc(fused[#loc25, #loc26, #loc27, #loc22])
#loc216 = loc(fused[#loc30, #loc31])
#loc217 = loc(fused[#loc29, #loc31])
#loc218 = loc(fused[#loc28, #loc32])
#loc219 = loc(fused[#loc33, #loc32])
#loc220 = loc(fused[#loc34, #loc35])
#loc221 = loc(fused[#loc36, #loc37])
#loc222 = loc(fused[#loc38, #loc35])
#loc223 = loc(fused[#loc44, #loc45])
#loc224 = loc(fused[#loc43, #loc45])
#loc225 = loc(fused[#loc42, #loc46])
#loc226 = loc(fused[#loc47, #loc46])
#loc227 = loc(fused[#loc48, #loc49])
#loc228 = loc(fused[#loc50, #loc51])
#loc229 = loc(fused[#loc52, #loc49])
#loc230 = loc(fused[#loc56, #loc57])
#loc231 = loc(fused[#loc58, #loc59])
#loc232 = loc(fused[#loc60, #loc61])
#loc233 = loc(fused[#loc63, #loc62])
#loc234 = loc(fused[#loc64, #loc65])
#loc235 = loc(fused[#loc67, #loc61])
#loc236 = loc(fused[#loc70, #loc68])
#loc237 = loc(fused[#loc74, #loc72])
#loc238 = loc(fused[#loc77, #loc76])
#loc239 = loc(fused[#loc81, #loc82])
#loc240 = loc(fused[#loc80, #loc82])
#loc241 = loc(fused[#loc83, #loc84])
#loc242 = loc(fused[#loc91, #loc92])
#loc243 = loc(fused[#loc93, #loc94])
#loc244 = loc(fused[#loc95, #loc96])
#loc245 = loc(fused[#loc97, #loc98])
#loc246 = loc(fused[#loc99, #loc100])
#loc247 = loc(fused[#loc105, #loc106])
#loc250 = loc(fused[#loc116, #loc117])
#loc251 = loc(fused[#loc120, #loc121])
#loc252 = loc(fused[#loc124, #loc123])
#loc253 = loc(fused[#loc125, #loc126])
#loc254 = loc(fused[#loc127, #loc128])
#loc255 = loc(fused[#loc129, #loc130])
#loc256 = loc(fused[#loc131, #loc132])
#loc257 = loc(fused[#loc134, #loc133])
#loc258 = loc(fused[#loc135, #loc136])
#loc259 = loc(fused[#loc137, #loc138])
#loc260 = loc(fused[#loc139, #loc140, #loc141, #loc136])
#loc261 = loc(fused[#loc144, #loc145])
#loc262 = loc(fused[#loc143, #loc145])
#loc263 = loc(fused[#loc142, #loc146])
#loc264 = loc(fused[#loc147, #loc146])
#loc265 = loc(fused[#loc148, #loc149])
#loc266 = loc(fused[#loc150, #loc151])
#loc267 = loc(fused[#loc152, #loc149])
#loc268 = loc(fused[#loc158, #loc159])
#loc269 = loc(fused[#loc157, #loc159])
#loc270 = loc(fused[#loc156, #loc160])
#loc271 = loc(fused[#loc161, #loc160])
#loc272 = loc(fused[#loc162, #loc163])
#loc273 = loc(fused[#loc164, #loc165])
#loc274 = loc(fused[#loc166, #loc163])
#loc275 = loc(fused[#loc170, #loc171])
#loc276 = loc(fused[#loc172, #loc173])
#loc277 = loc(fused[#loc174, #loc175])
#loc278 = loc(fused[#loc177, #loc176])
#loc279 = loc(fused[#loc178, #loc179])
#loc280 = loc(fused[#loc181, #loc175])
#loc281 = loc(fused[#loc184, #loc182])
#loc282 = loc(fused[#loc187, #loc185])
#loc283 = loc(fused[#loc189, #loc188])
#loc284 = loc(fused[#loc193, #loc194])
#loc285 = loc(fused[#loc192, #loc194])
#loc286 = loc(fused[#loc195, #loc196])
