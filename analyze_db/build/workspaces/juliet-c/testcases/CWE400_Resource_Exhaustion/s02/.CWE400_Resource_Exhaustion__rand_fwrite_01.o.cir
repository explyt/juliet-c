!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc3)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc205)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc206)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc11)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc208)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc210)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc19)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc21)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc21)
    %7 = cir.ternary(%6, true {
      %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc21)
      %11 = cir.const #cir.int<30> : !s32i loc(#loc21)
      %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc21)
      %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc21)
      %15 = cir.const #cir.int<15> : !s32i loc(#loc21)
      %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc21)
      %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc21)
      %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc21)
      %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc21)
      cir.yield %20 : !u32i loc(#loc21)
    }, false {
      %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc21)
      %11 = cir.const #cir.int<30> : !s32i loc(#loc21)
      %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc21)
      %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc21)
      %15 = cir.const #cir.int<15> : !s32i loc(#loc21)
      %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc21)
      %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc21)
      %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
      %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc21)
      %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc21)
      %21 = cir.unary(minus, %20) : !u32i, !u32i loc(#loc21)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc21)
      %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc21)
      %24 = cir.binop(sub, %21, %23) : !u32i loc(#loc21)
      cir.yield %24 : !u32i loc(#loc21)
    }) : (!cir.bool) -> !u32i loc(#loc21)
    %8 = cir.cast(integral, %7 : !u32i), !s32i loc(#loc21)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    cir.scope {
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc214)
      %10 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc215)
      %11 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc216)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc26)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc26)
      cir.store %13, %9 : !u64i, !cir.ptr<!u64i> loc(#loc214)
      %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc28)
      cir.store %14, %10 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc215)
      %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc3)
      %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc3)
      cir.store %16, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
      %17 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc30)
      %18 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
      %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
      %21 = cir.call @fopen(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc30)
      cir.store %21, %10 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc217)
      cir.scope {
        %22 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc36)
        %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
        %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc37)
        %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc219)
        cir.if %25 {
          %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc39)
          %27 = cir.const #cir.int<1> : !s32i loc(#loc40)
          cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc39)
        } loc(#loc220)
      } loc(#loc218)
      cir.scope {
        %22 = cir.const #cir.int<0> : !s32i loc(#loc43)
        %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc43)
        cir.store %23, %9 : !u64i, !cir.ptr<!u64i> loc(#loc222)
        cir.for : cond {
          %24 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc45)
          %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc46)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc46)
          %27 = cir.cmp(lt, %24, %26) : !u64i, !cir.bool loc(#loc223)
          cir.condition(%27) loc(#loc47)
        } body {
          cir.scope {
            cir.scope {
              %24 = cir.const #cir.int<50> : !u64i loc(#loc226)
              %25 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc53)
              %26 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc11)
              %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc11)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
              %29 = cir.const #cir.int<1> : !u64i loc(#loc227)
              %30 = cir.const #cir.int<50> : !u64i loc(#loc228)
              %31 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc58)
              %32 = cir.call @fwrite(%28, %29, %30, %31) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc53)
              %33 = cir.cmp(ne, %24, %32) : !u64i, !cir.bool loc(#loc229)
              cir.if %33 {
                %34 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc61)
                %35 = cir.const #cir.int<1> : !s32i loc(#loc62)
                cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc61)
              } loc(#loc230)
            } loc(#loc225)
          } loc(#loc224)
          cir.yield loc(#loc42)
        } step {
          %24 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc63)
          %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc64)
          cir.store %25, %9 : !u64i, !cir.ptr<!u64i> loc(#loc231)
          cir.yield loc(#loc221)
        } loc(#loc221)
      } loc(#loc221)
      cir.scope {
        %22 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc67)
        %23 = cir.cast(ptr_to_bool, %22 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc67)
        cir.if %23 {
          %24 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc69)
          %25 = cir.call @fclose(%24) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc70)
        } loc(#loc233)
      } loc(#loc232)
    } loc(#loc213)
    cir.return loc(#loc15)
  } loc(#loc209)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc235)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc73)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc236)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc75)
    cir.return loc(#loc72)
  } loc(#loc234)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc238)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc82)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc84)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc242)
      %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc243)
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc244)
      %7 = cir.const #cir.int<0> : !s32i loc(#loc89)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc89)
      cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc242)
      %9 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc91)
      cir.store %9, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc243)
      %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc93)
      %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc93)
      cir.store %11, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc244)
      %12 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc94)
      %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
      %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc96)
      %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc96)
      %16 = cir.call @fopen(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc94)
      cir.store %16, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc245)
      cir.scope {
        %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc101)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc102)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc102)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc247)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc104)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc105)
          cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc104)
        } loc(#loc248)
      } loc(#loc246)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc108)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc108)
        cir.store %18, %4 : !u64i, !cir.ptr<!u64i> loc(#loc250)
        cir.for : cond {
          %19 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc110)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc111)
          %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc251)
          cir.condition(%22) loc(#loc112)
        } body {
          cir.scope {
            cir.scope {
              %19 = cir.const #cir.int<50> : !u64i loc(#loc254)
              %20 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc118)
              %21 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc119)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc119)
              %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
              %24 = cir.const #cir.int<1> : !u64i loc(#loc255)
              %25 = cir.const #cir.int<50> : !u64i loc(#loc256)
              %26 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc124)
              %27 = cir.call @fwrite(%23, %24, %25, %26) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc118)
              %28 = cir.cmp(ne, %19, %27) : !u64i, !cir.bool loc(#loc257)
              cir.if %28 {
                %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc127)
                %30 = cir.const #cir.int<1> : !s32i loc(#loc128)
                cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc127)
              } loc(#loc258)
            } loc(#loc253)
          } loc(#loc252)
          cir.yield loc(#loc107)
        } step {
          %19 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc129)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc130)
          cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc259)
          cir.yield loc(#loc249)
        } loc(#loc249)
      } loc(#loc249)
      cir.scope {
        %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc133)
        %18 = cir.cast(ptr_to_bool, %17 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc133)
        cir.if %18 {
          %19 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc135)
          %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc136)
        } loc(#loc261)
      } loc(#loc260)
    } loc(#loc241)
    cir.return loc(#loc78)
  } loc(#loc237)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc137)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc263)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc143)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc145)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc145)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc145)
    %7 = cir.ternary(%6, true {
      %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc145)
      %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc145)
      %11 = cir.const #cir.int<30> : !s32i loc(#loc145)
      %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc145)
      %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc145)
      %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc145)
      %15 = cir.const #cir.int<15> : !s32i loc(#loc145)
      %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc145)
      %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc145)
      %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc145)
      %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc145)
      %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc145)
      cir.yield %20 : !u32i loc(#loc145)
    }, false {
      %9 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc145)
      %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc145)
      %11 = cir.const #cir.int<30> : !s32i loc(#loc145)
      %12 = cir.shift(left, %10 : !u32i, %11 : !s32i) -> !u32i loc(#loc145)
      %13 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc145)
      %14 = cir.cast(integral, %13 : !s32i), !u32i loc(#loc145)
      %15 = cir.const #cir.int<15> : !s32i loc(#loc145)
      %16 = cir.shift(left, %14 : !u32i, %15 : !s32i) -> !u32i loc(#loc145)
      %17 = cir.binop(xor, %12, %16) : !u32i loc(#loc145)
      %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc145)
      %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc145)
      %20 = cir.binop(xor, %17, %19) : !u32i loc(#loc145)
      %21 = cir.unary(minus, %20) : !u32i, !u32i loc(#loc145)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc145)
      %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc145)
      %24 = cir.binop(sub, %21, %23) : !u32i loc(#loc145)
      cir.yield %24 : !u32i loc(#loc145)
    }) : (!cir.bool) -> !u32i loc(#loc145)
    %8 = cir.cast(integral, %7 : !u32i), !s32i loc(#loc145)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    cir.scope {
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc267)
      %10 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc268)
      %11 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc269)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc150)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc150)
      cir.store %13, %9 : !u64i, !cir.ptr<!u64i> loc(#loc267)
      %14 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc152)
      cir.store %14, %10 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc268)
      %15 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc137)
      %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc137)
      cir.store %16, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc269)
      cir.scope {
        %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc156)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc157)
        %19 = cir.cmp(gt, %17, %18) : !s32i, !cir.bool loc(#loc271)
        %20 = cir.ternary(%19, true {
          %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc159)
          %22 = cir.const #cir.int<20> : !s32i loc(#loc160)
          %23 = cir.cmp(le, %21, %22) : !s32i, !cir.bool loc(#loc272)
          %24 = cir.ternary(%23, true {
            %25 = cir.const #true loc(#loc158)
            cir.yield %25 : !cir.bool loc(#loc158)
          }, false {
            %25 = cir.const #false loc(#loc158)
            cir.yield %25 : !cir.bool loc(#loc158)
          }) : (!cir.bool) -> !cir.bool loc(#loc158)
          cir.yield %24 : !cir.bool loc(#loc158)
        }, false {
          %21 = cir.const #false loc(#loc158)
          cir.yield %21 : !cir.bool loc(#loc158)
        }) : (!cir.bool) -> !cir.bool loc(#loc158)
        cir.if %20 {
          %21 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc162)
          %22 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
          %23 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc164)
          %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc164)
          %25 = cir.call @fopen(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc162)
          cir.store %25, %10 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc274)
          cir.scope {
            %26 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc169)
            %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc170)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc170)
            %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc276)
            cir.if %29 {
              %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc172)
              %31 = cir.const #cir.int<1> : !s32i loc(#loc173)
              cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc172)
            } loc(#loc277)
          } loc(#loc275)
          cir.scope {
            %26 = cir.const #cir.int<0> : !s32i loc(#loc176)
            %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc176)
            cir.store %27, %9 : !u64i, !cir.ptr<!u64i> loc(#loc279)
            cir.for : cond {
              %28 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc178)
              %29 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc179)
              %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc179)
              %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc280)
              cir.condition(%31) loc(#loc180)
            } body {
              cir.scope {
                cir.scope {
                  %28 = cir.const #cir.int<50> : !u64i loc(#loc283)
                  %29 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc186)
                  %30 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc187)
                  %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc187)
                  %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc187)
                  %33 = cir.const #cir.int<1> : !u64i loc(#loc284)
                  %34 = cir.const #cir.int<50> : !u64i loc(#loc285)
                  %35 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc192)
                  %36 = cir.call @fwrite(%32, %33, %34, %35) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc186)
                  %37 = cir.cmp(ne, %28, %36) : !u64i, !cir.bool loc(#loc286)
                  cir.if %37 {
                    %38 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc194)
                    %39 = cir.const #cir.int<1> : !s32i loc(#loc195)
                    cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc194)
                  } loc(#loc287)
                } loc(#loc282)
              } loc(#loc281)
              cir.yield loc(#loc175)
            } step {
              %28 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc196)
              %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc197)
              cir.store %29, %9 : !u64i, !cir.ptr<!u64i> loc(#loc288)
              cir.yield loc(#loc278)
            } loc(#loc278)
          } loc(#loc278)
          cir.scope {
            %26 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc200)
            %27 = cir.cast(ptr_to_bool, %26 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc200)
            cir.if %27 {
              %28 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc202)
              %29 = cir.call @fclose(%28) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc203)
            } loc(#loc290)
          } loc(#loc289)
        } loc(#loc273)
      } loc(#loc270)
    } loc(#loc266)
    cir.return loc(#loc139)
  } loc(#loc262)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":34:32)
#loc4 = loc("/usr/include/stdio.h":264:1)
#loc5 = loc("/usr/include/stdio.h":266:3)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":35:33)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/stdio.h":745:1)
#loc10 = loc("/usr/include/stdio.h":746:43)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:44)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":24:1)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":54:1)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":26:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":26:9)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":28:14)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":28:13)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":28:5)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":30:13)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":30:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":31:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":53:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":32:9)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":32:20)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":33:9)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":33:23)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":34:9)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":35:17)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":35:23)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":35:9)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":35:37)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":36:9)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":39:9)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":36:13)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":36:22)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":37:9)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":38:13)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":38:18)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":42:9)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":48:9)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":42:18)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":42:14)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":42:21)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":42:33)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":42:23)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":43:9)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:13)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":47:13)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:17)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:32)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:37)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:54)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:65)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:68)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:83)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:86)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":44:91)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":45:13)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":46:17)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":46:22)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":42:41)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":42:40)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":49:9)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":52:9)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":49:13)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":50:9)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":51:20)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":51:13)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":125:1)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":129:1)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":127:5)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":127:13)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":128:5)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":128:13)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":61:1)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":91:1)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":63:5)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":63:9)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":65:14)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":65:13)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":65:5)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":67:13)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":67:5)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":68:5)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":90:5)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":69:9)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":69:20)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":70:9)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":70:23)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":71:9)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":71:32)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":72:17)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":72:23)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":72:33)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":72:9)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":72:37)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":73:9)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":76:9)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":73:13)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":73:22)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":74:9)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":75:13)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":75:18)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":79:9)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":85:9)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":79:18)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":79:14)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":79:21)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":79:33)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":79:23)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":80:9)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:13)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":84:13)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:17)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:32)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:37)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:44)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:54)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:65)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:68)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:83)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:86)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":81:91)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":82:13)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":83:17)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":83:22)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":79:41)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":79:40)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":86:9)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":89:9)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":86:13)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":87:9)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":88:20)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":88:13)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":104:32)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":94:1)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":123:1)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":96:5)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":96:9)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":98:14)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":98:13)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":98:5)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":100:13)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":100:5)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":101:5)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":122:5)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":102:9)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":102:20)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":103:9)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":103:23)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":104:9)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":106:9)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":121:9)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":106:13)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":106:21)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":106:23)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":106:26)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":106:35)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":107:9)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":108:21)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":108:27)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":108:37)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":108:13)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":108:41)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":109:13)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":112:13)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":109:17)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":109:26)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":110:13)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":111:17)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":111:22)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":113:13)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":116:13)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":113:22)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":113:18)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":113:25)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":113:37)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":113:27)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":114:13)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:17)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:104)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:21)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:36)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:41)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:48)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:58)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:69)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:72)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:87)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:90)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:95)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:98)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":115:103)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":113:45)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":113:44)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":117:13)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":120:13)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":117:17)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":118:13)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":119:24)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_01.c":119:17)
#loc204 = loc(fused[#loc1, #loc2])
#loc205 = loc(fused[#loc4, #loc5])
#loc206 = loc(fused[#loc7, #loc8])
#loc207 = loc(fused[#loc9, #loc10])
#loc208 = loc(fused[#loc12, #loc13])
#loc209 = loc(fused[#loc14, #loc15])
#loc210 = loc(fused[#loc16, #loc17])
#loc211 = loc(fused[#loc20, #loc18])
#loc212 = loc(fused[#loc22, #loc21])
#loc213 = loc(fused[#loc23, #loc24])
#loc214 = loc(fused[#loc25, #loc26])
#loc215 = loc(fused[#loc27, #loc28])
#loc216 = loc(fused[#loc29, #loc3])
#loc217 = loc(fused[#loc32, #loc33])
#loc218 = loc(fused[#loc34, #loc35])
#loc219 = loc(fused[#loc36, #loc37])
#loc220 = loc(fused[#loc38, #loc35])
#loc221 = loc(fused[#loc41, #loc42])
#loc222 = loc(fused[#loc44, #loc43])
#loc223 = loc(fused[#loc45, #loc46])
#loc224 = loc(fused[#loc48, #loc42])
#loc225 = loc(fused[#loc49, #loc50])
#loc226 = loc(fused[#loc51, #loc52])
#loc227 = loc(fused[#loc54, #loc55])
#loc228 = loc(fused[#loc56, #loc57])
#loc229 = loc(fused[#loc51, #loc59])
#loc230 = loc(fused[#loc60, #loc50])
#loc231 = loc(fused[#loc64, #loc63])
#loc232 = loc(fused[#loc65, #loc66])
#loc233 = loc(fused[#loc68, #loc66])
#loc234 = loc(fused[#loc71, #loc72])
#loc235 = loc(fused[#loc73, #loc74])
#loc236 = loc(fused[#loc75, #loc76])
#loc237 = loc(fused[#loc77, #loc78])
#loc238 = loc(fused[#loc79, #loc80])
#loc239 = loc(fused[#loc83, #loc81])
#loc240 = loc(fused[#loc85, #loc84])
#loc241 = loc(fused[#loc86, #loc87])
#loc242 = loc(fused[#loc88, #loc89])
#loc243 = loc(fused[#loc90, #loc91])
#loc244 = loc(fused[#loc92, #loc93])
#loc245 = loc(fused[#loc97, #loc98])
#loc246 = loc(fused[#loc99, #loc100])
#loc247 = loc(fused[#loc101, #loc102])
#loc248 = loc(fused[#loc103, #loc100])
#loc249 = loc(fused[#loc106, #loc107])
#loc250 = loc(fused[#loc109, #loc108])
#loc251 = loc(fused[#loc110, #loc111])
#loc252 = loc(fused[#loc113, #loc107])
#loc253 = loc(fused[#loc114, #loc115])
#loc254 = loc(fused[#loc116, #loc117])
#loc255 = loc(fused[#loc120, #loc121])
#loc256 = loc(fused[#loc122, #loc123])
#loc257 = loc(fused[#loc116, #loc125])
#loc258 = loc(fused[#loc126, #loc115])
#loc259 = loc(fused[#loc130, #loc129])
#loc260 = loc(fused[#loc131, #loc132])
#loc261 = loc(fused[#loc134, #loc132])
#loc262 = loc(fused[#loc138, #loc139])
#loc263 = loc(fused[#loc140, #loc141])
#loc264 = loc(fused[#loc144, #loc142])
#loc265 = loc(fused[#loc146, #loc145])
#loc266 = loc(fused[#loc147, #loc148])
#loc267 = loc(fused[#loc149, #loc150])
#loc268 = loc(fused[#loc151, #loc152])
#loc269 = loc(fused[#loc153, #loc137])
#loc270 = loc(fused[#loc154, #loc155])
#loc271 = loc(fused[#loc156, #loc157])
#loc272 = loc(fused[#loc159, #loc160])
#loc273 = loc(fused[#loc161, #loc155])
#loc274 = loc(fused[#loc165, #loc166])
#loc275 = loc(fused[#loc167, #loc168])
#loc276 = loc(fused[#loc169, #loc170])
#loc277 = loc(fused[#loc171, #loc168])
#loc278 = loc(fused[#loc174, #loc175])
#loc279 = loc(fused[#loc177, #loc176])
#loc280 = loc(fused[#loc178, #loc179])
#loc281 = loc(fused[#loc181, #loc175])
#loc282 = loc(fused[#loc182, #loc183])
#loc283 = loc(fused[#loc184, #loc185])
#loc284 = loc(fused[#loc188, #loc189])
#loc285 = loc(fused[#loc190, #loc191])
#loc286 = loc(fused[#loc184, #loc193])
#loc287 = loc(fused[#loc194, #loc183])
#loc288 = loc(fused[#loc197, #loc196])
#loc289 = loc(fused[#loc198, #loc199])
#loc290 = loc(fused[#loc201, #loc199])
