!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":43:21)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":43:25)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":146:25)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":146:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc265 = loc(fused[#loc11, #loc12])
#loc341 = loc(fused[#loc204, #loc205])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc260)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc261)
  cir.func private @printIntLine(!s32i) loc(#loc262)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc263)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc265)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc13)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc267)
      %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc268)
      %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc20)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc21)
      %6 = cir.const #cir.int<4> : !u64i loc(#loc269)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc270)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc271)
      cir.store %9, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc272)
      cir.scope {
        %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc29)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc274)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc31)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc32)
          %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc33)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
        } loc(#loc275)
      } loc(#loc273)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc36)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc36)
        cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc277)
        cir.for : cond {
          %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc38)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc39)
          %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc278)
          cir.condition(%22) loc(#loc40)
        } body {
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc42)
            %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
            %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc44)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc45)
            cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc280)
          } loc(#loc279)
          cir.yield loc(#loc35)
        } step {
          %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc46)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc47)
          cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc281)
          cir.yield loc(#loc276)
        } loc(#loc276)
      } loc(#loc276)
      %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc49)
      %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc50)
      %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc51)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc52)
      %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc53)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
    } loc(#loc266)
    cir.return loc(#loc10)
  } loc(#loc264)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc282)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc283)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc284)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc285)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc286)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc287)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc288)
  cir.func private @close(!s32i) -> !s32i loc(#loc289)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc291)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc292)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<(!s32i)>> loc(#loc75)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc292)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc77)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc295)
      %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc296)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc297)
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc298)
      %11 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc299)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc86)
      %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc86)
      cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc297)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc88)
      %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc88)
      cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc298)
      cir.scope {
        cir.do {
          cir.scope {
            %16 = cir.const #cir.int<2> : !s32i loc(#loc95)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc96)
            %18 = cir.const #cir.int<6> : !s32i loc(#loc97)
            %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc98)
            cir.store %19, %9 : !s32i, !cir.ptr<!s32i> loc(#loc302)
            cir.scope {
              %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc103)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc104)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc104)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc304)
              cir.if %64 {
                cir.break loc(#loc106)
              } loc(#loc305)
            } loc(#loc303)
            %20 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc306)
            %21 = cir.const #cir.int<0> : !s32i loc(#loc109)
            %22 = cir.const #cir.int<16> : !u64i loc(#loc307)
            cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc308)
            %23 = cir.const #cir.int<2> : !s32i loc(#loc114)
            %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc114)
            %25 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc115)
            cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc309)
            %26 = cir.const #cir.int<0> : !s32i loc(#loc117)
            %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc117)
            %28 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc118)
            %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc119)
            cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc310)
            %30 = cir.const #cir.int<27015> : !s32i loc(#loc121)
            %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc121)
            %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc122)
            %33 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc123)
            cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc311)
            cir.scope {
              %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc128)
              %62 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc313)
              %63 = cir.const #cir.int<16> : !u64i loc(#loc314)
              %64 = cir.cast(integral, %63 : !u64i), !u32i loc(#loc314)
              %65 = cir.call @bind(%61, %62, %64) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc133)
              %66 = cir.const #cir.int<1> : !s32i loc(#loc134)
              %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc134)
              %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc315)
              cir.if %68 {
                cir.break loc(#loc136)
              } loc(#loc316)
            } loc(#loc312)
            cir.scope {
              %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc139)
              %62 = cir.const #cir.int<5> : !s32i loc(#loc140)
              %63 = cir.call @listen(%61, %62) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc141)
              %64 = cir.const #cir.int<1> : !s32i loc(#loc142)
              %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc142)
              %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc318)
              cir.if %66 {
                cir.break loc(#loc144)
              } loc(#loc319)
            } loc(#loc317)
            %34 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc145)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc146)
            %36 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc147)
            %37 = cir.call @accept(%34, %35, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc148)
            cir.store %37, %10 : !s32i, !cir.ptr<!s32i> loc(#loc320)
            cir.scope {
              %61 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc153)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc154)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc154)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc322)
              cir.if %64 {
                cir.break loc(#loc156)
              } loc(#loc323)
            } loc(#loc321)
            %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc157)
            %39 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc158)
            %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc158)
            %41 = cir.const #cir.int<3> : !s32i loc(#loc159)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc159)
            %43 = cir.const #cir.int<4> : !u64i loc(#loc159)
            %44 = cir.binop(mul, %42, %43) : !u64i loc(#loc159)
            %45 = cir.const #cir.int<2> : !s32i loc(#loc159)
            %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc159)
            %47 = cir.binop(add, %44, %46) : !u64i loc(#loc159)
            %48 = cir.const #cir.int<1> : !s32i loc(#loc160)
            %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc160)
            %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc324)
            %51 = cir.const #cir.int<0> : !s32i loc(#loc161)
            %52 = cir.call @recv(%38, %40, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc162)
            %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc162)
            cir.store %53, %7 : !s32i, !cir.ptr<!s32i> loc(#loc325)
            cir.scope {
              %61 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc167)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc168)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc168)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc327)
              %65 = cir.ternary(%64, true {
                %66 = cir.const #true loc(#loc169)
                cir.yield %66 : !cir.bool loc(#loc169)
              }, false {
                %66 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc170)
                %67 = cir.const #cir.int<0> : !s32i loc(#loc171)
                %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc328)
                %69 = cir.ternary(%68, true {
                  %70 = cir.const #true loc(#loc169)
                  cir.yield %70 : !cir.bool loc(#loc169)
                }, false {
                  %70 = cir.const #false loc(#loc169)
                  cir.yield %70 : !cir.bool loc(#loc169)
                }) : (!cir.bool) -> !cir.bool loc(#loc169)
                cir.yield %69 : !cir.bool loc(#loc169)
              }) : (!cir.bool) -> !cir.bool loc(#loc169)
              cir.if %65 {
                cir.break loc(#loc173)
              } loc(#loc329)
            } loc(#loc326)
            %54 = cir.const #cir.int<0> : !s32i loc(#loc174)
            %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc174)
            %56 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc175)
            %57 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc176)
            %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc176)
            cir.store %55, %58 : !s8i, !cir.ptr<!s8i> loc(#loc330)
            %59 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc177)
            %60 = cir.call @atoi(%59) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc178)
            cir.store %60, %0 : !s32i, !cir.ptr<!s32i> loc(#loc331)
          } loc(#loc301)
          cir.yield loc(#loc92)
        } while {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc181)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc181)
          cir.condition(%17) loc(#loc181)
        } loc(#loc300)
      } loc(#loc300)
      cir.scope {
        %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc184)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc185)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc185)
        %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc333)
        cir.if %19 {
          %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc187)
          %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc188)
        } loc(#loc334)
      } loc(#loc332)
      cir.scope {
        %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc191)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc192)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc192)
        %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc336)
        cir.if %19 {
          %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc194)
          %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc195)
        } loc(#loc337)
      } loc(#loc335)
    } loc(#loc294)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc196)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    cir.call %5(%6) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc196)
    cir.return loc(#loc71)
  } loc(#loc290)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc339)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc200)
    cir.return loc(#loc199)
  } loc(#loc338)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc204, #loc205])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc341)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc343)
      %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc344)
      %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc213)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc214)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc214)
      %6 = cir.const #cir.int<4> : !u64i loc(#loc345)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc346)
      %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc213)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc347)
      cir.store %9, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc348)
      cir.scope {
        %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc221)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc222)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc222)
        %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc350)
        cir.if %20 {
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc224)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc225)
          %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc226)
          cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc224)
        } loc(#loc351)
      } loc(#loc349)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc229)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc229)
        cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc353)
        cir.for : cond {
          %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc231)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc232)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc232)
          %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc354)
          cir.condition(%22) loc(#loc233)
        } body {
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc235)
            %20 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc236)
            %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc237)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc238)
            cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc356)
          } loc(#loc355)
          cir.yield loc(#loc228)
        } step {
          %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc239)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc240)
          cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc357)
          cir.yield loc(#loc352)
        } loc(#loc352)
      } loc(#loc352)
      %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc241)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc242)
      %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc243)
      %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc241)
      cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc244)
      %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc245)
      %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc246)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc246)
      cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc245)
    } loc(#loc342)
    cir.return loc(#loc203)
  } loc(#loc340)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc359)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc360)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!s32i)>> loc(#loc252)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc360)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc253)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc254)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc361)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc256)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc258)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc259)
    cir.call %6(%7) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc258)
    cir.return loc(#loc248)
  } loc(#loc358)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":43:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":59:1)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":44:1)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":45:5)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":58:5)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":46:9)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":46:16)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":47:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":47:14)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":50:28)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":50:35)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":50:42)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":50:52)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":50:53)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":50:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":51:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":51:43)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":51:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":51:27)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":51:33)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":51:34)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":51:40)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":51:39)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":52:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":55:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":52:18)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":52:14)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":52:21)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":52:33)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":52:23)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":53:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":54:29)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":54:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":54:24)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":54:25)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":52:40)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":52:39)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":56:22)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":56:33)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":56:34)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":56:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":57:9)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":57:14)
#loc54 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc55 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc56 = loc("/usr/include/netinet/in.h":402:1)
#loc57 = loc("/usr/include/netinet/in.h":403:40)
#loc58 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc59 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc60 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc61 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc62 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc63 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc64 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc65 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc66 = loc("/usr/include/stdlib.h":105:1)
#loc67 = loc("/usr/include/stdlib.h":106:33)
#loc68 = loc("/usr/include/unistd.h":358:1)
#loc69 = loc("/usr/include/unistd.h":358:27)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":61:1)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":139:1)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":63:5)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":63:9)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":65:5)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":65:29)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":67:13)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":67:12)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":67:5)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":68:5)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":136:5)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":73:9)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":73:13)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":74:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":74:28)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":75:9)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":75:31)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":76:9)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":76:31)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":77:9)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":77:41)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":78:9)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":121:17)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":79:9)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":120:9)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":88:35)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":88:44)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":88:57)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":88:28)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":88:13)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":88:68)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":89:13)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":92:13)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":89:17)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":89:33)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":90:13)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":91:17)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":93:20)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":93:21)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":93:30)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":93:33)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":93:47)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":93:13)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":93:48)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":94:34)
#loc115 = loc("/usr/include/netinet/in.h":249:5)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":94:13)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":95:39)
#loc118 = loc("/usr/include/netinet/in.h":251:20)
#loc119 = loc("/usr/include/netinet/in.h":33:15)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":95:13)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":96:38)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":96:32)
#loc123 = loc("/usr/include/netinet/in.h":250:15)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":96:13)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":96:46)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":97:13)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":100:13)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":97:22)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":97:54)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":97:55)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":97:64)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":97:78)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":97:17)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":97:84)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":98:13)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":99:17)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":101:13)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":104:13)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":101:24)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":101:38)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":101:17)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":101:57)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":102:13)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":103:17)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":105:35)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":105:49)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":105:55)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":105:28)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":105:13)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":105:59)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":106:13)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":109:13)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":106:17)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":106:33)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":107:13)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":108:17)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":111:31)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":111:45)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":111:58)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":111:76)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":111:79)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":111:26)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":111:13)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":111:80)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":112:13)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":115:13)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":112:17)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":112:31)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":112:44)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":112:47)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":112:61)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":113:13)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":114:17)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":117:39)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":117:25)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":117:13)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":119:25)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":119:20)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":119:13)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":119:36)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":121:16)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":122:9)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":125:9)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":122:13)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":122:29)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":123:9)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":124:26)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":124:13)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":126:9)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":129:9)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":126:13)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":126:29)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":127:9)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":128:26)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":128:13)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":138:5)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":138:13)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":175:1)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":178:1)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":177:5)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":177:13)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":146:1)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":162:1)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":147:1)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":148:5)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":161:5)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":149:9)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":149:16)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":150:9)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":150:14)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":153:28)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":153:35)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":153:42)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":153:52)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":153:53)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":153:9)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":154:9)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":154:43)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":154:13)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":154:27)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":154:33)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":154:34)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":154:40)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":154:39)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":155:9)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":158:9)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":155:18)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":155:14)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":155:21)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":155:33)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":155:23)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":156:9)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":157:29)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":157:13)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":157:24)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":157:25)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":155:40)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":155:39)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":159:22)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":159:33)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":159:34)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":159:9)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":160:9)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":160:14)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":164:1)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":173:1)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":166:5)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":166:9)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":167:5)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":167:29)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":169:13)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":169:12)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":169:5)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":171:12)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":171:5)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":172:5)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_44.c":172:13)
#loc260 = loc(fused[#loc1, #loc2])
#loc261 = loc(fused[#loc3, #loc4])
#loc262 = loc(fused[#loc5, #loc6])
#loc263 = loc(fused[#loc7, #loc8])
#loc264 = loc(fused[#loc9, #loc10])
#loc266 = loc(fused[#loc14, #loc15])
#loc267 = loc(fused[#loc16, #loc17])
#loc268 = loc(fused[#loc18, #loc19])
#loc269 = loc(fused[#loc22, #loc23])
#loc270 = loc(fused[#loc21, #loc23])
#loc271 = loc(fused[#loc20, #loc24])
#loc272 = loc(fused[#loc25, #loc24])
#loc273 = loc(fused[#loc26, #loc27])
#loc274 = loc(fused[#loc28, #loc29])
#loc275 = loc(fused[#loc30, #loc27])
#loc276 = loc(fused[#loc34, #loc35])
#loc277 = loc(fused[#loc37, #loc36])
#loc278 = loc(fused[#loc38, #loc39])
#loc279 = loc(fused[#loc41, #loc35])
#loc280 = loc(fused[#loc43, #loc42])
#loc281 = loc(fused[#loc47, #loc46])
#loc282 = loc(fused[#loc54, #loc55])
#loc283 = loc(fused[#loc56, #loc57])
#loc284 = loc(fused[#loc58, #loc59])
#loc285 = loc(fused[#loc60, #loc61])
#loc286 = loc(fused[#loc62, #loc63])
#loc287 = loc(fused[#loc64, #loc65])
#loc288 = loc(fused[#loc66, #loc67])
#loc289 = loc(fused[#loc68, #loc69])
#loc290 = loc(fused[#loc70, #loc71])
#loc291 = loc(fused[#loc72, #loc73])
#loc292 = loc(fused[#loc74, #loc75])
#loc293 = loc(fused[#loc78, #loc76])
#loc294 = loc(fused[#loc79, #loc80])
#loc295 = loc(fused[#loc81, #loc82])
#loc296 = loc(fused[#loc83, #loc84])
#loc297 = loc(fused[#loc85, #loc86])
#loc298 = loc(fused[#loc87, #loc88])
#loc299 = loc(fused[#loc89, #loc90])
#loc300 = loc(fused[#loc91, #loc92])
#loc301 = loc(fused[#loc93, #loc94])
#loc302 = loc(fused[#loc99, #loc100])
#loc303 = loc(fused[#loc101, #loc102])
#loc304 = loc(fused[#loc103, #loc104])
#loc305 = loc(fused[#loc105, #loc102])
#loc306 = loc(fused[#loc107, #loc108])
#loc307 = loc(fused[#loc110, #loc111])
#loc308 = loc(fused[#loc112, #loc113])
#loc309 = loc(fused[#loc116, #loc114])
#loc310 = loc(fused[#loc120, #loc117])
#loc311 = loc(fused[#loc124, #loc125])
#loc312 = loc(fused[#loc126, #loc127])
#loc313 = loc(fused[#loc129, #loc130])
#loc314 = loc(fused[#loc131, #loc132])
#loc315 = loc(fused[#loc133, #loc134])
#loc316 = loc(fused[#loc135, #loc127])
#loc317 = loc(fused[#loc137, #loc138])
#loc318 = loc(fused[#loc141, #loc142])
#loc319 = loc(fused[#loc143, #loc138])
#loc320 = loc(fused[#loc149, #loc150])
#loc321 = loc(fused[#loc151, #loc152])
#loc322 = loc(fused[#loc153, #loc154])
#loc323 = loc(fused[#loc155, #loc152])
#loc324 = loc(fused[#loc159, #loc160])
#loc325 = loc(fused[#loc163, #loc164])
#loc326 = loc(fused[#loc165, #loc166])
#loc327 = loc(fused[#loc167, #loc168])
#loc328 = loc(fused[#loc170, #loc171])
#loc329 = loc(fused[#loc172, #loc166])
#loc330 = loc(fused[#loc176, #loc174])
#loc331 = loc(fused[#loc179, #loc180])
#loc332 = loc(fused[#loc182, #loc183])
#loc333 = loc(fused[#loc184, #loc185])
#loc334 = loc(fused[#loc186, #loc183])
#loc335 = loc(fused[#loc189, #loc190])
#loc336 = loc(fused[#loc191, #loc192])
#loc337 = loc(fused[#loc193, #loc190])
#loc338 = loc(fused[#loc198, #loc199])
#loc339 = loc(fused[#loc200, #loc201])
#loc340 = loc(fused[#loc202, #loc203])
#loc342 = loc(fused[#loc207, #loc208])
#loc343 = loc(fused[#loc209, #loc210])
#loc344 = loc(fused[#loc211, #loc212])
#loc345 = loc(fused[#loc215, #loc216])
#loc346 = loc(fused[#loc214, #loc216])
#loc347 = loc(fused[#loc213, #loc217])
#loc348 = loc(fused[#loc218, #loc217])
#loc349 = loc(fused[#loc219, #loc220])
#loc350 = loc(fused[#loc221, #loc222])
#loc351 = loc(fused[#loc223, #loc220])
#loc352 = loc(fused[#loc227, #loc228])
#loc353 = loc(fused[#loc230, #loc229])
#loc354 = loc(fused[#loc231, #loc232])
#loc355 = loc(fused[#loc234, #loc228])
#loc356 = loc(fused[#loc236, #loc235])
#loc357 = loc(fused[#loc240, #loc239])
#loc358 = loc(fused[#loc247, #loc248])
#loc359 = loc(fused[#loc249, #loc250])
#loc360 = loc(fused[#loc251, #loc252])
#loc361 = loc(fused[#loc255, #loc253])
#loc362 = loc(fused[#loc257, #loc256])
