!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc3 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":25:23)
#loc4 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":25:28)
#loc26 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":49:27)
#loc27 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":49:32)
#loc48 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":69:27)
#loc49 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":69:32)
#loc81 = loc(fused[#loc3, #loc4])
#loc90 = loc(fused[#loc26, #loc27])
#loc98 = loc(fused[#loc48, #loc49])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_min_sub_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func internal private @_ZN40CWE191_Integer_Underflow__int_min_sub_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc3, #loc4])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc81)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc5)
    %1 = cir.const #cir.int<2147483647> : !s32i loc(#loc6)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc6)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc6)
    %4 = cir.binop(sub, %2, %3) nsw : !s32i loc(#loc6)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc7)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc82)
    cir.return loc(#loc2)
  } loc(#loc80)
  cir.func private @printIntLine(!s32i) loc(#loc83)
  cir.func @_ZN40CWE191_Integer_Underflow__int_min_sub_433badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc85)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc86)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc16)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    cir.call @_ZN40CWE191_Integer_Underflow__int_min_sub_43L9badSourceERi(%1) : (!cir.ptr<!s32i>) -> () loc(#loc18)
    cir.br ^bb1 loc(#loc88)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %5 = cir.binop(sub, %3, %4) nsw : !s32i loc(#loc21)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc85)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc23)
    cir.br ^bb2 loc(#loc20)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc11)
  } loc(#loc84)
  cir.func internal private @_ZN40CWE191_Integer_Underflow__int_min_sub_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc26, #loc27])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc90)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc28)
    %1 = cir.const #cir.int<2> : !s32i loc(#loc29)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc30)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc31)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    cir.return loc(#loc25)
  } loc(#loc89)
  cir.func internal private @_ZN40CWE191_Integer_Underflow__int_min_sub_43L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc93)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc94)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc38)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc95)
    cir.call @_ZN40CWE191_Integer_Underflow__int_min_sub_43L13goodG2BSourceERi(%1) : (!cir.ptr<!s32i>) -> () loc(#loc40)
    cir.br ^bb1 loc(#loc96)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %5 = cir.binop(sub, %3, %4) nsw : !s32i loc(#loc43)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc93)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc45)
    cir.br ^bb2 loc(#loc42)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc33)
  } loc(#loc92)
  cir.func internal private @_ZN40CWE191_Integer_Underflow__int_min_sub_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc48, #loc49])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc98)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc50)
    %1 = cir.const #cir.int<2147483647> : !s32i loc(#loc51)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc51)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %4 = cir.binop(sub, %2, %3) nsw : !s32i loc(#loc51)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc52)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    cir.return loc(#loc47)
  } loc(#loc97)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc100)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc55)
  cir.func internal private @_ZN40CWE191_Integer_Underflow__int_min_sub_43L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc102)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc103)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc62)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    cir.call @_ZN40CWE191_Integer_Underflow__int_min_sub_43L13goodB2GSourceERi(%1) : (!cir.ptr<!s32i>) -> () loc(#loc64)
    cir.br ^bb1 loc(#loc105)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    %4 = cir.const #cir.int<2147483647> : !s32i loc(#loc68)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc68)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc68)
    %8 = cir.cmp(gt, %3, %7) : !s32i, !cir.bool loc(#loc106)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc107)
  ^bb2:  // pred: ^bb1
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc72)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc102)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc74)
    cir.br ^bb4 loc(#loc70)
  ^bb3:  // pred: ^bb1
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc55)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    cir.br ^bb4 loc(#loc66)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc66)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc57)
  } loc(#loc101)
  cir.func @_ZN40CWE191_Integer_Underflow__int_min_sub_434goodEv() extra(#fn_attr) {
    cir.call @_ZN40CWE191_Integer_Underflow__int_min_sub_43L7goodG2BEv() : () -> () loc(#loc78)
    cir.call @_ZN40CWE191_Integer_Underflow__int_min_sub_43L7goodB2GEv() : () -> () loc(#loc79)
    cir.return loc(#loc77)
  } loc(#loc108)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_min_sub_43.cpp":0:0)
#loc1 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":25:1)
#loc2 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":29:1)
#loc5 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":26:1)
#loc6 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":28:12)
#loc7 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":28:5)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc10 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":31:1)
#loc11 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":42:1)
#loc12 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":39:9)
#loc13 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":39:29)
#loc14 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":33:5)
#loc15 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":33:9)
#loc16 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":35:12)
#loc17 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":35:5)
#loc18 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":36:5)
#loc19 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":37:5)
#loc20 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":41:5)
#loc21 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":39:22)
#loc22 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":40:22)
#loc23 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":40:9)
#loc24 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":49:1)
#loc25 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":53:1)
#loc28 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":50:1)
#loc29 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":52:13)
#loc30 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":52:12)
#loc31 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":52:5)
#loc32 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":55:1)
#loc33 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":66:1)
#loc34 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":63:9)
#loc35 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":63:29)
#loc36 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":57:5)
#loc37 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":57:9)
#loc38 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":59:12)
#loc39 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":59:5)
#loc40 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":60:5)
#loc41 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":61:5)
#loc42 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":65:5)
#loc43 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":63:22)
#loc44 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":64:22)
#loc45 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":64:9)
#loc46 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":69:1)
#loc47 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":73:1)
#loc50 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":70:1)
#loc51 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":72:12)
#loc52 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":72:5)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc54 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc55 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":89:19)
#loc56 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":75:1)
#loc57 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":91:1)
#loc58 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":84:9)
#loc59 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":84:29)
#loc60 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":77:5)
#loc61 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":77:9)
#loc62 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":79:12)
#loc63 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":79:5)
#loc64 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":80:5)
#loc65 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":82:5)
#loc66 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":90:5)
#loc67 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":82:9)
#loc68 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":82:16)
#loc69 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":83:5)
#loc70 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":86:5)
#loc71 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":88:5)
#loc72 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":84:22)
#loc73 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":85:22)
#loc74 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":85:9)
#loc75 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":89:9)
#loc76 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":93:1)
#loc77 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":97:1)
#loc78 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":95:5)
#loc79 = loc("CWE191_Integer_Underflow__int_min_sub_43.cpp":96:5)
#loc80 = loc(fused[#loc1, #loc2])
#loc82 = loc(fused[#loc7, #loc6])
#loc83 = loc(fused[#loc8, #loc9])
#loc84 = loc(fused[#loc10, #loc11])
#loc85 = loc(fused[#loc12, #loc13])
#loc86 = loc(fused[#loc14, #loc15])
#loc87 = loc(fused[#loc17, #loc16])
#loc88 = loc(fused[#loc19, #loc20])
#loc89 = loc(fused[#loc24, #loc25])
#loc91 = loc(fused[#loc31, #loc29])
#loc92 = loc(fused[#loc32, #loc33])
#loc93 = loc(fused[#loc34, #loc35])
#loc94 = loc(fused[#loc36, #loc37])
#loc95 = loc(fused[#loc39, #loc38])
#loc96 = loc(fused[#loc41, #loc42])
#loc97 = loc(fused[#loc46, #loc47])
#loc99 = loc(fused[#loc52, #loc51])
#loc100 = loc(fused[#loc53, #loc54])
#loc101 = loc(fused[#loc56, #loc57])
#loc102 = loc(fused[#loc58, #loc59])
#loc103 = loc(fused[#loc60, #loc61])
#loc104 = loc(fused[#loc63, #loc62])
#loc105 = loc(fused[#loc65, #loc66])
#loc106 = loc(fused[#loc67, #loc68])
#loc107 = loc(fused[#loc69, #loc70, #loc71, #loc66])
#loc108 = loc(fused[#loc76, #loc77])
