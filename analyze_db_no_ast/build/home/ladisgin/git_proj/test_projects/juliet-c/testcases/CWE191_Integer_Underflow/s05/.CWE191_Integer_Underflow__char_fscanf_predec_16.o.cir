!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_fscanf_predec_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc98)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc99)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @printHexCharLine(!s8i) loc(#loc100)
  cir.func no_proto  @CWE191_Integer_Underflow__char_fscanf_predec_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc102)
    %1 = cir.const #cir.int<32> : !s32i loc(#loc12)
    %2 = cir.cast(integral, %1 : !s32i), !s8i loc(#loc12)
    cir.store %2, %0 : !s8i, !cir.ptr<!s8i> loc(#loc103)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc16)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc16)
        cir.condition(%4) loc(#loc16)
      } do {
        %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc17)
        %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc99)
        %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc18)
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
        %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc17)
        cir.break loc(#loc19)
      } loc(#loc104)
    } loc(#loc104)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc22)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc22)
        cir.condition(%4) loc(#loc22)
      } do {
        cir.scope {
          %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc107)
          %4 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc27)
          %5 = cir.unary(dec, %4) : !s8i, !s8i loc(#loc27)
          cir.store %5, %0 : !s8i, !cir.ptr<!s8i> loc(#loc108)
          %6 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc26)
          cir.store %6, %3 : !s8i, !cir.ptr<!s8i> loc(#loc107)
          %7 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc29)
          cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc30)
        } loc(#loc106)
        cir.break loc(#loc31)
      } loc(#loc105)
    } loc(#loc105)
    cir.return loc(#loc9)
  } loc(#loc101)
  cir.func no_proto  @CWE191_Integer_Underflow__char_fscanf_predec_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc110)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc111)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc33)
  } loc(#loc109)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc112)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc40)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc114)
    %1 = cir.const #cir.int<32> : !s32i loc(#loc45)
    %2 = cir.cast(integral, %1 : !s32i), !s8i loc(#loc45)
    cir.store %2, %0 : !s8i, !cir.ptr<!s8i> loc(#loc115)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc49)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc49)
        cir.condition(%4) loc(#loc49)
      } do {
        %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc50)
        %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc99)
        %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc51)
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc52)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc52)
        %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc50)
        cir.break loc(#loc53)
      } loc(#loc116)
    } loc(#loc116)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc56)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc56)
        cir.condition(%4) loc(#loc56)
      } do {
        cir.scope {
          %3 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc59)
          %4 = cir.cast(integral, %3 : !s8i), !s32i loc(#loc59)
          %5 = cir.const #cir.int<127> : !s32i loc(#loc60)
          %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc60)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc60)
          %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc60)
          %9 = cir.cmp(gt, %4, %8) : !s32i, !s32i loc(#loc119)
          %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc61)
          cir.if %10 {
            %11 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc121)
            %12 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc67)
            %13 = cir.unary(dec, %12) : !s8i, !s8i loc(#loc67)
            cir.store %13, %0 : !s8i, !cir.ptr<!s8i> loc(#loc122)
            %14 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc66)
            cir.store %14, %11 : !s8i, !cir.ptr<!s8i> loc(#loc121)
            %15 = cir.load %11 : !cir.ptr<!s8i>, !s8i loc(#loc69)
            cir.call @printHexCharLine(%15) : (!s8i) -> () loc(#loc70)
          } else {
            %11 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc40)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc40)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc71)
          } loc(#loc120)
        } loc(#loc118)
        cir.break loc(#loc72)
      } loc(#loc117)
    } loc(#loc117)
    cir.return loc(#loc42)
  } loc(#loc113)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc124)
    %1 = cir.const #cir.int<32> : !s32i loc(#loc77)
    %2 = cir.cast(integral, %1 : !s32i), !s8i loc(#loc77)
    cir.store %2, %0 : !s8i, !cir.ptr<!s8i> loc(#loc125)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc81)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc81)
        cir.condition(%4) loc(#loc81)
      } do {
        %3 = cir.const #cir.int<2> : !s32i loc(#loc82)
        %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc83)
        %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc83)
        cir.store %5, %0 : !s8i, !cir.ptr<!s8i> loc(#loc127)
        cir.break loc(#loc85)
      } loc(#loc126)
    } loc(#loc126)
    cir.scope {
      cir.while {
        %3 = cir.const #cir.int<1> : !s32i loc(#loc88)
        %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc88)
        cir.condition(%4) loc(#loc88)
      } do {
        cir.scope {
          %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc130)
          %4 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc93)
          %5 = cir.unary(dec, %4) : !s8i, !s8i loc(#loc93)
          cir.store %5, %0 : !s8i, !cir.ptr<!s8i> loc(#loc131)
          %6 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc92)
          cir.store %6, %3 : !s8i, !cir.ptr<!s8i> loc(#loc130)
          %7 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc95)
          cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc96)
        } loc(#loc129)
        cir.break loc(#loc97)
      } loc(#loc128)
    } loc(#loc128)
    cir.return loc(#loc74)
  } loc(#loc123)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_fscanf_predec_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":29:24)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc8 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":22:1)
#loc9 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":42:1)
#loc10 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":24:5)
#loc11 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":24:10)
#loc12 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":25:12)
#loc13 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":25:5)
#loc14 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":26:5)
#loc15 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":31:5)
#loc16 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":26:11)
#loc17 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":29:9)
#loc18 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":29:17)
#loc19 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":30:9)
#loc20 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":32:5)
#loc21 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":41:5)
#loc22 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":32:11)
#loc23 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":34:9)
#loc24 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":39:9)
#loc25 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":37:13)
#loc26 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":37:27)
#loc27 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":36:13)
#loc28 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":36:15)
#loc29 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":38:30)
#loc30 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":38:13)
#loc31 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":40:9)
#loc32 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":99:1)
#loc33 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":103:1)
#loc34 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":101:5)
#loc35 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":101:13)
#loc36 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":102:5)
#loc37 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":102:13)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc40 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":70:23)
#loc41 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":49:1)
#loc42 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":74:1)
#loc43 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":51:5)
#loc44 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":51:10)
#loc45 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":52:12)
#loc46 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":52:5)
#loc47 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":53:5)
#loc48 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":58:5)
#loc49 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":53:11)
#loc50 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":56:9)
#loc51 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":56:17)
#loc52 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":56:24)
#loc53 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":57:9)
#loc54 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":59:5)
#loc55 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":73:5)
#loc56 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":59:11)
#loc57 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":62:9)
#loc58 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":71:9)
#loc59 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":62:13)
#loc60 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":62:20)
#loc61 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":62:18)
#loc62 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":63:9)
#loc63 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":67:9)
#loc64 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":69:9)
#loc65 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":65:13)
#loc66 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":65:27)
#loc67 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":64:13)
#loc68 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":64:15)
#loc69 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":66:30)
#loc70 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":66:13)
#loc71 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":70:13)
#loc72 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":72:9)
#loc73 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":77:1)
#loc74 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":97:1)
#loc75 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":79:5)
#loc76 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":79:10)
#loc77 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":80:12)
#loc78 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":80:5)
#loc79 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":81:5)
#loc80 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":86:5)
#loc81 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":81:11)
#loc82 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":84:17)
#loc83 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":84:16)
#loc84 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":84:9)
#loc85 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":85:9)
#loc86 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":87:5)
#loc87 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":96:5)
#loc88 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":87:11)
#loc89 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":89:9)
#loc90 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":94:9)
#loc91 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":92:13)
#loc92 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":92:27)
#loc93 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":91:13)
#loc94 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":91:15)
#loc95 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":93:30)
#loc96 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":93:13)
#loc97 = loc("CWE191_Integer_Underflow__char_fscanf_predec_16.c":95:9)
#loc98 = loc(fused[#loc1, #loc2])
#loc99 = loc(fused[#loc3, #loc4])
#loc100 = loc(fused[#loc6, #loc7])
#loc101 = loc(fused[#loc8, #loc9])
#loc102 = loc(fused[#loc10, #loc11])
#loc103 = loc(fused[#loc13, #loc12])
#loc104 = loc(fused[#loc14, #loc15])
#loc105 = loc(fused[#loc20, #loc21])
#loc106 = loc(fused[#loc23, #loc24])
#loc107 = loc(fused[#loc25, #loc26])
#loc108 = loc(fused[#loc27, #loc28])
#loc109 = loc(fused[#loc32, #loc33])
#loc110 = loc(fused[#loc34, #loc35])
#loc111 = loc(fused[#loc36, #loc37])
#loc112 = loc(fused[#loc38, #loc39])
#loc113 = loc(fused[#loc41, #loc42])
#loc114 = loc(fused[#loc43, #loc44])
#loc115 = loc(fused[#loc46, #loc45])
#loc116 = loc(fused[#loc47, #loc48])
#loc117 = loc(fused[#loc54, #loc55])
#loc118 = loc(fused[#loc57, #loc58])
#loc119 = loc(fused[#loc59, #loc60])
#loc120 = loc(fused[#loc62, #loc63, #loc64, #loc58])
#loc121 = loc(fused[#loc65, #loc66])
#loc122 = loc(fused[#loc67, #loc68])
#loc123 = loc(fused[#loc73, #loc74])
#loc124 = loc(fused[#loc75, #loc76])
#loc125 = loc(fused[#loc78, #loc77])
#loc126 = loc(fused[#loc79, #loc80])
#loc127 = loc(fused[#loc84, #loc82])
#loc128 = loc(fused[#loc86, #loc87])
#loc129 = loc(fused[#loc89, #loc90])
#loc130 = loc(fused[#loc91, #loc92])
#loc131 = loc(fused[#loc93, #loc94])
