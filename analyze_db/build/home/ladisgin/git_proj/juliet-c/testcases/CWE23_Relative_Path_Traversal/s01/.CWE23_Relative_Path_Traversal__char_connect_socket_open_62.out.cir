!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc82 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":122:10)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":122:14)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":122:20)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":122:32)
#loc131 = loc(fused[#loc82, #loc83])
#loc132 = loc(fused[#loc84, #loc85])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_62L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc98)
  cir.global "private" constant cir_private @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_623badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc99)
  cir.func private @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_629badSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc100)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc101)
  cir.func private @close(!s32i) -> !s32i loc(#loc102)
  cir.func @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_623badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc104)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc99)
    %2 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_623badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc99)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc99)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_629badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc17)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc107)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc23)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc24)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc108)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc25)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc26)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc109)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc27)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc110)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc32)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc34)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc112)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc36)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc37)
        } loc(#loc113)
      } loc(#loc111)
    } loc(#loc106)
    cir.return loc(#loc12)
  } loc(#loc103)
  cir.func private @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_6213goodG2BSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc114)
  cir.func internal private @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_62L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc116)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc98)
    %2 = cir.get_global @__const._ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_62L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc98)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc98)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc44)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_6213goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc46)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc119)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc52)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc53)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc120)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc54)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc55)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc121)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc56)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc122)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc61)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc62)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc63)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc124)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc65)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc66)
        } loc(#loc125)
      } loc(#loc123)
    } loc(#loc118)
    cir.return loc(#loc41)
  } loc(#loc115)
  cir.func @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_624goodEv() extra(#fn_attr) {
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_62L7goodG2BEv() : () -> () loc(#loc69)
    cir.return loc(#loc68)
  } loc(#loc126)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc127)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc128)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc79)
  cir.func @main(%arg0: !s32i loc(fused[#loc82, #loc83]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc84, #loc85])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc132)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc81)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc86)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc86)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc87)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc88)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc88)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc89)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc76)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_624goodEv() : () -> () loc(#loc91)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc77)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc78)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    cir.call @_ZN58CWE23_Relative_Path_Traversal__char_connect_socket_open_623badEv() : () -> () loc(#loc94)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc79)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc96)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    cir.return %15 : !s32i loc(#loc133)
  } loc(#loc130)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":90:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":90:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":66:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":66:37)
#loc5 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":61:1)
#loc6 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":61:28)
#loc7 = loc("/usr/include/fcntl.h":209:1)
#loc8 = loc("/usr/include/fcntl.h":209:56)
#loc9 = loc("/usr/include/unistd.h":358:1)
#loc10 = loc("/usr/include/unistd.h":358:27)
#loc11 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":63:1)
#loc12 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":78:1)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":65:5)
#loc14 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":65:12)
#loc15 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":67:12)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":67:5)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":68:5)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":69:5)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":77:5)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":70:9)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":70:13)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":72:25)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":72:31)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":72:38)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":72:47)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":72:55)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":72:20)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":72:9)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":72:63)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":73:9)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":76:9)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":73:13)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":73:26)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":73:25)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":74:9)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":75:19)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":75:13)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":85:1)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":85:32)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":87:1)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":102:1)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":89:5)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":89:12)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":91:12)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":91:5)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":92:5)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":93:5)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":101:5)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":94:9)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":94:13)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":96:25)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":96:31)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":96:38)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":96:47)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":96:55)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":96:20)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":96:9)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":96:63)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":97:9)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":100:9)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":97:13)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":97:26)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":97:25)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":98:9)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":99:19)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":99:13)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":104:1)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":107:1)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":106:5)
#loc70 = loc("/usr/include/stdlib.h":575:1)
#loc71 = loc("/usr/include/stdlib.h":575:41)
#loc72 = loc("/usr/include/time.h":76:1)
#loc73 = loc("/usr/include/time.h":76:38)
#loc74 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc75 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":127:15)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":129:15)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":132:15)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":134:15)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":122:1)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":137:1)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":123:1)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":125:27)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":125:22)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":125:5)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":127:5)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":128:5)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":129:5)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":132:5)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":133:5)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":134:5)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":136:12)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_connect_socket_open_62a.cpp":136:5)
#loc98 = loc(fused[#loc1, #loc2])
#loc99 = loc(fused[#loc3, #loc4])
#loc100 = loc(fused[#loc5, #loc6])
#loc101 = loc(fused[#loc7, #loc8])
#loc102 = loc(fused[#loc9, #loc10])
#loc103 = loc(fused[#loc11, #loc12])
#loc104 = loc(fused[#loc13, #loc14])
#loc105 = loc(fused[#loc16, #loc15])
#loc106 = loc(fused[#loc18, #loc19])
#loc107 = loc(fused[#loc20, #loc21])
#loc108 = loc(fused[#loc23, #loc24])
#loc109 = loc(fused[#loc25, #loc26])
#loc110 = loc(fused[#loc28, #loc29])
#loc111 = loc(fused[#loc30, #loc31])
#loc112 = loc(fused[#loc32, #loc33])
#loc113 = loc(fused[#loc35, #loc31])
#loc114 = loc(fused[#loc38, #loc39])
#loc115 = loc(fused[#loc40, #loc41])
#loc116 = loc(fused[#loc42, #loc43])
#loc117 = loc(fused[#loc45, #loc44])
#loc118 = loc(fused[#loc47, #loc48])
#loc119 = loc(fused[#loc49, #loc50])
#loc120 = loc(fused[#loc52, #loc53])
#loc121 = loc(fused[#loc54, #loc55])
#loc122 = loc(fused[#loc57, #loc58])
#loc123 = loc(fused[#loc59, #loc60])
#loc124 = loc(fused[#loc61, #loc62])
#loc125 = loc(fused[#loc64, #loc60])
#loc126 = loc(fused[#loc67, #loc68])
#loc127 = loc(fused[#loc70, #loc71])
#loc128 = loc(fused[#loc72, #loc73])
#loc129 = loc(fused[#loc74, #loc75])
#loc130 = loc(fused[#loc80, #loc81])
#loc133 = loc(fused[#loc97, #loc96])
