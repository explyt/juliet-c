!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":31:14)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":31:31)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":55:18)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":55:35)
#loc88 = loc(fused[#loc11, #loc12])
#loc102 = loc(fused[#loc48, #loc49])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_6611goodG2BSinkEPPc.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc83)
  cir.global "private" constant cir_private @__const._ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_667badSinkEPPc.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc84)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc85)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc86)
  cir.func @_ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_667badSinkEPPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc84)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc89)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc90)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc88)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc91)
    cir.store %arg0, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc18)
    %5 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc19)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc20)
    %7 = cir.ptr_stride(%5 : !cir.ptr<!cir.ptr<!s8i>>, %6 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc17)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    cir.store %8, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
    cir.br ^bb1 loc(#loc92)
  ^bb1:  // pred: ^bb0
    %9 = cir.get_global @__const._ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_667badSinkEPPc.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc84)
    cir.copy %9 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc84)
    %10 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc23)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc24)
    %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc23)
    cir.store %12, %2 : !u64i, !cir.ptr<!u64i> loc(#loc93)
    cir.br ^bb2 loc(#loc94)
  ^bb2:  // pred: ^bb1
    %13 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc29)
    cir.store %14, %1 : !u64i, !cir.ptr<!u64i> loc(#loc95)
    cir.br ^bb3 loc(#loc94)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    %16 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc33)
    %19 = cir.binop(add, %16, %18) : !u64i loc(#loc96)
    %20 = cir.cmp(lt, %15, %19) : !u64i, !cir.bool loc(#loc97)
    cir.brcond %20 ^bb4, ^bb8 loc(#loc97)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc98)
  ^bb5:  // pred: ^bb4
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc35)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc36)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc36)
    %24 = cir.load %23 : !cir.ptr<!s8i>, !s8i loc(#loc36)
    %25 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc39)
    cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc99)
    cir.br ^bb6 loc(#loc28)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc28)
  ^bb7:  // pred: ^bb6
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc41)
    %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc42)
    cir.store %29, %1 : !u64i, !cir.ptr<!u64i> loc(#loc100)
    cir.br ^bb3 loc(#loc94)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc28)
  ^bb9:  // pred: ^bb8
    %30 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    cir.delete.array %31 : <!s8i> loc(#loc45)
    cir.br ^bb10 loc(#loc22)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc10)
  } loc(#loc87)
  cir.func @_ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_6611goodG2BSinkEPPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc48, #loc49])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc83)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc103)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc104)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc102)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc105)
    cir.store %arg0, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc55)
    %5 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc56)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc57)
    %7 = cir.ptr_stride(%5 : !cir.ptr<!cir.ptr<!s8i>>, %6 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc54)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    cir.store %8, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    cir.br ^bb1 loc(#loc106)
  ^bb1:  // pred: ^bb0
    %9 = cir.get_global @__const._ZN58CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_6611goodG2BSinkEPPc.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc83)
    cir.copy %9 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc83)
    %10 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc60)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc61)
    %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc60)
    cir.store %12, %2 : !u64i, !cir.ptr<!u64i> loc(#loc107)
    cir.br ^bb2 loc(#loc108)
  ^bb2:  // pred: ^bb1
    %13 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc66)
    cir.store %14, %1 : !u64i, !cir.ptr<!u64i> loc(#loc109)
    cir.br ^bb3 loc(#loc108)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc68)
    %16 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc69)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc70)
    %19 = cir.binop(add, %16, %18) : !u64i loc(#loc110)
    %20 = cir.cmp(lt, %15, %19) : !u64i, !cir.bool loc(#loc111)
    cir.brcond %20 ^bb4, ^bb8 loc(#loc111)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc112)
  ^bb5:  // pred: ^bb4
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc72)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc73)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !u64i), !cir.ptr<!s8i> loc(#loc73)
    %24 = cir.load %23 : !cir.ptr<!s8i>, !s8i loc(#loc73)
    %25 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc75)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc76)
    cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc113)
    cir.br ^bb6 loc(#loc65)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc65)
  ^bb7:  // pred: ^bb6
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc78)
    %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc79)
    cir.store %29, %1 : !u64i, !cir.ptr<!u64i> loc(#loc114)
    cir.br ^bb3 loc(#loc108)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc65)
  ^bb9:  // pred: ^bb8
    %30 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %31 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    cir.delete.array %31 : <!s8i> loc(#loc82)
    cir.br ^bb10 loc(#loc59)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc47)
  } loc(#loc101)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":59:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":59:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":36:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":36:29)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":31:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":48:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":37:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":37:16)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":37:19)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":34:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":34:30)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":32:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":34:19)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":34:29)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":35:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":47:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":38:21)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":38:28)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":38:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":38:34)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":41:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":44:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":41:18)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":41:14)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":41:21)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":41:25)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":41:37)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":42:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":43:30)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":43:23)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":43:13)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":43:18)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":43:19)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":43:31)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":41:41)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":41:40)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":45:19)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":45:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":46:19)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":55:1)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":71:1)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":60:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":60:16)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":60:19)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":57:5)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":57:30)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":56:1)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":57:19)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":57:29)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":58:5)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":70:5)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":61:21)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":61:28)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":61:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":61:34)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":64:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":67:9)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":64:18)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":64:14)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":64:21)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":64:25)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":64:37)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":65:9)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":66:30)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":66:23)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":66:13)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":66:18)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":66:19)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":66:31)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":64:41)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":64:40)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":68:19)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":68:9)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__cpp_CWE193_char_loop_66b.cpp":69:19)
#loc83 = loc(fused[#loc1, #loc2])
#loc84 = loc(fused[#loc3, #loc4])
#loc85 = loc(fused[#loc5, #loc6])
#loc86 = loc(fused[#loc7, #loc8])
#loc87 = loc(fused[#loc9, #loc10])
#loc89 = loc(fused[#loc13, #loc14])
#loc90 = loc(fused[#loc13, #loc15])
#loc91 = loc(fused[#loc16, #loc17])
#loc92 = loc(fused[#loc21, #loc22])
#loc93 = loc(fused[#loc25, #loc26])
#loc94 = loc(fused[#loc27, #loc28])
#loc95 = loc(fused[#loc30, #loc29])
#loc96 = loc(fused[#loc32, #loc33])
#loc97 = loc(fused[#loc31, #loc33])
#loc98 = loc(fused[#loc34, #loc28])
#loc99 = loc(fused[#loc37, #loc40])
#loc100 = loc(fused[#loc42, #loc41])
#loc101 = loc(fused[#loc46, #loc47])
#loc103 = loc(fused[#loc50, #loc51])
#loc104 = loc(fused[#loc50, #loc52])
#loc105 = loc(fused[#loc53, #loc54])
#loc106 = loc(fused[#loc58, #loc59])
#loc107 = loc(fused[#loc62, #loc63])
#loc108 = loc(fused[#loc64, #loc65])
#loc109 = loc(fused[#loc67, #loc66])
#loc110 = loc(fused[#loc69, #loc70])
#loc111 = loc(fused[#loc68, #loc70])
#loc112 = loc(fused[#loc71, #loc65])
#loc113 = loc(fused[#loc74, #loc77])
#loc114 = loc(fused[#loc79, #loc78])
