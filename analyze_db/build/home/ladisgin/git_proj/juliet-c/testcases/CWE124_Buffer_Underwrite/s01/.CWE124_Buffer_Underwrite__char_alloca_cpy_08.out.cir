!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc66 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":127:10)
#loc67 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":127:14)
#loc68 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":127:20)
#loc69 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":127:32)
#loc203 = loc(fused[#loc66, #loc67])
#loc204 = loc(fused[#loc68, #loc69])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_cpy_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc182)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc183)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_cpy_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc185)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc186)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc187)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc12)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc12)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc15)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc15)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc188)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc19)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc21)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc189)
    cir.br ^bb1 loc(#loc190)
  ^bb1:  // pred: ^bb0
    %24 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc191)
    %25 = cir.call %24() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc26)
    %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %26 ^bb2, ^bb3 loc(#loc192)
  ^bb2:  // pred: ^bb1
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %28 = cir.const #cir.int<8> : !s32i loc(#loc30)
    %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc30)
    %30 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc31)
    cir.store %30, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc193)
    cir.br ^bb3 loc(#loc25)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc25)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc194)
  ^bb5:  // pred: ^bb4
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
    %33 = cir.const #cir.int<67> : !s32i loc(#loc36)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc37)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc37)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc37)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc195)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc41)
    %40 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %42 = cir.binop(sub, %40, %41) nsw : !s32i loc(#loc42)
    %43 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
    %44 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %42 : !s32i), !cir.ptr<!s8i> loc(#loc44)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc196)
    %45 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc45)
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %47 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
    %48 = cir.call @strcpy(%46, %47) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc45)
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    cir.br ^bb6 loc(#loc34)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc184)
  cir.func no_proto @CWE124_Buffer_Underwrite__char_alloca_cpy_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc198)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc51)
  } loc(#loc197)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc200)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc63)
  cir.func @main(%arg0: !s32i loc(fused[#loc66, #loc67]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc68, #loc69])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc203)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc204)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc65)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc70)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc70)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc71)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc72)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc72)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc73)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc60)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__char_alloca_cpy_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call @CWE124_Buffer_Underwrite__char_alloca_cpy_08_good() : () -> () loc(#loc75)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc61)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc62)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__char_alloca_cpy_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call @CWE124_Buffer_Underwrite__char_alloca_cpy_08_bad() : () -> () loc(#loc79)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc63)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc82)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    cir.return %17 : !s32i loc(#loc207)
  } loc(#loc202)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc85)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc86)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    cir.return %2 : !s32i loc(#loc209)
  } loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc88)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc211)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc212)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc213)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc96)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc96)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc96)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc96)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc96)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc96)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc213)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc98)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc99)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc99)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc99)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc214)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc103)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc105)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc105)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc107)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc215)
    cir.br ^bb1 loc(#loc216)
  ^bb1:  // pred: ^bb0
    %24 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc217)
    %25 = cir.call %24() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc110)
    %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc110)
    cir.brcond %26 ^bb2, ^bb3 loc(#loc218)
  ^bb2:  // pred: ^bb1
    %27 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc88)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    cir.br ^bb4 loc(#loc113)
  ^bb3:  // pred: ^bb1
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    cir.store %29, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
    cir.br ^bb4 loc(#loc109)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc109)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc220)
  ^bb6:  // pred: ^bb5
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc120)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc120)
    %32 = cir.const #cir.int<67> : !s32i loc(#loc121)
    %33 = cir.const #cir.int<100> : !s32i loc(#loc122)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc122)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc122)
    cir.libc.memset %36 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc221)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc126)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc127)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc127)
    %42 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc129)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc129)
    cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc222)
    %44 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc130)
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    %46 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc132)
    %47 = cir.call @strcpy(%45, %46) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc130)
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    cir.br ^bb7 loc(#loc119)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc90)
  } loc(#loc210)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc136)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc137)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc224)
    cir.return %2 : !s32i loc(#loc224)
  } loc(#loc223)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc226)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc227)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc228)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc146)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc146)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc146)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc146)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc146)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc146)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc146)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc228)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc147)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc148)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc149)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc149)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc149)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc229)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc153)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc153)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc155)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc155)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc157)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc230)
    cir.br ^bb1 loc(#loc231)
  ^bb1:  // pred: ^bb0
    %24 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc232)
    %25 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc160)
    %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc160)
    cir.brcond %26 ^bb2, ^bb3 loc(#loc233)
  ^bb2:  // pred: ^bb1
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    cir.store %27, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc234)
    cir.br ^bb3 loc(#loc159)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc159)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc235)
  ^bb5:  // pred: ^bb4
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc167)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc167)
    %30 = cir.const #cir.int<67> : !s32i loc(#loc168)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc169)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc170)
    %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc169)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc169)
    cir.libc.memset %34 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc236)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc173)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc173)
    %37 = cir.const #cir.int<100> : !s32i loc(#loc174)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc175)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc174)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc176)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc176)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc237)
    %42 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc177)
    %43 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
    %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc179)
    %45 = cir.call @strcpy(%43, %44) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc177)
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc181)
    cir.br ^bb6 loc(#loc166)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc140)
  } loc(#loc225)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":37:1)
#loc6 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":56:1)
#loc7 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":49:9)
#loc8 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":49:24)
#loc9 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":39:5)
#loc10 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":39:12)
#loc11 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":40:5)
#loc12 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":40:33)
#loc13 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":41:12)
#loc14 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":41:24)
#loc15 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":41:29)
#loc16 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":41:33)
#loc17 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":41:5)
#loc18 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":41:34)
#loc19 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":42:25)
#loc20 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":42:5)
#loc21 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":42:16)
#loc22 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":42:20)
#loc23 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":42:21)
#loc24 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":43:5)
#loc25 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":47:5)
#loc26 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":43:8)
#loc27 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":43:26)
#loc28 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":44:5)
#loc29 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":46:16)
#loc30 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":46:29)
#loc31 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":46:27)
#loc32 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":46:9)
#loc33 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":48:5)
#loc34 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":55:5)
#loc35 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":50:16)
#loc36 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":50:24)
#loc37 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":50:29)
#loc38 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":50:33)
#loc39 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":50:9)
#loc40 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":50:34)
#loc41 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":51:25)
#loc42 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":51:16)
#loc43 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":51:20)
#loc44 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":51:9)
#loc45 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":53:9)
#loc46 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":53:16)
#loc47 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":53:22)
#loc48 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":54:19)
#loc49 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":54:9)
#loc50 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":111:1)
#loc51 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":115:1)
#loc52 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":113:5)
#loc53 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":113:14)
#loc54 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":114:5)
#loc55 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":114:14)
#loc56 = loc("/usr/include/stdlib.h":575:1)
#loc57 = loc("/usr/include/stdlib.h":575:41)
#loc58 = loc("/usr/include/time.h":76:1)
#loc59 = loc("/usr/include/time.h":76:38)
#loc60 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":132:15)
#loc61 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":134:15)
#loc62 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":137:15)
#loc63 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":139:15)
#loc64 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":127:1)
#loc65 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":142:1)
#loc70 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":128:1)
#loc71 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":130:27)
#loc72 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":130:22)
#loc73 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":130:5)
#loc74 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":132:5)
#loc75 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":133:5)
#loc76 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":133:55)
#loc77 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":134:5)
#loc78 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":137:5)
#loc79 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":138:5)
#loc80 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":138:54)
#loc81 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":139:5)
#loc82 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":141:12)
#loc83 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":141:5)
#loc84 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":25:1)
#loc85 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":28:1)
#loc86 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":27:12)
#loc87 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":27:5)
#loc88 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":72:19)
#loc89 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":63:1)
#loc90 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":87:1)
#loc91 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":80:9)
#loc92 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":80:24)
#loc93 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":65:5)
#loc94 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":65:12)
#loc95 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":66:5)
#loc96 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":66:33)
#loc97 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":67:12)
#loc98 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":67:24)
#loc99 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":67:29)
#loc100 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":67:33)
#loc101 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":67:5)
#loc102 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":67:34)
#loc103 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":68:25)
#loc104 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":68:5)
#loc105 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":68:16)
#loc106 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":68:20)
#loc107 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":68:21)
#loc108 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":69:5)
#loc109 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":78:5)
#loc110 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":69:8)
#loc111 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":69:27)
#loc112 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":70:5)
#loc113 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":73:5)
#loc114 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":75:5)
#loc115 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":72:9)
#loc116 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":77:16)
#loc117 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":77:9)
#loc118 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":79:5)
#loc119 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":86:5)
#loc120 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":81:16)
#loc121 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":81:24)
#loc122 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":81:29)
#loc123 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":81:33)
#loc124 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":81:9)
#loc125 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":81:34)
#loc126 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":82:25)
#loc127 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":82:16)
#loc128 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":82:20)
#loc129 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":82:9)
#loc130 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":84:9)
#loc131 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":84:16)
#loc132 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":84:22)
#loc133 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":85:19)
#loc134 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":85:9)
#loc135 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":30:1)
#loc136 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":33:1)
#loc137 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":32:12)
#loc138 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":32:5)
#loc139 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":90:1)
#loc140 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":109:1)
#loc141 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":102:9)
#loc142 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":102:24)
#loc143 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":92:5)
#loc144 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":92:12)
#loc145 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":93:5)
#loc146 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":93:33)
#loc147 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":94:12)
#loc148 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":94:24)
#loc149 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":94:29)
#loc150 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":94:33)
#loc151 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":94:5)
#loc152 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":94:34)
#loc153 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":95:25)
#loc154 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":95:5)
#loc155 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":95:16)
#loc156 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":95:20)
#loc157 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":95:21)
#loc158 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":96:5)
#loc159 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":100:5)
#loc160 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":96:8)
#loc161 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":96:26)
#loc162 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":97:5)
#loc163 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":99:16)
#loc164 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":99:9)
#loc165 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":101:5)
#loc166 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":108:5)
#loc167 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":103:16)
#loc168 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":103:24)
#loc169 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":103:29)
#loc170 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":103:33)
#loc171 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":103:9)
#loc172 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":103:34)
#loc173 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":104:25)
#loc174 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":104:16)
#loc175 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":104:20)
#loc176 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":104:9)
#loc177 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":106:9)
#loc178 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":106:16)
#loc179 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":106:22)
#loc180 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":107:19)
#loc181 = loc("CWE124_Buffer_Underwrite__char_alloca_cpy_08.c":107:9)
#loc182 = loc(fused[#loc1, #loc2])
#loc183 = loc(fused[#loc3, #loc4])
#loc184 = loc(fused[#loc5, #loc6])
#loc185 = loc(fused[#loc7, #loc8])
#loc186 = loc(fused[#loc9, #loc10])
#loc187 = loc(fused[#loc11, #loc12])
#loc188 = loc(fused[#loc17, #loc18])
#loc189 = loc(fused[#loc20, #loc19])
#loc190 = loc(fused[#loc24, #loc25])
#loc191 = loc(fused[#loc26, #loc27])
#loc192 = loc(fused[#loc28, #loc25])
#loc193 = loc(fused[#loc32, #loc30])
#loc194 = loc(fused[#loc33, #loc34])
#loc195 = loc(fused[#loc39, #loc40])
#loc196 = loc(fused[#loc44, #loc41])
#loc197 = loc(fused[#loc50, #loc51])
#loc198 = loc(fused[#loc52, #loc53])
#loc199 = loc(fused[#loc54, #loc55])
#loc200 = loc(fused[#loc56, #loc57])
#loc201 = loc(fused[#loc58, #loc59])
#loc202 = loc(fused[#loc64, #loc65])
#loc205 = loc(fused[#loc75, #loc76])
#loc206 = loc(fused[#loc79, #loc80])
#loc207 = loc(fused[#loc83, #loc82])
#loc208 = loc(fused[#loc84, #loc85])
#loc209 = loc(fused[#loc87, #loc86])
#loc210 = loc(fused[#loc89, #loc90])
#loc211 = loc(fused[#loc91, #loc92])
#loc212 = loc(fused[#loc93, #loc94])
#loc213 = loc(fused[#loc95, #loc96])
#loc214 = loc(fused[#loc101, #loc102])
#loc215 = loc(fused[#loc104, #loc103])
#loc216 = loc(fused[#loc108, #loc109])
#loc217 = loc(fused[#loc110, #loc111])
#loc218 = loc(fused[#loc112, #loc113, #loc114, #loc109])
#loc219 = loc(fused[#loc117, #loc116])
#loc220 = loc(fused[#loc118, #loc119])
#loc221 = loc(fused[#loc124, #loc125])
#loc222 = loc(fused[#loc129, #loc126])
#loc223 = loc(fused[#loc135, #loc136])
#loc224 = loc(fused[#loc138, #loc137])
#loc225 = loc(fused[#loc139, #loc140])
#loc226 = loc(fused[#loc141, #loc142])
#loc227 = loc(fused[#loc143, #loc144])
#loc228 = loc(fused[#loc145, #loc146])
#loc229 = loc(fused[#loc151, #loc152])
#loc230 = loc(fused[#loc154, #loc153])
#loc231 = loc(fused[#loc158, #loc159])
#loc232 = loc(fused[#loc160, #loc161])
#loc233 = loc(fused[#loc162, #loc159])
#loc234 = loc(fused[#loc164, #loc163])
#loc235 = loc(fused[#loc165, #loc166])
#loc236 = loc(fused[#loc171, #loc172])
#loc237 = loc(fused[#loc176, #loc173])
