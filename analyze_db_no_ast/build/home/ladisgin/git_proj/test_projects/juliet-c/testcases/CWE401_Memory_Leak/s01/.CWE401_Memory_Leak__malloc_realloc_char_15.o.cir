!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc183)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc184)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc185)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc186)
  cir.func private  @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc187)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"New String\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc12)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc188)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc15)
  cir.func no_proto  @CWE401_Memory_Leak__malloc_realloc_char_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc20)
      cir.switch (%0 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc192)
          %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc25)
          %3 = cir.const #cir.int<100> : !s32i loc(#loc26)
          %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc26)
          %5 = cir.const #cir.int<1> : !u64i loc(#loc193)
          %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc194)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc25)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc195)
          cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
          cir.scope {
            %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc32)
            %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !s32i loc(#loc197)
            %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc33)
            cir.if %28 {
              %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
              %30 = cir.const #cir.int<1> : !s32i loc(#loc36)
              %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc37)
              cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
            } loc(#loc198)
          } loc(#loc196)
          %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc38)
          %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
          %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
          %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc38)
          %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc41)
          %15 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc42)
          %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc43)
          %18 = cir.const #cir.int<130000> : !s32i loc(#loc44)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc44)
          %20 = cir.const #cir.int<1> : !u64i loc(#loc199)
          %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc200)
          %22 = cir.call @realloc(%17, %21) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc42)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc201)
          cir.store %23, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
          cir.scope {
            %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc53)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc53)
            %27 = cir.cmp(ne, %24, %26) : !cir.ptr<!s8i>, !s32i loc(#loc204)
            %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc54)
            cir.if %28 {
              %29 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc56)
              %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
              %31 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc12)
              %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc12)
              %33 = cir.call @strcpy(%30, %32) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc56)
              %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
              cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc59)
              %35 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc60)
              %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
              %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
              cir.call @free(%37) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc60)
            } loc(#loc205)
          } loc(#loc203)
        } loc(#loc191)
        cir.break loc(#loc62)
      },
      case (default) {
        %1 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc15)
        %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc15)
        cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc63)
        cir.break loc(#loc64)
      }
      ] loc(#loc18)
    } loc(#loc190)
    cir.return loc(#loc17)
  } loc(#loc189)
  cir.func no_proto  @CWE401_Memory_Leak__malloc_realloc_char_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc207)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc208)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    cir.return loc(#loc66)
  } loc(#loc206)
  cir.func no_proto internal private  @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc75)
      cir.switch (%0 : !s32i) [
      case (equal, 6) {
        %1 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc76)
        %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc76)
        cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc77)
        cir.break loc(#loc78)
      },
      case (default) {
        cir.scope {
          %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc212)
          %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc213)
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc85)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc86)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc86)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc214)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc215)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc85)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc216)
          cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc212)
          cir.scope {
            %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc92)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc92)
            %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s8i>, !s32i loc(#loc218)
            %32 = cir.cast(int_to_bool, %31 : !s32i), !cir.bool loc(#loc93)
            cir.if %32 {
              %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc95)
              %34 = cir.const #cir.int<1> : !s32i loc(#loc96)
              %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc97)
              cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc95)
            } loc(#loc219)
          } loc(#loc217)
          %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc98)
          %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc100)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc100)
          %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc98)
          %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
          cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc102)
          %16 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc103)
          %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
          %19 = cir.const #cir.int<130000> : !s32i loc(#loc105)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc105)
          %21 = cir.const #cir.int<1> : !u64i loc(#loc220)
          %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc221)
          %23 = cir.call @realloc(%18, %22) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc103)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc222)
          cir.store %24, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
          cir.scope {
            %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc114)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc114)
            %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!s8i>, !s32i loc(#loc225)
            %32 = cir.cast(int_to_bool, %31 : !s32i), !cir.bool loc(#loc115)
            cir.if %32 {
              %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
              cir.store %33, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc227)
              %34 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc119)
              %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
              %36 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc121)
              %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc121)
              %38 = cir.call @strcpy(%35, %37) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc119)
              %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
              cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc123)
            } loc(#loc226)
          } loc(#loc224)
          %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc124)
          %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
          cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc124)
        } loc(#loc211)
        cir.break loc(#loc126)
      }
      ] loc(#loc73)
    } loc(#loc210)
    cir.return loc(#loc72)
  } loc(#loc209)
  cir.func no_proto internal private  @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc131)
      cir.switch (%0 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc231)
          %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc232)
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc138)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc139)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc139)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc233)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc234)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc138)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc235)
          cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc231)
          cir.scope {
            %28 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc145)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc145)
            %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s8i>, !s32i loc(#loc237)
            %32 = cir.cast(int_to_bool, %31 : !s32i), !cir.bool loc(#loc146)
            cir.if %32 {
              %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc148)
              %34 = cir.const #cir.int<1> : !s32i loc(#loc149)
              %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc150)
              cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc148)
            } loc(#loc238)
          } loc(#loc236)
          %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc151)
          %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc153)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc153)
          %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc151)
          %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
          cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc155)
          %16 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc156)
          %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc157)
          %19 = cir.const #cir.int<130000> : !s32i loc(#loc158)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc158)
          %21 = cir.const #cir.int<1> : !u64i loc(#loc239)
          %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc240)
          %23 = cir.call @realloc(%18, %22) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc156)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc241)
          cir.store %24, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc242)
          cir.scope {
            %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc167)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc167)
            %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!s8i>, !s32i loc(#loc244)
            %32 = cir.cast(int_to_bool, %31 : !s32i), !cir.bool loc(#loc168)
            cir.if %32 {
              %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
              cir.store %33, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc246)
              %34 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc172)
              %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
              %36 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc174)
              %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc174)
              %38 = cir.call @strcpy(%35, %37) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc172)
              %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
              cir.call @printLine(%39) : (!cir.ptr<!s8i>) -> () loc(#loc176)
            } loc(#loc245)
          } loc(#loc243)
          %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc177)
          %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc178)
          cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc177)
        } loc(#loc230)
        cir.break loc(#loc179)
      },
      case (default) {
        %1 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc180)
        %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc180)
        cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc181)
        cir.break loc(#loc182)
      }
      ] loc(#loc129)
    } loc(#loc229)
    cir.return loc(#loc128)
  } loc(#loc228)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":33:22)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("/usr/include/stdlib.h":683:1)
#loc11 = loc("/usr/include/stdlib.h":684:14)
#loc12 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":40:26)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":48:19)
#loc16 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":24:1)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":51:1)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":26:5)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":50:5)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":26:12)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":29:5)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":44:5)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":30:9)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":30:54)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":30:31)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":30:38)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":30:42)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":30:53)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":31:9)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":31:37)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":31:13)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":31:21)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":31:18)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":31:27)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":31:28)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":31:34)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":31:33)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":33:9)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":33:16)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":34:19)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":34:9)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":36:24)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":36:32)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":36:39)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":36:47)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":36:58)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":36:38)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":36:59)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":36:9)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":37:9)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":43:9)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":37:13)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":37:21)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":37:18)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":38:9)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":40:13)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":40:20)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":41:23)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":41:13)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":42:13)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":42:18)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":45:5)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":48:9)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":49:9)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":123:1)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":127:1)
#loc67 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":125:5)
#loc68 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":125:11)
#loc69 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":126:5)
#loc70 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":126:11)
#loc71 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":58:1)
#loc72 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":88:1)
#loc73 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":60:5)
#loc74 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":87:5)
#loc75 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":60:12)
#loc76 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":64:19)
#loc77 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":64:9)
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":65:9)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":67:5)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":85:5)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":68:9)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":68:54)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":70:9)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":70:16)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":68:31)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":68:38)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":68:42)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":68:53)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":69:9)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":69:37)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":69:13)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":69:21)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":69:18)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":69:27)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":69:28)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":69:34)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":69:33)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":72:9)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":72:16)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":72:22)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":73:19)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":73:9)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":74:27)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":74:35)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":74:42)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":74:50)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":74:61)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":74:41)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":74:62)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":74:9)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":77:9)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":83:9)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":77:13)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":77:24)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":77:21)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":78:9)
#loc117 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":79:20)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":79:13)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":81:13)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":81:20)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":81:26)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":82:23)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":82:13)
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":84:9)
#loc125 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":84:14)
#loc126 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":86:5)
#loc127 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":91:1)
#loc128 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":121:1)
#loc129 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":93:5)
#loc130 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":120:5)
#loc131 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":93:12)
#loc132 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":96:5)
#loc133 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":114:5)
#loc134 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":97:9)
#loc135 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":97:54)
#loc136 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":99:9)
#loc137 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":99:16)
#loc138 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":97:31)
#loc139 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":97:38)
#loc140 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":97:42)
#loc141 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":97:53)
#loc142 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":98:9)
#loc143 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":98:37)
#loc144 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":98:13)
#loc145 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":98:21)
#loc146 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":98:18)
#loc147 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":98:27)
#loc148 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":98:28)
#loc149 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":98:34)
#loc150 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":98:33)
#loc151 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":101:9)
#loc152 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":101:16)
#loc153 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":101:22)
#loc154 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":102:19)
#loc155 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":102:9)
#loc156 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":103:27)
#loc157 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":103:35)
#loc158 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":103:42)
#loc159 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":103:50)
#loc160 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":103:61)
#loc161 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":103:41)
#loc162 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":103:62)
#loc163 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":103:9)
#loc164 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":106:9)
#loc165 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":112:9)
#loc166 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":106:13)
#loc167 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":106:24)
#loc168 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":106:21)
#loc169 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":107:9)
#loc170 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":108:20)
#loc171 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":108:13)
#loc172 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":110:13)
#loc173 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":110:20)
#loc174 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":110:26)
#loc175 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":111:23)
#loc176 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":111:13)
#loc177 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":113:9)
#loc178 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":113:14)
#loc179 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":115:5)
#loc180 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":118:19)
#loc181 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":118:9)
#loc182 = loc("CWE401_Memory_Leak__malloc_realloc_char_15.c":119:9)
#loc183 = loc(fused[#loc1, #loc2])
#loc184 = loc(fused[#loc3, #loc4])
#loc185 = loc(fused[#loc5, #loc6])
#loc186 = loc(fused[#loc8, #loc9])
#loc187 = loc(fused[#loc10, #loc11])
#loc188 = loc(fused[#loc13, #loc14])
#loc189 = loc(fused[#loc16, #loc17])
#loc190 = loc(fused[#loc18, #loc19])
#loc191 = loc(fused[#loc21, #loc22])
#loc192 = loc(fused[#loc23, #loc24])
#loc193 = loc(fused[#loc27, #loc28])
#loc194 = loc(fused[#loc26, #loc28])
#loc195 = loc(fused[#loc25, #loc24])
#loc196 = loc(fused[#loc29, #loc30])
#loc197 = loc(fused[#loc31, #loc32])
#loc198 = loc(fused[#loc34, #loc30])
#loc199 = loc(fused[#loc45, #loc46])
#loc200 = loc(fused[#loc47, #loc46])
#loc201 = loc(fused[#loc42, #loc48])
#loc202 = loc(fused[#loc49, #loc48])
#loc203 = loc(fused[#loc50, #loc51])
#loc204 = loc(fused[#loc52, #loc53])
#loc205 = loc(fused[#loc55, #loc51])
#loc206 = loc(fused[#loc65, #loc66])
#loc207 = loc(fused[#loc67, #loc68])
#loc208 = loc(fused[#loc69, #loc70])
#loc209 = loc(fused[#loc71, #loc72])
#loc210 = loc(fused[#loc73, #loc74])
#loc211 = loc(fused[#loc79, #loc80])
#loc212 = loc(fused[#loc81, #loc82])
#loc213 = loc(fused[#loc83, #loc84])
#loc214 = loc(fused[#loc87, #loc88])
#loc215 = loc(fused[#loc86, #loc88])
#loc216 = loc(fused[#loc85, #loc82])
#loc217 = loc(fused[#loc89, #loc90])
#loc218 = loc(fused[#loc91, #loc92])
#loc219 = loc(fused[#loc94, #loc90])
#loc220 = loc(fused[#loc106, #loc107])
#loc221 = loc(fused[#loc108, #loc107])
#loc222 = loc(fused[#loc103, #loc109])
#loc223 = loc(fused[#loc110, #loc109])
#loc224 = loc(fused[#loc111, #loc112])
#loc225 = loc(fused[#loc113, #loc114])
#loc226 = loc(fused[#loc116, #loc112])
#loc227 = loc(fused[#loc118, #loc117])
#loc228 = loc(fused[#loc127, #loc128])
#loc229 = loc(fused[#loc129, #loc130])
#loc230 = loc(fused[#loc132, #loc133])
#loc231 = loc(fused[#loc134, #loc135])
#loc232 = loc(fused[#loc136, #loc137])
#loc233 = loc(fused[#loc140, #loc141])
#loc234 = loc(fused[#loc139, #loc141])
#loc235 = loc(fused[#loc138, #loc135])
#loc236 = loc(fused[#loc142, #loc143])
#loc237 = loc(fused[#loc144, #loc145])
#loc238 = loc(fused[#loc147, #loc143])
#loc239 = loc(fused[#loc159, #loc160])
#loc240 = loc(fused[#loc161, #loc160])
#loc241 = loc(fused[#loc156, #loc162])
#loc242 = loc(fused[#loc163, #loc162])
#loc243 = loc(fused[#loc164, #loc165])
#loc244 = loc(fused[#loc166, #loc167])
#loc245 = loc(fused[#loc169, #loc165])
#loc246 = loc(fused[#loc171, #loc170])
