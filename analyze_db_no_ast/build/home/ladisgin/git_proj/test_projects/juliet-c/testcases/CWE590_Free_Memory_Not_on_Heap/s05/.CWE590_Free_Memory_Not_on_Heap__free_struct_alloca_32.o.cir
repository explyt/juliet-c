!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc145)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc146)
  cir.func no_proto  @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc148)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc149)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc150)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc149)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc150)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc151)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc153)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc18)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc19)
      cir.store %6, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc153)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc155)
        %10 = cir.const #cir.int<100> : !s32i loc(#loc23)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc23)
        %12 = cir.const #cir.int<8> : !u64i loc(#loc23)
        %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc23)
        %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc23)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc23)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc23)
        cir.store %16, %9 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc155)
        cir.scope {
          %18 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc157)
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc30)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc30)
            cir.store %20, %18 : !u64i, !cir.ptr<!u64i> loc(#loc159)
            cir.for : cond {
              %21 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc32)
              %22 = cir.const #cir.int<100> : !s32i loc(#loc33)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc33)
              %24 = cir.cmp(lt, %21, %23) : !u64i, !s32i loc(#loc160)
              %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc34)
              cir.condition(%25) loc(#loc34)
            } body {
              cir.scope {
                %21 = cir.const #cir.int<1> : !s32i loc(#loc36)
                %22 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
                %23 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc38)
                %24 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %23 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
                %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
                cir.store %21, %25 : !s32i, !cir.ptr<!s32i> loc(#loc162)
                %26 = cir.const #cir.int<1> : !s32i loc(#loc41)
                %27 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
                %28 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc43)
                %29 = cir.ptr_stride(%27 : !cir.ptr<!ty__twoIntsStruct>, %28 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
                %30 = cir.get_member %29[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc45)
                cir.store %26, %30 : !s32i, !cir.ptr<!s32i> loc(#loc163)
              } loc(#loc161)
              cir.yield loc(#loc29)
            } step {
              %21 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc46)
              %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc47)
              cir.store %22, %18 : !u64i, !cir.ptr<!u64i> loc(#loc164)
              cir.yield loc(#loc158)
            } loc(#loc158)
          } loc(#loc158)
        } loc(#loc156)
        %17 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
        cir.store %17, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc165)
      } loc(#loc154)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc51)
      cir.store %7, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc166)
    } loc(#loc152)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc168)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc56)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
      cir.store %6, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc168)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc59)
      %9 = cir.ptr_stride(%7 : !cir.ptr<!ty__twoIntsStruct>, %8 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
      cir.call @printStructLine(%9) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc61)
      %10 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc62)
      %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc63)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc63)
      cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc62)
    } loc(#loc167)
    cir.return loc(#loc6)
  } loc(#loc147)
  cir.func no_proto  @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc170)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc66)
    cir.return loc(#loc65)
  } loc(#loc169)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc171)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc172)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc72)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc173)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc176)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc177)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc176)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc177)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc178)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc180)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc88)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
      cir.store %6, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc180)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc182)
        %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc94)
        %11 = cir.const #cir.int<100> : !s32i loc(#loc95)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc95)
        %13 = cir.const #cir.int<8> : !u64i loc(#loc183)
        %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc184)
        %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc94)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc185)
        cir.store %16, %9 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc182)
        cir.scope {
          %18 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
          %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc101)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
          %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!ty__twoIntsStruct>, !s32i loc(#loc187)
          %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc102)
          cir.if %22 {
            %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc72)
            %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc72)
            cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc104)
            %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc105)
            %26 = cir.const #cir.int<1> : !s32i loc(#loc106)
            cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc105)
          } loc(#loc188)
        } loc(#loc186)
        cir.scope {
          %18 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc190)
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc113)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc113)
            cir.store %20, %18 : !u64i, !cir.ptr<!u64i> loc(#loc192)
            cir.for : cond {
              %21 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc115)
              %22 = cir.const #cir.int<100> : !s32i loc(#loc116)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc116)
              %24 = cir.cmp(lt, %21, %23) : !u64i, !s32i loc(#loc193)
              %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc117)
              cir.condition(%25) loc(#loc117)
            } body {
              cir.scope {
                %21 = cir.const #cir.int<1> : !s32i loc(#loc119)
                %22 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
                %23 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc121)
                %24 = cir.ptr_stride(%22 : !cir.ptr<!ty__twoIntsStruct>, %23 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc122)
                %25 = cir.get_member %24[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
                cir.store %21, %25 : !s32i, !cir.ptr<!s32i> loc(#loc195)
                %26 = cir.const #cir.int<1> : !s32i loc(#loc123)
                %27 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc124)
                %28 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc125)
                %29 = cir.ptr_stride(%27 : !cir.ptr<!ty__twoIntsStruct>, %28 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc126)
                %30 = cir.get_member %29[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc45)
                cir.store %26, %30 : !s32i, !cir.ptr<!s32i> loc(#loc196)
              } loc(#loc194)
              cir.yield loc(#loc112)
            } step {
              %21 = cir.load %18 : !cir.ptr<!u64i>, !u64i loc(#loc127)
              %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc128)
              cir.store %22, %18 : !u64i, !cir.ptr<!u64i> loc(#loc197)
              cir.yield loc(#loc191)
            } loc(#loc191)
          } loc(#loc191)
        } loc(#loc189)
        %17 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc129)
        cir.store %17, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc198)
      } loc(#loc181)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc131)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc132)
      cir.store %7, %8 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc199)
    } loc(#loc179)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc201)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc137)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc138)
      cir.store %6, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc201)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc140)
      %9 = cir.ptr_stride(%7 : !cir.ptr<!ty__twoIntsStruct>, %8 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
      cir.call @printStructLine(%9) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc142)
      %10 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc143)
      %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc144)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc144)
      cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc143)
    } loc(#loc200)
    cir.return loc(#loc76)
  } loc(#loc174)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":23:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":52:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":25:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":25:21)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":26:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":26:34)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":27:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":27:34)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":28:12)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":28:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":29:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":45:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":30:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":30:33)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":30:32)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":31:9)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":43:9)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":33:13)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":33:59)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":34:13)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":41:13)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":35:17)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":35:24)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":36:17)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":40:17)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":36:26)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":36:22)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":36:29)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":36:33)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":36:31)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":37:17)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":38:44)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":38:21)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":38:32)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":38:33)
#loc40 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":39:44)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":39:21)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":39:32)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":39:33)
#loc45 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":36:39)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":36:38)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":42:20)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":42:13)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":44:21)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":44:10)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":44:9)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":46:5)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":51:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":47:9)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":47:33)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":47:32)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":48:26)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":48:31)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":48:32)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":48:9)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":50:9)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":50:14)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":95:1)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":98:1)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":97:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":97:13)
#loc68 = loc("/usr/include/stdlib.h":672:1)
#loc69 = loc("/usr/include/stdlib.h":672:45)
#loc70 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc71 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":72:27)
#loc73 = loc("/usr/include/stdlib.h":756:1)
#loc74 = loc("/usr/include/stdlib.h":756:70)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":59:1)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":93:1)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":61:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":61:21)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":62:5)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":62:34)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":63:5)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":63:34)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":64:12)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":64:5)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":65:5)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":86:5)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":66:9)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":66:33)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":66:32)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":67:9)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":84:9)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":69:13)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":69:91)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":69:59)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":69:66)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":69:70)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":69:90)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":70:13)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":74:13)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":70:17)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":70:31)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":70:28)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":71:13)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":72:17)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":73:17)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":73:22)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":75:13)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":82:13)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":76:17)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":76:24)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":77:17)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":81:17)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":77:26)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":77:22)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":77:29)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":77:33)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":77:31)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":78:17)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":79:44)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":79:21)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":79:32)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":79:33)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":80:44)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":80:21)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":80:32)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":80:33)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":77:39)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":77:38)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":83:20)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":83:13)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":85:21)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":85:10)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":85:9)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":87:5)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":92:5)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":88:9)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":88:33)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":88:32)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":89:26)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":89:31)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":89:32)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":89:9)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":91:9)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_32.c":91:14)
#loc145 = loc(fused[#loc1, #loc2])
#loc146 = loc(fused[#loc3, #loc4])
#loc147 = loc(fused[#loc5, #loc6])
#loc148 = loc(fused[#loc7, #loc8])
#loc149 = loc(fused[#loc9, #loc10])
#loc150 = loc(fused[#loc11, #loc12])
#loc151 = loc(fused[#loc14, #loc13])
#loc152 = loc(fused[#loc15, #loc16])
#loc153 = loc(fused[#loc17, #loc18])
#loc154 = loc(fused[#loc20, #loc21])
#loc155 = loc(fused[#loc22, #loc23])
#loc156 = loc(fused[#loc24, #loc25])
#loc157 = loc(fused[#loc26, #loc27])
#loc158 = loc(fused[#loc28, #loc29])
#loc159 = loc(fused[#loc31, #loc30])
#loc160 = loc(fused[#loc32, #loc33])
#loc161 = loc(fused[#loc35, #loc29])
#loc162 = loc(fused[#loc37, #loc36])
#loc163 = loc(fused[#loc42, #loc41])
#loc164 = loc(fused[#loc47, #loc46])
#loc165 = loc(fused[#loc49, #loc48])
#loc166 = loc(fused[#loc52, #loc50])
#loc167 = loc(fused[#loc53, #loc54])
#loc168 = loc(fused[#loc55, #loc56])
#loc169 = loc(fused[#loc64, #loc65])
#loc170 = loc(fused[#loc66, #loc67])
#loc171 = loc(fused[#loc68, #loc69])
#loc172 = loc(fused[#loc70, #loc71])
#loc173 = loc(fused[#loc73, #loc74])
#loc174 = loc(fused[#loc75, #loc76])
#loc175 = loc(fused[#loc77, #loc78])
#loc176 = loc(fused[#loc79, #loc80])
#loc177 = loc(fused[#loc81, #loc82])
#loc178 = loc(fused[#loc84, #loc83])
#loc179 = loc(fused[#loc85, #loc86])
#loc180 = loc(fused[#loc87, #loc88])
#loc181 = loc(fused[#loc90, #loc91])
#loc182 = loc(fused[#loc92, #loc93])
#loc183 = loc(fused[#loc96, #loc97])
#loc184 = loc(fused[#loc95, #loc97])
#loc185 = loc(fused[#loc94, #loc93])
#loc186 = loc(fused[#loc98, #loc99])
#loc187 = loc(fused[#loc100, #loc101])
#loc188 = loc(fused[#loc103, #loc99])
#loc189 = loc(fused[#loc107, #loc108])
#loc190 = loc(fused[#loc109, #loc110])
#loc191 = loc(fused[#loc111, #loc112])
#loc192 = loc(fused[#loc114, #loc113])
#loc193 = loc(fused[#loc115, #loc116])
#loc194 = loc(fused[#loc118, #loc112])
#loc195 = loc(fused[#loc120, #loc119])
#loc196 = loc(fused[#loc124, #loc123])
#loc197 = loc(fused[#loc128, #loc127])
#loc198 = loc(fused[#loc130, #loc129])
#loc199 = loc(fused[#loc133, #loc131])
#loc200 = loc(fused[#loc134, #loc135])
#loc201 = loc(fused[#loc136, #loc137])
