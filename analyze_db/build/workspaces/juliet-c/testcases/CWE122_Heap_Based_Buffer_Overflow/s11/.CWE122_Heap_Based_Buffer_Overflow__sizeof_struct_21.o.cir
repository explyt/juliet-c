!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":24:34)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":24:50)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":59:39)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":59:55)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":90:39)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":90:55)
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc165 = loc(fused[#loc9, #loc10])
#loc190 = loc(fused[#loc70, #loc71])
#loc209 = loc(fused[#loc119, #loc120])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc161)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc162)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc163)
  cir.func internal private @badSource(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc9, #loc10])) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc165)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc8)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc11)
    cir.br ^bb1 loc(#loc166)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc161)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc167)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc16)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc168)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc169)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc170)
    cir.br ^bb3 loc(#loc171)
  ^bb3:  // pred: ^bb2
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc23)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc172)
    cir.brcond %12 ^bb4, ^bb5 loc(#loc173)
  ^bb4:  // pred: ^bb3
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc26)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc28)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
    cir.br ^bb5 loc(#loc22)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc22)
  ^bb6:  // pred: ^bb5
    %16 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
    cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    %19 = cir.const #cir.int<2> : !s32i loc(#loc32)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
    %21 = cir.get_member %20[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
    cir.store %19, %21 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    cir.br ^bb7 loc(#loc13)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc13)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
    cir.store %22, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc176)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc176)
    cir.return %23 : !cir.ptr<!ty__twoIntsStruct> loc(#loc176)
  } loc(#loc164)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc177)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc178)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc181)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %3 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc161)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc182)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
    %5 = cir.call @badSource(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc183)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    cir.call @printStructLine(%6) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc54)
    %7 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc55)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc56)
    cir.call @free(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc55)
    cir.return loc(#loc42)
  } loc(#loc179)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc185)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc59)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc186)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc61)
    cir.return loc(#loc58)
  } loc(#loc184)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc187)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc67)
  cir.func internal private @goodG2B1Source(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc70, #loc71])) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc190)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc69)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc72)
    cir.br ^bb1 loc(#loc191)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc187)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc75)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc192)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc67)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    cir.br ^bb8 loc(#loc77)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc80)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc193)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc80)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc194)
    cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc195)
    cir.br ^bb4 loc(#loc196)
  ^bb4:  // pred: ^bb3
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc88)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc197)
    cir.brcond %14 ^bb5, ^bb6 loc(#loc198)
  ^bb5:  // pred: ^bb4
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc90)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc92)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc90)
    cir.br ^bb6 loc(#loc86)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc86)
  ^bb7:  // pred: ^bb6
    %18 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
    %20 = cir.get_member %19[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
    cir.store %18, %20 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc95)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
    %23 = cir.get_member %22[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
    cir.store %21, %23 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    cir.br ^bb8 loc(#loc74)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc74)
  ^bb9:  // pred: ^bb8
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc97)
    cir.store %24, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc201)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc201)
    cir.return %25 : !cir.ptr<!ty__twoIntsStruct> loc(#loc201)
  } loc(#loc189)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc203)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc204)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %3 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc187)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
    %5 = cir.call @goodG2B1Source(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
    cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc206)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
    cir.call @printStructLine(%6) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc112)
    %7 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc113)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc114)
    cir.call @free(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc113)
    cir.return loc(#loc100)
  } loc(#loc202)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc207)
  cir.func internal private @goodG2B2Source(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc119, #loc120])) -> !cir.ptr<!ty__twoIntsStruct> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc209)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["__retval"] {alignment = 8 : i64} loc(#loc118)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc121)
    cir.br ^bb1 loc(#loc210)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc207)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc124)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc211)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc126)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc212)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc126)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc213)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc214)
    cir.br ^bb3 loc(#loc215)
  ^bb3:  // pred: ^bb2
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc134)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc216)
    cir.brcond %12 ^bb4, ^bb5 loc(#loc217)
  ^bb4:  // pred: ^bb3
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc136)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc138)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc136)
    cir.br ^bb5 loc(#loc132)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc132)
  ^bb6:  // pred: ^bb5
    %16 = cir.const #cir.int<1> : !s32i loc(#loc139)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc140)
    %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
    cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    %19 = cir.const #cir.int<2> : !s32i loc(#loc141)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc142)
    %21 = cir.get_member %20[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
    cir.store %19, %21 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    cir.br ^bb7 loc(#loc123)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc123)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
    cir.store %22, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc220)
    %23 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc220)
    cir.return %23 : !cir.ptr<!ty__twoIntsStruct> loc(#loc220)
  } loc(#loc208)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc222)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc149)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc223)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc151)
    %3 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc207)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc153)
    %5 = cir.call @goodG2B2Source(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> !cir.ptr<!ty__twoIntsStruct> loc(#loc154)
    cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc225)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc157)
    cir.call @printStructLine(%6) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc158)
    %7 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc159)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc160)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc160)
    cir.call @free(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc159)
    cir.return loc(#loc146)
  } loc(#loc221)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":22:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":22:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":24:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":36:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":25:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":26:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":34:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":26:8)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":27:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":30:33)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":30:40)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":30:51)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":30:52)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":30:9)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":31:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":31:37)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":31:13)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":31:21)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":31:27)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":31:28)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":31:34)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":31:33)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":32:24)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":32:9)
#loc31 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":33:24)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":33:9)
#loc34 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":35:12)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":35:5)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc39 = loc("/usr/include/stdlib.h":687:1)
#loc40 = loc("/usr/include/stdlib.h":687:32)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":38:1)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":48:1)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":40:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":40:21)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":42:12)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":42:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":43:17)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":43:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":44:22)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":44:12)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":44:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":44:26)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":46:21)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":46:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":47:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":47:10)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":115:1)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":119:1)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":117:5)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":117:14)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":118:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":118:14)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":55:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":55:29)
#loc65 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc66 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":64:19)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":59:1)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":75:1)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":60:1)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":61:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":73:5)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":61:8)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":62:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":65:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":67:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":64:9)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":69:33)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":69:40)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":69:52)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":69:53)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":69:9)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":70:9)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":70:37)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":70:13)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":70:21)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":70:27)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":70:28)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":70:34)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":70:33)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":71:24)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":71:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":72:24)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":72:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":74:12)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":74:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":77:1)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":87:1)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":79:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":79:21)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":81:12)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":81:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":82:22)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":82:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":83:27)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":83:12)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":83:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":83:31)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":85:21)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":85:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":86:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":86:10)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":56:1)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":56:29)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":90:1)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":101:1)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":91:1)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":92:5)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":99:5)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":92:8)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":93:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":95:33)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":95:40)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":95:52)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":95:53)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":95:9)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":96:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":96:37)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":96:13)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":96:21)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":96:27)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":96:28)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":96:34)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":96:33)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":97:24)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":97:9)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":98:24)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":98:9)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":100:12)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":100:5)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":103:1)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":113:1)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":105:5)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":105:21)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":107:12)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":107:5)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":108:22)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":108:5)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":109:27)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":109:12)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":109:5)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":109:31)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":111:21)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":111:5)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":112:5)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_21.c":112:10)
#loc161 = loc(fused[#loc1, #loc2])
#loc162 = loc(fused[#loc3, #loc4])
#loc163 = loc(fused[#loc5, #loc6])
#loc164 = loc(fused[#loc7, #loc8])
#loc166 = loc(fused[#loc12, #loc13])
#loc167 = loc(fused[#loc15, #loc13])
#loc168 = loc(fused[#loc17, #loc18])
#loc169 = loc(fused[#loc16, #loc19])
#loc170 = loc(fused[#loc20, #loc19])
#loc171 = loc(fused[#loc21, #loc22])
#loc172 = loc(fused[#loc23, #loc24])
#loc173 = loc(fused[#loc25, #loc22])
#loc174 = loc(fused[#loc30, #loc29])
#loc175 = loc(fused[#loc33, #loc32])
#loc176 = loc(fused[#loc36, #loc35])
#loc177 = loc(fused[#loc37, #loc38])
#loc178 = loc(fused[#loc39, #loc40])
#loc179 = loc(fused[#loc41, #loc42])
#loc180 = loc(fused[#loc43, #loc44])
#loc181 = loc(fused[#loc46, #loc45])
#loc182 = loc(fused[#loc48, #loc47])
#loc183 = loc(fused[#loc51, #loc52])
#loc184 = loc(fused[#loc57, #loc58])
#loc185 = loc(fused[#loc59, #loc60])
#loc186 = loc(fused[#loc61, #loc62])
#loc187 = loc(fused[#loc63, #loc64])
#loc188 = loc(fused[#loc65, #loc66])
#loc189 = loc(fused[#loc68, #loc69])
#loc191 = loc(fused[#loc73, #loc74])
#loc192 = loc(fused[#loc76, #loc77, #loc78, #loc74])
#loc193 = loc(fused[#loc81, #loc82])
#loc194 = loc(fused[#loc80, #loc83])
#loc195 = loc(fused[#loc84, #loc83])
#loc196 = loc(fused[#loc85, #loc86])
#loc197 = loc(fused[#loc87, #loc88])
#loc198 = loc(fused[#loc89, #loc86])
#loc199 = loc(fused[#loc94, #loc93])
#loc200 = loc(fused[#loc96, #loc95])
#loc201 = loc(fused[#loc98, #loc97])
#loc202 = loc(fused[#loc99, #loc100])
#loc203 = loc(fused[#loc101, #loc102])
#loc204 = loc(fused[#loc104, #loc103])
#loc205 = loc(fused[#loc106, #loc105])
#loc206 = loc(fused[#loc109, #loc110])
#loc207 = loc(fused[#loc115, #loc116])
#loc208 = loc(fused[#loc117, #loc118])
#loc210 = loc(fused[#loc122, #loc123])
#loc211 = loc(fused[#loc125, #loc123])
#loc212 = loc(fused[#loc127, #loc128])
#loc213 = loc(fused[#loc126, #loc129])
#loc214 = loc(fused[#loc130, #loc129])
#loc215 = loc(fused[#loc131, #loc132])
#loc216 = loc(fused[#loc133, #loc134])
#loc217 = loc(fused[#loc135, #loc132])
#loc218 = loc(fused[#loc140, #loc139])
#loc219 = loc(fused[#loc142, #loc141])
#loc220 = loc(fused[#loc144, #loc143])
#loc221 = loc(fused[#loc145, #loc146])
#loc222 = loc(fused[#loc147, #loc148])
#loc223 = loc(fused[#loc150, #loc149])
#loc224 = loc(fused[#loc152, #loc151])
#loc225 = loc(fused[#loc155, #loc156])
