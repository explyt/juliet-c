!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":117:10)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":117:14)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":117:20)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":117:32)
#loc179 = loc(fused[#loc61, #loc62])
#loc180 = loc(fused[#loc63, #loc64])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc159)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc160)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc161)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc163)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc164)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc165)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc14)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
    cir.br ^bb1 loc(#loc167)
  ^bb1:  // pred: ^bb0
    %11 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc168)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
    %15 = cir.const #cir.int<65> : !s32i loc(#loc22)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc23)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc23)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc169)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc27)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc29)
    %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc31)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc170)
    cir.br ^bb3 loc(#loc18)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc171)
  ^bb5:  // pred: ^bb4
    %27 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc163)
    cir.store %27, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc163)
    %28 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc34)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc35)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %31 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc37)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %33 = cir.call @strlen(%32) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc37)
    %34 = cir.call @strncat(%29, %30, %33) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc34)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc39)
    %37 = cir.const #cir.int<50> : !s32i loc(#loc40)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc40)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc42)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc42)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc172)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    cir.br ^bb6 loc(#loc33)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc8)
  } loc(#loc162)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc175)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc46)
  } loc(#loc173)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc176)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc58)
  cir.func @main(%arg0: !s32i loc(fused[#loc61, #loc62]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc63, #loc64])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc179)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc180)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc65)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc66)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc67)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc67)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc68)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc55)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04_good() : () -> () loc(#loc70)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04_bad() : () -> () loc(#loc74)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc58)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    cir.return %17 : !s32i loc(#loc183)
  } loc(#loc178)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc79)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc185)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc186)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc187)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc87)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc87)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc87)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc87)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc87)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc87)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc87)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
    cir.br ^bb1 loc(#loc189)
  ^bb1:  // pred: ^bb0
    %11 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc92)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc190)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc79)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    cir.br ^bb4 loc(#loc94)
  ^bb3:  // pred: ^bb1
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
    %17 = cir.const #cir.int<65> : !s32i loc(#loc98)
    %18 = cir.const #cir.int<50> : !s32i loc(#loc99)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc99)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc99)
    cir.libc.memset %21 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc191)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc103)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %25 = cir.const #cir.int<50> : !s32i loc(#loc105)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc105)
    %28 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc107)
    cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc192)
    cir.br ^bb4 loc(#loc91)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc91)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc193)
  ^bb6:  // pred: ^bb5
    %29 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc185)
    cir.store %29, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc185)
    %30 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc110)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc111)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %33 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc113)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc113)
    %36 = cir.call @strncat(%31, %32, %35) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc110)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc115)
    %39 = cir.const #cir.int<50> : !s32i loc(#loc116)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc116)
    %42 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc118)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc118)
    cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc194)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.br ^bb7 loc(#loc109)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc81)
  } loc(#loc184)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc196)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc197)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc198)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc128)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc128)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc128)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc128)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc128)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc128)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc128)
    cir.store %9, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
    cir.br ^bb1 loc(#loc200)
  ^bb1:  // pred: ^bb0
    %11 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc133)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc201)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
    %15 = cir.const #cir.int<65> : !s32i loc(#loc136)
    %16 = cir.const #cir.int<50> : !s32i loc(#loc137)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc137)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc137)
    cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc202)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc141)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc141)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    %23 = cir.const #cir.int<50> : !s32i loc(#loc143)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc143)
    %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc145)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc203)
    cir.br ^bb3 loc(#loc132)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc132)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc204)
  ^bb5:  // pred: ^bb4
    %27 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc196)
    cir.store %27, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc196)
    %28 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc148)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc149)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    %31 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc151)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
    %33 = cir.call @strlen(%32) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc151)
    %34 = cir.call @strncat(%29, %30, %33) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc148)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc153)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc153)
    %37 = cir.const #cir.int<50> : !s32i loc(#loc154)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc154)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc156)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc156)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc205)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    cir.br ^bb6 loc(#loc147)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc122)
  } loc(#loc195)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":0:0)
#loc1 = loc("/usr/include/string.h":152:1)
#loc2 = loc("/usr/include/string.h":153:29)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":30:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":48:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":42:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":42:25)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":32:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":32:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":33:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":33:33)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":34:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":34:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":35:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":40:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":35:8)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":36:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":38:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":38:22)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":38:27)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":38:31)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":38:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":38:32)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":39:23)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":39:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":39:14)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":39:18)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":39:19)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":41:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":47:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":44:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":44:17)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":44:23)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":44:29)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":44:36)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":45:22)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":45:14)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":45:17)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":45:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":46:19)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":46:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":101:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":105:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":103:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":103:14)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":104:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":104:14)
#loc51 = loc("/usr/include/stdlib.h":575:1)
#loc52 = loc("/usr/include/stdlib.h":575:41)
#loc53 = loc("/usr/include/time.h":76:1)
#loc54 = loc("/usr/include/time.h":76:38)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":122:15)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":124:15)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":127:15)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":129:15)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":117:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":132:1)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":118:1)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":120:27)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":120:22)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":120:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":122:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":123:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":123:73)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":124:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":127:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":128:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":128:72)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":129:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":131:12)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":131:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":63:19)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":55:1)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":78:1)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":72:9)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":72:25)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":57:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":57:12)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":58:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":58:33)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":59:12)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":59:5)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":60:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":70:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":60:8)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":61:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":64:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":66:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":63:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":68:16)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":68:22)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":68:27)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":68:30)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":68:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":68:31)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":69:22)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":69:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":69:14)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":69:17)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":69:18)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":71:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":77:5)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":74:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":74:17)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":74:23)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":74:29)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":74:36)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":75:22)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":75:14)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":75:17)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":75:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":76:19)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":76:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":81:1)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":99:1)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":93:9)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":93:25)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":83:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":83:12)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":84:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":84:33)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":85:12)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":85:5)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":86:5)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":91:5)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":86:8)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":87:5)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":89:16)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":89:22)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":89:27)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":89:30)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":89:9)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":89:31)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":90:22)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":90:9)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":90:14)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":90:17)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":90:18)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":92:5)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":98:5)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":95:9)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":95:17)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":95:23)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":95:29)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":95:36)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":96:22)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":96:14)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":96:17)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":96:9)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":97:19)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_ncat_04.c":97:9)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc7, #loc8])
#loc163 = loc(fused[#loc9, #loc10])
#loc164 = loc(fused[#loc11, #loc12])
#loc165 = loc(fused[#loc13, #loc14])
#loc166 = loc(fused[#loc16, #loc15])
#loc167 = loc(fused[#loc17, #loc18])
#loc168 = loc(fused[#loc20, #loc18])
#loc169 = loc(fused[#loc25, #loc26])
#loc170 = loc(fused[#loc28, #loc27])
#loc171 = loc(fused[#loc32, #loc33])
#loc172 = loc(fused[#loc42, #loc39])
#loc173 = loc(fused[#loc45, #loc46])
#loc174 = loc(fused[#loc47, #loc48])
#loc175 = loc(fused[#loc49, #loc50])
#loc176 = loc(fused[#loc51, #loc52])
#loc177 = loc(fused[#loc53, #loc54])
#loc178 = loc(fused[#loc59, #loc60])
#loc181 = loc(fused[#loc70, #loc71])
#loc182 = loc(fused[#loc74, #loc75])
#loc183 = loc(fused[#loc78, #loc77])
#loc184 = loc(fused[#loc80, #loc81])
#loc185 = loc(fused[#loc82, #loc83])
#loc186 = loc(fused[#loc84, #loc85])
#loc187 = loc(fused[#loc86, #loc87])
#loc188 = loc(fused[#loc89, #loc88])
#loc189 = loc(fused[#loc90, #loc91])
#loc190 = loc(fused[#loc93, #loc94, #loc95, #loc91])
#loc191 = loc(fused[#loc101, #loc102])
#loc192 = loc(fused[#loc104, #loc103])
#loc193 = loc(fused[#loc108, #loc109])
#loc194 = loc(fused[#loc118, #loc115])
#loc195 = loc(fused[#loc121, #loc122])
#loc196 = loc(fused[#loc123, #loc124])
#loc197 = loc(fused[#loc125, #loc126])
#loc198 = loc(fused[#loc127, #loc128])
#loc199 = loc(fused[#loc130, #loc129])
#loc200 = loc(fused[#loc131, #loc132])
#loc201 = loc(fused[#loc134, #loc132])
#loc202 = loc(fused[#loc139, #loc140])
#loc203 = loc(fused[#loc142, #loc141])
#loc204 = loc(fused[#loc146, #loc147])
#loc205 = loc(fused[#loc156, #loc153])
