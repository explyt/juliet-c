!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc16 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":42:67)
#loc17 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":42:74)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":73:71)
#loc70 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":73:78)
#loc82 = loc(fused[#loc16, #loc17])
#loc102 = loc(fused[#loc69, #loc70])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_system_61b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc76)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc77)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc5)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc6)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc78)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc79)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc80)
  cir.func  @CWE78_OS_Command_Injection__char_file_system_61b_badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc16, #loc17])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc82)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc15)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc18)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc84)
      %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc85)
      %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc25)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
      %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc25)
      cir.store %8, %4 : !u64i, !cir.ptr<!u64i> loc(#loc84)
      cir.scope {
        %9 = cir.const #cir.int<100> : !s32i loc(#loc29)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc29)
        %11 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc30)
        %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc87)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc31)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc31)
        %15 = cir.cmp(gt, %12, %14) : !u64i, !s32i loc(#loc88)
        %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc32)
        cir.if %16 {
          %17 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc34)
          %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc5)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc5)
          %20 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc6)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc6)
          %22 = cir.call @fopen(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc34)
          cir.store %22, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc90)
          cir.scope {
            %23 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
            %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc40)
            %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc92)
            %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc41)
            cir.if %27 {
              cir.scope {
                %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
                %31 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc46)
                %32 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %31 : !u64i), !cir.ptr<!s8i> loc(#loc47)
                %33 = cir.const #cir.int<100> : !s32i loc(#loc48)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc48)
                %35 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc49)
                %36 = cir.binop(sub, %34, %35) : !u64i loc(#loc95)
                %37 = cir.cast(integral, %36 : !u64i), !s32i loc(#loc95)
                %38 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc50)
                %39 = cir.call @fgets(%32, %37, %38) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc51)
                %40 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc52)
                %41 = cir.cast(bitcast, %40 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc52)
                %42 = cir.cmp(eq, %39, %41) : !cir.ptr<!s8i>, !s32i loc(#loc96)
                %43 = cir.cast(int_to_bool, %42 : !s32i), !cir.bool loc(#loc53)
                cir.if %43 {
                  %44 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
                  %45 = cir.cast(array_to_ptrdecay, %44 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
                  cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc55)
                  %46 = cir.const #cir.int<0> : !s32i loc(#loc56)
                  %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc56)
                  %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
                  %49 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc58)
                  %50 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %49 : !u64i), !cir.ptr<!s8i> loc(#loc59)
                  cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc98)
                } loc(#loc97)
              } loc(#loc94)
              %28 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc60)
              %29 = cir.call @fclose(%28) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc61)
            } loc(#loc93)
          } loc(#loc91)
        } loc(#loc89)
      } loc(#loc86)
    } loc(#loc83)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc99)
  } loc(#loc81)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc100)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc66)
  cir.func  @CWE78_OS_Command_Injection__char_file_system_61b_goodG2BSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc69, #loc70])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc102)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc68)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc71)
    %2 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc72)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
    %4 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc66)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc66)
    %6 = cir.call @strcat(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc72)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    cir.return %8 : !cir.ptr<!s8i> loc(#loc103)
  } loc(#loc101)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_system_61b.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":264:1)
#loc4 = loc("/usr/include/stdio.h":266:3)
#loc5 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":51:27)
#loc6 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":51:37)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":57:31)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":42:1)
#loc15 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":66:1)
#loc18 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":43:1)
#loc19 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":44:5)
#loc20 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":64:5)
#loc21 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":46:9)
#loc22 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":46:37)
#loc23 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":47:9)
#loc24 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":47:16)
#loc25 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":46:26)
#loc26 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":46:33)
#loc27 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":49:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":63:9)
#loc29 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":49:13)
#loc30 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":49:17)
#loc31 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":49:27)
#loc32 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":49:25)
#loc33 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":50:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":51:21)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":51:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":51:40)
#loc37 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":52:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":62:13)
#loc39 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":52:17)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":52:26)
#loc41 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":52:23)
#loc42 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":53:13)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":55:17)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":60:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":55:27)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":55:32)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":55:31)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":55:47)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":55:51)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":55:61)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":55:21)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":55:71)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":55:68)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":56:17)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":57:21)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":59:37)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":59:21)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":59:26)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":59:33)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":61:24)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":61:17)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":65:12)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":65:5)
#loc64 = loc("/usr/include/string.h":149:1)
#loc65 = loc("/usr/include/string.h":150:14)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":76:18)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":73:1)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":78:1)
#loc71 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":74:1)
#loc72 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":76:5)
#loc73 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":76:12)
#loc74 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":77:12)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_system_61b.c":77:5)
#loc76 = loc(fused[#loc1, #loc2])
#loc77 = loc(fused[#loc3, #loc4])
#loc78 = loc(fused[#loc7, #loc8])
#loc79 = loc(fused[#loc9, #loc10])
#loc80 = loc(fused[#loc12, #loc13])
#loc81 = loc(fused[#loc14, #loc15])
#loc83 = loc(fused[#loc19, #loc20])
#loc84 = loc(fused[#loc21, #loc22])
#loc85 = loc(fused[#loc23, #loc24])
#loc86 = loc(fused[#loc27, #loc28])
#loc87 = loc(fused[#loc29, #loc30])
#loc88 = loc(fused[#loc29, #loc31])
#loc89 = loc(fused[#loc33, #loc28])
#loc90 = loc(fused[#loc35, #loc36])
#loc91 = loc(fused[#loc37, #loc38])
#loc92 = loc(fused[#loc39, #loc40])
#loc93 = loc(fused[#loc42, #loc38])
#loc94 = loc(fused[#loc43, #loc44])
#loc95 = loc(fused[#loc48, #loc49])
#loc96 = loc(fused[#loc51, #loc52])
#loc97 = loc(fused[#loc54, #loc44])
#loc98 = loc(fused[#loc57, #loc56])
#loc99 = loc(fused[#loc63, #loc62])
#loc100 = loc(fused[#loc64, #loc65])
#loc101 = loc(fused[#loc67, #loc68])
#loc103 = loc(fused[#loc75, #loc74])
