!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc31 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":105:10)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":105:14)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":105:20)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":105:32)
#loc105 = loc(fused[#loc31, #loc32])
#loc106 = loc(fused[#loc33, #loc34])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_rename_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rename(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"oldbadfilename.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"newbadfilename.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_rename_08_bad() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc95)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc96)
    %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc9)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc9)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc97)
  ^bb2:  // pred: ^bb1
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc4)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc4)
    %7 = cir.call @rename(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc12)
    cir.br ^bb3 loc(#loc8)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc8)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc6)
  } loc(#loc94)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_rename_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc99)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc15)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc100)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc17)
    cir.return loc(#loc14)
  } loc(#loc98)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc101)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc102)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc25)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc26)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc27)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc28)
  cir.func @main(%arg0: !s32i loc(fused[#loc31, #loc32]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc33, #loc34])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc105)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc106)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc30)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc35)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc35)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc36)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc37)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc37)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc38)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc25)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc25)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    %8 = cir.get_global @CWE252_Unchecked_Return_Value__char_rename_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc107)
    cir.call @CWE252_Unchecked_Return_Value__char_rename_08_good() : () -> () loc(#loc40)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc26)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc26)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc27)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    %13 = cir.get_global @CWE252_Unchecked_Return_Value__char_rename_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc108)
    cir.call @CWE252_Unchecked_Return_Value__char_rename_08_bad() : () -> () loc(#loc44)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc28)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc28)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc47)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc109)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    cir.return %17 : !s32i loc(#loc109)
  } loc(#loc104)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc50)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc51)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc111)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    cir.return %2 : !s32i loc(#loc111)
  } loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"oldgoodfilename.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"newgoodfilename.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.9" = #cir.const_array<"rename failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc56)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc113)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc114)
    %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc61)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc61)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc115)
  ^bb2:  // pred: ^bb1
    %3 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc53)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    cir.br ^bb8 loc(#loc64)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc116)
  ^bb4:  // pred: ^bb3
    %5 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc54)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc54)
    %7 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc55)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc55)
    %9 = cir.call @rename(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc69)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %11 = cir.cmp(ne, %9, %10) : !s32i, !cir.bool loc(#loc117)
    cir.brcond %11 ^bb5, ^bb6 loc(#loc118)
  ^bb5:  // pred: ^bb4
    %12 = cir.get_global @".str.9" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc56)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    cir.br ^bb6 loc(#loc68)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc68)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc60)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc60)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc58)
  } loc(#loc112)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc74)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc75)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    cir.return %2 : !s32i loc(#loc120)
  } loc(#loc119)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc122)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc123)
    %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc81)
    %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc81)
    cir.brcond %2 ^bb2, ^bb7 loc(#loc124)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc125)
  ^bb3:  // pred: ^bb2
    %3 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc86)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc86)
    %5 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc87)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc87)
    %7 = cir.call @rename(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc88)
    %8 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %9 = cir.cmp(ne, %7, %8) : !s32i, !cir.bool loc(#loc126)
    cir.brcond %9 ^bb4, ^bb5 loc(#loc127)
  ^bb4:  // pred: ^bb3
    %10 = cir.get_global @".str.9" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc91)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    cir.br ^bb5 loc(#loc85)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc85)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc80)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc80)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc78)
  } loc(#loc121)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_rename_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":160:1)
#loc2 = loc("/usr/include/stdio.h":160:58)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":51:16)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":51:35)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":46:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":53:1)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":48:5)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":52:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":48:8)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":48:26)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":49:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":51:9)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":90:1)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":94:1)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":92:5)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":92:11)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":93:5)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":93:11)
#loc19 = loc("/usr/include/stdlib.h":575:1)
#loc20 = loc("/usr/include/stdlib.h":575:41)
#loc21 = loc("/usr/include/time.h":76:1)
#loc22 = loc("/usr/include/time.h":76:38)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":110:15)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":112:15)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":115:15)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":117:15)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":105:1)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":120:1)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":106:1)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":108:27)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":108:22)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":108:5)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":110:5)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":111:5)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":111:56)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":112:5)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":115:5)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":116:5)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":116:55)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":117:5)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":119:12)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":119:5)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":34:1)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":37:1)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":36:12)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":36:5)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":65:19)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":70:20)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":70:40)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":72:23)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":60:1)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":75:1)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":62:5)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":74:5)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":62:8)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":62:27)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":63:5)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":66:5)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":68:5)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":65:9)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":70:9)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":73:9)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":70:13)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":70:66)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":71:9)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":72:13)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":39:1)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":42:1)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":41:12)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":41:5)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":78:1)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":88:1)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":80:5)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":87:5)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":80:8)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":80:26)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":81:5)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":83:9)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":86:9)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":83:20)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":83:40)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":83:13)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":83:66)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":84:9)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":85:23)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_rename_08.c":85:13)
#loc93 = loc(fused[#loc1, #loc2])
#loc94 = loc(fused[#loc5, #loc6])
#loc95 = loc(fused[#loc7, #loc8])
#loc96 = loc(fused[#loc9, #loc10])
#loc97 = loc(fused[#loc11, #loc8])
#loc98 = loc(fused[#loc13, #loc14])
#loc99 = loc(fused[#loc15, #loc16])
#loc100 = loc(fused[#loc17, #loc18])
#loc101 = loc(fused[#loc19, #loc20])
#loc102 = loc(fused[#loc21, #loc22])
#loc103 = loc(fused[#loc23, #loc24])
#loc104 = loc(fused[#loc29, #loc30])
#loc107 = loc(fused[#loc40, #loc41])
#loc108 = loc(fused[#loc44, #loc45])
#loc109 = loc(fused[#loc48, #loc47])
#loc110 = loc(fused[#loc49, #loc50])
#loc111 = loc(fused[#loc52, #loc51])
#loc112 = loc(fused[#loc57, #loc58])
#loc113 = loc(fused[#loc59, #loc60])
#loc114 = loc(fused[#loc61, #loc62])
#loc115 = loc(fused[#loc63, #loc64, #loc65, #loc60])
#loc116 = loc(fused[#loc67, #loc68])
#loc117 = loc(fused[#loc69, #loc70])
#loc118 = loc(fused[#loc71, #loc68])
#loc119 = loc(fused[#loc73, #loc74])
#loc120 = loc(fused[#loc76, #loc75])
#loc121 = loc(fused[#loc77, #loc78])
#loc122 = loc(fused[#loc79, #loc80])
#loc123 = loc(fused[#loc81, #loc82])
#loc124 = loc(fused[#loc83, #loc80])
#loc125 = loc(fused[#loc84, #loc85])
#loc126 = loc(fused[#loc88, #loc89])
#loc127 = loc(fused[#loc90, #loc85])
