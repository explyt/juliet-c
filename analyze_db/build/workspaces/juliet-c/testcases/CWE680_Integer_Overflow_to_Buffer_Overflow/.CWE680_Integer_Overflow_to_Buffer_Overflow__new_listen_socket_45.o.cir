!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":116:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc243)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc244)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc245)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc246)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc247)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc248)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc249)
  cir.func private @close(!s32i) -> !s32i loc(#loc250)
  cir.global "private" internal dsolocal @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45L7badDataE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc251)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc252)
  cir.func private @printIntLine(!s32i) loc(#loc253)
  cir.func internal private @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45L7badSinkEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc255)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc256)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc257)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc258)
    %4 = cir.get_global @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45L7badDataE : !cir.ptr<!s32i> loc(#loc251)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    cir.br ^bb1 loc(#loc259)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc34)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc260)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc261)
    cir.store %9, %0 : !u64i, !cir.ptr<!u64i> loc(#loc262)
    %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc39)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc263)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc263)
    cir.store %13, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc264)
    cir.br ^bb2 loc(#loc265)
  ^bb2:  // pred: ^bb1
    %14 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc45)
    cir.store %15, %1 : !u64i, !cir.ptr<!u64i> loc(#loc266)
    cir.br ^bb3 loc(#loc265)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %17 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc48)
    %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc267)
    cir.brcond %19 ^bb4, ^bb8 loc(#loc267)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc268)
  ^bb5:  // pred: ^bb4
    %20 = cir.const #cir.int<0> : !s32i loc(#loc50)
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !u64i), !cir.ptr<!s32i> loc(#loc53)
    cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc269)
    cir.br ^bb6 loc(#loc44)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc44)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc55)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc270)
    cir.br ^bb3 loc(#loc265)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc44)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc56)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc58)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc59)
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc60)
    cir.delete.array %30 : <!s32i> loc(#loc60)
    cir.br ^bb10 loc(#loc33)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc24)
  } loc(#loc254)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_453badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc272)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc273)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc274)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc275)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc276)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc277)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc76)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    cir.br ^bb1 loc(#loc279)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc68)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc70)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    cir.br ^bb2 loc(#loc280)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc280)
  ^bb3:  // pred: ^bb34
    %12 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc82)
    cir.brcond %13 ^bb4, ^bb35 loc(#loc82)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc281)
  ^bb5:  // pred: ^bb4
    %14 = cir.const #cir.int<2> : !s32i loc(#loc85)
    %15 = cir.const #cir.int<1> : !u32i loc(#loc86)
    %16 = cir.cast(integral, %15 : !u32i), !s32i loc(#loc86)
    %17 = cir.const #cir.int<6> : !u32i loc(#loc87)
    %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc87)
    %19 = cir.call @socket(%14, %16, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc88)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    cir.br ^bb6 loc(#loc283)
  ^bb6:  // pred: ^bb5
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc94)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc284)
    cir.brcond %23 ^bb7, ^bb8 loc(#loc285)
  ^bb7:  // pred: ^bb6
    cir.br ^bb35 loc(#loc96)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc92)
  ^bb9:  // pred: ^bb8
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc286)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc287)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc288)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc104)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc104)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc105)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc289)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc107)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc108)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc109)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc290)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc111)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc111)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc112)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc113)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc291)
    cir.br ^bb10 loc(#loc292)
  ^bb10:  // pred: ^bb9
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc293)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc294)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc294)
    %42 = cir.call @bind(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc123)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %44 = cir.unary(minus, %43) nsw : !s32i, !s32i loc(#loc124)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc295)
    cir.brcond %45 ^bb11, ^bb12 loc(#loc296)
  ^bb11:  // pred: ^bb10
    cir.br ^bb35 loc(#loc126)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc117)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc297)
  ^bb14:  // pred: ^bb13
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %47 = cir.const #cir.int<5> : !s32i loc(#loc130)
    %48 = cir.call @listen(%46, %47) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc131)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %50 = cir.unary(minus, %49) nsw : !s32i, !s32i loc(#loc132)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc298)
    cir.brcond %51 ^bb15, ^bb16 loc(#loc299)
  ^bb15:  // pred: ^bb14
    cir.br ^bb35 loc(#loc134)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc128)
  ^bb17:  // pred: ^bb16
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc136)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc137)
    %55 = cir.call @accept(%52, %53, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc138)
    cir.store %55, %3 : !s32i, !cir.ptr<!s32i> loc(#loc300)
    cir.br ^bb18 loc(#loc301)
  ^bb18:  // pred: ^bb17
    %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc144)
    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc302)
    cir.brcond %59 ^bb19, ^bb20 loc(#loc303)
  ^bb19:  // pred: ^bb18
    cir.br ^bb35 loc(#loc146)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc142)
  ^bb21:  // pred: ^bb20
    %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    %61 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc148)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc148)
    %63 = cir.const #cir.int<3> : !s32i loc(#loc149)
    %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc149)
    %65 = cir.const #cir.int<4> : !u64i loc(#loc149)
    %66 = cir.binop(mul, %64, %65) : !u64i loc(#loc149)
    %67 = cir.const #cir.int<2> : !s32i loc(#loc149)
    %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc149)
    %69 = cir.binop(add, %66, %68) : !u64i loc(#loc149)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %71 = cir.cast(integral, %70 : !s32i), !u64i loc(#loc150)
    %72 = cir.binop(sub, %69, %71) : !u64i loc(#loc304)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc151)
    %74 = cir.call @recv(%60, %62, %72, %73) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc152)
    %75 = cir.cast(integral, %74 : !s64i), !s32i loc(#loc152)
    cir.store %75, %0 : !s32i, !cir.ptr<!s32i> loc(#loc305)
    cir.br ^bb22 loc(#loc306)
  ^bb22:  // pred: ^bb21
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc158)
    %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc158)
    %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc307)
    cir.brcond %79 ^bb23, ^bb24 loc(#loc159)
  ^bb23:  // pred: ^bb22
    %80 = cir.const #true loc(#loc159)
    cir.br ^bb29(%80 : !cir.bool) loc(#loc159)
  ^bb24:  // pred: ^bb22
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    %82 = cir.const #cir.int<0> : !s32i loc(#loc161)
    %83 = cir.cmp(eq, %81, %82) : !s32i, !cir.bool loc(#loc308)
    cir.brcond %83 ^bb25, ^bb26 loc(#loc159)
  ^bb25:  // pred: ^bb24
    %84 = cir.const #true loc(#loc159)
    cir.br ^bb27(%84 : !cir.bool) loc(#loc159)
  ^bb26:  // pred: ^bb24
    %85 = cir.const #false loc(#loc159)
    cir.br ^bb27(%85 : !cir.bool) loc(#loc159)
  ^bb27(%86: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":116:44)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc159)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29(%86 : !cir.bool) loc(#loc159)
  ^bb29(%87: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":116:44)):  // 2 preds: ^bb23, ^bb28
    cir.br ^bb30 loc(#loc159)
  ^bb30:  // pred: ^bb29
    cir.brcond %87 ^bb31, ^bb32 loc(#loc309)
  ^bb31:  // pred: ^bb30
    cir.br ^bb35 loc(#loc163)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc156)
  ^bb33:  // pred: ^bb32
    %88 = cir.const #cir.int<0> : !s8i loc(#loc164)
    %89 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc165)
    %90 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc166)
    %91 = cir.ptr_stride(%90 : !cir.ptr<!s8i>, %89 : !s32i), !cir.ptr<!s8i> loc(#loc166)
    cir.store %88, %91 : !s8i, !cir.ptr<!s8i> loc(#loc310)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc167)
    %93 = cir.call @atoi(%92) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc168)
    cir.store %93, %5 : !s32i, !cir.ptr<!s32i> loc(#loc311)
    cir.br ^bb34 loc(#loc84)
  ^bb34:  // pred: ^bb33
    cir.br ^bb3 loc(#loc81)
  ^bb35:  // 6 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19, ^bb31
    cir.br ^bb36 loc(#loc81)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc312)
  ^bb37:  // pred: ^bb36
    %94 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    %95 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %96 = cir.unary(minus, %95) nsw : !s32i, !s32i loc(#loc174)
    %97 = cir.cmp(ne, %94, %96) : !s32i, !cir.bool loc(#loc313)
    cir.brcond %97 ^bb38, ^bb39 loc(#loc314)
  ^bb38:  // pred: ^bb37
    %98 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    %99 = cir.call @close(%98) : (!s32i) -> !s32i loc(#loc177)
    cir.br ^bb39 loc(#loc172)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc172)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc315)
  ^bb41:  // pred: ^bb40
    %100 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc181)
    %102 = cir.unary(minus, %101) nsw : !s32i, !s32i loc(#loc181)
    %103 = cir.cmp(ne, %100, %102) : !s32i, !cir.bool loc(#loc316)
    cir.brcond %103 ^bb42, ^bb43 loc(#loc317)
  ^bb42:  // pred: ^bb41
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    %105 = cir.call @close(%104) : (!s32i) -> !s32i loc(#loc184)
    cir.br ^bb43 loc(#loc179)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc179)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc79)
  ^bb45:  // pred: ^bb44
    %106 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    %107 = cir.get_global @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45L7badDataE : !cir.ptr<!s32i> loc(#loc251)
    cir.store %106, %107 : !s32i, !cir.ptr<!s32i> loc(#loc318)
    cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45L7badSinkEv() : () -> () loc(#loc187)
    cir.return loc(#loc62)
  } loc(#loc271)
  cir.global "private" internal dsolocal @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45L11goodG2BDataE = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc319)
  cir.func internal private @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45L11goodG2BSinkEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc321)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc322)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc323)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc324)
    %4 = cir.get_global @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45L11goodG2BDataE : !cir.ptr<!s32i> loc(#loc319)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    cir.br ^bb1 loc(#loc325)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc201)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc201)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc326)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc327)
    cir.store %9, %0 : !u64i, !cir.ptr<!u64i> loc(#loc328)
    %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc205)
    %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc206)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc329)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc329)
    cir.store %13, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc330)
    cir.br ^bb2 loc(#loc331)
  ^bb2:  // pred: ^bb1
    %14 = cir.const #cir.int<0> : !s32i loc(#loc212)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc212)
    cir.store %15, %1 : !u64i, !cir.ptr<!u64i> loc(#loc332)
    cir.br ^bb3 loc(#loc331)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %16 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc214)
    %17 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc215)
    %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc333)
    cir.brcond %19 ^bb4, ^bb8 loc(#loc333)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc334)
  ^bb5:  // pred: ^bb4
    %20 = cir.const #cir.int<0> : !s32i loc(#loc217)
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc218)
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc219)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %22 : !u64i), !cir.ptr<!s32i> loc(#loc220)
    cir.store %20, %23 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    cir.br ^bb6 loc(#loc211)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc211)
  ^bb7:  // pred: ^bb6
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc221)
    %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc222)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc336)
    cir.br ^bb3 loc(#loc331)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc211)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc223)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc224)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc225)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc223)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc226)
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc227)
    cir.delete.array %30 : <!s32i> loc(#loc227)
    cir.br ^bb10 loc(#loc200)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc191)
  } loc(#loc320)
  cir.func internal private @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc338)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc232)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc233)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc235)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc340)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc237)
    %5 = cir.get_global @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45L11goodG2BDataE : !cir.ptr<!s32i> loc(#loc319)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc341)
    cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45L11goodG2BSinkEv() : () -> () loc(#loc239)
    cir.return loc(#loc229)
  } loc(#loc337)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_454goodEv() extra(#fn_attr1) {
    cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45L7goodG2BEv() : () -> () loc(#loc242)
    cir.return loc(#loc241)
  } loc(#loc342)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":44:1)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":44:12)
#loc19 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc20 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":49:1)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":65:1)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":53:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":53:16)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":53:26)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":54:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":54:14)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":51:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":51:16)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":52:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":64:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":56:21)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":56:28)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":56:38)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":56:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":57:37)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":49:13)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":57:28)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":57:46)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":57:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":58:9)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":61:9)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":58:18)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":58:14)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":58:21)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":58:33)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":59:9)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":60:29)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":60:13)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":60:24)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":60:25)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":58:40)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":58:39)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":62:22)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":62:33)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":62:34)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":62:9)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":63:19)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":67:1)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":143:1)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":77:9)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":77:13)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":78:9)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":78:28)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":79:9)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":79:31)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":80:9)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":80:31)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":81:9)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":81:41)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":69:5)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":69:9)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":71:13)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":71:12)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":71:5)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":72:5)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":140:5)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":82:9)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":125:17)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":125:16)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":83:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":124:9)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":92:35)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":92:44)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":92:57)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":92:28)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":92:13)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":92:68)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":93:13)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":96:13)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":93:17)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":93:33)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":94:13)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":95:17)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":97:20)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":97:21)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":97:30)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":97:33)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":97:47)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":97:13)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":97:48)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":98:34)
#loc105 = loc("/usr/include/netinet/in.h":249:5)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":98:13)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":99:39)
#loc108 = loc("/usr/include/netinet/in.h":251:20)
#loc109 = loc("/usr/include/netinet/in.h":33:15)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":99:13)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":100:38)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":100:32)
#loc113 = loc("/usr/include/netinet/in.h":250:15)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":100:13)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":100:46)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":101:13)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":104:13)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":101:22)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":101:54)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":101:55)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":101:64)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":101:78)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":101:17)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":101:84)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":102:13)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":103:17)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":105:13)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":108:13)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":105:24)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":105:38)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":105:17)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":105:57)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":106:13)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":107:17)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":109:35)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":109:49)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":109:55)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":109:28)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":109:13)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":109:59)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":110:13)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":113:13)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":110:17)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":110:33)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":111:13)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":112:17)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":115:31)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":115:45)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":115:58)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":115:76)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":115:79)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":115:26)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":115:13)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":115:80)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":116:13)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":119:13)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":116:17)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":116:31)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":116:47)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":116:61)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":117:13)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":118:17)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":121:39)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":121:25)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":121:13)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":123:25)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":123:20)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":123:13)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":123:36)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":126:9)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":129:9)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":126:13)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":126:29)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":127:9)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":128:26)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":128:13)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":130:9)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":133:9)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":130:13)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":130:29)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":131:9)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":132:26)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":132:13)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":141:15)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":141:5)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":142:5)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":45:1)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":45:12)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":150:1)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":166:1)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":154:9)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":154:16)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":154:26)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":155:9)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":155:14)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":152:5)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":152:16)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":153:5)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":165:5)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":157:21)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":157:28)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":157:38)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":157:9)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":158:37)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":150:13)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":158:28)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":158:46)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":158:9)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":159:9)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":162:9)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":159:18)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":159:14)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":159:21)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":159:33)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":160:9)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":161:29)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":161:13)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":161:24)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":161:25)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":159:40)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":159:39)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":163:22)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":163:33)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":163:34)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":163:9)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":164:19)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":168:1)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":177:1)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":170:5)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":170:9)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":172:13)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":172:12)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":172:5)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":174:12)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":174:5)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":175:19)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":175:5)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":176:5)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":179:1)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":182:1)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_45.cpp":181:5)
#loc243 = loc(fused[#loc1, #loc2])
#loc244 = loc(fused[#loc3, #loc4])
#loc245 = loc(fused[#loc5, #loc6])
#loc246 = loc(fused[#loc7, #loc8])
#loc247 = loc(fused[#loc9, #loc10])
#loc248 = loc(fused[#loc11, #loc12])
#loc249 = loc(fused[#loc13, #loc14])
#loc250 = loc(fused[#loc15, #loc16])
#loc251 = loc(fused[#loc17, #loc18])
#loc252 = loc(fused[#loc19, #loc20])
#loc253 = loc(fused[#loc21, #loc22])
#loc254 = loc(fused[#loc23, #loc24])
#loc255 = loc(fused[#loc25, #loc26])
#loc256 = loc(fused[#loc25, #loc27])
#loc257 = loc(fused[#loc28, #loc29])
#loc258 = loc(fused[#loc30, #loc31])
#loc259 = loc(fused[#loc32, #loc33])
#loc260 = loc(fused[#loc35, #loc36])
#loc261 = loc(fused[#loc34, #loc36])
#loc262 = loc(fused[#loc37, #loc36])
#loc263 = loc(fused[#loc40, #loc41])
#loc264 = loc(fused[#loc42, #loc41])
#loc265 = loc(fused[#loc43, #loc44])
#loc266 = loc(fused[#loc46, #loc45])
#loc267 = loc(fused[#loc47, #loc48])
#loc268 = loc(fused[#loc49, #loc44])
#loc269 = loc(fused[#loc51, #loc50])
#loc270 = loc(fused[#loc55, #loc54])
#loc271 = loc(fused[#loc61, #loc62])
#loc272 = loc(fused[#loc63, #loc64])
#loc273 = loc(fused[#loc65, #loc66])
#loc274 = loc(fused[#loc67, #loc68])
#loc275 = loc(fused[#loc69, #loc70])
#loc276 = loc(fused[#loc71, #loc72])
#loc277 = loc(fused[#loc73, #loc74])
#loc278 = loc(fused[#loc77, #loc75])
#loc279 = loc(fused[#loc78, #loc79])
#loc280 = loc(fused[#loc80, #loc81])
#loc281 = loc(fused[#loc83, #loc84])
#loc282 = loc(fused[#loc89, #loc90])
#loc283 = loc(fused[#loc91, #loc92])
#loc284 = loc(fused[#loc93, #loc94])
#loc285 = loc(fused[#loc95, #loc92])
#loc286 = loc(fused[#loc97, #loc98])
#loc287 = loc(fused[#loc100, #loc101])
#loc288 = loc(fused[#loc102, #loc103])
#loc289 = loc(fused[#loc106, #loc104])
#loc290 = loc(fused[#loc110, #loc107])
#loc291 = loc(fused[#loc114, #loc115])
#loc292 = loc(fused[#loc116, #loc117])
#loc293 = loc(fused[#loc119, #loc120])
#loc294 = loc(fused[#loc121, #loc122])
#loc295 = loc(fused[#loc123, #loc124])
#loc296 = loc(fused[#loc125, #loc117])
#loc297 = loc(fused[#loc127, #loc128])
#loc298 = loc(fused[#loc131, #loc132])
#loc299 = loc(fused[#loc133, #loc128])
#loc300 = loc(fused[#loc139, #loc140])
#loc301 = loc(fused[#loc141, #loc142])
#loc302 = loc(fused[#loc143, #loc144])
#loc303 = loc(fused[#loc145, #loc142])
#loc304 = loc(fused[#loc149, #loc150])
#loc305 = loc(fused[#loc153, #loc154])
#loc306 = loc(fused[#loc155, #loc156])
#loc307 = loc(fused[#loc157, #loc158])
#loc308 = loc(fused[#loc160, #loc161])
#loc309 = loc(fused[#loc162, #loc156])
#loc310 = loc(fused[#loc166, #loc164])
#loc311 = loc(fused[#loc169, #loc170])
#loc312 = loc(fused[#loc171, #loc172])
#loc313 = loc(fused[#loc173, #loc174])
#loc314 = loc(fused[#loc175, #loc172])
#loc315 = loc(fused[#loc178, #loc179])
#loc316 = loc(fused[#loc180, #loc181])
#loc317 = loc(fused[#loc182, #loc179])
#loc318 = loc(fused[#loc186, #loc185])
#loc319 = loc(fused[#loc188, #loc189])
#loc320 = loc(fused[#loc190, #loc191])
#loc321 = loc(fused[#loc192, #loc193])
#loc322 = loc(fused[#loc192, #loc194])
#loc323 = loc(fused[#loc195, #loc196])
#loc324 = loc(fused[#loc197, #loc198])
#loc325 = loc(fused[#loc199, #loc200])
#loc326 = loc(fused[#loc202, #loc203])
#loc327 = loc(fused[#loc201, #loc203])
#loc328 = loc(fused[#loc204, #loc203])
#loc329 = loc(fused[#loc207, #loc208])
#loc330 = loc(fused[#loc209, #loc208])
#loc331 = loc(fused[#loc210, #loc211])
#loc332 = loc(fused[#loc213, #loc212])
#loc333 = loc(fused[#loc214, #loc215])
#loc334 = loc(fused[#loc216, #loc211])
#loc335 = loc(fused[#loc218, #loc217])
#loc336 = loc(fused[#loc222, #loc221])
#loc337 = loc(fused[#loc228, #loc229])
#loc338 = loc(fused[#loc230, #loc231])
#loc339 = loc(fused[#loc234, #loc232])
#loc340 = loc(fused[#loc236, #loc235])
#loc341 = loc(fused[#loc238, #loc237])
#loc342 = loc(fused[#loc240, #loc241])
