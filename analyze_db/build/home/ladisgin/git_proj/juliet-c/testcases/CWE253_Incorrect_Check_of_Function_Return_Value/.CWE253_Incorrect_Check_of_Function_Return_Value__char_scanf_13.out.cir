!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":105:10)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":105:14)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":105:20)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":105:32)
#loc130 = loc(fused[#loc45, #loc46])
#loc131 = loc(fused[#loc47, #loc48])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc111)
  cir.func private @__isoc99_scanf(!cir.ptr<!s8i>, ...) -> !s32i loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"scanf failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc115)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc116)
    cir.br ^bb1 loc(#loc117)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc111)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc18)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc118)
    cir.brcond %5 ^bb2, ^bb9 loc(#loc119)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc120)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc115)
    cir.store %6, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc115)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    cir.br ^bb4 loc(#loc121)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, ...)>> loc(#loc24)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc5)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc5)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %12 = cir.call @__isoc99_scanf(%10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc24)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc122)
    cir.brcond %14 ^bb5, ^bb6 loc(#loc123)
  ^bb5:  // pred: ^bb4
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc8)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc28)
    cir.br ^bb6 loc(#loc23)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc23)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc21)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc16)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc16)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc10)
  } loc(#loc114)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc125)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc126)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    cir.return loc(#loc30)
  } loc(#loc124)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc127)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc42)
  cir.func @main(%arg0: !s32i loc(fused[#loc45, #loc46]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc47, #loc48])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc130)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc131)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc44)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc49)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc49)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc50)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc51)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc51)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc52)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc39)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %8 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13_good : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13_good() : () -> () loc(#loc54)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc40)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc41)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %13 = cir.get_global @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13_bad() : () -> () loc(#loc58)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc42)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc61)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    cir.return %17 : !s32i loc(#loc134)
  } loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc63)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc136)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc137)
    cir.br ^bb1 loc(#loc138)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc111)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc73)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc139)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc140)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc63)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    cir.br ^bb10 loc(#loc75)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc141)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc136)
    cir.store %8, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc136)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    cir.br ^bb5 loc(#loc142)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, ...)>> loc(#loc82)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc83)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc83)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %14 = cir.call @__isoc99_scanf(%12, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc82)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc85)
    %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc143)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc144)
  ^bb6:  // pred: ^bb5
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc87)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    cir.br ^bb7 loc(#loc81)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc81)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc79)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc71)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc71)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc65)
  } loc(#loc135)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc147)
    cir.br ^bb1 loc(#loc148)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc111)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc98)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc149)
    cir.brcond %5 ^bb2, ^bb9 loc(#loc150)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc151)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc146)
    cir.store %6, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc146)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.br ^bb4 loc(#loc152)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, ...)>> loc(#loc104)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc105)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc105)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %12 = cir.call @__isoc99_scanf(%10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc104)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc107)
    %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc153)
    cir.brcond %15 ^bb5, ^bb6 loc(#loc154)
  ^bb5:  // pred: ^bb4
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc109)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    cir.br ^bb6 loc(#loc103)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc103)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc101)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc96)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc96)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc90)
  } loc(#loc145)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("/usr/include/stdio.h":466:1)
#loc4 = loc("/usr/include/stdio.h":466:12)
#loc5 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":35:23)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":37:27)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":24:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":41:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":31:13)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":31:36)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":32:13)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":32:27)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":26:5)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":40:5)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":26:8)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":26:27)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":27:5)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":28:9)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":39:9)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":35:13)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":38:13)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":35:17)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":35:33)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":35:42)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":36:13)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":37:17)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":90:1)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":94:1)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":92:5)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":92:11)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":93:5)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":93:11)
#loc35 = loc("/usr/include/stdlib.h":575:1)
#loc36 = loc("/usr/include/stdlib.h":575:41)
#loc37 = loc("/usr/include/time.h":76:1)
#loc38 = loc("/usr/include/time.h":76:38)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":110:15)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":112:15)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":115:15)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":117:15)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":105:1)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":120:1)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":106:1)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":108:27)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":108:22)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":108:5)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":110:5)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":111:5)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":111:73)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":112:5)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":115:5)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":116:5)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":116:72)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":117:5)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":119:12)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":119:5)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":53:19)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":48:1)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":69:1)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":60:13)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":60:36)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":61:13)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":61:27)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":50:5)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":68:5)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":50:8)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":50:27)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":51:5)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":54:5)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":56:5)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":53:9)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":57:9)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":67:9)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":63:13)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":66:13)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":63:17)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":63:23)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":63:33)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":63:42)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":64:13)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":65:27)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":65:17)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":72:1)
#loc90 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":88:1)
#loc91 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":79:13)
#loc92 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":79:36)
#loc93 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":80:13)
#loc94 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":80:27)
#loc95 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":74:5)
#loc96 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":87:5)
#loc97 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":74:8)
#loc98 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":74:27)
#loc99 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":75:5)
#loc100 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":76:9)
#loc101 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":86:9)
#loc102 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":82:13)
#loc103 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":85:13)
#loc104 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":82:17)
#loc105 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":82:23)
#loc106 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":82:33)
#loc107 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":82:42)
#loc108 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":83:13)
#loc109 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":84:27)
#loc110 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_13.c":84:17)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc3, #loc4])
#loc113 = loc(fused[#loc6, #loc7])
#loc114 = loc(fused[#loc9, #loc10])
#loc115 = loc(fused[#loc11, #loc12])
#loc116 = loc(fused[#loc13, #loc14])
#loc117 = loc(fused[#loc15, #loc16])
#loc118 = loc(fused[#loc17, #loc18])
#loc119 = loc(fused[#loc19, #loc16])
#loc120 = loc(fused[#loc20, #loc21])
#loc121 = loc(fused[#loc22, #loc23])
#loc122 = loc(fused[#loc24, #loc26])
#loc123 = loc(fused[#loc27, #loc23])
#loc124 = loc(fused[#loc29, #loc30])
#loc125 = loc(fused[#loc31, #loc32])
#loc126 = loc(fused[#loc33, #loc34])
#loc127 = loc(fused[#loc35, #loc36])
#loc128 = loc(fused[#loc37, #loc38])
#loc129 = loc(fused[#loc43, #loc44])
#loc132 = loc(fused[#loc54, #loc55])
#loc133 = loc(fused[#loc58, #loc59])
#loc134 = loc(fused[#loc62, #loc61])
#loc135 = loc(fused[#loc64, #loc65])
#loc136 = loc(fused[#loc66, #loc67])
#loc137 = loc(fused[#loc68, #loc69])
#loc138 = loc(fused[#loc70, #loc71])
#loc139 = loc(fused[#loc72, #loc73])
#loc140 = loc(fused[#loc74, #loc75, #loc76, #loc71])
#loc141 = loc(fused[#loc78, #loc79])
#loc142 = loc(fused[#loc80, #loc81])
#loc143 = loc(fused[#loc82, #loc85])
#loc144 = loc(fused[#loc86, #loc81])
#loc145 = loc(fused[#loc89, #loc90])
#loc146 = loc(fused[#loc91, #loc92])
#loc147 = loc(fused[#loc93, #loc94])
#loc148 = loc(fused[#loc95, #loc96])
#loc149 = loc(fused[#loc97, #loc98])
#loc150 = loc(fused[#loc99, #loc96])
#loc151 = loc(fused[#loc100, #loc101])
#loc152 = loc(fused[#loc102, #loc103])
#loc153 = loc(fused[#loc104, #loc107])
#loc154 = loc(fused[#loc108, #loc103])
