!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc85 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":135:10)
#loc86 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":135:14)
#loc87 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":135:20)
#loc88 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":135:32)
#loc261 = loc(fused[#loc85, #loc86])
#loc262 = loc(fused[#loc87, #loc88])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_declare_memcpy_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc233)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc234)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc235)
  cir.func no_proto @CWE126_Buffer_Overread__char_declare_memcpy_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc237)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc238)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc239)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc15)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc15)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc16)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc17)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc17)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc17)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc240)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc21)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc22)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc22)
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc24)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc24)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc241)
    %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc26)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc27)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc27)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc242)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc31)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc32)
    %29 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc243)
    cir.scope {
      %31 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc233)
      %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc37)
      %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc37)
      cir.if %33 {
        %34 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc39)
        cir.store %34, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc246)
      } loc(#loc245)
    } loc(#loc244)
    cir.scope {
      %31 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc248)
      %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
      %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
      %34 = cir.const #cir.int<67> : !s32i loc(#loc46)
      %35 = cir.const #cir.int<100> : !s32i loc(#loc47)
      %36 = cir.const #cir.int<1> : !s32i loc(#loc48)
      %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc47)
      %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc47)
      cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc249)
      %39 = cir.const #cir.int<0> : !s32i loc(#loc51)
      %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc51)
      %41 = cir.const #cir.int<100> : !s32i loc(#loc52)
      %42 = cir.const #cir.int<1> : !s32i loc(#loc53)
      %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc52)
      %44 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
      %45 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc54)
      cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc250)
      %46 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
      %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc55)
      %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
      %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc56)
      %50 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc57)
      %51 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
      %52 = cir.call @strlen(%51) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc57)
      %53 = cir.const #cir.int<1> : !u64i loc(#loc251)
      %54 = cir.binop(mul, %52, %53) : !u64i loc(#loc252)
      cir.libc.memcpy %54 bytes from %49 to %47 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc253)
      %55 = cir.const #cir.int<0> : !s32i loc(#loc63)
      %56 = cir.cast(integral, %55 : !s32i), !s8i loc(#loc63)
      %57 = cir.const #cir.int<100> : !s32i loc(#loc64)
      %58 = cir.const #cir.int<1> : !s32i loc(#loc65)
      %59 = cir.binop(sub, %57, %58) nsw : !s32i loc(#loc64)
      %60 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
      %61 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %59 : !s32i), !cir.ptr<!s8i> loc(#loc66)
      cir.store %56, %61 : !s8i, !cir.ptr<!s8i> loc(#loc254)
      %62 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
      cir.call @printLine(%62) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    } loc(#loc247)
    cir.return loc(#loc8)
  } loc(#loc236)
  cir.func no_proto @CWE126_Buffer_Overread__char_declare_memcpy_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc256)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc257)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    cir.return loc(#loc70)
  } loc(#loc255)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc258)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc259)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc82)
  cir.func @main(%arg0: !s32i loc(fused[#loc85, #loc86]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc87, #loc88])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc261)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc262)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc84)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc89)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc90)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc91)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc91)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc92)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc79)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %8 = cir.get_global @CWE126_Buffer_Overread__char_declare_memcpy_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc263)
    cir.call @CWE126_Buffer_Overread__char_declare_memcpy_05_good() : () -> () loc(#loc94)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc80)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc81)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %13 = cir.get_global @CWE126_Buffer_Overread__char_declare_memcpy_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc264)
    cir.call @CWE126_Buffer_Overread__char_declare_memcpy_05_bad() : () -> () loc(#loc98)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc82)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc101)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    cir.return %17 : !s32i loc(#loc265)
  } loc(#loc260)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc266)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc105)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc268)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc269)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc270)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc114)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc114)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc115)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc116)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc116)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc116)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc271)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc120)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc121)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc121)
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc123)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc123)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc272)
    %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc124)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc125)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc126)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc127)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc126)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc126)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc273)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc130)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc131)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc131)
    %29 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc133)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc133)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc274)
    cir.scope {
      %31 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc266)
      %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc136)
      %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc136)
      cir.if %33 {
        %34 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc105)
        %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc105)
        cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc140)
      } else {
        %34 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc141)
        cir.store %34, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc277)
      } loc(#loc276)
    } loc(#loc275)
    cir.scope {
      %31 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc279)
      %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc147)
      %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc147)
      %34 = cir.const #cir.int<67> : !s32i loc(#loc148)
      %35 = cir.const #cir.int<100> : !s32i loc(#loc149)
      %36 = cir.const #cir.int<1> : !s32i loc(#loc150)
      %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc149)
      %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc149)
      cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc280)
      %39 = cir.const #cir.int<0> : !s32i loc(#loc153)
      %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc153)
      %41 = cir.const #cir.int<100> : !s32i loc(#loc154)
      %42 = cir.const #cir.int<1> : !s32i loc(#loc155)
      %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc154)
      %44 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc156)
      %45 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc156)
      cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc281)
      %46 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc157)
      %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc157)
      %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
      %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc158)
      %50 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc159)
      %51 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc160)
      %52 = cir.call @strlen(%51) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc159)
      %53 = cir.const #cir.int<1> : !u64i loc(#loc282)
      %54 = cir.binop(mul, %52, %53) : !u64i loc(#loc283)
      cir.libc.memcpy %54 bytes from %49 to %47 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc284)
      %55 = cir.const #cir.int<0> : !s32i loc(#loc165)
      %56 = cir.cast(integral, %55 : !s32i), !s8i loc(#loc165)
      %57 = cir.const #cir.int<100> : !s32i loc(#loc166)
      %58 = cir.const #cir.int<1> : !s32i loc(#loc167)
      %59 = cir.binop(sub, %57, %58) nsw : !s32i loc(#loc166)
      %60 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc168)
      %61 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %59 : !s32i), !cir.ptr<!s8i> loc(#loc168)
      cir.store %56, %61 : !s8i, !cir.ptr<!s8i> loc(#loc285)
      %62 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc169)
      cir.call @printLine(%62) : (!cir.ptr<!s8i>) -> () loc(#loc170)
    } loc(#loc278)
    cir.return loc(#loc107)
  } loc(#loc267)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc287)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc288)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc289)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc179)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc179)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc180)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc181)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc182)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc181)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc181)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc290)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc185)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc185)
    %12 = cir.const #cir.int<50> : !s32i loc(#loc186)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc187)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc186)
    %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc188)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc188)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc291)
    %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc189)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc189)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc190)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc191)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc192)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc191)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc191)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc292)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc195)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc195)
    %26 = cir.const #cir.int<100> : !s32i loc(#loc196)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc196)
    %29 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc198)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc198)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc293)
    cir.scope {
      %31 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc233)
      %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc201)
      %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc201)
      cir.if %33 {
        %34 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc203)
        cir.store %34, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc296)
      } loc(#loc295)
    } loc(#loc294)
    cir.scope {
      %31 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc298)
      %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc209)
      %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc209)
      %34 = cir.const #cir.int<67> : !s32i loc(#loc210)
      %35 = cir.const #cir.int<100> : !s32i loc(#loc211)
      %36 = cir.const #cir.int<1> : !s32i loc(#loc212)
      %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc211)
      %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc211)
      cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc299)
      %39 = cir.const #cir.int<0> : !s32i loc(#loc215)
      %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc215)
      %41 = cir.const #cir.int<100> : !s32i loc(#loc216)
      %42 = cir.const #cir.int<1> : !s32i loc(#loc217)
      %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc216)
      %44 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc218)
      %45 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc218)
      cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc300)
      %46 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc219)
      %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc219)
      %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc220)
      %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc220)
      %50 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc221)
      %51 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc222)
      %52 = cir.call @strlen(%51) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc221)
      %53 = cir.const #cir.int<1> : !u64i loc(#loc301)
      %54 = cir.binop(mul, %52, %53) : !u64i loc(#loc302)
      cir.libc.memcpy %54 bytes from %49 to %47 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc303)
      %55 = cir.const #cir.int<0> : !s32i loc(#loc227)
      %56 = cir.cast(integral, %55 : !s32i), !s8i loc(#loc227)
      %57 = cir.const #cir.int<100> : !s32i loc(#loc228)
      %58 = cir.const #cir.int<1> : !s32i loc(#loc229)
      %59 = cir.binop(sub, %57, %58) nsw : !s32i loc(#loc228)
      %60 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc230)
      %61 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %59 : !s32i), !cir.ptr<!s8i> loc(#loc230)
      cir.store %56, %61 : !s8i, !cir.ptr<!s8i> loc(#loc304)
      %62 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc231)
      cir.call @printLine(%62) : (!cir.ptr<!s8i>) -> () loc(#loc232)
    } loc(#loc297)
    cir.return loc(#loc172)
  } loc(#loc286)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_declare_memcpy_05.c":0:0)
#loc1 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":25:1)
#loc2 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":25:25)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":30:1)
#loc8 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":54:1)
#loc9 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":32:5)
#loc10 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":32:12)
#loc11 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":33:5)
#loc12 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":33:26)
#loc13 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":34:5)
#loc14 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":34:28)
#loc15 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":35:12)
#loc16 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":35:27)
#loc17 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":35:32)
#loc18 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":35:35)
#loc19 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":35:5)
#loc20 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":35:36)
#loc21 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":36:27)
#loc22 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":36:19)
#loc23 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":36:22)
#loc24 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":36:5)
#loc25 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":37:12)
#loc26 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":37:28)
#loc27 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":37:33)
#loc28 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":37:37)
#loc29 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":37:5)
#loc30 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":37:38)
#loc31 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":38:29)
#loc32 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":38:20)
#loc33 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":38:24)
#loc34 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":38:5)
#loc35 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":39:5)
#loc36 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":43:5)
#loc37 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":39:8)
#loc38 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":40:5)
#loc39 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":42:16)
#loc40 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":42:9)
#loc41 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":44:5)
#loc42 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":53:5)
#loc43 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":45:9)
#loc44 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":45:22)
#loc45 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":46:16)
#loc46 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":46:22)
#loc47 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":46:27)
#loc48 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":46:31)
#loc49 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":46:9)
#loc50 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":46:32)
#loc51 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":47:23)
#loc52 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":47:14)
#loc53 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":47:18)
#loc54 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":47:9)
#loc55 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":50:16)
#loc56 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":50:22)
#loc57 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":50:28)
#loc58 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":50:35)
#loc59 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":50:41)
#loc60 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":50:52)
#loc61 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":50:9)
#loc62 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":50:53)
#loc63 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":51:23)
#loc64 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":51:14)
#loc65 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":51:18)
#loc66 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":51:9)
#loc67 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":52:19)
#loc68 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":52:9)
#loc69 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":119:1)
#loc70 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":123:1)
#loc71 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":121:5)
#loc72 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":121:14)
#loc73 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":122:5)
#loc74 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":122:14)
#loc75 = loc("/usr/include/stdlib.h":575:1)
#loc76 = loc("/usr/include/stdlib.h":575:41)
#loc77 = loc("/usr/include/time.h":76:1)
#loc78 = loc("/usr/include/time.h":76:38)
#loc79 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":140:15)
#loc80 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":142:15)
#loc81 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":145:15)
#loc82 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":147:15)
#loc83 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":135:1)
#loc84 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":150:1)
#loc89 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":136:1)
#loc90 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":138:27)
#loc91 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":138:22)
#loc92 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":138:5)
#loc93 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":140:5)
#loc94 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":141:5)
#loc95 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":141:57)
#loc96 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":142:5)
#loc97 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":145:5)
#loc98 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":146:5)
#loc99 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":146:56)
#loc100 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":147:5)
#loc101 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":149:12)
#loc102 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":149:5)
#loc103 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":26:1)
#loc104 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":26:26)
#loc105 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":73:19)
#loc106 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":61:1)
#loc107 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":90:1)
#loc108 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":63:5)
#loc109 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":63:12)
#loc110 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":64:5)
#loc111 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":64:26)
#loc112 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":65:5)
#loc113 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":65:28)
#loc114 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":66:12)
#loc115 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":66:27)
#loc116 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":66:32)
#loc117 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":66:35)
#loc118 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":66:5)
#loc119 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":66:36)
#loc120 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":67:27)
#loc121 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":67:19)
#loc122 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":67:22)
#loc123 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":67:5)
#loc124 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":68:12)
#loc125 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":68:28)
#loc126 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":68:33)
#loc127 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":68:37)
#loc128 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":68:5)
#loc129 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":68:38)
#loc130 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":69:29)
#loc131 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":69:20)
#loc132 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":69:24)
#loc133 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":69:5)
#loc134 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":70:5)
#loc135 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":79:5)
#loc136 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":70:8)
#loc137 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":71:5)
#loc138 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":74:5)
#loc139 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":76:5)
#loc140 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":73:9)
#loc141 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":78:16)
#loc142 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":78:9)
#loc143 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":80:5)
#loc144 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":89:5)
#loc145 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":81:9)
#loc146 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":81:22)
#loc147 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":82:16)
#loc148 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":82:22)
#loc149 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":82:27)
#loc150 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":82:31)
#loc151 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":82:9)
#loc152 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":82:32)
#loc153 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":83:23)
#loc154 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":83:14)
#loc155 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":83:18)
#loc156 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":83:9)
#loc157 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":86:16)
#loc158 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":86:22)
#loc159 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":86:28)
#loc160 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":86:35)
#loc161 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":86:41)
#loc162 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":86:52)
#loc163 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":86:9)
#loc164 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":86:53)
#loc165 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":87:23)
#loc166 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":87:14)
#loc167 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":87:18)
#loc168 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":87:9)
#loc169 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":88:19)
#loc170 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":88:9)
#loc171 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":93:1)
#loc172 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":117:1)
#loc173 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":95:5)
#loc174 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":95:12)
#loc175 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":96:5)
#loc176 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":96:26)
#loc177 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":97:5)
#loc178 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":97:28)
#loc179 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":98:12)
#loc180 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":98:27)
#loc181 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":98:32)
#loc182 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":98:35)
#loc183 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":98:5)
#loc184 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":98:36)
#loc185 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":99:27)
#loc186 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":99:19)
#loc187 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":99:22)
#loc188 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":99:5)
#loc189 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":100:12)
#loc190 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":100:28)
#loc191 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":100:33)
#loc192 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":100:37)
#loc193 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":100:5)
#loc194 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":100:38)
#loc195 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":101:29)
#loc196 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":101:20)
#loc197 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":101:24)
#loc198 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":101:5)
#loc199 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":102:5)
#loc200 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":106:5)
#loc201 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":102:8)
#loc202 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":103:5)
#loc203 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":105:16)
#loc204 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":105:9)
#loc205 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":107:5)
#loc206 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":116:5)
#loc207 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":108:9)
#loc208 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":108:22)
#loc209 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":109:16)
#loc210 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":109:22)
#loc211 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":109:27)
#loc212 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":109:31)
#loc213 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":109:9)
#loc214 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":109:32)
#loc215 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":110:23)
#loc216 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":110:14)
#loc217 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":110:18)
#loc218 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":110:9)
#loc219 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":113:16)
#loc220 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":113:22)
#loc221 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":113:28)
#loc222 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":113:35)
#loc223 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":113:41)
#loc224 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":113:52)
#loc225 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":113:9)
#loc226 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":113:53)
#loc227 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":114:23)
#loc228 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":114:14)
#loc229 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":114:18)
#loc230 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":114:9)
#loc231 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":115:19)
#loc232 = loc("CWE126_Buffer_Overread__char_declare_memcpy_05.c":115:9)
#loc233 = loc(fused[#loc1, #loc2])
#loc234 = loc(fused[#loc3, #loc4])
#loc235 = loc(fused[#loc5, #loc6])
#loc236 = loc(fused[#loc7, #loc8])
#loc237 = loc(fused[#loc9, #loc10])
#loc238 = loc(fused[#loc11, #loc12])
#loc239 = loc(fused[#loc13, #loc14])
#loc240 = loc(fused[#loc19, #loc20])
#loc241 = loc(fused[#loc24, #loc21])
#loc242 = loc(fused[#loc29, #loc30])
#loc243 = loc(fused[#loc34, #loc31])
#loc244 = loc(fused[#loc35, #loc36])
#loc245 = loc(fused[#loc38, #loc36])
#loc246 = loc(fused[#loc40, #loc39])
#loc247 = loc(fused[#loc41, #loc42])
#loc248 = loc(fused[#loc43, #loc44])
#loc249 = loc(fused[#loc49, #loc50])
#loc250 = loc(fused[#loc54, #loc51])
#loc251 = loc(fused[#loc59, #loc60])
#loc252 = loc(fused[#loc57, #loc60])
#loc253 = loc(fused[#loc61, #loc62])
#loc254 = loc(fused[#loc66, #loc63])
#loc255 = loc(fused[#loc69, #loc70])
#loc256 = loc(fused[#loc71, #loc72])
#loc257 = loc(fused[#loc73, #loc74])
#loc258 = loc(fused[#loc75, #loc76])
#loc259 = loc(fused[#loc77, #loc78])
#loc260 = loc(fused[#loc83, #loc84])
#loc263 = loc(fused[#loc94, #loc95])
#loc264 = loc(fused[#loc98, #loc99])
#loc265 = loc(fused[#loc102, #loc101])
#loc266 = loc(fused[#loc103, #loc104])
#loc267 = loc(fused[#loc106, #loc107])
#loc268 = loc(fused[#loc108, #loc109])
#loc269 = loc(fused[#loc110, #loc111])
#loc270 = loc(fused[#loc112, #loc113])
#loc271 = loc(fused[#loc118, #loc119])
#loc272 = loc(fused[#loc123, #loc120])
#loc273 = loc(fused[#loc128, #loc129])
#loc274 = loc(fused[#loc133, #loc130])
#loc275 = loc(fused[#loc134, #loc135])
#loc276 = loc(fused[#loc137, #loc138, #loc139, #loc135])
#loc277 = loc(fused[#loc142, #loc141])
#loc278 = loc(fused[#loc143, #loc144])
#loc279 = loc(fused[#loc145, #loc146])
#loc280 = loc(fused[#loc151, #loc152])
#loc281 = loc(fused[#loc156, #loc153])
#loc282 = loc(fused[#loc161, #loc162])
#loc283 = loc(fused[#loc159, #loc162])
#loc284 = loc(fused[#loc163, #loc164])
#loc285 = loc(fused[#loc168, #loc165])
#loc286 = loc(fused[#loc171, #loc172])
#loc287 = loc(fused[#loc173, #loc174])
#loc288 = loc(fused[#loc175, #loc176])
#loc289 = loc(fused[#loc177, #loc178])
#loc290 = loc(fused[#loc183, #loc184])
#loc291 = loc(fused[#loc188, #loc185])
#loc292 = loc(fused[#loc193, #loc194])
#loc293 = loc(fused[#loc198, #loc195])
#loc294 = loc(fused[#loc199, #loc200])
#loc295 = loc(fused[#loc202, #loc200])
#loc296 = loc(fused[#loc204, #loc203])
#loc297 = loc(fused[#loc205, #loc206])
#loc298 = loc(fused[#loc207, #loc208])
#loc299 = loc(fused[#loc213, #loc214])
#loc300 = loc(fused[#loc218, #loc215])
#loc301 = loc(fused[#loc223, #loc224])
#loc302 = loc(fused[#loc221, #loc224])
#loc303 = loc(fused[#loc225, #loc226])
#loc304 = loc(fused[#loc230, #loc227])
