!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":23:76)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":23:92)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":48:80)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":48:96)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc94 = loc(fused[#loc7, #loc8])
#loc110 = loc(fused[#loc51, #loc52])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc91)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc92)
  cir.func  @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e_badSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc94)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc9)
    cir.scope {
      %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc96)
      cir.scope {
        %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc98)
        cir.scope {
          %17 = cir.const #cir.int<0> : !s32i loc(#loc20)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc20)
          cir.store %18, %16 : !u64i, !cir.ptr<!u64i> loc(#loc100)
          cir.for : cond {
            %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc22)
            %20 = cir.const #cir.int<100> : !s32i loc(#loc23)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc23)
            %22 = cir.cmp(lt, %19, %21) : !u64i, !s32i loc(#loc101)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc24)
            cir.condition(%23) loc(#loc24)
          } body {
            cir.scope {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc26)
              %20 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc27)
              %21 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
              %22 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %20 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
              %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
              cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc103)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc30)
              %25 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc31)
              %26 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!ty__twoIntsStruct>, %25 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
              %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
              cir.store %24, %28 : !s32i, !cir.ptr<!s32i> loc(#loc104)
            } loc(#loc102)
            cir.yield loc(#loc19)
          } step {
            %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc34)
            %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc35)
            cir.store %20, %16 : !u64i, !cir.ptr<!u64i> loc(#loc105)
            cir.yield loc(#loc99)
          } loc(#loc99)
        } loc(#loc99)
      } loc(#loc97)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc36)
      %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc37)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc38)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc38)
      %8 = cir.const #cir.int<8> : !u64i loc(#loc106)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc107)
      cir.libc.memcpy %9 bytes from %5 to %3 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc108)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc44)
      %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
      cir.call @printStructLine(%12) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc46)
      %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc47)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc48)
      cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc47)
    } loc(#loc95)
    cir.return loc(#loc6)
  } loc(#loc93)
  cir.func  @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e_goodG2BSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc51, #loc52])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc110)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc53)
    cir.scope {
      %1 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc112)
      cir.scope {
        %16 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc114)
        cir.scope {
          %17 = cir.const #cir.int<0> : !s32i loc(#loc64)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc64)
          cir.store %18, %16 : !u64i, !cir.ptr<!u64i> loc(#loc116)
          cir.for : cond {
            %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc66)
            %20 = cir.const #cir.int<100> : !s32i loc(#loc67)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc67)
            %22 = cir.cmp(lt, %19, %21) : !u64i, !s32i loc(#loc117)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc68)
            cir.condition(%23) loc(#loc68)
          } body {
            cir.scope {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc70)
              %20 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc71)
              %21 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
              %22 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %20 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
              %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
              cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc119)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc73)
              %25 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc74)
              %26 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!ty__twoIntsStruct>, %25 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
              %28 = cir.get_member %27[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
              cir.store %24, %28 : !s32i, !cir.ptr<!s32i> loc(#loc120)
            } loc(#loc118)
            cir.yield loc(#loc63)
          } step {
            %19 = cir.load %16 : !cir.ptr<!u64i>, !u64i loc(#loc76)
            %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc77)
            cir.store %20, %16 : !u64i, !cir.ptr<!u64i> loc(#loc121)
            cir.yield loc(#loc115)
          } loc(#loc115)
        } loc(#loc115)
      } loc(#loc113)
      %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc78)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc78)
      %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc79)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc79)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc80)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc80)
      %8 = cir.const #cir.int<8> : !u64i loc(#loc122)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc123)
      cir.libc.memcpy %9 bytes from %5 to %3 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc124)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc86)
      %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
      cir.call @printStructLine(%12) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc88)
      %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc89)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc90)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc90)
      cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc89)
    } loc(#loc111)
    cir.return loc(#loc50)
  } loc(#loc109)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":23:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":41:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":24:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":25:5)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":40:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":26:9)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":26:33)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":27:9)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":35:9)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":28:13)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":28:20)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":30:13)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":34:13)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":30:22)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":30:18)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":30:25)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":30:29)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":30:27)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":31:13)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":32:36)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":32:24)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":32:17)
#loc29 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":33:36)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":33:24)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":33:17)
#loc33 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":30:35)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":30:34)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":37:16)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":37:22)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":37:30)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":37:34)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":37:54)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":37:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":37:55)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":38:26)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":38:31)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":38:32)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":38:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":39:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":39:14)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":48:1)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":66:1)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":49:1)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":50:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":65:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":51:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":51:33)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":52:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":60:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":53:13)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":53:20)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":55:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":59:13)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":55:22)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":55:18)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":55:25)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":55:29)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":55:27)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":56:13)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":57:36)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":57:24)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":57:17)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":58:36)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":58:24)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":58:17)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":55:35)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":55:34)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":62:16)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":62:22)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":62:30)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":62:34)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":62:54)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":62:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":62:55)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":63:26)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":63:31)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":63:32)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":63:9)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":64:9)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memcpy_54e.c":64:14)
#loc91 = loc(fused[#loc1, #loc2])
#loc92 = loc(fused[#loc3, #loc4])
#loc93 = loc(fused[#loc5, #loc6])
#loc95 = loc(fused[#loc10, #loc11])
#loc96 = loc(fused[#loc12, #loc13])
#loc97 = loc(fused[#loc14, #loc15])
#loc98 = loc(fused[#loc16, #loc17])
#loc99 = loc(fused[#loc18, #loc19])
#loc100 = loc(fused[#loc21, #loc20])
#loc101 = loc(fused[#loc22, #loc23])
#loc102 = loc(fused[#loc25, #loc19])
#loc103 = loc(fused[#loc28, #loc26])
#loc104 = loc(fused[#loc32, #loc30])
#loc105 = loc(fused[#loc35, #loc34])
#loc106 = loc(fused[#loc39, #loc40])
#loc107 = loc(fused[#loc38, #loc40])
#loc108 = loc(fused[#loc41, #loc42])
#loc109 = loc(fused[#loc49, #loc50])
#loc111 = loc(fused[#loc54, #loc55])
#loc112 = loc(fused[#loc56, #loc57])
#loc113 = loc(fused[#loc58, #loc59])
#loc114 = loc(fused[#loc60, #loc61])
#loc115 = loc(fused[#loc62, #loc63])
#loc116 = loc(fused[#loc65, #loc64])
#loc117 = loc(fused[#loc66, #loc67])
#loc118 = loc(fused[#loc69, #loc63])
#loc119 = loc(fused[#loc72, #loc70])
#loc120 = loc(fused[#loc75, #loc73])
#loc121 = loc(fused[#loc77, #loc76])
#loc122 = loc(fused[#loc81, #loc82])
#loc123 = loc(fused[#loc80, #loc82])
#loc124 = loc(fused[#loc83, #loc84])
