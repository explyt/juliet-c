!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":129:10)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":129:14)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":129:20)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":129:32)
#true = #cir.bool<true> : !cir.bool
#loc226 = loc(fused[#loc150, #loc151])
#loc227 = loc(fused[#loc152, #loc153])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc166)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc167)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc168)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc12)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc171)
  cir.func @_ZN52CWE36_Absolute_Path_Traversal__char_console_fopen_173badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc173)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc174)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc175)
    %3 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc175)
    cir.store %3, %2 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc175)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc23)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc27)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc178)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc179)
        cir.condition(%8) loc(#loc179)
      } body {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc181)
          %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc35)
          %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
          %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc35)
          cir.store %9, %6 : !u64i, !cir.ptr<!u64i> loc(#loc181)
          cir.scope {
            %10 = cir.const #cir.int<4096> : !s32i loc(#loc39)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc39)
            %12 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc40)
            %13 = cir.binop(sub, %11, %12) : !u64i loc(#loc183)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc41)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc41)
            %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc184)
            cir.if %16 {
              cir.scope {
                %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
                %18 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc46)
                %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc47)
                %20 = cir.const #cir.int<4096> : !s32i loc(#loc48)
                %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc48)
                %22 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc49)
                %23 = cir.binop(sub, %21, %22) : !u64i loc(#loc187)
                %24 = cir.cast(integral, %23 : !u64i), !s32i loc(#loc187)
                %25 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc168)
                %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc50)
                %27 = cir.call @fgets(%19, %24, %26) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc51)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc52)
                %29 = cir.cmp(ne, %27, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc188)
                cir.if %29 {
                  %30 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc56)
                  %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
                  %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc56)
                  cir.store %32, %6 : !u64i, !cir.ptr<!u64i> loc(#loc190)
                  cir.scope {
                    %33 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc62)
                    %34 = cir.const #cir.int<0> : !s32i loc(#loc63)
                    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc63)
                    %36 = cir.cmp(gt, %33, %35) : !u64i, !cir.bool loc(#loc192)
                    %37 = cir.ternary(%36, true {
                      %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
                      %39 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc66)
                      %40 = cir.const #cir.int<1> : !s32i loc(#loc67)
                      %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc67)
                      %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc193)
                      %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc68)
                      %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc65)
                      %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc65)
                      %46 = cir.const #cir.int<10> : !s8i loc(#loc69)
                      %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc69)
                      %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc194)
                      %49 = cir.ternary(%48, true {
                        %50 = cir.const #true loc(#loc64)
                        cir.yield %50 : !cir.bool loc(#loc64)
                      }, false {
                        %50 = cir.const #false loc(#loc64)
                        cir.yield %50 : !cir.bool loc(#loc64)
                      }) : (!cir.bool) -> !cir.bool loc(#loc64)
                      cir.yield %49 : !cir.bool loc(#loc64)
                    }, false {
                      %38 = cir.const #false loc(#loc64)
                      cir.yield %38 : !cir.bool loc(#loc64)
                    }) : (!cir.bool) -> !cir.bool loc(#loc64)
                    cir.if %37 {
                      %38 = cir.const #cir.int<0> : !s8i loc(#loc71)
                      %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
                      %40 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc73)
                      %41 = cir.const #cir.int<1> : !s32i loc(#loc74)
                      %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc74)
                      %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc196)
                      %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc75)
                      cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc197)
                    } loc(#loc195)
                  } loc(#loc191)
                } else {
                  %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
                  %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
                  cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc76)
                  %32 = cir.const #cir.int<0> : !s8i loc(#loc77)
                  %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
                  %34 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc79)
                  %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc80)
                  cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc198)
                } loc(#loc189)
              } loc(#loc186)
            } loc(#loc185)
          } loc(#loc182)
        } loc(#loc180)
        cir.yield loc(#loc26)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc81)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc82)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc199)
        cir.yield loc(#loc177)
      } loc(#loc177)
    } loc(#loc177)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc201)
      %6 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc86)
      cir.store %6, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc201)
      %7 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc87)
      %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
      %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc12)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc12)
      %11 = cir.call @fopen(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc87)
      cir.store %11, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc202)
      cir.scope {
        %12 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc93)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc94)
        %14 = cir.cmp(ne, %12, %13) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc204)
        cir.if %14 {
          %15 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc96)
          %16 = cir.call @fclose(%15) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc97)
        } loc(#loc205)
      } loc(#loc203)
    } loc(#loc200)
    cir.return loc(#loc16)
  } loc(#loc172)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc206)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc100)
  cir.func internal private @_ZN52CWE36_Absolute_Path_Traversal__char_console_fopen_17L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc208)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc209)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc210)
    %3 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc210)
    cir.store %3, %2 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc210)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc109)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc113)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc213)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc115)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc116)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc214)
        cir.condition(%8) loc(#loc214)
      } body {
        %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc117)
        %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
        %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc100)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc100)
        %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc117)
        cir.yield loc(#loc112)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc120)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc215)
        cir.yield loc(#loc212)
      } loc(#loc212)
    } loc(#loc212)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc217)
      %6 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc124)
      cir.store %6, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc217)
      %7 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc125)
      %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
      %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc127)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc127)
      %11 = cir.call @fopen(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc125)
      cir.store %11, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc218)
      cir.scope {
        %12 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc132)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc133)
        %14 = cir.cmp(ne, %12, %13) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc220)
        cir.if %14 {
          %15 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc135)
          %16 = cir.call @fclose(%15) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc136)
        } loc(#loc221)
      } loc(#loc219)
    } loc(#loc216)
    cir.return loc(#loc102)
  } loc(#loc207)
  cir.func @_ZN52CWE36_Absolute_Path_Traversal__char_console_fopen_174goodEv() extra(#fn_attr1) {
    cir.call @_ZN52CWE36_Absolute_Path_Traversal__char_console_fopen_17L7goodG2BEv() : () -> () loc(#loc139)
    cir.return loc(#loc138)
  } loc(#loc222)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc223)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc224)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc147)
  cir.func @main(%arg0: !s32i loc(fused[#loc150, #loc151]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc152, #loc153])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc226)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc227)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc149)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc154)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc155)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc156)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc156)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc157)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc144)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    cir.call @_ZN52CWE36_Absolute_Path_Traversal__char_console_fopen_174goodEv() : () -> () loc(#loc159)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc145)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc145)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc160)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc146)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc146)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc161)
    cir.call @_ZN52CWE36_Absolute_Path_Traversal__char_console_fopen_173badEv() : () -> () loc(#loc162)
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc147)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc163)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc164)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc228)
    cir.return %15 : !s32i loc(#loc228)
  } loc(#loc225)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":61:31)
#loc10 = loc("/usr/include/stdio.h":264:1)
#loc11 = loc("/usr/include/stdio.h":266:3)
#loc12 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":71:29)
#loc13 = loc("/usr/include/stdio.h":184:1)
#loc14 = loc("/usr/include/stdio.h":184:36)
#loc15 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":34:1)
#loc16 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":77:1)
#loc17 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":36:5)
#loc18 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":36:9)
#loc19 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":37:5)
#loc20 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":37:12)
#loc21 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":38:5)
#loc22 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":38:37)
#loc23 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":39:12)
#loc24 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":39:5)
#loc25 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":40:5)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":67:5)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":40:13)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":40:9)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":40:16)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":40:20)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":42:9)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":66:9)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":44:13)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":44:41)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":44:30)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":44:37)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":46:13)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":65:13)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":46:17)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":46:30)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":46:40)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":47:13)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":49:17)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":64:17)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":49:27)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":49:32)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":49:31)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":49:47)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":49:60)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":49:70)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":49:21)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":49:80)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":50:17)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":58:17)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":60:17)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":53:31)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":53:38)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":53:21)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":53:42)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":54:21)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":57:21)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":54:25)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":54:35)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":54:37)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":54:40)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":54:45)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":54:53)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":54:54)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":54:59)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":55:21)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":56:43)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":56:25)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":56:30)
#loc74 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":56:38)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":56:39)
#loc76 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":61:21)
#loc77 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":63:37)
#loc78 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":63:21)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":63:26)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":63:33)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":40:24)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":40:23)
#loc83 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":68:5)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":76:5)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":69:9)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":69:23)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":71:17)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":71:23)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":71:9)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":71:34)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":72:9)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":75:9)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":72:13)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":72:22)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":73:9)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":74:20)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":74:13)
#loc98 = loc("/usr/include/string.h":149:1)
#loc99 = loc("/usr/include/string.h":150:14)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":97:22)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":84:1)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":109:1)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":86:5)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":86:9)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":87:5)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":87:12)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":88:5)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":88:37)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":89:12)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":89:5)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":90:5)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":99:5)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":90:13)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":90:9)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":90:16)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":90:20)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":97:9)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":97:16)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":90:24)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":90:23)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":100:5)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":108:5)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":101:9)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":101:23)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":103:17)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":103:23)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":103:29)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":103:9)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":103:34)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":104:9)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":107:9)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":104:13)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":104:22)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":105:9)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":106:20)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":106:13)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":111:1)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":114:1)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":113:5)
#loc140 = loc("/usr/include/stdlib.h":575:1)
#loc141 = loc("/usr/include/stdlib.h":575:41)
#loc142 = loc("/usr/include/time.h":76:1)
#loc143 = loc("/usr/include/time.h":76:38)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":134:15)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":136:15)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":139:15)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":141:15)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":129:1)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":144:1)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":130:1)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":132:27)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":132:22)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":132:5)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":134:5)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":135:5)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":136:5)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":139:5)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":140:5)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":141:5)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":143:12)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_console_fopen_17.cpp":143:5)
#loc166 = loc(fused[#loc1, #loc2])
#loc167 = loc(fused[#loc3, #loc4])
#loc168 = loc(fused[#loc5, #loc6])
#loc169 = loc(fused[#loc7, #loc8])
#loc170 = loc(fused[#loc10, #loc11])
#loc171 = loc(fused[#loc13, #loc14])
#loc172 = loc(fused[#loc15, #loc16])
#loc173 = loc(fused[#loc17, #loc18])
#loc174 = loc(fused[#loc19, #loc20])
#loc175 = loc(fused[#loc21, #loc22])
#loc176 = loc(fused[#loc24, #loc23])
#loc177 = loc(fused[#loc25, #loc26])
#loc178 = loc(fused[#loc28, #loc27])
#loc179 = loc(fused[#loc29, #loc30])
#loc180 = loc(fused[#loc31, #loc32])
#loc181 = loc(fused[#loc33, #loc34])
#loc182 = loc(fused[#loc37, #loc38])
#loc183 = loc(fused[#loc39, #loc40])
#loc184 = loc(fused[#loc39, #loc41])
#loc185 = loc(fused[#loc42, #loc38])
#loc186 = loc(fused[#loc43, #loc44])
#loc187 = loc(fused[#loc48, #loc49])
#loc188 = loc(fused[#loc51, #loc52])
#loc189 = loc(fused[#loc53, #loc54, #loc55, #loc44])
#loc190 = loc(fused[#loc58, #loc59])
#loc191 = loc(fused[#loc60, #loc61])
#loc192 = loc(fused[#loc62, #loc63])
#loc193 = loc(fused[#loc66, #loc67])
#loc194 = loc(fused[#loc65, #loc69])
#loc195 = loc(fused[#loc70, #loc61])
#loc196 = loc(fused[#loc73, #loc74])
#loc197 = loc(fused[#loc72, #loc71])
#loc198 = loc(fused[#loc78, #loc77])
#loc199 = loc(fused[#loc82, #loc81])
#loc200 = loc(fused[#loc83, #loc84])
#loc201 = loc(fused[#loc85, #loc86])
#loc202 = loc(fused[#loc89, #loc90])
#loc203 = loc(fused[#loc91, #loc92])
#loc204 = loc(fused[#loc93, #loc94])
#loc205 = loc(fused[#loc95, #loc92])
#loc206 = loc(fused[#loc98, #loc99])
#loc207 = loc(fused[#loc101, #loc102])
#loc208 = loc(fused[#loc103, #loc104])
#loc209 = loc(fused[#loc105, #loc106])
#loc210 = loc(fused[#loc107, #loc108])
#loc211 = loc(fused[#loc110, #loc109])
#loc212 = loc(fused[#loc111, #loc112])
#loc213 = loc(fused[#loc114, #loc113])
#loc214 = loc(fused[#loc115, #loc116])
#loc215 = loc(fused[#loc120, #loc119])
#loc216 = loc(fused[#loc121, #loc122])
#loc217 = loc(fused[#loc123, #loc124])
#loc218 = loc(fused[#loc128, #loc129])
#loc219 = loc(fused[#loc130, #loc131])
#loc220 = loc(fused[#loc132, #loc133])
#loc221 = loc(fused[#loc134, #loc131])
#loc222 = loc(fused[#loc137, #loc138])
#loc223 = loc(fused[#loc140, #loc141])
#loc224 = loc(fused[#loc142, #loc143])
#loc225 = loc(fused[#loc148, #loc149])
#loc228 = loc(fused[#loc165, #loc164])
