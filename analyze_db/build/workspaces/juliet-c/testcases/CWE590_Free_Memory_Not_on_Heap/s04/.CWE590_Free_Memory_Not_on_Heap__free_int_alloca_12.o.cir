!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc190)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc191)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc192)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc7)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc193)
  cir.func private @printIntLine(!s32i) loc(#loc194)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc195)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc197)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc198)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc199)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc200)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc201)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc26)
    cir.store %5, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc202)
    cir.br ^bb1 loc(#loc203)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc204)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc204)
    %8 = cir.call %7() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc30)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc30)
    cir.brcond %9 ^bb2, ^bb15 loc(#loc205)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc206)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc17)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc17)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc17)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc17)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc17)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc17)
    cir.store %16, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc197)
    cir.br ^bb4 loc(#loc207)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc208)
  ^bb5:  // pred: ^bb4
    %17 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc41)
    cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc209)
    cir.br ^bb6 loc(#loc208)
  ^bb6:  // 2 preds: ^bb5, ^bb10
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc44)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc44)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc210)
    cir.brcond %22 ^bb7, ^bb11 loc(#loc45)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc211)
  ^bb8:  // pred: ^bb7
    %23 = cir.const #cir.int<5> : !s32i loc(#loc47)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc50)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    cir.br ^bb9 loc(#loc40)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc40)
  ^bb10:  // pred: ^bb9
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc52)
    cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc213)
    cir.br ^bb6 loc(#loc208)
  ^bb11:  // pred: ^bb6
    cir.br ^bb12 loc(#loc40)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc38)
  ^bb13:  // pred: ^bb12
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
    cir.store %29, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc214)
    cir.br ^bb14 loc(#loc36)
  ^bb14:  // pred: ^bb13
    cir.br ^bb32 loc(#loc33)
  ^bb15:  // pred: ^bb1
    cir.br ^bb16 loc(#loc215)
  ^bb16:  // pred: ^bb15
    %30 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc57)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc58)
    %33 = cir.const #cir.int<4> : !u64i loc(#loc216)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc217)
    %35 = cir.call @malloc(%34) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc57)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc218)
    cir.store %36, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc199)
    cir.br ^bb17 loc(#loc219)
  ^bb17:  // pred: ^bb16
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
    %38 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc64)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc64)
    %40 = cir.cmp(eq, %37, %39) : !cir.ptr<!s32i>, !cir.bool loc(#loc220)
    cir.brcond %40 ^bb18, ^bb19 loc(#loc221)
  ^bb18:  // pred: ^bb17
    %41 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc7)
    %42 = cir.cast(array_to_ptrdecay, %41 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %43 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc67)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc68)
    cir.call @exit(%44) : (!s32i) -> () extra(#fn_attr) loc(#loc67)
    cir.br ^bb19 loc(#loc62)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc62)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc222)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc223)
  ^bb22:  // pred: ^bb21
    %45 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc73)
    cir.store %46, %3 : !u64i, !cir.ptr<!u64i> loc(#loc224)
    cir.br ^bb23 loc(#loc223)
  ^bb23:  // 2 preds: ^bb22, ^bb27
    %47 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc75)
    %48 = cir.const #cir.int<100> : !s32i loc(#loc76)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc76)
    %50 = cir.cmp(lt, %47, %49) : !u64i, !cir.bool loc(#loc225)
    cir.brcond %50 ^bb24, ^bb28 loc(#loc77)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc226)
  ^bb25:  // pred: ^bb24
    %51 = cir.const #cir.int<5> : !s32i loc(#loc79)
    %52 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc80)
    %53 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc81)
    %54 = cir.ptr_stride(%52 : !cir.ptr<!s32i>, %53 : !u64i), !cir.ptr<!s32i> loc(#loc82)
    cir.store %51, %54 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    cir.br ^bb26 loc(#loc72)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc72)
  ^bb27:  // pred: ^bb26
    %55 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc83)
    %56 = cir.unary(inc, %55) : !u64i, !u64i loc(#loc84)
    cir.store %56, %3 : !u64i, !cir.ptr<!u64i> loc(#loc228)
    cir.br ^bb23 loc(#loc223)
  ^bb28:  // pred: ^bb23
    cir.br ^bb29 loc(#loc72)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc70)
  ^bb30:  // pred: ^bb29
    %57 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
    cir.store %57, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc229)
    cir.br ^bb31 loc(#loc56)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc29)
  ^bb32:  // 2 preds: ^bb14, ^bb31
    cir.br ^bb33 loc(#loc29)
  ^bb33:  // pred: ^bb32
    %58 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc87)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %60 = cir.ptr_stride(%58 : !cir.ptr<!s32i>, %59 : !s32i), !cir.ptr<!s32i> loc(#loc89)
    %61 = cir.load %60 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    cir.call @printIntLine(%61) : (!s32i) -> () loc(#loc90)
    %62 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc91)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc91)
    cir.call @free(%63) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc92)
    cir.return loc(#loc15)
  } loc(#loc196)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc231)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc95)
    cir.return loc(#loc94)
  } loc(#loc230)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc233)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc234)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc235)
    %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc236)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc237)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc109)
    cir.store %5, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc238)
    cir.br ^bb1 loc(#loc239)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc240)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc240)
    %8 = cir.call %7() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc113)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc113)
    cir.brcond %9 ^bb2, ^bb19 loc(#loc241)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc242)
  ^bb3:  // pred: ^bb2
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc120)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc121)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc121)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc243)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc244)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc120)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc245)
    cir.store %16, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc233)
    cir.br ^bb4 loc(#loc246)
  ^bb4:  // pred: ^bb3
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc126)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc127)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc127)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc247)
    cir.brcond %20 ^bb5, ^bb6 loc(#loc248)
  ^bb5:  // pred: ^bb4
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc129)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc131)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc132)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc131)
    cir.br ^bb6 loc(#loc125)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc125)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc249)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc250)
  ^bb9:  // pred: ^bb8
    %25 = cir.const #cir.int<0> : !s32i loc(#loc137)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc137)
    cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc251)
    cir.br ^bb10 loc(#loc250)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc139)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc140)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc140)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc252)
    cir.brcond %30 ^bb11, ^bb15 loc(#loc141)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc253)
  ^bb12:  // pred: ^bb11
    %31 = cir.const #cir.int<5> : !s32i loc(#loc143)
    %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc144)
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc145)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !u64i), !cir.ptr<!s32i> loc(#loc146)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    cir.br ^bb13 loc(#loc136)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc136)
  ^bb14:  // pred: ^bb13
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc147)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc148)
    cir.store %36, %1 : !u64i, !cir.ptr<!u64i> loc(#loc255)
    cir.br ^bb10 loc(#loc250)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc136)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc134)
  ^bb17:  // pred: ^bb16
    %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc149)
    cir.store %37, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc256)
    cir.br ^bb18 loc(#loc119)
  ^bb18:  // pred: ^bb17
    cir.br ^bb36 loc(#loc116)
  ^bb19:  // pred: ^bb1
    cir.br ^bb20 loc(#loc257)
  ^bb20:  // pred: ^bb19
    %38 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc153)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc154)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc154)
    %41 = cir.const #cir.int<4> : !u64i loc(#loc258)
    %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc259)
    %43 = cir.call @malloc(%42) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc153)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc260)
    cir.store %44, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc235)
    cir.br ^bb21 loc(#loc261)
  ^bb21:  // pred: ^bb20
    %45 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc159)
    %46 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc160)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc160)
    %48 = cir.cmp(eq, %45, %47) : !cir.ptr<!s32i>, !cir.bool loc(#loc262)
    cir.brcond %48 ^bb22, ^bb23 loc(#loc263)
  ^bb22:  // pred: ^bb21
    %49 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc162)
    %50 = cir.cast(array_to_ptrdecay, %49 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc162)
    cir.call @printLine(%50) : (!cir.ptr<!s8i>) -> () loc(#loc163)
    %51 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc164)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc165)
    cir.call @exit(%52) : (!s32i) -> () extra(#fn_attr) loc(#loc164)
    cir.br ^bb23 loc(#loc158)
  ^bb23:  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc158)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc264)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc265)
  ^bb26:  // pred: ^bb25
    %53 = cir.const #cir.int<0> : !s32i loc(#loc170)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc170)
    cir.store %54, %3 : !u64i, !cir.ptr<!u64i> loc(#loc266)
    cir.br ^bb27 loc(#loc265)
  ^bb27:  // 2 preds: ^bb26, ^bb31
    %55 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc172)
    %56 = cir.const #cir.int<100> : !s32i loc(#loc173)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc173)
    %58 = cir.cmp(lt, %55, %57) : !u64i, !cir.bool loc(#loc267)
    cir.brcond %58 ^bb28, ^bb32 loc(#loc174)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc268)
  ^bb29:  // pred: ^bb28
    %59 = cir.const #cir.int<5> : !s32i loc(#loc176)
    %60 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc177)
    %61 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc178)
    %62 = cir.ptr_stride(%60 : !cir.ptr<!s32i>, %61 : !u64i), !cir.ptr<!s32i> loc(#loc179)
    cir.store %59, %62 : !s32i, !cir.ptr<!s32i> loc(#loc269)
    cir.br ^bb30 loc(#loc169)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc169)
  ^bb31:  // pred: ^bb30
    %63 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc180)
    %64 = cir.unary(inc, %63) : !u64i, !u64i loc(#loc181)
    cir.store %64, %3 : !u64i, !cir.ptr<!u64i> loc(#loc270)
    cir.br ^bb27 loc(#loc265)
  ^bb32:  // pred: ^bb27
    cir.br ^bb33 loc(#loc169)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc167)
  ^bb34:  // pred: ^bb33
    %65 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc182)
    cir.store %65, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc271)
    cir.br ^bb35 loc(#loc152)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc112)
  ^bb36:  // 2 preds: ^bb18, ^bb35
    cir.br ^bb37 loc(#loc112)
  ^bb37:  // pred: ^bb36
    %66 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc184)
    %67 = cir.const #cir.int<0> : !s32i loc(#loc185)
    %68 = cir.ptr_stride(%66 : !cir.ptr<!s32i>, %67 : !s32i), !cir.ptr<!s32i> loc(#loc186)
    %69 = cir.load %68 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    cir.call @printIntLine(%69) : (!s32i) -> () loc(#loc187)
    %70 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc188)
    %71 = cir.cast(bitcast, %70 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc188)
    cir.call @free(%71) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc189)
    cir.return loc(#loc98)
  } loc(#loc232)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":49:27)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":23:1)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":65:1)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":31:13)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":31:39)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":33:17)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":33:24)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":46:13)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":46:61)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":53:17)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":53:24)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":25:5)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":25:11)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":26:12)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":26:5)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":27:5)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":61:5)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":27:8)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":27:33)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":28:5)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":41:5)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":43:5)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":29:9)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":40:9)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":32:13)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":38:13)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":34:17)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":37:17)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":34:26)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":34:22)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":34:29)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":34:33)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":34:31)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":35:17)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":36:37)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":36:21)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":36:32)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":36:33)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":34:39)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":34:38)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":39:20)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":39:13)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":44:9)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":60:9)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":46:39)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":46:46)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":46:50)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":46:60)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":47:13)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":51:13)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":47:17)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":47:31)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":48:13)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":49:17)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":50:17)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":50:22)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":52:13)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":58:13)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":54:17)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":57:17)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":54:26)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":54:22)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":54:29)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":54:33)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":54:31)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":55:17)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":56:37)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":56:21)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":56:32)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":56:33)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":54:39)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":54:38)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":59:20)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":59:13)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":62:18)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":62:23)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":62:24)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":62:5)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":64:10)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":64:5)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":122:1)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":125:1)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":124:5)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":124:13)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":73:1)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":120:1)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":81:13)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":81:61)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":88:17)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":88:24)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":101:13)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":101:61)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":108:17)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":108:24)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":75:5)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":75:11)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":76:12)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":76:5)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":77:5)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":116:5)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":77:8)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":77:33)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":78:5)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":96:5)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":98:5)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":79:9)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":95:9)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":81:39)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":81:46)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":81:50)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":81:60)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":82:13)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":86:13)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":82:17)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":82:31)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":83:13)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":84:27)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":84:17)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":85:17)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":85:22)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":87:13)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":93:13)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":89:17)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":92:17)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":89:26)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":89:22)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":89:29)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":89:33)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":89:31)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":90:17)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":91:37)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":91:21)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":91:32)
#loc146 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":91:33)
#loc147 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":89:39)
#loc148 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":89:38)
#loc149 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":94:20)
#loc150 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":94:13)
#loc151 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":99:9)
#loc152 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":115:9)
#loc153 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":101:39)
#loc154 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":101:46)
#loc155 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":101:50)
#loc156 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":101:60)
#loc157 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":102:13)
#loc158 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":106:13)
#loc159 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":102:17)
#loc160 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":102:31)
#loc161 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":103:13)
#loc162 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":104:27)
#loc163 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":104:17)
#loc164 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":105:17)
#loc165 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":105:22)
#loc166 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":107:13)
#loc167 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":113:13)
#loc168 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":109:17)
#loc169 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":112:17)
#loc170 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":109:26)
#loc171 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":109:22)
#loc172 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":109:29)
#loc173 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":109:33)
#loc174 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":109:31)
#loc175 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":110:17)
#loc176 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":111:37)
#loc177 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":111:21)
#loc178 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":111:32)
#loc179 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":111:33)
#loc180 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":109:39)
#loc181 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":109:38)
#loc182 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":114:20)
#loc183 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":114:13)
#loc184 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":117:18)
#loc185 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":117:23)
#loc186 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":117:24)
#loc187 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":117:5)
#loc188 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":119:10)
#loc189 = loc("CWE590_Free_Memory_Not_on_Heap__free_int_alloca_12.c":119:5)
#loc190 = loc(fused[#loc1, #loc2])
#loc191 = loc(fused[#loc3, #loc4])
#loc192 = loc(fused[#loc5, #loc6])
#loc193 = loc(fused[#loc8, #loc9])
#loc194 = loc(fused[#loc10, #loc11])
#loc195 = loc(fused[#loc12, #loc13])
#loc196 = loc(fused[#loc14, #loc15])
#loc197 = loc(fused[#loc16, #loc17])
#loc198 = loc(fused[#loc18, #loc19])
#loc199 = loc(fused[#loc20, #loc21])
#loc200 = loc(fused[#loc22, #loc23])
#loc201 = loc(fused[#loc24, #loc25])
#loc202 = loc(fused[#loc27, #loc26])
#loc203 = loc(fused[#loc28, #loc29])
#loc204 = loc(fused[#loc30, #loc31])
#loc205 = loc(fused[#loc32, #loc33, #loc34, #loc29])
#loc206 = loc(fused[#loc35, #loc36])
#loc207 = loc(fused[#loc37, #loc38])
#loc208 = loc(fused[#loc39, #loc40])
#loc209 = loc(fused[#loc42, #loc41])
#loc210 = loc(fused[#loc43, #loc44])
#loc211 = loc(fused[#loc46, #loc40])
#loc212 = loc(fused[#loc48, #loc47])
#loc213 = loc(fused[#loc52, #loc51])
#loc214 = loc(fused[#loc54, #loc53])
#loc215 = loc(fused[#loc55, #loc56])
#loc216 = loc(fused[#loc59, #loc60])
#loc217 = loc(fused[#loc58, #loc60])
#loc218 = loc(fused[#loc57, #loc21])
#loc219 = loc(fused[#loc61, #loc62])
#loc220 = loc(fused[#loc63, #loc64])
#loc221 = loc(fused[#loc65, #loc62])
#loc222 = loc(fused[#loc69, #loc70])
#loc223 = loc(fused[#loc71, #loc72])
#loc224 = loc(fused[#loc74, #loc73])
#loc225 = loc(fused[#loc75, #loc76])
#loc226 = loc(fused[#loc78, #loc72])
#loc227 = loc(fused[#loc80, #loc79])
#loc228 = loc(fused[#loc84, #loc83])
#loc229 = loc(fused[#loc86, #loc85])
#loc230 = loc(fused[#loc93, #loc94])
#loc231 = loc(fused[#loc95, #loc96])
#loc232 = loc(fused[#loc97, #loc98])
#loc233 = loc(fused[#loc99, #loc100])
#loc234 = loc(fused[#loc101, #loc102])
#loc235 = loc(fused[#loc103, #loc104])
#loc236 = loc(fused[#loc105, #loc106])
#loc237 = loc(fused[#loc107, #loc108])
#loc238 = loc(fused[#loc110, #loc109])
#loc239 = loc(fused[#loc111, #loc112])
#loc240 = loc(fused[#loc113, #loc114])
#loc241 = loc(fused[#loc115, #loc116, #loc117, #loc112])
#loc242 = loc(fused[#loc118, #loc119])
#loc243 = loc(fused[#loc122, #loc123])
#loc244 = loc(fused[#loc121, #loc123])
#loc245 = loc(fused[#loc120, #loc100])
#loc246 = loc(fused[#loc124, #loc125])
#loc247 = loc(fused[#loc126, #loc127])
#loc248 = loc(fused[#loc128, #loc125])
#loc249 = loc(fused[#loc133, #loc134])
#loc250 = loc(fused[#loc135, #loc136])
#loc251 = loc(fused[#loc138, #loc137])
#loc252 = loc(fused[#loc139, #loc140])
#loc253 = loc(fused[#loc142, #loc136])
#loc254 = loc(fused[#loc144, #loc143])
#loc255 = loc(fused[#loc148, #loc147])
#loc256 = loc(fused[#loc150, #loc149])
#loc257 = loc(fused[#loc151, #loc152])
#loc258 = loc(fused[#loc155, #loc156])
#loc259 = loc(fused[#loc154, #loc156])
#loc260 = loc(fused[#loc153, #loc104])
#loc261 = loc(fused[#loc157, #loc158])
#loc262 = loc(fused[#loc159, #loc160])
#loc263 = loc(fused[#loc161, #loc158])
#loc264 = loc(fused[#loc166, #loc167])
#loc265 = loc(fused[#loc168, #loc169])
#loc266 = loc(fused[#loc171, #loc170])
#loc267 = loc(fused[#loc172, #loc173])
#loc268 = loc(fused[#loc175, #loc169])
#loc269 = loc(fused[#loc177, #loc176])
#loc270 = loc(fused[#loc181, #loc180])
#loc271 = loc(fused[#loc183, #loc182])
