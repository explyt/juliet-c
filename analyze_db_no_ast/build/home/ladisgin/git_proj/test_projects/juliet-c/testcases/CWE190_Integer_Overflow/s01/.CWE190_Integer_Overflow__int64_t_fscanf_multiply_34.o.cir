!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType = !cir.struct<union "CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType" {!s64i, !s64i}>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc114)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc115)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc116)
  cir.func private  @printLongLongLine(!s64i) loc(#loc117)
  cir.func no_proto  @CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.alloca !ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc120)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc15)
    cir.store %2, %0 : !s64i, !cir.ptr<!s64i> loc(#loc121)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc17)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc115)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc18)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc116)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc116)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc17)
    %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc19)
    %10 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType> -> !cir.ptr<!s64i> loc(#loc20)
    cir.store %9, %10 : !s64i, !cir.ptr<!s64i> loc(#loc122)
    cir.scope {
      %11 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc124)
      %12 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType> -> !cir.ptr<!s64i> loc(#loc26)
      %13 = cir.load %12 : !cir.ptr<!s64i>, !s64i loc(#loc25)
      cir.store %13, %11 : !s64i, !cir.ptr<!s64i> loc(#loc124)
      cir.scope {
        %14 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc29)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc30)
        %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc30)
        %17 = cir.cmp(gt, %14, %16) : !s64i, !s32i loc(#loc126)
        %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc31)
        cir.if %18 {
          %19 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc128)
          %20 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc35)
          %21 = cir.const #cir.int<2> : !s32i loc(#loc34)
          %22 = cir.cast(integral, %21 : !s32i), !s64i loc(#loc34)
          %23 = cir.binop(mul, %20, %22) nsw : !s64i loc(#loc35)
          cir.store %23, %19 : !s64i, !cir.ptr<!s64i> loc(#loc128)
          %24 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc36)
          cir.call @printLongLongLine(%24) : (!s64i) -> () loc(#loc37)
        } loc(#loc127)
      } loc(#loc125)
    } loc(#loc123)
    cir.return loc(#loc10)
  } loc(#loc118)
  cir.func no_proto  @CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc130)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc42)
    cir.return loc(#loc39)
  } loc(#loc129)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc133)
    %1 = cir.alloca !ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc134)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc50)
    cir.store %2, %0 : !s64i, !cir.ptr<!s64i> loc(#loc135)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc52)
    %4 = cir.cast(integral, %3 : !s32i), !s64i loc(#loc52)
    cir.store %4, %0 : !s64i, !cir.ptr<!s64i> loc(#loc136)
    %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc54)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType> -> !cir.ptr<!s64i> loc(#loc20)
    cir.store %5, %6 : !s64i, !cir.ptr<!s64i> loc(#loc137)
    cir.scope {
      %7 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc139)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType> -> !cir.ptr<!s64i> loc(#loc26)
      %9 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc59)
      cir.store %9, %7 : !s64i, !cir.ptr<!s64i> loc(#loc139)
      cir.scope {
        %10 = cir.load %7 : !cir.ptr<!s64i>, !s64i loc(#loc62)
        %11 = cir.const #cir.int<0> : !s32i loc(#loc63)
        %12 = cir.cast(integral, %11 : !s32i), !s64i loc(#loc63)
        %13 = cir.cmp(gt, %10, %12) : !s64i, !s32i loc(#loc141)
        %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc64)
        cir.if %14 {
          %15 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc143)
          %16 = cir.load %7 : !cir.ptr<!s64i>, !s64i loc(#loc68)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc67)
          %18 = cir.cast(integral, %17 : !s32i), !s64i loc(#loc67)
          %19 = cir.binop(mul, %16, %18) nsw : !s64i loc(#loc68)
          cir.store %19, %15 : !s64i, !cir.ptr<!s64i> loc(#loc143)
          %20 = cir.load %15 : !cir.ptr<!s64i>, !s64i loc(#loc69)
          cir.call @printLongLongLine(%20) : (!s64i) -> () loc(#loc70)
        } loc(#loc142)
      } loc(#loc140)
    } loc(#loc138)
    cir.return loc(#loc45)
  } loc(#loc132)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc144)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc73)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.alloca !ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType, !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc80)
    cir.store %2, %0 : !s64i, !cir.ptr<!s64i> loc(#loc148)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc82)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc115)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc83)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc149)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc149)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc82)
    %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc86)
    %10 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType> -> !cir.ptr<!s64i> loc(#loc20)
    cir.store %9, %10 : !s64i, !cir.ptr<!s64i> loc(#loc150)
    cir.scope {
      %11 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data", init] {alignment = 8 : i64} loc(#loc152)
      %12 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE190_Integer_Overflow__int64_t_fscanf_multiply_34_unionType> -> !cir.ptr<!s64i> loc(#loc26)
      %13 = cir.load %12 : !cir.ptr<!s64i>, !s64i loc(#loc91)
      cir.store %13, %11 : !s64i, !cir.ptr<!s64i> loc(#loc152)
      cir.scope {
        %14 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc94)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc95)
        %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc95)
        %17 = cir.cmp(gt, %14, %16) : !s64i, !s32i loc(#loc154)
        %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc96)
        cir.if %18 {
          cir.scope {
            %19 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc100)
            %20 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc101)
            %21 = cir.const #cir.int<2> : !s32i loc(#loc102)
            %22 = cir.cast(integral, %21 : !s32i), !s64i loc(#loc102)
            %23 = cir.binop(div, %20, %22) : !s64i loc(#loc157)
            %24 = cir.cmp(lt, %19, %23) : !s64i, !s32i loc(#loc158)
            %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc104)
            cir.if %25 {
              %26 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc160)
              %27 = cir.load %11 : !cir.ptr<!s64i>, !s64i loc(#loc110)
              %28 = cir.const #cir.int<2> : !s32i loc(#loc109)
              %29 = cir.cast(integral, %28 : !s32i), !s64i loc(#loc109)
              %30 = cir.binop(mul, %27, %29) nsw : !s64i loc(#loc110)
              cir.store %30, %26 : !s64i, !cir.ptr<!s64i> loc(#loc160)
              %31 = cir.load %26 : !cir.ptr<!s64i>, !s64i loc(#loc111)
              cir.call @printLongLongLine(%31) : (!s64i) -> () loc(#loc112)
            } else {
              %26 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc73)
              %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc73)
              cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc113)
            } loc(#loc159)
          } loc(#loc156)
        } loc(#loc155)
      } loc(#loc153)
    } loc(#loc151)
    cir.return loc(#loc75)
  } loc(#loc145)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s01/CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":35:20)
#loc6 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":35:24)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":29:1)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":46:1)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":31:5)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":31:13)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":32:5)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":32:67)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":33:12)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":33:5)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":35:5)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":35:13)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":36:26)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":23:13)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":36:5)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":37:5)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":45:5)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":38:9)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":38:32)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":24:13)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":39:9)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":44:9)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":39:12)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":39:19)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":39:17)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":40:9)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":42:13)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":42:37)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":42:30)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":43:31)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":43:13)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":99:1)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":103:1)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":101:5)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":101:13)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":102:5)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":102:13)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":53:1)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":70:1)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":55:5)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":55:13)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":56:5)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":56:67)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":57:12)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":57:5)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":59:12)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":59:5)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":60:26)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":60:5)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":61:5)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":69:5)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":62:9)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":62:32)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":63:9)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":68:9)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":63:12)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":63:19)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":63:17)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":64:9)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":66:13)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":66:37)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":66:30)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":67:31)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":67:13)
#loc71 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc72 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":93:27)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":73:1)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":97:1)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":75:5)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":75:13)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":76:5)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":76:67)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":77:12)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":77:5)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":79:5)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":79:13)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":79:20)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":79:24)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":80:26)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":80:5)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":81:5)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":96:5)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":82:9)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":82:32)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":83:9)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":95:9)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":83:12)
#loc95 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":83:19)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":83:17)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":84:9)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":86:13)
#loc99 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":94:13)
#loc100 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":86:17)
#loc101 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":86:25)
#loc102 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":86:35)
#loc103 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":86:36)
#loc104 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":86:22)
#loc105 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":87:13)
#loc106 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":90:13)
#loc107 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":92:13)
#loc108 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":88:17)
#loc109 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":88:41)
#loc110 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":88:34)
#loc111 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":89:35)
#loc112 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":89:17)
#loc113 = loc("CWE190_Integer_Overflow__int64_t_fscanf_multiply_34.c":93:17)
#loc114 = loc(fused[#loc1, #loc2])
#loc115 = loc(fused[#loc3, #loc4])
#loc116 = loc(fused[#loc5, #loc6])
#loc117 = loc(fused[#loc7, #loc8])
#loc118 = loc(fused[#loc9, #loc10])
#loc119 = loc(fused[#loc11, #loc12])
#loc120 = loc(fused[#loc13, #loc14])
#loc121 = loc(fused[#loc16, #loc15])
#loc122 = loc(fused[#loc21, #loc19])
#loc123 = loc(fused[#loc22, #loc23])
#loc124 = loc(fused[#loc24, #loc25])
#loc125 = loc(fused[#loc27, #loc28])
#loc126 = loc(fused[#loc29, #loc30])
#loc127 = loc(fused[#loc32, #loc28])
#loc128 = loc(fused[#loc33, #loc34])
#loc129 = loc(fused[#loc38, #loc39])
#loc130 = loc(fused[#loc40, #loc41])
#loc131 = loc(fused[#loc42, #loc43])
#loc132 = loc(fused[#loc44, #loc45])
#loc133 = loc(fused[#loc46, #loc47])
#loc134 = loc(fused[#loc48, #loc49])
#loc135 = loc(fused[#loc51, #loc50])
#loc136 = loc(fused[#loc53, #loc52])
#loc137 = loc(fused[#loc55, #loc54])
#loc138 = loc(fused[#loc56, #loc57])
#loc139 = loc(fused[#loc58, #loc59])
#loc140 = loc(fused[#loc60, #loc61])
#loc141 = loc(fused[#loc62, #loc63])
#loc142 = loc(fused[#loc65, #loc61])
#loc143 = loc(fused[#loc66, #loc67])
#loc144 = loc(fused[#loc71, #loc72])
#loc145 = loc(fused[#loc74, #loc75])
#loc146 = loc(fused[#loc76, #loc77])
#loc147 = loc(fused[#loc78, #loc79])
#loc148 = loc(fused[#loc81, #loc80])
#loc149 = loc(fused[#loc84, #loc85])
#loc150 = loc(fused[#loc87, #loc86])
#loc151 = loc(fused[#loc88, #loc89])
#loc152 = loc(fused[#loc90, #loc91])
#loc153 = loc(fused[#loc92, #loc93])
#loc154 = loc(fused[#loc94, #loc95])
#loc155 = loc(fused[#loc97, #loc93])
#loc156 = loc(fused[#loc98, #loc99])
#loc157 = loc(fused[#loc101, #loc102])
#loc158 = loc(fused[#loc100, #loc103])
#loc159 = loc(fused[#loc105, #loc106, #loc107, #loc99])
#loc160 = loc(fused[#loc108, #loc109])
