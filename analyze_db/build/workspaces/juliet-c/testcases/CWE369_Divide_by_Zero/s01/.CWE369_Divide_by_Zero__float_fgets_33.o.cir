!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc75 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":234:8)
#loc76 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":234:14)
#loc164 = loc(fused[#loc75, #loc76])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc133)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc134)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc135)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc137)
  cir.func @_ZN37CWE369_Divide_by_Zero__float_fgets_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc139)
    %1 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc140)
    cir.store %0, %1 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc17)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc18)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc141)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc143)
      cir.scope {
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc26)
        %5 = cir.const #cir.int<20> : !s32i loc(#loc27)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc134)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
        %8 = cir.call @fgets(%4, %5, %7) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc29)
        %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc30)
        %10 = cir.cmp(ne, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc145)
        cir.if %10 {
          %11 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc34)
          %12 = cir.call @atof(%11) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc35)
          %13 = cir.cast(floating, %12 : !cir.double), !cir.float loc(#loc35)
          cir.store %13, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc147)
        } else {
          %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc38)
        } loc(#loc146)
      } loc(#loc144)
    } loc(#loc142)
    cir.scope {
      %3 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc149)
      %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc42)
      %5 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc42)
      cir.store %5, %3 : !cir.float, !cir.ptr<!cir.float> loc(#loc149)
      cir.scope {
        %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc151)
        %7 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc47)
        %8 = cir.load %3 : !cir.ptr<!cir.float>, !cir.float loc(#loc48)
        %9 = cir.cast(floating, %8 : !cir.float), !cir.double loc(#loc48)
        %10 = cir.binop(div, %7, %9) : !cir.double loc(#loc152)
        %11 = cir.cast(float_to_int, %10 : !cir.double), !s32i loc(#loc152)
        cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc151)
        %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc49)
        cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc50)
      } loc(#loc150)
    } loc(#loc148)
    cir.return loc(#loc13)
  } loc(#loc138)
  cir.func internal private @_ZN37CWE369_Divide_by_Zero__float_fgets_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc154)
    %1 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc155)
    cir.store %0, %1 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc56)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc57)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc156)
    %3 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc59)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc157)
    cir.scope {
      %4 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc159)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc64)
      %6 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc64)
      cir.store %6, %4 : !cir.float, !cir.ptr<!cir.float> loc(#loc159)
      cir.scope {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc161)
        %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc69)
        %9 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc70)
        %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc70)
        %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc162)
        %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc162)
        cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc161)
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc71)
        cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc72)
      } loc(#loc160)
    } loc(#loc158)
    cir.return loc(#loc52)
  } loc(#loc153)
  cir.func linkonce_odr @_ZSt4fabsf(%arg0: !cir.float loc(fused[#loc75, #loc76])) -> !cir.float extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__x", init] {alignment = 4 : i64} loc(#loc164)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc74)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc77)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc78)
    %3 = cir.fabs %2 : !cir.float loc(#loc78)
    cir.store %3, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc165)
    %4 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc165)
    cir.return %4 : !cir.float loc(#loc165)
  } loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc81)
  cir.func internal private @_ZN37CWE369_Divide_by_Zero__float_fgets_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc167)
    %1 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc168)
    cir.store %0, %1 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc87)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc88)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc169)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc171)
      cir.scope {
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc96)
        %5 = cir.const #cir.int<20> : !s32i loc(#loc97)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc134)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc98)
        %8 = cir.call @fgets(%4, %5, %7) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc99)
        %9 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc100)
        %10 = cir.cmp(ne, %8, %9) : !cir.ptr<!s8i>, !cir.bool loc(#loc173)
        cir.if %10 {
          %11 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc104)
          %12 = cir.call @atof(%11) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc105)
          %13 = cir.cast(floating, %12 : !cir.double), !cir.float loc(#loc105)
          cir.store %13, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc175)
        } else {
          %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc108)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc108)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc109)
        } loc(#loc174)
      } loc(#loc172)
    } loc(#loc170)
    cir.scope {
      %3 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc177)
      %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc113)
      %5 = cir.load %4 : !cir.ptr<!cir.float>, !cir.float loc(#loc113)
      cir.store %5, %3 : !cir.float, !cir.ptr<!cir.float> loc(#loc177)
      cir.scope {
        %6 = cir.load %3 : !cir.ptr<!cir.float>, !cir.float loc(#loc116)
        %7 = cir.call @_ZSt4fabsf(%6) : (!cir.float) -> !cir.float loc(#loc117)
        %8 = cir.cast(floating, %7 : !cir.float), !cir.double loc(#loc117)
        %9 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc118)
        %10 = cir.cmp(gt, %8, %9) : !cir.double, !cir.bool loc(#loc179)
        cir.if %10 {
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc181)
          %12 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc124)
          %13 = cir.load %3 : !cir.ptr<!cir.float>, !cir.float loc(#loc125)
          %14 = cir.cast(floating, %13 : !cir.float), !cir.double loc(#loc125)
          %15 = cir.binop(div, %12, %14) : !cir.double loc(#loc182)
          %16 = cir.cast(float_to_int, %15 : !cir.double), !s32i loc(#loc182)
          cir.store %16, %11 : !s32i, !cir.ptr<!s32i> loc(#loc181)
          %17 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc126)
          cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc127)
        } else {
          %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc81)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc81)
          cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc128)
        } loc(#loc180)
      } loc(#loc178)
    } loc(#loc176)
    cir.return loc(#loc83)
  } loc(#loc166)
  cir.func @_ZN37CWE369_Divide_by_Zero__float_fgets_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN37CWE369_Divide_by_Zero__float_fgets_33L7goodG2BEv() : () -> () loc(#loc131)
    cir.call @_ZN37CWE369_Divide_by_Zero__float_fgets_33L7goodB2GEv() : () -> () loc(#loc132)
    cir.return loc(#loc130)
  } loc(#loc183)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_33.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":102:1)
#loc6 = loc("/usr/include/stdlib.h":103:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":45:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":29:1)
#loc13 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":56:1)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":31:5)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":31:11)
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":32:5)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":32:22)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":34:12)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":34:5)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":35:5)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":47:5)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":36:9)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":36:41)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":38:9)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":46:9)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":38:19)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":38:32)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":38:49)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":38:13)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":38:59)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":39:9)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":42:9)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":44:9)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":41:32)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":41:27)
#loc36 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":41:13)
#loc37 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":41:43)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":45:13)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":48:5)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":55:5)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":49:9)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":49:22)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":50:9)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":54:9)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":52:13)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":52:44)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":52:32)
#loc48 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":52:40)
#loc49 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":53:26)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":53:13)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":63:1)
#loc52 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":79:1)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":65:5)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":65:11)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":66:5)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":66:22)
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":68:12)
#loc58 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":68:5)
#loc59 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":70:12)
#loc60 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":70:5)
#loc61 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":71:5)
#loc62 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":78:5)
#loc63 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":72:9)
#loc64 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":72:22)
#loc65 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":73:9)
#loc66 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":77:9)
#loc67 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":75:13)
#loc68 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":75:44)
#loc69 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":75:32)
#loc70 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":75:40)
#loc71 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":76:26)
#loc72 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":76:13)
#loc73 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":233:3)
#loc74 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:34)
#loc77 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:3)
#loc78 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:28)
#loc79 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:5)
#loc80 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/cmath":235:31)
#loc81 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":111:23)
#loc82 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":82:1)
#loc83 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":114:1)
#loc84 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":84:5)
#loc85 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":84:11)
#loc86 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":85:5)
#loc87 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":85:22)
#loc88 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":87:12)
#loc89 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":87:5)
#loc90 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":88:5)
#loc91 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":100:5)
#loc92 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":89:9)
#loc93 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":89:41)
#loc94 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":91:9)
#loc95 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":99:9)
#loc96 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":91:19)
#loc97 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":91:32)
#loc98 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":91:49)
#loc99 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":91:13)
#loc100 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":91:59)
#loc101 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":92:9)
#loc102 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":95:9)
#loc103 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":97:9)
#loc104 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":94:32)
#loc105 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":94:27)
#loc106 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":94:13)
#loc107 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":94:43)
#loc108 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":98:23)
#loc109 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":98:13)
#loc110 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":101:5)
#loc111 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":113:5)
#loc112 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":102:9)
#loc113 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":102:22)
#loc114 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":104:9)
#loc115 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":112:9)
#loc116 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":104:17)
#loc117 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":104:12)
#loc118 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":104:25)
#loc119 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":105:9)
#loc120 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":108:9)
#loc121 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":110:9)
#loc122 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":106:13)
#loc123 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":106:44)
#loc124 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":106:32)
#loc125 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":106:40)
#loc126 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":107:26)
#loc127 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":107:13)
#loc128 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":111:13)
#loc129 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":116:1)
#loc130 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":120:1)
#loc131 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":118:5)
#loc132 = loc("CWE369_Divide_by_Zero__float_fgets_33.cpp":119:5)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc3, #loc4])
#loc135 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc7, #loc8])
#loc137 = loc(fused[#loc10, #loc11])
#loc138 = loc(fused[#loc12, #loc13])
#loc139 = loc(fused[#loc14, #loc15])
#loc140 = loc(fused[#loc16, #loc17])
#loc141 = loc(fused[#loc19, #loc18])
#loc142 = loc(fused[#loc20, #loc21])
#loc143 = loc(fused[#loc22, #loc23])
#loc144 = loc(fused[#loc24, #loc25])
#loc145 = loc(fused[#loc29, #loc30])
#loc146 = loc(fused[#loc31, #loc32, #loc33, #loc25])
#loc147 = loc(fused[#loc36, #loc37])
#loc148 = loc(fused[#loc39, #loc40])
#loc149 = loc(fused[#loc41, #loc42])
#loc150 = loc(fused[#loc43, #loc44])
#loc151 = loc(fused[#loc45, #loc46])
#loc152 = loc(fused[#loc47, #loc48])
#loc153 = loc(fused[#loc51, #loc52])
#loc154 = loc(fused[#loc53, #loc54])
#loc155 = loc(fused[#loc55, #loc56])
#loc156 = loc(fused[#loc58, #loc57])
#loc157 = loc(fused[#loc60, #loc59])
#loc158 = loc(fused[#loc61, #loc62])
#loc159 = loc(fused[#loc63, #loc64])
#loc160 = loc(fused[#loc65, #loc66])
#loc161 = loc(fused[#loc67, #loc68])
#loc162 = loc(fused[#loc69, #loc70])
#loc163 = loc(fused[#loc73, #loc74])
#loc165 = loc(fused[#loc79, #loc80])
#loc166 = loc(fused[#loc82, #loc83])
#loc167 = loc(fused[#loc84, #loc85])
#loc168 = loc(fused[#loc86, #loc87])
#loc169 = loc(fused[#loc89, #loc88])
#loc170 = loc(fused[#loc90, #loc91])
#loc171 = loc(fused[#loc92, #loc93])
#loc172 = loc(fused[#loc94, #loc95])
#loc173 = loc(fused[#loc99, #loc100])
#loc174 = loc(fused[#loc101, #loc102, #loc103, #loc95])
#loc175 = loc(fused[#loc106, #loc107])
#loc176 = loc(fused[#loc110, #loc111])
#loc177 = loc(fused[#loc112, #loc113])
#loc178 = loc(fused[#loc114, #loc115])
#loc179 = loc(fused[#loc117, #loc118])
#loc180 = loc(fused[#loc119, #loc120, #loc121, #loc115])
#loc181 = loc(fused[#loc122, #loc123])
#loc182 = loc(fused[#loc124, #loc125])
#loc183 = loc(fused[#loc129, #loc130])
