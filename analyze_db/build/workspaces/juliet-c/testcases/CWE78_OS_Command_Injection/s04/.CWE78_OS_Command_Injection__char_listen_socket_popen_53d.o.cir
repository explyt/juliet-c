!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc8 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":61:71)
#loc9 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":61:78)
#loc28 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":79:75)
#loc29 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":79:82)
#loc50 = loc(fused[#loc8, #loc9])
#loc58 = loc(fused[#loc28, #loc29])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc3)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc48)
  cir.func @CWE78_OS_Command_Injection__char_listen_socket_popen_53d_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc51)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc50)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    cir.br ^bb1 loc(#loc52)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc3)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc3)
    %5 = cir.call @popen(%2, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc16)
    cir.store %5, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc53)
    cir.br ^bb2 loc(#loc54)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc22)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc22)
    %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc55)
    cir.brcond %9 ^bb3, ^bb4 loc(#loc56)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc24)
    %11 = cir.call @pclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc25)
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc20)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc14)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc7)
  } loc(#loc49)
  cir.func @CWE78_OS_Command_Injection__char_listen_socket_popen_53d_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc28, #loc29])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc59)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc58)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc32)
    cir.br ^bb1 loc(#loc60)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc36)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc36)
    %5 = cir.call @popen(%2, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc37)
    cir.store %5, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc61)
    cir.br ^bb2 loc(#loc62)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc43)
    %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc63)
    cir.brcond %9 ^bb3, ^bb4 loc(#loc64)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc45)
    %11 = cir.call @pclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc46)
    cir.br ^bb4 loc(#loc41)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc41)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc34)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc27)
  } loc(#loc57)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":0:0)
#loc1 = loc("/usr/include/stdio.h":903:1)
#loc2 = loc("/usr/include/stdio.h":904:3)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":66:28)
#loc4 = loc("/usr/include/stdio.h":897:1)
#loc5 = loc("/usr/include/stdio.h":897:36)
#loc6 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":61:1)
#loc7 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":72:1)
#loc10 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":64:9)
#loc11 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":64:15)
#loc12 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":62:1)
#loc13 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":63:5)
#loc14 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":71:5)
#loc15 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":66:22)
#loc16 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":66:16)
#loc17 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":66:9)
#loc18 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":66:31)
#loc19 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":67:9)
#loc20 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":70:9)
#loc21 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":67:13)
#loc22 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":67:21)
#loc23 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":68:9)
#loc24 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":69:20)
#loc25 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":69:13)
#loc26 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":79:1)
#loc27 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":90:1)
#loc30 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":82:9)
#loc31 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":82:15)
#loc32 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":80:1)
#loc33 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":81:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":89:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":84:22)
#loc36 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":84:28)
#loc37 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":84:16)
#loc38 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":84:9)
#loc39 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":84:31)
#loc40 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":85:9)
#loc41 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":88:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":85:13)
#loc43 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":85:21)
#loc44 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":86:9)
#loc45 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":87:20)
#loc46 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_53d.c":87:13)
#loc47 = loc(fused[#loc1, #loc2])
#loc48 = loc(fused[#loc4, #loc5])
#loc49 = loc(fused[#loc6, #loc7])
#loc51 = loc(fused[#loc10, #loc11])
#loc52 = loc(fused[#loc13, #loc14])
#loc53 = loc(fused[#loc17, #loc18])
#loc54 = loc(fused[#loc19, #loc20])
#loc55 = loc(fused[#loc21, #loc22])
#loc56 = loc(fused[#loc23, #loc20])
#loc57 = loc(fused[#loc26, #loc27])
#loc59 = loc(fused[#loc30, #loc31])
#loc60 = loc(fused[#loc33, #loc34])
#loc61 = loc(fused[#loc38, #loc39])
#loc62 = loc(fused[#loc40, #loc41])
#loc63 = loc(fused[#loc42, #loc43])
#loc64 = loc(fused[#loc44, #loc41])
