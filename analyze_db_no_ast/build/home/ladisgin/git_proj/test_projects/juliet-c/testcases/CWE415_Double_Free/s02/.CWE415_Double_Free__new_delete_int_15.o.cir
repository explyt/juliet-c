!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s02/CWE415_Double_Free__new_delete_int_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc139)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr) loc(#loc140)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc141)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc7)
  cir.func  @_ZN37CWE415_Double_Free__new_delete_int_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc12)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc144)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc16)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        %3 = cir.const #cir.int<4> : !u64i loc(#loc146)
        %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc19)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc146)
        cir.store %5, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc147)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc21)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc21)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc19)
        cir.call @_ZdlPvm(%7, %8) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc19)
        cir.break loc(#loc22)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc7)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc7)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc23)
        cir.break loc(#loc24)
      }
      ] loc(#loc14)
    } loc(#loc145)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc27)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc28)
        %5 = cir.const #cir.int<4> : !u64i loc(#loc19)
        cir.call @_ZdlPvm(%4, %5) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc19)
        cir.break loc(#loc29)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc30)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc30)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc31)
        cir.break loc(#loc32)
      }
      ] loc(#loc25)
    } loc(#loc148)
    cir.return loc(#loc9)
  } loc(#loc142)
  cir.func internal private  @_ZN37CWE415_Double_Free__new_delete_int_15L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc150)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc37)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc151)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc41)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        %3 = cir.const #cir.int<4> : !u64i loc(#loc153)
        %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc44)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc153)
        cir.store %5, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc154)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc46)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc46)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc44)
        cir.call @_ZdlPvm(%7, %8) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc44)
        cir.break loc(#loc47)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc48)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc48)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc49)
        cir.break loc(#loc50)
      }
      ] loc(#loc39)
    } loc(#loc152)
    cir.scope {
      %2 = cir.const #cir.int<8> : !s32i loc(#loc53)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc54)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc54)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc55)
        cir.break loc(#loc56)
      },
      case (default) {
        cir.break loc(#loc57)
      }
      ] loc(#loc51)
    } loc(#loc155)
    cir.return loc(#loc34)
  } loc(#loc149)
  cir.func internal private  @_ZN37CWE415_Double_Free__new_delete_int_15L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc157)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc62)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc158)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc66)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        %3 = cir.const #cir.int<4> : !u64i loc(#loc160)
        %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc69)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc160)
        cir.store %5, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc161)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc71)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc71)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc69)
        cir.call @_ZdlPvm(%7, %8) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc69)
        cir.break loc(#loc72)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc73)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc73)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc74)
        cir.break loc(#loc75)
      }
      ] loc(#loc64)
    } loc(#loc159)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc78)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        cir.break loc(#loc79)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc80)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc80)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc81)
        cir.break loc(#loc82)
      }
      ] loc(#loc76)
    } loc(#loc162)
    cir.return loc(#loc59)
  } loc(#loc156)
  cir.func internal private  @_ZN37CWE415_Double_Free__new_delete_int_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc164)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc87)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc165)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc91)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc92)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc92)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc93)
        cir.break loc(#loc94)
      },
      case (default) {
        %3 = cir.const #cir.int<4> : !u64i loc(#loc167)
        %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc97)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc167)
        cir.store %5, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc168)
        cir.break loc(#loc99)
      }
      ] loc(#loc89)
    } loc(#loc166)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc102)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc103)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc103)
        %5 = cir.const #cir.int<4> : !u64i loc(#loc97)
        cir.call @_ZdlPvm(%4, %5) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc97)
        cir.break loc(#loc104)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc105)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc105)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc106)
        cir.break loc(#loc107)
      }
      ] loc(#loc100)
    } loc(#loc169)
    cir.return loc(#loc84)
  } loc(#loc163)
  cir.func internal private  @_ZN37CWE415_Double_Free__new_delete_int_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc112)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc172)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc116)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        %3 = cir.const #cir.int<4> : !u64i loc(#loc174)
        %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc119)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc174)
        cir.store %5, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc175)
        cir.break loc(#loc121)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc122)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc122)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc123)
        cir.break loc(#loc124)
      }
      ] loc(#loc114)
    } loc(#loc173)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc127)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc128)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc128)
        %5 = cir.const #cir.int<4> : !u64i loc(#loc119)
        cir.call @_ZdlPvm(%4, %5) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc119)
        cir.break loc(#loc129)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc130)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc130)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc131)
        cir.break loc(#loc132)
      }
      ] loc(#loc125)
    } loc(#loc176)
    cir.return loc(#loc109)
  } loc(#loc170)
  cir.func  @_ZN37CWE415_Double_Free__new_delete_int_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN37CWE415_Double_Free__new_delete_int_15L8goodB2G1Ev() : () -> () loc(#loc135)
    cir.call @_ZN37CWE415_Double_Free__new_delete_int_15L8goodB2G2Ev() : () -> () loc(#loc136)
    cir.call @_ZN37CWE415_Double_Free__new_delete_int_15L8goodG2B1Ev() : () -> () loc(#loc137)
    cir.call @_ZN37CWE415_Double_Free__new_delete_int_15L8goodG2B2Ev() : () -> () loc(#loc138)
    cir.return loc(#loc134)
  } loc(#loc177)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s02/CWE415_Double_Free__new_delete_int_15.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE415_Double_Free__new_delete_int_15.cpp":40:19)
#loc8 = loc("CWE415_Double_Free__new_delete_int_15.cpp":26:1)
#loc9 = loc("CWE415_Double_Free__new_delete_int_15.cpp":54:1)
#loc10 = loc("CWE415_Double_Free__new_delete_int_15.cpp":28:5)
#loc11 = loc("CWE415_Double_Free__new_delete_int_15.cpp":28:11)
#loc12 = loc("CWE415_Double_Free__new_delete_int_15.cpp":30:12)
#loc13 = loc("CWE415_Double_Free__new_delete_int_15.cpp":30:5)
#loc14 = loc("CWE415_Double_Free__new_delete_int_15.cpp":31:5)
#loc15 = loc("CWE415_Double_Free__new_delete_int_15.cpp":42:5)
#loc16 = loc("CWE415_Double_Free__new_delete_int_15.cpp":31:12)
#loc17 = loc("CWE415_Double_Free__new_delete_int_15.cpp":34:16)
#loc18 = loc("CWE415_Double_Free__new_delete_int_15.cpp":34:20)
#loc19 = loc("CWE415_Double_Free__new_delete_int_15.cpp":26:6)
#loc20 = loc("CWE415_Double_Free__new_delete_int_15.cpp":34:9)
#loc21 = loc("CWE415_Double_Free__new_delete_int_15.cpp":36:16)
#loc22 = loc("CWE415_Double_Free__new_delete_int_15.cpp":37:9)
#loc23 = loc("CWE415_Double_Free__new_delete_int_15.cpp":40:9)
#loc24 = loc("CWE415_Double_Free__new_delete_int_15.cpp":41:9)
#loc25 = loc("CWE415_Double_Free__new_delete_int_15.cpp":43:5)
#loc26 = loc("CWE415_Double_Free__new_delete_int_15.cpp":53:5)
#loc27 = loc("CWE415_Double_Free__new_delete_int_15.cpp":43:12)
#loc28 = loc("CWE415_Double_Free__new_delete_int_15.cpp":47:16)
#loc29 = loc("CWE415_Double_Free__new_delete_int_15.cpp":48:9)
#loc30 = loc("CWE415_Double_Free__new_delete_int_15.cpp":51:19)
#loc31 = loc("CWE415_Double_Free__new_delete_int_15.cpp":51:9)
#loc32 = loc("CWE415_Double_Free__new_delete_int_15.cpp":52:9)
#loc33 = loc("CWE415_Double_Free__new_delete_int_15.cpp":61:1)
#loc34 = loc("CWE415_Double_Free__new_delete_int_15.cpp":90:1)
#loc35 = loc("CWE415_Double_Free__new_delete_int_15.cpp":63:5)
#loc36 = loc("CWE415_Double_Free__new_delete_int_15.cpp":63:11)
#loc37 = loc("CWE415_Double_Free__new_delete_int_15.cpp":65:12)
#loc38 = loc("CWE415_Double_Free__new_delete_int_15.cpp":65:5)
#loc39 = loc("CWE415_Double_Free__new_delete_int_15.cpp":66:5)
#loc40 = loc("CWE415_Double_Free__new_delete_int_15.cpp":77:5)
#loc41 = loc("CWE415_Double_Free__new_delete_int_15.cpp":66:12)
#loc42 = loc("CWE415_Double_Free__new_delete_int_15.cpp":69:16)
#loc43 = loc("CWE415_Double_Free__new_delete_int_15.cpp":69:20)
#loc44 = loc("CWE415_Double_Free__new_delete_int_15.cpp":61:13)
#loc45 = loc("CWE415_Double_Free__new_delete_int_15.cpp":69:9)
#loc46 = loc("CWE415_Double_Free__new_delete_int_15.cpp":71:16)
#loc47 = loc("CWE415_Double_Free__new_delete_int_15.cpp":72:9)
#loc48 = loc("CWE415_Double_Free__new_delete_int_15.cpp":75:19)
#loc49 = loc("CWE415_Double_Free__new_delete_int_15.cpp":75:9)
#loc50 = loc("CWE415_Double_Free__new_delete_int_15.cpp":76:9)
#loc51 = loc("CWE415_Double_Free__new_delete_int_15.cpp":78:5)
#loc52 = loc("CWE415_Double_Free__new_delete_int_15.cpp":89:5)
#loc53 = loc("CWE415_Double_Free__new_delete_int_15.cpp":78:12)
#loc54 = loc("CWE415_Double_Free__new_delete_int_15.cpp":82:19)
#loc55 = loc("CWE415_Double_Free__new_delete_int_15.cpp":82:9)
#loc56 = loc("CWE415_Double_Free__new_delete_int_15.cpp":83:9)
#loc57 = loc("CWE415_Double_Free__new_delete_int_15.cpp":88:9)
#loc58 = loc("CWE415_Double_Free__new_delete_int_15.cpp":93:1)
#loc59 = loc("CWE415_Double_Free__new_delete_int_15.cpp":122:1)
#loc60 = loc("CWE415_Double_Free__new_delete_int_15.cpp":95:5)
#loc61 = loc("CWE415_Double_Free__new_delete_int_15.cpp":95:11)
#loc62 = loc("CWE415_Double_Free__new_delete_int_15.cpp":97:12)
#loc63 = loc("CWE415_Double_Free__new_delete_int_15.cpp":97:5)
#loc64 = loc("CWE415_Double_Free__new_delete_int_15.cpp":98:5)
#loc65 = loc("CWE415_Double_Free__new_delete_int_15.cpp":109:5)
#loc66 = loc("CWE415_Double_Free__new_delete_int_15.cpp":98:12)
#loc67 = loc("CWE415_Double_Free__new_delete_int_15.cpp":101:16)
#loc68 = loc("CWE415_Double_Free__new_delete_int_15.cpp":101:20)
#loc69 = loc("CWE415_Double_Free__new_delete_int_15.cpp":93:13)
#loc70 = loc("CWE415_Double_Free__new_delete_int_15.cpp":101:9)
#loc71 = loc("CWE415_Double_Free__new_delete_int_15.cpp":103:16)
#loc72 = loc("CWE415_Double_Free__new_delete_int_15.cpp":104:9)
#loc73 = loc("CWE415_Double_Free__new_delete_int_15.cpp":107:19)
#loc74 = loc("CWE415_Double_Free__new_delete_int_15.cpp":107:9)
#loc75 = loc("CWE415_Double_Free__new_delete_int_15.cpp":108:9)
#loc76 = loc("CWE415_Double_Free__new_delete_int_15.cpp":110:5)
#loc77 = loc("CWE415_Double_Free__new_delete_int_15.cpp":121:5)
#loc78 = loc("CWE415_Double_Free__new_delete_int_15.cpp":110:12)
#loc79 = loc("CWE415_Double_Free__new_delete_int_15.cpp":116:9)
#loc80 = loc("CWE415_Double_Free__new_delete_int_15.cpp":119:19)
#loc81 = loc("CWE415_Double_Free__new_delete_int_15.cpp":119:9)
#loc82 = loc("CWE415_Double_Free__new_delete_int_15.cpp":120:9)
#loc83 = loc("CWE415_Double_Free__new_delete_int_15.cpp":125:1)
#loc84 = loc("CWE415_Double_Free__new_delete_int_15.cpp":152:1)
#loc85 = loc("CWE415_Double_Free__new_delete_int_15.cpp":127:5)
#loc86 = loc("CWE415_Double_Free__new_delete_int_15.cpp":127:11)
#loc87 = loc("CWE415_Double_Free__new_delete_int_15.cpp":129:12)
#loc88 = loc("CWE415_Double_Free__new_delete_int_15.cpp":129:5)
#loc89 = loc("CWE415_Double_Free__new_delete_int_15.cpp":130:5)
#loc90 = loc("CWE415_Double_Free__new_delete_int_15.cpp":140:5)
#loc91 = loc("CWE415_Double_Free__new_delete_int_15.cpp":130:12)
#loc92 = loc("CWE415_Double_Free__new_delete_int_15.cpp":134:19)
#loc93 = loc("CWE415_Double_Free__new_delete_int_15.cpp":134:9)
#loc94 = loc("CWE415_Double_Free__new_delete_int_15.cpp":135:9)
#loc95 = loc("CWE415_Double_Free__new_delete_int_15.cpp":137:16)
#loc96 = loc("CWE415_Double_Free__new_delete_int_15.cpp":137:20)
#loc97 = loc("CWE415_Double_Free__new_delete_int_15.cpp":125:13)
#loc98 = loc("CWE415_Double_Free__new_delete_int_15.cpp":137:9)
#loc99 = loc("CWE415_Double_Free__new_delete_int_15.cpp":139:9)
#loc100 = loc("CWE415_Double_Free__new_delete_int_15.cpp":141:5)
#loc101 = loc("CWE415_Double_Free__new_delete_int_15.cpp":151:5)
#loc102 = loc("CWE415_Double_Free__new_delete_int_15.cpp":141:12)
#loc103 = loc("CWE415_Double_Free__new_delete_int_15.cpp":145:16)
#loc104 = loc("CWE415_Double_Free__new_delete_int_15.cpp":146:9)
#loc105 = loc("CWE415_Double_Free__new_delete_int_15.cpp":149:19)
#loc106 = loc("CWE415_Double_Free__new_delete_int_15.cpp":149:9)
#loc107 = loc("CWE415_Double_Free__new_delete_int_15.cpp":150:9)
#loc108 = loc("CWE415_Double_Free__new_delete_int_15.cpp":155:1)
#loc109 = loc("CWE415_Double_Free__new_delete_int_15.cpp":182:1)
#loc110 = loc("CWE415_Double_Free__new_delete_int_15.cpp":157:5)
#loc111 = loc("CWE415_Double_Free__new_delete_int_15.cpp":157:11)
#loc112 = loc("CWE415_Double_Free__new_delete_int_15.cpp":159:12)
#loc113 = loc("CWE415_Double_Free__new_delete_int_15.cpp":159:5)
#loc114 = loc("CWE415_Double_Free__new_delete_int_15.cpp":160:5)
#loc115 = loc("CWE415_Double_Free__new_delete_int_15.cpp":170:5)
#loc116 = loc("CWE415_Double_Free__new_delete_int_15.cpp":160:12)
#loc117 = loc("CWE415_Double_Free__new_delete_int_15.cpp":163:16)
#loc118 = loc("CWE415_Double_Free__new_delete_int_15.cpp":163:20)
#loc119 = loc("CWE415_Double_Free__new_delete_int_15.cpp":155:13)
#loc120 = loc("CWE415_Double_Free__new_delete_int_15.cpp":163:9)
#loc121 = loc("CWE415_Double_Free__new_delete_int_15.cpp":165:9)
#loc122 = loc("CWE415_Double_Free__new_delete_int_15.cpp":168:19)
#loc123 = loc("CWE415_Double_Free__new_delete_int_15.cpp":168:9)
#loc124 = loc("CWE415_Double_Free__new_delete_int_15.cpp":169:9)
#loc125 = loc("CWE415_Double_Free__new_delete_int_15.cpp":171:5)
#loc126 = loc("CWE415_Double_Free__new_delete_int_15.cpp":181:5)
#loc127 = loc("CWE415_Double_Free__new_delete_int_15.cpp":171:12)
#loc128 = loc("CWE415_Double_Free__new_delete_int_15.cpp":175:16)
#loc129 = loc("CWE415_Double_Free__new_delete_int_15.cpp":176:9)
#loc130 = loc("CWE415_Double_Free__new_delete_int_15.cpp":179:19)
#loc131 = loc("CWE415_Double_Free__new_delete_int_15.cpp":179:9)
#loc132 = loc("CWE415_Double_Free__new_delete_int_15.cpp":180:9)
#loc133 = loc("CWE415_Double_Free__new_delete_int_15.cpp":184:1)
#loc134 = loc("CWE415_Double_Free__new_delete_int_15.cpp":190:1)
#loc135 = loc("CWE415_Double_Free__new_delete_int_15.cpp":186:5)
#loc136 = loc("CWE415_Double_Free__new_delete_int_15.cpp":187:5)
#loc137 = loc("CWE415_Double_Free__new_delete_int_15.cpp":188:5)
#loc138 = loc("CWE415_Double_Free__new_delete_int_15.cpp":189:5)
#loc139 = loc(fused[#loc1, #loc2])
#loc140 = loc(fused[#loc3, #loc4])
#loc141 = loc(fused[#loc5, #loc6])
#loc142 = loc(fused[#loc8, #loc9])
#loc143 = loc(fused[#loc10, #loc11])
#loc144 = loc(fused[#loc13, #loc12])
#loc145 = loc(fused[#loc14, #loc15])
#loc146 = loc(fused[#loc17, #loc18])
#loc147 = loc(fused[#loc20, #loc18])
#loc148 = loc(fused[#loc25, #loc26])
#loc149 = loc(fused[#loc33, #loc34])
#loc150 = loc(fused[#loc35, #loc36])
#loc151 = loc(fused[#loc38, #loc37])
#loc152 = loc(fused[#loc39, #loc40])
#loc153 = loc(fused[#loc42, #loc43])
#loc154 = loc(fused[#loc45, #loc43])
#loc155 = loc(fused[#loc51, #loc52])
#loc156 = loc(fused[#loc58, #loc59])
#loc157 = loc(fused[#loc60, #loc61])
#loc158 = loc(fused[#loc63, #loc62])
#loc159 = loc(fused[#loc64, #loc65])
#loc160 = loc(fused[#loc67, #loc68])
#loc161 = loc(fused[#loc70, #loc68])
#loc162 = loc(fused[#loc76, #loc77])
#loc163 = loc(fused[#loc83, #loc84])
#loc164 = loc(fused[#loc85, #loc86])
#loc165 = loc(fused[#loc88, #loc87])
#loc166 = loc(fused[#loc89, #loc90])
#loc167 = loc(fused[#loc95, #loc96])
#loc168 = loc(fused[#loc98, #loc96])
#loc169 = loc(fused[#loc100, #loc101])
#loc170 = loc(fused[#loc108, #loc109])
#loc171 = loc(fused[#loc110, #loc111])
#loc172 = loc(fused[#loc113, #loc112])
#loc173 = loc(fused[#loc114, #loc115])
#loc174 = loc(fused[#loc117, #loc118])
#loc175 = loc(fused[#loc120, #loc118])
#loc176 = loc(fused[#loc125, #loc126])
#loc177 = loc(fused[#loc133, #loc134])
