!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc23 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":49:21)
#loc24 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":49:27)
#loc135 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":110:44)
#loc181 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":149:26)
#loc182 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":149:32)
#loc299 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":220:44)
#loc333 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":250:26)
#loc334 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":250:32)
#loc449 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":316:44)
#loc483 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":346:25)
#loc484 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":346:31)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc521 = loc(fused[#loc23, #loc24])
#loc581 = loc(fused[#loc181, #loc182])
#loc638 = loc(fused[#loc333, #loc334])
#loc695 = loc(fused[#loc483, #loc484])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc510)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc511)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc512)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc513)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc514)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc515)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc516)
  cir.func private @close(!s32i) -> !s32i loc(#loc517)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc518)
  cir.func private @printIntLine(!s32i) loc(#loc519)
  cir.func internal private @badSink(%arg0: !cir.float loc(fused[#loc23, #loc24])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc522)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc521)
    cir.store %arg0, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc27)
    cir.br ^bb1 loc(#loc523)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc518)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc30)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc524)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc525)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc34)
    %6 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc35)
    %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc35)
    %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc526)
    %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc526)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc522)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc37)
    cir.br ^bb4 loc(#loc33)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc29)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc29)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc22)
  } loc(#loc520)
  cir.func no_proto @CWE369_Divide_by_Zero__float_listenSocket_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc528)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc529)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc530)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc531)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc532)
    %5 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc533)
    %6 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc52)
    cir.store %6, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc534)
    cir.br ^bb1 loc(#loc535)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc45)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc530)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc47)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc531)
    cir.br ^bb2 loc(#loc536)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc536)
  ^bb3:  // pred: ^bb34
    %11 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc58)
    cir.brcond %12 ^bb4, ^bb35 loc(#loc58)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc537)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<2> : !s32i loc(#loc61)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc63)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc64)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc538)
    cir.br ^bb6 loc(#loc539)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc70)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc540)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc541)
  ^bb7:  // pred: ^bb6
    cir.br ^bb35 loc(#loc72)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc68)
  ^bb9:  // pred: ^bb8
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc542)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc543)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc544)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc80)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc80)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc545)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc83)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc84)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc85)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc546)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc87)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc87)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc88)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc547)
    cir.br ^bb10 loc(#loc548)
  ^bb10:  // pred: ^bb9
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc549)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc550)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc550)
    %39 = cir.call @bind(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc99)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %41 = cir.unary(minus, %40) nsw : !s32i, !s32i loc(#loc100)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc551)
    cir.brcond %42 ^bb11, ^bb12 loc(#loc552)
  ^bb11:  // pred: ^bb10
    cir.br ^bb35 loc(#loc102)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc93)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc553)
  ^bb14:  // pred: ^bb13
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %44 = cir.const #cir.int<5> : !s32i loc(#loc106)
    %45 = cir.call @listen(%43, %44) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc107)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %47 = cir.unary(minus, %46) nsw : !s32i, !s32i loc(#loc108)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc554)
    cir.brcond %48 ^bb15, ^bb16 loc(#loc555)
  ^bb15:  // pred: ^bb14
    cir.br ^bb35 loc(#loc110)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc104)
  ^bb17:  // pred: ^bb16
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc112)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc113)
    %52 = cir.call @accept(%49, %50, %51) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc114)
    cir.store %52, %3 : !s32i, !cir.ptr<!s32i> loc(#loc556)
    cir.br ^bb18 loc(#loc557)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc120)
    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc558)
    cir.brcond %56 ^bb19, ^bb20 loc(#loc559)
  ^bb19:  // pred: ^bb18
    cir.br ^bb35 loc(#loc122)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc118)
  ^bb21:  // pred: ^bb20
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %58 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc124)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc124)
    %60 = cir.const #cir.int<20> : !s32i loc(#loc125)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc125)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc125)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %65 = cir.call @recv(%57, %59, %63, %64) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc128)
    %66 = cir.cast(integral, %65 : !s64i), !s32i loc(#loc128)
    cir.store %66, %0 : !s32i, !cir.ptr<!s32i> loc(#loc560)
    cir.br ^bb22 loc(#loc561)
  ^bb22:  // pred: ^bb21
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc134)
    %69 = cir.unary(minus, %68) nsw : !s32i, !s32i loc(#loc134)
    %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc562)
    cir.brcond %70 ^bb23, ^bb24 loc(#loc135)
  ^bb23:  // pred: ^bb22
    %71 = cir.const #true loc(#loc135)
    cir.br ^bb29(%71 : !cir.bool) loc(#loc135)
  ^bb24:  // pred: ^bb22
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc137)
    %74 = cir.cmp(eq, %72, %73) : !s32i, !cir.bool loc(#loc563)
    cir.brcond %74 ^bb25, ^bb26 loc(#loc135)
  ^bb25:  // pred: ^bb24
    %75 = cir.const #true loc(#loc135)
    cir.br ^bb27(%75 : !cir.bool) loc(#loc135)
  ^bb26:  // pred: ^bb24
    %76 = cir.const #false loc(#loc135)
    cir.br ^bb27(%76 : !cir.bool) loc(#loc135)
  ^bb27(%77: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":110:44)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc135)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29(%77 : !cir.bool) loc(#loc135)
  ^bb29(%78: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":110:44)):  // 2 preds: ^bb23, ^bb28
    cir.br ^bb30 loc(#loc135)
  ^bb30:  // pred: ^bb29
    cir.brcond %78 ^bb31, ^bb32 loc(#loc564)
  ^bb31:  // pred: ^bb30
    cir.br ^bb35 loc(#loc139)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc132)
  ^bb33:  // pred: ^bb32
    %79 = cir.const #cir.int<0> : !s32i loc(#loc140)
    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc140)
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %82 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc142)
    %83 = cir.ptr_stride(%82 : !cir.ptr<!s8i>, %81 : !s32i), !cir.ptr<!s8i> loc(#loc142)
    cir.store %80, %83 : !s8i, !cir.ptr<!s8i> loc(#loc565)
    %84 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc143)
    %85 = cir.call @atof(%84) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc144)
    %86 = cir.cast(floating, %85 : !cir.double), !cir.float loc(#loc144)
    cir.store %86, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc566)
    cir.br ^bb34 loc(#loc60)
  ^bb34:  // pred: ^bb33
    cir.br ^bb3 loc(#loc57)
  ^bb35:  // 6 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19, ^bb31
    cir.br ^bb36 loc(#loc57)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc567)
  ^bb37:  // pred: ^bb36
    %87 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %88 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %89 = cir.unary(minus, %88) nsw : !s32i, !s32i loc(#loc150)
    %90 = cir.cmp(ne, %87, %89) : !s32i, !cir.bool loc(#loc568)
    cir.brcond %90 ^bb38, ^bb39 loc(#loc569)
  ^bb38:  // pred: ^bb37
    %91 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %92 = cir.call @close(%91) : (!s32i) -> !s32i loc(#loc153)
    cir.br ^bb39 loc(#loc148)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc148)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc570)
  ^bb41:  // pred: ^bb40
    %93 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %95 = cir.unary(minus, %94) nsw : !s32i, !s32i loc(#loc157)
    %96 = cir.cmp(ne, %93, %95) : !s32i, !cir.bool loc(#loc571)
    cir.brcond %96 ^bb42, ^bb43 loc(#loc572)
  ^bb42:  // pred: ^bb41
    %97 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %98 = cir.call @close(%97) : (!s32i) -> !s32i loc(#loc160)
    cir.br ^bb43 loc(#loc155)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc155)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc55)
  ^bb45:  // pred: ^bb44
    %99 = cir.const #cir.int<1> : !s32i loc(#loc161)
    %100 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc518)
    cir.store %99, %100 : !s32i, !cir.ptr<!s32i> loc(#loc573)
    %101 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc163)
    cir.call @badSink(%101) : (!cir.float) -> () loc(#loc164)
    cir.return loc(#loc39)
  } loc(#loc527)
  cir.func no_proto @CWE369_Divide_by_Zero__float_listenSocket_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc575)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc167)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc576)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc169)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc577)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc171)
    cir.return loc(#loc166)
  } loc(#loc574)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc578)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc579)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc178)
  cir.func internal private @goodB2G1Sink(%arg0: !cir.float loc(fused[#loc181, #loc182])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc582)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc581)
    cir.store %arg0, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc185)
    cir.br ^bb1 loc(#loc583)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc578)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc188)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc584)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc177)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc177)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc192)
    cir.br ^bb9 loc(#loc190)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc585)
  ^bb4:  // pred: ^bb3
    %7 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc195)
    %8 = cir.cast(floating, %7 : !cir.float), !cir.double loc(#loc195)
    %9 = cir.fabs %8 : !cir.double loc(#loc195)
    %10 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc196)
    %11 = cir.cmp(gt, %9, %10) : !cir.double, !cir.bool loc(#loc586)
    cir.brcond %11 ^bb5, ^bb6 loc(#loc587)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc201)
    %13 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc202)
    %14 = cir.cast(floating, %13 : !cir.float), !cir.double loc(#loc202)
    %15 = cir.binop(div, %12, %14) : !cir.double loc(#loc588)
    %16 = cir.cast(float_to_int, %15 : !cir.double), !s32i loc(#loc588)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc582)
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc204)
    cir.br ^bb7 loc(#loc199)
  ^bb6:  // pred: ^bb4
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc178)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc178)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc205)
    cir.br ^bb7 loc(#loc194)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc194)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc187)
  ^bb9:  // 2 preds: ^bb2, ^bb8
    cir.br ^bb10 loc(#loc187)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc180)
  } loc(#loc580)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc590)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc591)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc592)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc593)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc594)
    %5 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc595)
    %6 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc220)
    cir.store %6, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc596)
    cir.br ^bb1 loc(#loc597)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc213)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc213)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc592)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc215)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc215)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc593)
    cir.br ^bb2 loc(#loc598)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc598)
  ^bb3:  // pred: ^bb34
    %11 = cir.const #cir.int<0> : !s32i loc(#loc226)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc226)
    cir.brcond %12 ^bb4, ^bb35 loc(#loc226)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc599)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<2> : !s32i loc(#loc229)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc230)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc231)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc232)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc600)
    cir.br ^bb6 loc(#loc601)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc237)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc238)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc238)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc602)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc603)
  ^bb7:  // pred: ^bb6
    cir.br ^bb35 loc(#loc240)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc236)
  ^bb9:  // pred: ^bb8
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc604)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc243)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc605)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc606)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc248)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc248)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc607)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc250)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc250)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc84)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc85)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc608)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc252)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc252)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc253)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc609)
    cir.br ^bb10 loc(#loc610)
  ^bb10:  // pred: ^bb9
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc611)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc612)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc612)
    %39 = cir.call @bind(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc263)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc264)
    %41 = cir.unary(minus, %40) nsw : !s32i, !s32i loc(#loc264)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc613)
    cir.brcond %42 ^bb11, ^bb12 loc(#loc614)
  ^bb11:  // pred: ^bb10
    cir.br ^bb35 loc(#loc266)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc257)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc615)
  ^bb14:  // pred: ^bb13
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc269)
    %44 = cir.const #cir.int<5> : !s32i loc(#loc270)
    %45 = cir.call @listen(%43, %44) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc271)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc272)
    %47 = cir.unary(minus, %46) nsw : !s32i, !s32i loc(#loc272)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc616)
    cir.brcond %48 ^bb15, ^bb16 loc(#loc617)
  ^bb15:  // pred: ^bb14
    cir.br ^bb35 loc(#loc274)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc268)
  ^bb17:  // pred: ^bb16
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc275)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc276)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc277)
    %52 = cir.call @accept(%49, %50, %51) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc278)
    cir.store %52, %3 : !s32i, !cir.ptr<!s32i> loc(#loc618)
    cir.br ^bb18 loc(#loc619)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc283)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc284)
    %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc284)
    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc620)
    cir.brcond %56 ^bb19, ^bb20 loc(#loc621)
  ^bb19:  // pred: ^bb18
    cir.br ^bb35 loc(#loc286)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc282)
  ^bb21:  // pred: ^bb20
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc287)
    %58 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc288)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc288)
    %60 = cir.const #cir.int<20> : !s32i loc(#loc289)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc290)
    %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc289)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc289)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc291)
    %65 = cir.call @recv(%57, %59, %63, %64) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc292)
    %66 = cir.cast(integral, %65 : !s64i), !s32i loc(#loc292)
    cir.store %66, %0 : !s32i, !cir.ptr<!s32i> loc(#loc622)
    cir.br ^bb22 loc(#loc623)
  ^bb22:  // pred: ^bb21
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc298)
    %69 = cir.unary(minus, %68) nsw : !s32i, !s32i loc(#loc298)
    %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc624)
    cir.brcond %70 ^bb23, ^bb24 loc(#loc299)
  ^bb23:  // pred: ^bb22
    %71 = cir.const #true loc(#loc299)
    cir.br ^bb29(%71 : !cir.bool) loc(#loc299)
  ^bb24:  // pred: ^bb22
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc300)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc301)
    %74 = cir.cmp(eq, %72, %73) : !s32i, !cir.bool loc(#loc625)
    cir.brcond %74 ^bb25, ^bb26 loc(#loc299)
  ^bb25:  // pred: ^bb24
    %75 = cir.const #true loc(#loc299)
    cir.br ^bb27(%75 : !cir.bool) loc(#loc299)
  ^bb26:  // pred: ^bb24
    %76 = cir.const #false loc(#loc299)
    cir.br ^bb27(%76 : !cir.bool) loc(#loc299)
  ^bb27(%77: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":220:44)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc299)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29(%77 : !cir.bool) loc(#loc299)
  ^bb29(%78: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":220:44)):  // 2 preds: ^bb23, ^bb28
    cir.br ^bb30 loc(#loc299)
  ^bb30:  // pred: ^bb29
    cir.brcond %78 ^bb31, ^bb32 loc(#loc626)
  ^bb31:  // pred: ^bb30
    cir.br ^bb35 loc(#loc303)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc296)
  ^bb33:  // pred: ^bb32
    %79 = cir.const #cir.int<0> : !s32i loc(#loc304)
    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc304)
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc305)
    %82 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc306)
    %83 = cir.ptr_stride(%82 : !cir.ptr<!s8i>, %81 : !s32i), !cir.ptr<!s8i> loc(#loc306)
    cir.store %80, %83 : !s8i, !cir.ptr<!s8i> loc(#loc627)
    %84 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc307)
    %85 = cir.call @atof(%84) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc308)
    %86 = cir.cast(floating, %85 : !cir.double), !cir.float loc(#loc308)
    cir.store %86, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc628)
    cir.br ^bb34 loc(#loc228)
  ^bb34:  // pred: ^bb33
    cir.br ^bb3 loc(#loc225)
  ^bb35:  // 6 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19, ^bb31
    cir.br ^bb36 loc(#loc225)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc629)
  ^bb37:  // pred: ^bb36
    %87 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc313)
    %88 = cir.const #cir.int<1> : !s32i loc(#loc314)
    %89 = cir.unary(minus, %88) nsw : !s32i, !s32i loc(#loc314)
    %90 = cir.cmp(ne, %87, %89) : !s32i, !cir.bool loc(#loc630)
    cir.brcond %90 ^bb38, ^bb39 loc(#loc631)
  ^bb38:  // pred: ^bb37
    %91 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc316)
    %92 = cir.call @close(%91) : (!s32i) -> !s32i loc(#loc317)
    cir.br ^bb39 loc(#loc312)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc312)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc632)
  ^bb41:  // pred: ^bb40
    %93 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc320)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc321)
    %95 = cir.unary(minus, %94) nsw : !s32i, !s32i loc(#loc321)
    %96 = cir.cmp(ne, %93, %95) : !s32i, !cir.bool loc(#loc633)
    cir.brcond %96 ^bb42, ^bb43 loc(#loc634)
  ^bb42:  // pred: ^bb41
    %97 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc323)
    %98 = cir.call @close(%97) : (!s32i) -> !s32i loc(#loc324)
    cir.br ^bb43 loc(#loc319)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc319)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc223)
  ^bb45:  // pred: ^bb44
    %99 = cir.const #cir.int<0> : !s32i loc(#loc325)
    %100 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc578)
    cir.store %99, %100 : !s32i, !cir.ptr<!s32i> loc(#loc635)
    %101 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc327)
    cir.call @goodB2G1Sink(%101) : (!cir.float) -> () loc(#loc328)
    cir.return loc(#loc207)
  } loc(#loc589)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc636)
  cir.func internal private @goodB2G2Sink(%arg0: !cir.float loc(fused[#loc333, #loc334])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc639)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc638)
    cir.store %arg0, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc337)
    cir.br ^bb1 loc(#loc640)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc636)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc340)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc340)
    cir.brcond %4 ^bb2, ^bb8 loc(#loc641)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc642)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc344)
    %6 = cir.cast(floating, %5 : !cir.float), !cir.double loc(#loc344)
    %7 = cir.fabs %6 : !cir.double loc(#loc344)
    %8 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc345)
    %9 = cir.cmp(gt, %7, %8) : !cir.double, !cir.bool loc(#loc643)
    cir.brcond %9 ^bb4, ^bb5 loc(#loc644)
  ^bb4:  // pred: ^bb3
    %10 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc350)
    %11 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc351)
    %12 = cir.cast(floating, %11 : !cir.float), !cir.double loc(#loc351)
    %13 = cir.binop(div, %10, %12) : !cir.double loc(#loc645)
    %14 = cir.cast(float_to_int, %13 : !cir.double), !s32i loc(#loc645)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc639)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc352)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc353)
    cir.br ^bb6 loc(#loc348)
  ^bb5:  // pred: ^bb3
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc354)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc354)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc355)
    cir.br ^bb6 loc(#loc343)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc343)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc339)
  ^bb8:  // 2 preds: ^bb1, ^bb7
    cir.br ^bb9 loc(#loc339)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc332)
  } loc(#loc637)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc647)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc648)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc649)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc650)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc651)
    %5 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc652)
    %6 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc370)
    cir.store %6, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc653)
    cir.br ^bb1 loc(#loc654)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc363)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc363)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc649)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc365)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc365)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc650)
    cir.br ^bb2 loc(#loc655)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc655)
  ^bb3:  // pred: ^bb34
    %11 = cir.const #cir.int<0> : !s32i loc(#loc376)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc376)
    cir.brcond %12 ^bb4, ^bb35 loc(#loc376)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc656)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<2> : !s32i loc(#loc379)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc380)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc381)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc382)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc657)
    cir.br ^bb6 loc(#loc658)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc387)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc388)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc388)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc659)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc660)
  ^bb7:  // pred: ^bb6
    cir.br ^bb35 loc(#loc390)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc386)
  ^bb9:  // pred: ^bb8
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc661)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc393)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc662)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc663)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc398)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc398)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc664)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc400)
    %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc400)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc84)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc85)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc665)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc402)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc402)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc403)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc666)
    cir.br ^bb10 loc(#loc667)
  ^bb10:  // pred: ^bb9
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc408)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc668)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc669)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc669)
    %39 = cir.call @bind(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc413)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc414)
    %41 = cir.unary(minus, %40) nsw : !s32i, !s32i loc(#loc414)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc670)
    cir.brcond %42 ^bb11, ^bb12 loc(#loc671)
  ^bb11:  // pred: ^bb10
    cir.br ^bb35 loc(#loc416)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc407)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc672)
  ^bb14:  // pred: ^bb13
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc419)
    %44 = cir.const #cir.int<5> : !s32i loc(#loc420)
    %45 = cir.call @listen(%43, %44) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc421)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc422)
    %47 = cir.unary(minus, %46) nsw : !s32i, !s32i loc(#loc422)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc673)
    cir.brcond %48 ^bb15, ^bb16 loc(#loc674)
  ^bb15:  // pred: ^bb14
    cir.br ^bb35 loc(#loc424)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc418)
  ^bb17:  // pred: ^bb16
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc425)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc426)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc427)
    %52 = cir.call @accept(%49, %50, %51) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc428)
    cir.store %52, %3 : !s32i, !cir.ptr<!s32i> loc(#loc675)
    cir.br ^bb18 loc(#loc676)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc433)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc434)
    %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc434)
    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc677)
    cir.brcond %56 ^bb19, ^bb20 loc(#loc678)
  ^bb19:  // pred: ^bb18
    cir.br ^bb35 loc(#loc436)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc432)
  ^bb21:  // pred: ^bb20
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc437)
    %58 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc438)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc438)
    %60 = cir.const #cir.int<20> : !s32i loc(#loc439)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc440)
    %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc439)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc439)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc441)
    %65 = cir.call @recv(%57, %59, %63, %64) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc442)
    %66 = cir.cast(integral, %65 : !s64i), !s32i loc(#loc442)
    cir.store %66, %0 : !s32i, !cir.ptr<!s32i> loc(#loc679)
    cir.br ^bb22 loc(#loc680)
  ^bb22:  // pred: ^bb21
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc447)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc448)
    %69 = cir.unary(minus, %68) nsw : !s32i, !s32i loc(#loc448)
    %70 = cir.cmp(eq, %67, %69) : !s32i, !cir.bool loc(#loc681)
    cir.brcond %70 ^bb23, ^bb24 loc(#loc449)
  ^bb23:  // pred: ^bb22
    %71 = cir.const #true loc(#loc449)
    cir.br ^bb29(%71 : !cir.bool) loc(#loc449)
  ^bb24:  // pred: ^bb22
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc450)
    %73 = cir.const #cir.int<0> : !s32i loc(#loc451)
    %74 = cir.cmp(eq, %72, %73) : !s32i, !cir.bool loc(#loc682)
    cir.brcond %74 ^bb25, ^bb26 loc(#loc449)
  ^bb25:  // pred: ^bb24
    %75 = cir.const #true loc(#loc449)
    cir.br ^bb27(%75 : !cir.bool) loc(#loc449)
  ^bb26:  // pred: ^bb24
    %76 = cir.const #false loc(#loc449)
    cir.br ^bb27(%76 : !cir.bool) loc(#loc449)
  ^bb27(%77: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":316:44)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc449)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29(%77 : !cir.bool) loc(#loc449)
  ^bb29(%78: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":316:44)):  // 2 preds: ^bb23, ^bb28
    cir.br ^bb30 loc(#loc449)
  ^bb30:  // pred: ^bb29
    cir.brcond %78 ^bb31, ^bb32 loc(#loc683)
  ^bb31:  // pred: ^bb30
    cir.br ^bb35 loc(#loc453)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc446)
  ^bb33:  // pred: ^bb32
    %79 = cir.const #cir.int<0> : !s32i loc(#loc454)
    %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc454)
    %81 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc455)
    %82 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc456)
    %83 = cir.ptr_stride(%82 : !cir.ptr<!s8i>, %81 : !s32i), !cir.ptr<!s8i> loc(#loc456)
    cir.store %80, %83 : !s8i, !cir.ptr<!s8i> loc(#loc684)
    %84 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc457)
    %85 = cir.call @atof(%84) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc458)
    %86 = cir.cast(floating, %85 : !cir.double), !cir.float loc(#loc458)
    cir.store %86, %5 : !cir.float, !cir.ptr<!cir.float> loc(#loc685)
    cir.br ^bb34 loc(#loc378)
  ^bb34:  // pred: ^bb33
    cir.br ^bb3 loc(#loc375)
  ^bb35:  // 6 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19, ^bb31
    cir.br ^bb36 loc(#loc375)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc686)
  ^bb37:  // pred: ^bb36
    %87 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc463)
    %88 = cir.const #cir.int<1> : !s32i loc(#loc464)
    %89 = cir.unary(minus, %88) nsw : !s32i, !s32i loc(#loc464)
    %90 = cir.cmp(ne, %87, %89) : !s32i, !cir.bool loc(#loc687)
    cir.brcond %90 ^bb38, ^bb39 loc(#loc688)
  ^bb38:  // pred: ^bb37
    %91 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc466)
    %92 = cir.call @close(%91) : (!s32i) -> !s32i loc(#loc467)
    cir.br ^bb39 loc(#loc462)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc462)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc689)
  ^bb41:  // pred: ^bb40
    %93 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc470)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc471)
    %95 = cir.unary(minus, %94) nsw : !s32i, !s32i loc(#loc471)
    %96 = cir.cmp(ne, %93, %95) : !s32i, !cir.bool loc(#loc690)
    cir.brcond %96 ^bb42, ^bb43 loc(#loc691)
  ^bb42:  // pred: ^bb41
    %97 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc473)
    %98 = cir.call @close(%97) : (!s32i) -> !s32i loc(#loc474)
    cir.br ^bb43 loc(#loc469)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc469)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc373)
  ^bb45:  // pred: ^bb44
    %99 = cir.const #cir.int<1> : !s32i loc(#loc475)
    %100 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc636)
    cir.store %99, %100 : !s32i, !cir.ptr<!s32i> loc(#loc692)
    %101 = cir.load %5 : !cir.ptr<!cir.float>, !cir.float loc(#loc477)
    cir.call @goodB2G2Sink(%101) : (!cir.float) -> () loc(#loc478)
    cir.return loc(#loc357)
  } loc(#loc646)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc693)
  cir.func internal private @goodG2BSink(%arg0: !cir.float loc(fused[#loc483, #loc484])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc696)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc695)
    cir.store %arg0, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc487)
    cir.br ^bb1 loc(#loc697)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc693)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc490)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc490)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc698)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc699)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc494)
    %6 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc495)
    %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc495)
    %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc700)
    %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc700)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc696)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc496)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc497)
    cir.br ^bb4 loc(#loc493)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc489)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc489)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc482)
  } loc(#loc694)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc702)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc502)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc703)
    %2 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc504)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc704)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc506)
    %4 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc693)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc705)
    %5 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc508)
    cir.call @goodG2BSink(%5) : (!cir.float) -> () loc(#loc509)
    cir.return loc(#loc499)
  } loc(#loc701)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_21.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":102:1)
#loc14 = loc("/usr/include/stdlib.h":103:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":47:1)
#loc18 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":47:24)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":49:1)
#loc22 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":59:1)
#loc25 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":55:13)
#loc26 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":55:44)
#loc27 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":50:1)
#loc28 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":51:5)
#loc29 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":58:5)
#loc30 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":51:8)
#loc31 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":52:5)
#loc32 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":53:9)
#loc33 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":57:9)
#loc34 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":55:32)
#loc35 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":55:40)
#loc36 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":56:26)
#loc37 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":56:13)
#loc38 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":61:1)
#loc39 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":137:1)
#loc40 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":71:9)
#loc41 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":71:13)
#loc42 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":72:9)
#loc43 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":72:28)
#loc44 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":73:9)
#loc45 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":73:31)
#loc46 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":74:9)
#loc47 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":74:31)
#loc48 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":75:9)
#loc49 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":75:41)
#loc50 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":63:5)
#loc51 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":63:11)
#loc52 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":65:12)
#loc53 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":65:5)
#loc54 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":66:5)
#loc55 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":134:5)
#loc56 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":76:9)
#loc57 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":119:17)
#loc58 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":119:16)
#loc59 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":77:9)
#loc60 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":118:9)
#loc61 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":85:35)
#loc62 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":85:44)
#loc63 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":85:57)
#loc64 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":85:28)
#loc65 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":85:13)
#loc66 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":85:68)
#loc67 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":86:13)
#loc68 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":89:13)
#loc69 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":86:17)
#loc70 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":86:33)
#loc71 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":87:13)
#loc72 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":88:17)
#loc73 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":90:20)
#loc74 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":90:21)
#loc75 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":90:30)
#loc76 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":90:33)
#loc77 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":90:47)
#loc78 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":90:13)
#loc79 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":90:48)
#loc80 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":91:34)
#loc81 = loc("/usr/include/netinet/in.h":249:5)
#loc82 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":91:13)
#loc83 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":92:39)
#loc84 = loc("/usr/include/netinet/in.h":251:20)
#loc85 = loc("/usr/include/netinet/in.h":33:15)
#loc86 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":92:13)
#loc87 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":93:38)
#loc88 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":93:32)
#loc89 = loc("/usr/include/netinet/in.h":250:15)
#loc90 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":93:13)
#loc91 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":93:46)
#loc92 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":94:13)
#loc93 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":97:13)
#loc94 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":94:22)
#loc95 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":94:54)
#loc96 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":94:55)
#loc97 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":94:64)
#loc98 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":94:78)
#loc99 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":94:17)
#loc100 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":94:84)
#loc101 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":95:13)
#loc102 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":96:17)
#loc103 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":98:13)
#loc104 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":101:13)
#loc105 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":98:24)
#loc106 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":98:38)
#loc107 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":98:17)
#loc108 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":98:57)
#loc109 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":99:13)
#loc110 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":100:17)
#loc111 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":102:35)
#loc112 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":102:49)
#loc113 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":102:55)
#loc114 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":102:28)
#loc115 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":102:13)
#loc116 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":102:59)
#loc117 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":103:13)
#loc118 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":106:13)
#loc119 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":103:17)
#loc120 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":103:33)
#loc121 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":104:13)
#loc122 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":105:17)
#loc123 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":109:31)
#loc124 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":109:45)
#loc125 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":109:58)
#loc126 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":109:76)
#loc127 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":109:79)
#loc128 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":109:26)
#loc129 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":109:13)
#loc130 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":109:80)
#loc131 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":110:13)
#loc132 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":113:13)
#loc133 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":110:17)
#loc134 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":110:31)
#loc136 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":110:47)
#loc137 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":110:61)
#loc138 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":111:13)
#loc139 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":112:17)
#loc140 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":115:39)
#loc141 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":115:25)
#loc142 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":115:13)
#loc143 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":117:32)
#loc144 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":117:27)
#loc145 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":117:13)
#loc146 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":117:43)
#loc147 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":120:9)
#loc148 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":123:9)
#loc149 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":120:13)
#loc150 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":120:29)
#loc151 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":121:9)
#loc152 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":122:26)
#loc153 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":122:13)
#loc154 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":124:9)
#loc155 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":127:9)
#loc156 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":124:13)
#loc157 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":124:29)
#loc158 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":125:9)
#loc159 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":126:26)
#loc160 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":126:13)
#loc161 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":135:17)
#loc162 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":135:5)
#loc163 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":136:13)
#loc164 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":136:5)
#loc165 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":369:1)
#loc166 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":374:1)
#loc167 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":371:5)
#loc168 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":371:14)
#loc169 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":372:5)
#loc170 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":372:14)
#loc171 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":373:5)
#loc172 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":373:13)
#loc173 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":144:1)
#loc174 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":144:29)
#loc175 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc176 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc177 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":154:19)
#loc178 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":166:23)
#loc179 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":149:1)
#loc180 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":169:1)
#loc183 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":161:13)
#loc184 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":161:44)
#loc185 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":150:1)
#loc186 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":151:5)
#loc187 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":168:5)
#loc188 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":151:8)
#loc189 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":152:5)
#loc190 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":155:5)
#loc191 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":157:5)
#loc192 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":154:9)
#loc193 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":159:9)
#loc194 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":167:9)
#loc195 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":159:17)
#loc196 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":159:25)
#loc197 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":159:12)
#loc198 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":160:9)
#loc199 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":163:9)
#loc200 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":165:9)
#loc201 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":161:32)
#loc202 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":161:40)
#loc203 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":162:26)
#loc204 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":162:13)
#loc205 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":166:13)
#loc206 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":171:1)
#loc207 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":247:1)
#loc208 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":181:9)
#loc209 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":181:13)
#loc210 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":182:9)
#loc211 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":182:28)
#loc212 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":183:9)
#loc213 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":183:31)
#loc214 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":184:9)
#loc215 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":184:31)
#loc216 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":185:9)
#loc217 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":185:41)
#loc218 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":173:5)
#loc219 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":173:11)
#loc220 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":175:12)
#loc221 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":175:5)
#loc222 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":176:5)
#loc223 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":244:5)
#loc224 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":186:9)
#loc225 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":229:17)
#loc226 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":229:16)
#loc227 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":187:9)
#loc228 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":228:9)
#loc229 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":195:35)
#loc230 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":195:44)
#loc231 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":195:57)
#loc232 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":195:28)
#loc233 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":195:13)
#loc234 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":195:68)
#loc235 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":196:13)
#loc236 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":199:13)
#loc237 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":196:17)
#loc238 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":196:33)
#loc239 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":197:13)
#loc240 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":198:17)
#loc241 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":200:20)
#loc242 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":200:21)
#loc243 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":200:30)
#loc244 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":200:33)
#loc245 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":200:47)
#loc246 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":200:13)
#loc247 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":200:48)
#loc248 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":201:34)
#loc249 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":201:13)
#loc250 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":202:39)
#loc251 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":202:13)
#loc252 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":203:38)
#loc253 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":203:32)
#loc254 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":203:13)
#loc255 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":203:46)
#loc256 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":204:13)
#loc257 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":207:13)
#loc258 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":204:22)
#loc259 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":204:54)
#loc260 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":204:55)
#loc261 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":204:64)
#loc262 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":204:78)
#loc263 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":204:17)
#loc264 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":204:84)
#loc265 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":205:13)
#loc266 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":206:17)
#loc267 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":208:13)
#loc268 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":211:13)
#loc269 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":208:24)
#loc270 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":208:38)
#loc271 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":208:17)
#loc272 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":208:57)
#loc273 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":209:13)
#loc274 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":210:17)
#loc275 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":212:35)
#loc276 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":212:49)
#loc277 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":212:55)
#loc278 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":212:28)
#loc279 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":212:13)
#loc280 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":212:59)
#loc281 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":213:13)
#loc282 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":216:13)
#loc283 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":213:17)
#loc284 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":213:33)
#loc285 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":214:13)
#loc286 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":215:17)
#loc287 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":219:31)
#loc288 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":219:45)
#loc289 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":219:58)
#loc290 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":219:76)
#loc291 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":219:79)
#loc292 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":219:26)
#loc293 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":219:13)
#loc294 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":219:80)
#loc295 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":220:13)
#loc296 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":223:13)
#loc297 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":220:17)
#loc298 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":220:31)
#loc300 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":220:47)
#loc301 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":220:61)
#loc302 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":221:13)
#loc303 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":222:17)
#loc304 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":225:39)
#loc305 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":225:25)
#loc306 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":225:13)
#loc307 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":227:32)
#loc308 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":227:27)
#loc309 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":227:13)
#loc310 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":227:43)
#loc311 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":230:9)
#loc312 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":233:9)
#loc313 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":230:13)
#loc314 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":230:29)
#loc315 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":231:9)
#loc316 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":232:26)
#loc317 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":232:13)
#loc318 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":234:9)
#loc319 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":237:9)
#loc320 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":234:13)
#loc321 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":234:29)
#loc322 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":235:9)
#loc323 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":236:26)
#loc324 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":236:13)
#loc325 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":245:22)
#loc326 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":245:5)
#loc327 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":246:18)
#loc328 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":246:5)
#loc329 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":145:1)
#loc330 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":145:29)
#loc331 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":250:1)
#loc332 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":265:1)
#loc335 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":257:13)
#loc336 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":257:44)
#loc337 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":251:1)
#loc338 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":252:5)
#loc339 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":264:5)
#loc340 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":252:8)
#loc341 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":253:5)
#loc342 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":255:9)
#loc343 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":263:9)
#loc344 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":255:17)
#loc345 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":255:25)
#loc346 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":255:12)
#loc347 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":256:9)
#loc348 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":259:9)
#loc349 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":261:9)
#loc350 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":257:32)
#loc351 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":257:40)
#loc352 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":258:26)
#loc353 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":258:13)
#loc354 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":262:23)
#loc355 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":262:13)
#loc356 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":267:1)
#loc357 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":343:1)
#loc358 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":277:9)
#loc359 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":277:13)
#loc360 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":278:9)
#loc361 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":278:28)
#loc362 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":279:9)
#loc363 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":279:31)
#loc364 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":280:9)
#loc365 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":280:31)
#loc366 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":281:9)
#loc367 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":281:41)
#loc368 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":269:5)
#loc369 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":269:11)
#loc370 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":271:12)
#loc371 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":271:5)
#loc372 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":272:5)
#loc373 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":340:5)
#loc374 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":282:9)
#loc375 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":325:17)
#loc376 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":325:16)
#loc377 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":283:9)
#loc378 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":324:9)
#loc379 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":291:35)
#loc380 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":291:44)
#loc381 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":291:57)
#loc382 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":291:28)
#loc383 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":291:13)
#loc384 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":291:68)
#loc385 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":292:13)
#loc386 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":295:13)
#loc387 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":292:17)
#loc388 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":292:33)
#loc389 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":293:13)
#loc390 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":294:17)
#loc391 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":296:20)
#loc392 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":296:21)
#loc393 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":296:30)
#loc394 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":296:33)
#loc395 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":296:47)
#loc396 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":296:13)
#loc397 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":296:48)
#loc398 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":297:34)
#loc399 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":297:13)
#loc400 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":298:39)
#loc401 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":298:13)
#loc402 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":299:38)
#loc403 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":299:32)
#loc404 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":299:13)
#loc405 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":299:46)
#loc406 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":300:13)
#loc407 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":303:13)
#loc408 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":300:22)
#loc409 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":300:54)
#loc410 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":300:55)
#loc411 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":300:64)
#loc412 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":300:78)
#loc413 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":300:17)
#loc414 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":300:84)
#loc415 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":301:13)
#loc416 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":302:17)
#loc417 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":304:13)
#loc418 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":307:13)
#loc419 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":304:24)
#loc420 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":304:38)
#loc421 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":304:17)
#loc422 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":304:57)
#loc423 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":305:13)
#loc424 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":306:17)
#loc425 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":308:35)
#loc426 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":308:49)
#loc427 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":308:55)
#loc428 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":308:28)
#loc429 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":308:13)
#loc430 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":308:59)
#loc431 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":309:13)
#loc432 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":312:13)
#loc433 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":309:17)
#loc434 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":309:33)
#loc435 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":310:13)
#loc436 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":311:17)
#loc437 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":315:31)
#loc438 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":315:45)
#loc439 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":315:58)
#loc440 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":315:76)
#loc441 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":315:79)
#loc442 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":315:26)
#loc443 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":315:13)
#loc444 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":315:80)
#loc445 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":316:13)
#loc446 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":319:13)
#loc447 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":316:17)
#loc448 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":316:31)
#loc450 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":316:47)
#loc451 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":316:61)
#loc452 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":317:13)
#loc453 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":318:17)
#loc454 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":321:39)
#loc455 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":321:25)
#loc456 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":321:13)
#loc457 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":323:32)
#loc458 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":323:27)
#loc459 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":323:13)
#loc460 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":323:43)
#loc461 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":326:9)
#loc462 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":329:9)
#loc463 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":326:13)
#loc464 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":326:29)
#loc465 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":327:9)
#loc466 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":328:26)
#loc467 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":328:13)
#loc468 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":330:9)
#loc469 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":333:9)
#loc470 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":330:13)
#loc471 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":330:29)
#loc472 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":331:9)
#loc473 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":332:26)
#loc474 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":332:13)
#loc475 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":341:22)
#loc476 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":341:5)
#loc477 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":342:18)
#loc478 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":342:5)
#loc479 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":146:1)
#loc480 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":146:28)
#loc481 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":346:1)
#loc482 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":356:1)
#loc485 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":352:13)
#loc486 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":352:44)
#loc487 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":347:1)
#loc488 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":348:5)
#loc489 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":355:5)
#loc490 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":348:8)
#loc491 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":349:5)
#loc492 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":350:9)
#loc493 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":354:9)
#loc494 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":352:32)
#loc495 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":352:40)
#loc496 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":353:26)
#loc497 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":353:13)
#loc498 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":358:1)
#loc499 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":367:1)
#loc500 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":360:5)
#loc501 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":360:11)
#loc502 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":362:12)
#loc503 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":362:5)
#loc504 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":364:12)
#loc505 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":364:5)
#loc506 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":365:21)
#loc507 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":365:5)
#loc508 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":366:17)
#loc509 = loc("CWE369_Divide_by_Zero__float_listenSocket_21.c":366:5)
#loc510 = loc(fused[#loc1, #loc2])
#loc511 = loc(fused[#loc3, #loc4])
#loc512 = loc(fused[#loc5, #loc6])
#loc513 = loc(fused[#loc7, #loc8])
#loc514 = loc(fused[#loc9, #loc10])
#loc515 = loc(fused[#loc11, #loc12])
#loc516 = loc(fused[#loc13, #loc14])
#loc517 = loc(fused[#loc15, #loc16])
#loc518 = loc(fused[#loc17, #loc18])
#loc519 = loc(fused[#loc19, #loc20])
#loc520 = loc(fused[#loc21, #loc22])
#loc522 = loc(fused[#loc25, #loc26])
#loc523 = loc(fused[#loc28, #loc29])
#loc524 = loc(fused[#loc31, #loc29])
#loc525 = loc(fused[#loc32, #loc33])
#loc526 = loc(fused[#loc34, #loc35])
#loc527 = loc(fused[#loc38, #loc39])
#loc528 = loc(fused[#loc40, #loc41])
#loc529 = loc(fused[#loc42, #loc43])
#loc530 = loc(fused[#loc44, #loc45])
#loc531 = loc(fused[#loc46, #loc47])
#loc532 = loc(fused[#loc48, #loc49])
#loc533 = loc(fused[#loc50, #loc51])
#loc534 = loc(fused[#loc53, #loc52])
#loc535 = loc(fused[#loc54, #loc55])
#loc536 = loc(fused[#loc56, #loc57])
#loc537 = loc(fused[#loc59, #loc60])
#loc538 = loc(fused[#loc65, #loc66])
#loc539 = loc(fused[#loc67, #loc68])
#loc540 = loc(fused[#loc69, #loc70])
#loc541 = loc(fused[#loc71, #loc68])
#loc542 = loc(fused[#loc73, #loc74])
#loc543 = loc(fused[#loc76, #loc77])
#loc544 = loc(fused[#loc78, #loc79])
#loc545 = loc(fused[#loc82, #loc80])
#loc546 = loc(fused[#loc86, #loc83])
#loc547 = loc(fused[#loc90, #loc91])
#loc548 = loc(fused[#loc92, #loc93])
#loc549 = loc(fused[#loc95, #loc96])
#loc550 = loc(fused[#loc97, #loc98])
#loc551 = loc(fused[#loc99, #loc100])
#loc552 = loc(fused[#loc101, #loc93])
#loc553 = loc(fused[#loc103, #loc104])
#loc554 = loc(fused[#loc107, #loc108])
#loc555 = loc(fused[#loc109, #loc104])
#loc556 = loc(fused[#loc115, #loc116])
#loc557 = loc(fused[#loc117, #loc118])
#loc558 = loc(fused[#loc119, #loc120])
#loc559 = loc(fused[#loc121, #loc118])
#loc560 = loc(fused[#loc129, #loc130])
#loc561 = loc(fused[#loc131, #loc132])
#loc562 = loc(fused[#loc133, #loc134])
#loc563 = loc(fused[#loc136, #loc137])
#loc564 = loc(fused[#loc138, #loc132])
#loc565 = loc(fused[#loc142, #loc140])
#loc566 = loc(fused[#loc145, #loc146])
#loc567 = loc(fused[#loc147, #loc148])
#loc568 = loc(fused[#loc149, #loc150])
#loc569 = loc(fused[#loc151, #loc148])
#loc570 = loc(fused[#loc154, #loc155])
#loc571 = loc(fused[#loc156, #loc157])
#loc572 = loc(fused[#loc158, #loc155])
#loc573 = loc(fused[#loc162, #loc161])
#loc574 = loc(fused[#loc165, #loc166])
#loc575 = loc(fused[#loc167, #loc168])
#loc576 = loc(fused[#loc169, #loc170])
#loc577 = loc(fused[#loc171, #loc172])
#loc578 = loc(fused[#loc173, #loc174])
#loc579 = loc(fused[#loc175, #loc176])
#loc580 = loc(fused[#loc179, #loc180])
#loc582 = loc(fused[#loc183, #loc184])
#loc583 = loc(fused[#loc186, #loc187])
#loc584 = loc(fused[#loc189, #loc190, #loc191, #loc187])
#loc585 = loc(fused[#loc193, #loc194])
#loc586 = loc(fused[#loc197, #loc196])
#loc587 = loc(fused[#loc198, #loc199, #loc200, #loc194])
#loc588 = loc(fused[#loc201, #loc202])
#loc589 = loc(fused[#loc206, #loc207])
#loc590 = loc(fused[#loc208, #loc209])
#loc591 = loc(fused[#loc210, #loc211])
#loc592 = loc(fused[#loc212, #loc213])
#loc593 = loc(fused[#loc214, #loc215])
#loc594 = loc(fused[#loc216, #loc217])
#loc595 = loc(fused[#loc218, #loc219])
#loc596 = loc(fused[#loc221, #loc220])
#loc597 = loc(fused[#loc222, #loc223])
#loc598 = loc(fused[#loc224, #loc225])
#loc599 = loc(fused[#loc227, #loc228])
#loc600 = loc(fused[#loc233, #loc234])
#loc601 = loc(fused[#loc235, #loc236])
#loc602 = loc(fused[#loc237, #loc238])
#loc603 = loc(fused[#loc239, #loc236])
#loc604 = loc(fused[#loc241, #loc242])
#loc605 = loc(fused[#loc244, #loc245])
#loc606 = loc(fused[#loc246, #loc247])
#loc607 = loc(fused[#loc249, #loc248])
#loc608 = loc(fused[#loc251, #loc250])
#loc609 = loc(fused[#loc254, #loc255])
#loc610 = loc(fused[#loc256, #loc257])
#loc611 = loc(fused[#loc259, #loc260])
#loc612 = loc(fused[#loc261, #loc262])
#loc613 = loc(fused[#loc263, #loc264])
#loc614 = loc(fused[#loc265, #loc257])
#loc615 = loc(fused[#loc267, #loc268])
#loc616 = loc(fused[#loc271, #loc272])
#loc617 = loc(fused[#loc273, #loc268])
#loc618 = loc(fused[#loc279, #loc280])
#loc619 = loc(fused[#loc281, #loc282])
#loc620 = loc(fused[#loc283, #loc284])
#loc621 = loc(fused[#loc285, #loc282])
#loc622 = loc(fused[#loc293, #loc294])
#loc623 = loc(fused[#loc295, #loc296])
#loc624 = loc(fused[#loc297, #loc298])
#loc625 = loc(fused[#loc300, #loc301])
#loc626 = loc(fused[#loc302, #loc296])
#loc627 = loc(fused[#loc306, #loc304])
#loc628 = loc(fused[#loc309, #loc310])
#loc629 = loc(fused[#loc311, #loc312])
#loc630 = loc(fused[#loc313, #loc314])
#loc631 = loc(fused[#loc315, #loc312])
#loc632 = loc(fused[#loc318, #loc319])
#loc633 = loc(fused[#loc320, #loc321])
#loc634 = loc(fused[#loc322, #loc319])
#loc635 = loc(fused[#loc326, #loc325])
#loc636 = loc(fused[#loc329, #loc330])
#loc637 = loc(fused[#loc331, #loc332])
#loc639 = loc(fused[#loc335, #loc336])
#loc640 = loc(fused[#loc338, #loc339])
#loc641 = loc(fused[#loc341, #loc339])
#loc642 = loc(fused[#loc342, #loc343])
#loc643 = loc(fused[#loc346, #loc345])
#loc644 = loc(fused[#loc347, #loc348, #loc349, #loc343])
#loc645 = loc(fused[#loc350, #loc351])
#loc646 = loc(fused[#loc356, #loc357])
#loc647 = loc(fused[#loc358, #loc359])
#loc648 = loc(fused[#loc360, #loc361])
#loc649 = loc(fused[#loc362, #loc363])
#loc650 = loc(fused[#loc364, #loc365])
#loc651 = loc(fused[#loc366, #loc367])
#loc652 = loc(fused[#loc368, #loc369])
#loc653 = loc(fused[#loc371, #loc370])
#loc654 = loc(fused[#loc372, #loc373])
#loc655 = loc(fused[#loc374, #loc375])
#loc656 = loc(fused[#loc377, #loc378])
#loc657 = loc(fused[#loc383, #loc384])
#loc658 = loc(fused[#loc385, #loc386])
#loc659 = loc(fused[#loc387, #loc388])
#loc660 = loc(fused[#loc389, #loc386])
#loc661 = loc(fused[#loc391, #loc392])
#loc662 = loc(fused[#loc394, #loc395])
#loc663 = loc(fused[#loc396, #loc397])
#loc664 = loc(fused[#loc399, #loc398])
#loc665 = loc(fused[#loc401, #loc400])
#loc666 = loc(fused[#loc404, #loc405])
#loc667 = loc(fused[#loc406, #loc407])
#loc668 = loc(fused[#loc409, #loc410])
#loc669 = loc(fused[#loc411, #loc412])
#loc670 = loc(fused[#loc413, #loc414])
#loc671 = loc(fused[#loc415, #loc407])
#loc672 = loc(fused[#loc417, #loc418])
#loc673 = loc(fused[#loc421, #loc422])
#loc674 = loc(fused[#loc423, #loc418])
#loc675 = loc(fused[#loc429, #loc430])
#loc676 = loc(fused[#loc431, #loc432])
#loc677 = loc(fused[#loc433, #loc434])
#loc678 = loc(fused[#loc435, #loc432])
#loc679 = loc(fused[#loc443, #loc444])
#loc680 = loc(fused[#loc445, #loc446])
#loc681 = loc(fused[#loc447, #loc448])
#loc682 = loc(fused[#loc450, #loc451])
#loc683 = loc(fused[#loc452, #loc446])
#loc684 = loc(fused[#loc456, #loc454])
#loc685 = loc(fused[#loc459, #loc460])
#loc686 = loc(fused[#loc461, #loc462])
#loc687 = loc(fused[#loc463, #loc464])
#loc688 = loc(fused[#loc465, #loc462])
#loc689 = loc(fused[#loc468, #loc469])
#loc690 = loc(fused[#loc470, #loc471])
#loc691 = loc(fused[#loc472, #loc469])
#loc692 = loc(fused[#loc476, #loc475])
#loc693 = loc(fused[#loc479, #loc480])
#loc694 = loc(fused[#loc481, #loc482])
#loc696 = loc(fused[#loc485, #loc486])
#loc697 = loc(fused[#loc488, #loc489])
#loc698 = loc(fused[#loc491, #loc489])
#loc699 = loc(fused[#loc492, #loc493])
#loc700 = loc(fused[#loc494, #loc495])
#loc701 = loc(fused[#loc498, #loc499])
#loc702 = loc(fused[#loc500, #loc501])
#loc703 = loc(fused[#loc503, #loc502])
#loc704 = loc(fused[#loc505, #loc504])
#loc705 = loc(fused[#loc507, #loc506])
