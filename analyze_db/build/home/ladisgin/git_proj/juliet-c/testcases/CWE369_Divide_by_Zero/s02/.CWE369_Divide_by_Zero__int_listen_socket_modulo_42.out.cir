!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc19 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":44:22)
#loc20 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":44:26)
#loc173 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":257:10)
#loc174 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":257:14)
#loc175 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":257:20)
#loc176 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":257:32)
#loc193 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":151:26)
#loc194 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":151:30)
#loc334 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":133:26)
#loc335 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":133:30)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc364 = loc(fused[#loc19, #loc20])
#loc422 = loc(fused[#loc173, #loc174])
#loc423 = loc(fused[#loc175, #loc176])
#loc428 = loc(fused[#loc193, #loc194])
#loc482 = loc(fused[#loc334, #loc335])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc355)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc356)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc357)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc358)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc359)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc360)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc361)
  cir.func private @close(!s32i) -> !s32i loc(#loc362)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc19, #loc20])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc364)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc18)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc21)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc366)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc367)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc368)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc369)
      %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc370)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc29)
      %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc29)
      cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc368)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc31)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc31)
      cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc369)
      cir.scope {
        cir.do {
          %13 = cir.const #cir.int<2> : !s32i loc(#loc36)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc37)
          %15 = cir.const #cir.int<6> : !s32i loc(#loc38)
          %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc39)
          cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc372)
          cir.scope {
            %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc44)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc45)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc45)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc374)
            cir.if %61 {
              cir.break loc(#loc47)
            } loc(#loc375)
          } loc(#loc373)
          %17 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc376)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc50)
          %19 = cir.const #cir.int<16> : !u64i loc(#loc377)
          cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc378)
          %20 = cir.const #cir.int<2> : !s32i loc(#loc55)
          %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc55)
          %22 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc56)
          cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc379)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc58)
          %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc58)
          %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc59)
          %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc60)
          cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc380)
          %27 = cir.const #cir.int<27015> : !s32i loc(#loc62)
          %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc62)
          %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc63)
          %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
          cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc381)
          cir.scope {
            %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc69)
            %59 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc383)
            %60 = cir.const #cir.int<16> : !u64i loc(#loc384)
            %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc384)
            %62 = cir.call @bind(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc74)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc75)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc75)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc385)
            cir.if %65 {
              cir.break loc(#loc77)
            } loc(#loc386)
          } loc(#loc382)
          cir.scope {
            %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc80)
            %59 = cir.const #cir.int<5> : !s32i loc(#loc81)
            %60 = cir.call @listen(%58, %59) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc82)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc83)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc83)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc388)
            cir.if %63 {
              cir.break loc(#loc85)
            } loc(#loc389)
          } loc(#loc387)
          %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc86)
          %32 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc87)
          %33 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc88)
          %34 = cir.call @accept(%31, %32, %33) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc89)
          cir.store %34, %7 : !s32i, !cir.ptr<!s32i> loc(#loc390)
          cir.scope {
            %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc94)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc95)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc95)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc392)
            cir.if %61 {
              cir.break loc(#loc97)
            } loc(#loc393)
          } loc(#loc391)
          %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc98)
          %36 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc99)
          %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc99)
          %38 = cir.const #cir.int<3> : !s32i loc(#loc100)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc100)
          %40 = cir.const #cir.int<4> : !u64i loc(#loc100)
          %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc100)
          %42 = cir.const #cir.int<2> : !s32i loc(#loc100)
          %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc100)
          %44 = cir.binop(add, %41, %43) : !u64i loc(#loc100)
          %45 = cir.const #cir.int<1> : !s32i loc(#loc101)
          %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc101)
          %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc394)
          %48 = cir.const #cir.int<0> : !s32i loc(#loc102)
          %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc103)
          %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc103)
          cir.store %50, %4 : !s32i, !cir.ptr<!s32i> loc(#loc395)
          cir.scope {
            %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc108)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc109)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc109)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc397)
            %62 = cir.ternary(%61, true {
              %63 = cir.const #true loc(#loc110)
              cir.yield %63 : !cir.bool loc(#loc110)
            }, false {
              %63 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc111)
              %64 = cir.const #cir.int<0> : !s32i loc(#loc112)
              %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc398)
              %66 = cir.ternary(%65, true {
                %67 = cir.const #true loc(#loc110)
                cir.yield %67 : !cir.bool loc(#loc110)
              }, false {
                %67 = cir.const #false loc(#loc110)
                cir.yield %67 : !cir.bool loc(#loc110)
              }) : (!cir.bool) -> !cir.bool loc(#loc110)
              cir.yield %66 : !cir.bool loc(#loc110)
            }) : (!cir.bool) -> !cir.bool loc(#loc110)
            cir.if %62 {
              cir.break loc(#loc114)
            } loc(#loc399)
          } loc(#loc396)
          %51 = cir.const #cir.int<0> : !s32i loc(#loc115)
          %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc115)
          %53 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc116)
          %54 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
          %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc117)
          cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc400)
          %56 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
          %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc119)
          cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc401)
          cir.yield loc(#loc35)
        } while {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc122)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc122)
          cir.condition(%14) loc(#loc122)
        } loc(#loc371)
      } loc(#loc371)
      cir.scope {
        %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc125)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc126)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc126)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc403)
        cir.if %16 {
          %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc128)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc129)
        } loc(#loc404)
      } loc(#loc402)
      cir.scope {
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc132)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc133)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc133)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc406)
        cir.if %16 {
          %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc135)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc136)
        } loc(#loc407)
      } loc(#loc405)
    } loc(#loc365)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc408)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc408)
    cir.return %3 : !s32i loc(#loc408)
  } loc(#loc363)
  cir.func private @printIntLine(!s32i) loc(#loc409)
  cir.func no_proto @CWE369_Divide_by_Zero__int_listen_socket_modulo_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc411)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc146)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc412)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    %4 = cir.call @badSource(%3) : (!s32i) -> !s32i loc(#loc149)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc413)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc152)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %7 = cir.binop(rem, %5, %6) : !s32i loc(#loc414)
    cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc154)
    cir.return loc(#loc142)
  } loc(#loc410)
  cir.func no_proto @CWE369_Divide_by_Zero__int_listen_socket_modulo_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc416)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc157)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc417)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc159)
    cir.return loc(#loc156)
  } loc(#loc415)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc418)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc419)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc420)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc170)
  cir.func @main(%arg0: !s32i loc(fused[#loc173, #loc174]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc175, #loc176])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc422)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc423)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc172)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc177)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc178)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc179)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc179)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc180)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc167)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc167)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc181)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_listen_socket_modulo_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc424)
    cir.call @CWE369_Divide_by_Zero__int_listen_socket_modulo_42_good() : () -> () loc(#loc182)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc168)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc168)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc169)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc185)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_listen_socket_modulo_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc425)
    cir.call @CWE369_Divide_by_Zero__int_listen_socket_modulo_42_bad() : () -> () loc(#loc186)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc170)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc188)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc189)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc426)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc426)
    cir.return %17 : !s32i loc(#loc426)
  } loc(#loc421)
  cir.func internal private @goodB2GSource(%arg0: !s32i loc(fused[#loc193, #loc194])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc428)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc192)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc195)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc430)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc431)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc432)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc433)
      %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc434)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc203)
      %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc203)
      cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc432)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc205)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc205)
      cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc433)
      cir.scope {
        cir.do {
          %13 = cir.const #cir.int<2> : !s32i loc(#loc210)
          %14 = cir.const #cir.int<1> : !s32i loc(#loc211)
          %15 = cir.const #cir.int<6> : !s32i loc(#loc212)
          %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc213)
          cir.store %16, %6 : !s32i, !cir.ptr<!s32i> loc(#loc436)
          cir.scope {
            %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc218)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc219)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc219)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc438)
            cir.if %61 {
              cir.break loc(#loc221)
            } loc(#loc439)
          } loc(#loc437)
          %17 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc440)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc224)
          %19 = cir.const #cir.int<16> : !u64i loc(#loc441)
          cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc442)
          %20 = cir.const #cir.int<2> : !s32i loc(#loc229)
          %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc229)
          %22 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc56)
          cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc443)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc231)
          %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc231)
          %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc59)
          %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc60)
          cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc444)
          %27 = cir.const #cir.int<27015> : !s32i loc(#loc233)
          %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc233)
          %29 = cir.call @htons(%28) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc234)
          %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
          cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc445)
          cir.scope {
            %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc239)
            %59 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc447)
            %60 = cir.const #cir.int<16> : !u64i loc(#loc448)
            %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc448)
            %62 = cir.call @bind(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc244)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc245)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc245)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc449)
            cir.if %65 {
              cir.break loc(#loc247)
            } loc(#loc450)
          } loc(#loc446)
          cir.scope {
            %58 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc250)
            %59 = cir.const #cir.int<5> : !s32i loc(#loc251)
            %60 = cir.call @listen(%58, %59) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc252)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc253)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc253)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc452)
            cir.if %63 {
              cir.break loc(#loc255)
            } loc(#loc453)
          } loc(#loc451)
          %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc256)
          %32 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc257)
          %33 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc258)
          %34 = cir.call @accept(%31, %32, %33) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc259)
          cir.store %34, %7 : !s32i, !cir.ptr<!s32i> loc(#loc454)
          cir.scope {
            %58 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc264)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc265)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc265)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc456)
            cir.if %61 {
              cir.break loc(#loc267)
            } loc(#loc457)
          } loc(#loc455)
          %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc268)
          %36 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc269)
          %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc269)
          %38 = cir.const #cir.int<3> : !s32i loc(#loc270)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc270)
          %40 = cir.const #cir.int<4> : !u64i loc(#loc270)
          %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc270)
          %42 = cir.const #cir.int<2> : !s32i loc(#loc270)
          %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc270)
          %44 = cir.binop(add, %41, %43) : !u64i loc(#loc270)
          %45 = cir.const #cir.int<1> : !s32i loc(#loc271)
          %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc271)
          %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc458)
          %48 = cir.const #cir.int<0> : !s32i loc(#loc272)
          %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc273)
          %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc273)
          cir.store %50, %4 : !s32i, !cir.ptr<!s32i> loc(#loc459)
          cir.scope {
            %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc278)
            %59 = cir.const #cir.int<1> : !s32i loc(#loc279)
            %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc279)
            %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc461)
            %62 = cir.ternary(%61, true {
              %63 = cir.const #true loc(#loc280)
              cir.yield %63 : !cir.bool loc(#loc280)
            }, false {
              %63 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc281)
              %64 = cir.const #cir.int<0> : !s32i loc(#loc282)
              %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc462)
              %66 = cir.ternary(%65, true {
                %67 = cir.const #true loc(#loc280)
                cir.yield %67 : !cir.bool loc(#loc280)
              }, false {
                %67 = cir.const #false loc(#loc280)
                cir.yield %67 : !cir.bool loc(#loc280)
              }) : (!cir.bool) -> !cir.bool loc(#loc280)
              cir.yield %66 : !cir.bool loc(#loc280)
            }) : (!cir.bool) -> !cir.bool loc(#loc280)
            cir.if %62 {
              cir.break loc(#loc284)
            } loc(#loc463)
          } loc(#loc460)
          %51 = cir.const #cir.int<0> : !s32i loc(#loc285)
          %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc285)
          %53 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc286)
          %54 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc287)
          %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc287)
          cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc464)
          %56 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc288)
          %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc289)
          cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc465)
          cir.yield loc(#loc209)
        } while {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc292)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc292)
          cir.condition(%14) loc(#loc292)
        } loc(#loc435)
      } loc(#loc435)
      cir.scope {
        %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc295)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc296)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc296)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc467)
        cir.if %16 {
          %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc298)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc299)
        } loc(#loc468)
      } loc(#loc466)
      cir.scope {
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc302)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc303)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc303)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc470)
        cir.if %16 {
          %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc305)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc306)
        } loc(#loc471)
      } loc(#loc469)
    } loc(#loc429)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc307)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc472)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc472)
    cir.return %3 : !s32i loc(#loc472)
  } loc(#loc427)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc309)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc474)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc314)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc315)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc475)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc317)
    %4 = cir.call @goodB2GSource(%3) : (!s32i) -> !s32i loc(#loc318)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc476)
    cir.scope {
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc323)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc324)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc478)
      cir.if %7 {
        %8 = cir.const #cir.int<100> : !s32i loc(#loc328)
        %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc329)
        %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc480)
        cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc330)
      } else {
        %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc309)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc309)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc331)
      } loc(#loc479)
    } loc(#loc477)
    cir.return loc(#loc311)
  } loc(#loc473)
  cir.func internal private @goodG2BSource(%arg0: !s32i loc(fused[#loc334, #loc335])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc482)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc333)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    %2 = cir.const #cir.int<7> : !s32i loc(#loc337)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc483)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc339)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc484)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc484)
    cir.return %4 : !s32i loc(#loc484)
  } loc(#loc481)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc486)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc345)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc346)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc487)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc348)
    %4 = cir.call @goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc349)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc488)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc352)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc353)
    %7 = cir.binop(rem, %5, %6) : !s32i loc(#loc489)
    cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc354)
    cir.return loc(#loc342)
  } loc(#loc485)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":44:1)
#loc18 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":116:1)
#loc21 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":45:1)
#loc22 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":46:5)
#loc23 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":114:5)
#loc24 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":51:9)
#loc25 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":51:13)
#loc26 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":52:9)
#loc27 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":52:28)
#loc28 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":53:9)
#loc29 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":53:31)
#loc30 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":54:9)
#loc31 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":54:31)
#loc32 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":55:9)
#loc33 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":55:41)
#loc34 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":56:9)
#loc35 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":99:17)
#loc36 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":66:35)
#loc37 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":66:44)
#loc38 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":66:57)
#loc39 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":66:28)
#loc40 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":66:13)
#loc41 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":66:68)
#loc42 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":67:13)
#loc43 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":70:13)
#loc44 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":67:17)
#loc45 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":67:33)
#loc46 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":68:13)
#loc47 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":69:17)
#loc48 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":71:20)
#loc49 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":71:21)
#loc50 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":71:30)
#loc51 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":71:33)
#loc52 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":71:47)
#loc53 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":71:13)
#loc54 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":71:48)
#loc55 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":72:34)
#loc56 = loc("/usr/include/netinet/in.h":249:5)
#loc57 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":72:13)
#loc58 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":73:39)
#loc59 = loc("/usr/include/netinet/in.h":251:20)
#loc60 = loc("/usr/include/netinet/in.h":33:15)
#loc61 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":73:13)
#loc62 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":74:38)
#loc63 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":74:32)
#loc64 = loc("/usr/include/netinet/in.h":250:15)
#loc65 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":74:13)
#loc66 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":74:46)
#loc67 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":75:13)
#loc68 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":78:13)
#loc69 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":75:22)
#loc70 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":75:54)
#loc71 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":75:55)
#loc72 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":75:64)
#loc73 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":75:78)
#loc74 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":75:17)
#loc75 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":75:84)
#loc76 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":76:13)
#loc77 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":77:17)
#loc78 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":79:13)
#loc79 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":82:13)
#loc80 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":79:24)
#loc81 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":79:38)
#loc82 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":79:17)
#loc83 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":79:57)
#loc84 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":80:13)
#loc85 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":81:17)
#loc86 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":83:35)
#loc87 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":83:49)
#loc88 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":83:55)
#loc89 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":83:28)
#loc90 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":83:13)
#loc91 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":83:59)
#loc92 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":84:13)
#loc93 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":87:13)
#loc94 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":84:17)
#loc95 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":84:33)
#loc96 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":85:13)
#loc97 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":86:17)
#loc98 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":89:31)
#loc99 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":89:45)
#loc100 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":89:58)
#loc101 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":89:76)
#loc102 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":89:79)
#loc103 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":89:26)
#loc104 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":89:13)
#loc105 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":89:80)
#loc106 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":90:13)
#loc107 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":93:13)
#loc108 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":90:17)
#loc109 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":90:31)
#loc110 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":90:44)
#loc111 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":90:47)
#loc112 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":90:61)
#loc113 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":91:13)
#loc114 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":92:17)
#loc115 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":95:39)
#loc116 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":95:25)
#loc117 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":95:13)
#loc118 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":97:25)
#loc119 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":97:20)
#loc120 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":97:13)
#loc121 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":97:36)
#loc122 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":99:16)
#loc123 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":100:9)
#loc124 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":103:9)
#loc125 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":100:13)
#loc126 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":100:29)
#loc127 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":101:9)
#loc128 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":102:26)
#loc129 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":102:13)
#loc130 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":104:9)
#loc131 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":107:9)
#loc132 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":104:13)
#loc133 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":104:29)
#loc134 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":105:9)
#loc135 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":106:26)
#loc136 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":106:13)
#loc137 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":115:12)
#loc138 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":115:5)
#loc139 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc140 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc141 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":118:1)
#loc142 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":126:1)
#loc143 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":120:5)
#loc144 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":120:9)
#loc145 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":122:13)
#loc146 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":122:12)
#loc147 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":122:5)
#loc148 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":123:22)
#loc149 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":123:12)
#loc150 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":123:5)
#loc151 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":123:26)
#loc152 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":125:18)
#loc153 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":125:24)
#loc154 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":125:5)
#loc155 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":242:1)
#loc156 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":246:1)
#loc157 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":244:5)
#loc158 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":244:13)
#loc159 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":245:5)
#loc160 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":245:13)
#loc161 = loc("/usr/include/stdlib.h":575:1)
#loc162 = loc("/usr/include/stdlib.h":575:41)
#loc163 = loc("/usr/include/time.h":76:1)
#loc164 = loc("/usr/include/time.h":76:38)
#loc165 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc166 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc167 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":262:15)
#loc168 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":264:15)
#loc169 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":267:15)
#loc170 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":269:15)
#loc171 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":257:1)
#loc172 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":272:1)
#loc177 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":258:1)
#loc178 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":260:27)
#loc179 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":260:22)
#loc180 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":260:5)
#loc181 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":262:5)
#loc182 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":263:5)
#loc183 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":263:61)
#loc184 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":264:5)
#loc185 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":267:5)
#loc186 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":268:5)
#loc187 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":268:60)
#loc188 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":269:5)
#loc189 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":271:12)
#loc190 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":271:5)
#loc191 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":151:1)
#loc192 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":223:1)
#loc195 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":152:1)
#loc196 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":153:5)
#loc197 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":221:5)
#loc198 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":158:9)
#loc199 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":158:13)
#loc200 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":159:9)
#loc201 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":159:28)
#loc202 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":160:9)
#loc203 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":160:31)
#loc204 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":161:9)
#loc205 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":161:31)
#loc206 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":162:9)
#loc207 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":162:41)
#loc208 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":163:9)
#loc209 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":206:17)
#loc210 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":173:35)
#loc211 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":173:44)
#loc212 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":173:57)
#loc213 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":173:28)
#loc214 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":173:13)
#loc215 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":173:68)
#loc216 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":174:13)
#loc217 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":177:13)
#loc218 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":174:17)
#loc219 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":174:33)
#loc220 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":175:13)
#loc221 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":176:17)
#loc222 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":178:20)
#loc223 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":178:21)
#loc224 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":178:30)
#loc225 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":178:33)
#loc226 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":178:47)
#loc227 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":178:13)
#loc228 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":178:48)
#loc229 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":179:34)
#loc230 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":179:13)
#loc231 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":180:39)
#loc232 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":180:13)
#loc233 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":181:38)
#loc234 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":181:32)
#loc235 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":181:13)
#loc236 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":181:46)
#loc237 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":182:13)
#loc238 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":185:13)
#loc239 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":182:22)
#loc240 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":182:54)
#loc241 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":182:55)
#loc242 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":182:64)
#loc243 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":182:78)
#loc244 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":182:17)
#loc245 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":182:84)
#loc246 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":183:13)
#loc247 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":184:17)
#loc248 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":186:13)
#loc249 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":189:13)
#loc250 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":186:24)
#loc251 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":186:38)
#loc252 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":186:17)
#loc253 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":186:57)
#loc254 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":187:13)
#loc255 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":188:17)
#loc256 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":190:35)
#loc257 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":190:49)
#loc258 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":190:55)
#loc259 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":190:28)
#loc260 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":190:13)
#loc261 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":190:59)
#loc262 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":191:13)
#loc263 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":194:13)
#loc264 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":191:17)
#loc265 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":191:33)
#loc266 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":192:13)
#loc267 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":193:17)
#loc268 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":196:31)
#loc269 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":196:45)
#loc270 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":196:58)
#loc271 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":196:76)
#loc272 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":196:79)
#loc273 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":196:26)
#loc274 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":196:13)
#loc275 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":196:80)
#loc276 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":197:13)
#loc277 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":200:13)
#loc278 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":197:17)
#loc279 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":197:31)
#loc280 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":197:44)
#loc281 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":197:47)
#loc282 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":197:61)
#loc283 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":198:13)
#loc284 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":199:17)
#loc285 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":202:39)
#loc286 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":202:25)
#loc287 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":202:13)
#loc288 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":204:25)
#loc289 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":204:20)
#loc290 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":204:13)
#loc291 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":204:36)
#loc292 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":206:16)
#loc293 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":207:9)
#loc294 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":210:9)
#loc295 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":207:13)
#loc296 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":207:29)
#loc297 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":208:9)
#loc298 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":209:26)
#loc299 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":209:13)
#loc300 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":211:9)
#loc301 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":214:9)
#loc302 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":211:13)
#loc303 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":211:29)
#loc304 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":212:9)
#loc305 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":213:26)
#loc306 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":213:13)
#loc307 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":222:12)
#loc308 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":222:5)
#loc309 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":238:19)
#loc310 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":225:1)
#loc311 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":240:1)
#loc312 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":227:5)
#loc313 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":227:9)
#loc314 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":229:13)
#loc315 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":229:12)
#loc316 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":229:5)
#loc317 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":230:26)
#loc318 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":230:12)
#loc319 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":230:5)
#loc320 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":230:30)
#loc321 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":232:5)
#loc322 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":239:5)
#loc323 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":232:9)
#loc324 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":232:17)
#loc325 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":233:5)
#loc326 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":235:5)
#loc327 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":237:5)
#loc328 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":234:22)
#loc329 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":234:28)
#loc330 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":234:9)
#loc331 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":238:9)
#loc332 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":133:1)
#loc333 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":138:1)
#loc336 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":134:1)
#loc337 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":136:12)
#loc338 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":136:5)
#loc339 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":137:12)
#loc340 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":137:5)
#loc341 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":140:1)
#loc342 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":148:1)
#loc343 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":142:5)
#loc344 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":142:9)
#loc345 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":144:13)
#loc346 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":144:12)
#loc347 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":144:5)
#loc348 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":145:26)
#loc349 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":145:12)
#loc350 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":145:5)
#loc351 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":145:30)
#loc352 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":147:18)
#loc353 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":147:24)
#loc354 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_42.c":147:5)
#loc355 = loc(fused[#loc1, #loc2])
#loc356 = loc(fused[#loc3, #loc4])
#loc357 = loc(fused[#loc5, #loc6])
#loc358 = loc(fused[#loc7, #loc8])
#loc359 = loc(fused[#loc9, #loc10])
#loc360 = loc(fused[#loc11, #loc12])
#loc361 = loc(fused[#loc13, #loc14])
#loc362 = loc(fused[#loc15, #loc16])
#loc363 = loc(fused[#loc17, #loc18])
#loc365 = loc(fused[#loc22, #loc23])
#loc366 = loc(fused[#loc24, #loc25])
#loc367 = loc(fused[#loc26, #loc27])
#loc368 = loc(fused[#loc28, #loc29])
#loc369 = loc(fused[#loc30, #loc31])
#loc370 = loc(fused[#loc32, #loc33])
#loc371 = loc(fused[#loc34, #loc35])
#loc372 = loc(fused[#loc40, #loc41])
#loc373 = loc(fused[#loc42, #loc43])
#loc374 = loc(fused[#loc44, #loc45])
#loc375 = loc(fused[#loc46, #loc43])
#loc376 = loc(fused[#loc48, #loc49])
#loc377 = loc(fused[#loc51, #loc52])
#loc378 = loc(fused[#loc53, #loc54])
#loc379 = loc(fused[#loc57, #loc55])
#loc380 = loc(fused[#loc61, #loc58])
#loc381 = loc(fused[#loc65, #loc66])
#loc382 = loc(fused[#loc67, #loc68])
#loc383 = loc(fused[#loc70, #loc71])
#loc384 = loc(fused[#loc72, #loc73])
#loc385 = loc(fused[#loc74, #loc75])
#loc386 = loc(fused[#loc76, #loc68])
#loc387 = loc(fused[#loc78, #loc79])
#loc388 = loc(fused[#loc82, #loc83])
#loc389 = loc(fused[#loc84, #loc79])
#loc390 = loc(fused[#loc90, #loc91])
#loc391 = loc(fused[#loc92, #loc93])
#loc392 = loc(fused[#loc94, #loc95])
#loc393 = loc(fused[#loc96, #loc93])
#loc394 = loc(fused[#loc100, #loc101])
#loc395 = loc(fused[#loc104, #loc105])
#loc396 = loc(fused[#loc106, #loc107])
#loc397 = loc(fused[#loc108, #loc109])
#loc398 = loc(fused[#loc111, #loc112])
#loc399 = loc(fused[#loc113, #loc107])
#loc400 = loc(fused[#loc117, #loc115])
#loc401 = loc(fused[#loc120, #loc121])
#loc402 = loc(fused[#loc123, #loc124])
#loc403 = loc(fused[#loc125, #loc126])
#loc404 = loc(fused[#loc127, #loc124])
#loc405 = loc(fused[#loc130, #loc131])
#loc406 = loc(fused[#loc132, #loc133])
#loc407 = loc(fused[#loc134, #loc131])
#loc408 = loc(fused[#loc138, #loc137])
#loc409 = loc(fused[#loc139, #loc140])
#loc410 = loc(fused[#loc141, #loc142])
#loc411 = loc(fused[#loc143, #loc144])
#loc412 = loc(fused[#loc147, #loc145])
#loc413 = loc(fused[#loc150, #loc151])
#loc414 = loc(fused[#loc152, #loc153])
#loc415 = loc(fused[#loc155, #loc156])
#loc416 = loc(fused[#loc157, #loc158])
#loc417 = loc(fused[#loc159, #loc160])
#loc418 = loc(fused[#loc161, #loc162])
#loc419 = loc(fused[#loc163, #loc164])
#loc420 = loc(fused[#loc165, #loc166])
#loc421 = loc(fused[#loc171, #loc172])
#loc424 = loc(fused[#loc182, #loc183])
#loc425 = loc(fused[#loc186, #loc187])
#loc426 = loc(fused[#loc190, #loc189])
#loc427 = loc(fused[#loc191, #loc192])
#loc429 = loc(fused[#loc196, #loc197])
#loc430 = loc(fused[#loc198, #loc199])
#loc431 = loc(fused[#loc200, #loc201])
#loc432 = loc(fused[#loc202, #loc203])
#loc433 = loc(fused[#loc204, #loc205])
#loc434 = loc(fused[#loc206, #loc207])
#loc435 = loc(fused[#loc208, #loc209])
#loc436 = loc(fused[#loc214, #loc215])
#loc437 = loc(fused[#loc216, #loc217])
#loc438 = loc(fused[#loc218, #loc219])
#loc439 = loc(fused[#loc220, #loc217])
#loc440 = loc(fused[#loc222, #loc223])
#loc441 = loc(fused[#loc225, #loc226])
#loc442 = loc(fused[#loc227, #loc228])
#loc443 = loc(fused[#loc230, #loc229])
#loc444 = loc(fused[#loc232, #loc231])
#loc445 = loc(fused[#loc235, #loc236])
#loc446 = loc(fused[#loc237, #loc238])
#loc447 = loc(fused[#loc240, #loc241])
#loc448 = loc(fused[#loc242, #loc243])
#loc449 = loc(fused[#loc244, #loc245])
#loc450 = loc(fused[#loc246, #loc238])
#loc451 = loc(fused[#loc248, #loc249])
#loc452 = loc(fused[#loc252, #loc253])
#loc453 = loc(fused[#loc254, #loc249])
#loc454 = loc(fused[#loc260, #loc261])
#loc455 = loc(fused[#loc262, #loc263])
#loc456 = loc(fused[#loc264, #loc265])
#loc457 = loc(fused[#loc266, #loc263])
#loc458 = loc(fused[#loc270, #loc271])
#loc459 = loc(fused[#loc274, #loc275])
#loc460 = loc(fused[#loc276, #loc277])
#loc461 = loc(fused[#loc278, #loc279])
#loc462 = loc(fused[#loc281, #loc282])
#loc463 = loc(fused[#loc283, #loc277])
#loc464 = loc(fused[#loc287, #loc285])
#loc465 = loc(fused[#loc290, #loc291])
#loc466 = loc(fused[#loc293, #loc294])
#loc467 = loc(fused[#loc295, #loc296])
#loc468 = loc(fused[#loc297, #loc294])
#loc469 = loc(fused[#loc300, #loc301])
#loc470 = loc(fused[#loc302, #loc303])
#loc471 = loc(fused[#loc304, #loc301])
#loc472 = loc(fused[#loc308, #loc307])
#loc473 = loc(fused[#loc310, #loc311])
#loc474 = loc(fused[#loc312, #loc313])
#loc475 = loc(fused[#loc316, #loc314])
#loc476 = loc(fused[#loc319, #loc320])
#loc477 = loc(fused[#loc321, #loc322])
#loc478 = loc(fused[#loc323, #loc324])
#loc479 = loc(fused[#loc325, #loc326, #loc327, #loc322])
#loc480 = loc(fused[#loc328, #loc329])
#loc481 = loc(fused[#loc332, #loc333])
#loc483 = loc(fused[#loc338, #loc337])
#loc484 = loc(fused[#loc340, #loc339])
#loc485 = loc(fused[#loc341, #loc342])
#loc486 = loc(fused[#loc343, #loc344])
#loc487 = loc(fused[#loc347, #loc345])
#loc488 = loc(fused[#loc350, #loc351])
#loc489 = loc(fused[#loc352, #loc353])
