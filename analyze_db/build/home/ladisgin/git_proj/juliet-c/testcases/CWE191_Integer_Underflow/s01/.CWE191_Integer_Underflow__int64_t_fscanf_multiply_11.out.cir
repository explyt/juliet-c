!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc61 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":172:10)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":172:14)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":172:20)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":172:32)
#loc256 = loc(fused[#loc61, #loc62])
#loc257 = loc(fused[#loc63, #loc64])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc229)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc230)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc231)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc232)
  cir.func private @printLongLongLine(!s64i) loc(#loc233)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_multiply_11_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc235)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc236)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc17)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc237)
    cir.br ^bb1 loc(#loc238)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc239)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc239)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc21)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc21)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc240)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc24)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc231)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc232)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc232)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc24)
    cir.br ^bb3 loc(#loc20)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc241)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc242)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc242)
    %15 = cir.call %14() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc28)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc28)
    cir.brcond %16 ^bb6, ^bb11 loc(#loc243)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc244)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc33)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc34)
    %20 = cir.cmp(lt, %17, %19) : !s64i, !cir.bool loc(#loc245)
    cir.brcond %20 ^bb8, ^bb9 loc(#loc246)
  ^bb8:  // pred: ^bb7
    %21 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc36)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc14)
    %23 = cir.cast(integral, %22 : !s32i), !s64i loc(#loc14)
    %24 = cir.binop(mul, %21, %23) nsw : !s64i loc(#loc36)
    cir.store %24, %0 : !s64i, !cir.ptr<!s64i> loc(#loc235)
    %25 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc37)
    cir.call @printLongLongLine(%25) : (!s64i) -> () loc(#loc38)
    cir.br ^bb9 loc(#loc32)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc32)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc27)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc27)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc12)
  } loc(#loc234)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_multiply_11_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc248)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc249)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc250)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc251)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc40)
  } loc(#loc247)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc252)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc253)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc254)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc58)
  cir.func @main(%arg0: !s32i loc(fused[#loc61, #loc62]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc63, #loc64])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc256)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc257)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc65)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc66)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc67)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc67)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc68)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc55)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %8 = cir.get_global @CWE191_Integer_Underflow__int64_t_fscanf_multiply_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc258)
    cir.call @CWE191_Integer_Underflow__int64_t_fscanf_multiply_11_good() : () -> () loc(#loc70)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %13 = cir.get_global @CWE191_Integer_Underflow__int64_t_fscanf_multiply_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc259)
    cir.call @CWE191_Integer_Underflow__int64_t_fscanf_multiply_11_bad() : () -> () loc(#loc74)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc58)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc260)
    cir.return %17 : !s32i loc(#loc260)
  } loc(#loc255)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc261)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc82)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc263)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc264)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc89)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc265)
    cir.br ^bb1 loc(#loc266)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc267)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc267)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc93)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc93)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc268)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc96)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc231)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc97)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc269)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc269)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc96)
    cir.br ^bb3 loc(#loc92)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc92)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc270)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc271)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc271)
    %15 = cir.call %14() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc102)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc102)
    cir.brcond %16 ^bb6, ^bb7 loc(#loc272)
  ^bb6:  // pred: ^bb5
    %17 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc81)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    cir.br ^bb17 loc(#loc105)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc273)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc110)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %21 = cir.cast(integral, %20 : !s32i), !s64i loc(#loc111)
    %22 = cir.cmp(lt, %19, %21) : !s64i, !cir.bool loc(#loc274)
    cir.brcond %22 ^bb9, ^bb15 loc(#loc275)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc276)
  ^bb10:  // pred: ^bb9
    %23 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc115)
    %24 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc116)
    %25 = cir.unary(minus, %24) : !s64i, !s64i loc(#loc116)
    %26 = cir.const #cir.int<1> : !s64i loc(#loc116)
    %27 = cir.binop(sub, %25, %26) nsw : !s64i loc(#loc116)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc117)
    %29 = cir.cast(integral, %28 : !s32i), !s64i loc(#loc117)
    %30 = cir.binop(div, %27, %29) : !s64i loc(#loc277)
    %31 = cir.cmp(gt, %23, %30) : !s64i, !cir.bool loc(#loc278)
    cir.brcond %31 ^bb11, ^bb12 loc(#loc279)
  ^bb11:  // pred: ^bb10
    %32 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc122)
    %33 = cir.const #cir.int<2> : !s32i loc(#loc86)
    %34 = cir.cast(integral, %33 : !s32i), !s64i loc(#loc86)
    %35 = cir.binop(mul, %32, %34) nsw : !s64i loc(#loc122)
    cir.store %35, %0 : !s64i, !cir.ptr<!s64i> loc(#loc263)
    %36 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc123)
    cir.call @printLongLongLine(%36) : (!s64i) -> () loc(#loc124)
    cir.br ^bb13 loc(#loc120)
  ^bb12:  // pred: ^bb10
    %37 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc82)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    cir.br ^bb13 loc(#loc114)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc114)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc109)
  ^bb15:  // 2 preds: ^bb8, ^bb14
    cir.br ^bb16 loc(#loc109)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc101)
  ^bb17:  // 2 preds: ^bb6, ^bb16
    cir.br ^bb18 loc(#loc101)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc84)
  } loc(#loc262)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc281)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc282)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc132)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc283)
    cir.br ^bb1 loc(#loc284)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc285)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc285)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc136)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc136)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc286)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc139)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc231)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc140)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc287)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc287)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc139)
    cir.br ^bb3 loc(#loc135)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc135)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc288)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc289)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc289)
    %15 = cir.call %14() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc145)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc145)
    cir.brcond %16 ^bb6, ^bb16 loc(#loc290)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc291)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc150)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc151)
    %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc151)
    %20 = cir.cmp(lt, %17, %19) : !s64i, !cir.bool loc(#loc292)
    cir.brcond %20 ^bb8, ^bb14 loc(#loc293)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc294)
  ^bb9:  // pred: ^bb8
    %21 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc155)
    %22 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc156)
    %23 = cir.unary(minus, %22) : !s64i, !s64i loc(#loc156)
    %24 = cir.const #cir.int<1> : !s64i loc(#loc156)
    %25 = cir.binop(sub, %23, %24) nsw : !s64i loc(#loc156)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc157)
    %27 = cir.cast(integral, %26 : !s32i), !s64i loc(#loc157)
    %28 = cir.binop(div, %25, %27) : !s64i loc(#loc295)
    %29 = cir.cmp(gt, %21, %28) : !s64i, !cir.bool loc(#loc296)
    cir.brcond %29 ^bb10, ^bb11 loc(#loc297)
  ^bb10:  // pred: ^bb9
    %30 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc162)
    %31 = cir.const #cir.int<2> : !s32i loc(#loc129)
    %32 = cir.cast(integral, %31 : !s32i), !s64i loc(#loc129)
    %33 = cir.binop(mul, %30, %32) nsw : !s64i loc(#loc162)
    cir.store %33, %0 : !s64i, !cir.ptr<!s64i> loc(#loc281)
    %34 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc163)
    cir.call @printLongLongLine(%34) : (!s64i) -> () loc(#loc164)
    cir.br ^bb12 loc(#loc160)
  ^bb11:  // pred: ^bb9
    %35 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc165)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc165)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc166)
    cir.br ^bb12 loc(#loc154)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc154)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc149)
  ^bb14:  // 2 preds: ^bb7, ^bb13
    cir.br ^bb15 loc(#loc149)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc144)
  ^bb16:  // 2 preds: ^bb5, ^bb15
    cir.br ^bb17 loc(#loc144)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc127)
  } loc(#loc280)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc299)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc300)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc173)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc301)
    cir.br ^bb1 loc(#loc302)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc303)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc303)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc177)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc177)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc304)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc182)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc182)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    cir.br ^bb4 loc(#loc180)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<2> : !s32i loc(#loc184)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc185)
    %11 = cir.cast(integral, %10 : !s32i), !s64i loc(#loc185)
    cir.store %11, %1 : !s64i, !cir.ptr<!s64i> loc(#loc305)
    cir.br ^bb4 loc(#loc176)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc176)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc306)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc307)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc307)
    %14 = cir.call %13() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc189)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc189)
    cir.brcond %15 ^bb7, ^bb12 loc(#loc308)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc309)
  ^bb8:  // pred: ^bb7
    %16 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc194)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc195)
    %18 = cir.cast(integral, %17 : !s32i), !s64i loc(#loc195)
    %19 = cir.cmp(lt, %16, %18) : !s64i, !cir.bool loc(#loc310)
    cir.brcond %19 ^bb9, ^bb10 loc(#loc311)
  ^bb9:  // pred: ^bb8
    %20 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc197)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc170)
    %22 = cir.cast(integral, %21 : !s32i), !s64i loc(#loc170)
    %23 = cir.binop(mul, %20, %22) nsw : !s64i loc(#loc197)
    cir.store %23, %0 : !s64i, !cir.ptr<!s64i> loc(#loc299)
    %24 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc198)
    cir.call @printLongLongLine(%24) : (!s64i) -> () loc(#loc199)
    cir.br ^bb10 loc(#loc193)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc193)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc188)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc188)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc168)
  } loc(#loc298)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc313)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc314)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc206)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc315)
    cir.br ^bb1 loc(#loc316)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc317)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc317)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc210)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc210)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc318)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<2> : !s32i loc(#loc213)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc214)
    %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc214)
    cir.store %9, %1 : !s64i, !cir.ptr<!s64i> loc(#loc319)
    cir.br ^bb3 loc(#loc209)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc209)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc320)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc321)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc321)
    %12 = cir.call %11() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc218)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc218)
    cir.brcond %13 ^bb6, ^bb11 loc(#loc322)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc323)
  ^bb7:  // pred: ^bb6
    %14 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc223)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc224)
    %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc224)
    %17 = cir.cmp(lt, %14, %16) : !s64i, !cir.bool loc(#loc324)
    cir.brcond %17 ^bb8, ^bb9 loc(#loc325)
  ^bb8:  // pred: ^bb7
    %18 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc226)
    %19 = cir.const #cir.int<2> : !s32i loc(#loc203)
    %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc203)
    %21 = cir.binop(mul, %18, %20) nsw : !s64i loc(#loc226)
    cir.store %21, %0 : !s64i, !cir.ptr<!s64i> loc(#loc313)
    %22 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc227)
    cir.call @printLongLongLine(%22) : (!s64i) -> () loc(#loc228)
    cir.br ^bb9 loc(#loc222)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc222)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc217)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc217)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc201)
  } loc(#loc312)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":30:24)
#loc8 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":30:28)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":23:1)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":41:1)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":37:13)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":37:37)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":25:5)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":25:13)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":26:12)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":26:5)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":27:5)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":31:5)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":27:8)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":27:26)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":28:5)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":30:9)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":30:17)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":32:5)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":40:5)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":32:8)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":32:26)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":33:5)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":34:9)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":39:9)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":34:12)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":34:19)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":35:9)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":37:30)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":38:31)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":38:13)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":155:1)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":161:1)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":157:5)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":157:14)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":158:5)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":158:14)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":159:5)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":159:14)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":160:5)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":160:14)
#loc49 = loc("/usr/include/stdlib.h":575:1)
#loc50 = loc("/usr/include/stdlib.h":575:41)
#loc51 = loc("/usr/include/time.h":76:1)
#loc52 = loc("/usr/include/time.h":76:38)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc54 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":177:15)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":179:15)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":182:15)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":184:15)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":172:1)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":187:1)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":173:1)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":175:27)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":175:22)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":175:5)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":177:5)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":178:5)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":178:63)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":179:5)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":182:5)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":183:5)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":183:62)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":184:5)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":186:12)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":186:5)
#loc79 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc80 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":60:19)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":74:27)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":48:1)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":78:1)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":69:17)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":69:41)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":50:5)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":50:13)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":51:12)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":51:5)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":52:5)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":56:5)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":52:8)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":52:26)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":53:5)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":55:9)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":55:17)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":55:24)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":55:28)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":57:5)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":77:5)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":57:8)
#loc103 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":57:27)
#loc104 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":58:5)
#loc105 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":61:5)
#loc106 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":63:5)
#loc107 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":60:9)
#loc108 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":64:9)
#loc109 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":76:9)
#loc110 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":64:12)
#loc111 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":64:19)
#loc112 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":65:9)
#loc113 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":67:13)
#loc114 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":75:13)
#loc115 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":67:17)
#loc116 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":67:25)
#loc117 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":67:35)
#loc118 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":67:36)
#loc119 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":68:13)
#loc120 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":71:13)
#loc121 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":73:13)
#loc122 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":69:34)
#loc123 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":70:35)
#loc124 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":70:17)
#loc125 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":74:17)
#loc126 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":81:1)
#loc127 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":106:1)
#loc128 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":97:17)
#loc129 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":97:41)
#loc130 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":83:5)
#loc131 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":83:13)
#loc132 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":84:12)
#loc133 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":84:5)
#loc134 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":85:5)
#loc135 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":89:5)
#loc136 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":85:8)
#loc137 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":85:26)
#loc138 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":86:5)
#loc139 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":88:9)
#loc140 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":88:17)
#loc141 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":88:24)
#loc142 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":88:28)
#loc143 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":90:5)
#loc144 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":105:5)
#loc145 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":90:8)
#loc146 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":90:26)
#loc147 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":91:5)
#loc148 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":92:9)
#loc149 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":104:9)
#loc150 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":92:12)
#loc151 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":92:19)
#loc152 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":93:9)
#loc153 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":95:13)
#loc154 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":103:13)
#loc155 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":95:17)
#loc156 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":95:25)
#loc157 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":95:35)
#loc158 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":95:36)
#loc159 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":96:13)
#loc160 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":99:13)
#loc161 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":101:13)
#loc162 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":97:34)
#loc163 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":98:35)
#loc164 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":98:17)
#loc165 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":102:27)
#loc166 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":102:17)
#loc167 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":109:1)
#loc168 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":132:1)
#loc169 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":128:13)
#loc170 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":128:37)
#loc171 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":111:5)
#loc172 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":111:13)
#loc173 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":112:12)
#loc174 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":112:5)
#loc175 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":113:5)
#loc176 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":122:5)
#loc177 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":113:8)
#loc178 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":113:27)
#loc179 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":114:5)
#loc180 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":117:5)
#loc181 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":119:5)
#loc182 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":116:19)
#loc183 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":116:9)
#loc184 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":121:17)
#loc185 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":121:16)
#loc186 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":121:9)
#loc187 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":123:5)
#loc188 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":131:5)
#loc189 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":123:8)
#loc190 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":123:26)
#loc191 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":124:5)
#loc192 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":125:9)
#loc193 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":130:9)
#loc194 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":125:12)
#loc195 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":125:19)
#loc196 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":126:9)
#loc197 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":128:30)
#loc198 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":129:31)
#loc199 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":129:13)
#loc200 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":135:1)
#loc201 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":153:1)
#loc202 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":149:13)
#loc203 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":149:37)
#loc204 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":137:5)
#loc205 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":137:13)
#loc206 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":138:12)
#loc207 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":138:5)
#loc208 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":139:5)
#loc209 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":143:5)
#loc210 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":139:8)
#loc211 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":139:26)
#loc212 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":140:5)
#loc213 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":142:17)
#loc214 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":142:16)
#loc215 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":142:9)
#loc216 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":144:5)
#loc217 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":152:5)
#loc218 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":144:8)
#loc219 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":144:26)
#loc220 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":145:5)
#loc221 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":146:9)
#loc222 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":151:9)
#loc223 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":146:12)
#loc224 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":146:19)
#loc225 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":147:9)
#loc226 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":149:30)
#loc227 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":150:31)
#loc228 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_11.c":150:13)
#loc229 = loc(fused[#loc1, #loc2])
#loc230 = loc(fused[#loc3, #loc4])
#loc231 = loc(fused[#loc5, #loc6])
#loc232 = loc(fused[#loc7, #loc8])
#loc233 = loc(fused[#loc9, #loc10])
#loc234 = loc(fused[#loc11, #loc12])
#loc235 = loc(fused[#loc13, #loc14])
#loc236 = loc(fused[#loc15, #loc16])
#loc237 = loc(fused[#loc18, #loc17])
#loc238 = loc(fused[#loc19, #loc20])
#loc239 = loc(fused[#loc21, #loc22])
#loc240 = loc(fused[#loc23, #loc20])
#loc241 = loc(fused[#loc26, #loc27])
#loc242 = loc(fused[#loc28, #loc29])
#loc243 = loc(fused[#loc30, #loc27])
#loc244 = loc(fused[#loc31, #loc32])
#loc245 = loc(fused[#loc33, #loc34])
#loc246 = loc(fused[#loc35, #loc32])
#loc247 = loc(fused[#loc39, #loc40])
#loc248 = loc(fused[#loc41, #loc42])
#loc249 = loc(fused[#loc43, #loc44])
#loc250 = loc(fused[#loc45, #loc46])
#loc251 = loc(fused[#loc47, #loc48])
#loc252 = loc(fused[#loc49, #loc50])
#loc253 = loc(fused[#loc51, #loc52])
#loc254 = loc(fused[#loc53, #loc54])
#loc255 = loc(fused[#loc59, #loc60])
#loc258 = loc(fused[#loc70, #loc71])
#loc259 = loc(fused[#loc74, #loc75])
#loc260 = loc(fused[#loc78, #loc77])
#loc261 = loc(fused[#loc79, #loc80])
#loc262 = loc(fused[#loc83, #loc84])
#loc263 = loc(fused[#loc85, #loc86])
#loc264 = loc(fused[#loc87, #loc88])
#loc265 = loc(fused[#loc90, #loc89])
#loc266 = loc(fused[#loc91, #loc92])
#loc267 = loc(fused[#loc93, #loc94])
#loc268 = loc(fused[#loc95, #loc92])
#loc269 = loc(fused[#loc98, #loc99])
#loc270 = loc(fused[#loc100, #loc101])
#loc271 = loc(fused[#loc102, #loc103])
#loc272 = loc(fused[#loc104, #loc105, #loc106, #loc101])
#loc273 = loc(fused[#loc108, #loc109])
#loc274 = loc(fused[#loc110, #loc111])
#loc275 = loc(fused[#loc112, #loc109])
#loc276 = loc(fused[#loc113, #loc114])
#loc277 = loc(fused[#loc116, #loc117])
#loc278 = loc(fused[#loc115, #loc118])
#loc279 = loc(fused[#loc119, #loc120, #loc121, #loc114])
#loc280 = loc(fused[#loc126, #loc127])
#loc281 = loc(fused[#loc128, #loc129])
#loc282 = loc(fused[#loc130, #loc131])
#loc283 = loc(fused[#loc133, #loc132])
#loc284 = loc(fused[#loc134, #loc135])
#loc285 = loc(fused[#loc136, #loc137])
#loc286 = loc(fused[#loc138, #loc135])
#loc287 = loc(fused[#loc141, #loc142])
#loc288 = loc(fused[#loc143, #loc144])
#loc289 = loc(fused[#loc145, #loc146])
#loc290 = loc(fused[#loc147, #loc144])
#loc291 = loc(fused[#loc148, #loc149])
#loc292 = loc(fused[#loc150, #loc151])
#loc293 = loc(fused[#loc152, #loc149])
#loc294 = loc(fused[#loc153, #loc154])
#loc295 = loc(fused[#loc156, #loc157])
#loc296 = loc(fused[#loc155, #loc158])
#loc297 = loc(fused[#loc159, #loc160, #loc161, #loc154])
#loc298 = loc(fused[#loc167, #loc168])
#loc299 = loc(fused[#loc169, #loc170])
#loc300 = loc(fused[#loc171, #loc172])
#loc301 = loc(fused[#loc174, #loc173])
#loc302 = loc(fused[#loc175, #loc176])
#loc303 = loc(fused[#loc177, #loc178])
#loc304 = loc(fused[#loc179, #loc180, #loc181, #loc176])
#loc305 = loc(fused[#loc186, #loc184])
#loc306 = loc(fused[#loc187, #loc188])
#loc307 = loc(fused[#loc189, #loc190])
#loc308 = loc(fused[#loc191, #loc188])
#loc309 = loc(fused[#loc192, #loc193])
#loc310 = loc(fused[#loc194, #loc195])
#loc311 = loc(fused[#loc196, #loc193])
#loc312 = loc(fused[#loc200, #loc201])
#loc313 = loc(fused[#loc202, #loc203])
#loc314 = loc(fused[#loc204, #loc205])
#loc315 = loc(fused[#loc207, #loc206])
#loc316 = loc(fused[#loc208, #loc209])
#loc317 = loc(fused[#loc210, #loc211])
#loc318 = loc(fused[#loc212, #loc209])
#loc319 = loc(fused[#loc215, #loc213])
#loc320 = loc(fused[#loc216, #loc217])
#loc321 = loc(fused[#loc218, #loc219])
#loc322 = loc(fused[#loc220, #loc217])
#loc323 = loc(fused[#loc221, #loc222])
#loc324 = loc(fused[#loc223, #loc224])
#loc325 = loc(fused[#loc225, #loc222])
