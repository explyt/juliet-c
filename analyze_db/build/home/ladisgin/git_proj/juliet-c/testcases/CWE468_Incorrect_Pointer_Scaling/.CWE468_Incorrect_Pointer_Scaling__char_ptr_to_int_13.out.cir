!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc48 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":91:10)
#loc49 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":91:14)
#loc50 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":91:20)
#loc51 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":91:32)
#loc131 = loc(fused[#loc48, #loc49])
#loc132 = loc(fused[#loc50, #loc51])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.good2.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i]> : !cir.array<!s32i x 5> loc(#loc112)
  cir.global "private" constant cir_private @__const.good1.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i]> : !cir.array<!s32i x 5> loc(#loc113)
  cir.global "private" constant cir_private @__const.CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13_bad.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i]> : !cir.array<!s32i x 5> loc(#loc114)
  cir.global "private" constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc115)
  cir.func private @printIntLine(!s32i) loc(#loc116)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc115)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc16)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc119)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["intArray"] {alignment = 16 : i64} loc(#loc114)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc122)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc123)
          %7 = cir.get_global @__const.CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13_bad.intArray : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc114)
          cir.copy %7 to %4 : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc114)
          %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc21)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc21)
          cir.store %9, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
          %10 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
          %11 = cir.const #cir.int<2> : !s32i loc(#loc25)
          %12 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc26)
          %13 = cir.load %12 : !cir.ptr<!s8i>, !s8i loc(#loc27)
          %14 = cir.cast(integral, %13 : !s8i), !s32i loc(#loc27)
          cir.store %14, %6 : !s32i, !cir.ptr<!s32i> loc(#loc123)
          %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc28)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc29)
        } loc(#loc121)
      } loc(#loc120)
    } loc(#loc118)
    cir.return loc(#loc12)
  } loc(#loc117)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc125)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc126)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    cir.return loc(#loc31)
  } loc(#loc124)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc127)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc128)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc45)
  cir.func @main(%arg0: !s32i loc(fused[#loc48, #loc49]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc50, #loc51])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc132)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc47)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc52)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc52)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc53)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc54)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc54)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc55)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc42)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %8 = cir.get_global @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13_good : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13_good() : () -> () loc(#loc57)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc43)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc44)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %13 = cir.get_global @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13_bad() : () -> () loc(#loc61)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc45)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc64)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    cir.return %17 : !s32i loc(#loc135)
  } loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc66)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc115)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc71)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc72)
      %3 = cir.cmp(ne, %1, %2) : !s32i, !cir.bool loc(#loc138)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc66)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc66)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc76)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["intArray"] {alignment = 16 : i64} loc(#loc113)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc141)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc142)
          %7 = cir.get_global @__const.good1.intArray : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc113)
          cir.copy %7 to %4 : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc113)
          %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc80)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc80)
          cir.store %9, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
          %10 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
          %11 = cir.const #cir.int<2> : !s32i loc(#loc84)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc84)
          %13 = cir.const #cir.int<4> : !u64i loc(#loc143)
          %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc144)
          %15 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %14 : !u64i), !cir.ptr<!s8i> loc(#loc87)
          %16 = cir.load %15 : !cir.ptr<!s8i>, !s8i loc(#loc88)
          %17 = cir.cast(integral, %16 : !s8i), !s32i loc(#loc88)
          cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc142)
          %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc89)
          cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc90)
        } loc(#loc140)
      } loc(#loc139)
    } loc(#loc137)
    cir.return loc(#loc68)
  } loc(#loc136)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc115)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc96)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc147)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["intArray"] {alignment = 16 : i64} loc(#loc112)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc150)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc151)
          %7 = cir.get_global @__const.good2.intArray : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc112)
          cir.copy %7 to %4 : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc112)
          %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc101)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc101)
          cir.store %9, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
          %10 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
          %11 = cir.const #cir.int<2> : !s32i loc(#loc105)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc105)
          %13 = cir.const #cir.int<4> : !u64i loc(#loc152)
          %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc153)
          %15 = cir.ptr_stride(%10 : !cir.ptr<!s8i>, %14 : !u64i), !cir.ptr<!s8i> loc(#loc108)
          %16 = cir.load %15 : !cir.ptr<!s8i>, !s8i loc(#loc109)
          %17 = cir.cast(integral, %16 : !s8i), !s32i loc(#loc109)
          cir.store %17, %6 : !s32i, !cir.ptr<!s32i> loc(#loc151)
          %18 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc110)
          cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc111)
        } loc(#loc149)
      } loc(#loc148)
    } loc(#loc146)
    cir.return loc(#loc92)
  } loc(#loc145)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":0:0)
#loc1 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":66:13)
#loc2 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":66:47)
#loc3 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":50:13)
#loc4 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":50:47)
#loc5 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":25:13)
#loc6 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":25:47)
#loc7 = loc("../../testcasesupport/std_testcase.h":111:1)
#loc8 = loc("../../testcasesupport/std_testcase.h":111:18)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc11 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":20:1)
#loc12 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":33:1)
#loc13 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":22:5)
#loc14 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":32:5)
#loc15 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":22:8)
#loc16 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":22:27)
#loc17 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":23:5)
#loc18 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":24:9)
#loc19 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":31:9)
#loc20 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":26:13)
#loc21 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":26:41)
#loc22 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":29:13)
#loc23 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":29:50)
#loc24 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":29:36)
#loc25 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":29:48)
#loc26 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":29:47)
#loc27 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":29:34)
#loc28 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":30:26)
#loc29 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":30:13)
#loc30 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":76:1)
#loc31 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":80:1)
#loc32 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":78:5)
#loc33 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":78:11)
#loc34 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":79:5)
#loc35 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":79:11)
#loc36 = loc("/usr/include/stdlib.h":575:1)
#loc37 = loc("/usr/include/stdlib.h":575:41)
#loc38 = loc("/usr/include/time.h":76:1)
#loc39 = loc("/usr/include/time.h":76:38)
#loc40 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc41 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc42 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":96:15)
#loc43 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":98:15)
#loc44 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":101:15)
#loc45 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":103:15)
#loc46 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":91:1)
#loc47 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":106:1)
#loc52 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":92:1)
#loc53 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":94:27)
#loc54 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":94:22)
#loc55 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":94:5)
#loc56 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":96:5)
#loc57 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":97:5)
#loc58 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":97:63)
#loc59 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":98:5)
#loc60 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":101:5)
#loc61 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":102:5)
#loc62 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":102:62)
#loc63 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":103:5)
#loc64 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":105:12)
#loc65 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":105:5)
#loc66 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":45:19)
#loc67 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":40:1)
#loc68 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":58:1)
#loc69 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":42:5)
#loc70 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":57:5)
#loc71 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":42:8)
#loc72 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":42:27)
#loc73 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":43:5)
#loc74 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":46:5)
#loc75 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":48:5)
#loc76 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":45:9)
#loc77 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":49:9)
#loc78 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":56:9)
#loc79 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":51:13)
#loc80 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":51:41)
#loc81 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":54:13)
#loc82 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":54:64)
#loc83 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":54:36)
#loc84 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":54:49)
#loc85 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":54:51)
#loc86 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":54:61)
#loc87 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":54:47)
#loc88 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":54:34)
#loc89 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":55:26)
#loc90 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":55:13)
#loc91 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":61:1)
#loc92 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":74:1)
#loc93 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":63:5)
#loc94 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":73:5)
#loc95 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":63:8)
#loc96 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":63:27)
#loc97 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":64:5)
#loc98 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":65:9)
#loc99 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":72:9)
#loc100 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":67:13)
#loc101 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":67:41)
#loc102 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":70:13)
#loc103 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":70:64)
#loc104 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":70:36)
#loc105 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":70:49)
#loc106 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":70:51)
#loc107 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":70:61)
#loc108 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":70:47)
#loc109 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":70:34)
#loc110 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":71:26)
#loc111 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_13.c":71:13)
#loc112 = loc(fused[#loc1, #loc2])
#loc113 = loc(fused[#loc3, #loc4])
#loc114 = loc(fused[#loc5, #loc6])
#loc115 = loc(fused[#loc7, #loc8])
#loc116 = loc(fused[#loc9, #loc10])
#loc117 = loc(fused[#loc11, #loc12])
#loc118 = loc(fused[#loc13, #loc14])
#loc119 = loc(fused[#loc15, #loc16])
#loc120 = loc(fused[#loc17, #loc14])
#loc121 = loc(fused[#loc18, #loc19])
#loc122 = loc(fused[#loc20, #loc21])
#loc123 = loc(fused[#loc22, #loc23])
#loc124 = loc(fused[#loc30, #loc31])
#loc125 = loc(fused[#loc32, #loc33])
#loc126 = loc(fused[#loc34, #loc35])
#loc127 = loc(fused[#loc36, #loc37])
#loc128 = loc(fused[#loc38, #loc39])
#loc129 = loc(fused[#loc40, #loc41])
#loc130 = loc(fused[#loc46, #loc47])
#loc133 = loc(fused[#loc57, #loc58])
#loc134 = loc(fused[#loc61, #loc62])
#loc135 = loc(fused[#loc65, #loc64])
#loc136 = loc(fused[#loc67, #loc68])
#loc137 = loc(fused[#loc69, #loc70])
#loc138 = loc(fused[#loc71, #loc72])
#loc139 = loc(fused[#loc73, #loc74, #loc75, #loc70])
#loc140 = loc(fused[#loc77, #loc78])
#loc141 = loc(fused[#loc79, #loc80])
#loc142 = loc(fused[#loc81, #loc82])
#loc143 = loc(fused[#loc85, #loc86])
#loc144 = loc(fused[#loc84, #loc86])
#loc145 = loc(fused[#loc91, #loc92])
#loc146 = loc(fused[#loc93, #loc94])
#loc147 = loc(fused[#loc95, #loc96])
#loc148 = loc(fused[#loc97, #loc94])
#loc149 = loc(fused[#loc98, #loc99])
#loc150 = loc(fused[#loc100, #loc101])
#loc151 = loc(fused[#loc102, #loc103])
#loc152 = loc(fused[#loc106, #loc107])
#loc153 = loc(fused[#loc105, #loc107])
