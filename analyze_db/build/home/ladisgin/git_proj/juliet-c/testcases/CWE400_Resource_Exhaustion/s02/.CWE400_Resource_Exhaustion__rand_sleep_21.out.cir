!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc10 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":33:21)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":33:25)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":49:13)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":164:10)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":164:14)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":164:20)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":164:32)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":64:26)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":64:30)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":74:23)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":92:13)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":98:26)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":98:30)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":103:23)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":121:13)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":127:25)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":127:29)
#true = #cir.bool<true> : !cir.bool
#loc187 = loc(fused[#loc10, #loc11])
#loc203 = loc(fused[#loc53, #loc54])
#loc204 = loc(fused[#loc55, #loc56])
#loc210 = loc(fused[#loc78, #loc79])
#loc224 = loc(fused[#loc119, #loc120])
#loc238 = loc(fused[#loc159, #loc160])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc183)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc184)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc185)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc7)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc10, #loc11])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc187)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc12)
    cir.br ^bb1 loc(#loc188)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc184)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc189)
  ^bb2:  // pred: ^bb1
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc17)
    %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc18)
    %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc7)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc19)
    cir.br ^bb3 loc(#loc14)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc14)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc9)
  } loc(#loc186)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc191)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc25)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc27)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc27)
    cir.brcond %6 ^bb1, ^bb2 loc(#loc27)
  ^bb1:  // pred: ^bb0
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc27)
    %9 = cir.const #cir.int<30> : !s32i loc(#loc27)
    %10 = cir.shift(left, %8 : !u32i, %9 : !s32i) -> !u32i loc(#loc27)
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc27)
    %13 = cir.const #cir.int<15> : !s32i loc(#loc27)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc27)
    %15 = cir.binop(xor, %10, %14) : !u32i loc(#loc27)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc27)
    %18 = cir.binop(xor, %15, %17) : !u32i loc(#loc27)
    cir.br ^bb3(%18 : !u32i) loc(#loc27)
  ^bb2:  // pred: ^bb0
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc27)
    %21 = cir.const #cir.int<30> : !s32i loc(#loc27)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc27)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc27)
    %25 = cir.const #cir.int<15> : !s32i loc(#loc27)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc27)
    %27 = cir.binop(xor, %22, %26) : !u32i loc(#loc27)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc27)
    %30 = cir.binop(xor, %27, %29) : !u32i loc(#loc27)
    %31 = cir.unary(minus, %30) : !u32i, !u32i loc(#loc27)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc27)
    %34 = cir.binop(sub, %31, %33) : !u32i loc(#loc27)
    cir.br ^bb3(%34 : !u32i) loc(#loc27)
  ^bb3(%35: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":49:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc27)
  ^bb4:  // pred: ^bb3
    %36 = cir.cast(integral, %35 : !u32i), !s32i loc(#loc27)
    cir.store %36, %0 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %38 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc184)
    cir.store %37, %38 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    %39 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    cir.call @badSink(%39) : (!s32i) -> () loc(#loc32)
    cir.return loc(#loc21)
  } loc(#loc190)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_sleep_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc196)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc197)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc198)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    cir.return loc(#loc34)
  } loc(#loc195)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc199)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc200)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc50)
  cir.func @main(%arg0: !s32i loc(fused[#loc53, #loc54]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc55, #loc56])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc203)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc204)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc52)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc57)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc57)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc58)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc59)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc59)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc60)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc47)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__rand_sleep_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call @CWE400_Resource_Exhaustion__rand_sleep_21_good() : () -> () loc(#loc62)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc48)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc49)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__rand_sleep_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call @CWE400_Resource_Exhaustion__rand_sleep_21_bad() : () -> () loc(#loc66)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc50)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc69)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    cir.return %17 : !s32i loc(#loc207)
  } loc(#loc202)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc75)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc78, #loc79])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc210)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc80)
    cir.br ^bb1 loc(#loc211)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc208)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc83)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc212)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc73)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    cir.br ^bb17 loc(#loc85)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc213)
  ^bb4:  // pred: ^bb3
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %8 = cir.cmp(gt, %6, %7) : !s32i, !cir.bool loc(#loc214)
    cir.brcond %8 ^bb5, ^bb10 loc(#loc92)
  ^bb5:  // pred: ^bb4
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %10 = cir.const #cir.int<2000> : !s32i loc(#loc94)
    %11 = cir.cmp(le, %9, %10) : !s32i, !cir.bool loc(#loc215)
    cir.brcond %11 ^bb6, ^bb7 loc(#loc92)
  ^bb6:  // pred: ^bb5
    %12 = cir.const #true loc(#loc92)
    cir.br ^bb8(%12 : !cir.bool) loc(#loc92)
  ^bb7:  // pred: ^bb5
    %13 = cir.const #false loc(#loc92)
    cir.br ^bb8(%13 : !cir.bool) loc(#loc92)
  ^bb8(%14: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":74:23)):  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc92)
  ^bb9:  // pred: ^bb8
    cir.br ^bb11(%14 : !cir.bool) loc(#loc92)
  ^bb10:  // pred: ^bb4
    %15 = cir.const #false loc(#loc92)
    cir.br ^bb11(%15 : !cir.bool) loc(#loc92)
  ^bb11(%16: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":74:23)):  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc92)
  ^bb12:  // pred: ^bb11
    cir.brcond %16 ^bb13, ^bb14 loc(#loc216)
  ^bb13:  // pred: ^bb12
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc98)
    %19 = cir.call @usleep(%18) : (!u32i) -> !s32i loc(#loc99)
    %20 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc74)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    cir.br ^bb15 loc(#loc96)
  ^bb14:  // pred: ^bb12
    %22 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc75)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    cir.br ^bb15 loc(#loc89)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc89)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc82)
  ^bb17:  // 2 preds: ^bb2, ^bb16
    cir.br ^bb18 loc(#loc82)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc77)
  } loc(#loc209)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc218)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc107)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc109)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc109)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc109)
    cir.brcond %6 ^bb1, ^bb2 loc(#loc109)
  ^bb1:  // pred: ^bb0
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc109)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc109)
    %9 = cir.const #cir.int<30> : !s32i loc(#loc109)
    %10 = cir.shift(left, %8 : !u32i, %9 : !s32i) -> !u32i loc(#loc109)
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc109)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc109)
    %13 = cir.const #cir.int<15> : !s32i loc(#loc109)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc109)
    %15 = cir.binop(xor, %10, %14) : !u32i loc(#loc109)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc109)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc109)
    %18 = cir.binop(xor, %15, %17) : !u32i loc(#loc109)
    cir.br ^bb3(%18 : !u32i) loc(#loc109)
  ^bb2:  // pred: ^bb0
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc109)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc109)
    %21 = cir.const #cir.int<30> : !s32i loc(#loc109)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc109)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc109)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc109)
    %25 = cir.const #cir.int<15> : !s32i loc(#loc109)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc109)
    %27 = cir.binop(xor, %22, %26) : !u32i loc(#loc109)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc109)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc109)
    %30 = cir.binop(xor, %27, %29) : !u32i loc(#loc109)
    %31 = cir.unary(minus, %30) : !u32i, !u32i loc(#loc109)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc109)
    %34 = cir.binop(sub, %31, %33) : !u32i loc(#loc109)
    cir.br ^bb3(%34 : !u32i) loc(#loc109)
  ^bb3(%35: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":92:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc109)
  ^bb4:  // pred: ^bb3
    %36 = cir.cast(integral, %35 : !u32i), !s32i loc(#loc109)
    cir.store %36, %0 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %38 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc208)
    cir.store %37, %38 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    %39 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    cir.call @goodB2G1Sink(%39) : (!s32i) -> () loc(#loc114)
    cir.return loc(#loc103)
  } loc(#loc217)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc222)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc119, #loc120])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc224)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    cir.br ^bb1 loc(#loc225)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc222)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc124)
    cir.brcond %3 ^bb2, ^bb16 loc(#loc226)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc227)
  ^bb3:  // pred: ^bb2
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc228)
    cir.brcond %6 ^bb4, ^bb9 loc(#loc130)
  ^bb4:  // pred: ^bb3
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %8 = cir.const #cir.int<2000> : !s32i loc(#loc132)
    %9 = cir.cmp(le, %7, %8) : !s32i, !cir.bool loc(#loc229)
    cir.brcond %9 ^bb5, ^bb6 loc(#loc130)
  ^bb5:  // pred: ^bb4
    %10 = cir.const #true loc(#loc130)
    cir.br ^bb7(%10 : !cir.bool) loc(#loc130)
  ^bb6:  // pred: ^bb4
    %11 = cir.const #false loc(#loc130)
    cir.br ^bb7(%11 : !cir.bool) loc(#loc130)
  ^bb7(%12: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":103:23)):  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc130)
  ^bb8:  // pred: ^bb7
    cir.br ^bb10(%12 : !cir.bool) loc(#loc130)
  ^bb9:  // pred: ^bb3
    %13 = cir.const #false loc(#loc130)
    cir.br ^bb10(%13 : !cir.bool) loc(#loc130)
  ^bb10(%14: !cir.bool loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":103:23)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc130)
  ^bb11:  // pred: ^bb10
    cir.brcond %14 ^bb12, ^bb13 loc(#loc230)
  ^bb12:  // pred: ^bb11
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %16 = cir.cast(integral, %15 : !s32i), !u32i loc(#loc136)
    %17 = cir.call @usleep(%16) : (!u32i) -> !s32i loc(#loc137)
    %18 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc138)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc138)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    cir.br ^bb14 loc(#loc134)
  ^bb13:  // pred: ^bb11
    %20 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc140)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc141)
    cir.br ^bb14 loc(#loc127)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc127)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc123)
  ^bb16:  // 2 preds: ^bb1, ^bb15
    cir.br ^bb17 loc(#loc123)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc118)
  } loc(#loc223)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc232)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc147)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc149)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc149)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc149)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc149)
    cir.brcond %6 ^bb1, ^bb2 loc(#loc149)
  ^bb1:  // pred: ^bb0
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc149)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc149)
    %9 = cir.const #cir.int<30> : !s32i loc(#loc149)
    %10 = cir.shift(left, %8 : !u32i, %9 : !s32i) -> !u32i loc(#loc149)
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc149)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc149)
    %13 = cir.const #cir.int<15> : !s32i loc(#loc149)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc149)
    %15 = cir.binop(xor, %10, %14) : !u32i loc(#loc149)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc149)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc149)
    %18 = cir.binop(xor, %15, %17) : !u32i loc(#loc149)
    cir.br ^bb3(%18 : !u32i) loc(#loc149)
  ^bb2:  // pred: ^bb0
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc149)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc149)
    %21 = cir.const #cir.int<30> : !s32i loc(#loc149)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc149)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc149)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc149)
    %25 = cir.const #cir.int<15> : !s32i loc(#loc149)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc149)
    %27 = cir.binop(xor, %22, %26) : !u32i loc(#loc149)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc149)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc149)
    %30 = cir.binop(xor, %27, %29) : !u32i loc(#loc149)
    %31 = cir.unary(minus, %30) : !u32i, !u32i loc(#loc149)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc149)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc149)
    %34 = cir.binop(sub, %31, %33) : !u32i loc(#loc149)
    cir.br ^bb3(%34 : !u32i) loc(#loc149)
  ^bb3(%35: !u32i loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":121:13)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc149)
  ^bb4:  // pred: ^bb3
    %36 = cir.cast(integral, %35 : !u32i), !s32i loc(#loc149)
    cir.store %36, %0 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc151)
    %38 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc222)
    cir.store %37, %38 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    %39 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    cir.call @goodB2G2Sink(%39) : (!s32i) -> () loc(#loc154)
    cir.return loc(#loc143)
  } loc(#loc231)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc236)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc159, #loc160])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc238)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb1 loc(#loc239)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc236)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc164)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc164)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc240)
  ^bb2:  // pred: ^bb1
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc166)
    %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc167)
    %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc168)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc168)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc169)
    cir.br ^bb3 loc(#loc163)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc163)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc158)
  } loc(#loc237)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc242)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc175)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc177)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc236)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc182)
    cir.return loc(#loc171)
  } loc(#loc241)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_sleep_21.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":31:1)
#loc4 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":31:24)
#loc5 = loc("/usr/include/unistd.h":480:1)
#loc6 = loc("/usr/include/unistd.h":480:43)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":39:19)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":33:1)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":41:1)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":34:1)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":35:5)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":40:5)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":35:8)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":36:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":38:15)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":38:9)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":39:9)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":43:1)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":52:1)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":45:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":45:9)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":47:14)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":47:13)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":47:5)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":49:5)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":50:17)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":50:5)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":51:13)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":51:5)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":148:1)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":153:1)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":150:5)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":150:14)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":151:5)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":151:14)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":152:5)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":152:13)
#loc41 = loc("/usr/include/stdlib.h":575:1)
#loc42 = loc("/usr/include/stdlib.h":575:41)
#loc43 = loc("/usr/include/time.h":76:1)
#loc44 = loc("/usr/include/time.h":76:38)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":169:15)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":171:15)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":174:15)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":176:15)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":164:1)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":179:1)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":165:1)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":167:27)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":167:22)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":167:5)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":169:5)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":170:5)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":170:52)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":171:5)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":174:5)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":175:5)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":175:51)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":176:5)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":178:12)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":178:5)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":59:1)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":59:29)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":69:19)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":77:23)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":81:23)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":64:1)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":84:1)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":65:1)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":66:5)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":83:5)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":66:8)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":67:5)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":70:5)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":72:5)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":69:9)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":74:9)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":82:9)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":74:13)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":74:21)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":74:26)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":74:35)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":75:9)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":78:9)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":80:9)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":76:19)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":76:13)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":77:13)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":81:13)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":86:1)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":95:1)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":88:5)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":88:9)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":90:14)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":90:13)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":90:5)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":92:5)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":93:22)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":93:5)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":94:18)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":94:5)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":60:1)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":60:29)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":98:1)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":113:1)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":99:1)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":100:5)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":112:5)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":100:8)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":101:5)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":103:9)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":111:9)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":103:13)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":103:21)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":103:26)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":103:35)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":104:9)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":107:9)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":109:9)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":105:19)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":105:13)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":106:23)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":106:13)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":110:23)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":110:13)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":115:1)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":124:1)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":117:5)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":117:9)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":119:14)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":119:13)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":119:5)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":121:5)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":122:22)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":122:5)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":123:18)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":123:5)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":61:1)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":61:28)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":127:1)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":135:1)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":128:1)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":129:5)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":134:5)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":129:8)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":130:5)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":132:15)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":132:9)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":133:19)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":133:9)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":137:1)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":146:1)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":139:5)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":139:9)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":141:14)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":141:13)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":141:5)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":143:13)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":143:5)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":144:21)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":144:5)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":145:17)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_sleep_21.c":145:5)
#loc183 = loc(fused[#loc1, #loc2])
#loc184 = loc(fused[#loc3, #loc4])
#loc185 = loc(fused[#loc5, #loc6])
#loc186 = loc(fused[#loc8, #loc9])
#loc188 = loc(fused[#loc13, #loc14])
#loc189 = loc(fused[#loc16, #loc14])
#loc190 = loc(fused[#loc20, #loc21])
#loc191 = loc(fused[#loc22, #loc23])
#loc192 = loc(fused[#loc26, #loc24])
#loc193 = loc(fused[#loc28, #loc27])
#loc194 = loc(fused[#loc30, #loc29])
#loc195 = loc(fused[#loc33, #loc34])
#loc196 = loc(fused[#loc35, #loc36])
#loc197 = loc(fused[#loc37, #loc38])
#loc198 = loc(fused[#loc39, #loc40])
#loc199 = loc(fused[#loc41, #loc42])
#loc200 = loc(fused[#loc43, #loc44])
#loc201 = loc(fused[#loc45, #loc46])
#loc202 = loc(fused[#loc51, #loc52])
#loc205 = loc(fused[#loc62, #loc63])
#loc206 = loc(fused[#loc66, #loc67])
#loc207 = loc(fused[#loc70, #loc69])
#loc208 = loc(fused[#loc71, #loc72])
#loc209 = loc(fused[#loc76, #loc77])
#loc211 = loc(fused[#loc81, #loc82])
#loc212 = loc(fused[#loc84, #loc85, #loc86, #loc82])
#loc213 = loc(fused[#loc88, #loc89])
#loc214 = loc(fused[#loc90, #loc91])
#loc215 = loc(fused[#loc93, #loc94])
#loc216 = loc(fused[#loc95, #loc96, #loc97, #loc89])
#loc217 = loc(fused[#loc102, #loc103])
#loc218 = loc(fused[#loc104, #loc105])
#loc219 = loc(fused[#loc108, #loc106])
#loc220 = loc(fused[#loc110, #loc109])
#loc221 = loc(fused[#loc112, #loc111])
#loc222 = loc(fused[#loc115, #loc116])
#loc223 = loc(fused[#loc117, #loc118])
#loc225 = loc(fused[#loc122, #loc123])
#loc226 = loc(fused[#loc125, #loc123])
#loc227 = loc(fused[#loc126, #loc127])
#loc228 = loc(fused[#loc128, #loc129])
#loc229 = loc(fused[#loc131, #loc132])
#loc230 = loc(fused[#loc133, #loc134, #loc135, #loc127])
#loc231 = loc(fused[#loc142, #loc143])
#loc232 = loc(fused[#loc144, #loc145])
#loc233 = loc(fused[#loc148, #loc146])
#loc234 = loc(fused[#loc150, #loc149])
#loc235 = loc(fused[#loc152, #loc151])
#loc236 = loc(fused[#loc155, #loc156])
#loc237 = loc(fused[#loc157, #loc158])
#loc239 = loc(fused[#loc162, #loc163])
#loc240 = loc(fused[#loc165, #loc163])
#loc241 = loc(fused[#loc170, #loc171])
#loc242 = loc(fused[#loc172, #loc173])
#loc243 = loc(fused[#loc176, #loc174])
#loc244 = loc(fused[#loc178, #loc177])
#loc245 = loc(fused[#loc180, #loc179])
