!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc85)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc87)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc88)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc8)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc8)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc8)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc8)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc8)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc88)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc9)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc89)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc12)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc13)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc13)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc13)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc90)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc17)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc19)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc21)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc91)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %25 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc85)
    cir.store %24, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc92)
    %26 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc93)
    cir.call %26() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc24)
    cir.return loc(#loc4)
  } loc(#loc86)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc95)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    cir.return loc(#loc27)
  } loc(#loc94)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc96)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc97)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc99)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc100)
    %2 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc85)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc100)
    cir.br ^bb1 loc(#loc101)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc99)
    cir.store %4, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc99)
    %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc42)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc43)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %8 = cir.call @strcat(%6, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc42)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb2 loc(#loc41)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc35)
  } loc(#loc98)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc102)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc104)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc105)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc54)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc54)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc54)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc54)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc54)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc54)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc54)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
    %12 = cir.const #cir.int<65> : !s32i loc(#loc58)
    %13 = cir.const #cir.int<50> : !s32i loc(#loc59)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc59)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc59)
    cir.libc.memset %16 bytes from %11 set to %12 : !cir.ptr<!void>, !s32i, !u64i loc(#loc107)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc63)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc65)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc65)
    %23 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc67)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc108)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    %25 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc102)
    cir.store %24, %25 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
    %26 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc110)
    cir.call %26() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    cir.return loc(#loc50)
  } loc(#loc103)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc112)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc113)
    %2 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc102)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    cir.br ^bb1 loc(#loc114)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc112)
    cir.store %4, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc112)
    %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc80)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc81)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %8 = cir.call @strcat(%6, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc80)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    cir.br ^bb2 loc(#loc79)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc73)
  } loc(#loc111)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":21:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":21:15)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":37:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":47:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":39:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":39:12)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":40:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":40:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":41:12)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":41:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":43:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":43:18)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":43:23)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":43:27)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":43:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":43:28)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":44:19)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":44:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":44:10)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":44:14)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":44:15)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":45:74)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":45:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":46:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":46:13)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":77:1)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":80:1)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":79:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":79:13)
#loc30 = loc("/usr/include/string.h":149:1)
#loc31 = loc("/usr/include/string.h":150:14)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":26:1)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":35:1)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":30:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":30:25)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":28:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":28:19)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":29:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":34:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":32:9)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":32:16)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":32:22)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":33:19)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":33:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":22:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":22:15)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":65:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":75:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":67:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":67:12)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":68:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":68:33)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":69:12)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":69:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":71:12)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":71:18)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":71:23)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":71:26)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":71:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":71:27)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":72:18)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":72:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":72:10)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":72:13)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":72:14)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":73:78)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":73:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":74:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":74:17)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":54:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":63:1)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":58:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":58:25)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":56:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":56:19)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":57:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":62:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":60:9)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":60:16)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":60:22)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":61:19)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__src_char_alloca_cat_45.c":61:9)
#loc85 = loc(fused[#loc1, #loc2])
#loc86 = loc(fused[#loc3, #loc4])
#loc87 = loc(fused[#loc5, #loc6])
#loc88 = loc(fused[#loc7, #loc8])
#loc89 = loc(fused[#loc10, #loc9])
#loc90 = loc(fused[#loc15, #loc16])
#loc91 = loc(fused[#loc18, #loc17])
#loc92 = loc(fused[#loc23, #loc22])
#loc93 = loc(fused[#loc24, #loc25])
#loc94 = loc(fused[#loc26, #loc27])
#loc95 = loc(fused[#loc28, #loc29])
#loc96 = loc(fused[#loc30, #loc31])
#loc97 = loc(fused[#loc32, #loc33])
#loc98 = loc(fused[#loc34, #loc35])
#loc99 = loc(fused[#loc36, #loc37])
#loc100 = loc(fused[#loc38, #loc39])
#loc101 = loc(fused[#loc40, #loc41])
#loc102 = loc(fused[#loc47, #loc48])
#loc103 = loc(fused[#loc49, #loc50])
#loc104 = loc(fused[#loc51, #loc52])
#loc105 = loc(fused[#loc53, #loc54])
#loc106 = loc(fused[#loc56, #loc55])
#loc107 = loc(fused[#loc61, #loc62])
#loc108 = loc(fused[#loc64, #loc63])
#loc109 = loc(fused[#loc69, #loc68])
#loc110 = loc(fused[#loc70, #loc71])
#loc111 = loc(fused[#loc72, #loc73])
#loc112 = loc(fused[#loc74, #loc75])
#loc113 = loc(fused[#loc76, #loc77])
#loc114 = loc(fused[#loc78, #loc79])
