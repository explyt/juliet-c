!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc39)
  cir.func no_proto @CWE843_Type_Confusion__char_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc41)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc7)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc42)
    cir.scope {
      %5 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charBuffer", init] {alignment = 1 : i64} loc(#loc44)
      %6 = cir.const #cir.int<97> : !s32i loc(#loc12)
      %7 = cir.cast(integral, %6 : !s32i), !s8i loc(#loc12)
      cir.store %7, %5 : !s8i, !cir.ptr<!s8i> loc(#loc44)
      %8 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
      cir.store %8, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc46)
    } loc(#loc43)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc16)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc16)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc18)
    cir.return loc(#loc4)
  } loc(#loc40)
  cir.func no_proto @CWE843_Type_Confusion__char_01_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc48)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc21)
    cir.return loc(#loc20)
  } loc(#loc47)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc50)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc27)
    cir.store %1, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc51)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBuffer", init] {alignment = 4 : i64} loc(#loc53)
      %6 = cir.const #cir.int<8> : !s32i loc(#loc32)
      cir.store %6, %5 : !s32i, !cir.ptr<!s32i> loc(#loc53)
      %7 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc54)
      cir.store %7, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc55)
    } loc(#loc52)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc36)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc36)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc38)
    cir.return loc(#loc24)
  } loc(#loc49)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_01.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE843_Type_Confusion__char_01.c":21:1)
#loc4 = loc("CWE843_Type_Confusion__char_01.c":33:1)
#loc5 = loc("CWE843_Type_Confusion__char_01.c":23:5)
#loc6 = loc("CWE843_Type_Confusion__char_01.c":23:12)
#loc7 = loc("CWE843_Type_Confusion__char_01.c":25:12)
#loc8 = loc("CWE843_Type_Confusion__char_01.c":25:5)
#loc9 = loc("CWE843_Type_Confusion__char_01.c":26:5)
#loc10 = loc("CWE843_Type_Confusion__char_01.c":30:5)
#loc11 = loc("CWE843_Type_Confusion__char_01.c":28:9)
#loc12 = loc("CWE843_Type_Confusion__char_01.c":28:27)
#loc13 = loc("CWE843_Type_Confusion__char_01.c":29:16)
#loc14 = loc("CWE843_Type_Confusion__char_01.c":29:17)
#loc15 = loc("CWE843_Type_Confusion__char_01.c":29:9)
#loc16 = loc("CWE843_Type_Confusion__char_01.c":32:26)
#loc17 = loc("CWE843_Type_Confusion__char_01.c":32:18)
#loc18 = loc("CWE843_Type_Confusion__char_01.c":32:5)
#loc19 = loc("CWE843_Type_Confusion__char_01.c":54:1)
#loc20 = loc("CWE843_Type_Confusion__char_01.c":57:1)
#loc21 = loc("CWE843_Type_Confusion__char_01.c":56:5)
#loc22 = loc("CWE843_Type_Confusion__char_01.c":56:13)
#loc23 = loc("CWE843_Type_Confusion__char_01.c":40:1)
#loc24 = loc("CWE843_Type_Confusion__char_01.c":52:1)
#loc25 = loc("CWE843_Type_Confusion__char_01.c":42:5)
#loc26 = loc("CWE843_Type_Confusion__char_01.c":42:12)
#loc27 = loc("CWE843_Type_Confusion__char_01.c":44:12)
#loc28 = loc("CWE843_Type_Confusion__char_01.c":44:5)
#loc29 = loc("CWE843_Type_Confusion__char_01.c":45:5)
#loc30 = loc("CWE843_Type_Confusion__char_01.c":49:5)
#loc31 = loc("CWE843_Type_Confusion__char_01.c":47:9)
#loc32 = loc("CWE843_Type_Confusion__char_01.c":47:25)
#loc33 = loc("CWE843_Type_Confusion__char_01.c":48:16)
#loc34 = loc("CWE843_Type_Confusion__char_01.c":48:17)
#loc35 = loc("CWE843_Type_Confusion__char_01.c":48:9)
#loc36 = loc("CWE843_Type_Confusion__char_01.c":51:26)
#loc37 = loc("CWE843_Type_Confusion__char_01.c":51:18)
#loc38 = loc("CWE843_Type_Confusion__char_01.c":51:5)
#loc39 = loc(fused[#loc1, #loc2])
#loc40 = loc(fused[#loc3, #loc4])
#loc41 = loc(fused[#loc5, #loc6])
#loc42 = loc(fused[#loc8, #loc7])
#loc43 = loc(fused[#loc9, #loc10])
#loc44 = loc(fused[#loc11, #loc12])
#loc45 = loc(fused[#loc13, #loc14])
#loc46 = loc(fused[#loc15, #loc14])
#loc47 = loc(fused[#loc19, #loc20])
#loc48 = loc(fused[#loc21, #loc22])
#loc49 = loc(fused[#loc23, #loc24])
#loc50 = loc(fused[#loc25, #loc26])
#loc51 = loc(fused[#loc28, #loc27])
#loc52 = loc(fused[#loc29, #loc30])
#loc53 = loc(fused[#loc31, #loc32])
#loc54 = loc(fused[#loc33, #loc34])
#loc55 = loc(fused[#loc35, #loc34])
