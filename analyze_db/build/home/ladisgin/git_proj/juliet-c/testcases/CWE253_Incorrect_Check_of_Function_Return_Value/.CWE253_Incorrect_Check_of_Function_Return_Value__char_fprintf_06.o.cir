!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fprintf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc68)
  cir.global "private" external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\0A\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc6)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fprintf failed!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06_bad() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc72)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<5> : !s32i loc(#loc14)
    %1 = cir.const #cir.int<5> : !s32i loc(#loc15)
    %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc73)
    cir.brcond %2 ^bb2, ^bb7 loc(#loc74)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc75)
  ^bb3:  // pred: ^bb2
    %3 = cir.get_global @fprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc19)
    %4 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc69)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc20)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc6)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc6)
    %10 = cir.call @fprintf(%5, %7, %9) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc19)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc76)
    cir.brcond %12 ^bb4, ^bb5 loc(#loc77)
  ^bb4:  // pred: ^bb3
    %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc23)
    cir.br ^bb5 loc(#loc18)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc18)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc13)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc13)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc11)
  } loc(#loc71)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc79)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc26)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc80)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc28)
    cir.return loc(#loc25)
  } loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc30)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc82)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<5> : !s32i loc(#loc35)
    %1 = cir.const #cir.int<5> : !s32i loc(#loc36)
    %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc83)
    cir.brcond %2 ^bb2, ^bb3 loc(#loc84)
  ^bb2:  // pred: ^bb1
    %3 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc30)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc40)
    cir.br ^bb8 loc(#loc38)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc85)
  ^bb4:  // pred: ^bb3
    %5 = cir.get_global @fprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc43)
    %6 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc69)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc44)
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc45)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc45)
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc46)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc46)
    %12 = cir.call @fprintf(%7, %9, %11) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc43)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc86)
    cir.brcond %14 ^bb5, ^bb6 loc(#loc87)
  ^bb5:  // pred: ^bb4
    %15 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc49)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc50)
    cir.br ^bb6 loc(#loc42)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc42)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc34)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc34)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc32)
  } loc(#loc81)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc89)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<5> : !s32i loc(#loc55)
    %1 = cir.const #cir.int<5> : !s32i loc(#loc56)
    %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc90)
    cir.brcond %2 ^bb2, ^bb7 loc(#loc91)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc92)
  ^bb3:  // pred: ^bb2
    %3 = cir.get_global @fprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc60)
    %4 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc69)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc61)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc62)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc62)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc63)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc63)
    %10 = cir.call @fprintf(%5, %7, %9) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc60)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc93)
    cir.brcond %12 ^bb4, ^bb5 loc(#loc94)
  ^bb4:  // pred: ^bb3
    %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc66)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    cir.br ^bb5 loc(#loc59)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc59)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc54)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc54)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc52)
  } loc(#loc88)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":0:0)
#loc1 = loc("/usr/include/stdio.h":357:1)
#loc2 = loc("/usr/include/stdio.h":358:45)
#loc3 = loc("/usr/include/stdio.h":150:1)
#loc4 = loc("/usr/include/stdio.h":150:14)
#loc5 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":35:29)
#loc6 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":35:37)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":37:23)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":29:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":40:1)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":31:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":39:5)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":31:8)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":31:27)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":32:5)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":35:9)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":38:9)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":35:13)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":35:21)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":35:50)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":36:9)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":37:13)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":77:1)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":81:1)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":79:5)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":79:11)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":80:5)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":80:11)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":52:19)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":47:1)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":62:1)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":49:5)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":61:5)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":49:8)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":49:27)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":50:5)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":53:5)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":55:5)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":52:9)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":57:9)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":60:9)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":57:13)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":57:21)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":57:29)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":57:37)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":57:49)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":58:9)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":59:23)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":59:13)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":65:1)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":75:1)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":67:5)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":74:5)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":67:8)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":67:27)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":68:5)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":70:9)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":73:9)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":70:13)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":70:21)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":70:29)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":70:37)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":70:49)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":71:9)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":72:23)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fprintf_06.c":72:13)
#loc68 = loc(fused[#loc1, #loc2])
#loc69 = loc(fused[#loc3, #loc4])
#loc70 = loc(fused[#loc7, #loc8])
#loc71 = loc(fused[#loc10, #loc11])
#loc72 = loc(fused[#loc12, #loc13])
#loc73 = loc(fused[#loc14, #loc15])
#loc74 = loc(fused[#loc16, #loc13])
#loc75 = loc(fused[#loc17, #loc18])
#loc76 = loc(fused[#loc19, #loc21])
#loc77 = loc(fused[#loc22, #loc18])
#loc78 = loc(fused[#loc24, #loc25])
#loc79 = loc(fused[#loc26, #loc27])
#loc80 = loc(fused[#loc28, #loc29])
#loc81 = loc(fused[#loc31, #loc32])
#loc82 = loc(fused[#loc33, #loc34])
#loc83 = loc(fused[#loc35, #loc36])
#loc84 = loc(fused[#loc37, #loc38, #loc39, #loc34])
#loc85 = loc(fused[#loc41, #loc42])
#loc86 = loc(fused[#loc43, #loc47])
#loc87 = loc(fused[#loc48, #loc42])
#loc88 = loc(fused[#loc51, #loc52])
#loc89 = loc(fused[#loc53, #loc54])
#loc90 = loc(fused[#loc55, #loc56])
#loc91 = loc(fused[#loc57, #loc54])
#loc92 = loc(fused[#loc58, #loc59])
#loc93 = loc(fused[#loc60, #loc64])
#loc94 = loc(fused[#loc65, #loc59])
