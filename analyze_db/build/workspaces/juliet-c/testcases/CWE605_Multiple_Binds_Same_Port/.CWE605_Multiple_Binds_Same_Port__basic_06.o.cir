!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc508)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc509)
  cir.func private @setsockopt(!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc510)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc511)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc512)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc513)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc514)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc515)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc516)
  cir.func private @close(!s32i) -> !s32i loc(#loc517)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc518)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_06_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc27)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc28)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc521)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc524)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc525)
          %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc526)
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc527)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc528)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc529)
          %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc530)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptVal", init] {alignment = 4 : i64} loc(#loc531)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptLen", init] {alignment = 4 : i64} loc(#loc532)
          %12 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc524)
          cir.store %12, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc524)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc41)
          %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc41)
          cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc528)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc43)
          %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc43)
          cir.store %16, %8 : !s32i, !cir.ptr<!s32i> loc(#loc529)
          %17 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc50)
          %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
          %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc50)
          cir.store %19, %9 : !u64i, !cir.ptr<!u64i> loc(#loc530)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc47)
          cir.store %20, %10 : !s32i, !cir.ptr<!s32i> loc(#loc531)
          %21 = cir.const #cir.int<4> : !u64i loc(#loc533)
          %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc533)
          cir.store %22, %11 : !s32i, !cir.ptr<!s32i> loc(#loc532)
          cir.scope {
            cir.do {
              cir.scope {
                %24 = cir.const #cir.int<2> : !s32i loc(#loc57)
                %25 = cir.const #cir.int<1> : !s32i loc(#loc58)
                %26 = cir.const #cir.int<6> : !s32i loc(#loc59)
                %27 = cir.call @socket(%24, %25, %26) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc60)
                cir.store %27, %7 : !s32i, !cir.ptr<!s32i> loc(#loc536)
                cir.scope {
                  %76 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc65)
                  %77 = cir.const #cir.int<1> : !s32i loc(#loc66)
                  %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc66)
                  %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc538)
                  cir.if %79 {
                    cir.break loc(#loc68)
                  } loc(#loc539)
                } loc(#loc537)
                cir.scope {
                  %76 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc71)
                  %77 = cir.const #cir.int<1> : !s32i loc(#loc72)
                  %78 = cir.const #cir.int<2> : !s32i loc(#loc73)
                  %79 = cir.cast(bitcast, %10 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc541)
                  %80 = cir.cast(bitcast, %79 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc542)
                  %81 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc77)
                  %82 = cir.cast(integral, %81 : !s32i), !u32i loc(#loc77)
                  %83 = cir.call @setsockopt(%76, %77, %78, %80, %82) : (!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc78)
                  %84 = cir.const #cir.int<0> : !s32i loc(#loc79)
                  %85 = cir.cmp(ne, %83, %84) : !s32i, !cir.bool loc(#loc543)
                  cir.if %85 {
                    cir.break loc(#loc81)
                  } loc(#loc544)
                } loc(#loc540)
                %28 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc545)
                %29 = cir.const #cir.int<0> : !s32i loc(#loc84)
                %30 = cir.const #cir.int<16> : !u64i loc(#loc546)
                cir.libc.memset %30 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc547)
                %31 = cir.const #cir.int<2> : !s32i loc(#loc89)
                %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc89)
                %33 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc90)
                cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc548)
                %34 = cir.const #cir.int<0> : !s32i loc(#loc92)
                %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc92)
                %36 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc93)
                %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc94)
                cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc549)
                %38 = cir.const #cir.int<27015> : !s32i loc(#loc96)
                %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc96)
                %40 = cir.call @htons(%39) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc97)
                %41 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc98)
                cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc550)
                cir.scope {
                  %76 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                  %77 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc552)
                  %78 = cir.const #cir.int<16> : !u64i loc(#loc553)
                  %79 = cir.cast(integral, %78 : !u64i), !u32i loc(#loc553)
                  %80 = cir.call @bind(%76, %77, %79) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc108)
                  %81 = cir.const #cir.int<1> : !s32i loc(#loc109)
                  %82 = cir.unary(minus, %81) nsw : !s32i, !s32i loc(#loc109)
                  %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc554)
                  cir.if %83 {
                    cir.break loc(#loc111)
                  } loc(#loc555)
                } loc(#loc551)
                cir.scope {
                  %76 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                  %77 = cir.const #cir.int<5> : !s32i loc(#loc115)
                  %78 = cir.call @listen(%76, %77) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc116)
                  %79 = cir.const #cir.int<1> : !s32i loc(#loc117)
                  %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc117)
                  %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc557)
                  cir.if %81 {
                    cir.break loc(#loc119)
                  } loc(#loc558)
                } loc(#loc556)
                %42 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                %43 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc121)
                %44 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc122)
                %45 = cir.call @accept(%42, %43, %44) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc123)
                cir.store %45, %8 : !s32i, !cir.ptr<!s32i> loc(#loc559)
                cir.scope {
                  %76 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc128)
                  %77 = cir.const #cir.int<1> : !s32i loc(#loc129)
                  %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc129)
                  %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc561)
                  cir.if %79 {
                    cir.break loc(#loc131)
                  } loc(#loc562)
                } loc(#loc560)
                %46 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc132)
                %47 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc133)
                %48 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc134)
                %49 = cir.ptr_stride(%47 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc135)
                %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc563)
                %51 = cir.const #cir.int<100> : !s32i loc(#loc136)
                %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc136)
                %53 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc137)
                %54 = cir.binop(sub, %52, %53) : !u64i loc(#loc564)
                %55 = cir.const #cir.int<1> : !s32i loc(#loc138)
                %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc138)
                %57 = cir.binop(sub, %54, %56) : !u64i loc(#loc565)
                %58 = cir.cast(integral, %57 : !u64i), !s32i loc(#loc565)
                %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc565)
                %60 = cir.const #cir.int<0> : !s32i loc(#loc139)
                %61 = cir.call @recv(%46, %50, %59, %60) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc140)
                %62 = cir.cast(integral, %61 : !s64i), !s32i loc(#loc140)
                cir.store %62, %4 : !s32i, !cir.ptr<!s32i> loc(#loc566)
                cir.scope {
                  %76 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc145)
                  %77 = cir.const #cir.int<1> : !s32i loc(#loc146)
                  %78 = cir.unary(minus, %77) nsw : !s32i, !s32i loc(#loc146)
                  %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc568)
                  %80 = cir.ternary(%79, true {
                    %81 = cir.const #true loc(#loc147)
                    cir.yield %81 : !cir.bool loc(#loc147)
                  }, false {
                    %81 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc148)
                    %82 = cir.const #cir.int<0> : !s32i loc(#loc149)
                    %83 = cir.cmp(eq, %81, %82) : !s32i, !cir.bool loc(#loc569)
                    %84 = cir.ternary(%83, true {
                      %85 = cir.const #true loc(#loc147)
                      cir.yield %85 : !cir.bool loc(#loc147)
                    }, false {
                      %85 = cir.const #false loc(#loc147)
                      cir.yield %85 : !cir.bool loc(#loc147)
                    }) : (!cir.bool) -> !cir.bool loc(#loc147)
                    cir.yield %84 : !cir.bool loc(#loc147)
                  }) : (!cir.bool) -> !cir.bool loc(#loc147)
                  cir.if %80 {
                    cir.break loc(#loc151)
                  } loc(#loc570)
                } loc(#loc567)
                %63 = cir.const #cir.int<0> : !s32i loc(#loc152)
                %64 = cir.cast(integral, %63 : !s32i), !s8i loc(#loc152)
                %65 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc153)
                %66 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc154)
                %67 = cir.ptr_stride(%66 : !cir.ptr<!s8i>, %65 : !s32i), !cir.ptr<!s8i> loc(#loc154)
                cir.store %64, %67 : !s8i, !cir.ptr<!s8i> loc(#loc571)
                %68 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc155)
                %69 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc156)
                %70 = cir.const #cir.int<13> : !s32i loc(#loc157)
                %71 = cir.call @strchr(%69, %70) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc155)
                cir.store %71, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc572)
                cir.scope {
                  %76 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
                  %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc162)
                  cir.if %77 {
                    %78 = cir.const #cir.int<0> : !s32i loc(#loc164)
                    %79 = cir.cast(integral, %78 : !s32i), !s8i loc(#loc164)
                    %80 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
                    cir.store %79, %80 : !s8i, !cir.ptr<!s8i> loc(#loc575)
                  } loc(#loc574)
                } loc(#loc573)
                %72 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc167)
                %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc168)
                %74 = cir.const #cir.int<10> : !s32i loc(#loc169)
                %75 = cir.call @strchr(%73, %74) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc167)
                cir.store %75, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc576)
                cir.scope {
                  %76 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
                  %77 = cir.cast(ptr_to_bool, %76 : !cir.ptr<!s8i>), !cir.bool loc(#loc174)
                  cir.if %77 {
                    %78 = cir.const #cir.int<0> : !s32i loc(#loc176)
                    %79 = cir.cast(integral, %78 : !s32i), !s8i loc(#loc176)
                    %80 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
                    cir.store %79, %80 : !s8i, !cir.ptr<!s8i> loc(#loc579)
                  } loc(#loc578)
                } loc(#loc577)
              } loc(#loc535)
              cir.yield loc(#loc54)
            } while {
              %24 = cir.const #cir.int<0> : !s32i loc(#loc179)
              %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc179)
              cir.condition(%25) loc(#loc179)
            } loc(#loc534)
          } loc(#loc534)
          cir.scope {
            %24 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc182)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc183)
            %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc183)
            %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc581)
            cir.if %27 {
              %28 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc185)
              %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc186)
            } loc(#loc582)
          } loc(#loc580)
          cir.scope {
            %24 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc189)
            %25 = cir.const #cir.int<1> : !s32i loc(#loc190)
            %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc190)
            %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc584)
            cir.if %27 {
              %28 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc192)
              %29 = cir.call @close(%28) : (!s32i) -> !s32i loc(#loc193)
            } loc(#loc585)
          } loc(#loc583)
          %23 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc194)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc195)
        } loc(#loc523)
      } loc(#loc522)
    } loc(#loc520)
    cir.return loc(#loc24)
  } loc(#loc519)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc587)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc198)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc588)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc200)
    cir.return loc(#loc197)
  } loc(#loc586)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc202)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc207)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc208)
      %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc591)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc202)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc202)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc212)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc594)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc595)
          %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc596)
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc597)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc598)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc599)
          %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc600)
          %10 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc594)
          cir.store %10, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc594)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc224)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc224)
          cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc598)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc226)
          %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc226)
          cir.store %14, %8 : !s32i, !cir.ptr<!s32i> loc(#loc599)
          %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc229)
          %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc230)
          %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc229)
          cir.store %17, %9 : !u64i, !cir.ptr<!u64i> loc(#loc600)
          cir.scope {
            cir.do {
              cir.scope {
                %19 = cir.const #cir.int<2> : !s32i loc(#loc235)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc236)
                %21 = cir.const #cir.int<6> : !s32i loc(#loc237)
                %22 = cir.call @socket(%19, %20, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc238)
                cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc603)
                cir.scope {
                  %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc243)
                  %72 = cir.const #cir.int<1> : !s32i loc(#loc244)
                  %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc244)
                  %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc605)
                  cir.if %74 {
                    cir.break loc(#loc246)
                  } loc(#loc606)
                } loc(#loc604)
                %23 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc607)
                %24 = cir.const #cir.int<0> : !s32i loc(#loc249)
                %25 = cir.const #cir.int<16> : !u64i loc(#loc608)
                cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc609)
                %26 = cir.const #cir.int<2> : !s32i loc(#loc254)
                %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc254)
                %28 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc90)
                cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc610)
                %29 = cir.const #cir.int<0> : !s32i loc(#loc256)
                %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc256)
                %31 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc93)
                %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc94)
                cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc611)
                %33 = cir.const #cir.int<27015> : !s32i loc(#loc258)
                %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc258)
                %35 = cir.call @htons(%34) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc259)
                %36 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc98)
                cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc612)
                cir.scope {
                  %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc264)
                  %72 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc614)
                  %73 = cir.const #cir.int<16> : !u64i loc(#loc615)
                  %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc615)
                  %75 = cir.call @bind(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc269)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc270)
                  %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc270)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc616)
                  cir.if %78 {
                    cir.break loc(#loc272)
                  } loc(#loc617)
                } loc(#loc613)
                cir.scope {
                  %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc275)
                  %72 = cir.const #cir.int<5> : !s32i loc(#loc276)
                  %73 = cir.call @listen(%71, %72) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc277)
                  %74 = cir.const #cir.int<1> : !s32i loc(#loc278)
                  %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc278)
                  %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc619)
                  cir.if %76 {
                    cir.break loc(#loc280)
                  } loc(#loc620)
                } loc(#loc618)
                %37 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc281)
                %38 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc282)
                %39 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc283)
                %40 = cir.call @accept(%37, %38, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc284)
                cir.store %40, %8 : !s32i, !cir.ptr<!s32i> loc(#loc621)
                cir.scope {
                  %71 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc289)
                  %72 = cir.const #cir.int<1> : !s32i loc(#loc290)
                  %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc290)
                  %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc623)
                  cir.if %74 {
                    cir.break loc(#loc292)
                  } loc(#loc624)
                } loc(#loc622)
                %41 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc293)
                %42 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc294)
                %43 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc295)
                %44 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc296)
                %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc625)
                %46 = cir.const #cir.int<100> : !s32i loc(#loc297)
                %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc297)
                %48 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc298)
                %49 = cir.binop(sub, %47, %48) : !u64i loc(#loc626)
                %50 = cir.const #cir.int<1> : !s32i loc(#loc299)
                %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc299)
                %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc627)
                %53 = cir.cast(integral, %52 : !u64i), !s32i loc(#loc627)
                %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc627)
                %55 = cir.const #cir.int<0> : !s32i loc(#loc300)
                %56 = cir.call @recv(%41, %45, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc301)
                %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc301)
                cir.store %57, %4 : !s32i, !cir.ptr<!s32i> loc(#loc628)
                cir.scope {
                  %71 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc306)
                  %72 = cir.const #cir.int<1> : !s32i loc(#loc307)
                  %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc307)
                  %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc630)
                  %75 = cir.ternary(%74, true {
                    %76 = cir.const #true loc(#loc308)
                    cir.yield %76 : !cir.bool loc(#loc308)
                  }, false {
                    %76 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc309)
                    %77 = cir.const #cir.int<0> : !s32i loc(#loc310)
                    %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc631)
                    %79 = cir.ternary(%78, true {
                      %80 = cir.const #true loc(#loc308)
                      cir.yield %80 : !cir.bool loc(#loc308)
                    }, false {
                      %80 = cir.const #false loc(#loc308)
                      cir.yield %80 : !cir.bool loc(#loc308)
                    }) : (!cir.bool) -> !cir.bool loc(#loc308)
                    cir.yield %79 : !cir.bool loc(#loc308)
                  }) : (!cir.bool) -> !cir.bool loc(#loc308)
                  cir.if %75 {
                    cir.break loc(#loc312)
                  } loc(#loc632)
                } loc(#loc629)
                %58 = cir.const #cir.int<0> : !s32i loc(#loc313)
                %59 = cir.cast(integral, %58 : !s32i), !s8i loc(#loc313)
                %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc314)
                %61 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc315)
                %62 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %60 : !s32i), !cir.ptr<!s8i> loc(#loc315)
                cir.store %59, %62 : !s8i, !cir.ptr<!s8i> loc(#loc633)
                %63 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc316)
                %64 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc317)
                %65 = cir.const #cir.int<13> : !s32i loc(#loc318)
                %66 = cir.call @strchr(%64, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc316)
                cir.store %66, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc634)
                cir.scope {
                  %71 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc323)
                  %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc323)
                  cir.if %72 {
                    %73 = cir.const #cir.int<0> : !s32i loc(#loc325)
                    %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc325)
                    %75 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc326)
                    cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc637)
                  } loc(#loc636)
                } loc(#loc635)
                %67 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc328)
                %68 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc329)
                %69 = cir.const #cir.int<10> : !s32i loc(#loc330)
                %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc328)
                cir.store %70, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc638)
                cir.scope {
                  %71 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc335)
                  %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc335)
                  cir.if %72 {
                    %73 = cir.const #cir.int<0> : !s32i loc(#loc337)
                    %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc337)
                    %75 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc338)
                    cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc641)
                  } loc(#loc640)
                } loc(#loc639)
              } loc(#loc602)
              cir.yield loc(#loc232)
            } while {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc340)
              %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc340)
              cir.condition(%20) loc(#loc340)
            } loc(#loc601)
          } loc(#loc601)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc343)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc344)
            %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc344)
            %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc643)
            cir.if %22 {
              %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc346)
              %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc347)
            } loc(#loc644)
          } loc(#loc642)
          cir.scope {
            %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc350)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc351)
            %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc351)
            %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc646)
            cir.if %22 {
              %23 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc353)
              %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc354)
            } loc(#loc647)
          } loc(#loc645)
          %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc355)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc356)
        } loc(#loc593)
      } loc(#loc592)
    } loc(#loc590)
    cir.return loc(#loc204)
  } loc(#loc589)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc361)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc362)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc650)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc653)
          %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc654)
          %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc655)
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc656)
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc657)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc658)
          %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc659)
          %10 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc653)
          cir.store %10, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc653)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc375)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc375)
          cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc657)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc377)
          %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc377)
          cir.store %14, %8 : !s32i, !cir.ptr<!s32i> loc(#loc658)
          %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc380)
          %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc381)
          %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc380)
          cir.store %17, %9 : !u64i, !cir.ptr<!u64i> loc(#loc659)
          cir.scope {
            cir.do {
              cir.scope {
                %19 = cir.const #cir.int<2> : !s32i loc(#loc386)
                %20 = cir.const #cir.int<1> : !s32i loc(#loc387)
                %21 = cir.const #cir.int<6> : !s32i loc(#loc388)
                %22 = cir.call @socket(%19, %20, %21) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc389)
                cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc662)
                cir.scope {
                  %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc394)
                  %72 = cir.const #cir.int<1> : !s32i loc(#loc395)
                  %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc395)
                  %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc664)
                  cir.if %74 {
                    cir.break loc(#loc397)
                  } loc(#loc665)
                } loc(#loc663)
                %23 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc666)
                %24 = cir.const #cir.int<0> : !s32i loc(#loc400)
                %25 = cir.const #cir.int<16> : !u64i loc(#loc667)
                cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc668)
                %26 = cir.const #cir.int<2> : !s32i loc(#loc405)
                %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc405)
                %28 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc90)
                cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc669)
                %29 = cir.const #cir.int<0> : !s32i loc(#loc407)
                %30 = cir.cast(integral, %29 : !s32i), !u32i loc(#loc407)
                %31 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc93)
                %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc94)
                cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc670)
                %33 = cir.const #cir.int<27015> : !s32i loc(#loc409)
                %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc409)
                %35 = cir.call @htons(%34) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc410)
                %36 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc98)
                cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc671)
                cir.scope {
                  %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc415)
                  %72 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc673)
                  %73 = cir.const #cir.int<16> : !u64i loc(#loc674)
                  %74 = cir.cast(integral, %73 : !u64i), !u32i loc(#loc674)
                  %75 = cir.call @bind(%71, %72, %74) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc420)
                  %76 = cir.const #cir.int<1> : !s32i loc(#loc421)
                  %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc421)
                  %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc675)
                  cir.if %78 {
                    cir.break loc(#loc423)
                  } loc(#loc676)
                } loc(#loc672)
                cir.scope {
                  %71 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc426)
                  %72 = cir.const #cir.int<5> : !s32i loc(#loc427)
                  %73 = cir.call @listen(%71, %72) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc428)
                  %74 = cir.const #cir.int<1> : !s32i loc(#loc429)
                  %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc429)
                  %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc678)
                  cir.if %76 {
                    cir.break loc(#loc431)
                  } loc(#loc679)
                } loc(#loc677)
                %37 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc432)
                %38 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc433)
                %39 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc434)
                %40 = cir.call @accept(%37, %38, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc435)
                cir.store %40, %8 : !s32i, !cir.ptr<!s32i> loc(#loc680)
                cir.scope {
                  %71 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc440)
                  %72 = cir.const #cir.int<1> : !s32i loc(#loc441)
                  %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc441)
                  %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc682)
                  cir.if %74 {
                    cir.break loc(#loc443)
                  } loc(#loc683)
                } loc(#loc681)
                %41 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc444)
                %42 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc445)
                %43 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc446)
                %44 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc447)
                %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc684)
                %46 = cir.const #cir.int<100> : !s32i loc(#loc448)
                %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc448)
                %48 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc449)
                %49 = cir.binop(sub, %47, %48) : !u64i loc(#loc685)
                %50 = cir.const #cir.int<1> : !s32i loc(#loc450)
                %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc450)
                %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc686)
                %53 = cir.cast(integral, %52 : !u64i), !s32i loc(#loc686)
                %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc686)
                %55 = cir.const #cir.int<0> : !s32i loc(#loc451)
                %56 = cir.call @recv(%41, %45, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc452)
                %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc452)
                cir.store %57, %4 : !s32i, !cir.ptr<!s32i> loc(#loc687)
                cir.scope {
                  %71 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc457)
                  %72 = cir.const #cir.int<1> : !s32i loc(#loc458)
                  %73 = cir.unary(minus, %72) nsw : !s32i, !s32i loc(#loc458)
                  %74 = cir.cmp(eq, %71, %73) : !s32i, !cir.bool loc(#loc689)
                  %75 = cir.ternary(%74, true {
                    %76 = cir.const #true loc(#loc459)
                    cir.yield %76 : !cir.bool loc(#loc459)
                  }, false {
                    %76 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc460)
                    %77 = cir.const #cir.int<0> : !s32i loc(#loc461)
                    %78 = cir.cmp(eq, %76, %77) : !s32i, !cir.bool loc(#loc690)
                    %79 = cir.ternary(%78, true {
                      %80 = cir.const #true loc(#loc459)
                      cir.yield %80 : !cir.bool loc(#loc459)
                    }, false {
                      %80 = cir.const #false loc(#loc459)
                      cir.yield %80 : !cir.bool loc(#loc459)
                    }) : (!cir.bool) -> !cir.bool loc(#loc459)
                    cir.yield %79 : !cir.bool loc(#loc459)
                  }) : (!cir.bool) -> !cir.bool loc(#loc459)
                  cir.if %75 {
                    cir.break loc(#loc463)
                  } loc(#loc691)
                } loc(#loc688)
                %58 = cir.const #cir.int<0> : !s32i loc(#loc464)
                %59 = cir.cast(integral, %58 : !s32i), !s8i loc(#loc464)
                %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc465)
                %61 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc466)
                %62 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %60 : !s32i), !cir.ptr<!s8i> loc(#loc466)
                cir.store %59, %62 : !s8i, !cir.ptr<!s8i> loc(#loc692)
                %63 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc467)
                %64 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc468)
                %65 = cir.const #cir.int<13> : !s32i loc(#loc469)
                %66 = cir.call @strchr(%64, %65) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc467)
                cir.store %66, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc693)
                cir.scope {
                  %71 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc474)
                  %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc474)
                  cir.if %72 {
                    %73 = cir.const #cir.int<0> : !s32i loc(#loc476)
                    %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc476)
                    %75 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc477)
                    cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc696)
                  } loc(#loc695)
                } loc(#loc694)
                %67 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc479)
                %68 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc480)
                %69 = cir.const #cir.int<10> : !s32i loc(#loc481)
                %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc479)
                cir.store %70, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc697)
                cir.scope {
                  %71 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc486)
                  %72 = cir.cast(ptr_to_bool, %71 : !cir.ptr<!s8i>), !cir.bool loc(#loc486)
                  cir.if %72 {
                    %73 = cir.const #cir.int<0> : !s32i loc(#loc488)
                    %74 = cir.cast(integral, %73 : !s32i), !s8i loc(#loc488)
                    %75 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc489)
                    cir.store %74, %75 : !s8i, !cir.ptr<!s8i> loc(#loc700)
                  } loc(#loc699)
                } loc(#loc698)
              } loc(#loc661)
              cir.yield loc(#loc383)
            } while {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc491)
              %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc491)
              cir.condition(%20) loc(#loc491)
            } loc(#loc660)
          } loc(#loc660)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc494)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc495)
            %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc495)
            %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc702)
            cir.if %22 {
              %23 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc497)
              %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc498)
            } loc(#loc703)
          } loc(#loc701)
          cir.scope {
            %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc501)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc502)
            %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc502)
            %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc705)
            cir.if %22 {
              %23 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc504)
              %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc505)
            } loc(#loc706)
          } loc(#loc704)
          %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc506)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc507)
        } loc(#loc652)
      } loc(#loc651)
    } loc(#loc649)
    cir.return loc(#loc358)
  } loc(#loc648)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_06.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":277:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":278:52)
#loc7 = loc("/usr/include/netinet/in.h":402:1)
#loc8 = loc("/usr/include/netinet/in.h":403:40)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc17 = loc("/usr/include/string.h":246:1)
#loc18 = loc("/usr/include/string.h":247:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":49:1)
#loc24 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":146:1)
#loc25 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":51:5)
#loc26 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":145:5)
#loc27 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":51:8)
#loc28 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":51:27)
#loc29 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":52:5)
#loc30 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":53:9)
#loc31 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":144:9)
#loc32 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":54:13)
#loc33 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":54:30)
#loc34 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":59:13)
#loc35 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":59:17)
#loc36 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":60:13)
#loc37 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":60:32)
#loc38 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":61:13)
#loc39 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":61:19)
#loc40 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":62:13)
#loc41 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":62:35)
#loc42 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":63:13)
#loc43 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":63:35)
#loc44 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":64:13)
#loc45 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":64:41)
#loc46 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":69:13)
#loc47 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":69:27)
#loc48 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":70:13)
#loc49 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":70:37)
#loc50 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":64:30)
#loc51 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":64:37)
#loc52 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":70:27)
#loc53 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":72:13)
#loc54 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":128:21)
#loc55 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":73:13)
#loc56 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":127:13)
#loc57 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":81:39)
#loc58 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":81:48)
#loc59 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":81:61)
#loc60 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":81:32)
#loc61 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":81:17)
#loc62 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":81:72)
#loc63 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":82:17)
#loc64 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":85:17)
#loc65 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":82:21)
#loc66 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":82:37)
#loc67 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":83:17)
#loc68 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":84:21)
#loc69 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":87:17)
#loc70 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":90:17)
#loc71 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":87:32)
#loc72 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":87:46)
#loc73 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":87:58)
#loc74 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":87:79)
#loc75 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":87:80)
#loc76 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":87:72)
#loc77 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":87:89)
#loc78 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":87:21)
#loc79 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":87:101)
#loc80 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":88:17)
#loc81 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":89:21)
#loc82 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":91:24)
#loc83 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":91:25)
#loc84 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":91:34)
#loc85 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":91:37)
#loc86 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":91:51)
#loc87 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":91:17)
#loc88 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":91:52)
#loc89 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":92:38)
#loc90 = loc("/usr/include/netinet/in.h":249:5)
#loc91 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":92:17)
#loc92 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":93:43)
#loc93 = loc("/usr/include/netinet/in.h":251:20)
#loc94 = loc("/usr/include/netinet/in.h":33:15)
#loc95 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":93:17)
#loc96 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":94:42)
#loc97 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":94:36)
#loc98 = loc("/usr/include/netinet/in.h":250:15)
#loc99 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":94:17)
#loc100 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":94:50)
#loc101 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":95:17)
#loc102 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":98:17)
#loc103 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":95:26)
#loc104 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":95:58)
#loc105 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":95:59)
#loc106 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":95:68)
#loc107 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":95:82)
#loc108 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":95:21)
#loc109 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":95:88)
#loc110 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":96:17)
#loc111 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":97:21)
#loc112 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":99:17)
#loc113 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":102:17)
#loc114 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":99:28)
#loc115 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":99:42)
#loc116 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":99:21)
#loc117 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":99:61)
#loc118 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":100:17)
#loc119 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":101:21)
#loc120 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":103:39)
#loc121 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":103:53)
#loc122 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":103:59)
#loc123 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":103:32)
#loc124 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":103:17)
#loc125 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":103:63)
#loc126 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":104:17)
#loc127 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":107:17)
#loc128 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":104:21)
#loc129 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":104:37)
#loc130 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":105:17)
#loc131 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":106:21)
#loc132 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":109:35)
#loc133 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":109:49)
#loc134 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":109:54)
#loc135 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":109:53)
#loc136 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":109:69)
#loc137 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":109:73)
#loc138 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":109:81)
#loc139 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":109:85)
#loc140 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":109:30)
#loc141 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":109:17)
#loc142 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":109:86)
#loc143 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":110:17)
#loc144 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":113:17)
#loc145 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":110:21)
#loc146 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":110:35)
#loc147 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":110:48)
#loc148 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":110:51)
#loc149 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":110:65)
#loc150 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":111:17)
#loc151 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":112:21)
#loc152 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":115:36)
#loc153 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":115:22)
#loc154 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":115:17)
#loc155 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":117:27)
#loc156 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":117:34)
#loc157 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":117:40)
#loc158 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":117:17)
#loc159 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":117:44)
#loc160 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":118:17)
#loc161 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":121:17)
#loc162 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":118:21)
#loc163 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":119:17)
#loc164 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":120:32)
#loc165 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":120:22)
#loc166 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":120:21)
#loc167 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":122:27)
#loc168 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":122:34)
#loc169 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":122:40)
#loc170 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":122:17)
#loc171 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":122:44)
#loc172 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":123:17)
#loc173 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":126:17)
#loc174 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":123:21)
#loc175 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":124:17)
#loc176 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":125:32)
#loc177 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":125:22)
#loc178 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":125:21)
#loc179 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":128:20)
#loc180 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":129:13)
#loc181 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":132:13)
#loc182 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":129:17)
#loc183 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":129:33)
#loc184 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":130:13)
#loc185 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":131:30)
#loc186 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":131:17)
#loc187 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":133:13)
#loc188 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":136:13)
#loc189 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":133:17)
#loc190 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":133:33)
#loc191 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":134:13)
#loc192 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":135:30)
#loc193 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":135:17)
#loc194 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":143:23)
#loc195 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":143:13)
#loc196 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":335:1)
#loc197 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":339:1)
#loc198 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":337:5)
#loc199 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":337:11)
#loc200 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":338:5)
#loc201 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":338:11)
#loc202 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":158:19)
#loc203 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":153:1)
#loc204 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":244:1)
#loc205 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":155:5)
#loc206 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":243:5)
#loc207 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":155:8)
#loc208 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":155:27)
#loc209 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":156:5)
#loc210 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":159:5)
#loc211 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":161:5)
#loc212 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":158:9)
#loc213 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":162:9)
#loc214 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":242:9)
#loc215 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":163:13)
#loc216 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":163:30)
#loc217 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":168:13)
#loc218 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":168:17)
#loc219 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":169:13)
#loc220 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":169:32)
#loc221 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":170:13)
#loc222 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":170:19)
#loc223 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":171:13)
#loc224 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":171:35)
#loc225 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":172:13)
#loc226 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":172:35)
#loc227 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":173:13)
#loc228 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":173:41)
#loc229 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":173:30)
#loc230 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":173:37)
#loc231 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":174:13)
#loc232 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":226:21)
#loc233 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":175:13)
#loc234 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":225:13)
#loc235 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":183:39)
#loc236 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":183:48)
#loc237 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":183:61)
#loc238 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":183:32)
#loc239 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":183:17)
#loc240 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":183:72)
#loc241 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":184:17)
#loc242 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":187:17)
#loc243 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":184:21)
#loc244 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":184:37)
#loc245 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":185:17)
#loc246 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":186:21)
#loc247 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":189:24)
#loc248 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":189:25)
#loc249 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":189:34)
#loc250 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":189:37)
#loc251 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":189:51)
#loc252 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":189:17)
#loc253 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":189:52)
#loc254 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":190:38)
#loc255 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":190:17)
#loc256 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":191:43)
#loc257 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":191:17)
#loc258 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":192:42)
#loc259 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":192:36)
#loc260 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":192:17)
#loc261 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":192:50)
#loc262 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":193:17)
#loc263 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":196:17)
#loc264 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":193:26)
#loc265 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":193:58)
#loc266 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":193:59)
#loc267 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":193:68)
#loc268 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":193:82)
#loc269 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":193:21)
#loc270 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":193:88)
#loc271 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":194:17)
#loc272 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":195:21)
#loc273 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":197:17)
#loc274 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":200:17)
#loc275 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":197:28)
#loc276 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":197:42)
#loc277 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":197:21)
#loc278 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":197:61)
#loc279 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":198:17)
#loc280 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":199:21)
#loc281 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":201:39)
#loc282 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":201:53)
#loc283 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":201:59)
#loc284 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":201:32)
#loc285 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":201:17)
#loc286 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":201:63)
#loc287 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":202:17)
#loc288 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":205:17)
#loc289 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":202:21)
#loc290 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":202:37)
#loc291 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":203:17)
#loc292 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":204:21)
#loc293 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":207:35)
#loc294 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":207:49)
#loc295 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":207:54)
#loc296 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":207:53)
#loc297 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":207:69)
#loc298 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":207:73)
#loc299 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":207:81)
#loc300 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":207:85)
#loc301 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":207:30)
#loc302 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":207:17)
#loc303 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":207:86)
#loc304 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":208:17)
#loc305 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":211:17)
#loc306 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":208:21)
#loc307 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":208:35)
#loc308 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":208:48)
#loc309 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":208:51)
#loc310 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":208:65)
#loc311 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":209:17)
#loc312 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":210:21)
#loc313 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":213:36)
#loc314 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":213:22)
#loc315 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":213:17)
#loc316 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":215:27)
#loc317 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":215:34)
#loc318 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":215:40)
#loc319 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":215:17)
#loc320 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":215:44)
#loc321 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":216:17)
#loc322 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":219:17)
#loc323 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":216:21)
#loc324 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":217:17)
#loc325 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":218:32)
#loc326 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":218:22)
#loc327 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":218:21)
#loc328 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":220:27)
#loc329 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":220:34)
#loc330 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":220:40)
#loc331 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":220:17)
#loc332 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":220:44)
#loc333 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":221:17)
#loc334 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":224:17)
#loc335 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":221:21)
#loc336 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":222:17)
#loc337 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":223:32)
#loc338 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":223:22)
#loc339 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":223:21)
#loc340 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":226:20)
#loc341 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":227:13)
#loc342 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":230:13)
#loc343 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":227:17)
#loc344 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":227:33)
#loc345 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":228:13)
#loc346 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":229:30)
#loc347 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":229:17)
#loc348 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":231:13)
#loc349 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":234:13)
#loc350 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":231:17)
#loc351 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":231:33)
#loc352 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":232:13)
#loc353 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":233:30)
#loc354 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":233:17)
#loc355 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":241:23)
#loc356 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":241:13)
#loc357 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":247:1)
#loc358 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":333:1)
#loc359 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":249:5)
#loc360 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":332:5)
#loc361 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":249:8)
#loc362 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":249:27)
#loc363 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":250:5)
#loc364 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":251:9)
#loc365 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":331:9)
#loc366 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":252:13)
#loc367 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":252:30)
#loc368 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":257:13)
#loc369 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":257:17)
#loc370 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":258:13)
#loc371 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":258:32)
#loc372 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":259:13)
#loc373 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":259:19)
#loc374 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":260:13)
#loc375 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":260:35)
#loc376 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":261:13)
#loc377 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":261:35)
#loc378 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":262:13)
#loc379 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":262:41)
#loc380 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":262:30)
#loc381 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":262:37)
#loc382 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":263:13)
#loc383 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":315:21)
#loc384 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":264:13)
#loc385 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":314:13)
#loc386 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":272:39)
#loc387 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":272:48)
#loc388 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":272:61)
#loc389 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":272:32)
#loc390 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":272:17)
#loc391 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":272:72)
#loc392 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":273:17)
#loc393 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":276:17)
#loc394 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":273:21)
#loc395 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":273:37)
#loc396 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":274:17)
#loc397 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":275:21)
#loc398 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":278:24)
#loc399 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":278:25)
#loc400 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":278:34)
#loc401 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":278:37)
#loc402 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":278:51)
#loc403 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":278:17)
#loc404 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":278:52)
#loc405 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":279:38)
#loc406 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":279:17)
#loc407 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":280:43)
#loc408 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":280:17)
#loc409 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":281:42)
#loc410 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":281:36)
#loc411 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":281:17)
#loc412 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":281:50)
#loc413 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":282:17)
#loc414 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":285:17)
#loc415 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":282:26)
#loc416 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":282:58)
#loc417 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":282:59)
#loc418 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":282:68)
#loc419 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":282:82)
#loc420 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":282:21)
#loc421 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":282:88)
#loc422 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":283:17)
#loc423 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":284:21)
#loc424 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":286:17)
#loc425 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":289:17)
#loc426 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":286:28)
#loc427 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":286:42)
#loc428 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":286:21)
#loc429 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":286:61)
#loc430 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":287:17)
#loc431 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":288:21)
#loc432 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":290:39)
#loc433 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":290:53)
#loc434 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":290:59)
#loc435 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":290:32)
#loc436 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":290:17)
#loc437 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":290:63)
#loc438 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":291:17)
#loc439 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":294:17)
#loc440 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":291:21)
#loc441 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":291:37)
#loc442 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":292:17)
#loc443 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":293:21)
#loc444 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":296:35)
#loc445 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":296:49)
#loc446 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":296:54)
#loc447 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":296:53)
#loc448 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":296:69)
#loc449 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":296:73)
#loc450 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":296:81)
#loc451 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":296:85)
#loc452 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":296:30)
#loc453 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":296:17)
#loc454 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":296:86)
#loc455 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":297:17)
#loc456 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":300:17)
#loc457 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":297:21)
#loc458 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":297:35)
#loc459 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":297:48)
#loc460 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":297:51)
#loc461 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":297:65)
#loc462 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":298:17)
#loc463 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":299:21)
#loc464 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":302:36)
#loc465 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":302:22)
#loc466 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":302:17)
#loc467 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":304:27)
#loc468 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":304:34)
#loc469 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":304:40)
#loc470 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":304:17)
#loc471 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":304:44)
#loc472 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":305:17)
#loc473 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":308:17)
#loc474 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":305:21)
#loc475 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":306:17)
#loc476 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":307:32)
#loc477 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":307:22)
#loc478 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":307:21)
#loc479 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":309:27)
#loc480 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":309:34)
#loc481 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":309:40)
#loc482 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":309:17)
#loc483 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":309:44)
#loc484 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":310:17)
#loc485 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":313:17)
#loc486 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":310:21)
#loc487 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":311:17)
#loc488 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":312:32)
#loc489 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":312:22)
#loc490 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":312:21)
#loc491 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":315:20)
#loc492 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":316:13)
#loc493 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":319:13)
#loc494 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":316:17)
#loc495 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":316:33)
#loc496 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":317:13)
#loc497 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":318:30)
#loc498 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":318:17)
#loc499 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":320:13)
#loc500 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":323:13)
#loc501 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":320:17)
#loc502 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":320:33)
#loc503 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":321:13)
#loc504 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":322:30)
#loc505 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":322:17)
#loc506 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":330:23)
#loc507 = loc("CWE605_Multiple_Binds_Same_Port__basic_06.c":330:13)
#loc508 = loc(fused[#loc1, #loc2])
#loc509 = loc(fused[#loc3, #loc4])
#loc510 = loc(fused[#loc5, #loc6])
#loc511 = loc(fused[#loc7, #loc8])
#loc512 = loc(fused[#loc9, #loc10])
#loc513 = loc(fused[#loc11, #loc12])
#loc514 = loc(fused[#loc13, #loc14])
#loc515 = loc(fused[#loc15, #loc16])
#loc516 = loc(fused[#loc17, #loc18])
#loc517 = loc(fused[#loc19, #loc20])
#loc518 = loc(fused[#loc21, #loc22])
#loc519 = loc(fused[#loc23, #loc24])
#loc520 = loc(fused[#loc25, #loc26])
#loc521 = loc(fused[#loc27, #loc28])
#loc522 = loc(fused[#loc29, #loc26])
#loc523 = loc(fused[#loc30, #loc31])
#loc524 = loc(fused[#loc32, #loc33])
#loc525 = loc(fused[#loc34, #loc35])
#loc526 = loc(fused[#loc36, #loc37])
#loc527 = loc(fused[#loc38, #loc39])
#loc528 = loc(fused[#loc40, #loc41])
#loc529 = loc(fused[#loc42, #loc43])
#loc530 = loc(fused[#loc44, #loc45])
#loc531 = loc(fused[#loc46, #loc47])
#loc532 = loc(fused[#loc48, #loc49])
#loc533 = loc(fused[#loc52, #loc49])
#loc534 = loc(fused[#loc53, #loc54])
#loc535 = loc(fused[#loc55, #loc56])
#loc536 = loc(fused[#loc61, #loc62])
#loc537 = loc(fused[#loc63, #loc64])
#loc538 = loc(fused[#loc65, #loc66])
#loc539 = loc(fused[#loc67, #loc64])
#loc540 = loc(fused[#loc69, #loc70])
#loc541 = loc(fused[#loc74, #loc75])
#loc542 = loc(fused[#loc76, #loc75])
#loc543 = loc(fused[#loc78, #loc79])
#loc544 = loc(fused[#loc80, #loc70])
#loc545 = loc(fused[#loc82, #loc83])
#loc546 = loc(fused[#loc85, #loc86])
#loc547 = loc(fused[#loc87, #loc88])
#loc548 = loc(fused[#loc91, #loc89])
#loc549 = loc(fused[#loc95, #loc92])
#loc550 = loc(fused[#loc99, #loc100])
#loc551 = loc(fused[#loc101, #loc102])
#loc552 = loc(fused[#loc104, #loc105])
#loc553 = loc(fused[#loc106, #loc107])
#loc554 = loc(fused[#loc108, #loc109])
#loc555 = loc(fused[#loc110, #loc102])
#loc556 = loc(fused[#loc112, #loc113])
#loc557 = loc(fused[#loc116, #loc117])
#loc558 = loc(fused[#loc118, #loc113])
#loc559 = loc(fused[#loc124, #loc125])
#loc560 = loc(fused[#loc126, #loc127])
#loc561 = loc(fused[#loc128, #loc129])
#loc562 = loc(fused[#loc130, #loc127])
#loc563 = loc(fused[#loc133, #loc134])
#loc564 = loc(fused[#loc136, #loc137])
#loc565 = loc(fused[#loc136, #loc138])
#loc566 = loc(fused[#loc141, #loc142])
#loc567 = loc(fused[#loc143, #loc144])
#loc568 = loc(fused[#loc145, #loc146])
#loc569 = loc(fused[#loc148, #loc149])
#loc570 = loc(fused[#loc150, #loc144])
#loc571 = loc(fused[#loc154, #loc152])
#loc572 = loc(fused[#loc158, #loc159])
#loc573 = loc(fused[#loc160, #loc161])
#loc574 = loc(fused[#loc163, #loc161])
#loc575 = loc(fused[#loc166, #loc164])
#loc576 = loc(fused[#loc170, #loc171])
#loc577 = loc(fused[#loc172, #loc173])
#loc578 = loc(fused[#loc175, #loc173])
#loc579 = loc(fused[#loc178, #loc176])
#loc580 = loc(fused[#loc180, #loc181])
#loc581 = loc(fused[#loc182, #loc183])
#loc582 = loc(fused[#loc184, #loc181])
#loc583 = loc(fused[#loc187, #loc188])
#loc584 = loc(fused[#loc189, #loc190])
#loc585 = loc(fused[#loc191, #loc188])
#loc586 = loc(fused[#loc196, #loc197])
#loc587 = loc(fused[#loc198, #loc199])
#loc588 = loc(fused[#loc200, #loc201])
#loc589 = loc(fused[#loc203, #loc204])
#loc590 = loc(fused[#loc205, #loc206])
#loc591 = loc(fused[#loc207, #loc208])
#loc592 = loc(fused[#loc209, #loc210, #loc211, #loc206])
#loc593 = loc(fused[#loc213, #loc214])
#loc594 = loc(fused[#loc215, #loc216])
#loc595 = loc(fused[#loc217, #loc218])
#loc596 = loc(fused[#loc219, #loc220])
#loc597 = loc(fused[#loc221, #loc222])
#loc598 = loc(fused[#loc223, #loc224])
#loc599 = loc(fused[#loc225, #loc226])
#loc600 = loc(fused[#loc227, #loc228])
#loc601 = loc(fused[#loc231, #loc232])
#loc602 = loc(fused[#loc233, #loc234])
#loc603 = loc(fused[#loc239, #loc240])
#loc604 = loc(fused[#loc241, #loc242])
#loc605 = loc(fused[#loc243, #loc244])
#loc606 = loc(fused[#loc245, #loc242])
#loc607 = loc(fused[#loc247, #loc248])
#loc608 = loc(fused[#loc250, #loc251])
#loc609 = loc(fused[#loc252, #loc253])
#loc610 = loc(fused[#loc255, #loc254])
#loc611 = loc(fused[#loc257, #loc256])
#loc612 = loc(fused[#loc260, #loc261])
#loc613 = loc(fused[#loc262, #loc263])
#loc614 = loc(fused[#loc265, #loc266])
#loc615 = loc(fused[#loc267, #loc268])
#loc616 = loc(fused[#loc269, #loc270])
#loc617 = loc(fused[#loc271, #loc263])
#loc618 = loc(fused[#loc273, #loc274])
#loc619 = loc(fused[#loc277, #loc278])
#loc620 = loc(fused[#loc279, #loc274])
#loc621 = loc(fused[#loc285, #loc286])
#loc622 = loc(fused[#loc287, #loc288])
#loc623 = loc(fused[#loc289, #loc290])
#loc624 = loc(fused[#loc291, #loc288])
#loc625 = loc(fused[#loc294, #loc295])
#loc626 = loc(fused[#loc297, #loc298])
#loc627 = loc(fused[#loc297, #loc299])
#loc628 = loc(fused[#loc302, #loc303])
#loc629 = loc(fused[#loc304, #loc305])
#loc630 = loc(fused[#loc306, #loc307])
#loc631 = loc(fused[#loc309, #loc310])
#loc632 = loc(fused[#loc311, #loc305])
#loc633 = loc(fused[#loc315, #loc313])
#loc634 = loc(fused[#loc319, #loc320])
#loc635 = loc(fused[#loc321, #loc322])
#loc636 = loc(fused[#loc324, #loc322])
#loc637 = loc(fused[#loc327, #loc325])
#loc638 = loc(fused[#loc331, #loc332])
#loc639 = loc(fused[#loc333, #loc334])
#loc640 = loc(fused[#loc336, #loc334])
#loc641 = loc(fused[#loc339, #loc337])
#loc642 = loc(fused[#loc341, #loc342])
#loc643 = loc(fused[#loc343, #loc344])
#loc644 = loc(fused[#loc345, #loc342])
#loc645 = loc(fused[#loc348, #loc349])
#loc646 = loc(fused[#loc350, #loc351])
#loc647 = loc(fused[#loc352, #loc349])
#loc648 = loc(fused[#loc357, #loc358])
#loc649 = loc(fused[#loc359, #loc360])
#loc650 = loc(fused[#loc361, #loc362])
#loc651 = loc(fused[#loc363, #loc360])
#loc652 = loc(fused[#loc364, #loc365])
#loc653 = loc(fused[#loc366, #loc367])
#loc654 = loc(fused[#loc368, #loc369])
#loc655 = loc(fused[#loc370, #loc371])
#loc656 = loc(fused[#loc372, #loc373])
#loc657 = loc(fused[#loc374, #loc375])
#loc658 = loc(fused[#loc376, #loc377])
#loc659 = loc(fused[#loc378, #loc379])
#loc660 = loc(fused[#loc382, #loc383])
#loc661 = loc(fused[#loc384, #loc385])
#loc662 = loc(fused[#loc390, #loc391])
#loc663 = loc(fused[#loc392, #loc393])
#loc664 = loc(fused[#loc394, #loc395])
#loc665 = loc(fused[#loc396, #loc393])
#loc666 = loc(fused[#loc398, #loc399])
#loc667 = loc(fused[#loc401, #loc402])
#loc668 = loc(fused[#loc403, #loc404])
#loc669 = loc(fused[#loc406, #loc405])
#loc670 = loc(fused[#loc408, #loc407])
#loc671 = loc(fused[#loc411, #loc412])
#loc672 = loc(fused[#loc413, #loc414])
#loc673 = loc(fused[#loc416, #loc417])
#loc674 = loc(fused[#loc418, #loc419])
#loc675 = loc(fused[#loc420, #loc421])
#loc676 = loc(fused[#loc422, #loc414])
#loc677 = loc(fused[#loc424, #loc425])
#loc678 = loc(fused[#loc428, #loc429])
#loc679 = loc(fused[#loc430, #loc425])
#loc680 = loc(fused[#loc436, #loc437])
#loc681 = loc(fused[#loc438, #loc439])
#loc682 = loc(fused[#loc440, #loc441])
#loc683 = loc(fused[#loc442, #loc439])
#loc684 = loc(fused[#loc445, #loc446])
#loc685 = loc(fused[#loc448, #loc449])
#loc686 = loc(fused[#loc448, #loc450])
#loc687 = loc(fused[#loc453, #loc454])
#loc688 = loc(fused[#loc455, #loc456])
#loc689 = loc(fused[#loc457, #loc458])
#loc690 = loc(fused[#loc460, #loc461])
#loc691 = loc(fused[#loc462, #loc456])
#loc692 = loc(fused[#loc466, #loc464])
#loc693 = loc(fused[#loc470, #loc471])
#loc694 = loc(fused[#loc472, #loc473])
#loc695 = loc(fused[#loc475, #loc473])
#loc696 = loc(fused[#loc478, #loc476])
#loc697 = loc(fused[#loc482, #loc483])
#loc698 = loc(fused[#loc484, #loc485])
#loc699 = loc(fused[#loc487, #loc485])
#loc700 = loc(fused[#loc490, #loc488])
#loc701 = loc(fused[#loc492, #loc493])
#loc702 = loc(fused[#loc494, #loc495])
#loc703 = loc(fused[#loc496, #loc493])
#loc704 = loc(fused[#loc499, #loc500])
#loc705 = loc(fused[#loc501, #loc502])
#loc706 = loc(fused[#loc503, #loc500])
