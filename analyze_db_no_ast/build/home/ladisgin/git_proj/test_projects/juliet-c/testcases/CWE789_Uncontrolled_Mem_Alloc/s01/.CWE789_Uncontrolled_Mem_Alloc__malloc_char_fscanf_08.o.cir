!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc327)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc328)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%zu\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc329)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc330)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc331)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc12)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc332)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc333)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc17)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc335)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc22)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc336)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc338)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc26)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc26)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc29)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc328)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc29)
      } loc(#loc339)
    } loc(#loc337)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc341)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc33)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc33)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc344)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc42)
            %8 = cir.const #cir.int<5> : !u64i loc(#loc346)
            %9 = cir.cmp(gt, %7, %8) : !u64i, !s32i loc(#loc347)
            %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc45)
            cir.if %10 {
              %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc49)
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc50)
              %13 = cir.const #cir.int<1> : !u64i loc(#loc349)
              %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc350)
              %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc49)
              %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc351)
              cir.store %16, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc352)
              cir.scope {
                %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
                %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
                %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc58)
                %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !s32i loc(#loc354)
                %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc59)
                cir.if %30 {
                  %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc61)
                  %32 = cir.const #cir.int<1> : !s32i loc(#loc62)
                  %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc63)
                  cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc61)
                } loc(#loc355)
              } loc(#loc353)
              %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc64)
              %18 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
              %19 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc12)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc12)
              %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc64)
              %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc67)
              %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc68)
              %24 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
              %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc69)
              cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc68)
            } else {
              %11 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc17)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc17)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
            } loc(#loc348)
          } loc(#loc345)
        } loc(#loc343)
      } loc(#loc342)
    } loc(#loc340)
    cir.return loc(#loc19)
  } loc(#loc334)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc357)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc358)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc75)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc359)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc77)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc360)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc79)
    cir.return loc(#loc72)
  } loc(#loc356)
  cir.func no_proto internal private  @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc82)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc83)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc362)
    cir.return %2 : !s32i loc(#loc362)
  } loc(#loc361)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc85)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc86)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc364)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc91)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc365)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc367)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc95)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc95)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc98)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc328)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc99)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc100)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc100)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc98)
      } loc(#loc368)
    } loc(#loc366)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc370)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc103)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc103)
      cir.if %5 {
        %6 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc85)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc85)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc108)
      } else {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc373)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc115)
            %8 = cir.const #cir.int<5> : !u64i loc(#loc375)
            %9 = cir.cmp(gt, %7, %8) : !u64i, !s32i loc(#loc376)
            %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc118)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc120)
              %13 = cir.const #cir.int<100> : !s32i loc(#loc121)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc121)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !s32i loc(#loc377)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc122)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc119)
                cir.yield %18 : !cir.bool loc(#loc119)
              }, false {
                %18 = cir.const #false loc(#loc119)
                cir.yield %18 : !cir.bool loc(#loc119)
              }) : (!cir.bool) -> !cir.bool loc(#loc119)
              cir.yield %17 : !cir.bool loc(#loc119)
            }, false {
              %12 = cir.const #false loc(#loc119)
              cir.yield %12 : !cir.bool loc(#loc119)
            }) : (!cir.bool) -> !cir.bool loc(#loc119)
            cir.if %11 {
              %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc126)
              %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc127)
              %14 = cir.const #cir.int<1> : !u64i loc(#loc379)
              %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc380)
              %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc126)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc381)
              cir.store %17, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc382)
              cir.scope {
                %27 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc135)
                %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc135)
                %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !s32i loc(#loc384)
                %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc136)
                cir.if %31 {
                  %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc138)
                  %33 = cir.const #cir.int<1> : !s32i loc(#loc139)
                  %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc140)
                  cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc138)
                } loc(#loc385)
              } loc(#loc383)
              %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc141)
              %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
              %20 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc143)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc143)
              %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc141)
              %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc145)
              %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc146)
              %25 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
              %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc147)
              cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc146)
            } else {
              %12 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc86)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc86)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc148)
            } loc(#loc378)
          } loc(#loc374)
        } loc(#loc372)
      } loc(#loc371)
    } loc(#loc369)
    cir.return loc(#loc88)
  } loc(#loc363)
  cir.func no_proto internal private  @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc150)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc151)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc387)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc387)
    cir.return %2 : !s32i loc(#loc387)
  } loc(#loc386)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc389)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc157)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc157)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc390)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc392)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc161)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc161)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc164)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc328)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc165)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc166)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc166)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc164)
      } loc(#loc393)
    } loc(#loc391)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc395)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc169)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc169)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc398)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc178)
            %8 = cir.const #cir.int<5> : !u64i loc(#loc400)
            %9 = cir.cmp(gt, %7, %8) : !u64i, !s32i loc(#loc401)
            %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc181)
            %11 = cir.ternary(%10, true {
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc183)
              %13 = cir.const #cir.int<100> : !s32i loc(#loc184)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc184)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !s32i loc(#loc402)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc185)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc182)
                cir.yield %18 : !cir.bool loc(#loc182)
              }, false {
                %18 = cir.const #false loc(#loc182)
                cir.yield %18 : !cir.bool loc(#loc182)
              }) : (!cir.bool) -> !cir.bool loc(#loc182)
              cir.yield %17 : !cir.bool loc(#loc182)
            }, false {
              %12 = cir.const #false loc(#loc182)
              cir.yield %12 : !cir.bool loc(#loc182)
            }) : (!cir.bool) -> !cir.bool loc(#loc182)
            cir.if %11 {
              %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc189)
              %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc190)
              %14 = cir.const #cir.int<1> : !u64i loc(#loc404)
              %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc405)
              %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc189)
              %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc406)
              cir.store %17, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc407)
              cir.scope {
                %27 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc197)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc198)
                %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc198)
                %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !s32i loc(#loc409)
                %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc199)
                cir.if %31 {
                  %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc201)
                  %33 = cir.const #cir.int<1> : !s32i loc(#loc202)
                  %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc203)
                  cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc201)
                } loc(#loc410)
              } loc(#loc408)
              %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc204)
              %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc205)
              %20 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc206)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc206)
              %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc204)
              %23 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc208)
              %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc209)
              %25 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc210)
              %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc210)
              cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc209)
            } else {
              %12 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc211)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc211)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc212)
            } loc(#loc403)
          } loc(#loc399)
        } loc(#loc397)
      } loc(#loc396)
    } loc(#loc394)
    cir.return loc(#loc154)
  } loc(#loc388)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc412)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc217)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc217)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc413)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc415)
      %4 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc221)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc221)
      cir.if %5 {
        %6 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc226)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc226)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc227)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc228)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc228)
        cir.store %7, %0 : !u64i, !cir.ptr<!u64i> loc(#loc417)
      } loc(#loc416)
    } loc(#loc414)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc419)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc232)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc232)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc422)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc241)
            %8 = cir.const #cir.int<5> : !u64i loc(#loc424)
            %9 = cir.cmp(gt, %7, %8) : !u64i, !s32i loc(#loc425)
            %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc244)
            cir.if %10 {
              %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc248)
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc249)
              %13 = cir.const #cir.int<1> : !u64i loc(#loc427)
              %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc428)
              %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc248)
              %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc429)
              cir.store %16, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc430)
              cir.scope {
                %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc256)
                %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc257)
                %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc257)
                %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !s32i loc(#loc432)
                %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc258)
                cir.if %30 {
                  %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc260)
                  %32 = cir.const #cir.int<1> : !s32i loc(#loc261)
                  %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc262)
                  cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc260)
                } loc(#loc433)
              } loc(#loc431)
              %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc263)
              %18 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc264)
              %19 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc265)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc265)
              %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc263)
              %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc266)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc267)
              %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc268)
              %24 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc269)
              %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc269)
              cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc268)
            } else {
              %11 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc270)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc270)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc271)
            } loc(#loc426)
          } loc(#loc423)
        } loc(#loc421)
      } loc(#loc420)
    } loc(#loc418)
    cir.return loc(#loc214)
  } loc(#loc411)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc435)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc276)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc276)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc436)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc438)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc280)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc280)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc283)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc283)
        cir.store %7, %0 : !u64i, !cir.ptr<!u64i> loc(#loc440)
      } loc(#loc439)
    } loc(#loc437)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc442)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc287)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc287)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc445)
          cir.scope {
            %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc296)
            %8 = cir.const #cir.int<5> : !u64i loc(#loc447)
            %9 = cir.cmp(gt, %7, %8) : !u64i, !s32i loc(#loc448)
            %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc299)
            cir.if %10 {
              %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc303)
              %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc304)
              %13 = cir.const #cir.int<1> : !u64i loc(#loc450)
              %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc451)
              %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc303)
              %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc452)
              cir.store %16, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc453)
              cir.scope {
                %26 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc311)
                %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc312)
                %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc312)
                %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !s32i loc(#loc455)
                %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc313)
                cir.if %30 {
                  %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc315)
                  %32 = cir.const #cir.int<1> : !s32i loc(#loc316)
                  %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc317)
                  cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc315)
                } loc(#loc456)
              } loc(#loc454)
              %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc318)
              %18 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc319)
              %19 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc320)
              %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc320)
              %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc318)
              %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc321)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc322)
              %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc323)
              %24 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc324)
              %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc324)
              cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc323)
            } else {
              %11 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc325)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc325)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc326)
            } loc(#loc449)
          } loc(#loc446)
        } loc(#loc444)
      } loc(#loc443)
    } loc(#loc441)
    cir.return loc(#loc273)
  } loc(#loc434)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":49:23)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("/usr/include/string.h":141:1)
#loc11 = loc("/usr/include/string.h":142:14)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":63:34)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":69:27)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":41:1)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":73:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":43:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":43:12)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":45:12)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":45:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":46:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":50:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":46:8)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":46:26)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":47:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":49:9)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":49:16)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":51:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":72:5)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":51:8)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":51:26)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":52:5)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":53:9)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":71:9)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":54:13)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":54:20)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":58:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":70:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":58:17)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":58:24)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":58:43)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":58:22)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":59:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":66:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":68:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":60:36)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":60:43)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":60:48)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":60:59)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":60:60)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":60:17)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":61:17)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":61:49)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":61:21)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":61:33)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":61:30)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":61:39)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":61:40)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":61:46)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":61:45)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":63:17)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":63:24)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":64:27)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":64:17)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":65:17)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":65:22)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":69:17)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":229:1)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":235:1)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":231:5)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":231:14)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":232:5)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":232:14)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":233:5)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":233:14)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":234:5)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":234:14)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":29:1)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":32:1)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":31:12)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":31:5)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":93:19)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":113:27)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":80:1)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":117:1)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":82:5)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":82:12)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":84:12)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":84:5)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":85:5)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":89:5)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":85:8)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":85:26)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":86:5)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":88:9)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":88:16)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":88:23)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":90:5)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":116:5)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":90:8)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":90:27)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":91:5)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":94:5)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":96:5)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":93:9)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":97:9)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":115:9)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":98:13)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":98:20)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":102:13)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":114:13)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":102:17)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":102:24)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":102:43)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":102:22)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":102:45)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":102:48)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":102:55)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":102:53)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":103:13)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":110:13)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":112:13)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":104:36)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":104:43)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":104:48)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":104:59)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":104:60)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":104:17)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":105:17)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":105:49)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":105:21)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":105:33)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":105:30)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":105:39)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":105:40)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":105:46)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":105:45)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":107:17)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":107:24)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":107:34)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":108:27)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":108:17)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":109:17)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":109:22)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":113:17)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":34:1)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":37:1)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":36:12)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":36:5)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":120:1)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":152:1)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":122:5)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":122:12)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":124:12)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":124:5)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":125:5)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":129:5)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":125:8)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":125:26)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":126:5)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":128:9)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":128:16)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":128:23)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":130:5)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":151:5)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":130:8)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":130:26)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":131:5)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":132:9)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":150:9)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":133:13)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":133:20)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":137:13)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":149:13)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":137:17)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":137:24)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":137:43)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":137:22)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":137:45)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":137:48)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":137:55)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":137:53)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":138:13)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":145:13)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":147:13)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":139:36)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":139:43)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":139:48)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":139:59)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":139:60)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":139:17)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":140:17)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":140:49)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":140:21)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":140:33)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":140:30)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":140:39)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":140:40)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":140:46)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":140:45)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":142:17)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":142:24)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":142:34)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":143:27)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":143:17)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":144:17)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":144:22)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":148:27)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":148:17)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":155:1)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":192:1)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":157:5)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":157:12)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":159:12)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":159:5)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":160:5)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":169:5)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":160:8)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":160:27)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":161:5)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":164:5)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":166:5)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":163:19)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":163:9)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":168:16)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":168:9)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":170:5)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":191:5)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":170:8)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":170:26)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":171:5)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":172:9)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":190:9)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":173:13)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":173:20)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":177:13)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":189:13)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":177:17)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":177:24)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":177:43)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":177:22)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":178:13)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":185:13)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":187:13)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":179:36)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":179:43)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":179:48)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":179:59)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":179:60)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":179:17)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":180:17)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":180:49)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":180:21)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":180:33)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":180:30)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":180:39)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":180:40)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":180:46)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":180:45)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":182:17)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":182:24)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":182:34)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":183:27)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":183:17)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":184:17)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":184:22)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":188:27)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":188:17)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":195:1)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":227:1)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":197:5)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":197:12)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":199:12)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":199:5)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":200:5)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":204:5)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":200:8)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":200:26)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":201:5)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":203:16)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":203:9)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":205:5)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":226:5)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":205:8)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":205:26)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":206:5)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":207:9)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":225:9)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":208:13)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":208:20)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":212:13)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":224:13)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":212:17)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":212:24)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":212:43)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":212:22)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":213:13)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":220:13)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":222:13)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":214:36)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":214:43)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":214:48)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":214:59)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":214:60)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":214:17)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":215:17)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":215:49)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":215:21)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":215:33)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":215:30)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":215:39)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":215:40)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":215:46)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":215:45)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":217:17)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":217:24)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":217:34)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":218:27)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":218:17)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":219:17)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":219:22)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":223:27)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_08.c":223:17)
#loc327 = loc(fused[#loc1, #loc2])
#loc328 = loc(fused[#loc3, #loc4])
#loc329 = loc(fused[#loc6, #loc7])
#loc330 = loc(fused[#loc8, #loc9])
#loc331 = loc(fused[#loc10, #loc11])
#loc332 = loc(fused[#loc13, #loc14])
#loc333 = loc(fused[#loc15, #loc16])
#loc334 = loc(fused[#loc18, #loc19])
#loc335 = loc(fused[#loc20, #loc21])
#loc336 = loc(fused[#loc23, #loc22])
#loc337 = loc(fused[#loc24, #loc25])
#loc338 = loc(fused[#loc26, #loc27])
#loc339 = loc(fused[#loc28, #loc25])
#loc340 = loc(fused[#loc31, #loc32])
#loc341 = loc(fused[#loc33, #loc34])
#loc342 = loc(fused[#loc35, #loc32])
#loc343 = loc(fused[#loc36, #loc37])
#loc344 = loc(fused[#loc38, #loc39])
#loc345 = loc(fused[#loc40, #loc41])
#loc346 = loc(fused[#loc43, #loc44])
#loc347 = loc(fused[#loc42, #loc44])
#loc348 = loc(fused[#loc46, #loc47, #loc48, #loc41])
#loc349 = loc(fused[#loc51, #loc52])
#loc350 = loc(fused[#loc50, #loc52])
#loc351 = loc(fused[#loc49, #loc53])
#loc352 = loc(fused[#loc54, #loc53])
#loc353 = loc(fused[#loc55, #loc56])
#loc354 = loc(fused[#loc57, #loc58])
#loc355 = loc(fused[#loc60, #loc56])
#loc356 = loc(fused[#loc71, #loc72])
#loc357 = loc(fused[#loc73, #loc74])
#loc358 = loc(fused[#loc75, #loc76])
#loc359 = loc(fused[#loc77, #loc78])
#loc360 = loc(fused[#loc79, #loc80])
#loc361 = loc(fused[#loc81, #loc82])
#loc362 = loc(fused[#loc84, #loc83])
#loc363 = loc(fused[#loc87, #loc88])
#loc364 = loc(fused[#loc89, #loc90])
#loc365 = loc(fused[#loc92, #loc91])
#loc366 = loc(fused[#loc93, #loc94])
#loc367 = loc(fused[#loc95, #loc96])
#loc368 = loc(fused[#loc97, #loc94])
#loc369 = loc(fused[#loc101, #loc102])
#loc370 = loc(fused[#loc103, #loc104])
#loc371 = loc(fused[#loc105, #loc106, #loc107, #loc102])
#loc372 = loc(fused[#loc109, #loc110])
#loc373 = loc(fused[#loc111, #loc112])
#loc374 = loc(fused[#loc113, #loc114])
#loc375 = loc(fused[#loc116, #loc117])
#loc376 = loc(fused[#loc115, #loc117])
#loc377 = loc(fused[#loc120, #loc121])
#loc378 = loc(fused[#loc123, #loc124, #loc125, #loc114])
#loc379 = loc(fused[#loc128, #loc129])
#loc380 = loc(fused[#loc127, #loc129])
#loc381 = loc(fused[#loc126, #loc130])
#loc382 = loc(fused[#loc131, #loc130])
#loc383 = loc(fused[#loc132, #loc133])
#loc384 = loc(fused[#loc134, #loc135])
#loc385 = loc(fused[#loc137, #loc133])
#loc386 = loc(fused[#loc149, #loc150])
#loc387 = loc(fused[#loc152, #loc151])
#loc388 = loc(fused[#loc153, #loc154])
#loc389 = loc(fused[#loc155, #loc156])
#loc390 = loc(fused[#loc158, #loc157])
#loc391 = loc(fused[#loc159, #loc160])
#loc392 = loc(fused[#loc161, #loc162])
#loc393 = loc(fused[#loc163, #loc160])
#loc394 = loc(fused[#loc167, #loc168])
#loc395 = loc(fused[#loc169, #loc170])
#loc396 = loc(fused[#loc171, #loc168])
#loc397 = loc(fused[#loc172, #loc173])
#loc398 = loc(fused[#loc174, #loc175])
#loc399 = loc(fused[#loc176, #loc177])
#loc400 = loc(fused[#loc179, #loc180])
#loc401 = loc(fused[#loc178, #loc180])
#loc402 = loc(fused[#loc183, #loc184])
#loc403 = loc(fused[#loc186, #loc187, #loc188, #loc177])
#loc404 = loc(fused[#loc191, #loc192])
#loc405 = loc(fused[#loc190, #loc192])
#loc406 = loc(fused[#loc189, #loc193])
#loc407 = loc(fused[#loc194, #loc193])
#loc408 = loc(fused[#loc195, #loc196])
#loc409 = loc(fused[#loc197, #loc198])
#loc410 = loc(fused[#loc200, #loc196])
#loc411 = loc(fused[#loc213, #loc214])
#loc412 = loc(fused[#loc215, #loc216])
#loc413 = loc(fused[#loc218, #loc217])
#loc414 = loc(fused[#loc219, #loc220])
#loc415 = loc(fused[#loc221, #loc222])
#loc416 = loc(fused[#loc223, #loc224, #loc225, #loc220])
#loc417 = loc(fused[#loc229, #loc228])
#loc418 = loc(fused[#loc230, #loc231])
#loc419 = loc(fused[#loc232, #loc233])
#loc420 = loc(fused[#loc234, #loc231])
#loc421 = loc(fused[#loc235, #loc236])
#loc422 = loc(fused[#loc237, #loc238])
#loc423 = loc(fused[#loc239, #loc240])
#loc424 = loc(fused[#loc242, #loc243])
#loc425 = loc(fused[#loc241, #loc243])
#loc426 = loc(fused[#loc245, #loc246, #loc247, #loc240])
#loc427 = loc(fused[#loc250, #loc251])
#loc428 = loc(fused[#loc249, #loc251])
#loc429 = loc(fused[#loc248, #loc252])
#loc430 = loc(fused[#loc253, #loc252])
#loc431 = loc(fused[#loc254, #loc255])
#loc432 = loc(fused[#loc256, #loc257])
#loc433 = loc(fused[#loc259, #loc255])
#loc434 = loc(fused[#loc272, #loc273])
#loc435 = loc(fused[#loc274, #loc275])
#loc436 = loc(fused[#loc277, #loc276])
#loc437 = loc(fused[#loc278, #loc279])
#loc438 = loc(fused[#loc280, #loc281])
#loc439 = loc(fused[#loc282, #loc279])
#loc440 = loc(fused[#loc284, #loc283])
#loc441 = loc(fused[#loc285, #loc286])
#loc442 = loc(fused[#loc287, #loc288])
#loc443 = loc(fused[#loc289, #loc286])
#loc444 = loc(fused[#loc290, #loc291])
#loc445 = loc(fused[#loc292, #loc293])
#loc446 = loc(fused[#loc294, #loc295])
#loc447 = loc(fused[#loc297, #loc298])
#loc448 = loc(fused[#loc296, #loc298])
#loc449 = loc(fused[#loc300, #loc301, #loc302, #loc295])
#loc450 = loc(fused[#loc305, #loc306])
#loc451 = loc(fused[#loc304, #loc306])
#loc452 = loc(fused[#loc303, #loc307])
#loc453 = loc(fused[#loc308, #loc307])
#loc454 = loc(fused[#loc309, #loc310])
#loc455 = loc(fused[#loc311, #loc312])
#loc456 = loc(fused[#loc314, #loc310])
