!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc237)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc238)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc239)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc240)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc241)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc242)
  cir.func private @close(!s32i) -> !s32i loc(#loc243)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc244)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc245)
  cir.func private @printIntLine(!s32i) loc(#loc246)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc247)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc249)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc250)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc31)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc35)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc253)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc38)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc254)
        cir.condition(%7) loc(#loc39)
      } body {
        cir.scope {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc257)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc258)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc259)
            %8 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc260)
            %9 = cir.const #cir.int<1> : !s32i loc(#loc48)
            %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc48)
            cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc259)
            cir.scope {
              cir.do {
                cir.scope {
                  %11 = cir.const #cir.int<2> : !s32i loc(#loc55)
                  %12 = cir.const #cir.int<1> : !s32i loc(#loc56)
                  %13 = cir.const #cir.int<6> : !s32i loc(#loc57)
                  %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc58)
                  cir.store %14, %7 : !s32i, !cir.ptr<!s32i> loc(#loc263)
                  cir.scope {
                    %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc63)
                    %54 = cir.const #cir.int<1> : !s32i loc(#loc64)
                    %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc64)
                    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc265)
                    cir.if %56 {
                      cir.break loc(#loc66)
                    } loc(#loc266)
                  } loc(#loc264)
                  %15 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc267)
                  %16 = cir.const #cir.int<0> : !s32i loc(#loc69)
                  %17 = cir.const #cir.int<16> : !u64i loc(#loc268)
                  cir.libc.memset %17 bytes from %15 set to %16 : !cir.ptr<!void>, !s32i, !u64i loc(#loc269)
                  %18 = cir.const #cir.int<2> : !s32i loc(#loc74)
                  %19 = cir.cast(integral, %18 : !s32i), !u16i loc(#loc74)
                  %20 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
                  cir.store %19, %20 : !u16i, !cir.ptr<!u16i> loc(#loc270)
                  %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                  %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                  %23 = cir.call @inet_addr(%22) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc77)
                  %24 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
                  %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
                  cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc271)
                  %26 = cir.const #cir.int<27015> : !s32i loc(#loc82)
                  %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc82)
                  %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc83)
                  %29 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
                  cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc272)
                  cir.scope {
                    %53 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc89)
                    %54 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc274)
                    %55 = cir.const #cir.int<16> : !u64i loc(#loc275)
                    %56 = cir.cast(integral, %55 : !u64i), !u32i loc(#loc275)
                    %57 = cir.call @connect(%53, %54, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc94)
                    %58 = cir.const #cir.int<1> : !s32i loc(#loc95)
                    %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc95)
                    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc276)
                    cir.if %60 {
                      cir.break loc(#loc97)
                    } loc(#loc277)
                  } loc(#loc273)
                  %30 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                  %31 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc99)
                  %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc99)
                  %33 = cir.const #cir.int<3> : !s32i loc(#loc100)
                  %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc100)
                  %35 = cir.const #cir.int<4> : !u64i loc(#loc100)
                  %36 = cir.binop(mul, %34, %35) : !u64i loc(#loc100)
                  %37 = cir.const #cir.int<2> : !s32i loc(#loc100)
                  %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc100)
                  %39 = cir.binop(add, %36, %38) : !u64i loc(#loc100)
                  %40 = cir.const #cir.int<1> : !s32i loc(#loc101)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc101)
                  %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc278)
                  %43 = cir.const #cir.int<0> : !s32i loc(#loc102)
                  %44 = cir.call @recv(%30, %32, %42, %43) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc103)
                  %45 = cir.cast(integral, %44 : !s64i), !s32i loc(#loc103)
                  cir.store %45, %5 : !s32i, !cir.ptr<!s32i> loc(#loc279)
                  cir.scope {
                    %53 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                    %54 = cir.const #cir.int<1> : !s32i loc(#loc109)
                    %55 = cir.unary(minus, %54) nsw : !s32i, !s32i loc(#loc109)
                    %56 = cir.cmp(eq, %53, %55) : !s32i, !cir.bool loc(#loc281)
                    %57 = cir.ternary(%56, true {
                      %58 = cir.const #true loc(#loc110)
                      cir.yield %58 : !cir.bool loc(#loc110)
                    }, false {
                      %58 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                      %59 = cir.const #cir.int<0> : !s32i loc(#loc112)
                      %60 = cir.cmp(eq, %58, %59) : !s32i, !cir.bool loc(#loc282)
                      %61 = cir.ternary(%60, true {
                        %62 = cir.const #true loc(#loc110)
                        cir.yield %62 : !cir.bool loc(#loc110)
                      }, false {
                        %62 = cir.const #false loc(#loc110)
                        cir.yield %62 : !cir.bool loc(#loc110)
                      }) : (!cir.bool) -> !cir.bool loc(#loc110)
                      cir.yield %61 : !cir.bool loc(#loc110)
                    }) : (!cir.bool) -> !cir.bool loc(#loc110)
                    cir.if %57 {
                      cir.break loc(#loc114)
                    } loc(#loc283)
                  } loc(#loc280)
                  %46 = cir.const #cir.int<0> : !s32i loc(#loc115)
                  %47 = cir.cast(integral, %46 : !s32i), !s8i loc(#loc115)
                  %48 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                  %49 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
                  %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc117)
                  cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc284)
                  %51 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
                  %52 = cir.call @atoi(%51) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc119)
                  cir.store %52, %1 : !s32i, !cir.ptr<!s32i> loc(#loc285)
                } loc(#loc262)
                cir.yield loc(#loc52)
              } while {
                %11 = cir.const #cir.int<0> : !s32i loc(#loc122)
                %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc122)
                cir.condition(%12) loc(#loc122)
              } loc(#loc261)
            } loc(#loc261)
            cir.scope {
              %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc125)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc126)
              %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc126)
              %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc287)
              cir.if %14 {
                %15 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc128)
                %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc129)
              } loc(#loc288)
            } loc(#loc286)
          } loc(#loc256)
        } loc(#loc255)
        cir.yield loc(#loc34)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc131)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc289)
        cir.yield loc(#loc252)
      } loc(#loc252)
    } loc(#loc252)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc291)
      %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc292)
      %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc138)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc139)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc139)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc293)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc294)
      %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc138)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc295)
      cir.store %12, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc296)
      cir.scope {
        %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc146)
        %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc147)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc147)
        %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s32i>, !cir.bool loc(#loc298)
        cir.if %23 {
          %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc149)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc150)
          %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc151)
          cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc149)
        } loc(#loc299)
      } loc(#loc297)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc154)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc154)
        cir.store %21, %4 : !u64i, !cir.ptr<!u64i> loc(#loc301)
        cir.for : cond {
          %22 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc156)
          %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc157)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc157)
          %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc302)
          cir.condition(%25) loc(#loc158)
        } body {
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc160)
            %23 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc161)
            %24 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc162)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc163)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc304)
          } loc(#loc303)
          cir.yield loc(#loc153)
        } step {
          %22 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc164)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc165)
          cir.store %23, %4 : !u64i, !cir.ptr<!u64i> loc(#loc305)
          cir.yield loc(#loc300)
        } loc(#loc300)
      } loc(#loc300)
      %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc166)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc167)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc168)
      %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc166)
      cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc169)
      %17 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc170)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc171)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc171)
      cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc170)
    } loc(#loc290)
    cir.return loc(#loc25)
  } loc(#loc248)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc307)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc174)
    cir.return loc(#loc173)
  } loc(#loc306)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc309)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc310)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc182)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc183)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc311)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc187)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc313)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc189)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc190)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc314)
        cir.condition(%7) loc(#loc191)
      } body {
        cir.scope {
          %5 = cir.const #cir.int<20> : !s32i loc(#loc193)
          cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc316)
        } loc(#loc315)
        cir.yield loc(#loc186)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc195)
        %6 = cir.unary(inc, %5) nsw : !s32i, !s32i loc(#loc196)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc317)
        cir.yield loc(#loc312)
      } loc(#loc312)
    } loc(#loc312)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc319)
      %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc320)
      %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc203)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc204)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc204)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc321)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc322)
      %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc203)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc323)
      cir.store %12, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc324)
      cir.scope {
        %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc211)
        %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc212)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc212)
        %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s32i>, !cir.bool loc(#loc326)
        cir.if %23 {
          %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc214)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc215)
          %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc216)
          cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc214)
        } loc(#loc327)
      } loc(#loc325)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc219)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc219)
        cir.store %21, %4 : !u64i, !cir.ptr<!u64i> loc(#loc329)
        cir.for : cond {
          %22 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc221)
          %23 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc222)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc222)
          %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc330)
          cir.condition(%25) loc(#loc223)
        } body {
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc225)
            %23 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc226)
            %24 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc227)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc228)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc332)
          } loc(#loc331)
          cir.yield loc(#loc218)
        } step {
          %22 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc229)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc230)
          cir.store %23, %4 : !u64i, !cir.ptr<!u64i> loc(#loc333)
          cir.yield loc(#loc328)
        } loc(#loc328)
      } loc(#loc328)
      %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc231)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc232)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc233)
      %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc231)
      cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc234)
      %17 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc235)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc236)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc236)
      cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc235)
    } loc(#loc318)
    cir.return loc(#loc177)
  } loc(#loc308)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":77:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/include/stdlib.h":672:1)
#loc17 = loc("/usr/include/stdlib.h":672:45)
#loc18 = loc("/usr/include/stdlib.h":756:1)
#loc19 = loc("/usr/include/stdlib.h":756:70)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc22 = loc("/usr/include/stdlib.h":687:1)
#loc23 = loc("/usr/include/stdlib.h":687:32)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":43:1)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":122:1)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":45:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":45:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":46:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":46:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":48:13)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":48:12)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":48:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":49:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":107:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":49:13)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":49:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":49:16)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":49:20)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":49:18)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":50:5)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":51:9)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":106:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":56:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":56:17)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":57:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":57:32)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":58:13)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":58:36)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":59:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":59:45)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":60:13)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":95:21)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":61:13)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":94:13)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":70:40)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":70:49)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":70:62)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":70:33)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":70:17)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":70:73)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":71:17)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":74:17)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":71:21)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":71:38)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":72:17)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":73:21)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":75:24)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":75:25)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":75:34)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":75:37)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":75:51)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":75:17)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":75:52)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":76:38)
#loc75 = loc("/usr/include/netinet/in.h":249:5)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":76:17)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":77:43)
#loc78 = loc("/usr/include/netinet/in.h":251:20)
#loc79 = loc("/usr/include/netinet/in.h":33:15)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":77:17)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":77:63)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":78:42)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":78:36)
#loc84 = loc("/usr/include/netinet/in.h":250:15)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":78:17)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":78:50)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":79:17)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":82:17)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":79:29)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":79:62)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":79:63)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":79:72)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":79:86)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":79:21)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":79:92)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":80:17)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":81:21)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":85:35)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":85:50)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":85:63)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":85:81)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":85:84)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":85:30)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":85:17)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":85:85)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":86:17)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":89:17)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":86:21)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":86:35)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":86:48)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":86:51)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":86:65)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":87:17)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":88:21)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":91:43)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":91:29)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":91:17)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":93:29)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":93:24)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":93:17)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":93:40)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":95:20)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":96:13)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":99:13)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":96:17)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":96:34)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":97:13)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":98:30)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":98:17)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":49:24)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":49:23)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":108:5)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":121:5)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":109:9)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":109:16)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":110:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":110:14)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":113:28)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":113:35)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":113:42)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":113:52)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":113:53)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":113:9)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":114:9)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":114:43)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":114:13)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":114:27)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":114:33)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":114:34)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":114:40)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":114:39)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":115:9)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":118:9)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":115:18)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":115:14)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":115:21)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":115:33)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":115:23)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":116:9)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":117:29)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":117:13)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":117:24)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":117:25)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":115:40)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":115:39)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":119:22)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":119:33)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":119:34)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":119:9)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":120:9)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":120:14)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":156:1)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":159:1)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":158:5)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":158:13)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":129:1)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":154:1)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":131:5)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":131:9)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":132:5)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":132:9)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":134:13)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":134:12)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":134:5)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":135:5)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":139:5)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":135:13)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":135:9)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":135:16)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":135:20)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":135:18)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":136:5)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":138:16)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":138:9)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":135:24)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":135:23)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":140:5)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":153:5)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":141:9)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":141:16)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":142:9)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":142:14)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":145:28)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":145:35)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":145:42)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":145:52)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":145:53)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":145:9)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":146:9)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":146:43)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":146:13)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":146:27)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":146:33)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":146:34)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":146:40)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":146:39)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":147:9)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":150:9)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":147:18)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":147:14)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":147:21)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":147:33)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":147:23)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":148:9)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":149:29)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":149:13)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":149:24)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":149:25)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":147:40)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":147:39)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":151:22)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":151:33)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":151:34)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":151:9)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":152:9)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_17.c":152:14)
#loc237 = loc(fused[#loc1, #loc2])
#loc238 = loc(fused[#loc3, #loc4])
#loc239 = loc(fused[#loc6, #loc7])
#loc240 = loc(fused[#loc8, #loc9])
#loc241 = loc(fused[#loc10, #loc11])
#loc242 = loc(fused[#loc12, #loc13])
#loc243 = loc(fused[#loc14, #loc15])
#loc244 = loc(fused[#loc16, #loc17])
#loc245 = loc(fused[#loc18, #loc19])
#loc246 = loc(fused[#loc20, #loc21])
#loc247 = loc(fused[#loc22, #loc23])
#loc248 = loc(fused[#loc24, #loc25])
#loc249 = loc(fused[#loc26, #loc27])
#loc250 = loc(fused[#loc28, #loc29])
#loc251 = loc(fused[#loc32, #loc30])
#loc252 = loc(fused[#loc33, #loc34])
#loc253 = loc(fused[#loc36, #loc35])
#loc254 = loc(fused[#loc37, #loc38])
#loc255 = loc(fused[#loc40, #loc34])
#loc256 = loc(fused[#loc41, #loc42])
#loc257 = loc(fused[#loc43, #loc44])
#loc258 = loc(fused[#loc45, #loc46])
#loc259 = loc(fused[#loc47, #loc48])
#loc260 = loc(fused[#loc49, #loc50])
#loc261 = loc(fused[#loc51, #loc52])
#loc262 = loc(fused[#loc53, #loc54])
#loc263 = loc(fused[#loc59, #loc60])
#loc264 = loc(fused[#loc61, #loc62])
#loc265 = loc(fused[#loc63, #loc64])
#loc266 = loc(fused[#loc65, #loc62])
#loc267 = loc(fused[#loc67, #loc68])
#loc268 = loc(fused[#loc70, #loc71])
#loc269 = loc(fused[#loc72, #loc73])
#loc270 = loc(fused[#loc76, #loc74])
#loc271 = loc(fused[#loc80, #loc81])
#loc272 = loc(fused[#loc85, #loc86])
#loc273 = loc(fused[#loc87, #loc88])
#loc274 = loc(fused[#loc90, #loc91])
#loc275 = loc(fused[#loc92, #loc93])
#loc276 = loc(fused[#loc94, #loc95])
#loc277 = loc(fused[#loc96, #loc88])
#loc278 = loc(fused[#loc100, #loc101])
#loc279 = loc(fused[#loc104, #loc105])
#loc280 = loc(fused[#loc106, #loc107])
#loc281 = loc(fused[#loc108, #loc109])
#loc282 = loc(fused[#loc111, #loc112])
#loc283 = loc(fused[#loc113, #loc107])
#loc284 = loc(fused[#loc117, #loc115])
#loc285 = loc(fused[#loc120, #loc121])
#loc286 = loc(fused[#loc123, #loc124])
#loc287 = loc(fused[#loc125, #loc126])
#loc288 = loc(fused[#loc127, #loc124])
#loc289 = loc(fused[#loc131, #loc130])
#loc290 = loc(fused[#loc132, #loc133])
#loc291 = loc(fused[#loc134, #loc135])
#loc292 = loc(fused[#loc136, #loc137])
#loc293 = loc(fused[#loc140, #loc141])
#loc294 = loc(fused[#loc139, #loc141])
#loc295 = loc(fused[#loc138, #loc142])
#loc296 = loc(fused[#loc143, #loc142])
#loc297 = loc(fused[#loc144, #loc145])
#loc298 = loc(fused[#loc146, #loc147])
#loc299 = loc(fused[#loc148, #loc145])
#loc300 = loc(fused[#loc152, #loc153])
#loc301 = loc(fused[#loc155, #loc154])
#loc302 = loc(fused[#loc156, #loc157])
#loc303 = loc(fused[#loc159, #loc153])
#loc304 = loc(fused[#loc161, #loc160])
#loc305 = loc(fused[#loc165, #loc164])
#loc306 = loc(fused[#loc172, #loc173])
#loc307 = loc(fused[#loc174, #loc175])
#loc308 = loc(fused[#loc176, #loc177])
#loc309 = loc(fused[#loc178, #loc179])
#loc310 = loc(fused[#loc180, #loc181])
#loc311 = loc(fused[#loc184, #loc182])
#loc312 = loc(fused[#loc185, #loc186])
#loc313 = loc(fused[#loc188, #loc187])
#loc314 = loc(fused[#loc189, #loc190])
#loc315 = loc(fused[#loc192, #loc186])
#loc316 = loc(fused[#loc194, #loc193])
#loc317 = loc(fused[#loc196, #loc195])
#loc318 = loc(fused[#loc197, #loc198])
#loc319 = loc(fused[#loc199, #loc200])
#loc320 = loc(fused[#loc201, #loc202])
#loc321 = loc(fused[#loc205, #loc206])
#loc322 = loc(fused[#loc204, #loc206])
#loc323 = loc(fused[#loc203, #loc207])
#loc324 = loc(fused[#loc208, #loc207])
#loc325 = loc(fused[#loc209, #loc210])
#loc326 = loc(fused[#loc211, #loc212])
#loc327 = loc(fused[#loc213, #loc210])
#loc328 = loc(fused[#loc217, #loc218])
#loc329 = loc(fused[#loc220, #loc219])
#loc330 = loc(fused[#loc221, #loc222])
#loc331 = loc(fused[#loc224, #loc218])
#loc332 = loc(fused[#loc226, #loc225])
#loc333 = loc(fused[#loc230, #loc229])
