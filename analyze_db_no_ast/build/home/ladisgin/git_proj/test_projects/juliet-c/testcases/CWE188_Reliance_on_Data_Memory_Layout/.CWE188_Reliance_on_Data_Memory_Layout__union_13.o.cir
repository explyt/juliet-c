!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty_anon2E1_ = !cir.struct<struct "anon.1" {!s8i, !s8i, !s8i, !s8i} #cir.record.decl.ast>
!ty_anon2E0_ = !cir.struct<union "anon.0" {!ty_anon2E1_, !s64i}>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE188_Reliance_on_Data_Memory_Layout/CWE188_Reliance_on_Data_Memory_Layout__union_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc77)
  cir.func private  @printIntLine(!s32i) loc(#loc78)
  cir.func no_proto  @CWE188_Reliance_on_Data_Memory_Layout__union_13_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc77)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc9)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc10)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !s32i loc(#loc81)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc11)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !ty_anon2E0_, !cir.ptr<!ty_anon2E0_>, ["unionStructLong"] {alignment = 8 : i64} loc(#loc84)
          %6 = cir.const #cir.int<270544960> : !s32i loc(#loc17)
          %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc17)
          %8 = cir.get_member %5[1] {name = "longNumber"} : !cir.ptr<!ty_anon2E0_> -> !cir.ptr<!s64i> loc(#loc18)
          cir.store %7, %8 : !s64i, !cir.ptr<!s64i> loc(#loc85)
          %9 = cir.const #cir.int<128> : !s32i loc(#loc20)
          %10 = cir.get_member %5[0] {name = "structChars"} : !cir.ptr<!ty_anon2E0_> -> !cir.ptr<!ty_anon2E1_> loc(#loc21)
          %11 = cir.get_member %10[3] {name = "charFourth"} : !cir.ptr<!ty_anon2E1_> -> !cir.ptr<!s8i> loc(#loc22)
          %12 = cir.load %11 : !cir.ptr<!s8i>, !s8i loc(#loc23)
          %13 = cir.cast(integral, %12 : !s8i), !s32i loc(#loc23)
          %14 = cir.binop(or, %13, %9) : !s32i loc(#loc86)
          %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc86)
          cir.store %15, %11 : !s8i, !cir.ptr<!s8i> loc(#loc86)
          %16 = cir.get_member %5[1] {name = "longNumber"} : !cir.ptr<!ty_anon2E0_> -> !cir.ptr<!s64i> loc(#loc18)
          %17 = cir.load %16 : !cir.ptr<!s64i>, !s64i loc(#loc25)
          %18 = cir.cast(integral, %17 : !s64i), !s32i loc(#loc25)
          cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc26)
        } loc(#loc83)
      } loc(#loc82)
    } loc(#loc80)
    cir.return loc(#loc6)
  } loc(#loc79)
  cir.func no_proto  @CWE188_Reliance_on_Data_Memory_Layout__union_13_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc88)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc89)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    cir.return loc(#loc28)
  } loc(#loc87)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc90)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc35)
  cir.func no_proto internal private  @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc77)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc40)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc41)
      %3 = cir.cmp(ne, %1, %2) : !s32i, !s32i loc(#loc93)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc42)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc35)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc35)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc46)
      } else {
        cir.scope {
          %5 = cir.alloca !s64i, !cir.ptr<!s64i>, ["longNumber"] {alignment = 8 : i64} loc(#loc96)
          %6 = cir.const #cir.int<270544960> : !s32i loc(#loc51)
          %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc51)
          cir.store %7, %5 : !s64i, !cir.ptr<!s64i> loc(#loc97)
          %8 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc53)
          %9 = cir.unary(minus, %8) : !s64i, !s64i loc(#loc53)
          %10 = cir.const #cir.int<1> : !s64i loc(#loc53)
          %11 = cir.binop(sub, %9, %10) nsw : !s64i loc(#loc53)
          %12 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc54)
          %13 = cir.binop(or, %12, %11) : !s64i loc(#loc98)
          cir.store %13, %5 : !s64i, !cir.ptr<!s64i> loc(#loc98)
          %14 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc56)
          %15 = cir.cast(integral, %14 : !s64i), !s32i loc(#loc56)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc57)
        } loc(#loc95)
      } loc(#loc94)
    } loc(#loc92)
    cir.return loc(#loc37)
  } loc(#loc91)
  cir.func no_proto internal private  @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc77)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc63)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !s32i loc(#loc101)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc64)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s64i, !cir.ptr<!s64i>, ["longNumber"] {alignment = 8 : i64} loc(#loc104)
          %6 = cir.const #cir.int<270544960> : !s32i loc(#loc70)
          %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc70)
          cir.store %7, %5 : !s64i, !cir.ptr<!s64i> loc(#loc105)
          %8 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc72)
          %9 = cir.unary(minus, %8) : !s64i, !s64i loc(#loc72)
          %10 = cir.const #cir.int<1> : !s64i loc(#loc72)
          %11 = cir.binop(sub, %9, %10) nsw : !s64i loc(#loc72)
          %12 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc73)
          %13 = cir.binop(or, %12, %11) : !s64i loc(#loc106)
          cir.store %13, %5 : !s64i, !cir.ptr<!s64i> loc(#loc106)
          %14 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc75)
          %15 = cir.cast(integral, %14 : !s64i), !s32i loc(#loc75)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc76)
        } loc(#loc103)
      } loc(#loc102)
    } loc(#loc100)
    cir.return loc(#loc59)
  } loc(#loc99)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE188_Reliance_on_Data_Memory_Layout/CWE188_Reliance_on_Data_Memory_Layout__union_13.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":20:1)
#loc6 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":40:1)
#loc7 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":22:5)
#loc8 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":39:5)
#loc9 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":22:8)
#loc10 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":22:27)
#loc11 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":22:25)
#loc12 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":23:5)
#loc13 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":24:9)
#loc14 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":38:9)
#loc15 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":25:13)
#loc16 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":32:15)
#loc17 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":33:42)
#loc18 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":31:22)
#loc19 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":33:13)
#loc20 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":36:55)
#loc21 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":30:19)
#loc22 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":29:60)
#loc23 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":36:52)
#loc24 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":36:13)
#loc25 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":37:42)
#loc26 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":37:13)
#loc27 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":91:1)
#loc28 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":95:1)
#loc29 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":93:5)
#loc30 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":93:11)
#loc31 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":94:5)
#loc32 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":94:11)
#loc33 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":52:19)
#loc36 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":47:1)
#loc37 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":69:1)
#loc38 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":49:5)
#loc39 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":68:5)
#loc40 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":49:8)
#loc41 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":49:27)
#loc42 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":49:25)
#loc43 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":50:5)
#loc44 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":53:5)
#loc45 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":55:5)
#loc46 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":52:9)
#loc47 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":56:9)
#loc48 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":67:9)
#loc49 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":57:13)
#loc50 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":57:18)
#loc51 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":58:26)
#loc52 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":58:13)
#loc53 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":65:27)
#loc54 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":65:24)
#loc55 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":65:13)
#loc56 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":66:26)
#loc57 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":66:13)
#loc58 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":72:1)
#loc59 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":89:1)
#loc60 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":74:5)
#loc61 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":88:5)
#loc62 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":74:8)
#loc63 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":74:27)
#loc64 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":74:25)
#loc65 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":75:5)
#loc66 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":76:9)
#loc67 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":87:9)
#loc68 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":77:13)
#loc69 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":77:18)
#loc70 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":78:26)
#loc71 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":78:13)
#loc72 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":85:27)
#loc73 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":85:24)
#loc74 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":85:13)
#loc75 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":86:26)
#loc76 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_13.c":86:13)
#loc77 = loc(fused[#loc1, #loc2])
#loc78 = loc(fused[#loc3, #loc4])
#loc79 = loc(fused[#loc5, #loc6])
#loc80 = loc(fused[#loc7, #loc8])
#loc81 = loc(fused[#loc9, #loc10])
#loc82 = loc(fused[#loc12, #loc8])
#loc83 = loc(fused[#loc13, #loc14])
#loc84 = loc(fused[#loc15, #loc16])
#loc85 = loc(fused[#loc19, #loc17])
#loc86 = loc(fused[#loc24, #loc20])
#loc87 = loc(fused[#loc27, #loc28])
#loc88 = loc(fused[#loc29, #loc30])
#loc89 = loc(fused[#loc31, #loc32])
#loc90 = loc(fused[#loc33, #loc34])
#loc91 = loc(fused[#loc36, #loc37])
#loc92 = loc(fused[#loc38, #loc39])
#loc93 = loc(fused[#loc40, #loc41])
#loc94 = loc(fused[#loc43, #loc44, #loc45, #loc39])
#loc95 = loc(fused[#loc47, #loc48])
#loc96 = loc(fused[#loc49, #loc50])
#loc97 = loc(fused[#loc52, #loc51])
#loc98 = loc(fused[#loc55, #loc53])
#loc99 = loc(fused[#loc58, #loc59])
#loc100 = loc(fused[#loc60, #loc61])
#loc101 = loc(fused[#loc62, #loc63])
#loc102 = loc(fused[#loc65, #loc61])
#loc103 = loc(fused[#loc66, #loc67])
#loc104 = loc(fused[#loc68, #loc69])
#loc105 = loc(fused[#loc71, #loc70])
#loc106 = loc(fused[#loc74, #loc72])
