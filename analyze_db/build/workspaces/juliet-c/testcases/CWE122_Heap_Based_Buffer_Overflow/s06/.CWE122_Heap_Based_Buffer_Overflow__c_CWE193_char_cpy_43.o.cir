!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":31:23)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":31:31)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":57:27)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":57:35)
#loc95 = loc(fused[#loc11, #loc12])
#loc111 = loc(fused[#loc52, #loc53])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const._ZN55CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43L7goodG2BEv.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc90)
  cir.global "private" constant cir_private @__const._ZN55CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_433badEv.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc91)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc92)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc93)
  cir.func internal private @_ZN55CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43L9badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc95)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc13)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc14)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc15)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc15)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc96)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc97)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc14)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc98)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc19)
    cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
    cir.br ^bb1 loc(#loc100)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc22)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc23)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc101)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc102)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc25)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc27)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc25)
    cir.br ^bb3 loc(#loc21)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc10)
  } loc(#loc94)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc103)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc104)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc105)
  cir.func @_ZN55CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc91)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc107)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc38)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
    cir.call @_ZN55CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43L9badSourceERPc(%1) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc40)
    cir.br ^bb1 loc(#loc109)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @__const._ZN55CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_433badEv.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc91)
    cir.copy %3 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc91)
    %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc43)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc45)
    %7 = cir.call @strcpy(%5, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc43)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc48)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc49)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc48)
    cir.br ^bb2 loc(#loc42)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc35)
  } loc(#loc106)
  cir.func internal private @_ZN55CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43L13goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc52, #loc53])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc111)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc54)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc55)
    %2 = cir.const #cir.int<10> : !s32i loc(#loc56)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %4 = cir.binop(add, %2, %3) nsw : !s32i loc(#loc56)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc56)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc112)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc113)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc55)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc114)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc62)
    cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    cir.br ^bb1 loc(#loc116)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc65)
    %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc66)
    %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc117)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc118)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc68)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc70)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc68)
    cir.br ^bb3 loc(#loc64)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc64)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc51)
  } loc(#loc110)
  cir.func internal private @_ZN55CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc90)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc120)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc75)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    cir.call @_ZN55CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43L13goodG2BSourceERPc(%1) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc77)
    cir.br ^bb1 loc(#loc122)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @__const._ZN55CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43L7goodG2BEv.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc90)
    cir.copy %3 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc90)
    %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc80)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc82)
    %7 = cir.call @strcpy(%5, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc80)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc85)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc85)
    cir.br ^bb2 loc(#loc79)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc72)
  } loc(#loc119)
  cir.func @_ZN55CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN55CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43L7goodG2BEv() : () -> () loc(#loc89)
    cir.return loc(#loc88)
  } loc(#loc123)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":70:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":70:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":44:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":44:29)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":31:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":36:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":32:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":34:20)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":34:27)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":34:30)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":34:41)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":34:42)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":34:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":35:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":35:33)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":35:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":35:17)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":35:23)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":35:24)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":35:30)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":35:29)
#loc28 = loc("/usr/include/string.h":141:1)
#loc29 = loc("/usr/include/string.h":142:14)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc31 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc32 = loc("/usr/include/stdlib.h":687:1)
#loc33 = loc("/usr/include/stdlib.h":687:32)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":38:1)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":50:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":40:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":40:12)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":41:12)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":41:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":42:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":43:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":49:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":46:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":46:16)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":46:22)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":47:19)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":47:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":48:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":48:14)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":57:1)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":62:1)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":58:1)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":60:20)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":60:28)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":60:31)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":60:34)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":60:45)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":60:27)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":60:46)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":60:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":61:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":61:33)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":61:9)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":61:17)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":61:23)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":61:24)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":61:30)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":61:29)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":64:1)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":76:1)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":66:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":66:12)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":67:12)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":67:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":68:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":69:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":75:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":72:9)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":72:16)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":72:22)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":73:19)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":73:9)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":74:9)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":74:14)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":78:1)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":81:1)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_43.cpp":80:5)
#loc90 = loc(fused[#loc1, #loc2])
#loc91 = loc(fused[#loc3, #loc4])
#loc92 = loc(fused[#loc5, #loc6])
#loc93 = loc(fused[#loc7, #loc8])
#loc94 = loc(fused[#loc9, #loc10])
#loc96 = loc(fused[#loc16, #loc17])
#loc97 = loc(fused[#loc15, #loc17])
#loc98 = loc(fused[#loc14, #loc18])
#loc99 = loc(fused[#loc19, #loc18])
#loc100 = loc(fused[#loc20, #loc21])
#loc101 = loc(fused[#loc22, #loc23])
#loc102 = loc(fused[#loc24, #loc21])
#loc103 = loc(fused[#loc28, #loc29])
#loc104 = loc(fused[#loc30, #loc31])
#loc105 = loc(fused[#loc32, #loc33])
#loc106 = loc(fused[#loc34, #loc35])
#loc107 = loc(fused[#loc36, #loc37])
#loc108 = loc(fused[#loc39, #loc38])
#loc109 = loc(fused[#loc41, #loc42])
#loc110 = loc(fused[#loc50, #loc51])
#loc112 = loc(fused[#loc58, #loc59])
#loc113 = loc(fused[#loc60, #loc59])
#loc114 = loc(fused[#loc55, #loc61])
#loc115 = loc(fused[#loc62, #loc61])
#loc116 = loc(fused[#loc63, #loc64])
#loc117 = loc(fused[#loc65, #loc66])
#loc118 = loc(fused[#loc67, #loc64])
#loc119 = loc(fused[#loc71, #loc72])
#loc120 = loc(fused[#loc73, #loc74])
#loc121 = loc(fused[#loc76, #loc75])
#loc122 = loc(fused[#loc78, #loc79])
#loc123 = loc(fused[#loc87, #loc88])
