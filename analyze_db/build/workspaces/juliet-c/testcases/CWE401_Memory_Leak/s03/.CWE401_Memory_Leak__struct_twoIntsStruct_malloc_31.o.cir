!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc121)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc122)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc123)
  cir.func no_proto @CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc125)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc126)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc13)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc127)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc128)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc13)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc129)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc130)
    cir.scope {
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
      %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc22)
      %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc22)
      %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc132)
      cir.if %25 {
        %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc24)
        %27 = cir.const #cir.int<1> : !s32i loc(#loc25)
        %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc26)
        cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc24)
      } loc(#loc133)
    } loc(#loc131)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
    cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
    cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc38)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    cir.call @printStructLine(%21) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc40)
    cir.scope {
      %22 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc137)
      %23 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc138)
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
      cir.store %24, %22 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc137)
      %25 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
      cir.store %25, %23 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc138)
    } loc(#loc136)
    cir.return loc(#loc8)
  } loc(#loc124)
  cir.func no_proto @CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc140)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc141)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    cir.return loc(#loc48)
  } loc(#loc139)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc144)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc59)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc59)
    %4 = cir.const #cir.int<8> : !u64i loc(#loc59)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc59)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc59)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc59)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc59)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc145)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
    %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
    cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc66)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
    cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
    cir.call @printStructLine(%21) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc72)
    cir.scope {
      %22 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc149)
      %23 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc150)
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
      cir.store %24, %22 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc149)
      %25 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc78)
      cir.store %25, %23 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc150)
    } loc(#loc148)
    cir.return loc(#loc54)
  } loc(#loc142)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc151)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc154)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc87)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc88)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc88)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc155)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc156)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc87)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc157)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc158)
    cir.scope {
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc95)
      %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc96)
      %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
      %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc160)
      cir.if %25 {
        %26 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc98)
        %27 = cir.const #cir.int<1> : !s32i loc(#loc99)
        %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc100)
        cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc98)
      } loc(#loc161)
    } loc(#loc159)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
    %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
    cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
    cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
    cir.call @printStructLine(%21) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc112)
    cir.scope {
      %22 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc165)
      %23 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc166)
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
      cir.store %24, %22 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc165)
      %25 = cir.load %22 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
      cir.store %25, %23 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc166)
      %26 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc119)
      %27 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
      %28 = cir.cast(bitcast, %27 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc120)
      cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc119)
    } loc(#loc164)
    cir.return loc(#loc82)
  } loc(#loc152)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":24:1)
#loc8 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":41:1)
#loc9 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":26:5)
#loc10 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":26:29)
#loc11 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":27:12)
#loc12 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":27:5)
#loc13 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":29:37)
#loc14 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":29:44)
#loc15 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":29:48)
#loc16 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":29:76)
#loc17 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":29:77)
#loc18 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":29:5)
#loc19 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":30:5)
#loc20 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":30:33)
#loc21 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":30:9)
#loc22 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":30:17)
#loc23 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":30:23)
#loc24 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":30:24)
#loc25 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":30:30)
#loc26 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":30:29)
#loc27 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":32:22)
#loc28 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":32:5)
#loc29 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":32:10)
#loc30 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":32:11)
#loc31 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc32 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":33:22)
#loc33 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":33:5)
#loc34 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":33:10)
#loc35 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":33:11)
#loc36 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc37 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":34:39)
#loc38 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":34:44)
#loc39 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":34:45)
#loc40 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":34:5)
#loc41 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":35:5)
#loc42 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":40:5)
#loc43 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":36:9)
#loc44 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":36:44)
#loc45 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":37:9)
#loc46 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":37:40)
#loc47 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":86:1)
#loc48 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":90:1)
#loc49 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":88:5)
#loc50 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":88:13)
#loc51 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":89:5)
#loc52 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":89:13)
#loc53 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":48:1)
#loc54 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":64:1)
#loc55 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":50:5)
#loc56 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":50:29)
#loc57 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":51:12)
#loc58 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":51:5)
#loc59 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":53:37)
#loc60 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":53:5)
#loc61 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":55:22)
#loc62 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":55:5)
#loc63 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":55:10)
#loc64 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":55:11)
#loc65 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":56:22)
#loc66 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":56:5)
#loc67 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":56:10)
#loc68 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":56:11)
#loc69 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":57:39)
#loc70 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":57:44)
#loc71 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":57:45)
#loc72 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":57:5)
#loc73 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":58:5)
#loc74 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":63:5)
#loc75 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":59:9)
#loc76 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":59:44)
#loc77 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":60:9)
#loc78 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":60:40)
#loc79 = loc("/usr/include/stdlib.h":687:1)
#loc80 = loc("/usr/include/stdlib.h":687:32)
#loc81 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":67:1)
#loc82 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":84:1)
#loc83 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":69:5)
#loc84 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":69:29)
#loc85 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":70:12)
#loc86 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":70:5)
#loc87 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":72:37)
#loc88 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":72:44)
#loc89 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":72:48)
#loc90 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":72:76)
#loc91 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":72:77)
#loc92 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":72:5)
#loc93 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":73:5)
#loc94 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":73:33)
#loc95 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":73:9)
#loc96 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":73:17)
#loc97 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":73:23)
#loc98 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":73:24)
#loc99 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":73:30)
#loc100 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":73:29)
#loc101 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":75:22)
#loc102 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":75:5)
#loc103 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":75:10)
#loc104 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":75:11)
#loc105 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":76:22)
#loc106 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":76:5)
#loc107 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":76:10)
#loc108 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":76:11)
#loc109 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":77:39)
#loc110 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":77:44)
#loc111 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":77:45)
#loc112 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":77:5)
#loc113 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":78:5)
#loc114 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":83:5)
#loc115 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":79:9)
#loc116 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":79:44)
#loc117 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":80:9)
#loc118 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":80:40)
#loc119 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":82:9)
#loc120 = loc("CWE401_Memory_Leak__struct_twoIntsStruct_malloc_31.c":82:14)
#loc121 = loc(fused[#loc1, #loc2])
#loc122 = loc(fused[#loc3, #loc4])
#loc123 = loc(fused[#loc5, #loc6])
#loc124 = loc(fused[#loc7, #loc8])
#loc125 = loc(fused[#loc9, #loc10])
#loc126 = loc(fused[#loc12, #loc11])
#loc127 = loc(fused[#loc15, #loc16])
#loc128 = loc(fused[#loc14, #loc16])
#loc129 = loc(fused[#loc13, #loc17])
#loc130 = loc(fused[#loc18, #loc17])
#loc131 = loc(fused[#loc19, #loc20])
#loc132 = loc(fused[#loc21, #loc22])
#loc133 = loc(fused[#loc23, #loc20])
#loc134 = loc(fused[#loc28, #loc27])
#loc135 = loc(fused[#loc33, #loc32])
#loc136 = loc(fused[#loc41, #loc42])
#loc137 = loc(fused[#loc43, #loc44])
#loc138 = loc(fused[#loc45, #loc46])
#loc139 = loc(fused[#loc47, #loc48])
#loc140 = loc(fused[#loc49, #loc50])
#loc141 = loc(fused[#loc51, #loc52])
#loc142 = loc(fused[#loc53, #loc54])
#loc143 = loc(fused[#loc55, #loc56])
#loc144 = loc(fused[#loc58, #loc57])
#loc145 = loc(fused[#loc60, #loc59])
#loc146 = loc(fused[#loc62, #loc61])
#loc147 = loc(fused[#loc66, #loc65])
#loc148 = loc(fused[#loc73, #loc74])
#loc149 = loc(fused[#loc75, #loc76])
#loc150 = loc(fused[#loc77, #loc78])
#loc151 = loc(fused[#loc79, #loc80])
#loc152 = loc(fused[#loc81, #loc82])
#loc153 = loc(fused[#loc83, #loc84])
#loc154 = loc(fused[#loc86, #loc85])
#loc155 = loc(fused[#loc89, #loc90])
#loc156 = loc(fused[#loc88, #loc90])
#loc157 = loc(fused[#loc87, #loc91])
#loc158 = loc(fused[#loc92, #loc91])
#loc159 = loc(fused[#loc93, #loc94])
#loc160 = loc(fused[#loc95, #loc96])
#loc161 = loc(fused[#loc97, #loc94])
#loc162 = loc(fused[#loc102, #loc101])
#loc163 = loc(fused[#loc106, #loc105])
#loc164 = loc(fused[#loc113, #loc114])
#loc165 = loc(fused[#loc115, #loc116])
#loc166 = loc(fused[#loc117, #loc118])
