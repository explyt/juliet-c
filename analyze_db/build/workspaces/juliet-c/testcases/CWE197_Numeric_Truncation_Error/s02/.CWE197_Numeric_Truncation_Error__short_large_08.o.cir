!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_large_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printHexCharLine(!s8i) loc(#loc86)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__short_large_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc88)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc7)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc8)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc8)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc89)
    cir.scope {
      %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc91)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc12)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc12)
      cir.if %6 {
        %7 = cir.const #cir.int<127> : !s32i loc(#loc15)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc16)
        %9 = cir.binop(add, %7, %8) nsw : !s32i loc(#loc15)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc15)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc93)
      } loc(#loc92)
    } loc(#loc90)
    cir.scope {
      %4 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc95)
      %5 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc21)
      %6 = cir.cast(integral, %5 : !s16i), !s8i loc(#loc21)
      cir.store %6, %4 : !s8i, !cir.ptr<!s8i> loc(#loc95)
      %7 = cir.load %4 : !cir.ptr<!s8i>, !s8i loc(#loc22)
      cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc23)
    } loc(#loc94)
    cir.return loc(#loc4)
  } loc(#loc87)
  cir.func no_proto @CWE197_Numeric_Truncation_Error__short_large_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc97)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc26)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc98)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    cir.return loc(#loc25)
  } loc(#loc96)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc31)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc32)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    cir.return %2 : !s32i loc(#loc100)
  } loc(#loc99)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc36)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc103)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc42)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc42)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc104)
    cir.scope {
      %4 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc106)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc46)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc46)
      cir.if %6 {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc36)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc36)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc51)
      } else {
        %7 = cir.const #cir.int<127> : !s32i loc(#loc52)
        %8 = cir.const #cir.int<5> : !s32i loc(#loc53)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc52)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc52)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc108)
      } loc(#loc107)
    } loc(#loc105)
    cir.scope {
      %4 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc110)
      %5 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc58)
      %6 = cir.cast(integral, %5 : !s16i), !s8i loc(#loc58)
      cir.store %6, %4 : !s8i, !cir.ptr<!s8i> loc(#loc110)
      %7 = cir.load %4 : !cir.ptr<!s8i>, !s8i loc(#loc59)
      cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc60)
    } loc(#loc109)
    cir.return loc(#loc38)
  } loc(#loc102)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc62)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc63)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    cir.return %2 : !s32i loc(#loc112)
  } loc(#loc111)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc114)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc70)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc70)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc115)
    cir.scope {
      %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc117)
      %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc74)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc74)
      cir.if %6 {
        %7 = cir.const #cir.int<127> : !s32i loc(#loc77)
        %8 = cir.const #cir.int<5> : !s32i loc(#loc78)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc77)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc77)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc119)
      } loc(#loc118)
    } loc(#loc116)
    cir.scope {
      %4 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charData", init] {alignment = 1 : i64} loc(#loc121)
      %5 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc83)
      %6 = cir.cast(integral, %5 : !s16i), !s8i loc(#loc83)
      cir.store %6, %4 : !s8i, !cir.ptr<!s8i> loc(#loc121)
      %7 = cir.load %4 : !cir.ptr<!s8i>, !s8i loc(#loc84)
      cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc85)
    } loc(#loc120)
    cir.return loc(#loc66)
  } loc(#loc113)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE197_Numeric_Truncation_Error/s02/CWE197_Numeric_Truncation_Error__short_large_08.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":35:1)
#loc4 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":50:1)
#loc5 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":37:5)
#loc6 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":37:11)
#loc7 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":39:13)
#loc8 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":39:12)
#loc9 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":39:5)
#loc10 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":40:5)
#loc11 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":44:5)
#loc12 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":40:8)
#loc13 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":40:26)
#loc14 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":41:5)
#loc15 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":43:16)
#loc16 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":43:27)
#loc17 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":43:9)
#loc18 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":45:5)
#loc19 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":49:5)
#loc20 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":47:9)
#loc21 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":47:31)
#loc22 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":48:26)
#loc23 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":48:9)
#loc24 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":97:1)
#loc25 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":101:1)
#loc26 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":99:5)
#loc27 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":99:14)
#loc28 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":100:5)
#loc29 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":100:14)
#loc30 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":23:1)
#loc31 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":26:1)
#loc32 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":25:12)
#loc33 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":25:5)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":65:19)
#loc37 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":57:1)
#loc38 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":77:1)
#loc39 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":59:5)
#loc40 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":59:11)
#loc41 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":61:13)
#loc42 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":61:12)
#loc43 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":61:5)
#loc44 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":62:5)
#loc45 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":71:5)
#loc46 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":62:8)
#loc47 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":62:27)
#loc48 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":63:5)
#loc49 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":66:5)
#loc50 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":68:5)
#loc51 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":65:9)
#loc52 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":70:16)
#loc53 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":70:25)
#loc54 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":70:9)
#loc55 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":72:5)
#loc56 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":76:5)
#loc57 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":74:9)
#loc58 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":74:31)
#loc59 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":75:26)
#loc60 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":75:9)
#loc61 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":28:1)
#loc62 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":31:1)
#loc63 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":30:12)
#loc64 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":30:5)
#loc65 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":80:1)
#loc66 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":95:1)
#loc67 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":82:5)
#loc68 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":82:11)
#loc69 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":84:13)
#loc70 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":84:12)
#loc71 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":84:5)
#loc72 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":85:5)
#loc73 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":89:5)
#loc74 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":85:8)
#loc75 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":85:26)
#loc76 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":86:5)
#loc77 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":88:16)
#loc78 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":88:25)
#loc79 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":88:9)
#loc80 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":90:5)
#loc81 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":94:5)
#loc82 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":92:9)
#loc83 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":92:31)
#loc84 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":93:26)
#loc85 = loc("CWE197_Numeric_Truncation_Error__short_large_08.c":93:9)
#loc86 = loc(fused[#loc1, #loc2])
#loc87 = loc(fused[#loc3, #loc4])
#loc88 = loc(fused[#loc5, #loc6])
#loc89 = loc(fused[#loc9, #loc7])
#loc90 = loc(fused[#loc10, #loc11])
#loc91 = loc(fused[#loc12, #loc13])
#loc92 = loc(fused[#loc14, #loc11])
#loc93 = loc(fused[#loc17, #loc16])
#loc94 = loc(fused[#loc18, #loc19])
#loc95 = loc(fused[#loc20, #loc21])
#loc96 = loc(fused[#loc24, #loc25])
#loc97 = loc(fused[#loc26, #loc27])
#loc98 = loc(fused[#loc28, #loc29])
#loc99 = loc(fused[#loc30, #loc31])
#loc100 = loc(fused[#loc33, #loc32])
#loc101 = loc(fused[#loc34, #loc35])
#loc102 = loc(fused[#loc37, #loc38])
#loc103 = loc(fused[#loc39, #loc40])
#loc104 = loc(fused[#loc43, #loc41])
#loc105 = loc(fused[#loc44, #loc45])
#loc106 = loc(fused[#loc46, #loc47])
#loc107 = loc(fused[#loc48, #loc49, #loc50, #loc45])
#loc108 = loc(fused[#loc54, #loc53])
#loc109 = loc(fused[#loc55, #loc56])
#loc110 = loc(fused[#loc57, #loc58])
#loc111 = loc(fused[#loc61, #loc62])
#loc112 = loc(fused[#loc64, #loc63])
#loc113 = loc(fused[#loc65, #loc66])
#loc114 = loc(fused[#loc67, #loc68])
#loc115 = loc(fused[#loc71, #loc69])
#loc116 = loc(fused[#loc72, #loc73])
#loc117 = loc(fused[#loc74, #loc75])
#loc118 = loc(fused[#loc76, #loc73])
#loc119 = loc(fused[#loc79, #loc78])
#loc120 = loc(fused[#loc80, #loc81])
#loc121 = loc(fused[#loc82, #loc83])
