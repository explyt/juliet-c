!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__hostname_based_logic_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc398)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc399)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc400)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc401)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc402)
  cir.func private @getsockname(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i extra(#fn_attr) loc(#loc403)
  cir.func private @getnameinfo(!cir.ptr<!ty_sockaddr>, !u32i, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>, !u32i, !s32i) -> !s32i loc(#loc404)
  cir.func private @strcmp(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc405)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"admin.google.com\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc17)
  cir.func private @send(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc406)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Welcome, admin!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc20)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Welcome!\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc21)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc407)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Send failed!\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc24)
  cir.func private @close(!s32i) -> !s32i loc(#loc408)
  cir.func no_proto @CWE510_Trapdoor__hostname_based_logic_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc410)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["acceptService"] {alignment = 4 : i64} loc(#loc411)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptServiceLen", init] {alignment = 4 : i64} loc(#loc412)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc413)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc414)
    %5 = cir.alloca !cir.array<!s8i x 1025>, !cir.ptr<!cir.array<!s8i x 1025>>, ["hostname"] {alignment = 16 : i64} loc(#loc415)
    %6 = cir.alloca !cir.array<!s8i x 32>, !cir.ptr<!cir.array<!s8i x 32>>, ["servInfo"] {alignment = 16 : i64} loc(#loc416)
    cir.br ^bb1 loc(#loc417)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<5> : !s32i loc(#loc44)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc45)
    %9 = cir.cmp(eq, %7, %8) : !s32i, !cir.bool loc(#loc418)
    cir.brcond %9 ^bb2, ^bb55 loc(#loc419)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc420)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<16> : !u64i loc(#loc421)
    %11 = cir.cast(integral, %10 : !u64i), !s32i loc(#loc421)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc412)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc35)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc413)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc37)
    cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc414)
    cir.br ^bb4 loc(#loc422)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc422)
  ^bb5:  // pred: ^bb43
    %16 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc52)
    cir.brcond %17 ^bb6, ^bb44 loc(#loc52)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %18 = cir.const #cir.int<2> : !s32i loc(#loc53)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %20 = cir.const #cir.int<6> : !s32i loc(#loc55)
    %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
    cir.store %21, %3 : !s32i, !cir.ptr<!s32i> loc(#loc423)
    cir.br ^bb7 loc(#loc424)
  ^bb7:  // pred: ^bb6
    %22 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc62)
    %25 = cir.cmp(eq, %22, %24) : !s32i, !cir.bool loc(#loc425)
    cir.brcond %25 ^bb8, ^bb9 loc(#loc426)
  ^bb8:  // pred: ^bb7
    cir.br ^bb44 loc(#loc64)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc60)
  ^bb10:  // pred: ^bb9
    %26 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc427)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %28 = cir.const #cir.int<16> : !u64i loc(#loc428)
    cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc429)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc72)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc72)
    %31 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
    cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc430)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc75)
    %34 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc431)
    %36 = cir.const #cir.int<20000> : !s32i loc(#loc79)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc79)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc80)
    %39 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc432)
    cir.br ^bb11 loc(#loc433)
  ^bb11:  // pred: ^bb10
    %40 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %41 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc434)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc435)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc435)
    %44 = cir.call @bind(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc91)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %46 = cir.unary(minus, %45) : !s32i, !s32i loc(#loc92)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc436)
    cir.brcond %47 ^bb12, ^bb13 loc(#loc437)
  ^bb12:  // pred: ^bb11
    cir.br ^bb44 loc(#loc94)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc85)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc438)
  ^bb15:  // pred: ^bb14
    %48 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %49 = cir.const #cir.int<5> : !s32i loc(#loc98)
    %50 = cir.call @listen(%48, %49) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc99)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc100)
    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc439)
    cir.brcond %53 ^bb16, ^bb17 loc(#loc440)
  ^bb16:  // pred: ^bb15
    cir.br ^bb44 loc(#loc102)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc96)
  ^bb18:  // pred: ^bb17
    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc104)
    %56 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc105)
    %57 = cir.call @accept(%54, %55, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc106)
    cir.store %57, %4 : !s32i, !cir.ptr<!s32i> loc(#loc441)
    cir.br ^bb19 loc(#loc442)
  ^bb19:  // pred: ^bb18
    %58 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc112)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc443)
    cir.brcond %61 ^bb20, ^bb21 loc(#loc444)
  ^bb20:  // pred: ^bb19
    cir.br ^bb44 loc(#loc114)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc110)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc445)
  ^bb23:  // pred: ^bb22
    %62 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %63 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc446)
    %64 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!u32i> loc(#loc447)
    %65 = cir.call @getsockname(%62, %63, %64) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i extra(#fn_attr) loc(#loc122)
    %66 = cir.const #cir.int<1> : !s32i loc(#loc123)
    %67 = cir.unary(minus, %66) : !s32i, !s32i loc(#loc124)
    %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc448)
    cir.brcond %68 ^bb24, ^bb25 loc(#loc449)
  ^bb24:  // pred: ^bb23
    cir.br ^bb44 loc(#loc126)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc116)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc450)
  ^bb27:  // pred: ^bb26
    %69 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc451)
    %70 = cir.const #cir.int<16> : !u64i loc(#loc452)
    %71 = cir.cast(integral, %70 : !u64i), !u32i loc(#loc452)
    %72 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 1025>>), !cir.ptr<!s8i> loc(#loc133)
    %73 = cir.const #cir.int<1025> : !s32i loc(#loc134)
    %74 = cir.cast(integral, %73 : !s32i), !u32i loc(#loc134)
    %75 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc135)
    %76 = cir.const #cir.int<32> : !s32i loc(#loc136)
    %77 = cir.cast(integral, %76 : !s32i), !u32i loc(#loc136)
    %78 = cir.const #cir.int<2> : !s32i loc(#loc137)
    %79 = cir.call @getnameinfo(%69, %71, %72, %74, %75, %77, %78) : (!cir.ptr<!ty_sockaddr>, !u32i, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>, !u32i, !s32i) -> !s32i loc(#loc138)
    %80 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %81 = cir.cmp(ne, %79, %80) : !s32i, !cir.bool loc(#loc453)
    cir.brcond %81 ^bb28, ^bb29 loc(#loc454)
  ^bb28:  // pred: ^bb27
    cir.br ^bb44 loc(#loc141)
  ^bb29:  // pred: ^bb27
    cir.br ^bb30 loc(#loc128)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc455)
  ^bb31:  // pred: ^bb30
    %82 = cir.get_global @strcmp : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc144)
    %83 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc17)
    %84 = cir.cast(array_to_ptrdecay, %83 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc17)
    %85 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 1025>>), !cir.ptr<!s8i> loc(#loc145)
    %86 = cir.call @strcmp(%84, %85) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc144)
    %87 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %88 = cir.cmp(eq, %86, %87) : !s32i, !cir.bool loc(#loc456)
    cir.brcond %88 ^bb32, ^bb37 loc(#loc457)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc458)
  ^bb33:  // pred: ^bb32
    %89 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %90 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
    %91 = cir.cast(array_to_ptrdecay, %90 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc20)
    %92 = cir.cast(bitcast, %91 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
    %93 = cir.const #cir.int<15> : !u64i loc(#loc459)
    %94 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %95 = cir.call @send(%89, %92, %93, %94) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc156)
    %96 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %97 = cir.unary(minus, %96) : !s32i, !s32i loc(#loc157)
    %98 = cir.cast(integral, %97 : !s32i), !s64i loc(#loc157)
    %99 = cir.cmp(eq, %95, %98) : !s64i, !cir.bool loc(#loc460)
    cir.brcond %99 ^bb34, ^bb35 loc(#loc461)
  ^bb34:  // pred: ^bb33
    cir.br ^bb44 loc(#loc159)
  ^bb35:  // pred: ^bb33
    cir.br ^bb36 loc(#loc151)
  ^bb36:  // pred: ^bb35
    cir.br ^bb42 loc(#loc148)
  ^bb37:  // pred: ^bb31
    cir.br ^bb38 loc(#loc462)
  ^bb38:  // pred: ^bb37
    %100 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %101 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc21)
    %102 = cir.cast(array_to_ptrdecay, %101 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc21)
    %103 = cir.cast(bitcast, %102 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc21)
    %104 = cir.const #cir.int<8> : !u64i loc(#loc463)
    %105 = cir.const #cir.int<0> : !s32i loc(#loc165)
    %106 = cir.call @send(%100, %103, %104, %105) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc166)
    %107 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %108 = cir.unary(minus, %107) : !s32i, !s32i loc(#loc167)
    %109 = cir.cast(integral, %108 : !s32i), !s64i loc(#loc167)
    %110 = cir.cmp(eq, %106, %109) : !s64i, !cir.bool loc(#loc464)
    cir.brcond %110 ^bb39, ^bb40 loc(#loc465)
  ^bb39:  // pred: ^bb38
    %111 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc24)
    %112 = cir.cast(array_to_ptrdecay, %111 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc24)
    cir.call @printLine(%112) : (!cir.ptr<!s8i>) -> () loc(#loc169)
    cir.br ^bb40 loc(#loc161)
  ^bb40:  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc161)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc143)
  ^bb42:  // 2 preds: ^bb36, ^bb41
    cir.br ^bb43 loc(#loc143)
  ^bb43:  // pred: ^bb42
    cir.br ^bb5 loc(#loc51)
  ^bb44:  // 8 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb24, ^bb28, ^bb34
    cir.br ^bb45 loc(#loc51)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc466)
  ^bb46:  // pred: ^bb45
    %113 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    %114 = cir.const #cir.int<1> : !s32i loc(#loc173)
    %115 = cir.unary(minus, %114) : !s32i, !s32i loc(#loc173)
    %116 = cir.cmp(ne, %113, %115) : !s32i, !cir.bool loc(#loc467)
    cir.brcond %116 ^bb47, ^bb48 loc(#loc468)
  ^bb47:  // pred: ^bb46
    %117 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %118 = cir.call @close(%117) : (!s32i) -> !s32i loc(#loc176)
    cir.br ^bb48 loc(#loc171)
  ^bb48:  // 2 preds: ^bb46, ^bb47
    cir.br ^bb49 loc(#loc171)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc469)
  ^bb50:  // pred: ^bb49
    %119 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    %120 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %121 = cir.unary(minus, %120) : !s32i, !s32i loc(#loc180)
    %122 = cir.cmp(ne, %119, %121) : !s32i, !cir.bool loc(#loc470)
    cir.brcond %122 ^bb51, ^bb52 loc(#loc471)
  ^bb51:  // pred: ^bb50
    %123 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc182)
    %124 = cir.call @close(%123) : (!s32i) -> !s32i loc(#loc183)
    cir.br ^bb52 loc(#loc178)
  ^bb52:  // 2 preds: ^bb50, ^bb51
    cir.br ^bb53 loc(#loc178)
  ^bb53:  // pred: ^bb52
    cir.br ^bb54 loc(#loc48)
  ^bb54:  // pred: ^bb53
    cir.br ^bb55 loc(#loc43)
  ^bb55:  // 2 preds: ^bb1, ^bb54
    cir.br ^bb56 loc(#loc43)
  ^bb56:  // pred: ^bb55
    cir.return loc(#loc28)
  } loc(#loc409)
  cir.func no_proto @CWE510_Trapdoor__hostname_based_logic_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc473)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc186)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc474)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc188)
    cir.return loc(#loc185)
  } loc(#loc472)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc190)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc476)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc477)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc478)
    cir.br ^bb1 loc(#loc479)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc201)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc202)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc480)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc481)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc190)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc190)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc206)
    cir.br ^bb39 loc(#loc204)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc482)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.int<1> : !s32i loc(#loc196)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc196)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc477)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc198)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc198)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc478)
    cir.br ^bb5 loc(#loc483)
  ^bb5:  // pred: ^bb4
    cir.br ^bb7 loc(#loc483)
  ^bb6:  // pred: ^bb27
    %12 = cir.const #cir.int<0> : !s32i loc(#loc211)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc211)
    cir.brcond %13 ^bb7, ^bb28 loc(#loc211)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    %14 = cir.const #cir.int<2> : !s32i loc(#loc212)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc213)
    %16 = cir.const #cir.int<6> : !s32i loc(#loc214)
    %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc215)
    cir.store %17, %1 : !s32i, !cir.ptr<!s32i> loc(#loc484)
    cir.br ^bb8 loc(#loc485)
  ^bb8:  // pred: ^bb7
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc220)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc221)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc221)
    %21 = cir.cmp(eq, %18, %20) : !s32i, !cir.bool loc(#loc486)
    cir.brcond %21 ^bb9, ^bb10 loc(#loc487)
  ^bb9:  // pred: ^bb8
    cir.br ^bb28 loc(#loc223)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc219)
  ^bb11:  // pred: ^bb10
    %22 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc488)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc226)
    %24 = cir.const #cir.int<16> : !u64i loc(#loc489)
    cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc490)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc231)
    %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc231)
    %27 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
    cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc491)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc233)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc233)
    %30 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc492)
    %32 = cir.const #cir.int<20000> : !s32i loc(#loc235)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc235)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc236)
    %35 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc493)
    cir.br ^bb12 loc(#loc494)
  ^bb12:  // pred: ^bb11
    %36 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    %37 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc495)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc496)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc496)
    %40 = cir.call @bind(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc246)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc247)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc247)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc497)
    cir.brcond %43 ^bb13, ^bb14 loc(#loc498)
  ^bb13:  // pred: ^bb12
    cir.br ^bb28 loc(#loc249)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc240)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc499)
  ^bb16:  // pred: ^bb15
    %44 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    %45 = cir.const #cir.int<5> : !s32i loc(#loc253)
    %46 = cir.call @listen(%44, %45) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc254)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc255)
    %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc255)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc500)
    cir.brcond %49 ^bb17, ^bb18 loc(#loc501)
  ^bb17:  // pred: ^bb16
    cir.br ^bb28 loc(#loc257)
  ^bb18:  // pred: ^bb16
    cir.br ^bb19 loc(#loc251)
  ^bb19:  // pred: ^bb18
    %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc259)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc260)
    %53 = cir.call @accept(%50, %51, %52) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc261)
    cir.store %53, %2 : !s32i, !cir.ptr<!s32i> loc(#loc502)
    cir.br ^bb20 loc(#loc503)
  ^bb20:  // pred: ^bb19
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc266)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc267)
    %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc267)
    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc504)
    cir.brcond %57 ^bb21, ^bb22 loc(#loc505)
  ^bb21:  // pred: ^bb20
    cir.br ^bb28 loc(#loc269)
  ^bb22:  // pred: ^bb20
    cir.br ^bb23 loc(#loc265)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc506)
  ^bb24:  // pred: ^bb23
    %58 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc272)
    %59 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc273)
    %60 = cir.cast(array_to_ptrdecay, %59 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc273)
    %61 = cir.cast(bitcast, %60 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc273)
    %62 = cir.const #cir.int<8> : !u64i loc(#loc507)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc276)
    %64 = cir.call @send(%58, %61, %62, %63) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc277)
    %65 = cir.const #cir.int<1> : !s32i loc(#loc278)
    %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc278)
    %67 = cir.cast(integral, %66 : !s32i), !s64i loc(#loc278)
    %68 = cir.cmp(eq, %64, %67) : !s64i, !cir.bool loc(#loc508)
    cir.brcond %68 ^bb25, ^bb26 loc(#loc509)
  ^bb25:  // pred: ^bb24
    %69 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc280)
    %70 = cir.cast(array_to_ptrdecay, %69 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc280)
    cir.call @printLine(%70) : (!cir.ptr<!s8i>) -> () loc(#loc281)
    cir.br ^bb26 loc(#loc271)
  ^bb26:  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc271)
  ^bb27:  // pred: ^bb26
    cir.br ^bb6 loc(#loc210)
  ^bb28:  // 5 preds: ^bb6, ^bb9, ^bb13, ^bb17, ^bb21
    cir.br ^bb29 loc(#loc210)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc510)
  ^bb30:  // pred: ^bb29
    %71 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc284)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc285)
    %73 = cir.unary(minus, %72) : !s32i, !s32i loc(#loc285)
    %74 = cir.cmp(ne, %71, %73) : !s32i, !cir.bool loc(#loc511)
    cir.brcond %74 ^bb31, ^bb32 loc(#loc512)
  ^bb31:  // pred: ^bb30
    %75 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc287)
    %76 = cir.call @close(%75) : (!s32i) -> !s32i loc(#loc288)
    cir.br ^bb32 loc(#loc283)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc283)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc513)
  ^bb34:  // pred: ^bb33
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc291)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc292)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc292)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc514)
    cir.brcond %80 ^bb35, ^bb36 loc(#loc515)
  ^bb35:  // pred: ^bb34
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc294)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc295)
    cir.br ^bb36 loc(#loc290)
  ^bb36:  // 2 preds: ^bb34, ^bb35
    cir.br ^bb37 loc(#loc290)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc208)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc200)
  ^bb39:  // 2 preds: ^bb2, ^bb38
    cir.br ^bb40 loc(#loc200)
  ^bb40:  // pred: ^bb39
    cir.return loc(#loc192)
  } loc(#loc475)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc517)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc518)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc519)
    cir.br ^bb1 loc(#loc520)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc306)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc307)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc521)
    cir.brcond %5 ^bb2, ^bb38 loc(#loc522)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc523)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.int<1> : !s32i loc(#loc301)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc301)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc518)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc303)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc303)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc519)
    cir.br ^bb4 loc(#loc524)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc524)
  ^bb5:  // pred: ^bb26
    %10 = cir.const #cir.int<0> : !s32i loc(#loc313)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc313)
    cir.brcond %11 ^bb6, ^bb27 loc(#loc313)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %12 = cir.const #cir.int<2> : !s32i loc(#loc314)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc315)
    %14 = cir.const #cir.int<6> : !s32i loc(#loc316)
    %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc317)
    cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc525)
    cir.br ^bb7 loc(#loc526)
  ^bb7:  // pred: ^bb6
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc322)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc323)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc323)
    %19 = cir.cmp(eq, %16, %18) : !s32i, !cir.bool loc(#loc527)
    cir.brcond %19 ^bb8, ^bb9 loc(#loc528)
  ^bb8:  // pred: ^bb7
    cir.br ^bb27 loc(#loc325)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc321)
  ^bb10:  // pred: ^bb9
    %20 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc529)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc328)
    %22 = cir.const #cir.int<16> : !u64i loc(#loc530)
    cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc531)
    %23 = cir.const #cir.int<2> : !s32i loc(#loc333)
    %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc333)
    %25 = cir.get_member %0[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
    cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc532)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc335)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc335)
    %28 = cir.get_member %0[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc533)
    %30 = cir.const #cir.int<20000> : !s32i loc(#loc337)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc337)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc338)
    %33 = cir.get_member %0[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc534)
    cir.br ^bb11 loc(#loc535)
  ^bb11:  // pred: ^bb10
    %34 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc343)
    %35 = cir.cast(bitcast, %0 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc536)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc537)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc537)
    %38 = cir.call @bind(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc348)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc349)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc349)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc538)
    cir.brcond %41 ^bb12, ^bb13 loc(#loc539)
  ^bb12:  // pred: ^bb11
    cir.br ^bb27 loc(#loc351)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc342)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc540)
  ^bb15:  // pred: ^bb14
    %42 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc354)
    %43 = cir.const #cir.int<5> : !s32i loc(#loc355)
    %44 = cir.call @listen(%42, %43) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc356)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc357)
    %46 = cir.unary(minus, %45) : !s32i, !s32i loc(#loc357)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc541)
    cir.brcond %47 ^bb16, ^bb17 loc(#loc542)
  ^bb16:  // pred: ^bb15
    cir.br ^bb27 loc(#loc359)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc353)
  ^bb18:  // pred: ^bb17
    %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc360)
    %49 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc361)
    %50 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc362)
    %51 = cir.call @accept(%48, %49, %50) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc363)
    cir.store %51, %2 : !s32i, !cir.ptr<!s32i> loc(#loc543)
    cir.br ^bb19 loc(#loc544)
  ^bb19:  // pred: ^bb18
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc368)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc369)
    %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc369)
    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc545)
    cir.brcond %55 ^bb20, ^bb21 loc(#loc546)
  ^bb20:  // pred: ^bb19
    cir.br ^bb27 loc(#loc371)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc367)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc547)
  ^bb23:  // pred: ^bb22
    %56 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc374)
    %57 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc375)
    %58 = cir.cast(array_to_ptrdecay, %57 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc375)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc375)
    %60 = cir.const #cir.int<8> : !u64i loc(#loc548)
    %61 = cir.const #cir.int<0> : !s32i loc(#loc378)
    %62 = cir.call @send(%56, %59, %60, %61) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc379)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc380)
    %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc380)
    %65 = cir.cast(integral, %64 : !s32i), !s64i loc(#loc380)
    %66 = cir.cmp(eq, %62, %65) : !s64i, !cir.bool loc(#loc549)
    cir.brcond %66 ^bb24, ^bb25 loc(#loc550)
  ^bb24:  // pred: ^bb23
    %67 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc382)
    %68 = cir.cast(array_to_ptrdecay, %67 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc382)
    cir.call @printLine(%68) : (!cir.ptr<!s8i>) -> () loc(#loc383)
    cir.br ^bb25 loc(#loc373)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc373)
  ^bb26:  // pred: ^bb25
    cir.br ^bb5 loc(#loc312)
  ^bb27:  // 5 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20
    cir.br ^bb28 loc(#loc312)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc551)
  ^bb29:  // pred: ^bb28
    %69 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc386)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc387)
    %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc387)
    %72 = cir.cmp(ne, %69, %71) : !s32i, !cir.bool loc(#loc552)
    cir.brcond %72 ^bb30, ^bb31 loc(#loc553)
  ^bb30:  // pred: ^bb29
    %73 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc389)
    %74 = cir.call @close(%73) : (!s32i) -> !s32i loc(#loc390)
    cir.br ^bb31 loc(#loc385)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc385)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc554)
  ^bb33:  // pred: ^bb32
    %75 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc393)
    %76 = cir.const #cir.int<1> : !s32i loc(#loc394)
    %77 = cir.unary(minus, %76) : !s32i, !s32i loc(#loc394)
    %78 = cir.cmp(ne, %75, %77) : !s32i, !cir.bool loc(#loc555)
    cir.brcond %78 ^bb34, ^bb35 loc(#loc556)
  ^bb34:  // pred: ^bb33
    %79 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc396)
    %80 = cir.call @close(%79) : (!s32i) -> !s32i loc(#loc397)
    cir.br ^bb35 loc(#loc392)
  ^bb35:  // 2 preds: ^bb33, ^bb34
    cir.br ^bb36 loc(#loc392)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc310)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc305)
  ^bb38:  // 2 preds: ^bb1, ^bb37
    cir.br ^bb39 loc(#loc305)
  ^bb39:  // pred: ^bb38
    cir.return loc(#loc297)
  } loc(#loc516)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE510_Trapdoor/CWE510_Trapdoor__hostname_based_logic_06.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":116:1)
#loc12 = loc("/usr/include/sys/socket.h":117:33)
#loc13 = loc("/usr/include/netdb.h":675:1)
#loc14 = loc("/usr/include/netdb.h":678:36)
#loc15 = loc("/usr/include/string.h":156:1)
#loc16 = loc("/usr/include/string.h":157:33)
#loc17 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":110:28)
#loc18 = loc("/usr/include/sys/socket.h":138:1)
#loc19 = loc("/usr/include/sys/socket.h":138:74)
#loc20 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":112:44)
#loc21 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":120:44)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc24 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":122:35)
#loc25 = loc("/usr/include/unistd.h":358:1)
#loc26 = loc("/usr/include/unistd.h":358:27)
#loc27 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":52:1)
#loc28 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":143:1)
#loc29 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":61:13)
#loc30 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":61:32)
#loc31 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":61:41)
#loc32 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":62:13)
#loc33 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":62:56)
#loc34 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":63:13)
#loc35 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":63:35)
#loc36 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":64:13)
#loc37 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":64:35)
#loc38 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":65:13)
#loc39 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":65:37)
#loc40 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":66:13)
#loc41 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":66:37)
#loc42 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":54:5)
#loc43 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":142:5)
#loc44 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":54:8)
#loc45 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":54:27)
#loc46 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":55:5)
#loc47 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":56:9)
#loc48 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":141:9)
#loc49 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":62:36)
#loc50 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":67:13)
#loc51 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":126:21)
#loc52 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":126:20)
#loc53 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":76:39)
#loc54 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":76:48)
#loc55 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":76:61)
#loc56 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":76:32)
#loc57 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":76:17)
#loc58 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":76:72)
#loc59 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":77:17)
#loc60 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":80:17)
#loc61 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":77:21)
#loc62 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":77:37)
#loc63 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":78:17)
#loc64 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":79:21)
#loc65 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":81:24)
#loc66 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":81:25)
#loc67 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":81:34)
#loc68 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":81:37)
#loc69 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":81:51)
#loc70 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":81:17)
#loc71 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":81:52)
#loc72 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":82:38)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":82:17)
#loc75 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":83:43)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":83:17)
#loc79 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":84:42)
#loc80 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":84:36)
#loc81 = loc("/usr/include/netinet/in.h":250:15)
#loc82 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":84:17)
#loc83 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":84:47)
#loc84 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":85:17)
#loc85 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":88:17)
#loc86 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":85:26)
#loc87 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":85:58)
#loc88 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":85:59)
#loc89 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":85:68)
#loc90 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":85:82)
#loc91 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":85:21)
#loc92 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":85:88)
#loc93 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":86:17)
#loc94 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":87:21)
#loc95 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":89:17)
#loc96 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":92:17)
#loc97 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":89:28)
#loc98 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":89:42)
#loc99 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":89:21)
#loc100 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":89:48)
#loc101 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":90:17)
#loc102 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":91:21)
#loc103 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":93:39)
#loc104 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":93:53)
#loc105 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":93:59)
#loc106 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":93:32)
#loc107 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":93:17)
#loc108 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":93:63)
#loc109 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":94:17)
#loc110 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":97:17)
#loc111 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":94:21)
#loc112 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":94:37)
#loc113 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":95:17)
#loc114 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":96:21)
#loc115 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":98:17)
#loc116 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":101:17)
#loc117 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":98:33)
#loc118 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":98:66)
#loc119 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":98:67)
#loc120 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":98:82)
#loc121 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":98:83)
#loc122 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":98:21)
#loc123 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":98:105)
#loc124 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":98:104)
#loc125 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":99:17)
#loc126 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":100:21)
#loc127 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":102:17)
#loc128 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":108:17)
#loc129 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":102:52)
#loc130 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":102:53)
#loc131 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":103:33)
#loc132 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":103:55)
#loc133 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":104:33)
#loc134 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":105:33)
#loc135 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":105:45)
#loc136 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":105:55)
#loc137 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":105:67)
#loc138 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":102:21)
#loc139 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":105:86)
#loc140 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":106:17)
#loc141 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":107:21)
#loc142 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":110:17)
#loc143 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":124:17)
#loc144 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":110:21)
#loc145 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":110:48)
#loc146 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":110:61)
#loc147 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":111:17)
#loc148 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":117:17)
#loc149 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":119:17)
#loc150 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":112:21)
#loc151 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":116:21)
#loc152 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":112:30)
#loc153 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":112:59)
#loc154 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":112:79)
#loc155 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":112:82)
#loc156 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":112:25)
#loc157 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":112:89)
#loc158 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":113:21)
#loc159 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":115:25)
#loc160 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":120:21)
#loc161 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":123:21)
#loc162 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":120:30)
#loc163 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":120:61)
#loc164 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":120:83)
#loc165 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":120:86)
#loc166 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":120:25)
#loc167 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":120:92)
#loc168 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":121:21)
#loc169 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":122:25)
#loc170 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":127:13)
#loc171 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":130:13)
#loc172 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":127:17)
#loc173 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":127:33)
#loc174 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":128:13)
#loc175 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":129:30)
#loc176 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":129:17)
#loc177 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":131:13)
#loc178 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":134:13)
#loc179 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":131:17)
#loc180 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":131:33)
#loc181 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":132:13)
#loc182 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":133:30)
#loc183 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":133:17)
#loc184 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":292:1)
#loc185 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":296:1)
#loc186 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":294:5)
#loc187 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":294:11)
#loc188 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":295:5)
#loc189 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":295:11)
#loc190 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":155:19)
#loc191 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":150:1)
#loc192 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":221:1)
#loc193 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":164:13)
#loc194 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":164:32)
#loc195 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":165:13)
#loc196 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":165:35)
#loc197 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":166:13)
#loc198 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":166:35)
#loc199 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":152:5)
#loc200 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":220:5)
#loc201 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":152:8)
#loc202 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":152:27)
#loc203 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":153:5)
#loc204 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":156:5)
#loc205 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":158:5)
#loc206 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":155:9)
#loc207 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":159:9)
#loc208 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":219:9)
#loc209 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":167:13)
#loc210 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":204:21)
#loc211 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":204:20)
#loc212 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":176:39)
#loc213 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":176:48)
#loc214 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":176:61)
#loc215 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":176:32)
#loc216 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":176:17)
#loc217 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":176:72)
#loc218 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":177:17)
#loc219 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":180:17)
#loc220 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":177:21)
#loc221 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":177:37)
#loc222 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":178:17)
#loc223 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":179:21)
#loc224 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":181:24)
#loc225 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":181:25)
#loc226 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":181:34)
#loc227 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":181:37)
#loc228 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":181:51)
#loc229 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":181:17)
#loc230 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":181:52)
#loc231 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":182:38)
#loc232 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":182:17)
#loc233 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":183:43)
#loc234 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":183:17)
#loc235 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":184:42)
#loc236 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":184:36)
#loc237 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":184:17)
#loc238 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":184:47)
#loc239 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":185:17)
#loc240 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":188:17)
#loc241 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":185:26)
#loc242 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":185:58)
#loc243 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":185:59)
#loc244 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":185:68)
#loc245 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":185:82)
#loc246 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":185:21)
#loc247 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":185:88)
#loc248 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":186:17)
#loc249 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":187:21)
#loc250 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":189:17)
#loc251 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":192:17)
#loc252 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":189:28)
#loc253 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":189:42)
#loc254 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":189:21)
#loc255 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":189:48)
#loc256 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":190:17)
#loc257 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":191:21)
#loc258 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":193:39)
#loc259 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":193:53)
#loc260 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":193:59)
#loc261 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":193:32)
#loc262 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":193:17)
#loc263 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":193:63)
#loc264 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":194:17)
#loc265 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":197:17)
#loc266 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":194:21)
#loc267 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":194:37)
#loc268 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":195:17)
#loc269 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":196:21)
#loc270 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":199:17)
#loc271 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":202:17)
#loc272 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":199:26)
#loc273 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":199:40)
#loc274 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":199:57)
#loc275 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":199:79)
#loc276 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":199:82)
#loc277 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":199:21)
#loc278 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":199:88)
#loc279 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":200:17)
#loc280 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":201:31)
#loc281 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":201:21)
#loc282 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":205:13)
#loc283 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":208:13)
#loc284 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":205:17)
#loc285 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":205:33)
#loc286 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":206:13)
#loc287 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":207:30)
#loc288 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":207:17)
#loc289 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":209:13)
#loc290 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":212:13)
#loc291 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":209:17)
#loc292 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":209:33)
#loc293 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":210:13)
#loc294 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":211:30)
#loc295 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":211:17)
#loc296 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":224:1)
#loc297 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":290:1)
#loc298 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":233:13)
#loc299 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":233:32)
#loc300 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":234:13)
#loc301 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":234:35)
#loc302 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":235:13)
#loc303 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":235:35)
#loc304 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":226:5)
#loc305 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":289:5)
#loc306 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":226:8)
#loc307 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":226:27)
#loc308 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":227:5)
#loc309 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":228:9)
#loc310 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":288:9)
#loc311 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":236:13)
#loc312 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":273:21)
#loc313 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":273:20)
#loc314 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":245:39)
#loc315 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":245:48)
#loc316 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":245:61)
#loc317 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":245:32)
#loc318 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":245:17)
#loc319 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":245:72)
#loc320 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":246:17)
#loc321 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":249:17)
#loc322 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":246:21)
#loc323 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":246:37)
#loc324 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":247:17)
#loc325 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":248:21)
#loc326 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":250:24)
#loc327 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":250:25)
#loc328 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":250:34)
#loc329 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":250:37)
#loc330 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":250:51)
#loc331 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":250:17)
#loc332 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":250:52)
#loc333 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":251:38)
#loc334 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":251:17)
#loc335 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":252:43)
#loc336 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":252:17)
#loc337 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":253:42)
#loc338 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":253:36)
#loc339 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":253:17)
#loc340 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":253:47)
#loc341 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":254:17)
#loc342 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":257:17)
#loc343 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":254:26)
#loc344 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":254:58)
#loc345 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":254:59)
#loc346 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":254:68)
#loc347 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":254:82)
#loc348 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":254:21)
#loc349 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":254:88)
#loc350 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":255:17)
#loc351 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":256:21)
#loc352 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":258:17)
#loc353 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":261:17)
#loc354 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":258:28)
#loc355 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":258:42)
#loc356 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":258:21)
#loc357 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":258:48)
#loc358 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":259:17)
#loc359 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":260:21)
#loc360 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":262:39)
#loc361 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":262:53)
#loc362 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":262:59)
#loc363 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":262:32)
#loc364 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":262:17)
#loc365 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":262:63)
#loc366 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":263:17)
#loc367 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":266:17)
#loc368 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":263:21)
#loc369 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":263:37)
#loc370 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":264:17)
#loc371 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":265:21)
#loc372 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":268:17)
#loc373 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":271:17)
#loc374 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":268:26)
#loc375 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":268:40)
#loc376 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":268:57)
#loc377 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":268:79)
#loc378 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":268:82)
#loc379 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":268:21)
#loc380 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":268:88)
#loc381 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":269:17)
#loc382 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":270:31)
#loc383 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":270:21)
#loc384 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":274:13)
#loc385 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":277:13)
#loc386 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":274:17)
#loc387 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":274:33)
#loc388 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":275:13)
#loc389 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":276:30)
#loc390 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":276:17)
#loc391 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":278:13)
#loc392 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":281:13)
#loc393 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":278:17)
#loc394 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":278:33)
#loc395 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":279:13)
#loc396 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":280:30)
#loc397 = loc("CWE510_Trapdoor__hostname_based_logic_06.c":280:17)
#loc398 = loc(fused[#loc1, #loc2])
#loc399 = loc(fused[#loc3, #loc4])
#loc400 = loc(fused[#loc5, #loc6])
#loc401 = loc(fused[#loc7, #loc8])
#loc402 = loc(fused[#loc9, #loc10])
#loc403 = loc(fused[#loc11, #loc12])
#loc404 = loc(fused[#loc13, #loc14])
#loc405 = loc(fused[#loc15, #loc16])
#loc406 = loc(fused[#loc18, #loc19])
#loc407 = loc(fused[#loc22, #loc23])
#loc408 = loc(fused[#loc25, #loc26])
#loc409 = loc(fused[#loc27, #loc28])
#loc410 = loc(fused[#loc29, #loc30])
#loc411 = loc(fused[#loc29, #loc31])
#loc412 = loc(fused[#loc32, #loc33])
#loc413 = loc(fused[#loc34, #loc35])
#loc414 = loc(fused[#loc36, #loc37])
#loc415 = loc(fused[#loc38, #loc39])
#loc416 = loc(fused[#loc40, #loc41])
#loc417 = loc(fused[#loc42, #loc43])
#loc418 = loc(fused[#loc44, #loc45])
#loc419 = loc(fused[#loc46, #loc43])
#loc420 = loc(fused[#loc47, #loc48])
#loc421 = loc(fused[#loc49, #loc33])
#loc422 = loc(fused[#loc50, #loc51])
#loc423 = loc(fused[#loc57, #loc58])
#loc424 = loc(fused[#loc59, #loc60])
#loc425 = loc(fused[#loc61, #loc62])
#loc426 = loc(fused[#loc63, #loc60])
#loc427 = loc(fused[#loc65, #loc66])
#loc428 = loc(fused[#loc68, #loc69])
#loc429 = loc(fused[#loc70, #loc71])
#loc430 = loc(fused[#loc74, #loc72])
#loc431 = loc(fused[#loc78, #loc75])
#loc432 = loc(fused[#loc82, #loc83])
#loc433 = loc(fused[#loc84, #loc85])
#loc434 = loc(fused[#loc87, #loc88])
#loc435 = loc(fused[#loc89, #loc90])
#loc436 = loc(fused[#loc91, #loc92])
#loc437 = loc(fused[#loc93, #loc85])
#loc438 = loc(fused[#loc95, #loc96])
#loc439 = loc(fused[#loc99, #loc100])
#loc440 = loc(fused[#loc101, #loc96])
#loc441 = loc(fused[#loc107, #loc108])
#loc442 = loc(fused[#loc109, #loc110])
#loc443 = loc(fused[#loc111, #loc112])
#loc444 = loc(fused[#loc113, #loc110])
#loc445 = loc(fused[#loc115, #loc116])
#loc446 = loc(fused[#loc118, #loc119])
#loc447 = loc(fused[#loc120, #loc121])
#loc448 = loc(fused[#loc122, #loc123])
#loc449 = loc(fused[#loc125, #loc116])
#loc450 = loc(fused[#loc127, #loc128])
#loc451 = loc(fused[#loc129, #loc130])
#loc452 = loc(fused[#loc131, #loc132])
#loc453 = loc(fused[#loc138, #loc139])
#loc454 = loc(fused[#loc140, #loc128])
#loc455 = loc(fused[#loc142, #loc143])
#loc456 = loc(fused[#loc144, #loc146])
#loc457 = loc(fused[#loc147, #loc148, #loc149, #loc143])
#loc458 = loc(fused[#loc150, #loc151])
#loc459 = loc(fused[#loc153, #loc154])
#loc460 = loc(fused[#loc156, #loc157])
#loc461 = loc(fused[#loc158, #loc151])
#loc462 = loc(fused[#loc160, #loc161])
#loc463 = loc(fused[#loc163, #loc164])
#loc464 = loc(fused[#loc166, #loc167])
#loc465 = loc(fused[#loc168, #loc161])
#loc466 = loc(fused[#loc170, #loc171])
#loc467 = loc(fused[#loc172, #loc173])
#loc468 = loc(fused[#loc174, #loc171])
#loc469 = loc(fused[#loc177, #loc178])
#loc470 = loc(fused[#loc179, #loc180])
#loc471 = loc(fused[#loc181, #loc178])
#loc472 = loc(fused[#loc184, #loc185])
#loc473 = loc(fused[#loc186, #loc187])
#loc474 = loc(fused[#loc188, #loc189])
#loc475 = loc(fused[#loc191, #loc192])
#loc476 = loc(fused[#loc193, #loc194])
#loc477 = loc(fused[#loc195, #loc196])
#loc478 = loc(fused[#loc197, #loc198])
#loc479 = loc(fused[#loc199, #loc200])
#loc480 = loc(fused[#loc201, #loc202])
#loc481 = loc(fused[#loc203, #loc204, #loc205, #loc200])
#loc482 = loc(fused[#loc207, #loc208])
#loc483 = loc(fused[#loc209, #loc210])
#loc484 = loc(fused[#loc216, #loc217])
#loc485 = loc(fused[#loc218, #loc219])
#loc486 = loc(fused[#loc220, #loc221])
#loc487 = loc(fused[#loc222, #loc219])
#loc488 = loc(fused[#loc224, #loc225])
#loc489 = loc(fused[#loc227, #loc228])
#loc490 = loc(fused[#loc229, #loc230])
#loc491 = loc(fused[#loc232, #loc231])
#loc492 = loc(fused[#loc234, #loc233])
#loc493 = loc(fused[#loc237, #loc238])
#loc494 = loc(fused[#loc239, #loc240])
#loc495 = loc(fused[#loc242, #loc243])
#loc496 = loc(fused[#loc244, #loc245])
#loc497 = loc(fused[#loc246, #loc247])
#loc498 = loc(fused[#loc248, #loc240])
#loc499 = loc(fused[#loc250, #loc251])
#loc500 = loc(fused[#loc254, #loc255])
#loc501 = loc(fused[#loc256, #loc251])
#loc502 = loc(fused[#loc262, #loc263])
#loc503 = loc(fused[#loc264, #loc265])
#loc504 = loc(fused[#loc266, #loc267])
#loc505 = loc(fused[#loc268, #loc265])
#loc506 = loc(fused[#loc270, #loc271])
#loc507 = loc(fused[#loc274, #loc275])
#loc508 = loc(fused[#loc277, #loc278])
#loc509 = loc(fused[#loc279, #loc271])
#loc510 = loc(fused[#loc282, #loc283])
#loc511 = loc(fused[#loc284, #loc285])
#loc512 = loc(fused[#loc286, #loc283])
#loc513 = loc(fused[#loc289, #loc290])
#loc514 = loc(fused[#loc291, #loc292])
#loc515 = loc(fused[#loc293, #loc290])
#loc516 = loc(fused[#loc296, #loc297])
#loc517 = loc(fused[#loc298, #loc299])
#loc518 = loc(fused[#loc300, #loc301])
#loc519 = loc(fused[#loc302, #loc303])
#loc520 = loc(fused[#loc304, #loc305])
#loc521 = loc(fused[#loc306, #loc307])
#loc522 = loc(fused[#loc308, #loc305])
#loc523 = loc(fused[#loc309, #loc310])
#loc524 = loc(fused[#loc311, #loc312])
#loc525 = loc(fused[#loc318, #loc319])
#loc526 = loc(fused[#loc320, #loc321])
#loc527 = loc(fused[#loc322, #loc323])
#loc528 = loc(fused[#loc324, #loc321])
#loc529 = loc(fused[#loc326, #loc327])
#loc530 = loc(fused[#loc329, #loc330])
#loc531 = loc(fused[#loc331, #loc332])
#loc532 = loc(fused[#loc334, #loc333])
#loc533 = loc(fused[#loc336, #loc335])
#loc534 = loc(fused[#loc339, #loc340])
#loc535 = loc(fused[#loc341, #loc342])
#loc536 = loc(fused[#loc344, #loc345])
#loc537 = loc(fused[#loc346, #loc347])
#loc538 = loc(fused[#loc348, #loc349])
#loc539 = loc(fused[#loc350, #loc342])
#loc540 = loc(fused[#loc352, #loc353])
#loc541 = loc(fused[#loc356, #loc357])
#loc542 = loc(fused[#loc358, #loc353])
#loc543 = loc(fused[#loc364, #loc365])
#loc544 = loc(fused[#loc366, #loc367])
#loc545 = loc(fused[#loc368, #loc369])
#loc546 = loc(fused[#loc370, #loc367])
#loc547 = loc(fused[#loc372, #loc373])
#loc548 = loc(fused[#loc376, #loc377])
#loc549 = loc(fused[#loc379, #loc380])
#loc550 = loc(fused[#loc381, #loc373])
#loc551 = loc(fused[#loc384, #loc385])
#loc552 = loc(fused[#loc386, #loc387])
#loc553 = loc(fused[#loc388, #loc385])
#loc554 = loc(fused[#loc391, #loc392])
#loc555 = loc(fused[#loc393, #loc394])
#loc556 = loc(fused[#loc395, #loc392])
