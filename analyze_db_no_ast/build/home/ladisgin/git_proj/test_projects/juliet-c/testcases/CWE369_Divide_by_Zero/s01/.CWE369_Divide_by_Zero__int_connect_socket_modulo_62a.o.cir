!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @_ZN51CWE369_Divide_by_Zero__int_connect_socket_modulo_629badSourceERi(!cir.ptr<!s32i>) loc(#loc57)
  cir.func private  @printIntLine(!s32i) loc(#loc58)
  cir.func  @_ZN51CWE369_Divide_by_Zero__int_connect_socket_modulo_623badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc60)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc10)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc61)
    cir.call @_ZN51CWE369_Divide_by_Zero__int_connect_socket_modulo_629badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc12)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc13)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    %5 = cir.binop(rem, %3, %4) : !s32i loc(#loc62)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc15)
    cir.return loc(#loc6)
  } loc(#loc59)
  cir.func private  @_ZN51CWE369_Divide_by_Zero__int_connect_socket_modulo_6213goodG2BSourceERi(!cir.ptr<!s32i>) loc(#loc63)
  cir.func internal private  @_ZN51CWE369_Divide_by_Zero__int_connect_socket_modulo_62L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc65)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc23)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc66)
    cir.call @_ZN51CWE369_Divide_by_Zero__int_connect_socket_modulo_6213goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc25)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    %5 = cir.binop(rem, %3, %4) : !s32i loc(#loc67)
    cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc28)
    cir.return loc(#loc19)
  } loc(#loc64)
  cir.func private  @_ZN51CWE369_Divide_by_Zero__int_connect_socket_modulo_6213goodB2GSourceERi(!cir.ptr<!s32i>) loc(#loc68)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc69)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc33)
  cir.func internal private  @_ZN51CWE369_Divide_by_Zero__int_connect_socket_modulo_62L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc71)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc39)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc72)
    cir.call @_ZN51CWE369_Divide_by_Zero__int_connect_socket_modulo_6213goodB2GSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc41)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc44)
      %4 = cir.const #cir.int<0> : !s32i loc(#loc45)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc74)
      cir.if %5 {
        %6 = cir.const #cir.int<100> : !s32i loc(#loc49)
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc50)
        %8 = cir.binop(rem, %6, %7) : !s32i loc(#loc76)
        cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc51)
      } else {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc33)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc33)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc52)
      } loc(#loc75)
    } loc(#loc73)
    cir.return loc(#loc35)
  } loc(#loc70)
  cir.func  @_ZN51CWE369_Divide_by_Zero__int_connect_socket_modulo_624goodEv() extra(#fn_attr) {
    cir.call @_ZN51CWE369_Divide_by_Zero__int_connect_socket_modulo_62L7goodG2BEv() : () -> () loc(#loc55)
    cir.call @_ZN51CWE369_Divide_by_Zero__int_connect_socket_modulo_62L7goodB2GEv() : () -> () loc(#loc56)
    cir.return loc(#loc54)
  } loc(#loc77)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":0:0)
#loc1 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":26:1)
#loc2 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":26:25)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":28:1)
#loc6 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":36:1)
#loc7 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":30:5)
#loc8 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":30:9)
#loc9 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":32:13)
#loc10 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":32:12)
#loc11 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":32:5)
#loc12 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":33:5)
#loc13 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":35:18)
#loc14 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":35:24)
#loc15 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":35:5)
#loc16 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":43:1)
#loc17 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":43:29)
#loc18 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":45:1)
#loc19 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":53:1)
#loc20 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":47:5)
#loc21 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":47:9)
#loc22 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":49:13)
#loc23 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":49:12)
#loc24 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":49:5)
#loc25 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":50:5)
#loc26 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":52:18)
#loc27 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":52:24)
#loc28 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":52:5)
#loc29 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":56:1)
#loc30 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":56:29)
#loc31 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc33 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":71:19)
#loc34 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":58:1)
#loc35 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":73:1)
#loc36 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":60:5)
#loc37 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":60:9)
#loc38 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":62:13)
#loc39 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":62:12)
#loc40 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":62:5)
#loc41 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":63:5)
#loc42 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":65:5)
#loc43 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":72:5)
#loc44 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":65:9)
#loc45 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":65:17)
#loc46 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":66:5)
#loc47 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":68:5)
#loc48 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":70:5)
#loc49 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":67:22)
#loc50 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":67:28)
#loc51 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":67:9)
#loc52 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":71:9)
#loc53 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":75:1)
#loc54 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":79:1)
#loc55 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":77:5)
#loc56 = loc("CWE369_Divide_by_Zero__int_connect_socket_modulo_62a.cpp":78:5)
#loc57 = loc(fused[#loc1, #loc2])
#loc58 = loc(fused[#loc3, #loc4])
#loc59 = loc(fused[#loc5, #loc6])
#loc60 = loc(fused[#loc7, #loc8])
#loc61 = loc(fused[#loc11, #loc9])
#loc62 = loc(fused[#loc13, #loc14])
#loc63 = loc(fused[#loc16, #loc17])
#loc64 = loc(fused[#loc18, #loc19])
#loc65 = loc(fused[#loc20, #loc21])
#loc66 = loc(fused[#loc24, #loc22])
#loc67 = loc(fused[#loc26, #loc27])
#loc68 = loc(fused[#loc29, #loc30])
#loc69 = loc(fused[#loc31, #loc32])
#loc70 = loc(fused[#loc34, #loc35])
#loc71 = loc(fused[#loc36, #loc37])
#loc72 = loc(fused[#loc40, #loc38])
#loc73 = loc(fused[#loc42, #loc43])
#loc74 = loc(fused[#loc44, #loc45])
#loc75 = loc(fused[#loc46, #loc47, #loc48, #loc43])
#loc76 = loc(fused[#loc49, #loc50])
#loc77 = loc(fused[#loc53, #loc54])
