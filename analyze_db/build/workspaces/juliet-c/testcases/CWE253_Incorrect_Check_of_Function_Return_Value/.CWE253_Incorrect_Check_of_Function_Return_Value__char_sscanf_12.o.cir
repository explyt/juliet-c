!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc93)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc6)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"sscanf failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc97)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc98)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc99)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc100)
    cir.br ^bb1 loc(#loc101)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc102)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc102)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc22)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %7 ^bb2, ^bb9 loc(#loc103)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc104)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc97)
    cir.store %8, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc97)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    cir.br ^bb4 loc(#loc105)
  ^bb4:  // pred: ^bb3
    %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc31)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc5)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc5)
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc6)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc6)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    %16 = cir.call @__isoc99_sscanf(%12, %14, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc31)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %18 = cir.cmp(eq, %16, %17) : !s32i, !cir.bool loc(#loc106)
    cir.brcond %18 ^bb5, ^bb6 loc(#loc107)
  ^bb5:  // pred: ^bb4
    %19 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    cir.br ^bb6 loc(#loc30)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc30)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc28)
  ^bb8:  // pred: ^bb7
    cir.br ^bb16 loc(#loc25)
  ^bb9:  // pred: ^bb1
    cir.br ^bb10 loc(#loc108)
  ^bb10:  // pred: ^bb9
    %21 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc99)
    cir.store %21, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc99)
    %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc19)
    cir.store %22, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc100)
    cir.br ^bb11 loc(#loc109)
  ^bb11:  // pred: ^bb10
    %23 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc40)
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc41)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc41)
    %26 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc42)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc42)
    %28 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    %29 = cir.call @__isoc99_sscanf(%25, %27, %28) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc40)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc44)
    %32 = cir.cmp(eq, %29, %31) : !s32i, !cir.bool loc(#loc110)
    cir.brcond %32 ^bb12, ^bb13 loc(#loc111)
  ^bb12:  // pred: ^bb11
    %33 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc46)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    cir.br ^bb13 loc(#loc39)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc39)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc37)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc21)
  ^bb16:  // 2 preds: ^bb8, ^bb15
    cir.br ^bb17 loc(#loc21)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc11)
  } loc(#loc96)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc113)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc50)
    cir.return loc(#loc49)
  } loc(#loc112)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc115)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc116)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc117)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc118)
    cir.br ^bb1 loc(#loc119)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc120)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc120)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc64)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc64)
    cir.brcond %7 ^bb2, ^bb9 loc(#loc121)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc122)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc115)
    cir.store %8, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc115)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    cir.br ^bb4 loc(#loc123)
  ^bb4:  // pred: ^bb3
    %10 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc73)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc74)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc74)
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc75)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc75)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    %16 = cir.call @__isoc99_sscanf(%12, %14, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc73)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc77)
    %19 = cir.cmp(eq, %16, %18) : !s32i, !cir.bool loc(#loc124)
    cir.brcond %19 ^bb5, ^bb6 loc(#loc125)
  ^bb5:  // pred: ^bb4
    %20 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc79)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    cir.br ^bb6 loc(#loc72)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc72)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc70)
  ^bb8:  // pred: ^bb7
    cir.br ^bb16 loc(#loc67)
  ^bb9:  // pred: ^bb1
    cir.br ^bb10 loc(#loc126)
  ^bb10:  // pred: ^bb9
    %22 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc117)
    cir.store %22, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc117)
    %23 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
    cir.store %23, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    cir.br ^bb11 loc(#loc127)
  ^bb11:  // pred: ^bb10
    %24 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc85)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc86)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc86)
    %27 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc87)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc87)
    %29 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %30 = cir.call @__isoc99_sscanf(%26, %28, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc85)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc89)
    %33 = cir.cmp(eq, %30, %32) : !s32i, !cir.bool loc(#loc128)
    cir.brcond %33 ^bb12, ^bb13 loc(#loc129)
  ^bb12:  // pred: ^bb11
    %34 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc91)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    cir.br ^bb13 loc(#loc84)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc84)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc82)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc63)
  ^bb16:  // 2 preds: ^bb8, ^bb15
    cir.br ^bb17 loc(#loc63)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc53)
  } loc(#loc114)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":468:1)
#loc4 = loc("/usr/include/stdio.h":468:12)
#loc5 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":37:24)
#loc6 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":37:36)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":39:27)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":26:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":57:1)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":33:13)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":33:36)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":34:13)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":34:27)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":48:13)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":48:36)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":49:13)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":49:27)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":28:5)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":56:5)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":28:8)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":28:33)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":29:5)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":42:5)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":44:5)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":30:9)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":41:9)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":37:13)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":40:13)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":37:17)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":37:46)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":37:55)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":38:13)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":39:17)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":45:9)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":55:9)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":51:13)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":54:13)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":51:17)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":51:24)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":51:36)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":51:46)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":51:55)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":52:13)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":53:27)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":53:17)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":96:1)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":99:1)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":98:5)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":98:11)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":64:1)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":94:1)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":71:13)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":71:36)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":72:13)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":72:27)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":85:13)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":85:36)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":86:13)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":86:27)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":66:5)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":93:5)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":66:8)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":66:33)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":67:5)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":79:5)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":81:5)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":68:9)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":78:9)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":74:13)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":77:13)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":74:17)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":74:24)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":74:36)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":74:46)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":74:55)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":75:13)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":76:27)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":76:17)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":82:9)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":92:9)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":88:13)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":91:13)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":88:17)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":88:24)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":88:36)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":88:46)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":88:55)
#loc90 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":89:13)
#loc91 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":90:27)
#loc92 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_sscanf_12.c":90:17)
#loc93 = loc(fused[#loc1, #loc2])
#loc94 = loc(fused[#loc3, #loc4])
#loc95 = loc(fused[#loc7, #loc8])
#loc96 = loc(fused[#loc10, #loc11])
#loc97 = loc(fused[#loc12, #loc13])
#loc98 = loc(fused[#loc14, #loc15])
#loc99 = loc(fused[#loc16, #loc17])
#loc100 = loc(fused[#loc18, #loc19])
#loc101 = loc(fused[#loc20, #loc21])
#loc102 = loc(fused[#loc22, #loc23])
#loc103 = loc(fused[#loc24, #loc25, #loc26, #loc21])
#loc104 = loc(fused[#loc27, #loc28])
#loc105 = loc(fused[#loc29, #loc30])
#loc106 = loc(fused[#loc31, #loc33])
#loc107 = loc(fused[#loc34, #loc30])
#loc108 = loc(fused[#loc36, #loc37])
#loc109 = loc(fused[#loc38, #loc39])
#loc110 = loc(fused[#loc40, #loc44])
#loc111 = loc(fused[#loc45, #loc39])
#loc112 = loc(fused[#loc48, #loc49])
#loc113 = loc(fused[#loc50, #loc51])
#loc114 = loc(fused[#loc52, #loc53])
#loc115 = loc(fused[#loc54, #loc55])
#loc116 = loc(fused[#loc56, #loc57])
#loc117 = loc(fused[#loc58, #loc59])
#loc118 = loc(fused[#loc60, #loc61])
#loc119 = loc(fused[#loc62, #loc63])
#loc120 = loc(fused[#loc64, #loc65])
#loc121 = loc(fused[#loc66, #loc67, #loc68, #loc63])
#loc122 = loc(fused[#loc69, #loc70])
#loc123 = loc(fused[#loc71, #loc72])
#loc124 = loc(fused[#loc73, #loc77])
#loc125 = loc(fused[#loc78, #loc72])
#loc126 = loc(fused[#loc81, #loc82])
#loc127 = loc(fused[#loc83, #loc84])
#loc128 = loc(fused[#loc85, #loc89])
#loc129 = loc(fused[#loc90, #loc84])
