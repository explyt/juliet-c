!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc139)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc140)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc141)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc13)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc145)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc146)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc13)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc147)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    cir.scope {
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
      %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc22)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc22)
      %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc150)
      cir.if %20 {
        %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc24)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc25)
        %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc26)
        cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc24)
      } loc(#loc151)
    } loc(#loc149)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc27)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc30)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc152)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %15 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    %16 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc154)
    cir.call %16() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc33)
    cir.return loc(#loc8)
  } loc(#loc142)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc156)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    cir.return loc(#loc36)
  } loc(#loc155)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc157)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc158)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc159)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc163)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc54)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc55)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc56)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc55)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc55)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc164)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc59)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc59)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc60)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc61)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc60)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc62)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc165)
      %18 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc63)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc66)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc67)
      %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc66)
      %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc66)
      %25 = cir.call @strncpy(%19, %20, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc63)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc68)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc68)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
      %29 = cir.const #cir.int<100> : !s32i loc(#loc70)
      %30 = cir.const #cir.int<1> : !s32i loc(#loc71)
      %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc70)
      %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc72)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc166)
      %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc74)
      %34 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc75)
      %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
      %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc76)
      cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc75)
    } loc(#loc162)
    cir.return loc(#loc46)
  } loc(#loc160)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc167)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc83)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc85)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc86)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc86)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc171)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc172)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc85)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc173)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
    cir.scope {
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
      %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc94)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc94)
      %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc176)
      cir.if %20 {
        %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc96)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc97)
        %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc98)
        cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc96)
      } loc(#loc177)
    } loc(#loc175)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc99)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc101)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc102)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc178)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %15 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    %16 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc180)
    cir.call %16() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc105)
    cir.return loc(#loc80)
  } loc(#loc168)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc182)
    %1 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc184)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc115)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc116)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc117)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc118)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc117)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc117)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc185)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc121)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc121)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc122)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc123)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc122)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc124)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc186)
      %18 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc125)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc127)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc128)
      %22 = cir.const #cir.int<1> : !s32i loc(#loc129)
      %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc128)
      %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc128)
      %25 = cir.call @strncpy(%19, %20, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc125)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc130)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc130)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
      %29 = cir.const #cir.int<100> : !s32i loc(#loc132)
      %30 = cir.const #cir.int<1> : !s32i loc(#loc133)
      %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc132)
      %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc134)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc187)
      %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc136)
      %34 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc137)
      %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
      %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc138)
      cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc137)
    } loc(#loc183)
    cir.return loc(#loc108)
  } loc(#loc181)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":21:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":21:15)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":41:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":51:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":43:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":43:12)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":44:12)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":44:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":46:20)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":46:27)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":46:30)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":46:41)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":46:42)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":46:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":47:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":47:33)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":47:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":47:17)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":47:23)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":47:24)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":47:30)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":47:29)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":48:15)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":48:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":48:10)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":48:11)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":49:72)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":49:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":50:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":50:13)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":85:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":88:1)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":87:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":87:13)
#loc39 = loc("/usr/include/string.h":144:1)
#loc40 = loc("/usr/include/string.h":146:14)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc42 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc43 = loc("/usr/include/stdlib.h":687:1)
#loc44 = loc("/usr/include/stdlib.h":687:32)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":26:1)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":39:1)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":28:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":28:19)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":29:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":38:5)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":30:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":30:24)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":31:16)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":31:24)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":31:29)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":31:33)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":31:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":31:34)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":32:25)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":32:16)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":32:20)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":32:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":34:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":34:17)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":34:23)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":34:31)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":34:35)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":35:23)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":35:9)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":35:14)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":35:18)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":35:19)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":36:19)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":36:9)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":37:9)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":37:14)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":22:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":22:15)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":73:1)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":83:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":75:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":75:12)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":76:12)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":76:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":78:20)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":78:27)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":78:31)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":78:42)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":78:43)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":78:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":79:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":79:33)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":79:9)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":79:17)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":79:23)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":79:24)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":79:30)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":79:29)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":80:15)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":80:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":80:10)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":80:11)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":81:76)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":81:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":82:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":82:17)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":58:1)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":71:1)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":60:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":60:19)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":61:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":70:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":62:9)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":62:24)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":63:16)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":63:24)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":63:29)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":63:33)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":63:9)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":63:34)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":64:25)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":64:16)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":64:20)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":64:9)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":66:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":66:17)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":66:23)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":66:31)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":66:35)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":67:23)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":67:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":67:14)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":67:18)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":67:19)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":68:19)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":68:9)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":69:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_45.c":69:14)
#loc139 = loc(fused[#loc1, #loc2])
#loc140 = loc(fused[#loc3, #loc4])
#loc141 = loc(fused[#loc5, #loc6])
#loc142 = loc(fused[#loc7, #loc8])
#loc143 = loc(fused[#loc9, #loc10])
#loc144 = loc(fused[#loc12, #loc11])
#loc145 = loc(fused[#loc15, #loc16])
#loc146 = loc(fused[#loc14, #loc16])
#loc147 = loc(fused[#loc13, #loc17])
#loc148 = loc(fused[#loc18, #loc17])
#loc149 = loc(fused[#loc19, #loc20])
#loc150 = loc(fused[#loc21, #loc22])
#loc151 = loc(fused[#loc23, #loc20])
#loc152 = loc(fused[#loc28, #loc27])
#loc153 = loc(fused[#loc32, #loc31])
#loc154 = loc(fused[#loc33, #loc34])
#loc155 = loc(fused[#loc35, #loc36])
#loc156 = loc(fused[#loc37, #loc38])
#loc157 = loc(fused[#loc39, #loc40])
#loc158 = loc(fused[#loc41, #loc42])
#loc159 = loc(fused[#loc43, #loc44])
#loc160 = loc(fused[#loc45, #loc46])
#loc161 = loc(fused[#loc47, #loc48])
#loc162 = loc(fused[#loc49, #loc50])
#loc163 = loc(fused[#loc51, #loc52])
#loc164 = loc(fused[#loc57, #loc58])
#loc165 = loc(fused[#loc62, #loc59])
#loc166 = loc(fused[#loc69, #loc68])
#loc167 = loc(fused[#loc77, #loc78])
#loc168 = loc(fused[#loc79, #loc80])
#loc169 = loc(fused[#loc81, #loc82])
#loc170 = loc(fused[#loc84, #loc83])
#loc171 = loc(fused[#loc87, #loc88])
#loc172 = loc(fused[#loc86, #loc88])
#loc173 = loc(fused[#loc85, #loc89])
#loc174 = loc(fused[#loc90, #loc89])
#loc175 = loc(fused[#loc91, #loc92])
#loc176 = loc(fused[#loc93, #loc94])
#loc177 = loc(fused[#loc95, #loc92])
#loc178 = loc(fused[#loc100, #loc99])
#loc179 = loc(fused[#loc104, #loc103])
#loc180 = loc(fused[#loc105, #loc106])
#loc181 = loc(fused[#loc107, #loc108])
#loc182 = loc(fused[#loc109, #loc110])
#loc183 = loc(fused[#loc111, #loc112])
#loc184 = loc(fused[#loc113, #loc114])
#loc185 = loc(fused[#loc119, #loc120])
#loc186 = loc(fused[#loc124, #loc121])
#loc187 = loc(fused[#loc131, #loc130])
